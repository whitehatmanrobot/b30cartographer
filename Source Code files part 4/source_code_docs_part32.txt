ct file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\marioh\08192002attributes.txt ===
Fix for inheritance and events problem. Parent event in Asm A, derived event in Asm B yields exception when firing.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\pathtest\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PathTest Project Overview
========================================================================

AppWizard has created this PathTest console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PathTest application.


PathTest.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\propertycopyto\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PropertyCopyTo Project Overview
========================================================================

AppWizard has created this PropertyCopyTo console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PropertyCopyTo application.


PropertyCopyTo.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\propertyqualifiersets\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : PropQualSets Project Overview
========================================================================

AppWizard has created this PropQualSets console application for you.  

This file contains a summary of what you will find in each of the files that
make up your PropQualSets application.


PropQualSets.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\queryinstances\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : QueryInstances Project Overview
========================================================================

AppWizard has created this QueryInstances console application for you.  

This file contains a summary of what you will find in each of the files that
make up your QueryInstances application.


QueryInstances.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\scopechange\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : ScopeChange Project Overview
========================================================================

AppWizard has created this ScopeChange console application for you.  

This file contains a summary of what you will find in each of the files that
make up your ScopeChange application.


ScopeChange.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\test1\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : Test1 Project Overview
========================================================================

AppWizard has created this Test1 console application for you.  

This file contains a summary of what you will find in each of the files that
make up your Test1 application.


Test1.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\commonui\framework.txt ===
deleted
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\traverserelations\readme.txt ===
========================================================================
    C# CONSOLE APPLICATION : TraverseRelations Project Overview
========================================================================

AppWizard has created this TraverseRelations console application for you.  

This file contains a summary of what you will find in each of the files that
make up your TraverseRelations application.


TraverseRelations.csproj
    This is the main project file for C# projects generated using an Application Wizard. 
    It contains information about the version of Visual Studio that generated the file, and 
    information about the platforms, configurations, and project features selected with the
    Application Wizard.

File1.cs
    This is the main application source file.

/////////////////////////////////////////////////////////////////////////////
Other notes:

AppWizard uses "TODO:" comments to indicate parts of the source code you
should add to or customize.

/////////////////////////////////////////////////////////////////////////////
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\config\wmi\wmiclient\test\useridnullref\provider\readme.txt ===
TO install the provider:

1. Got to the (WINDOWS)\system32\wbem directory
2. Copy the userid.mof and userid.dll from here to that directory
3. run "mofcomp userid.mof"
4. run "regsvr32 userid.mof"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\commonui\system.drawing.res.txt ===
CantTellPrinterName=(printer name protected due to security restrictions)
CantChangeImmutableObjects=You may not change this {0} because it does not belong to you.
CantMakeIconTransparent=Bitmaps that are Icons can not be made transparent. Icons natively support transparency. Use the Icon constructor to create an Icon.
ColorNotSystemColor=The color {0} is not a system color.
GdiplusAborted=Function aborted.
GdiplusAccessDenied=File access denied.
GdiplusCannotCreateGraphicsFromIndexedPixelFormat=A Graphics object cannot be created from an image that has an indexed pixel format.
GdiplusCannotSetPixelFromIndexedPixelFormat=SetPixel is not supported for images with indexed pixel formats.
GdiplusDestPointsInvalidParallelogram=The destination points define a parallelogram which must be of length 3.  These points, defined in the following order, will represent the top-left, top-right, and bottom-left coordinates.
GdiplusDestPointsInvalidLength=The destination points must be an array of length 3 or 4.  If of length 3, then this will define a parallelogram with the top-left, top-right, and bottom-left corners.  If of length 4, then this will define a quad with the 4th element of the array specifying the bottom-right coordinate.
GdiplusFileNotFound=File not found.
GdiplusFontFamilyNotFound=Cannot find font '{0}'.
GdiplusFontStyleNotFound=Font '{0}' doesn't support style '{1}'.
GdiplusGenericError=A generic error occurred in GDI+.
GdiplusInsufficientBuffer=Internal GDI+ error: Buffer is too small.
GdiplusInvalidParameter=Invalid parameter used.
GdiplusInvalidRectangle=Rectangle '{0}' cannot have a width or height equal to zero.
GdiplusOutOfMemory=Out of memory.
GdiplusNotImplemented=Not implemented.
GdiplusNotInitialized=Internal error: GDI+ is not properly initialized.
GdiplusNotTrueTypeFont=Only TrueType fonts are supported, and '{0}' is not a TrueType font.
GdiplusNotTrueTypeFont_NoName=Only TrueType fonts are supported, and this is not a TrueType font.
GdiplusObjectBusy=The object is currently in use elsewhere.
GdiplusOverflow=Overflow error.
GdiplusPropertyNotFoundError=Property not found.
GdiplusPropertyNotSupportedError=Property not supported.
GdiplusUnknown=Unknown GDI+ error.
GdiplusUnknownImageFormat=Unknown image format.
GdiplusUnsupportedGdiplusVersion=The current version of GDI+ does not support this feature.
GdiplusWrongState=Bitmap region is already locked.
ToolboxItemLocked=The toolbox item cannot be modified.
IllegalState=The internal state of the {1} class is invalid.
InterpolationColorsColorBlendNotSet=To use interpolation colors, the property must be set to a valid ColorBlend object.
InterpolationColorsCommon={0}{1}The ColorBlend object must be constructed with the same number of positions and color values.  With a position starting at 0.0 and ranging to 1.0.  1.0 being the last element in the array.
InterpolationColorsInvalidColorBlendObject=An invalid ColorBlend object was set.
InterpolationColorsInvalidStartPosition=The position's first element must be equal to 0.
InterpolationColorsInvalidEndPosition=The position's last element must be equal to 1.0.
InterpolationColorsLength=There must be at least 2 elements in the colors and positions array.
InterpolationColorsLengthsDiffer=The colors and positions do not have the same number of elements.
InvalidArgument='{1}' is not a valid value for '{0}'.
InvalidBoundArgument='{1}' is not a valid value for '{0}'. '{0}' should be greater than {2} and less than or equal to {3}.
InvalidClassName=Invalid class name
InvalidColor='{0}' is not a valid color.
InvalidDashPattern=The DashPattern value is invalid.
InvalidEx2BoundArgument='{1}' is not a valid value for '{0}'. '{0}' should be greater than or equal to {2} and less than or equal to {3}.
InvalidFrame=Invalid Frame. Frame must be between 0 and FrameCount.
InvalidGDIHandle=The Win32 handle you passed to {0} is invalid or of the wrong type.
InvalidImage=Unknown image type.
InvalidLowBoundArgumentEx='{1}' is not a valid value for '{0}'.  '{0}' must be greater than or equal to {2}.
InvalidPermissionLevel=Invalid permission level
InvalidPermissionState=Invalid permission state
InvalidPictureType=The argument '{0}' must be a picture that can be used as a {1}.
InvalidPrinterException_InvalidPrinter=Tried to access printer '{0}' with invalid settings.
InvalidPrinterException_NoDefaultPrinter=No printers installed.
InvalidPrinterHandle={0} is not a valid handle.
InvalidSecurityElementTag=Invalid security element tag
NativeHandle0=Native handle is 0
NoDefaultPrinter=<no default printer>
ObjectDisposed='{0}' has been disposed and can no longer be used.
PDOCbeginPrintDescr=Occurs when the document is about to be printed.
PDOCdocumentNameDescr=The name of the document shown to the user.
PDOCdocumentPageSettingsDescr=The page settings of the page currently being printed.
PDOCendPrintDescr=Occurs after the document has been printed.
PDOCoriginAtMarginsDescr=Indicates that the graphics origin is located at the user-specified page margins.
PDOCprintControllerDescr=Retrieves the print controller for this document.
PDOCprintPageDescr=Occurs once for each page to be printed.
PDOCprinterSettingsDescr=Retrieves the settings for the printer the document is currently being printed to.
PDOCqueryPageSettingsDescr=Occurs before each page is printed.  Useful for changing PageSettings for a particular page.
PSizeNotCustom=Cannot change a PaperSize unless its Kind is Custom.
ResourceNotFound=Resource '{1}' could not be found in class '{0}'.
TargetNotPrintingPermission=Target not printing permission
TextParseFailedFormat=Failed to parse Text("{0}") expected text in the format "{1}".
TriStateCompareError=Cannot convert TriState.Default into a bool.
toStringIcon=(Icon)
toStringNone=(none)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\resources\system\data\sqlclient\_dataperfcounters.ini ===
;   / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 
 ;   / /   < c o p y r i g h t   f i l e = " _ d a t a p e r f c o u n t e r s . i n i "   c o m p a n y = " M i c r o s o f t " > 
 
 ;   / /           C o p y r i g h t   ( c )   M i c r o s o f t   C o r p o r a t i o n .     A l l   r i g h t s   r e s e r v e d . 
 
 ;   / /   < / c o p y r i g h t > 
 
 ;   / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 
 
 
 
 
 ;   / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \ 
 
 ;   * 
 
 ;   *   C o p y r i g h t   ( c )   1 9 9 8 - 2 0 0 2 ,   M i c r o s o f t   C o r p .     A l l   R i g h t s   R e s e r v e d . 
 
 ;   * 
 
 ;   *   M o d u l e   N a m e : 
 
 ;   * 
 
 ;   *       _ d a t a p e r f c o u n t e r s . i n i 
 
 ;   * 
 
 ;   *   A b s t r a c t : 
 
 ;   * 
 
 ;   *   R e v i s i o n   H i s t o r y : 
 
 ;   * 
 
 ;   \ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 
 
 
 [ i n f o ] 
 
 d r i v e r n a m e = . N E T   C L R   D a t a 
 
 s y m b o l f i l e = _ D a t a P e r f C o u n t e r s . h 
 
 
 
 [ l a n g u a g e s ] 
 
 0 0 9 = l a n g u a g e 0 0 9 
 
 
 
 [ o b j e c t s ] 
 
 O B J E C T _ 1 _ 0 0 9 _ N A M E = . N E T   C L R   D a t a 
 
 
 
 [ t e x t ] 
 
 O B J E C T _ 1 _ 0 0 9 _ N A M E = . N E T   C L R   D a t a 
 
 O B J E C T _ 1 _ 0 0 9 _ H E L P = . N e t   C L R   D a t a 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 9 _ N A M E = S q l C l i e n t :   C u r r e n t   #   p o o l e d   a n d   n o n p o o l e d   c o n n e c t i o n s 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 9 _ H E L P = C u r r e n t   n u m b e r   o f   c o n n e c t i o n s ,   p o o l e d   o r   n o t . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 9 _ N A M E = S q l C l i e n t :   C u r r e n t   #   p o o l e d   c o n n e c t i o n s 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 9 _ H E L P = C u r r e n t   n u m b e r   o f   c o n n e c t i o n s   i n   a l l   p o o l s   a s s o c i a t e d   w i t h   t h e   p r o c e s s . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 9 _ N A M E = S q l C l i e n t :   C u r r e n t   #   c o n n e c t i o n   p o o l s 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 9 _ H E L P = C u r r e n t   n u m b e r   o f   p o o l s   a s s o c i a t e d   w i t h   t h e   p r o c e s s . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 9 _ N A M E = S q l C l i e n t :   P e a k   #   p o o l e d   c o n n e c t i o n s 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 9 _ H E L P = T h e   h i g h e s t   n u m b e r   o f   c o n n e c t i o n s   i n   a l l   p o o l s   s i n c e   t h e   p r o c e s s   s t a r t e d . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 9 _ N A M E = S q l C l i e n t :   T o t a l   #   f a i l e d   c o n n e c t s 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   c o n n e c t i o n   o p e n   a t t e m p t s   t h a t   h a v e   f a i l e d   f o r   a n y   r e a s o n . 
 
 
 
 D E V I C E _ C O U N T E R _ 6 _ 0 0 9 _ N A M E = S q l C l i e n t :   T o t a l   #   f a i l e d   c o m m a n d s 
 
 D E V I C E _ C O U N T E R _ 6 _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   c o m m a n d   e x e c u t e s   t h a t   h a v e   f a i l e d   f o r   a n y   r e a s o n . 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\system.data.txt ===
[strings]

; NOTE: see AS/URT bug 15116
; NOTE: don't use \", use ' instead
; NOTE: don't use #, use ; instead for comments
; NOTE: leave the [strings] alone

; These are the managed resources for System.Data.dll.  See
; ResourceManager documentation and the ResGen tool, which is
; a managed app built from \com99\src\toolbox\resgen.

DataCategory_Action=Action
DataCategory_Behavior=Behavior
DataCategory_Data=Data
DataCategory_Fill=Fill
DataCategory_InfoMessage=InfoMessage
DataCategory_Mapping=Mapping
DataCategory_StateChange=StateChange
DataCategory_Update=Update

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; System.Data.Common

;;; collections
ExtendedPropertiesDescr=The collection that holds custom user information.

;;; DataSet property descriptions
DataSetCaseSensitiveDescr=Indicates whether comparing strings within the DataSet is case sensitive.
DataSetDataSetNameDescr=The name of this DataSet.
DataSetDefaultViewDescr=Indicates a custom "view" of the data contained by the DataSet. This view allows filtering, searching, and navigating through the custom data view.
DataSetEnforceConstraintsDescr=Indicates whether constraint rules are to be followed.
DataSetHasErrorsDescr=Indicates that the DataSet has errors.
DataSetLocaleDescr=Indicates a locale under which to compare strings within the DataSet.
DataSetNamespaceDescr=Indicates the XML uri namespace for the root element pointed at by this DataSet.
DataSetPrefixDescr=Indicates the prefix of the namespace used for this DataSet.
DataSetRelationsDescr=The collection that holds the relations for this DatSet.
DataSetTablesDescr=The collection that holds the tables for this DataSet.
DataSetMergeFailedDescr=Occurs when it is not possible to merge schemas for two tables with the same name.

;;; DataTable property descriptions
DataTableCaseSensitiveDescr=Indicates whether comparing strings within the table is case sensitive.
DataTableChildRelationsDescr=Returns the child relations for this table.
DataTableColumnsDescr=The collection that holds the columns for this table.
DataTableConstraintsDescr=The collection that holds the constraints for this table.
DataTableDataSetDescr=Indicates the DataSet to which this table belongs.
DataTableDefaultViewDescr=This is the default DataView for the table.
DataTableDisplayExpressionDescr=The expression used to compute the data-bound value of this row.
DataTableHasErrorsDescr=Returns whether the table has errors.
DataTableLocaleDescr=Indicates a locale under which to compare strings within the table.
DataTableMinimumCapacityDescr=Indicates an initial starting size for this table.
DataTableNamespaceDescr=Indicates the XML uri namespace for the elements contained in this table.
DataTablePrefixDescr=Indicates the Prefix of the namespace used for this table in XML representation.
DataTableParentRelationsDescr=Returns the parent relations for this table.
DataTablePrimaryKeyDescr=Indicates the column(s) that represent the primary key for this table.
DataTableRowsDescr=Indicates the collection that holds the rows of data for this table.
DataTableTableNameDescr=Indicates the name used to look up this table in the Tables collection of a DataSet.

DataTableRowChangedDescr=Occurs after a row in the table has been successfully edited.
DataTableRowChangingDescr=Occurs when the row is being changed so that the event handler can modify or cancel the change. The user can modify values in the row and should throw an  exception to cancel the edit.
DataTableRowDeletedDescr=Occurs after a row in the table has been successfully deleted.
DataTableRowDeletingDescr=Occurs when a row in the table marked for deletion.  Throw an exception to cancel the deletion.
DataTableColumnChangingDescr=Occurs when a value has been submitted for this column.  The user can modify the proposed value and should throw an exception to cancel the edit.
DataTableColumnChangedDescr=Occurs when a value has been changed for this column.

;;; DataRelation property descriptions
DataRelationRelationNameDescr=The name used to look up this relation in the Relations collection of a DataSet.
DataRelationChildColumnsDescr=Indicates the child columns of this relation.
DataRelationParentColumnsDescr=Indicates the parent columns of this relation.
DataRelationNested=Indicates whether relations are nested.

;;; Constraints property descriptions
ForeignKeyConstraintDeleteRuleDescr=For deletions, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintUpdateRuleDescr=For updates, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintAcceptRejectRuleDescr=For accept and reject changes, indicates what kind of cascading should take place across this relation.
ForeignKeyConstraintChildColumnsDescr=Indicates the child columns of this constraint.
ForeignKeyConstraintParentColumnsDescr=Indicates the parent columns of this constraint.
ForeignKeyRelatedTableDescr=Indicates the child table of this constraint.
KeyConstraintColumnsDescr=Indicates the columns of this constraint.
KeyConstraintIsPrimaryKeyDescr=Indicates if this constraint is a primary key.
ConstraintNameDescr=Indicates the name of this constraint.
ConstraintTableDescr=Indicates the table of this constraint.

;;; DataColumn property descriptions
DataColumnAllowNullDescr=Indicates whether null values are allowed in this column.
DataColumnAutoIncrementDescr=Indicates whether the column automatically increments itself for new rows added to the table.  The type of this column must be Int16, Int32, or Int64.
DataColumnAutoIncrementSeedDescr=Indicates the starting value for an AutoIncrement column.
DataColumnAutoIncrementStepDescr=Indicates the increment used by an AutoIncrement column.
DataColumnCaptionDescr=Indicates the default user-interface caption for this column.
DataColumnColumnNameDescr=Indicates the name used to look up this column in the Columns collection of a DataTable.
DataColumnDataTableDescr=Returns the DataTable to which this column belongs.
DataColumnDataTypeDescr=Indicates the type of data stored in this column.
DataColumnDefaultValueDescr=Indicates the default column value used when adding new rows to the table.
DataColumnExpressionDescr=Indicates the value that this column computes for each row based on other columns instead of taking user input.
DataColumnMappingDescr=Indicates how this column persists in XML: as an attribute, element, simple content node, or nothing.
DataColumnNamespaceDescr=Indicates the XML uri for elements or attributes stored in this column.
DataColumnPrefixDescr=Indicates the Prefix used for this DataColumn in xml representation.
DataColumnOrdinalDescr=Indicates the index of this column in the Columns collection.
DataColumnReadOnlyDescr=Indicates whether this column allows changes once a row has been added to the table.
DataColumnUniqueDescr=Indicates whether this column should restrict its values in the rows of the table to be unique.
DataColumnMaxLengthDescr=Indicates the maximum length of the value this column allows. 

;;; DataView property descriptions
DataViewAllowDeleteDescr=Indicates whether this DataView and the user interface associated with it allows deletes.
DataViewAllowEditDescr=Indicates whether this DataView and the user interface associated with it allows edits.
DataViewAllowNewDescr=Indicates whether this DataView and the user interface associated with it allows new rows to be added.
DataViewCountDescr=Returns the number of items currently in this view.
DataViewDataViewManagerDescr=This returns a pointer to back to the DataViewManager that owns this DataSet (if any).
DataViewIsOpenDescr=Indicates whether the view is open.  
DataViewRowFilterDescr=Indicates an expression used to filter the data returned by this DataView.
DataViewRowStateFilterDescr=Indicates the versions of data returned by this DataView.
DataViewSortDescr=Indicates the order in which data is returned by this DataView.
DataViewApplyDefaultSortDescr=Indicates whether to use the default sort if the Sort property is not set.
DataViewTableDescr=Indicates the table this DataView uses to get data.
DataViewListChangedDescr=Indicates that the data returned by this DataView has somehow changed.

;;; DataViewManager property descriptions
DataViewManagerDataSetDescr=Indicates the source of data for this DataViewManager.
DataViewManagerTableSettingsDescr=Indicates the sorting/filtering/state settings for any table in the corresponding DataSet.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; ConnectionStringPermission
ADP_NotAPermissionElement='elem' was not a permission element.
ADP_InvalidXMLBadVersion=Invalid Xml; can only parse elements of version one.
ADP_WrongType=Operation on type {0} attempted with target of wrong type.

;;; DBConnectionString
ADP_ConnectionStringSyntax=Format of the initialization string does not conform to specification starting at index {0}.
ADP_InvalidConnectionOptionValue=Invalid value for key '{0}'.
ADP_KeywordNotSupported=Keyword not supported: '{0}'.
ADP_UdlFileError=Unable to load the UDL file.
ADP_InvalidUDL=Invalid UDL file.

;;; CommandBuilder
ADP_NoQuoteChange=The QuotePrefix and QuoteSuffix properties cannot be changed once an Insert, Update, or Delete command has been generated.
ADP_MissingSourceCommand=The DataAdapter.SelectCommand property needs to be initialized.
ADP_MissingSourceCommandConnection=The DataAdapter.SelectCommand.Connection property needs to be initialized;

;;; Data Provider Collection
; ArgumentException
ADP_CollectionUniqueValue=The {0}.{1} is required to be unique, '{2}' already exists in the collection.
ADP_CollectionIsNotParent=The {0} with {1} '{2}' is already contained by another {3}.
ADP_CollectionIsParent=The {0} with {1} '{2}' is already contained by this {3}.
ADP_CollectionRemoveInvalidObject=Attempted to remove an {0} that is not contained by this {1}.
; IndexOutOfRangeException
ADP_CollectionIndexInt32=Invalid index {0} for this {1} with Count={2}.
ADP_CollectionIndexString=An {0} with {1} '{2}' is not contained by this {3}.
; InvalidCastException
ADP_CollectionNullValue=The {0} only accepts non-null {1} type objects.
ADP_CollectionInvalidType=The {0} only accepts non-null {1} type objects, not {2} objects.

;;; DataColumnMapping
; ArgumentNullException
ADP_NullDataTable=Unexpected null DataTable argument
; DataMappingException
ADP_ColumnSchemaExpression=The column mapping from SourceColumn '{0}' failed because the DataColumn '{1}' is a computed column.
ADP_ColumnSchemaMismatch=Inconvertable type mismatch between SourceColumn '{0}' of {1} and the DataColumn '{2}' of {3}.
ADP_ColumnSchemaMissing1=Missing the DataColumn '{0}' for the SourceColumn '{2}'.
ADP_ColumnSchemaMissing2=Missing the DataColumn '{0}' in the DataTable '{1}' for the SourceColumn '{2}'.

;;; DataColumnMappingsCollection
; ArgumentException
ADP_InvalidSourceColumn=SourceColumn is required to be a non-empty string.
; DataMappingException
ADP_MissingColumnMapping=Missing SourceColumn mapping for '{0}'.

;;; DataAdapter
; ArgumentException
ADP_InvalidMappingAction=The MissingMappingAction enumeration value, {0}, is invalid.
ADP_InvalidSchemaAction=The MissingSchemaAction enumeration value, {0}, is invalid.

;;; DataTableMapping
; ArgumentNullException
ADP_NullDataSet=Unexpected null DataSet argument.
; SystemException
ADP_MissingTableSchema=Missing the '{0}' DataTable for the '{1}' SourceTable.

;;; Adapter.DataTableMappingsCollection
; ArgumentException
ADP_InvalidSourceTable=SourceTable is required to be a non-empty string
; DataMappingException
ADP_MissingTableMapping=Missing SourceTable mapping: '{0}'

;;; IDbCommand
; ArgumentException
ADP_InvalidCommandType=The CommandType enumeration value, {0}, is invalid.
ADP_InvalidUpdateRowSource=The UpdateRowSource enumeration value, {0}, is invalid.
; InvalidOperationException
ADP_CommandTextRequired={0}: CommandText property has not been initialized
ADP_ConnectionRequired_Cancel={0}: Connection property has not been initialized.
ADP_ConnectionRequired_ExecuteReader={0}: Connection property has not been initialized.
ADP_ConnectionRequired_ExecuteNonQuery={0}: Connection property has not been initialized.
ADP_ConnectionRequired_ExecuteScalar={0}: Connection property has not been initialized.
ADP_ConnectionRequired_Prepare={0}: Connection property has not been initialized.
ADP_ConnectionRequired_PropertyGet={0}: Connection property has not been initialized.
ADP_ConnectionRequired_PropertySet={0}: Connection property has not been initialized.
ADP_ConnectionRequired_DeriveParameters={0}: Connection property has not been initialized.
ADP_ConnectionRequired_Fill={0}: SelectCommand.Connection property has not been initialized.
ADP_ConnectionRequired_FillSchema={0}: SelectCommand.Connection property has not been initialized.
ADP_ConnectionRequired_Select=Auto sql generation requires the {0}Command to have a connection object. The  Connection property of the {0}Command has not been initialized.
ADP_ConnectionRequired_Insert=The required Connection property of the {0}Command object has not been initialized.
ADP_ConnectionRequired_Update=Update requires the UpdateCommand to have a connection object. The Connection property of the UpdateCommand has not been initialized.
ADP_ConnectionRequired_Delete=Update requires the DeleteCommand to have a connection object. The Connection property of the DeleteCommand has not been initialized.
ADP_ConnectionRequired_Clone=Update requires the command clone to have a connection object. The Connection property of the command clone has not been initialized.
ADP_NoStoredProcedureExists=The stored procedure '{0}' doesn't exist.
ADP_OpenConnectionRequired_Cancel={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_BeginTransaction={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_CommitTransaction={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_RollbackTransaction={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_SaveTransaction={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_ExecuteReader={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_ExecuteNonQuery={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_ExecuteScalar={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_Prepare={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_PropertyGet={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_PropertySet={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_DeriveParameters={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_FillSchema={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_Fill={0} requires an open and available Connection. The connection's current state is {1}.
ADP_OpenConnectionRequired_Select=Update auto sql generation requires the {0}Command to have an open connection object. The connection's current state is {1}.
ADP_OpenConnectionRequired_Insert=Update requires the {0}Command to have an open connection object. The connection's current state is {1}.
ADP_OpenConnectionRequired_Update=Update requires the {0}Command to have an open connection object. The connection's current state is {1}.
ADP_OpenConnectionRequired_Delete=Update requires the {0}Command to have an open connection object. The connection's current state is {1}.
ADP_OpenConnectionRequired_Clone=Update requires the updating command to have an open connection object. The connection's current state is {1}.
ADP_OpenConnectionRequired_ChangeDatabase={0} requires an open Connection. The connection's current state is {1}.
ADP_TransactionConnectionMismatch=The transaction object is not associated with the connection object.
ADP_TransactionRequired_Execute=Execute requires the command to have a transaction object when the connection assigned to the command is in a pending local transaction.  The Transaction property of the command has not been initialized.
ADP_TransactionCompleted=The transaction assigned to this command must be the most nested pending local transaction.
ADP_OpenReaderExists=There is already an open DataReader associated with this Connection which must be closed first.
ADP_DeriveParametersNotSupported={0} DeriveParameters only supports CommandType.StoredProcedure, not CommandType.{1}.

;;; DbDataAdapter
; InvalidCastException
ADP_MissingSelectCommand=The SelectCommand property has not been initialized before calling '{0}'.

;;; DbDataAdapter.FillSchema
; ArgumentException
ADP_InvalidSchemaType=Invalid SchemaType enumeration value={0}.
; System
ADP_FillSchemaRequiresSourceTableName=FillSchema: expected a non-empty string for the SourceTable name.

;;; DbDataAdapter.Fill
; ArgumentException
ADP_InvalidMaxRecords=The MaxRecords value of {0} is invalid; the value must be >= 0.
ADP_InvalidStartRecord=The StartRecord value of {0} is invalid; the value must be >= 0.
; SystemException
ADP_FillRequiresSourceTableName=Fill: expected a non-empty string for the SourceTable name.
ADP_FillChapterAutoIncrement=Hierarchical chapter columns must map to an AutoIncrement DataColumn.

;;; DbDataAdapter.Update
; InvalidOperationException
ADP_UpdateRequiresSourceTable=Update unable to find TableMapping['{0}'] or DataTable '{0}'.
ADP_InvalidUpdateStatus=Invalid UpdateStatus: {0}
ADP_UpdateRequiresSourceTableName=Update: expected a non-empty SourceTable name.
ADP_MissingTableMappingDestination=Missing TableMapping when TableMapping.DataSetTable='{0}'.

ADP_UpdateRequiresCommandClone=Update requires the command clone to be valid.
ADP_UpdateRequiresCommandSelect=Auto SQL generation during Update requires a valid SelectCommand.
ADP_UpdateRequiresCommandInsert=Update requires a valid InsertCommand when passed DataRow collection with new rows.
ADP_UpdateRequiresCommandUpdate=Update requires a valid UpdateCommand when passed DataRow collection with modified rows.
ADP_UpdateRequiresCommandDelete=Update requires a valid DeleteCommand when passed DataRow collection with deleted rows.

; SystemException
ADP_UpdateNullRow=dataRows[{0}].
ADP_UpdateNullRowTable=DataRow does not belong to a DataTable.
ADP_UpdateMismatchRowTable=DataRow[{0}] is from a different DataTable than DataRow[0].
ADP_RowUpdatedErrors=RowUpdatedEvent: Errors occurred; no additional is information available.
ADP_RowUpdatingErrors=RowUpdatingEvent: Errors occurred; no additional is information available.

ADP_UpdateConcurrencyViolation_Update=Concurrency violation: the UpdateCommand affected 0 records.
ADP_UpdateConcurrencyViolation_Delete=Concurrency violation: the DeleteCommand affected 0 records.

; WFCInvalidStateException
ADP_UpdateUnknownRowState=Adapter.Update: encountered an unexpected DataRowStateEnum: {0}.

;;; : IDbCommand
ADP_InvalidCommandTimeout=Invalid CommandTimeout value {0}; the value must be >= 0.
;; InvalidOperationException
ADP_CommandIsActive=The {0} is currently busy {1}.
ADP_UninitializedParameterSize=Parameter {0}: '{1}' of type: {2}, the property Size has an invalid size: {3}
ADP_PrepareParameterType={0}.Prepare method requires all parameters to have an explicitly set type.
ADP_PrepareParameterSize={0}.Prepare method requires all variable length parameters to have an explicitly set non-zero Size.
ADP_PrepareParameterScale={0}.Prepare method requires parameters of type '{1}' have an explicitly set Precision and Scale.

;;; : IDbConnection
; InvalidOperationException
ADP_ClosedConnectionError=Invalid operation. The connection is closed.
ADP_ConnectionAlreadyOpen=The connection is already Open (state={0}).
ADP_ConnectionIsDead=The connection is dead.
ADP_LocalTransactionPresent=Cannot enlist in the distributed transaction because a local transaction is in progress on the connection.  Finish local transaction and retry.
ADP_NoConnectionString=The ConnectionString property has not been initialized.
ADP_OpenConnectionPropertySet=Not allowed to change the '{0}' property while the connection (state={1}).
ADP_EmptyDatabaseName=Database cannot be null, the empty string, or string of only whitespace.
ADP_InvalidConnectTimeoutValue=Invalid 'Connect Timeout' value which must be an integer >= 0.
ADP_InvalidIsolationLevel=The IsolationLevel value {0} is invalid.

;;;; : DBDataReader
; ArgumentOutOfRangeException
ADP_InvalidSourceBufferIndex=Invalid source buffer (size of {0}) offset: {1}
ADP_InvalidDestinationBufferIndex=Invalid destination buffer (size of {0}) offset: {1}
; IndexOutOfRangeException
ADP_InvalidBufferSizeOrIndex=Buffer offset '{1}' plus the bytes available '{0}' is greater than the length of the passed in buffer.
ADP_InvalidDataLength=Data length '{0}' is less than 0.
; InvalidOperationException
ADP_DataReaderNoData=No data exists for the row/column.
ADP_DataReaderClosed=Invalid attempt to {0} when reader is closed.
ADP_NonSeqByteAccess=Invalid {2} attempt at dataIndex '{0}'.  With CommandBehavior.SequentialAccess, you may only read from dataIndex '{1}' or greater.

;;;; : DbDataStream
ADP_StreamClosed=Invalid attempt to {0} when stream is closed.

;;; : DbDataAdapter
ADP_DynamicSQLJoinUnsupported=Dynamic SQL generation is not supported against multiple base tables.
ADP_DynamicSQLNoTableInfo=Dynamic SQL generation is not supported against a SelectCommand that does not return any base table information.
ADP_DynamicSQLNoKeyInfo=Dynamic SQL generation for the {0} is not supported against a SelectCommand that does not return any key column information.
ADP_DynamicSQLReadOnly=Dynamic SQL generation for the {0} is not supported against a SelectCommand that does not return any modifiable columns.
ADP_DynamicSQLNestedQuote=Dynamic SQL generation not supported against table names '{0}' that contain the QuotePrefix or QuoteSuffic character '{1}'.
ADP_NonSequentialColumnAccess=Invalid attempt to read from column ordinal '{0}'.  With CommandBehavior.SequentialAccess, you may only read from column ordinal '{1}' or greater.  

;;; : IDataParameter
; ArgumentException
ADP_InvalidDataRowVersion={0}: Invalid DataRow Version enumeration value: {1}.
ADP_InvalidParameterDirection=Invalid direction '{0}' for '{1}' parameter.
ADP_InvalidDataType=The parameter data type of {0} is invalid.
ADP_UnknownDataType=No mapping exists from DbType {0} to a known {1}.
;;;ADP_OleDbTypeNotSupported=No mapping exists from OleDbType {0} to a known managed provider native type.
ADP_UnknownDataTypeCode=Unable to handle an unknown TypeCode of {0} with DataType of {0}.
ADP_InvalidSizeValue=Invalid parameter Size value '{0}'. The value must be greater than or equal to 0.
ADP_WhereClauseUnspecifiedValue=Parameter['{0}'] contained within auto gen WHERE clause with SourceColumn '{1}' has an unspecified Original value in the DataRow at column '{2}'.
ADP_TruncatedBytes=Error: byte array truncation to a length of {0}.
ADP_TruncatedString=Error: string truncation: max={0}, len={1}, value='{2}'

;;;; : IDbTransaction
; InvalidOperationException
ADP_ParallelTransactionsNotSupported={0} does not support parallel transactions.
ADP_TransactionZombied=This {0} has completed; it is no longer usable.

;;; DataColumnMapping Property/Method Descriptions
DataColumnMapping_DataSetColumn=DataColumn.ColumnName
DataColumnMapping_SourceColumn=Source column name - case sensitive.

;;; DataColumnMappingsCollection Property/Method Descriptions
DataColumnMappings_Count=The number of items in the collection
DataColumnMappings_Item=The specified DataColumnMapping object.

;;; DataAdapter Property/Method Descriptions
DataAdapter_AcceptChangesDuringFill=Whether or not Fill will call DataRow.AcceptChanges.
DataAdapter_ContinueUpdateOnError=Whether or not to continue to the next DataRow when the Update events, RowUpdating and RowUpdated, Status is UpdateStatus.ErrorsOccurred.
DataAdapter_MissingMappingAction=The action taken when a table or column in the TableMappings is missing.
DataAdapter_MissingSchemaAction=The action taken when a table or column in the DataSet is missing.
DataAdapter_TableMappings=How to map source table to DataSet table.

;;; DataTableMapping Property/Method Descriptions
DataTableMapping_ColumnMappings=Individual columns mappings when this table mapping is matched.
DataTableMapping_DataSetTable=DataTable.TableName
DataTableMapping_SourceTable=The DataTableMapping source table name. This name is case sensitive.

;;; DataTableMappingsCollection Property/Method Descriptions
DataTableMappings_Count=The number of items in the collection
DataTableMappings_Item=The specified DataTableMapping object

;;; : DataAdapter Property/Method Descriptions
DbDataAdapter_FillError=Event triggered when a recoverable error occurs during Fill.
DbDataAdapter_RowUpdated=Event triggered before every DataRow during Update.
DbDataAdapter_RowUpdating=Event triggered after every DataRow during Update.

;;; : IDbConnection Property/Method Descriptions
DbConnection_InfoMessage=Event triggered when messages arrive from the DataSource.
DbConnection_StateChange=Event triggered when the connection changes state.
DbConnection_State=The ConnectionState indicating whether the connection is open or closed.

; Data.Odbc
; ArgumentException
OdbcConnection_ConnectionStringTooLong=Connection string exceeds maximum allowed length of {0}.
; SystemException
;;;Odbc_GetTypeMapping_UnknownType={0} - unable to map type.
Odbc_UnknownSQLType=Unknown SQL type - {0}.
Odbc_UnknownURTType=Unknown URT type - {0}.
Odbc_InvalidHandle=Invalid Handle!
Odbc_UnsupportedCommandTypeTableDirect=The .Net Data Odbc Provider does not support CommandType.TableDirect.
Odbc_NegativeArgument=Invalid negative argument!
Odbc_CantSetPropertyOnOpenConnection=Cannot set property on an open connection.
Odbc_UnsupportedIsolationLevel=Not supported isolationlevel - {0}
Odbc_CantEnableConnectionpooling={0} - unable to enable connection pooling...
Odbc_CantAllocateEnvironmentHandle={0} - unable to allocate an environment handle.
Odbc_NotInTransaction=Not in a transaction
Odbc_UnknownSQLCType=Unknown SQLC type - {0}
Odbc_UnknownOdbcType=Invalid OdbcType enumeration value={0}.
;;;Odbc_NullData=Use IsDBNull when DBNull.Value data is expected.
Odbc_ExceptionMessage={0} [{1}] {2}
Odbc_ExceptionNoInfoMsg={0} - no error information available

;;; OleDb.OleDbConnection
; SystemException
OleDb_SchemaRowsetsNotSupported=IDBSchemaRowset interface is not supported by the '{0}' provider.  GetOleDbSchemaTable is unavailable with the current provider.
OleDb_NoErrorInformation=No error information available: {0}.
OleDb_MDACSecurityDeny=The .Net Data OLE DB Provider(System.Data.OleDb) requires UnmanagedCode SecurityPermission to instantiate Microsoft Data Access Components(MDAC).
OleDb_MDACSecurityHive=The .Net Data OLE DB Provider(System.Data.OleDb) requires HKEY_CLASSES_ROOT Read RegistryPermission to verify Microsoft Data Access Components(MDAC) version.
OleDb_MDACSecurityFile=The .Net Data OLE DB Provider(System.Data.OleDb) requires Read FileIOPermission to verify Microsoft Data Access Components(MDAC) version.
OleDb_MDACNotAvailable=The .Net Data OLE DB Provider(System.Data.OleDb) requires Microsoft Data Access Components(MDAC).  Please install Microsoft Data Access Components(MDAC) version 2.6 or later.
OleDb_MDACWrongVersion=The .Net Data OLE DB Provider(System.Data.OleDb) requires Microsoft Data Access Components(MDAC) version 2.6 or later.  Version {0} was found currently installed.
OleDb_MSDASQLNotSupported=The .Net Framework Data Provider for OLEDB (System.Data.OleDb) does not support the Microsoft OLE DB Provider for ODBC Drivers (MSDASQL). Use the .Net Framework Data Provider for ODBC (System.Data.Odbc).
OleDb_ProviderUnavailable=The '{0}' provider is not registered on the local machine.
OleDb_CommandTextNotSupported=The ICommandText interface is not supported by the '{0}' provider. Use CommandType.TableDirect instead.
;OleDb_ConnectionPropertyErrors=The connection property values are invalid: '{0}'.
;OleDb_CommandPropertyErrors=The command property values are invalid: '{0}'.
OleDb_TransactionsNotSupported=The ITransactonLocal interface is not supported by the '{0}' provider.  Local transactions are unavailable with the current provider.
OleDb_ConnectionStringSyntax=Format of the initialization string does not conform to the OLE DB specification.  Starting around char[{0}] in the connection string.
OleDb_AsynchronousNotSupported='Asynchronous Processing' is not a supported feature of the .Net Data OLE DB Provider(System.Data.OleDb).
OleDb_NoProviderSpecified=An OLE DB Provider was not specified in the ConnectionString.  An example would be, 'Provider=SQLOLEDB;'.
OleDb_InvalidProviderSpecified=The OLE DB Provider specified in the ConnectionString is too long.
OleDb_UdlFileError=Unable to load the UDL file '{0}' listed in the ConnectionString.
;;;OleDb_InvalidTransactionObjectForCommit=Invalid Commit on this OleDbTransaction at this time.  Nested transactions may need to be committed first.
;;;OleDb_InvalidTransactionObjectForRollback=Invalid Rollback on this OleDbTransaction at this time.  Nested transactions may need to be rollbacked first.
OleDb_InvalidDbInfoLiteralRestrictions=No restrictions are expected for the DbInfoLiterals OleDbSchemaGuid.
OleDb_NotSupportedSchemaTable=The {0} OleDbSchemaGuid is not a supported schema by the '{1}' provider.

OleDb_FailedGetDescription=IErrorInfo.GetDescription failed with {0}.
OleDb_FailedGetSource=IErrorInfo.GetSource failed with {0}.

;;; OleDb.OleDbCommand
OleDb_CommandParameterBadAccessor=Command parameter[{0}] '{1}' is invalid.
OleDb_CommandParameterCantConvertValue=Command parameter[{0}] '{1}' data value could not be converted for reasons other than sign mismatch or data overflow. 
OleDb_CommandParameterSignMismatch=Conversion failed for command parameter[{0}] '{1}' because the data value was signed and the type used by the provider was unsigned.
OleDb_CommandParameterDataOverflow=Conversion failed for command parameter[{0}] '{1}' because the data value overflowed the type used by the provider.
OleDb_CommandParameterUnavailable=Provider encountered an error while sending command parameter[{0}] '{1}' value and stopped processing.
OleDb_CommandParameterDefault=Parameter[{0}] '{1}' has no default value.
OleDb_CommandParameterError=Error occurred with command parameter[{0}] '{1}: {2}.

OleDb_BadStatus_ParamAcc=System.Data.OleDb.OleDbDataAdapter internal error: invalid parameter accessor: {0} {1}.
OleDb_UninitializedParameters=Parameter {0}: '{1}', the property DbType is uninitialized: OleDbType.{2}.
OleDb_NoProviderSupportForParameters=The ICommandWithParameters interface is not supported by the '{0}' provider.  Command parameters are unsupported with the current provider.
OleDb_NoProviderSupportForSProcResetParameters=Retrieving procedure parameter information is not supported by the '{0}' provider.

ODB_ExecutionDuringWrongContext=OleDbCommands can only be executed in the same context where the OleDbConnection was opened.

;;; OleDb.OleDbDataAdapter
OleDb_Fill_NotADODB=Object is not an ADODB.Recordset or an ADODB.Record.
OleDb_Fill_EmptyRecordSet=Unable to retrieve the IRowset interface from the ADODB.Recordset object.
OleDb_Fill_EmptyRecord=Unable to retrieve the IRow interface from the ADODB.Record object.

;;; OleDb.OleDbParameter
; ArgumentOutOfRangeException
OleDb_InvalidOleDbType=Invalid OleDbType enumeration value: {0}

;;; OleDb.OleDbPropertyCollection
; InvalidOperation
OleDb_PropertyNotSupported=The '{0}' property is not supported by the '{1}' provider.
OleDb_PropertyBadValue=Failed to initialize the '{0}' property on the '{1}' provider.
OleDb_PropertyNotSettable=The '{0}' property is read-only on the '{1}' provider.
OleDb_PropertyConflicting=The '{0}' property conflicts with other properties on the '{1}' provider.
OleDb_PropertySetError=Failed to set the '{0}' property on the '{1}' provider.  Status Code='{2}'.

;;; OleDb.OleDbDataReader
; SystemException
OleDb_BadAccessor=Accessor validation was deferred and was performed while the method returned data. The binding was invalid for this column or parameter.
OleDb_BadStatusRowAccessor=OleDbDataAdapter internal error: invalid rowset accessor: Ordinal={0} Status={1}.
OleDb_CantConvertValue=The data value could not be converted for reasons other than sign mismatch or data overflow. For example, the data was corrupted in the data store but the row was still retrievable.
OleDb_CantCreate=The provider could not allocate memory in which to return {0} data.
OleDb_DataOverflow=Conversion failed because the {0} data value overflowed the type specified for the {0} value part in the consumer's buffer.
OleDb_GVtUnknown=OleDbDataAdapter internal error: [get] Unknown OLE DB data type: 0x{0} ({1}).
OleDb_SignMismatch=Conversion failed because the {0} data value was signed and the type specified for the {0} value part in the consumer's buffer was unsigned.
OleDb_SVtUnknown=OleDbDataAdapter internal error: [set] Unknown OLE DB data type: {0}.
OleDb_Unavailable=The provider could not determine the {0} value. For example, the row was just created, the default for the {0} column was not available, and the consumer had not yet set a new {0} value.
OleDb_UnexpectedStatusValue=OLE DB Provider returned an unexpected status value of {0}.
OleDb_NumericToDecimalOverflow=The 38 bit numerical value is too large to fit into a 28 bit decimal.
OleDb_ThreadApartmentState=The OleDbDataReader.Read must be used from the same thread on which is was created if that thread's ApartmentState was not ApartmentState.MTA.

OleDb_NoErrorMessage=Unspecified error: {0}
OleDb_DBBindingGetVector=DBTYPE_VECTOR data is not supported by the .Net Data OLE DB Provider(System.Data.OleDb).

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Data.SQL

;;; SQLServer.Connection
; ArgumentException
SQL_InvalidConnectionOptionValue=Invalid '{0}' value in the connection string: {1}.
SQL_InvalidIsolationLevelPropertyArg=Invalid IsolationLevel parameter: must be ReadCommitted, ReadUncommitted, RepeatableRead, or Serializable.
SQL_InvalidMinMaxPoolSizeValues=Invalid min or max pool size values, min pool size cannot be greater than the max pool size.
SQL_InvalidOptionLength=The length of the value for the connection parameter <{0}> exceeds the maximum allowed 128 characters.
SQL_InvalidPacketSizeValue=Invalid 'Packet Size'.  The value must be an integer >= 512 and <= 32767.
SQL_IntegratedSecurityError=An error occurred during integrated security validation in the connection pooler.  GetLastError() returned: '{0}'.
SQL_NullEmptyTransactionName=Invalid transaction or invalid name for a point at which to save within the transaction.
;DataProviderException
SQL_InvalidSQLServerVersion=Unsupported SQL Server version: '{0}'.  The .Net SqlClient Data Provider can only be used with SQL Server versions 7.0 and later.  
SQL_TransactionEnlistmentError=An error occurred while enlisting in a distributed transaction.
;InvalidOperationException
SQL_ConnectionPoolingError=A connection pooling error has occurred.
SQL_PooledOpenTimeout=Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached.
; TypeLoad Exception
SQL_NoSSPI=Invalid operation.  Cannot use integrated security without dbnetlib.dll.  This file is installed with Microsoft SQL Server 8.0 or MDAC version 2.6.

;;; SQLServer.DataCommand
; ArgumentException
SQL_TableDirectNotSupported=CommandType.TableDirect is not supported by the .Net SqlClient Data Provider.
; InvalidOperationException
SQL_NonXmlResult=Invalid command sent to ExecuteXmlReader.  The command must return an Xml result.

;;; SQLServer.DataParameter
; ArgumentException
SQL_InvalidParameterNameLength=The Parameter name is greater than the maximum allowable length of 127 characters.  Please use a shorter parameter name.
SQL_ParameterValueOutOfRange=Parameter value '{0}' is out of range.
SQL_PrecisionValueOutOfRange=Precision value '{0}' is either less than 0 or greater than the maximum allowed precision of 38.
; ArgumentOutOfRangeException
SQL_InvalidSqlDbType={0}: Invalid SqlDbType enumeration value: {1}.
; InvalidOperationException
SQL_ParameterInvalidVariant=Parameter '{0}' exceeds the size limit for the sql_variant datatype.

;;; SQLServer.SQLServerAdapter
; ArgumentException
SQL_ExecuteRequiresCommand=Expected a non-null Command object.
; InvalidOperationException
SQL_NoKeyColumnDefined=Invalid attempt to update table '{0}'. No key columns were defined.

;;; SQLServer.TDSParser
; DataProviderException
SQL_MDAC_WrongVersion=The .Net Data SQL Provider (System.Data.SqlClient) requires Microsoft Data Access Components(MDAC) version 2.6 or later.
; InvalidOperationException
SQL_ComputeByNotSupported=COMPUTE BY statements not supported.
SQL_ParsingError=Internal connection fatal error.
; OverflowException
SQL_MoneyOverflow=SqlDbType.SmallMoney overflow.  Value '{0}' is out of range.  Must be between -214,748.3648 and 214,748.3647.
SQL_SmallDateTimeOverflow=SqlDbType.SmallDateTime overflow.  Value '{0}' is out of range.  Must be between 1/1/1900 12:00:00 AM and 6/6/2079 11:59:59 PM.
; SQLServerException
SQL_ZeroBytes=Zero bytes read from server.
SQL_Timeout=Timeout expired.  The timeout period elapsed prior to completion of the operation or the server is not responding.
SQL_Unknown=Unknown error.
SQL_InsufficientMemory=Insufficient memory.
SQL_AccessDenied=Access denied.
SQL_ConnectionBusy=Connection is busy.
SQL_ConnectionBroken=Connection broken.
SQL_ConnectionLimit=Connection limit exceeded.
SQL_ServerNotFound=Specified SQL server not found: {0}
SQL_NetworkNotFound=The network has not been started.
SQL_InsufficientResources=Insufficient network resources.
SQL_NetworkBusy=Network is busy.
SQL_NetworkAccessDenied=Network access denied.
SQL_GeneralError=General network error.  Check your network documentation.
SQL_IncorrectMode=Incorrect connection mode.
SQL_NameNotFound=Name not found in directory service.
SQL_InvalidConnection=Invalid connection.
SQL_ReadWriteError=Error reading or writing network data.
SQL_TooManyHandles=Too many open file handles.
SQL_ServerError=SQL Server does not exist or access denied.
SQL_SSLError=SSL Security error.
SQL_EncryptionError=SQL Server requires Encryption On.
SQL_EncryptionNotSupported=Encryption not supported on SQL Server.
SQL_OperationCancelled=Operation cancelled by user.
SQL_SevereError=A severe error occurred on the current command.  The results, if any, should be discarded.
SQL_SSPIInitializeError=Cannot initialize SSPI package.
SQL_SSPIGenerateError=Cannot generate SSPI context.
SQL_CultureIdError=The Collation specified by SQL Server is not supported.

;;; SQLServer.SQLServerDataReader
; ArgumentException
SQL_InvalidObjectColumnNotFound=Invalid object. Column '{0}' has no corresponding object field.
SQL_InvalidObjectNotAssignable=Invalid object.  Object field '{0}' is not assignable from column '{1}'.
SQL_InvalidObjectSize=Invalid object.  Expect object to have {0} fields.
; InvalidOperationException
SQL_InvalidRead=Invalid attempt to read when no data is present.
; InvalidCastException
SQL_NonBlobColumn=Invalid attempt to GetBytes on column '{0}'.  The GetBytes function can only be used on columns of type Text, NText, or Image.

;;; Sql Misc. Errors
SqlMisc_NullString=Null
SqlMisc_MessageString=Message
SqlMisc_ArithOverflowMessage=Arithmetic Overflow.
SqlMisc_DivideByZeroMessage=Divide by zero error encountered.
SqlMisc_NullValueMessage=Data is Null. This method or property cannot be called on Null values.
SqlMisc_TruncationMessage=Numeric arithmetic causes truncation.
SqlMisc_DateTimeOverflowMessage=SqlDateTime overflow. Must be between 1/1/1753 12:00:00 AM and 12/31/9999 11:59:59 PM.
SqlMisc_ConcatDiffCollationMessage=Two strings to be concatenated have different collation.
SqlMisc_CompareDiffCollationMessage=Two strings to be compared have different collation.
SqlMisc_InvalidFlagMessage=Invalid flag value.
SqlMisc_NumeToDecOverflowMessage=Conversion from SqlDecimal to Decimal overflows.
SqlMisc_ConversionOverflowMessage=Conversion overflows.
SqlMisc_InvalidDateTimeMessage=Invalid SqlDateTime.
SqlMisc_InvalidArraySizeMessage=Invalid array size.
SqlMisc_InvalidPrecScaleMessage=Invalid numeric precision/scale.
SqlMisc_FormatMessage=The input wasn't in a correct format.

;;;
;;; DbCommand Property/Method Descriptions
DbCommand_CommandText=Command text to execute.
DbCommand_CommandTimeout=Time to wait for command to execute.
DbCommand_CommandType=How to interpret the CommandText.
DbCommand_Connection=Connection used by the command.
DbCommand_Parameters=The parameters collection.
;;;DbCommand_Properties=Indicates the rowset properties collection; use only after the connection is open.
DbCommand_Transaction=The transaction used by the command.
DbCommand_UpdatedRowSource=When used by a DataAdapter.Update, how command results are applied to the current DataRow.

;;;
;;; XXX Connection Property/Method Descriptions
OdbcConnection_ConnectionString=Information used to connect to a Data Source.
OdbcConnection_ConnectionTimeout=Current connection timeout value, not settable in the ConnectionString.
OdbcConnection_Database=Current data source catalog value, 'Database=X' in the connection string.
OdbcConnection_DataSource=Current data source, 'Server=X' in the connection string.
OdbcConnection_Driver=Current ODBC driver.
OdbcConnection_ServerVersion=Version of the product accessed by the ODBC Driver.

;;; OleDbConnection Property/Method Descriptions
OleDbConnection_ConnectionString=Information used to connect to a Data Source.
OleDbConnection_ConnectionTimeout=Current connection timeout value, 'Connect Timeout=X' in the ConnectionString.
OleDbConnection_Database=Current data source catalog value, 'Initial Catalog=X' in the connection string.
OleDbConnection_DataSource=Current data source, 'Data Source=X' in the connection string.
OleDbConnection_Provider=Current OLE DB provider progid, 'Provider=X' in the connection string.
OleDbConnection_ServerVersion=Version of the product accessed by the OLE DB Provider.

;;; SqlConnection Property/Method Descriptions
SqlConnection_ConnectionString=Information used to connect to a DataSource, such as 'Data Source=x;Initial Catalog=x;Integrated Security=SSPI'.
SqlConnection_ConnectionTimeout=Current connection timeout value, 'Connect Timeout=X' in the ConnectionString.
SqlConnection_Database=Current SQL Server database, 'Initial Catalog=X' in the connection string.
SqlConnection_DataSource=Current SqlServer that the connection is opened to, 'Data Source=X' in the connection string. 
SqlConnection_PacketSize=Network packet size, 'Packet Size=x' in the connection string.
SqlConnection_ServerVersion=Version of the SQL Server accessed by the SqlConnection.
SqlConnection_WorkstationId=Workstation Id, 'Workstation ID=x' in the connection string.

;;;
;;; DbDataAdapter Property/Method Descriptions
DbDataAdapter_DeleteCommand=Used during Update for deleted rows in DataSet.
DbDataAdapter_InsertCommand=Used during Update for new rows in DataSet.
DbDataAdapter_SelectCommand=Used during Fill/FillSchema.
DbDataAdapter_UpdateCommand=Used during Update for modified rows in DataSet.

;;;
;;; XXX Parameter Property/Method Descriptions
DataParameter_DbType=The parameter generic type.
DataParameter_Direction=Input, output, or bidirectional parameter.
DataParameter_IsNullable=a design-time property used for strongly typed code-generation.
DataParameter_ParameterName=Name of the parameter.
DataParameter_SourceColumn=When used by a DataAdapter.Update, the source column name that is used to find the DataSetColumn name in the ColumnMappings. This is to copy a value between the parameter and a datarow.
DataParameter_SourceVersion=When used by a DataAdapter.Update (UpdateCommand only), the version of the DataRow value that is used to update the data source.
DataParameter_Value=Value of the parameter.

;;;DbDataParameter_IsFixedLength=Indicates fixed length for variable length DbType.
DbDataParameter_Precision=For decimal, numeric, varnumeric DBTypes.
DbDataParameter_Scale=For decimal, numeric, varnumeric DBTypes.
DbDataParameter_Size=Size of variable length data types (string & arrays).

OdbcParameter_OdbcType=The parameter native type.
OleDbParameter_OleDbType=The parameter native type.

SqlParameter_ParameterName=Name of the parameter, like '@p1'
SqlParameter_SqlDbType=The parameter native type.
SqlParameter_Offset=Offset in variable length data types.

;;;
;;;
OdbcCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate OdbcCommands
OdbcCommandBuilder_QuotePrefix=The character used in a text command as the opening quote for quoting identifiers that contain special characters.
OdbcCommandBuilder_QuoteSuffix=The character used in a text command as the closing quote for quoting identifiers that contain special characters.

OleDbCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate OleDbCommands
OleDbCommandBuilder_QuotePrefix=The prefix string wrapped around sql objects
OleDbCommandBuilder_QuoteSuffix=The suffix string wrapped around sql objects

SqlCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate SqlCommands
SqlCommandBuilder_QuotePrefix=The character used in a text command as the opening quote for quoting identifiers that contain special characters.
SqlCommandBuilder_QuoteSuffix=The character used in a text command as the closing quote for quoting identifiers that contain special characters. 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; XmlSchema
Xml_SimpleTypeNotSupported=DataSet doesn't support 'union' or 'list' as simpleType.
Xml_MissingSchema= No schema to parse. 
Xml_MissingAttribute=Invalid {0} syntax: missing required '{1}' attribute.
Xml_MissingAttributeValue=Invalid or missing value for the required '{0}' attribute.
Xml_ValueOutOfRange=Value '{1}' is invalid for attribute '{0}'.
Xml_ElementValueOutOfRange=ElementType name="{0}": The value '{2}' is invalid for attribute '{1}'.
Xml_AttributeValue=ElementType name='{0}': The '{1}' attribute must have value '{2}'.
Xml_AttributeValues=The value of attribute '{0}' should be '{1}' or '{2}'.
Xml_ElementTypeNotFound=Cannot find ElementType name='{0}'.
Xml_RelationParentNameMissing=Parent table name is missing in relation '{0}'.
Xml_RelationChildNameMissing=Child table name is missing in relation '{0}'.
Xml_RelationTableKeyMissing=Parent table key is missing in relation '{0}'.
Xml_RelationChildKeyMissing=Child table key is missing in relation '{0}'.
Xml_UndefinedDatatype=Undefined data type: '{0}'.
Xml_DatatypeNotDefined=Data type not defined.
Xml_InvalidField=Invalid XPath selection inside field node. Cannot find: {0}.
Xml_InvalidSelector=Invalid XPath selection inside selector node: {0}.
Xml_InvalidKey=Invalid 'Key' node inside constraint named: {0}.
Xml_DuplicateConstraint=The constraint name {0} is already used in the schema. 
Xml_CannotConvert= Cannot convert "{0}" to type {1}.
Xml_MissingRefer=Missing 'refer' part in keyref constraint named "{0}".
Xml_MissingRef=Cannot find the referenced element pointed by "{0}".
Xml_MismatchKeyLength=Invalid Relation definition: different length keys.
Xml_CircularComplexType=DataSet doesn't allow the circular reference in the ComplexType named '{0}'.

Xml_MergeMissingDefinition=Destination schema missing definition for '{0}'.
Xml_MergeDuplicateDeclaration=Duplicated declaration '{0}'.
Xml_MissingTable=Cannot load diffGram. Table '{0}' is missing in the destination dataset. 
Xml_MismatchedSQL=Cannot load diffGram. sql:before and sql:after elements do not match: '{0}' versus '{1}' .
Xml_MismatchedSQLID=Cannot load diffGram. sql:before id and sql:after id do not match.
Xml_MissingSQL=Cannot load diffGram. The 'sql' node is missing.
Xml_ColumnConflict=Column name '{0}' is defined for different mapping types.
Xml_InvalidPrefix=Prefix '{0}' is not valid, because it contains special characters.
Xml_PrefixWithEmptyNS=Cannot use a prefix with an empty namespace.
Xml_NestedCircular=Circular reference in self-nested table '{0}'.
Xml_FoundEntity=DataSet cannot expand entities. Use XmlValidatingReader and set the EntityHandling property accordingly.

; END

; Expression Language errors
Expr_NYI=The feature not implemented. {0}.
Expr_MissingOperand=Syntax error: Missing operand after '{0}' operator.
Expr_TypeMismatch=Type mismatch in expression '{0}'.
Expr_ExpressionTooComplex=Expression is too complex.
Expr_UnboundName=Cannot find column [{0}].
Expr_InvalidString=The expression contains an invalid string constant: {0}.
Expr_UndefinedFunction=The expression contains undefined function call {0}().
Expr_Syntax=Syntax error in the expression.
Expr_FunctionArgumentCount=Invalid number of arguments: function {0}().
Expr_MissingRightParen=The expression is missing the closing parenthesis.
Expr_UnknownToken=Cannot interpret token '{0}' at position {1}.
Expr_UnknownToken1=Expected {0}, but actual token at the position {2} is {1}.
Expr_DatatypeConvertion=Cannot convert from {0} to {1}.
Expr_DatavalueConvertion=Cannot convert value '{0}' to Type: {1}.
Expr_InvalidName=Invalid column name [{0}].
Expr_InvalidDate=The expression contains invalid date constant '{0}'.
Expr_NonConstantArgument=Only constant expressions are allowed in the expression list for the IN operator.
Expr_InvalidPattern=Error in Like operator: the string pattern '{0}' is invalid.
Expr_InWithoutParentheses=Syntax error: The items following the IN keyword must be separated by commas and be enclosed in parentheses.
Expr_ArgumentType=Type mismatch in function argument: {0}(), argument {1}, expected {2}.
Expr_ArgumentTypeInteger=Type mismatch in function argument: {0}(), argument {1}, expected one of the Integer types.
Expr_TypeMismatchInBinop=Cannot perform '{0}' operation on {1} and {2}.
Expr_AmbiguousBinop=Operator '{0}' is ambiguous on operands of type '{1}' and '{2}'. Cannot mix signed and unsigned types. Please use explicit Convert() function.
Expr_InWithoutList=Syntax error: The IN keyword must be followed by a non-empty list of expressions separated by commas, and also must be enclosed in parentheses.
Expr_UnsupportedOperator=The expression contains unsupported operator '{0}'.
Expr_InvalidNameBracketing=The expression contains invalid name: '{0}'.
Expr_MissingOperandBefore=Syntax error: Missing operand before '{0}' operator.
Expr_TooManyRightParentheses=The expression has too many closing parentheses.
Expr_UnresolvedRelation=The table [{0}] involved in more than one relation. You must explicitly mention a relation name in the expression '{1}'.
Expr_AggregateArgument=Syntax error in aggregate argument: Expecting a single column argument with possible 'Child' qualifier.
Expr_AggregateUnbound=Unbound reference in the aggregate expression '{0}'.
Expr_EvalNoContext=Cannot evaluate non-constant expression without current row.
Expr_ExpressionUnbound=Unbound reference in the expression '{0}'.
Expr_ComputeNotAggregate=Cannot evaluate. Expression '{0}' is not an aggregate.
Expr_FilterConvertion=Filter expression '{0}' does not evaluate to a Boolean term.
Expr_InvalidType=Invalid type name '{0}'.
Expr_LookupArgument=Syntax error in Lookup expression: Expecting keyword 'Parent' followed by a single column argument with possible relation qualifier: Parent[(<relation_name>)].<column_name>.
Expr_InvokeArgument=Need a row or a table to Invoke DataFilter.
Expr_ArgumentOutofRange={0}() argument is out of range.
Expr_IsSyntax=Syntax error: Invalid usage of 'Is' operator. Correct syntax: <expression> Is [Not] Null.
Expr_Overflow=Value is either too large or too small for Type '{0}'.

; END

; DataSet errors

Data_EnforceConstraints=Failed to enable constraints. One or more rows contain values violating non-null, unique, or foreign-key constraints.
Data_CannotModifyCollection=Collection itself is not modifiable.
Data_CaseInsensitiveNameConflict=The given name '{0}' matches at least two names in the collection object with different cases, but does not match either of them with the same case.

Data_ArgumentOutOfRange='{0}' argument is out of range.
Data_ArgumentNull='{0}' argument cannot be null.

DataColumns_OutOfRange=Cannot find column {0}.
DataColumns_Add1=Column '{0}' already belongs to this DataTable.
DataColumns_Add2=Column '{0}' already belongs to another DataTable.
DataColumns_Add3=Cannot have more than one SimpleContent columns in a DataTable.
DataColumns_Add4=Cannot add a SimpleContent column to a table containing element columns or nested relations.
DataColumns_AddDuplicate=A column named '{0}' already belongs to this DataTable.
DataColumns_AddDuplicate2=Cannot add a column named '{0}': a nested table with the same name already belongs to this DataTable.
DataColumns_AddDuplicate3=A column named '{0}' already belongs to this DataTable: cannot set a nested table name to the same name.
DataColumns_Remove=Cannot remove a column that doesn't belong to this table.
DataColumns_RemovePrimaryKey=Cannot remove this column, because it's part of the primary key.
DataColumns_RemoveChildKey=Cannot remove this column, because it is part of the parent key for relationship {0}.
DataColumns_RemoveConstraint=Cannot remove this column, because it is a part of the constraint {0} on the table {1}.
DataColumns_RemoveExpression=Cannot remove this column, because it is part of an expression: {0} = {1}.

DataColumn_AutoIncrementAndExpression=Cannot set AutoIncrement property for a computed column.
DataColumn_AutoIncrementAndDefaultValue=Cannot set AutoIncrement property for a column with DefaultValue set.
DataColumn_DefaultValueAndAutoIncrement=Cannot set a DefaultValue on an AutoIncrement column.
DataColumn_AutoIncrementSeed=AutoIncrementStep must be a non-zero value.
DataColumn_NameRequired=ColumnName is required when it is part of a DataTable.
DataColumn_ChangeDataType=Cannot change DataType of a column once it has data.
DataColumn_NullDataType=Column requires a valid DataType.
DataColumn_AutoIncrementDataType=An AutoIncrement Column requires an integer DataType.
DataColumn_DefaultValueDataType=The DefaultValue for column {0} is of type {1} and cannot be converted to {2}.
DataColumn_DefaultValueDataType1=The DefaultValue for the column is of type {0} and cannot be converted to {1}.
DataColumn_DefaultValueColumnDataType=The DefaultValue for column {0} is of type {1}, but the column is of type {2}.
DataColumn_ReadOnlyAndExpression=Cannot change ReadOnly property for the expression column.
DataColumn_UniqueAndExpression=Cannot change Unique property for the expression column.
DataColumn_ExpressionAndUnique=Cannot create an expression on a column that has AutoIncrement or Unique.
DataColumn_ExpressionAndReadOnly=Cannot set expression because column cannot be made ReadOnly.
DataColumn_ExpressionAndConstraint=Cannot set Expression property on column {0}, because it is a part of a constraint.
DataColumn_ExpressionInConstraint=Cannot create a constraint based on Expression column {0}.
DataColumn_ExpressionCircular=Cannot set Expression property due to circular reference in the expression.
DataColumn_NullKeyValues=Column '{0}' has null values in it.
DataColumn_NullValues=Column '{0}' does not allow nulls.
DataColumn_ReadOnly=Column '{0}' is read only.
DataColumn_NonUniqueValues=Column '{0}' contains non-unique values.
DataColumn_StorageChange=Cannot change the storage of a column if it already has a storage.
DataColumn_SetForeignStorage=This storage already belongs to another table.
DataColumn_NotInTheTable=Column '{0}' does not belong to table {1}.
DataColumn_NotInAnyTable=Column must belong to a table.
DataColumn_SetFailed=Couldn't store <{0}> in {1} Column.  Expected type is {2}.
DataColumn_CannotSetToNull=Cannot set Column '{0}' to be null. Please use DBNull instead.
DataColumn_LongerThanMaxLength=Cannot set column '{0}' to '{1}'. The value violates the MaxLength limit of this column.
DataColumn_HasToBeStringType=MaxLength applies to string data type only. You cannot set Column '{0}' property MaxLength to be non-negative number.
DataColumn_CannotSetMaxLength=Cannot set Column '{0}' property MaxLength to '{1}'. There is at least one string in the table longer than the new limit.
DataColumn_CannotSetMaxLength2=Cannot set Column '{0}' property MaxLength. The Column is SimpleContent.
DataColumn_CannotSimpleContentType=Cannot set Column '{0}' property DataType to {1}. The Column is SimpleContent.
DataColumn_CannotSimpleContent=Cannot set Column '{0}' property MappingType to SimpleContent. The Column DataType is {1}.
DataColumn_ExceedMaxLength=Column '{0}' exceeds the MaxLength limit.
DataColumn_NotAllowDBNull=Column '{0}' does not allow DBNull.Value.
DataColumn_CannotChangeNamespace=Cannot change the Column '{0}' property Namespace. The Column is SimpleContent.

DataConstraint_NoName=Cannot change the name of a constraint to empty string when it is in the ConstraintCollection.
DataConstraint_Violation=Cannot enforce constraints on constraint {0}.
DataConstraint_ViolationValue=Column '{0}' is constrained to be unique.  Value '{1}' is already present.
DataConstraint_NotInTheTable=Constraint '{0}' does not belong to this DataTable.
DataConstraint_OutOfRange=Cannot find constraint {0}.
DataConstraint_Duplicate=Constraint matches constraint named {0} already in collection.
DataConstraint_DuplicateName=A Constraint named '{0}' already belongs to this DataTable.
DataConstraint_UniqueViolation=These columns don't currently have unique values.
DataConstraint_ForeignTable=These columns don't point to this table.
DataConstraint_ParentValues=This constraint cannot be enabled as not all values have corresponding parent values.
DataConstraint_AddFailed=This constraint cannot be added since ForeignKey doesn't belong to table {0}.
DataConstraint_RemoveFailed=Cannot remove a constraint that doesn't belong to this table.
DataConstraint_NeededForForeignKeyConstraint=Cannot remove unique constraint '{0}'. Remove foreign key constraint '{1}' first.
DataConstraint_CascadeDelete=Cannot delete this row because constraints are enforced on relation {0}, and deleting this row will strand child rows.
DataConstraint_CascadeUpdate=Cannot make this change because constraints are enforced on relation {0}, and changing this value will strand child rows.
DataConstraint_ClearParentTable=Cannot clear table {0} because ForeignKeyConstraint {1} enforces constraints and there are child rows in {2}.
DataConstraint_ForeignKeyViolation=ForeignKeyConstraint {0} requires the child key values ({1}) to exist in the parent table.
DataConstraint_BadObjectPropertyAccess=Property not accessible because '{0}'.
DataConstraint_RemoveParentRow=Cannot remove this row because it has child rows, and constraints on relation {0} are enforced.
DataConstraint_AddPrimaryKeyConstraint=Cannot add primary key constraint since primary key is already set for the table.

DataKey_TableMismatch=Cannot create a Key from Columns that belong to different tables.
DataKey_NoColumns=Cannot have 0 columns.
DataKey_TooManyColumns=Cannot have more than {0} columns.
DataKey_DuplicateColumns=Cannot create a Key when the same column is listed more than once: '{0}'
DataKey_SortLength=sortOrder array must be null or the same length as the columns array.
DataKey_RemovePrimaryKey=Cannot remove unique constraint since it's the primary key of a table.
DataKey_RemovePrimaryKey1=Cannot remove unique constraint since it's the primary key of table {0}.

DataRelation_ColumnsTypeMismatch=Parent Columns and Child Columns don't have type-matching columns.
DataRelation_KeyColumnsIdentical=ParentKey and ChildKey are identical.
DataRelation_KeyLengthMismatch=ParentColumns and ChildColumns should be the same length.
DataRelation_KeyZeroLength=ParentColumns and ChildColumns must not be zero length.
DataRelation_ForeignRow=The row doesn't belong to the same DataSet as this relation.
DataRelation_NoName=RelationName is required when it is part of a DataSet.
DataRelation_Foreign=Relation {0} doesn't belong to this DataSet.
DataRelation_ForeignTable=GetChildRows requires a row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_ForeignDataSet=This relation should connect two tables in this DataSet to be added to this DataSet.
DataRelation_GetParentRowTableMismatch=GetParentRow requires a row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_SetParentRowTableMismatch=SetParentRow requires a child row whose Table is {0}, but the specified row's Table is {1}.
DataRelation_DataSetMismatch=Cannot have a relationship between tables in different DataSets.
DataRelation_TablesInDifferentSets=Cannot create a relation between tables in different DataSets.
DataRelation_AlreadyExists=A relation already exists for these child columns.
DataRelation_DoesNotExist=This relation doesn't belong to this relation collection.
DataRelation_AlreadyInOtherDataSet=This relation already belongs to another DataSet.
DataRelation_AlreadyInTheDataSet=This relation already belongs to this DataSet.
DataRelation_DuplicateName=A Relation named '{0}' already belongs to this DataSet.
DataRelation_NotInTheDataSet=Relation {0} does not belong to this DataSet.
DataRelation_OutOfRange=Cannot find relation {0}.
DataRelation_TableNull=Cannot create a collection on a null table.
DataRelation_TableWasRemoved=The table this collection displays relations for has been removed from its DataSet.
DataRelation_ChildTableMismatch=Cannot add a relation to this table's ParentRelation collection where this table isn't the child table.
DataRelation_ParentTableMismatch=Cannot add a relation to this table's ChildRelation collection where this table isn't the parent table.
DataRelation_RelationNestedReadOnly=Cannot set the 'Nested' property to false for this relation.
DataRelation_TableCantBeNestedInTwoTables=The same table ({0}) cannot be the child table in two nested relations.
DataRelation_LoopInNestedRelations=The table ({0}) cannot be the child table to itself in nested relations.
DataRelation_CaseLocaleMismatch=Cannot add a DataRelation or Constraint that has different Locale or CaseSensitive settings between its parent and child tables.

DataRow_NotInTheDataSet=The row doesn't belong to the same DataSet as this relation.
DataRow_NotInTheTable=Cannot perform this operation on a row not in the table.
DataRow_ParentNotInTheTable=Cannot perform this operation on a parent row not in the table.
DataRow_ChildNotInTheTable=Cannot perform this operation on a child row not in the table.
DataRow_ParentRowNotInTheDataSet=This relation and child row don't belong to same DataSet.
DataRow_EditInRowChanging=Cannot change a proposed value in the RowChanging event.
DataRow_EndEditInRowChanging=Cannot call EndEdit inside an OnRowChanging event.
DataRow_BeginEditInRowChanging=Cannot call BeginEdit inside the RowChanging event.
DataRow_CancelEditInRowChanging=Cannot call CancelEdit inside an OnRowChanging event.  Throw an exception to cancel this update.
DataRow_DeleteInRowDeleting=Cannot call Delete inside an OnRowDeleting event.  Throw an exception to cancel this delete.
DataRow_ValuesArrayLength=Input array is longer than the number of columns in this table.
DataRow_NoCurrentData=There is no Current data to access.
DataRow_NoOriginalData=There is no Original data to access.
DataRow_NoProposedData=There is no Proposed data to access.
DataRow_RemovedFromTheTable=This row has been removed from a table and does not have any data.  BeginEdit() will allow creation of new data in this row.
DataRow_DeletedRowInaccessible=Deleted row information cannot be accessed through the row.
DataRow_InvalidVersion=Version must be Original, Current, or Proposed.
DataRow_OutOfRange=There is no row at position {0}.
DataRow_RowInsertOutOfRange=The row insert position {0} is invalid.
DataRow_RowInsertTwice=The rowOrder value={0} has been found twice for table named '{1}'.
DataRow_RowInsertMissing=Values are missing in the rowOrder sequence for table '{0}'.
DataRow_RowOutOfRange=The given datarow is not in the current DataRowCollection.
DataRow_KeyOutOfRange=Cannot find row with primary key {0}.
DataRow_KeysOutOfRange=Cannot find row with key values {0}.
DataRow_AlreadyInOtherCollection=This row already belongs to another table.
DataRow_AlreadyInTheCollection=This row already belongs to this table.
DataRow_Modifying=Cannot perform this operation on a modifying row.
DataRow_AlreadyDeleted=Cannot delete this row since it's already deleted.
DataRow_Empty=This row is empty.
DataRow_AlreadyRemoved=Cannot remove a row that's already been removed.
DataRow_MultipleParents=A child row has multiple parents.

DataSet_SetNameToEmpty=Cannot change the name of the DataSet to an empty string.
DataSet_SetDataSetNameConflicting=The name '{0}' is invalid. A DataSet cannot have the same name of the DataTable.
DataSet_HasData=Cannot perform this operation because the current DataSet already has data.
DataSet_HasSchema=Cannot perform this operation because the current DataSet already has schema.
DataSet_UnsupportedSchema=The schema namespace is invalid. Please use this one instead: {0}.
DataSet_CannotChangeCaseLocale=Cannot change CaseSensitive or Locale property. This change would lead to at least one DataRelation or Constraint to have different Locale or CaseSensitive settings between its related tables.

DataTable_ForeignPrimaryKey=PrimaryKey columns do not belong to this table.
DataTable_CannotAddToSimpleContent=Cannot add a nested relation or an element column to a table containing a SimpleContent column.
DataTable_NoName=TableName is required when it is part of a DataSet.
DataTable_MultipleSimpleContentColumns=DataTable already has a simple content column.
DataTable_MissingPrimaryKey=Table doesn't have a primary key.
DataTable_InvalidSortString= {0} isn't a valid Sort string entry.

DataTable_DuplicateName=A DataTable named '{0}' already belongs to this DataSet.
DataTable_SelfnestedDatasetConflictingName=The table ({0}) cannot be the child table to itself in a nested relation: the DataSet name conflicts with the table name.
DataTable_DatasetConflictingName=The name '{0}' is invalid. A DataTable cannot have the same name of the DataSet.
DataTable_AlreadyInOtherDataSet=DataTable already belongs to another DataSet.
DataTable_AlreadyInTheDataSet=DataTable already belongs to this DataSet.
DataTable_NotInTheDataSet=Table {0} does not belong to this DataSet.
DataTable_OutOfRange=Cannot find table {0}.
DataTable_InRelation=Cannot remove a table that has existing relations.  Remove relations first.
DataTable_InConstraint=Cannot remove table {0}, because it referenced in ForeignKeyConstraint {1}.  Remove the constraint first.
DataTable_CaseHasToBeTheSame=Cannot set CaseSensitive property to be a different value from the containing DataSet.
DataTable_LocaleHasToBeTheSame=Cannot set Locale property to be a different value from the containing DataSet.

DataMerge_MissingDefinition=Target DataSet missing definition for {0}.
DataMerge_MissingConstraint=Target DataSet missing {0} {1}.
DataMerge_DataTypeMismatch=<target>.{0} and <source>.{0} have conflicting properties: DataType property mismatch.
DataMerge_PrimaryKeyMismatch=<target>.PrimaryKey and <source>.PrimaryKey have different Length.
DataMerge_PrimaryKeyColumnsMismatch=Mismatch columns in the PrimaryKey : <target>.{0} versus <source>.{1}.
DataMerge_ReltionKeyColumnsMismatch=Relation {0} cannot be merged, because keys have mismatch columns.
DataMerge_MissingColumnDefinition=Target table {0} missing definition for column {1}.

DataIndex_RecordStateRange=The RowStates parameter must be set to a valid combination of values from the DataViewRowState enumeration.
DataIndex_FindWithoutSortOrder=Find finds a row based on a Sort order, and no Sort order is specified.
DataIndex_KeyLength=Expecting {0} value(s) for the key being indexed, but received {1} value(s).

DataStorage_AggregateException=Invalid usage of aggregate function {0}() and Type: {1}.
DataStorage_InvalidStorageType=Invalid storage type: {0}.
DataStorage_ProblematicChars=The DataSet Xml persistency does not support the value '{0}' as Char value, please use Byte storage instead.

DataView_SetFailed=Cannot set {0}.
DataView_SetDataSetFailed=Cannot change DataSet on a DataViewManager that's already the default view for a DataSet.
DataView_SetRowStateFilter=RowStateFilter cannot show ModifiedOriginals and ModifiedCurrents at the same time.
DataView_SetTable=Cannot change Table property on a DefaultView or a DataView coming from a DataViewManager.
DataView_CanNotSetDataSet=Cannot change DataSet property once it is set.
DataView_CanNotUseDataViewManager=DataSet must be set prior to using DataViewManager.
DataView_CanNotSetTable=Cannot change Table property once it is set.
DataView_CanNotUse=DataTable must be set prior to using DataView.
DataView_CanNotBindTable=Cannot bind to DataTable with no name.
DataView_SetIListObject=Cannot set an object into this list.
DataView_AddNewNotAllowNull=Cannot call AddNew on a DataView where AllowNew is false.
DataView_AddNewAddNew=Already adding a new row. Cannot have more than one AddNew row open at a time.
DataView_NotOpen=DataView is not open.
DataView_CreateChildView=The relation is not parented to the table to which this DataView points.
DataView_CanNotDelete=Cannot delete on a DataSource where AllowDelete is false.
DataView_CanNotEdit=Cannot edit on a DataSource where AllowEdit is false.
DataView_GetElementIndex=Index {0} is not non-negative and below total rows count.
DataView_AddExternalObject=Cannot add external objects to this list.
DataView_CanNotClear=Cannot clear this list.
DataView_InsertExternalObject=Cannot insert external objects to this list.
DataView_RemoveExternalObject=Cannot remove objects not in the list.

DataROWView_PropertyNotFound={0} is neither a DataColumn nor a DataRelation for table {1}.

ObjectStoreTable_NewRecord=Couldn't create new instance of {0}.
Range_Argument=Min ({0}) must be less than or equal to max ({1}) in a Range object.
Range_NullRange=This is a null range.
RecordManager_MinimumCapacity=MinimumCapacity must be non-negative.

; CodeGen Errors
CodeGen_InvalidIdentifier=Cannot generate identifier for name '{0}'.
CodeGen_TypeCantBeNull=Column '{0}': Type '{1}' cannot be null.
CodeGen_NoCtor0=Column '{0}': Type '{1}' does not have parameterless constructor.
CodeGen_NoCtor1=Column '{0}': Type '{1}' does not have constructor with string argument.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Data category / metadata resources



; DataDocumentNavigator and DataDocument errors
DataDom_Foliation=Invalid foliation.
DataDom_TableNameChange=Cannot change the table name once the associated DataSet is mapped to a loaded XML document.
DataDom_TableNamespaceChange=Cannot change the table namespace once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnNameChange=Cannot change the column name once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnNamespaceChange=Cannot change the column namespace once the associated DataSet is mapped to a loaded XML document.
DataDom_ColumnMappingChange=Cannot change the ColumnMapping property once the associated DataSet is mapped to a loaded XML document.
DataDom_TableColumnsChange=Cannot add or remove columns from the table once the DataSet is mapped to a loaded XML document.
DataDom_DataSetTablesChange=Cannot add or remove tables from the DataSet once the DataSet is mapped to a loaded XML document.
DataDom_DataSetNestedRelationsChange=Cannot add, remove, or change Nested relations from the DataSet once the DataSet is mapped to a loaded XML document.
DataDom_DataSetNull=The DataSet parameter is invalid. It cannot be null.
DataDom_DataSetNameChange=Cannot change the DataSet name once the DataSet is mapped to a loaded XML document.
DataDom_CloneNode=This type of node cannot be cloned: {0}.
DataDom_MultipleLoad=Cannot load XmlDataDocument if it already contains data. Please use a new XmlDataDocument.
DataDom_MultipleDataSet=DataSet can be associated with at most one XmlDataDocument. Cannot associate the DataSet with the current XmlDataDocument because the DataSet is already associated with another XmlDataDocument.
DataDom_EnforceConstraintsShouldBeOff=Please set DataSet.EnforceConstraints == false before trying to edit XmlDataDocument using XML operations.
DataDom_NotSupport_GetElementById=GetElementById() is not supported on DataDocument.
DataDom_NotSupport_EntRef=Cannot create entity references on DataDocument.
DataDom_NotSupport_Clear=Clear function on dataset and datatable is not supported on XmlDataDocument.


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Errors thrown by the strong typed classes
StrongTyping_CannotRemoveColumn=Cannot remove column since it is built in to this dataSet.
StrongTyping_CananotRemoveRelation=Cannot remove relation since it is built in to this dataSet.
propertyChangedEventDescr=Occurs whenever a property for this control changes.
collectionChangedEventDescr=Occurs whenever this collection's membership changes.
StrongTyping_CananotAccessDBNull=Cannot get value because it is DBNull.

; END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\system\test\data.xml ===
<Data>    
    <Customer>
        <Name>Abe</Name>     
        <Address>1 MS Way</Address>
        <CustID>101</CustID>
	<Data_Id>data_id_Abe_1</Data_Id>
    </Customer>
    <Customer>
        <Name>Bob</Name>     
        <Address>2 MS Way</Address>
	<Data_Id>data_id_Bob_2</Data_Id>
        <CustID>102</CustID>
    </Customer>
    <Customer>
        <Name>Chip</Name>     
	<Data_Id>data_id_Chip_3</Data_Id>
        <Address>3 MS Way</Address>
        <CustID>103</CustID>
    </Customer>
    
    <Order>
        <Name>Apple</Name>     
        <Price>1</Price>
        <CustID>101</CustID>
    </Order>
    <Order>
        <Name>Orange</Name>     
        <Price>1</Price>
        <CustID>101</CustID>
    </Order>
    <Order>
        <Name>Apple</Name>     
        <Price>2</Price>
        <CustID>101</CustID>
    </Order>
    <Order>
        <Name>Pear</Name>     
        <Price>3</Price>
        <CustID>102</CustID>
    </Order>
    <Order>
        <Name>Grape</Name>     
        <Price>4</Price>
        <CustID>103</CustID>
    </Order>
</Data>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\system\test\domdata.xml ===
<?xml version='1.0' ?>

<Data><Customer><Name>Abe</Name><Address>1 MS Way</Address><CustID>101</CustID><Data_Id>data_id_Abe_1</Data_Id></Customer><Customer><Name>Bob</Name><Address>2 MS Way</Address><Data_Id>data_id_Bob_2</Data_Id><CustID>102</CustID></Customer><Customer><Name>Chip</Name><Data_Id>data_id_Chip_3</Data_Id><Address>3 MS Way</Address><CustID>103</CustID></Customer><Order><Name>Apple</Name><Price>1</Price><CustID>101</CustID></Order><Order><Name>Orange</Name><Price>1</Price><CustID>101</CustID></Order><Order><Name>Apple</Name><Price>2</Price><CustID>101</CustID></Order><Order><Name>Pear</Name><Price>3</Price><CustID>102</CustID></Order><Order><Name>Grape</Name><Price>4</Price><CustID>103</CustID></Order></Data>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\system\test\schema.xml ===
<NS0:Schema xmlns:NS0="urn:schemas-microsoft-com:xml-data"></NS0:Schema>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\data\system\test\school.xml ===
<?xml version="1.0" encoding="utf-8" ?>
<root>
<Schema xdo:DataSetName="School" xmlns:xdo="urn:schemas-microsoft-com:xml-xdo" xmlns:dt="urn:schemas-microsoft-com:datatypes" xmlns="urn:schemas-microsoft-com:xml-data" name="School">
    <ElementType content="eltOnly" name="Teachers">
        <element xdo:PrimaryKey="True" xdo:Unique="True" type="TeacherID"></element>
        <element type="Name"></element>
    </ElementType>
    <ElementType dt:type="int" content="textOnly" name="TeacherID"></ElementType>
    <ElementType dt:type="string" content="textOnly" name="Name"></ElementType>
    <ElementType content="eltOnly" name="Courses">
        <element xdo:PrimaryKey="True" xdo:Unique="True" type="CourseID"></element>
        <element type="Name"></element>
    </ElementType>
    <ElementType dt:type="int" content="textOnly" name="CourseID"></ElementType>
    <ElementType content="eltOnly" name="Students">
        <element xdo:PrimaryKey="True" xdo:Unique="True" type="StudentID"></element>
        <element type="Name"></element>
    </ElementType>
    <ElementType dt:type="int" content="textOnly" name="StudentID"></ElementType>
    <ElementType content="eltOnly" name="Instructs">
        <element type="CourseID"></element>
        <element type="TeacherID"></element>
    </ElementType>
    <ElementType content="eltOnly" name="Attends">
        <element type="CourseID"></element>
        <element type="StudentID"></element>
    </ElementType>
    <xdo:Relation xdo:Nested="False" xdo:RelationName="CoursesInstructs" xdo:childkey="CourseID" xdo:parentkey="CourseID" xdo:child="Instructs" xdo:parent="Courses" name="CoursesInstructs"></xdo:Relation>
    <xdo:Relation xdo:Nested="False" xdo:RelationName="TeachersInstructs" xdo:childkey="TeacherID" xdo:parentkey="TeacherID" xdo:child="Instructs" xdo:parent="Teachers" name="TeachersInstructs"></xdo:Relation>
    <xdo:Relation xdo:Nested="False" xdo:RelationName="StudentsAttends" xdo:childkey="StudentID" xdo:parentkey="StudentID" xdo:child="Attends" xdo:parent="Students" name="StudentsAttends"></xdo:Relation>
    <xdo:Relation xdo:Nested="False" xdo:RelationName="CoursesAttends" xdo:childkey="CourseID" xdo:parentkey="CourseID" xdo:child="Attends" xdo:parent="Courses" name="CoursesAttends"></xdo:Relation>
</Schema>
<School xmlns:xdo="urn:schemas-microsoft-com:xml-xdo" xmlns="x-schema:#School">
<Teachers>
    <TeacherID>0</TeacherID>
    <Name>Mr Apple</Name>
</Teachers>
<Teachers>
    <TeacherID>1</TeacherID>
    <Name>Mrs Blue</Name>
</Teachers>
<Courses>
    <CourseID>0</CourseID>
    <Name>Chem 01</Name>
</Courses>
<Courses>
    <CourseID>1</CourseID>
    <Name>Art 01</Name>
</Courses>
<Courses>
    <CourseID>2</CourseID>
    <Name>Chem 02</Name>
</Courses>
<Students>
    <StudentID>0</StudentID>
    <Name>Abe</Name>
</Students>
<Students>
    <StudentID>1</StudentID>
    <Name>Brock</Name>
</Students>
<Instructs>
    <CourseID>0</CourseID>
    <TeacherID>0</TeacherID>
</Instructs>
<Instructs>
    <CourseID>1</CourseID>
    <TeacherID>1</TeacherID>
</Instructs>
<Instructs>
    <CourseID>2</CourseID>
    <TeacherID>1</TeacherID>
</Instructs>
<Attends>
    <CourseID>2</CourseID>
    <StudentID>0</StudentID>
</Attends>
<Attends>
    <CourseID>1</CourseID>
    <StudentID>1</StudentID>
</Attends>
</School>
</root>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\dataoracleclient\system\system.data.oracleclient.txt ===
[strings]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; OracleClient Exceptions
;

ADP_InternalError=Internal error not handled ({0}).
ADP_NoMessageAvailable=Unable to get error message ({0}) ({1}).

ADP_BadBindValueType=Cannot bind type {0} as {1}.
ADP_BadOracleClientVersion=System.Data.OracleClient requires Oracle client software version 8.1.7 or greater.
ADP_BufferExceeded=The offset and count values specified exceed the buffer provided.
ADP_CannotDeriveOverloaded=Cannot derive parameters for overloaded stored procedure or function.
ADP_CannotOpenLobWithDifferentMode=Cannot open the LOB object with mode {0} when it is already open in mode {1}.
ADP_ChangeDatabaseNotSupported=Oracle does not support changing databases.
ADP_ClosedConnectionError=Invalid operation. The connection is closed.
ADP_ClosedDataReaderError=Invalid operation. The OracleDataReader is closed.
ADP_CollectionIsNotParent=The {0} with {1} '{2}' is already contained by another {3}. 
ADP_CollectionIsParent=The {0} with {1} '{2}' is already contained by this {3}. 
ADP_CommandTextRequired={0}: The CommandText property has not been initialized.
ADP_ConnectionAlreadyOpen=The connection is already open (state={0}).
ADP_ConnectionRequired={0}: The Connection property has not been initialized.
ADP_ConnectionStringSyntax=Format of the initialization string does not conform to specification starting at index {0}.
ADP_CouldNotAttachToTransaction=Could not attach to the distributed transaction: {1} returned 0x{0}.
ADP_CouldNotCreateEnvironment=Could not create an environment: OCIEnvCreate returned {0:d}.
ADP_DataIsNull=The value is Null.
ADP_DataReaderNoData=No data exists for the row or column.
ADP_DeriveParametersNotSupported={0} DeriveParameters only supports CommandType.StoredProcedure, not CommandType.{1}
ADP_DistribTxRequiresOracle9i=Distributed Transactions require Oracle9i client software.
ADP_DistribTxRequiresOracleServicesForMTS=Distributed Transactions require Oracle9i client and Oracle Services for Microsoft Transaction Server software.
ADP_DynamicSQLJoinUnsupported=Dynamic SQL generation is not supported against multiple base tables.
ADP_DynamicSQLNestedQuote=Dynamic SQL generation is not supported against table names '{0}' that contain the QuotePrefix or QuoteSuffix character '{1}'.
ADP_DynamicSQLNoTableInfo=Dynamic SQL generation is not supported against a SelectCommand that does not return any base table information.
ADP_DynamicSQLNoKeyInfo=Dynamic SQL generation for the {0} is not supported against a SelectCommand that does not return any key column information.
ADP_InputRefCursorNotSupported=parameter '{0}': OracleType.Cursor parameters may only be ParameterDirection.Output parameters.
ADP_InternalPoolerError=Internal Pooler Error: {0}
#if POSTEVERETT
;ADP_InvalidCatalogLocation=The CatalogLocation enumeration value, {0}, is invalid.
#endif //POSTEVERETT
ADP_InvalidCommandType=The CommandType enumeration value, {0}, is invalid.
ADP_InvalidConnectionOptionLength=Invalid length for connection option '{0}', maximum length is {1}.
ADP_InvalidConnectionOptionValue=Invalid value for key '{0}'.
ADP_InvalidDataLength=Data length '{0}' is less than 0.
ADP_InvalidDataType=The parameter data type of {0} is invalid.
ADP_InvalidDataTypeForValue=Invalid data type {0} for parameter value of type {1}.
ADP_InvalidDataRowVersion=Invalid DataRow Version enumeration value: {0}.
ADP_InvalidDbType=Value is not valid for DbType: {0}.
ADP_InvalidDestinationBufferIndex=Invalid destination buffer (size of {0}) offset: {1}
ADP_InvalidMinMaxPoolSizeValues=Invalid min or max pool size values, min pool size cannot be greater than the max pool size.
ADP_InvalidOracleType=Value is not valid for OracleType: {0}.
ADP_InvalidOffsetValue=Invalid parameter Offset value '{0}'. The value must be greater than or equal to 0. 
ADP_InvalidParameterDirection=Invalid ParameterDirection enumeration value: {0}.
ADP_InvalidSeekOrigin=SeekOrigin is not valid {0}.
ADP_InvalidSizeValue=Invalid parameter Size value '{0}'. The value must be greater than or equal to 0.
ADP_InvalidSourceBufferIndex=Invalid source buffer (size of {0}) offset: {1}.
ADP_InvalidSourceOffset=Value must be between {0} and {1}.
ADP_InvalidStatementType=Invalid Statement Type {0}.
ADP_InvalidUpdateRowSource=The UpdateRowSource enumeration value, {0}, is invalid.
ADP_InvalidXMLBadVersion=Invalid Xml; can only parse elements of version one.
ADP_KeywordNotSupported=Keyword not supported: '{0}'.
ADP_LobAmountExceeded=Must be >= 0 and < 4GB.
ADP_LobAmountMustBeEven=CLOB and NCLOB require even number of bytes for this argument.
ADP_LobPositionMustBeEven=CLOB and NCLOB require even number of bytes for OracleLob.Position when modifying the lob.
ADP_LobWriteInvalidOnNull=Null LOBs may not be modified.
ADP_LobWriteRequiresTransaction=Modifying a LOB requires that the connection be transacted.
ADP_MissingSourceCommand=The DataAdapter.SelectCommand property must be initialized.
ADP_MissingSourceCommandConnection=The DataAdapter.SelectCommand.Connection property must be initialized;
ADP_MustInstallNewMtxOciDistribTx=Failed to initialize distributed transaction.  Please see KB article Q322343.
ADP_MustInstallNewMtxOciLONG=LONG/LONG RAW columns are not supported with current configuration.  Please see KB article Q322343.
ADP_MustBePositive=Must be a positive value.
#if POSTEVERETT
;ADP_NoCatalogLocationChange=The CatalogLocation, CatalogSeparator, and SchemaSeparator properties can't be changed after an Insert, Update, or Delete command has been generated.
#endif //POSTEVERETT
ADP_NoCommandText=You must specify the CommandText before executing.
ADP_NoConnectionString=The ConnectionString property has not been initialized.
ADP_NoData=Invalid attempt to read when no data is present.
ADP_NoLocalTransactionInDistributedContext=You may not begin a local transaction while in a distributed transaction.
ADP_NoOptimizedDirectTableAccess=This provider does not support direct table access.
ADP_NoParallelTransactions=OracleConnection does not support parallel transactions.
ADP_NoQuoteChange=The QuotePrefix and QuoteSuffix properties cannot be changed after an Insert, Update, or Delete command has been generated.
ADP_NotAPermissionElement='elem' was not a permission element.
ADP_OpenConnectionPropertySet={0} may not be set on an open connection.
ADP_OpenConnectionRequired={0} requires an open and available connection. The current state of the connection is {1}.{2}.
ADP_OperationFailed=Oracle Call {0} failed with return code {1} but error message text was not available.
ADP_OperationResultedInOverflow=Operation resulted in an overflow condition.
ADP_ParameterIndexOutOfRange=Index {0} outside the scope of the parameter array.
ADP_ParameterNameNotFound=Parameter '{0}' not found.
ADP_ParameterNotFound=Parameter not found.
ADP_ParameterSizeIsMissing=Parameter '{0}': No size set for variable length data type: {1}.
ADP_ParameterSizeIsTooLarge=Parameter '{0}': Value is too large to bind.
ADP_PleaseUninstallTheBeta=It appears that the Beta version of MTxOCI8.DLL is installed.  Please see KB article Q322343.
ADP_PooledOpenTimeout=Timeout expired.  The timeout period elapsed prior to obtaining a connection from the pool.  This may have occurred because all pooled connections were in use and max pool size was reached. 
ADP_ReadOnlyLob=Lob is read-only.
ADP_SeekBeyondEnd=Cannot seek to before beginning or after end of the LOB.
ADP_SQLParserInternalError=Internal DBSqlParser failure.
ADP_SyntaxErrorExpectedCommaAfterColumn=Syntax Error: Expecting ',' or 'FROM' after column alias or '*'.
ADP_SyntaxErrorExpectedCommaAfterTable=Syntax Error: Expecting ',' or 'WHERE' (etc.) after table alias.
ADP_SyntaxErrorExpectedIdentifier=Syntax Error: Expecting identifier or quoted identifier.
ADP_SyntaxErrorExpectedNextPart=Syntax Error: Expecting '.', identifier or quoted identifier.
ADP_SyntaxErrorMissingParenthesis=Syntax Error: right parenthesis without opening left parenthesis.
ADP_SyntaxErrorTooManyNameParts=Syntax Error: too many name parts.
ADP_SyntaxErrorUnexpectedFrom=Syntax Error: found 'FROM' inside an expression.
ADP_TransactionCompleted=This OracleTransaction has completed; it is no longer usable.
ADP_TransactionConnectionMismatch=The Transaction object is not associated with the Connection object.
ADP_TransactionPresent=Cannot enlist in the distributed transaction because an existing transaction is in progress on the connection.  Finish existing transaction and retry.
ADP_TransactionRequired_Execute=Execute requires the Command object to have a Transaction object when the Connection object assigned to the Command is in a pending local transaction.  The Transaction property of the Command has not been initialized. 
ADP_TypeNotSupported=Unsupported Oracle data type {0} encountered.
ADP_UnexpectedReturnCode=Unexpected return code: {0}
ADP_UnknownDataTypeCode=Unknown datatype {0} for parameter value of type {1}.
ADP_UnsupportedIsolationLevel=Invalid IsolationLevel parameter: must be ReadCommitted or Serializable.
ADP_WrongArgumentType=argument {0} must be of type {1}.
ADP_WrongType=Operation on type {0} attempted with target of wrong type.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Property Categories
;
OracleCategory_Behavior=Behavior
OracleCategory_Data=Data
OracleCategory_Fill=Fill
OracleCategory_InfoMessage=InfoMessage 
OracleCategory_StateChange=StateChange 
OracleCategory_Update=Update


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Property Descriptions
;

; OracleCommand Object
;
DbCommand_CommandText=Command text to execute.
DbCommand_CommandType=How to interpret the CommandText.
DbCommand_Connection=Connection used by the command.
DbCommand_Transaction=The transaction used by the command.
DbCommand_UpdatedRowSource=When used by a DataAdapter.Update, how command results are applied to the current DataRow.
DbCommand_Parameters=The parameters collection.


; OracleCommandBuilder Object
;
OracleCommandBuilder_DataAdapter=The DataAdapter for which to automatically generate OracleCommands
OracleCommandBuilder_QuotePrefix=The prefix string wrapped around Oracle identifier names to enforce case sensitivity
OracleCommandBuilder_QuoteSuffix=The suffix string wrapped around Oracle identifier names to enforce case sensitivity


; OracleConnection Object
;
OracleConnection_ConnectionString=Information used to connect to an Oracle server.
OracleConnection_DataSource=Current data source, 'Data Source=X' in the connection string.
OracleConnection_InfoMessage=Event triggered when messages arrive from the data source.
OracleConnection_StateChange=Event triggered when the connection changes state.
OracleConnection_State=The ConnectionState indicating whether the connection is open or closed.
OracleConnection_ServerVersion=Version of the Oracle server.


; OracleDataAdapter Object
;
DbDataAdapter_DeleteCommand=Used during Update for deleted rows in DataSet.
DbDataAdapter_InsertCommand=Used during Update for new rows in DataSet.
DbDataAdapter_RowUpdated=Event triggered before every DataRow during Update.
DbDataAdapter_RowUpdating=Event triggered after every DataRow during Update.
DbDataAdapter_SelectCommand=Used during Fill or FillSchema.
DbDataAdapter_UpdateCommand=Used during Update for modified rows in DataSet.


; OracleParameter Object
;
DataParameter_DbType=The parameter generic type. 
DataParameter_Direction=Input, output, or bidirectional parameter.
DataParameter_IsNullable=a design-time property used for strongly typed code-generation.
DataParameter_ParameterName=Name of the parameter.
DataParameter_SourceColumn=When used by a DataAdapter.Update, the source column name that is used to find the DataSetColumn name in the ColumnMappings. This is to copy a value between the parameter and a datarow.
DataParameter_SourceVersion=When used by a DataAdapter.Update (UpdateCommand only), the version of the DataRow value that is used to update the data source.
DataParameter_Value=Value of the parameter.

DbDataParameter_Precision=For decimal, numeric, varnumeric DBTypes.
DbDataParameter_Scale=For decimal, numeric, varnumeric DBTypes.
DbDataParameter_Size=Size of variable length data types (string & arrays).

OracleParameter_Offset=Offset in variable length data types.
OracleParameter_OracleType=The parameter native type. 


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Other Stuff
;

SqlMisc_NullString=Null

; END
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\designer\drawing\system.drawing.design.sr.txt ===
# 
imageFileDescription=All image files
ColorEditorSystemTab=System
ColorEditorStandardTab=Web
bitmapFileDescription=Bitmap files
ColorEditorPaletteTab=Custom
iconFileDescription=Icon files
TextParseFailedFormat=Failed to parse Text("{0}") expected text in the format "{1}".
metafileFileDescription=Metafiles

#=------------------------------------------------------------------=
# ContentAlignmentEditor resources
#
ContentAlignmentEditorTopLeftAccName=Top Left
ContentAlignmentEditorTopCenterAccName=Top Center
ContentAlignmentEditorTopRightAccName=Top Right
ContentAlignmentEditorMiddleLeftAccName=Middle Left
ContentAlignmentEditorMiddleCenterAccName=Middle Center
ContentAlignmentEditorMiddleRightAccName=Middle Right
ContentAlignmentEditorBottomLeftAccName=Bottom Left
ContentAlignmentEditorBottomCenterAccName=Bottom Center
ContentAlignmentEditorBottomRightAccName=Bottom Right
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\designer\system\system.design.txt ===
[strings]

### File system.diagnostics.txt ###
VerbEditorDefault=(Default)
WorkingDirectoryEditorLabel=Select the folder that the process will use as an initial working directory.
FSWPathEditorLabel=Select the folder to watch.

### File System.ComponentModel.Design.Compmod.txt ###

#=------------------------------------------------------------------=
#
# Global values shared with component model.  These must be kept
# in sync with CompMod
#

#=------------------------------------------------------------------=
# ArrayEditor resources
#

#=------------------------------------------------------------------=
# BinaryEditor resources
#
BinaryEditorFileError=Error writing to file.
BinaryEditorTitle=Byte Array Property Editor
BinaryEditorAllFiles=All Files
BinaryEditorSaveFile=Save File As
BinaryEditorFileName=ByteArray

#=------------------------------------------------------------------=
# AnchorEditor resources
#
AnchorEditorRightAccName=Right
AnchorEditorLeftAccName=Left
AnchorEditorTopAccName=Top
AnchorEditorBottomAccName=Bottom

#=------------------------------------------------------------------=
# CollectionEditor resources
#
CollectionEditorCaption={0} Collection Editor
CollectionEditorProperties={0} &Properties:
CollectionEditorPropertiesMultiSelect=Multi-Select &Properties:
CollectionEditorPropertiesNone=&Properties:
CollectionEditorCantRemoveItem=The item '{0}' cannot be removed.
CollectionEditorUndoBatchDesc=Add or remove {0} objects
CollectionEditorInheritedReadOnlySelection=Read-only component(s) selected.

#=------------------------------------------------------------------=
# DockEditor resources
#
DockEditorNoneAccName=None
DockEditorRightAccName=Right
DockEditorLeftAccName=Left
DockEditorTopAccName=Top
DockEditorBottomAccName=Bottom
DockEditorFillAccName=Fill

#=------------------------------------------------------------------=
# TreeNodeCollectionEditor resources
#

#=------------------------------------------------------------------=
# ComponentDesigner resources
#
ComponentDesignerAddEvent=Adding event '{0}'

#=------------------------------------------------------------------=
# Localizer resources
#
LocalizerManualReload=You must close and re-open the designer for this change to take effect.
LocalizedResourceWarning=You have just added a control or component while localizing.  While in the current language, the changes you make for this object will be persisted to both the current language resource file and the invariant language resource file.  Remember to change the language back to the invariant language and update any properties for this object. 

#=------------------------------------------------------------------=
# InheritanceService resources
#

StringCollectionEditorTitle=String Collection Editor
CancelCaption=Cancel
OKCaption=OK

#=------------------------------------------------------------------=
# Serializer resources
#

# Internal serializer error, contact component vendor.  The serializer for the component returned
# a code dom object that didn't match what we expected.
SerializerBadElementType="Bad element type.  This serializer expects an element of type '{0}'.

# Contact vendor.
SerializerMissingService=A service required for generating and parsing source code is missing.  The service name is {0}.

# Contact vendor.
SerializerNoSerializerForComponent=Visual Studio cannot save or load instances of the type {0} because the type doesn't provide any supported way of saving or loading itself.

# Reference not found.  Make sure type is referenced, and that any assemblies the type requires are also referenced.  Most
# common problem is a control in the solution that has not been built.
SerializerTypeNotFound=Could not find type '{0}'.  Please make sure that the assembly that contains this type is referenced.  If this type is a part of your development project, make sure that the project has been successfully built.

# Base class for the designer is abstract. This isn't allowed.
SerializerTypeAbstract=The designer must create an instance of type '{0}' but it cannot because the type is declared as abstract.

# Source code has a reference to "button1", but never declared the variable.
SerializerUndeclaredName=The variable '{0}' is either undeclared or was never assigned.

# Base class of the file doesn't support being designed.  Use code view.

# Two "Button1" entries.

# Generally vendor error, but this can also be caused by complex recursive dependencies between
# components.  Example:  two objects that rely on each other:
# button1.Foo = button2;
# button2.Foo = button1;


# Event hookup but the event isn't on the object.
SerializerNoSuchEvent=The type '{0}' has no event named '{1}'.
SerializerNoSuchField=The type '{0}' has no field named '{1}'.
SerializerNoSuchProperty=The type '{0}' has no property named '{1}'.

# button1.Controls type of property. Controls should always return an object, but it
# didn't here.
SerializerNullNestedProperty=The object '{0}' returned null for the property '{1}' but this is not allowed.


# We only support single dimension arrays.
SerializerInvalidArrayRank=Array rank '{0}' is too high.  Visual Studio can only save and load arrays with a rank of 1.

# Contact vendor.

# This can happen if there is a bad resx file.  Load the file in the XML editor and edit by hand to fix.  Must
# click on "View All Files" above solution explorer to see the resx file first, though.
SerializerResourceException=Error reading resources from the resource file for the culture {0}: {1}
SerializerResourceExceptionInvariant=Error reading resources from the resource file for the default culture: {0}

# Generic wrapper around error.  Embedded error has the help link.
SerializerPropertyGenFailed=Code generation for property '{0}' failed.  Error was: '{1}'

# Happens when the left hand side of a field evaluation failed. For example, Foo.bar, and
# couldn't find the type "Foo".  Also, this can happen if the user tried to create a component
# on a static (Visual Basic shared) variable.
SerializerFieldTargetEvalFailed=The field '{0}' could not be found on the target object.  Make sure that the field is defined as an instance variable on the target object and has the correct scope.

### Files system.winforms.design.sr.txt ###
AXAbout=ActiveX - About...
AXCannotLoadTypeLib=Could not load TypeLib from '{0}'.
AXCannotOverwriteFile=Error writing to output file '{0}'.
AXReadOnlyFile=Cannot overwrite read-only file '{0}'.
AXCompilerError=Compiler errors occured when generating a Windows Forms wrapper for ActiveX control '{0}'. Source code saved in '{1}'.
AXEdit=ActiveX - Edit
AxImportFailed=Failed to import the ActiveX control.  Please ensure it is properly registered.
AXNoActiveXControls=Did not find a registered ActiveX control in '{0}'.
AXNotRegistered=Could not create ActiveX control '{0}' because it is not properly registered.
AXNotValidControl=The control '{0}' is not a valid ActiveX control.
AXProperties=ActiveX - Properties...
AXVerbPrefix=ActiveX -
AdvancedBindingPropertyDescriptorDesc=Advanced binding allows you to bind properties of the control.
AdvancedBindingPropertyDescName=(Advanced)
BaseNodeName=Node
CommandSetAlignByPrimary=Format {0} components (alignment)
CommandSetAlignToGrid=Align {0} components to grid
CommandSetBringToFront=Bring {0} controls to front
CommandSetCutMultiple=Cut {0} Components
CommandSetDelete=Delete {0} components
CommandSetFormatSpacing=Format {0} components (spacing)
CommandSetLockControls=Lock {0} components
CommandSetPaste=Paste {0} components
CommandSetSendToBack= Send {0} controls to back
CommandSetSize=Size {0} components
CommandSetSizeToGrid=Size {0} components to grid
CommandSetUnknownSpacingCommand=Unknown spacing command
CompositionDesignerWaterMark=To add components to your class, drag them from the Server Explorer or Toolbox and use the Properties window to set their properties. To create methods and events for your class, click here to switch to code view.
CompositionDesignerWaterMarkBegin1=52
CompositionDesignerWaterMarkBegin2=71
CompositionDesignerWaterMarkBegin3=179
CompositionDesignerWaterMarkLength1=15
CompositionDesignerWaterMarkLength2=7
CompositionDesignerWaterMarkLength3=33
DataGridAdvancedBindingString=Advanced Data Binding - {0}
DataGridNoneString=(None)
DataGridPopulateError=DataGrid must be bound to a valid Data Source in order to be populated.
DataGridAutoFormatString=&Auto Format
DataGridShowAllString=&Show All
DataSourceLocksItems=Cannot modify the Items collection when the DataSource property is set.
DefaultCaption=(Default)
DesignBindingBadParseString=Couldn't parse binding string {0}
DesignBindingContextRequiredWhenParsing=Context required to parse string {0}
DesignBindingComponentNotFound=Cannot find component {0}
DesignerBatchCreateTool=Creating components in tool '{0}'
DesignerCantParentType=Cannot add component of type '{0}' to container of type '{1}'
DesignerDefaultTab=Windows Forms
UserControlTab=My User Controls
DesignerNoUserControl=The user control '{0}' could not be loaded.  Ensure that the library containing the control has been built and a project reference has been made to the library containing the control.  If you have changed the name of the user control, close and re-open the control's designer to update the toolbox item.
DesignerPropModifiers=Indicates the visibility level of the object.
DesignerBeginDragNotCalled=Call to BeginDrag must succeed before calling drag functions.
DesignerInheritedReadOnly=Inherited control (Private)
DesignerInherited=Inherited control
DesignerPropNotFound=The property '{0}' does not exist on the type '{1}'.
DragDropDragComponents=Drag {0} components
DragDropMoveComponent=Move {0}
DragDropMoveComponents=Move {0} components
DragDropSizeComponent=Size {0}
DragDropSizeComponents=Size {0} components
DragDropDropComponents=Drop components
DragDropSetDataError=This IDataObject doesn't support SetData.
GenericFileFilter=All Files(*.*)|*.*
GenericOpenFile=Open File
HelpProviderEditorFilter=All Help Files(*.chm,*.col,*.htm,*.html)|*.chm;*.col;*.htm;*.html|Compressed HTML Files(*.chm)|*.chm|Help Collection Files(*.col)|*.col|HTML Files(*.htm,*.html)|*.htm;*.html|All Files(*.*)|*.*
HelpProviderEditorTitle=Open Help File
ImageCaption=&Image:
ImageListDesignerMustBeBitmap=Image must be a Bitmap
InvalidArgument='{1}' is not a valid value for '{0}'.
InvalidBoundArgument='{1}' is not a valid value for '{0}'. '{0}' should be between {2} and {3}.
LabelCaption=&Label:
LinkAreaEditorCancel=Cancel
LinkAreaEditorCaption=LinkArea Editor
LinkAreaEditorDescription=Select a &range of text to make your link:
LinkAreaEditorOK=OK
lockedDescr=The Locked property determines if we can move or resize the control.
ParentControlDesignerDrawGridDescr=Indicates whether or not to draw the positioning grid.
ParentControlDesignerSnapToGridDescr=Determines if controls should snap to the positioning grid.
ParentControlDesignerGridSizeDescr=Determines the size of the positioning grid.
ParentControlDesignerLocalizableDescr=Determines if localizable code will be generated for this object.
ParentControlDesignerLanguageDescr=Indicates the current localizable language.
ScrollingDesigner=Scrolling design surface.
SelectedPathEditorLabel=Select the path to the folder that will initially be selected in the FolderBrowserDialog.
StringCollectionEditorCancelCaption=Cancel
StringCollectionEditorInstruction=Enter the strings in the collection (one per line):
StringCollectionEditorOKCaption=&OK
StringCollectionEditorHelpCaption=&Help
TabControlAdd=Add Tab
TabControlAddTab=Add tab to '{0}'
TabControlRemoveTab=Remove tab '{0}' from '{1}'
TabControlRemove=Remove Tab
WindowsFormsAddEvent=<couldn't find resource string "WindowsFormsAddEvent">
WindowsFormsCommandCenterX=Horizontal center of {0} component(s)
WindowsFormsCommandCenterY=Vertical center of {0} component(s)
WindowsFormsTabOrderReadOnly=- Read Only


### File System.Configuration.Design.txt ###

;
; Exceptions messages
;


;
; constant strings
;

Advanced=(Advanced)
Properties=Properties
Key=Key
OK=OK
Cancel=Cancel
Settings=settings
Value=value: {0}
None=(None)
Default=(Default)
Custom=(Custom)
Edit=Edit...

;
; DescriptionAttribute
;



### File System.WebForms.UI.Design.WebForms.txt ###

UnsettableComboBox_NotSet=<Not Set>

DBForm_Text={0} DataBindings
DBForm_Inst=Select the property to bind. Then either use Simple binding to bind to a data item and set formatting or use Custom binding to type in a binding expression.
DBForm_BindableProps=&Bindable Properties:
DBForm_OK=OK
DBForm_Cancel=Cancel
DBForm_Help=Help
DBForm_BindingGroup=Binding for {0}
DBForm_Format=&Format:
DBForm_Sample=S&ample:
DBForm_Simple=&Simple binding:
DBForm_Custom=&Custom binding expression:
DBForm_UnboundNode=(Unbound)
DBForm_Fmt_None=(None)
DBForm_Fmt_General=General - {0}
DBForm_Fmt_ShortDate=Short date - {0}
DBForm_Fmt_LongDate=Long date - {0}
DBForm_Fmt_ShortTime=Short time - {0}
DBForm_Fmt_LongTime=Long time - {0}
DBForm_Fmt_DateTime=Date and time - {0}
DBForm_Fmt_FullDate=Full date - {0}
DBForm_Fmt_Decimal=Decimal - {0}
DBForm_Fmt_Numeric=Number - {0}
DBForm_Fmt_Fixed=Fixed-point - {0}
DBForm_Fmt_Currency=Currency - {0}
DBForm_Fmt_Scientific=Scientific - {0}
DBForm_Fmt_Hexadecimal=Hexadecimal - {0}
DBForm_InvalidFormat=<Invalid format>

BDL_PrivateDataSource='{0}' is marked as a private member.\nThe DataSource's modifier must be changed to public before it can be selected.
BDL_PrivateDataSourceT=DataSource Selection Error
BDL_TemplateModePropBuilder=The control does not support property editing while it is in template editing mode.\nYou must first exit out of template editing before bringing up the Property Builder.
BDL_PropertyBuilder=Property Builder
BDL_PropertyBuilderVerb=Property &Builder...
BDL_AutoFormatVerb=&Auto Format...

BDLAF_Title=Auto Format
BDLAF_SchemeName=&Select a scheme:
BDLAF_Preview=Preview:
BDLAF_OK=OK
BDLAF_Cancel=Cancel
BDLAF_Help=Help
BDLAF_Column1=Column 1
BDLAF_Column2=Column 2
BDLAF_Header=Header
BDLAF_Footer=Footer

BDLScheme_Empty=Remove Auto Format
BDLScheme_Colorful1=Colorful 1
BDLScheme_Colorful2=Colorful 2
BDLScheme_Colorful3=Colorful 3
BDLScheme_Colorful4=Colorful 4
BDLScheme_Colorful5=Colorful 5
BDLScheme_Professional1=Professional 1
BDLScheme_Professional2=Professional 2
BDLScheme_Professional3=Professional 3
BDLScheme_Simple1=Simple 1
BDLScheme_Simple2=Simple 2
BDLScheme_Simple3=Simple 3
BDLScheme_Classic1=Classic 1
BDLScheme_Classic2=Classic 2

BDLBor_Text=Borders
BDLBor_CellMarginsGroup=Cell margins
BDLBor_CellPadding=Cell &padding:
BDLBor_CellSpacing=Cell &spacing:
BDLBor_BorderLinesGroup=Border lines
BDLBor_GridLines=&Grid lines:
BDLBor_GL_Horz=Horizontal
BDLBor_GL_Vert=Vertical
BDLBor_GL_Both=Both
BDLBor_GL_None=None
BDLBor_BorderColor=Border &color:
BDLBor_BorderWidth=Border &width:

BDLFmt_Text=Format
BDLFmt_Objects=&Objects:
BDLFmt_AppearanceGroup=Appearance
BDLFmt_ForeColor=Fore&color:
BDLFmt_BackColor=&Back color:
BDLFmt_FontName=&Font name:
BDLFmt_FontSize=Font &size:
BDLFmt_FS_Smaller=Smaller
BDLFmt_FS_Larger=Larger
BDLFmt_FS_XXSmall=XX-Small
BDLFmt_FS_XSmall=X-Small
BDLFmt_FS_Small=Small
BDLFmt_FS_Medium=Medium
BDLFmt_FS_Large=Large
BDLFmt_FS_XLarge=X-Large
BDLFmt_FS_XXLarge=XX-Large
BDLFmt_FS_Custom=Custom
BDLFmt_FontBold=Bo&ld
BDLFmt_FontItalic=&Italic
BDLFmt_FontUnderline=&Underline
BDLFmt_FontStrikeout=S&trikeout
BDLFmt_FontOverline=Ov&erline
BDLFmt_AlignmentGroup=Alignment
BDLFmt_HorzAlign=&Horizontal alignment:
BDLFmt_HA_Left=Left
BDLFmt_HA_Center=Center
BDLFmt_HA_Right=Right
BDLFmt_HA_Justify=Justify
BDLFmt_VertAlign=&Vertical alignment:
BDLFmt_VA_Top=Top
BDLFmt_VA_Middle=Middle
BDLFmt_VA_Bottom=Bottom
BDLFmt_LayoutGroup=Layout
BDLFmt_Width=&Width:
BDLFmt_AllowWrapping=W&rap text within cell
BDLFmt_Node_EntireDG=DataGrid
BDLFmt_Node_EntireDL=DataList
BDLFmt_Node_Header=Header
BDLFmt_Node_Footer=Footer
BDLFmt_Node_Pager=Pager
BDLFmt_Node_Items=Items
BDLFmt_Node_Separators=Separators
BDLFmt_Node_NormalItems=Normal Items
BDLFmt_Node_AltItems=Alternating Items
BDLFmt_Node_SelItems=Selected Items
BDLFmt_Node_EditItems=Edit Mode Items
BDLFmt_Node_Columns=Columns

CalAFmt_Verb=&Auto Format...
CalAFmt_Title=Calendar Auto Format
CalAFmt_SchemeName=&Select a scheme:
CalAFmt_Preview=Preview:
CalAFmt_OK=OK
CalAFmt_Cancel=Cancel
CalAFmt_Help=Help
CalAFmt_Scheme_Default=Default
CalAFmt_Scheme_Simple=Simple
CalAFmt_Scheme_Professional1=Professional 1
CalAFmt_Scheme_Professional2=Professional 2
CalAFmt_Scheme_Classic=Classic
CalAFmt_Scheme_Colorful1=Colorful 1
CalAFmt_Scheme_Colorful2=Colorful 2

DGGen_Text=General
DGGen_DataGroup=Data
DGGen_DataSource=&DataSource:
DGGen_DataMember=Data&Member:
DGGen_DSUnbound=(Unbound)
DGGen_DataKey=Data &key field:
DGGen_DKNone=(None)
DGGen_DMNone=(None)
DGGen_HeaderFooterGroup=Header and footer
DGGen_ShowHeader=Show &header
DGGen_ShowFooter=Show &footer
DGGen_BehaviorGroup=Behavior
DGGen_AllowSorting=Allow &sorting
DGGen_AutoColumnInfo=DataGrid columns will be automatically generated from the selected data source. Additional columns can be defined in the Columns page.
DGGen_CustomColumnInfo=DataGrid columns are defined in the Columns page.

DGPg_Text=Paging
DGPg_PagingGroup=Paging
DGPg_AllowPaging=A&llow paging
DGPg_AllowCustomPaging=Allow &custom paging
DGPg_PageSize=Page &size:
DGPg_Rows=rows
DGPg_NavigationGroup=Page navigation
DGPg_Visible=S&how navigation buttons
DGPg_Position=&Position:
DGPg_Pos_Top=Top
DGPg_Pos_Bottom=Bottom
DGPg_Pos_TopBottom=Top and bottom
DGPg_Mode=&Mode:
DGPg_Mode_Buttons=Next, Previous buttons
DGPg_Mode_Numbers=Page numbers
DGPg_NextPage=&Next page button text:
DGPg_PrevPage=P&revious page button text:
DGPg_ButtonCount=N&umeric buttons:

DGCol_Text=Columns
DGCol_AutoGen=&Create columns automatically at run time
DGCol_ColListGroup=Column list
DGCol_AvailableCols=&Available columns:
DGCol_SelectedCols=&Selected columns:
DGCol_ColumnPropsGroup1=Column properties
DGCol_ColumnPropsGroup2={0} properties
DGCol_HeaderText=&Header text:
DGCol_HeaderImage=Header &image:
DGCol_FooterText=&Footer text:
DGCol_SortExpr=Sort &expression:
DGCol_Visible=&Visible
DGCol_Templatize=Convert this column into a Template Column
DGCol_Node=DataGrid Column
DGCol_Node_DataFields=Data Fields
DGCol_Node_AllFields=(All Fields)
DGCol_Node_Bound=Bound Column
DGCol_Node_Button=Button Column
DGCol_Node_Select=Select
DGCol_Node_Edit=Edit, Update, Cancel
DGCol_Node_Delete=Delete
DGCol_Node_HyperLink=HyperLink Column
DGCol_Node_Template=Template Column
DGCol_DFC_DataField=&Data Field:
DGCol_DFC_DataFormat=Da&ta formatting expression:
DGCol_DFC_ReadOnly=&Read only
DGCol_BC_Text=&Text:
DGCol_BC_DataTextField=Te&xt field:
DGCol_BC_DataTextFormat=Text fo&rmat string:
DGCol_BC_Command=C&ommand name:
DGCol_BC_ButtonType=&Button type:
DGCol_BC_BT_Link=LinkButton
DGCol_BC_BT_Push=PushButton
DGCol_HC_Text=&Text:
DGCol_HC_DataTextField=Te&xt field:
DGCol_HC_DataTextFormat=Text fo&rmat string:
DGCol_HC_URL=&URL:
DGCol_HC_DataURLField=UR&L field:
DGCol_HC_DataURLFormat=URL for&mat string:
DGCol_HC_Target=Tar&get:
DGCol_EC_Edit=E&dit Text:
DGCol_EC_Update=&Update text:
DGCol_EC_Cancel=Ca&ncel text:
DGCol_EC_ButtonType=&Button type:
DGCol_EC_BT_Link=LinkButton
DGCol_EC_BT_Push=PushButton
DGCol_Button=Button
DGCol_SelectButton=Select
DGCol_DeleteButton=Delete
DGCol_EditButton=Edit
DGCol_UpdateButton=Update
DGCol_CancelButton=Cancel
DGCol_HyperLink=HyperLink
DGCol_URLPFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|
DGCol_URLPCaption=Select Header Image

DataList_NoTemplatesInst=Right click and choose a set of templates to edit their content.<br>The ItemTemplate is required.
DataList_NoTemplatesInst2=Switch to HTML view to edit the control's templates.<br>The ItemTemplate is required.
DataList_ErrorRendering=There was an error rendering the control.<br>Check to make sure all properties are valid.
DataList_HeaderFooterTemplates=&Header and Footer Templates
DataList_ItemTemplates=&Item Templates
DataList_SeparatorTemplate=&Separator Template

DLGen_Text=General
DLGen_DataGroup=Data
DLGen_DataSource=&DataSource:
DLGen_DataMember=Data&Member:
DLGen_DSUnbound=(Unbound)
DLGen_DataKey=Data &key field:
DLGen_DKNone=(None)
DLGen_DMNone=(None)
DLGen_HeaderFooterGroup=Header and footer
DLGen_ShowHeader=Show &header
DLGen_ShowFooter=Show &footer
DLGen_RepeatLayoutGroup=Repeat layout
DLGen_RepeatColumns=&Columns:
DLGen_RepeatDirection=D&irection:
DLGen_RD_Horz=Horizontal
DLGen_RD_Vert=Vertical
DLGen_RepeatLayout=&Layout:
DLGen_RL_Table=Table
DLGen_RL_Flow=Flow

Repeater_NoTemplatesInst=Switch to HTML view to edit the control's templates.
Repeater_ErrorRendering=There was an error rendering the control.<br>Check to make sure all properties are valid.

DataGrid_ErrorRendering=There was an error rendering the control.<br>Check to make sure all properties are valid.

Xml_Inst=Use this control to perform XSL transforms.

UrlPicker_DefaultCaption=Select URL
UrlPicker_DefaultFilter=All Files(*.*)|*.*|
UrlPicker_ImageCaption=Select Image
UrlPicker_ImageFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|
UrlPicker_XmlCaption=Select XML File
UrlPicker_XmlFilter=XML Files(*.xml)|*.xml|All Files(*.*)|*.*|
UrlPicker_XslCaption=Select XSL Transform File
UrlPicker_XslFilter=XSL Files(*.xsl;*.xslt)|*.xsl;*.xslt|All Files(*.*)|*.*|
XMLFilePicker_Caption=Select Advertisement XML File
XMLFilePicker_Filter=XML Files(*.xml)|*.xml|All Files(*.*)|*.*|

DataBindingGlyph_ToolTip=Property is data bound.

TemplateEdit_Tip=To edit templates, type text and drag controls from the Toolbox onto the template. To end template editing, right-click anywhere on the control and choose End Template Editing.

RegexEditor_Title=Regular Expression Editor
RegexEditor_StdExp=&Standard Expressions:
RegexEditor_Validate=&Validate
RegexEditor_SampleInput=Sample &Input:
RegexEditor_TestExpression=Test Expression
RegexEditor_ValidationExpression=Validation &Expression:
RegexEditor_InputValid=Input is valid.
RegexEditor_InputInvalid=Input is not valid.
RegexEditor_BadExpression=Invalid regular expression.
RegexEditor_OK=OK
RegexEditor_Cancel=Cancel
RegexEditor_Help=Help

RegexCanned_Custom=(Custom)
RegexCanned_Zip=U.S. ZIP Code
RegexCanned_SocialSecurity=U.S. Social Security Number
RegexCanned_USPhone=U.S. Phone Number
RegexCanned_Email=Internet E-mail Address
RegexCanned_URL=Internet URL
RegexCanned_FrZip=French Postal Code
RegexCanned_FrPhone=French Phone Number
RegexCanned_DeZip=German Postal Code
RegexCanned_DePhone=German Phone Number
RegexCanned_JpnZip=Japanese Postal Code
RegexCanned_JpnPhone=Japanese Phone Number
RegexCanned_PrcZip=P.R.C. Postal Code
RegexCanned_PrcPhone=P.R.C. Phone Number
RegexCanned_PrcSocialSecurity=P.R.C. Social Security Number (ID Number)

Toolbox_OnWebformsPage=WebForms Toolbox items can only be used on WebForms pages.

Control_DataBindings=The collection of data bindings associated with the control.

Sample_Databound_Text=Databound
Sample_Databound_Text_Alt=abc
Sample_Unbound_Text=Unbound

TrayLineUpIcons=Line Up Tray Icons
TrayAutoArrange=Auto Arrange Tray Icons
TrayShowLargeIcons=Show Large or Small Icons

StringDictionaryEditorTitle=StringDictionary Editor
StartFileNameEditorTitle=Select application or document to start
StartFileNameEditorAllFiles=All Files(*.*)|*.*
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\localization\eulaja.rtf ===
{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt Batang};}{\f39\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;} {\f43\froman\fcharset238\fprq2 Times New Roman CE;}{\f44\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f46\froman\fcharset161\fprq2 Times New Roman Greek;}{\f47\froman\fcharset162\fprq2 Times New Roman Tur;} {\f48\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f49\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f50\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f51\froman\fcharset163\fprq2 Times New Roman (Vietnamese);} {\f53\fswiss\fcharset238\fprq2 Arial CE;}{\f54\fswiss\fcharset204\fprq2 Arial Cyr;}{\f56\fswiss\fcharset161\fprq2 Arial Greek;}{\f57\fswiss\fcharset162\fprq2 Arial Tur;}{\f58\fswiss\fcharset177\fprq2 Arial (Hebrew);} {\f59\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f60\fswiss\fcharset186\fprq2 Arial Baltic;}{\f61\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f175\fnil\fcharset0\fprq2 SimSun Western{\*\falt Batang};}{\f435\fnil\fcharset0\fprq2 @SimSun Western;} {\f443\fswiss\fcharset238\fprq2 Verdana CE;}{\f444\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f446\fswiss\fcharset161\fprq2 Verdana Greek;}{\f447\fswiss\fcharset162\fprq2 Verdana Tur;}{\f450\fswiss\fcharset186\fprq2 Verdana Baltic;} {\f451\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255; \red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe1033\loch\f40\hich\af40\dbch\af13\cgrid\langnp1033\langfenp1033 \snext15 Text,t;}{\*\cs16 \additive \b \sbasedon10 Bold,b;}}{\*\rsidtbl \rsid1782916\rsid2777571 \rsid3636058\rsid15679924}{\*\generator Microsoft Word 10.0.2627;}{\info{\title German (DE) version of EULA needs to go here}{\author Frank Delia}{\operator Greg Schechter}{\creatim\yr2001\mo7\dy24\hr13\min44}{\revtim\yr2001\mo7\dy24\hr13\min44} {\version3}{\edmins1}{\nofpages1}{\nofwords7}{\nofchars41}{\*\company Microsoft}{\nofcharsws47}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701 \dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot2777571 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang  {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang  {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain  \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe1033\loch\af40\hich\af40\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\insrsid1782916 \hich\af40\dbch\af13\loch\f40 Japanese}{ \b\insrsid2777571\charrsid2777571 \hich\af40\dbch\af13\loch\f40  (}{\b\insrsid1782916 \hich\af40\dbch\af13\loch\f40 JA}{\b\insrsid2777571\charrsid2777571 \hich\af40\dbch\af13\loch\f40 ) version of EULA needs to go here}{ \b\fs24\insrsid1782916\charrsid2777571  \par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid1782916  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\localization\eulade.rtf ===
{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch13\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt Batang};}{\f39\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}{\f40\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;} {\f43\froman\fcharset238\fprq2 Times New Roman CE;}{\f44\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f46\froman\fcharset161\fprq2 Times New Roman Greek;}{\f47\froman\fcharset162\fprq2 Times New Roman Tur;} {\f48\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f49\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f50\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f51\froman\fcharset163\fprq2 Times New Roman (Vietnamese);} {\f53\fswiss\fcharset238\fprq2 Arial CE;}{\f54\fswiss\fcharset204\fprq2 Arial Cyr;}{\f56\fswiss\fcharset161\fprq2 Arial Greek;}{\f57\fswiss\fcharset162\fprq2 Arial Tur;}{\f58\fswiss\fcharset177\fprq2 Arial (Hebrew);} {\f59\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f60\fswiss\fcharset186\fprq2 Arial Baltic;}{\f61\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f175\fnil\fcharset0\fprq2 SimSun Western{\*\falt Batang};}{\f435\fnil\fcharset0\fprq2 @SimSun Western;} {\f443\fswiss\fcharset238\fprq2 Verdana CE;}{\f444\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f446\fswiss\fcharset161\fprq2 Verdana Greek;}{\f447\fswiss\fcharset162\fprq2 Verdana Tur;}{\f450\fswiss\fcharset186\fprq2 Verdana Baltic;} {\f451\fswiss\fcharset163\fprq2 Verdana (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255; \red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af13\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe1033\loch\f40\hich\af40\dbch\af13\cgrid\langnp1033\langfenp1033 \snext15 Text,t;}{\*\cs16 \additive \b \sbasedon10 Bold,b;}}{\*\rsidtbl \rsid2777571} {\*\generator Microsoft Word 10.0.2627;}{\info{\title German (DE) version of EULA needs to go here}{\author Frank Delia}{\operator Greg Schechter}{\creatim\yr2001\mo7\dy24\hr13\min43}{\revtim\yr2001\mo7\dy24\hr13\min43}{\version2}{\edmins0}{\nofpages1} {\nofwords6}{\nofchars40}{\*\company Microsoft}{\nofcharsws45}{\vern16437}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3 \jcompress\viewkind4\viewscale100\nolnhtadjtbl\rsidroot2777571 \fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3 \pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}} {\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain  \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\cf1\lang1033\langfe1033\loch\af40\hich\af40\dbch\af13\cgrid\langnp1033\langfenp1033 {\b\insrsid2777571\charrsid2777571  \hich\af40\dbch\af13\loch\f40 German (DE) version of EULA needs to go here}{\b\fs24\insrsid3636058\charrsid2777571  \par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\loch\af0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1033 {\f1\fs20\insrsid3636058  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\eula.txt ===
END-USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE

IMPORTANTREAD CAREFULLY:  This End-User License Agreement (EULA) is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation for the Microsoft software product identified above, which includes computer software and may include associated media, printed materials, online or electronic documentation, and Internet-based services (Product).  An amendment or addendum to this EULA may accompany the Product.  YOU AGREE TO BE BOUND BY THE TERMS OF THIS EULA BY INSTALLING, COPYING, OR OTHERWISE USING THE PRODUCT. IF YOU DO NOT AGREE, DO NOT INSTALL OR USE THE PRODUCT; YOU MAY RETURN IT TO YOUR PLACE OF PURCHASE FOR A FULL REFUND.

SOFTWARE PRODUCT LICENSE
MICROSOFT MOBILE INTERNET TOOLKIT

1.  GRANTS OF LICENSE.  Microsoft grants you the rights described in this EULA provided that you comply with all terms and conditions of this EULA.  
       1.1 - General License Grant.  Microsoft grants to you as an individual, a personal, nonexclusive license to make and use copies of the Product for the purposes of designing, developing, and testing your software product(s), provided that you are the only individual using the Product.  
       If you are an entity, Microsoft grants to you a personal, nonexclusive license to make and use copies of the Product, provided that for each individual using the Product within your organization, you have acquired a separate and valid license for each such individual.  
       1.2 - Documentation.  You may make and use an unlimited number of copies of any documentation, provided that such copies shall be used only for personal purposes and are not to be republished or distributed (either in hard copy or electronic form) beyond your premises.
       1.3 - Storage/Network Use.  You may also store or install a copy of the Product on a storage device, such as a network server, used only to install or run the Product on computers used by a licensed end user in accordance with Section 1.1.  A single license for the Product may not be shared or used concurrently by other end users.

2.  ADDITIONAL LICENSE RIGHTS -- REDISTRIBUTABLE CODE.  In addition to the rights granted in Section 1, certain portions of the Product, as described in this Section2, are provided to you with additional license rights.  These additional license rights are conditioned upon your compliance with the distribution requirements and license restrictions described in Section 3.
       2.1 - Configuration Files and Sample Source Code.  Microsoft grants you the right to use and modify: (i)those portions of the Product identified as Configuration Files listed in the REDIST.TXT file; and (ii)the source code version of those portions of the Product identified as Samples in REDIST.TXT or elsewhere in the Product ((i)and (ii) above collectively referred to in this EULA as, Sample Code) for the sole purposes of designing, developing, and testing your software product(s), and to reproduce and distribute the Sample Code, along with any modifications thereof, in object and/or source code form.  
       2.2 - Redistributable Code.  Microsoft grants you a nonexclusive, royalty-free right to reproduce and distribute the object code form of any portion of the Product listed in REDIST.TXT (Redistributable Code).  

3.  LICENSE RESTRICTIONS -- DISTRIBUTION REQUIREMENTS.  If you choose to exercise your rights under Section2, any redistribution by you requires compliance with the following terms. 
       3.1 - If you are authorized and choose to redistribute Sample Code or Redistributable Code (collectively, the Redistributables) as described in Section 2, you agree:  (i)except as provided in Section 2.1, which allows for redistribution of source code versions of Sample Code, to distribute the Redistributables only in object code form; (ii)to redistribute the Redistributables only in conjunction with and as a part of a software application product developed by you that adds significant and primary functionality to the Redistributables (Licensed Product); (iii)that the Redistributables only operate in conjunction with Microsoft Windows platforms and the Microsoft Mobile Internet Toolkit runtime; (iv) not to use Microsofts name, logo, or trademarks to market the Licensed Product; (v) to display your own valid copyright notice which shall be sufficient to protect Microsofts copyright in the Product; (vi)not to remove or obscure any copyright, trademark or patent notices that appear on the Product as delivered to you; (vii) to indemnify, hold harmless, and defend Microsoft from and against any claims or lawsuits, including attorneys fees, that arise or result from the use or distribution of the Licensed Product; (viii) otherwise comply with the terms of this EULA; and (ix)agree that Microsoft reserves all rights not expressly granted.
       You also agree not to permit further distribution of the Redistributables by your end users except you may permit further redistribution of the Redistributables by your distributors to your end-user customers if your distributors only distribute the Redistributables in conjunction with, and as part of, the Licensed Product and you and your distributors comply with all other terms of this EULA.
       3.2 - Additional Distribution Requirements  Microsoft Merge Modules (MSM)  If you choose to exercise your rights under Section3.1 with respect to files identified in the Product as Microsoft Merge Modules (.MSM files), any redistribution by you also requires compliance with the following terms:  you may redistribute the content of MSM file(s) in the manner described in the Product documentation only so long as you redistribute such content in its entirety and do not modify such content in any way.
       3.3 - If you use the Redistributables, then in addition to your compliance with the applicable distribution requirements described for the Redistributables, the following also applies.  Your license rights to the Redistributables are conditioned upon your (i) not incorporating Identified Software into or combining Identified Software with the Redistributables or a derivative work thereof; (ii) not distributing Identified Software in conjunction with the Redistributables or a derivative work thereof; and (iii) not using Identified Software in the development of a derivative work of the Redistributables.  Identified Software means software which is licensed pursuant to terms that directly or indirectly (A) create, or purport to create, obligations for Microsoft with respect to the Redistributables or derivative work thereof or (B) grant, or purport to grant, to any third party any rights or immunities under Microsofts intellectual property or proprietary rights in the Redistributables or derivative work thereof.  Identified Software includes, without limitation, any software that requires as a condition of use, modification and/or distribution of such software that other software incorporated into, derived from or distributed with such software be (1) disclosed or distributed in source code form; (2) be licensed for the purpose of making derivative works; or (3) be redistributable at no charge.  

4.  DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS
       4.1 - Not For Resale Software.  If the Product is labeled Not For Resale or NFR, then you may not resell, or otherwise transfer for value, the Product.
       4.2 - Limitations on Reverse Engineering, Decompilation, and Disassembly.  You may not reverse engineer, decompile, or disassemble the Product, except and only to the extent that such activity is expressly permitted by applicable law notwithstanding this limitation.
       4.3 - Rental.  You may not rent, lease or lend the Product.
       4.4 - Trademarks.  This EULA does not grant you any rights in connection with any trademarks or service marks of Microsoft.
       4.5 - Consent to Use of Data.  You agree that Microsoft and its affiliates may collect and use technical information gathered as part of the product support services provided to you, if any, related to the Product.  Microsoft may use this information solely to improve our products or to provide customized services or technologies to you and will not disclose this information in a form that personally identifies you.
       4.6 - Software Transfer.  The initial user of the Product may make a one-time permanent transfer of this EULA and Product only directly to an end user.  This transfer must include all of the Product (including all component parts, the media and printed materials, any upgrades, this EULA, and, if applicable, the Certificate of Authenticity).  Such transfer may not be by way of consignment or any other indirect transfer.  The transferee of such one-time transfer must agree to comply with the terms of this EULA, including the obligation not to further transfer this EULA and Product.
       4.7 - Separation of Components.  The Product is licensed as a single product. Its component parts may not be separated for use by more than one user.
       4.8 - Termination.  Without prejudice to any other rights, Microsoft may terminate this EULA if you fail to comply with the terms and conditions of this EULA. In such event, you must destroy all copies of the Product and all of its component parts.

5.  PRERELEASE CODE.  Portions of the Product may be identified as prerelease code (Prerelease Code). Such Prerelease Code is not at the level of performance and compatibility of the final, generally available product offering.  The Prerelease Code may not operate correctly and may be substantially modified prior to first commercial shipment.  Microsoft is not obligated to make this or any later version of the Prerelease Code commercially available.  The grant of license to use Prerelease Code expires upon availability of a commercial release of the Prerelease Code from Microsoft.  NOTE: In the event that Prerelease Code contains a separate end-user license agreement, the terms and conditions of such end-user license agreement shall govern your use of the corresponding Prerelease Code.

6.  UPGRADES.  To use a Product identified as an upgrade, you must first be licensed for the product identified by Microsoft as eligible for the upgrade.  After upgrading, you may no longer use the product that formed the basis for your upgrade eligibility.  You may use the resulting upgraded product only in accordance with the terms of this EULA.  If the Product is an upgrade of a component of a package of software programs that you licensed as a single product, the Product may be used and transferred only as part of that single product package and may not be separated for use by more than one end user.

7.  DOWNGRADES.  Instead of installing and using the Product, you may install and use one copy of an earlier version of the Product, provided that you completely remove such earlier version and install the original Product within a reasonable time.  Your use of such earlier version shall be governed by this EULA, and your rights to use such earlier version shall terminate when you install the original Product.

8.  LIMITED WARRANTY FOR PRODUCT ACQUIRED IN THE US AND CANADA.  
Except with respect to the Redistributables, which are provided AS IS, without warranty of any kind, Microsoft warrants that the Product will perform substantially in accordance with the accompanying  materials for a period of ninety days from the date of receipt. 
If an implied warranty or condition is created by your state/jurisdiction and federal or state/provincial law prohibits disclaimer of it, you also have an implied warranty or condition, BUT ONLY AS TO DEFECTS DISCOVERED DURING THE PERIOD OF THIS LIMITED WARRANTY (NINETY DAYS). AS TO ANY DEFECTS DISCOVERED AFTER THE NINETY (90) DAY PERIOD, THERE IS NO WARRANTY OR CONDITION OF ANY KIND.  Some states/jurisdictions do not allow limitations on how long an implied warranty or condition lasts, so the above limitation may not apply to you.
Any supplements or updates to the Product, including without limitation, any (if any) service packs or hot fixes provided to you after the expiration of the ninety day Limited Warranty period are not covered by any warranty or condition, express, implied or statutory.
LIMITATION ON REMEDIES; NO CONSEQUENTIAL OR OTHER DAMAGES.  Your exclusive remedy for any breach of this Limited Warranty is as set forth below.  Except for any refund elected by Microsoft, YOU ARE NOT ENTITLED TO ANY DAMAGES, INCLUDING BUT NOT LIMITED TO CONSEQUENTIAL DAMAGES, if the Product does not meet Microsofts Limited Warranty, and, to the maximum extent allowed by applicable law, even if any remedy fails of its essential purpose.  The terms of Section 10 below (Exclusion of Incidental, Consequential and Certain Other Damages) are also incorporated into this Limited Warranty.  Some states/jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so the above limitation or exclusion may not apply to you.  This Limited Warranty gives you specific legal rights.  You may have others which vary from state/jurisdiction to state/jurisdiction.  YOUR EXCLUSIVE REMEDY.  Microsofts and its suppliers entire liability and your exclusive remedy shall be, at Microsofts option from time to time exercised subject to applicable law, (a)return of the price paid (if any) for the Product, or (b)repair or replacement of the Product, that does not meet this Limited Warranty and that is returned to Microsoft with a copy of your receipt.  You will receive the remedy elected by Microsoft without charge, except that you are responsible for any expenses you may incur (e.g. cost of shipping the Product to Microsoft).  This Limited Warranty is void if failure of the Product has resulted from accident, abuse, misapplication, abnormal use or a virus.  Any replacement Product will be warranted for the remainder of the original warranty period or thirty (30) days, whichever is longer.  Outside the United States or Canada, neither these remedies nor any product support services offered by Microsoft are available without proof of purchase from an authorized international source.  To exercise your remedy, contact:  Microsoft, Attn. Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399, or the Microsoft subsidiary serving your country.

LIMITED WARRANTY FOR PRODUCT ACQUIRED OUTSIDE THE US OR CANADA. 
FOR THE LIMITED WARRANTIES AND SPECIAL PROVISIONS PERTAINING TO YOUR PARTICULAR JURISDICTION, PLEASE REFER TO YOUR WARRANTY BOOKLET INCLUDED WITH THIS PACKAGE OR PROVIDED WITH THE SOFTWARE PRODUCT PRINTED MATERIALS.


9.  DISCLAIMER OF  WARRANTIES.  The Limited Warranty that appears above is the only express warranty made to you and is provided in lieu of any other express warranties (if any) created by any documentation, packaging, or other communications.  Except for the Limited Warranty and to the maximum extent permitted by applicable law, Microsoft and its suppliers provide the Product and support services (if any) AS IS AND WITH ALL FAULTS, and hereby disclaim all other warranties and conditions, either express, implied or statutory, including, but not limited to, any (if any) implied warranties, duties or conditions of merchantability, of fitness for a particular purpose, of reliability or availability, of accuracy or completeness of responses, of results, of workmanlike effort, of lack of viruses, and of lack of negligence, all with regard to the Product, and the provision of or failure to provide support or other services, information, software, and related content through the Product or otherwise arising out of the use of the Product.  ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION, OR NON-INFRINGEMENT WITH REGARD TO THE PRODUCT.

10.  EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, PUNITIVE, INDIRECT, OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, BUT NOT LIMITED TO, DAMAGES FOR LOSS OF PROFITS OR CONFIDENTIAL OR OTHER INFORMATION, FOR BUSINESS INTERRUPTION, FOR PERSONAL INJURY, FOR LOSS OF PRIVACY, FOR FAILURE TO MEET ANY DUTY INCLUDING OF GOOD FAITH OR OF REASONABLE CARE, FOR NEGLIGENCE, AND FOR ANY OTHER PECUNIARY OR OTHER LOSS WHATSOEVER) ARISING OUT OF OR IN ANY WAY RELATED TO THE USE OF OR INABILITY TO USE THE PRODUCT, THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT OR OTHER SERVICES, INFORMATON, SOFTWARE, AND RELATED CONTENT THROUGH THE PRODUCT OR OTHERWISE ARISING OUT OF THE USE OF THE PRODUCT, OR OTHERWISE UNDER OR IN CONNECTION WITH ANY PROVISION OF THIS EULA, EVEN IN THE EVENT OF THE FAULT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, BREACH OF CONTRACT OR BREACH OF WARRANTY OF MICROSOFT OR ANY SUPPLIER, AND EVEN IF MICROSOFT OR ANY SUPPLIER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. 
11.  LIMITATION OF LIABILITY AND REMEDIES.  Notwithstanding any damages that you might incur for any reason whatsoever (including, without limitation, all damages referenced above and all direct or general damages), the entire liability of Microsoft and any of its suppliers under any provision of this EULA and your exclusive remedy for all of the foregoing (except for any remedy of repair or replacement elected by Microsoft with respect to any breach of the Limited Warranty) shall be limited to the greater of the amount actually paid by you for the Product or U.S.$5.00.  The foregoing limitations, exclusions and disclaimers (including Sections 8, 9 and 10 above) shall apply to the maximum extent permitted by applicable law, even if any remedy fails its essential purpose.

12.  LINKS TO THIRD PARTY SITES.  You may link to third party sites through the use of the Product.  The third party sites are not under the control of Microsoft, and Microsoft is not responsible for the contents of any third party sites, any links contained in third party sites, or any changes or updates to third party sites.  Microsoft is not responsible for web casting or any other form of transmission received from any third party sites.  Microsoft is providing these links to third party sites to you only as a convenience, and the inclusion of any link does not imply an endorsement by Microsoft of the third party site.  

13.  U.S. GOVERNMENT LICENSE RIGHTS.  All Product provided to the U.S. Government pursuant to solicitations issued on or after December 1, 1995 is provided with the commercial license rights and restrictions described elsewhere herein.  All Product provided to the U.S. Government pursuant to solicitations issued prior to December 1, 1995 is provided with Restricted Rights as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable.

14.  EXPORT RESTRICTIONS.  You acknowledge that the Product is of U.S. origin and subject to U.S. export jurisdiction.  You agree to comply with all applicable international and national laws that apply to the Product, including the U.S. Export Administration Regulations, as well as end-user, end-use, and destination restrictions issued by U.S. and other governments.  For additional information see <http://www.microsoft.com/exporting/>.

15.  APPLICABLE LAW.  If you acquired this Product in the United States, this EULA is governed by the laws of the State of Washington.  If you acquired this Product in Canada, unless expressly prohibited by local law, this EULA is governed by the laws in force in the Province of Ontario, Canada; and, in respect of any dispute which may arise hereunder, you consent to the jurisdiction of the federal and provincial courts sitting in Toronto, Ontario.  If this Product was acquired outside the United States, then local law may apply. 

16.  ENTIRE AGREEMENT.  This EULA (including any addendum or amendment to this EULA which is included with the Product) are the entire agreement between you and Microsoft relating to the Product and the support services (if any) and they supersede all prior or contemporaneous oral or written communications, proposals and representations with respect to the Product or any other subject matter covered by this EULA.  To the extent the terms of any Microsoft policies or programs for support services conflict with the terms of this EULA, the terms of this EULA shall control.

17.  The Product is protected by copyright and other intellectual property laws and treaties. Microsoft or its suppliers own the title, copyright, and other intellectual property rights in the Product.  The Product is licensed, not sold.


Si vous avez acquis votre produit Microsoft au CANADA, la garantie limite suivante vous concerne:

GARANTIE LIMITE

Sauf pur celles du Redistributables, qui sont fournies comme telles, Microsoft garantit que le Produit fonctionnera conformment aux documents inclus pendant une priode de 90jours suivant la date de rception.

Si une garantie ou condition implicite est cre par votre tat ou votre territoire et quune loi fdrale ou provinciale ou tat en interdit le dni, vous jouissez galement dune garantie ou condition implicite, MAIS UNIQUEMENT POUR LES DFAUTS DCOUVERTS DURANT LA PRIODE DE LA PRSENTE GARANTIE LIMITE (QUATRE-VINGT-DIX JOURS). IL NY A AUCUNE GARANTIE OU CONDITION DE QUELQUE NATURE QUE CE SOIT QUANT AUX DFAUTS DCOUVERTS APRS CETTE PRIODE DE QUATRE-VINGT-DIX JOURS. Certains tats ou territoires ne permettent pas de limiter la dure dune garantie ou condition implicite de sorte que la limitation cidessus peut ne pas sappliquer  vous.

Tous les supplments ou toutes les mises  jour relatifs au Produit, notamment, les ensembles de services ou les rparations  chaud (le cas chant) qui vous sont fournis aprs lexpiration de la priode de quatre-vingt-dix jours de la garantie limite ne sont pas couverts par quelque garantie ou condition que ce soit, expresse ou implicite.

LIMITATION DES RECOURS; ABSENCE DE DOMMAGES INDIRECTS OU AUTRES. Votre recours exclusif pour toute violation de la prsente garantie limite est dcrit ciaprs. Sauf pour tout remboursement au choix de Microsoft, si le Produit ne respecte pas la garantie limite de Microsoft et, dans la mesure maximale permise par les lois applicables, mme si tout recours natteint pas son but essentiel, VOUS NAVEZ DROIT  AUCUNS DOMMAGES, NOTAMMENT DES DOMMAGES INDIRECTS. Les modalits de la clauseExclusion des dommages accessoires, indirects et de certains autres dommages  sont galement intgres  la prsente garantie limite. Certains tats ou territoires ne permettent pas lexclusion ou la limitation des dommages indirects ou accessoires de sorte que la limitation ou lexclusion cidessus peut ne pas sappliquer  vous. La prsente garantie limite vous donne des droits lgaux spcifiques. Vous pouvez avoir dautres droits qui peuvent varier dun territoire ou dun tat  un autre. VOTRE RECOURS EXCLUSIF. Lobligation intgrale de Microsoft et de ses fournisseurs et votre recours exclusif seront, selon le choix de Microsoft de temps  autre sous rserve de toute loi applicable, a)le remboursement du prix pay, le cas chant, pour le Produit ou b)la rparation ou le remplacement du Produit qui ne respecte pas la prsente garantie limite et qui est retourn  Microsoft avec une copie de votre reu. Vous recevrez la compensation choisie par Microsoft, sans frais, sauf que vous tes responsable des dpenses que vous pourriez engager (p.ex., les frais denvoi du Produit  Microsoft). La prsente garantie limite est nulle si la dfectuosit du Produit est cause par un accident, un usage abusif, une mauvaise application, un usage anormal ou un virus. Tout Produit de remplacement sera garanti pour le reste de la priode de garantie initiale ou pendant trente (30) jours, selon la plus longue entre ces deux priodes.  lextrieur des tats-Unis ou du Canada, ces recours ou lun quelconque des services de soutien technique offerts par Microsoft ne sont pas disponibles sans preuve dachat dune source internationale autorise. Pour exercer votre recours, vous devez communiquer avec Microsoft et vous adresser au Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399, ou  la filiale de Microsoft de votre pays.

DNI DE GARANTIES. La garantie limite mentionne ci-dessus constitue la seule garantie expresse qui vous est donne et remplace toutes autres garanties expresses (sil en est) mentionnes dans un document ou sur un emballage. Sauf en ce qui a trait  la garantie limite et dans la mesure maximale permise par les lois applicables, le Produit et les services de soutien technique (le cas chant) sont fournis TELS QUELS ET AVEC TOUS LES DFAUTS par Microsoft et ses fournisseurs, lesquels par les prsentes dnient toutes autres garanties et conditions expresses, implicites ou en vertu de la loi, notamment (le cas chant) les garanties, devoirs ou conditions implicites de qualit marchande, dadaptation  un usage particulier, dexactitude ou dexhaustivit des rponses, des rsultats, des efforts dploys selon les rgles de lart, dabsence de virus et de ngligence, le tout  lgard du Produit et de la prestation des services de soutien technique ou de lomission dune telle prestation. PAR AILLEURS, IL NY A AUCUNE GARANTIE OU CONDITION QUANT AU TITRE DE PROPRIT,  LA JOUISSANCE OU LA POSSESSION PAISIBLE,  LA CONCORDANCE  UNE DESCRIPTION NI QUANT  UNE ABSENCE DE CONTREFAON CONCERNANT LE PRODUIT.

EXCLUSION DES DOMMAGES ACCESSOIRES, INDIRECTS ET DE CERTAINS AUTRES DOMMAGES. DANS LA MESURE MAXIMALE PERMISE PAR LES LOIS APPLICABLES, EN AUCUN CAS MICROSOFT OU SES FOURNISSEURS NE SERONT RESPONSABLES DES DOMMAGES SPCIAUX, CONSCUTIFS, ACCESSOIRES OU INDIRECTS DE QUELQUE NATURE QUE CE SOIT (NOTAMMENT, LES DOMMAGES  LGARD DU MANQUE  GAGNER OU DE LA DIVULGATION DE RENSEIGNEMENTS CONFIDENTIELS OU AUTRES, DE LA PERTE DEXPLOITATION, DE BLESSURES CORPORELLES, DE LA VIOLATION DE LA VIE PRIVE, DE LOMISSION DE REMPLIR TOUT DEVOIR, Y COMPRIS DAGIR DE BONNE FOI OU DEXERCER UN SOIN RAISONNABLE, DE LA NGLIGENCE ET DE TOUTE AUTRE PERTE PCUNIAIRE OU AUTRE PERTE DE QUELQUE NATURE QUE CE SOIT) SE RAPPORTANT DE QUELQUE MANIRE QUE CE SOIT  LUTILISATION DU PRODUIT OU  LINCAPACIT DE SEN SERVIR,  LA PRESTATION OU  LOMISSION DUNE TELLE PRESTATION DE SERVICES DE SOUTIEN TECHNIQUE OU AUTREMENT AUX TERMES DE TOUTE DISPOSITION DU PRSENT EULA OU RELATIVEMENT  UNE TELLE DISPOSITION, MME EN CAS DE FAUTE, DE DLIT CIVIL (Y COMPRIS LA NGLIGENCE), DE RESPONSABILIT STRICTE, DE VIOLATION DE CONTRAT OU DE VIOLATION DE GARANTIE DE MICROSOFT OU DE TOUT FOURNISSEUR ET MME SI MICROSOFT OU TOUT FOURNISSEUR A T AVIS DE LA POSSIBILIT DE TELS DOMMAGES.

LIMITATION DE RESPONSABILIT ET RECOURS. Malgr les dommages que vous puissiez subir pour quelque motif que ce soit (notamment, tous les dommages susmentionns et tous les dommages directs ou gnraux), lobligation intgrale de Microsoft et de lun ou lautre de ses fournisseurs aux termes de toute disposition du prsent EULA et votre recours exclusif  lgard de tout ce qui prcde (sauf en ce qui concerne tout recours de rparation ou de remplacement choisi par Microsoft  lgard de tout manquement  la garantie limite) se limite au plus lev entre les montants suivants: le montant que vous avez rellement pay pour le Produit ou 5,00$US. Les limites, exclusions et dnis qui prcdent (y compris les clauses ci-dessus), sappliquent dans la mesure maximale permise par les lois applicables, mme si tout recours natteint pas son but essentiel.

La prsente Convention est rgie par les lois de la province dOntario, Canada. Chacune des parties  la prsente reconnat irrvocablement la comptence des tribunaux de la province dOntario et consent  instituer tout litige qui pourrait dcouler de la prsente auprs des tribunaux situs dans le district judiciaire de York, province dOntario.

Au cas o vous auriez des questions concernant cette licence ou que vous dsiriez vous mettre en rapport avec Microsoft pour quelque raison que ce soit, veuillez contacter la succursale Microsoft desservant votre pays, dont ladresse est fournie dans ce produit, ou crivez : Microsoft Sales Information Center, One Microsoft Way, Redmond, Washington98052-6399.


0598  Part No. X03-71287
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\eulaja.txt ===
﻿対象製品： Microsoft Mobile Internet Toolkit 日本語版

使用許諾契約書
重要―以下のライセンス契約書を注意してお読みください。本使用許諾契約書 (以下「本契約書」といいます) は、上記に示されたマイクロソフト ソフトウェア製品に関してお客様 (自然人または法人のいずれであるかを問いません) とMicrosoft Corporation (以下「マイクロソフト」といいます) との間に締結される法的な契約書です。本製品はコンピュータ ソフトウェアを含み、それに関連した媒体、印刷物 (マニュアルなどの文書)、オンライン文書または電子文書、およびインターネット ベースのサービス (以下「本製品」といいます) を含むこともあります。本製品に本契約書の修正または追加条項が付属している場合があります。本製品をインストール、複製、または使用することによって、お客様は本契約書の条項に拘束されることに承諾されたものとします。本契約書の条項に同意されない場合、マイクロソフトは、お客様に本製品のインストールまたは使用のいずれも許諾できません。そのような場合、本製品を直ちに購入店へご返品いただければ、お支払いいただいた金額を全額払戻しいたします。
ソフトウェア製品ライセンス


1.  ライセンスの許諾  マイクロソフトは、お客様が本契約書のすべての条項および条件を厳守することを条件として、お客様に本契約書に記載されている権利を許諾します。  
       1.1 - 一般的ライセンスの許諾  お客様が個人の場合、マイクロソフトは、お客様のみが本製品を使用することを条件として、お客様のソフトウェア製品の設計、開発、およびテストのために本製品のコピーを作成および使用する属人的かつ非独占的なライセンスをお客様 1 名に許諾します。  
       お客様が法人の場合、マイクロソフトは、お客様の組織内で本製品を使用する各ユーザーについてお客様が個別に正規のライセンスを取得されていることを条件として、本製品のコピーを作成および使用する属人的かつ非独占的なライセンスをお客様 1 法人に許諾します。  
       1.2 – ドキュメント  お客様は、ドキュメントのコピーが個人的な目的で使用されること、かつ当該コピーがお客様の組織外に再発行または頒布（ハードコピーであると電子的形態であるとを問いません）されないことを条件として、当該コピーを数に限りなく作成して使用することができます。
       1.3 -記憶装置／ネットワークの使用  お客様は、ネットワークサーバーのような記憶装置に、本製品のコピー 1 部を蓄積またはインストールすることもできます。その場合、お客様は、本製品を本契約書第 1 条第 1 項に従ってライセンスを許諾されたエンド ユーザーによって使用されるコンピュータにインストールまたは実行するためだけに、かかる記憶装置上のコピーを使用しなければなりません。また、本製品についての 1 つのライセンスを他のエンド ユーザーと同時に共有または使用することはできません。

2.  追加のライセンスの権利 - 再頒布可能コード 本契約書第 1 条で許諾された権利に加え、本第2条に記載されているように、本製品の特定の部分に関して追加の権利が許諾されます。ただしその場合、本契約書第 3 条の頒布の条件およびライセンスに関する制限に従わなければなりません。
       2.1 - 構成ファイルおよびサンプル ソース コード  マイクロソフトはお客様に、お客様のソフトウェア製品を設計、開発、およびテストするためにのみ、(i) 本製品の REDIST.TXT ファイルに記載されている「構成ファイル」と指定されている部分、および (ii) 本製品の REDIST.TXT またはその他の場所で「サンプる」と指定されている部分 (以下本契約書で (i) および (ii) を総称して「本サンプル コード」といいます) のソース コード バージョンを使用および改変して、本サンプル コードをその改変されたものと共にオブジェクトコードまたはソース コードで複製および頒布する権利を許諾します。
       2.2 - 再頒布可能コード  マイクロソフトはお客様に、本製品の REDIST.TXTに記載されている部分 (以下「再頒布可能コード」といいます) のオブジェクト コードを複製および頒布する非独占的かつ無償の権利を許諾します。 

3.  ライセンスの制限 -- 頒布の条件  お客様が本契約書第 2 条に基づく権利を行使される場合は、再頒布に関して以下の条項に従うものとします。 
       3.1 - お客様は、本契約書第 2 条に記載されている本サンプルコードまたは再頒布可能コード (以下総称して「再頒布可能ファイル」といいます) を再頒布される場合、お客様は以下の条項に同意されるものとします。
       (i) 本サンプルコードのソースコードの再頒布を許可する本契約書第 2 条第 1 項に規定されている場合を除き、お客様は、再頒布可能ファイルをオブジェクト コードでのみ再頒布しなければなりません。
       (ii) お客様は、再頒布可能ファイルに重要かつ主要な機能を追加するお客様のアプリケーション製品 (以下「本ライセンス製品」といいます) と共におよびその一部としてのみ、再頒布可能ファイルを再頒布しなければなりません。
       (iii) 再頒布可能ファイルは、Microsoft Windows プラットフォームおよび Microsoft Mobile Internet Toolkit ランタイムと共にのみ動作するものでなければなりません。
       (iv) お客様は本ライセンス製品の販売にあたり、マイクロソフトの商号、ロゴまたは商標を使用することはできません。
       (v) お客様は、本ライセンス製品にお客様の名義で本製品に関するマイクロソフトの著作権を保護するに十分な著作権表示を付さなければなりません。
       (vi) お客様に提供された本製品に表示されている著作権、商標、または特許表示を削除したり隠してはいけません。
       (vii) お客様は、本ライセンス製品の使用または頒布の結果から生じる紛争、または訴訟について、マイクロソフトを免責、保護、補償するものとします (弁護士費用についての免責、保護、補償も含みます)。
       (viii) その他の点では、お客様は、本契約書の条項に従わなければなりません。
       (ix) 本契約書で明示的に許諾されていない権利はすべてマイクロソフトによって留保されることに同意するものとします。
       お客様は、エンド ユーザーに再頒布可能ファイルの再頒布を許可することはできません。ただし、お客様の頒布者が、本ライセンス製品と共におよびその一部としてのみ再頒布可能ファイルを頒布し、かつお客様と頒布者とが本契約書のその他の条項に従うことを条件とし、再頒布可能ファイルを頒布者からエンド ユーザーに再頒布することを許可することができます。
       3.2 -頒布に関する追加の条件 – Microsoft Merge Modules (「MSM」)
       お客様が、本製品のうち Microsoft Merge Modules と指定されているファイル(以下「.MSM ファイル」といいます) に関して本契約書第 3 条第 1 項の権利を行使される場合、再頒布に関して以下の条項に従わなければなりません。お客様は、MSM ファイルおよびMSMファイルに含まれるコンポーネントをドキュメントに記載されている方法でのみ再頒布することができます。ただし、MSMファイル自体はそのまま再頒布し、MSMファイルに含まれるコンポーネントをいかなる方法でも改変しないことを条件とします。
       3.3 - お客様が再頒布可能ファイルを使用する場合、再頒布可能ファイルに関して記載されている該当する頒布の条件に従うことに加え、以下の条項が適用されます。お客様の再頒布可能ファイルに関するライセンスの権利は以下の条項を条件とします。
       (i) 指定ソフトウェアを再頒布可能ファイルまたはその二次的著作物に組み込まないこと、それと一体化しないこと
       (ii) 指定ソフトウェアを再頒布可能ファイルまたはその二次的著作物と共に頒布しないこと
       (iii) 指定ソフトウェアを再頒布可能ファイルの二次的著作物の開発に使用しないこと
       「指定ソフトウェア」とは、(i)再頒布可能ファイルもしくはその二次的著作物に関してマイクロソフトに対する義務を直接または間接的に生じるもしくはそれを意図する条項、または (ii) 再頒布可能ファイルもしくはその二次的著作物に関するマイクロソフトの無体財産権または所有権に基づく権利もしくは免責を第三者に直接または間接的に付与するもしくはそれを意図する条項に従って許諾されたソフトウェアを意味します。指定ソフトウェアは、ソフトウェアの使用、改変または頒布の条件として、かかるソフトウェアに組み込まれている、それから派生している、もしくはそれと共に頒布されているその他のソフトウェアが (a) ソースコードで公開もしくは頒布されている、(b) 二次的著作物を作成するために許諾されている、または (c) 無償で再頒布できるソフトウェアを含みますが、それらに限定されません。 

4.  その他の権利および制限
       4.1 - Not For Resale ソフトウェア  本製品に「Not For Resale」または「NFR」と明記されている場合、お客様は本製品を再販売または他のいかなる方法でも対価を得て譲渡することはできません。
       4.2 - リバース エンジニアリング、逆コンパイル、逆アセンブルの制限  お客様は本製品をリバースエンジニアリング、逆コンパイル、または逆アセンブルすることはできません。
       4.3 - レンタル  お客様は本製品をレンタル、リースまたは貸与することはできません。
       4.4 - 商標  本契約書は、マイクロソフトの商標またはサービス マークに関する権利をお客様に許諾するものではありません。
       4.5 - データの使用に関する承諾  お客様は、マイクロソフトおよびその関連会社が、本製品に関連した製品サポートサービスの一部として集めた技術情報を収集して使用することがあることに承諾されるものとします。ただし、マイクロソフトは製品の向上のため、またはお客様にカスタマイズされたサービスもしくは技術を提供するためにのみ、この技術情報を使用するものとします。マイクロソフトは第三者にこの情報を開示できるものとしますが、その場合、お客様を特定することとなるような方法で開示しないものとします。
       4.6 - ソフトウェアの譲渡  本製品の最初のユーザーは、本契約および本製品を一度に限り直接エンドユーザーに恒久的に譲渡することができます。ただしその場合、本製品の一切 (全ての構成部分、媒体、マニュアルなどの文書、アップグレード、本契約書、およびあてはまる場合には Certificate of Authenticity を含みます) を譲渡することを条件とします。そのような譲渡は、委託その他の間接的な譲渡によることはできません。譲受人は、本契約書の条項に同意し、本契約書および本製品をさらに譲渡しないことに同意しなければなりません。
       4.7 - 構成部分の分離  本製品は 1 つの製品として許諾されています。その構成部分を分離して複数のユーザーが使用することはできません。
       4.8 – 契約の終了  お客様が本契約書の条項または条件に違反した場合、マイクロソフトは、他の権利を害することなく本契約を終了することができます。そのような場合、お客様は本製品の複製物およびその構成部分を全て破棄しなければなりません。

5.  プレリリース コード  本製品には出荷前のコード (以下「本プレリリースコード」といいます) を含む場合があり、これは機能および互換性の点において一般向けに出荷されることを予定する最終的な完成品ではありません。本プレリリースコードが正確に動作することおよび製品版の出荷前に実質的に変更されないことは、保証されていません。マイクロソフトは、本プレリリースコードまたはそのすべての後継バージョンを製品版にアップデートする義務を負いません。本プレリリース コードの使用許諾は、マイクロソフトによる本プレリリース コードの製品版の出荷と同時に消滅します。注意: 本プレリリース コードに別途の使用許諾契約書が含まれている場合は、対応する本プレリリース コードの使用については、かかる使用許諾契約書の条項および条件が適用されます。

6.  アップグレード  本製品がアップグレードである場合、本製品を使用するためには、マイクロソフトによってアップグレード対象製品と指定されている製品の正規のライセンスをお客様がお持ちでなければなりません。アップグレード後は、お客様はそのアップグレードの対象となる製品を使用することはできません。お客様はアップグレードした製品を本契約書の条項に従ってのみ使用することができます。本製品が 1 つの製品としてお客様にライセンスされたソフトウェア プログラム パッケージの構成部分のアップグレードの場合、本製品は、1 つの製品パッケージの一部としてのみ使用および譲渡できますが、構成部分を分離して複数のエンド ユーザーが使用することはできません。

7.  ダウングレード  本製品をインストールして使用するかわりに、お客様は、本製品の旧バージョンのコピー 1 部をインストールして使用することができます。ただしその場合、合理的な期間内に、お客様がそのような旧バージョンを完全に削除して本製品をインストールすることを条件とします。お客様のそのような旧バージョンの使用には本契約書が適用され、旧バージョンを使用する権利は本製品をインストールしたときに消滅するものとします。

8.  保証の限定  下記の『品質保証規定』（以下「本保証規定」といいます）は、お客様に適用される唯一の明示の品質保証規定であり、ドキュメントまたはパッケージに記載されるその他の明示的保証（該当する場合）に代替するものです。本製品に関して、本保証規定に規定されていない保証を一切いたしません。本保証規定を除き、かつ法律上許容される最大限において、マイクロソフトおよびその供給者は、本製品およびサポートサービスを現状有姿かつ瑕疵を問わない条件で提供しています。そのため、本製品、およびサポートまたは本製品を通じたその他のサービス、情報、ソフトウェア、および関連コンテンツの提供もしくは提供不能に関して、または本製品の使用から生じる、本保証規定に規定されていない保証（商品性、特定の目的に対する適合性、信頼性または可用性、応答の的確性、使用結果、職人的努力、ウィルスの不存在、および過失の不存在についての黙示の保証、義務または条件を含みますがこれらに限定されません）を、明示、黙示、若しくは法律上のものであるとを問わず一切いたしません。本製品に関する権原、平穏享有、平穏占有、表示との一致または権利侵害の不存在についての保証または条件についても同様です。

9.  損害に関する免責  法律上の請求の原因の種類を問わず、マイクロソフトおよびその供給者は、法律上許容される最大限において、本製品の使用もしくは使用不能、サポートまたは本製品を通じたその他のサービス、情報、ソフトウェア、および関連コンテンツの提供もしくは提供不能、または本製品の使用から生じる、またはその他本契約書に関して生じる特別損害、付随的損害、懲罰的損害、間接損害、派生的損害、またはその他の一切の損害 (逸失利益、機密情報もしくはその他の情報の喪失、事業の中断、人身傷害、プライバシーの喪失、誠実義務または合理的な注意義務を含めた義務の不履行、過失、またはその他の金銭的損失を含みますがこれらに限定されません) に関しては、マイクロソフトまたはその供給者の落ち度、不法行為（過失を含む）、無過失責任、契約違反または保証違反の場合であっても、一切責任を負いません。たとえ、マイクロソフトまたはその供給者がこのような損害の可能性について知らされていた場合でも同様です。

10.  責任及び救済手段の制限  いかなる理由において生じる損害 (上記および本保証規定の損害および直接損害または通常損害を含みますがこれらに限定されません) にも関わらず、本契約書に基づくマイクロソフトおよびその供給者の責任 (本保証規定違反に関してマイクロソフトによって選択された修理または交換による対応を除きます) は、本製品についてお客様が実際に支払った金額または 700 円のいずれか高い額を上限とします。たとえいかなる救済手段もその実質的目的を達せない場合でも、上記の責任制限、保証の限定および免責条項 (本契約書第 8 条および9 条を含む) が法律上最大限認められる限度で適用されます。

11.  第三者のサイトへのリンク  お客様は、本製品を使用して第三者のサイトにリンクすることができます。第三者のサイトは、マイクロソフトの管理のもとにはなく、マイクロソフトは、あらゆる第三者のサイトのコンテンツまたは第三者のサイトに含まれるリンクの内容、またはそれらの変更もしくは更新について責任を負いません。マイクロソフトは、いかなる第三者のサイトから受信されたウェブ キャスティングまたはその他のいかなる形式の送信についても責任を負いません。マイクロソフトは、お客様の便宜の一つとしてのみ第三者のサイトへのリンクを提供しているのであって、いかなるリンクが含まれていても、そのことがマイクロソフトによる第三者のサイトの推奨を意味するものではありません。  

12.  輸出規制  お客様は、本製品がアメリカ合衆国で製品化されたものであり、本製品がアメリカ合衆国の輸出に関する規制の対象となることを認めるものとします。お客様は、本製品に適用されるすべての国内法および国際法（アメリカ合衆国の輸出管理規則ならびにアメリカ合衆国、日本国およびその他の政府機関によるエンドユーザー、エンドユーザーによる使用、および輸出対象国に関する制限を含みます）を遵守することに同意されたものとします。詳細については http://www.microsoft.com/exporting/ をご参照ください。

13.  準拠法   本契約は、日本国法に準拠するものとします。

14.  完全な合意  本契約書 (本製品に含まれる本契約書の追加および修正を含みます) は、本製品およびサポート サービス (該当する場合) に関してお客様とマイクロソフトの間の完全な合意を構成し、本製品または本契約書で扱われているその他の主題に関するすべての以前および同時の口頭または書面による意思表示、提案、および表明を無効にします。マイクロソフトのポリシーまたはサポートサービスに関する条項が本契約書の条項と異なる場合は、本契約書の条項が適用されます。

15.  本製品は、著作権法ならびにその他の無体財産権に関する法律および条約によって保護されています。マイクロソフトおよびその供給者は、本製品に関する権原、著作権、およびその他の無体財産権を有しています。本製品は許諾されるもので、販売されるものではありません。
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\redist.txt ===
*****************************************
  Microsoft Mobile Internet Toolkit 1.0  
          Redistributable Files          
*****************************************


Redistributable Code:
---------------------
Program Files\Common Files\Merge Modules\MobileInternetToolkitRedist_xxx.msm, where 'xxx' is the language identifier
Windows\Microsoft.NET\Framework\v1.0.xxxx\System.Web.Mobile.dll, where 'xxxx' is the build number 
Windows\Microsoft.NET\Framework\v1.0.xxxx\xx\System.Web.Mobile.resources.dll, where 'xx' is the language identifier


Configuration Files:
--------------------
Windows\Microsoft.NET\Framework\v1.0.xxxx\CONFIG\machine.config, where 'xxxx' is the build number


Samples - Device Adapter Source:
--------------------------------
Adapter Source\ChtmlCalendarAdapter.cs
Adapter Source\ChtmlCommandAdapter.cs
Adapter Source\ChtmlFormAdapter.cs
Adapter Source\ChtmlImageAdapter.cs
Adapter Source\ChtmlLinkAdapter.cs
Adapter Source\ChtmlMobileTextWriter.cs
Adapter Source\ChtmlPageAdapter.cs
Adapter Source\ChtmlPhoneCallAdapter.cs
Adapter Source\ChtmlSelectionListAdapter.cs
Adapter Source\ChtmlTextBoxAdapter.cs
Adapter Source\ControlAdapter.cs
Adapter Source\EmptyTextWriter.cs
Adapter Source\HtmlCalendarAdapter.cs
Adapter Source\HtmlCommandAdapter.cs
Adapter Source\HtmlControlAdapter.cs
Adapter Source\HtmlFormAdapter.cs
Adapter Source\HtmlImageAdapter.cs
Adapter Source\HtmlLabelAdapter.cs
Adapter Source\HtmlLinkAdapter.cs
Adapter Source\HtmlListAdapter.cs
Adapter Source\HtmlLiteralTextAdapter.cs
Adapter Source\HtmlMobileTextWriter.cs
Adapter Source\HtmlObjectListAdapter.cs
Adapter Source\HtmlPageAdapter.cs
Adapter Source\HtmlPanelAdapter.cs
Adapter Source\HtmlPhoneCallAdapter.cs
Adapter Source\HtmlSelectionListAdapter.cs
Adapter Source\HtmlTextBoxAdapter.cs
Adapter Source\HtmlTextViewAdapter.cs
Adapter Source\HtmlValidationSummaryAdapter.cs
Adapter Source\HtmlValidatorAdapter.cs
Adapter Source\MobileTextWriter.cs
Adapter Source\MultiPartWriter.cs
Adapter Source\UpWmlMobileTextWriter.cs
Adapter Source\UpWmlPageAdapter.cs
Adapter Source\web.config-shippedAdapters
Adapter Source\WmlCalendarAdapter.cs
Adapter Source\WmlCommandAdapter.cs
Adapter Source\WmlControlAdapter.cs
Adapter Source\WmlFormAdapter.cs
Adapter Source\WmlImageAdapter.cs
Adapter Source\WmlLabelAdapter.cs
Adapter Source\WmlLinkAdapter.cs
Adapter Source\WmlListAdapter.cs
Adapter Source\WmlLiteralTextAdapter.cs
Adapter Source\WmlMobileTextWriter.cs
Adapter Source\WmlObjectListAdapter.cs
Adapter Source\WmlPageAdapter.cs
Adapter Source\WmlPanelAdapter.cs
Adapter Source\WmlPhoneCallAdapter.cs
Adapter Source\WmlPostFieldType.cs
Adapter Source\WmlSelectionListAdapter.cs
Adapter Source\WmlTextBoxAdapter.cs
Adapter Source\WmlTextViewAdapter.cs
Adapter Source\WmlValidationSummaryAdapter.cs
Adapter Source\WmlValidatorAdapter.cs


Samples - QuickStart Tutorial:
------------------------------
QuickStart\Default.aspx
QuickStart\QuickStartRedirect.htm
QuickStart\web.config
QuickStart\bin\Acme.CustomControlsCS.dll
QuickStart\bin\Acme.CustomControlsCS.pdb
QuickStart\bin\Acme.CustomControlsVB.dll
QuickStart\bin\Acme.CustomControlsVB.pdb
QuickStart\bin\Acme.CustomFiltersCS.dll
QuickStart\bin\Acme.CustomFiltersCS.pdb
QuickStart\bin\Acme.CustomFiltersVB.dll
QuickStart\bin\Acme.CustomFiltersVB.pdb
QuickStart\bin\Acme.MobileSMTPControlCS.dll
QuickStart\bin\Acme.MobileSMTPControlCS.pdb
QuickStart\bin\Acme.MobileSMTPControlVB.dll
QuickStart\bin\Acme.MobileSMTPControlVB.pdb
QuickStart\bin\Acme.PhoneBookDemoCS.dll
QuickStart\bin\Acme.PhoneBookDemoCS.pdb
QuickStart\bin\Acme.PhoneBookDemoVB.dll
QuickStart\bin\Acme.PhoneBookDemoVB.pdb
QuickStart\bin\Acme.TimerFormCS.dll
QuickStart\bin\Acme.TimerFormCS.pdb
QuickStart\bin\Acme.TimerFormVB.dll
QuickStart\bin\Acme.TimerFormVB.pdb
QuickStart\doc\Capabilities.aspx
QuickStart\doc\DeviceSpecific.aspx
QuickStart\doc\FMExpense.aspx
QuickStart\doc\HowToView.aspx
QuickStart\doc\IBuySpy.aspx
QuickStart\doc\Input.aspx
QuickStart\doc\Introduction.aspx
QuickStart\doc\Lists.aspx
QuickStart\doc\Localizing.aspx
QuickStart\doc\MailControl.aspx
QuickStart\doc\Pagination.aspx
QuickStart\doc\PhoneBook.aspx
QuickStart\doc\Resources.aspx
QuickStart\doc\SdkFeatures.aspx
QuickStart\doc\Security.aspx
QuickStart\doc\SimpleForms.aspx
QuickStart\doc\SpecialFeatures.aspx
QuickStart\doc\StateManagement.aspx
QuickStart\doc\Styles.aspx
QuickStart\doc\TimerForm.aspx
QuickStart\doc\toolbar.aspx
QuickStart\doc\WritingControls.aspx
QuickStart\doc\images\bullet.gif
QuickStart\images\bullet.gif
QuickStart\images\MIT_1line250x32.gif
QuickStart\images\qst_195x22.gif
QuickStart\include\copyright.aspx
QuickStart\include\footer.inc
QuickStart\include\header.inc
QuickStart\include\qsstyle.css
QuickStart\include\toc.inc
QuickStart\samples\default.aspx
QuickStart\samples\qsmake.bat
QuickStart\samples\DeviceCapabilities\Browser.desc
QuickStart\samples\DeviceCapabilities\Browser.src
QuickStart\samples\DeviceCapabilities\CustomFilters.desc
QuickStart\samples\DeviceCapabilities\CustomFilters.src
QuickStart\samples\DeviceCapabilities\samples.aspx
QuickStart\samples\DeviceCapabilities\cs\Browser.aspx
QuickStart\samples\DeviceCapabilities\cs\CustomFilters.aspx
QuickStart\samples\DeviceCapabilities\cs\CustomFilters.cs
QuickStart\samples\DeviceCapabilities\cs\web.config
QuickStart\samples\DeviceCapabilities\vb\Browser.aspx
QuickStart\samples\DeviceCapabilities\vb\CustomFilters.aspx
QuickStart\samples\DeviceCapabilities\vb\CustomFilters.vb
QuickStart\samples\DeviceCapabilities\vb\web.config
QuickStart\samples\DeviceSpecific\Arbitrary.desc
QuickStart\samples\DeviceSpecific\Arbitrary.src
QuickStart\samples\DeviceSpecific\Form.desc
QuickStart\samples\DeviceSpecific\Form.src
QuickStart\samples\DeviceSpecific\List.desc
QuickStart\samples\DeviceSpecific\List.src
QuickStart\samples\DeviceSpecific\Override.desc
QuickStart\samples\DeviceSpecific\Override.src
QuickStart\samples\DeviceSpecific\Programming.desc
QuickStart\samples\DeviceSpecific\Programming.src
QuickStart\samples\DeviceSpecific\samples.aspx
QuickStart\samples\DeviceSpecific\Stylesheet.desc
QuickStart\samples\DeviceSpecific\Stylesheet.src
QuickStart\samples\DeviceSpecific\cs\Arbitrary.aspx
QuickStart\samples\DeviceSpecific\cs\Form.aspx
QuickStart\samples\DeviceSpecific\cs\List.aspx
QuickStart\samples\DeviceSpecific\cs\Override.aspx
QuickStart\samples\DeviceSpecific\cs\Programming.aspx
QuickStart\samples\DeviceSpecific\cs\Stylesheet.aspx
QuickStart\samples\DeviceSpecific\images\Cloudy.gif
QuickStart\samples\DeviceSpecific\images\Rainy.gif
QuickStart\samples\DeviceSpecific\images\Sunny.gif
QuickStart\samples\DeviceSpecific\images\Weather.gif
QuickStart\samples\DeviceSpecific\vb\Arbitrary.aspx
QuickStart\samples\DeviceSpecific\vb\Form.aspx
QuickStart\samples\DeviceSpecific\vb\List.aspx
QuickStart\samples\DeviceSpecific\vb\Override.aspx
QuickStart\samples\DeviceSpecific\vb\Programming.aspx
QuickStart\samples\DeviceSpecific\vb\Stylesheet.aspx
QuickStart\samples\Introduction\ControlEvents.desc
QuickStart\samples\Introduction\ControlEvents.src
QuickStart\samples\Introduction\DisplayText.desc
QuickStart\samples\Introduction\DisplayText.src
QuickStart\samples\Introduction\Menu.desc
QuickStart\samples\Introduction\Menu.src
QuickStart\samples\Introduction\MultipleForms.desc
QuickStart\samples\Introduction\MultipleForms.src
QuickStart\samples\Introduction\samples.aspx
QuickStart\samples\Introduction\SimpleForm.desc
QuickStart\samples\Introduction\SimpleForm.src
QuickStart\samples\Introduction\cs\ControlEvents.aspx
QuickStart\samples\Introduction\cs\DisplayText.aspx
QuickStart\samples\Introduction\cs\Menu.aspx
QuickStart\samples\Introduction\cs\MultipleForms.aspx
QuickStart\samples\Introduction\cs\SimpleForm.aspx
QuickStart\samples\Introduction\vb\ControlEvents.aspx
QuickStart\samples\Introduction\vb\DisplayText.aspx
QuickStart\samples\Introduction\vb\Menu.aspx
QuickStart\samples\Introduction\vb\MultipleForms.aspx
QuickStart\samples\Introduction\vb\SimpleForm.aspx
QuickStart\samples\ListControls\ContextMenu.desc
QuickStart\samples\ListControls\ContextMenu.src
QuickStart\samples\ListControls\Databinding.desc
QuickStart\samples\ListControls\DataBinding.src
QuickStart\samples\ListControls\ListStyles.desc
QuickStart\samples\ListControls\ListStyles.src
QuickStart\samples\ListControls\ObjectList.desc
QuickStart\samples\ListControls\ObjectList.src
QuickStart\samples\ListControls\Pagination.desc
QuickStart\samples\ListControls\Pagination.src
QuickStart\samples\ListControls\samples.aspx
QuickStart\samples\ListControls\SelectionList.desc
QuickStart\samples\ListControls\SelectionList.src
QuickStart\samples\ListControls\SelectionListStyles.desc
QuickStart\samples\ListControls\SelectionListStyles.src
QuickStart\samples\ListControls\Simple.desc
QuickStart\samples\ListControls\Simple.src
QuickStart\samples\ListControls\cs\ContextMenu.aspx
QuickStart\samples\ListControls\cs\DataBinding.aspx
QuickStart\samples\ListControls\cs\ListStyles.aspx
QuickStart\samples\ListControls\cs\ObjectList.aspx
QuickStart\samples\ListControls\cs\Pagination.aspx
QuickStart\samples\ListControls\cs\SelectionList.aspx
QuickStart\samples\ListControls\cs\SelectionListStyles.aspx
QuickStart\samples\ListControls\cs\Simple.aspx
QuickStart\samples\ListControls\vb\ContextMenu.aspx
QuickStart\samples\ListControls\vb\DataBinding.aspx
QuickStart\samples\ListControls\vb\ListStyles.aspx
QuickStart\samples\ListControls\vb\ObjectList.aspx
QuickStart\samples\ListControls\vb\Pagination.aspx
QuickStart\samples\ListControls\vb\SelectionList.aspx
QuickStart\samples\ListControls\vb\SelectionListStyles.aspx
QuickStart\samples\ListControls\vb\Simple.aspx
QuickStart\samples\MobileSMTPControl\MobileSMTPControl.desc
QuickStart\samples\MobileSMTPControl\MobileSMTPControl.src
QuickStart\samples\MobileSMTPControl\cs\emailPage.aspx
QuickStart\samples\MobileSMTPControl\cs\MobileSMTPControl.cs
QuickStart\samples\MobileSMTPControl\vb\emailPage.aspx
QuickStart\samples\MobileSMTPControl\vb\MobileSMTPControl.vb
QuickStart\samples\Pagination\Custom.desc
QuickStart\samples\Pagination\Custom.src
QuickStart\samples\Pagination\Header.desc
QuickStart\samples\Pagination\Header.src
QuickStart\samples\Pagination\PagerStyle.desc
QuickStart\samples\Pagination\PagerStyle.src
QuickStart\samples\Pagination\samples.aspx
QuickStart\samples\Pagination\cs\Custom.aspx
QuickStart\samples\Pagination\cs\Header.aspx
QuickStart\samples\Pagination\cs\PagerStyle.aspx
QuickStart\samples\Pagination\vb\Custom.aspx
QuickStart\samples\Pagination\vb\Header.aspx
QuickStart\samples\Pagination\vb\PagerStyle.aspx
QuickStart\samples\PhoneBookApp\PhoneBook.desc
QuickStart\samples\PhoneBookApp\PhoneBook.src
QuickStart\samples\PhoneBookApp\cs\CorporatePhoneBook.cs
QuickStart\samples\PhoneBookApp\cs\PhoneBook.aspx
QuickStart\samples\PhoneBookApp\vb\CorporatePhoneBook.vb
QuickStart\samples\PhoneBookApp\vb\PhoneBook.aspx
QuickStart\samples\Security\login.desc
QuickStart\samples\Security\login.src
QuickStart\samples\Security\cs\FormsAuth.aspx
QuickStart\samples\Security\cs\login.aspx
QuickStart\samples\Security\cs\web.config
QuickStart\samples\Security\vb\FormsAuth.aspx
QuickStart\samples\Security\vb\login.aspx
QuickStart\samples\Security\vb\web.config
QuickStart\samples\SpecialFeatures\AdRotator.desc
QuickStart\samples\SpecialFeatures\AdRotator.src
QuickStart\samples\SpecialFeatures\Ads.xml
QuickStart\samples\SpecialFeatures\buyblue.bmp
QuickStart\samples\SpecialFeatures\buyblue.gif
QuickStart\samples\SpecialFeatures\buyblue.wbmp
QuickStart\samples\SpecialFeatures\buygreen.bmp
QuickStart\samples\SpecialFeatures\buygreen.gif
QuickStart\samples\SpecialFeatures\buygreen.wbmp
QuickStart\samples\SpecialFeatures\buyred.bmp
QuickStart\samples\SpecialFeatures\buyred.gif
QuickStart\samples\SpecialFeatures\buyred.wbmp
QuickStart\samples\SpecialFeatures\Calendar.desc
QuickStart\samples\SpecialFeatures\Calendar.src
QuickStart\samples\SpecialFeatures\Call.desc
QuickStart\samples\SpecialFeatures\Call.src
QuickStart\samples\SpecialFeatures\html-image.gif
QuickStart\samples\SpecialFeatures\Image.desc
QuickStart\samples\SpecialFeatures\Image.src
QuickStart\samples\SpecialFeatures\samples.aspx
QuickStart\samples\SpecialFeatures\wml-image.bmp
QuickStart\samples\SpecialFeatures\wml-image.wbmp
QuickStart\samples\SpecialFeatures\cs\AdRotator.aspx
QuickStart\samples\SpecialFeatures\cs\Calendar.aspx
QuickStart\samples\SpecialFeatures\cs\Call.aspx
QuickStart\samples\SpecialFeatures\cs\Image.aspx
QuickStart\samples\SpecialFeatures\vb\AdRotator.aspx
QuickStart\samples\SpecialFeatures\vb\Calendar.aspx
QuickStart\samples\SpecialFeatures\vb\Call.aspx
QuickStart\samples\SpecialFeatures\vb\Image.aspx
QuickStart\samples\StateManagement\ClientState.desc
QuickStart\samples\StateManagement\ClientState.src
QuickStart\samples\StateManagement\NoViewState.desc
QuickStart\samples\StateManagement\NoViewState.src
QuickStart\samples\StateManagement\OnViewStateExpire.desc
QuickStart\samples\StateManagement\OnViewStateExpire.src
QuickStart\samples\StateManagement\samples.aspx
QuickStart\samples\StateManagement\cs\ClientState.aspx
QuickStart\samples\StateManagement\cs\NoViewState.aspx
QuickStart\samples\StateManagement\cs\OnViewStateExpire.aspx
QuickStart\samples\StateManagement\vb\ClientState.aspx
QuickStart\samples\StateManagement\vb\NoViewState.aspx
QuickStart\samples\StateManagement\vb\OnViewStateExpire.aspx
QuickStart\samples\Styles\BuiltIn.desc
QuickStart\samples\Styles\BuiltIn.src
QuickStart\samples\Styles\DefinedStyleSheet.ascx
QuickStart\samples\Styles\ExternalStyleSheet.desc
QuickStart\samples\Styles\ExternalStyleSheet.src
QuickStart\samples\Styles\samples.aspx
QuickStart\samples\Styles\Styles.desc
QuickStart\samples\Styles\Styles.src
QuickStart\samples\Styles\Stylesheet.desc
QuickStart\samples\Styles\Stylesheet.src
QuickStart\samples\Styles\cs\BuiltIn.aspx
QuickStart\samples\Styles\cs\ExternalStyleSheet.aspx
QuickStart\samples\Styles\cs\Styles.aspx
QuickStart\samples\Styles\cs\Stylesheet.aspx
QuickStart\samples\Styles\vb\BuiltIn.aspx
QuickStart\samples\Styles\vb\ExternalStyleSheet.aspx
QuickStart\samples\Styles\vb\Styles.aspx
QuickStart\samples\Styles\vb\Stylesheet.aspx
QuickStart\samples\TimerForm\TimerForm.desc
QuickStart\samples\TimerForm\TimerForm.src
QuickStart\samples\TimerForm\cs\TimerForm.aspx
QuickStart\samples\TimerForm\cs\TimerForm.cs
QuickStart\samples\TimerForm\cs\web.config
QuickStart\samples\TimerForm\vb\TimerForm.aspx
QuickStart\samples\TimerForm\vb\TimerForm.vb
QuickStart\samples\TimerForm\vb\web.config
QuickStart\samples\UserInput\samples.aspx
QuickStart\samples\UserInput\SelectionList.desc
QuickStart\samples\UserInput\SelectionList.src
QuickStart\samples\UserInput\TextBoxes.desc
QuickStart\samples\UserInput\TextBoxes.src
QuickStart\samples\UserInput\Validation.desc
QuickStart\samples\UserInput\Validation.src
QuickStart\samples\UserInput\ValidationSummary.desc
QuickStart\samples\UserInput\ValidationSummary.src
QuickStart\samples\UserInput\cs\SelectionList.aspx
QuickStart\samples\UserInput\cs\TextBoxes.aspx
QuickStart\samples\UserInput\cs\Validation.aspx
QuickStart\samples\UserInput\cs\ValidationSummary.aspx
QuickStart\samples\UserInput\vb\SelectionList.aspx
QuickStart\samples\UserInput\vb\TextBoxes.aspx
QuickStart\samples\UserInput\vb\Validation.aspx
QuickStart\samples\UserInput\vb\ValidationSummary.aspx
QuickStart\samples\WritingControls\Composite.desc
QuickStart\samples\WritingControls\Composite.src
QuickStart\samples\WritingControls\Inheritance.desc
QuickStart\samples\WritingControls\Inheritance.src
QuickStart\samples\WritingControls\samples.aspx
QuickStart\samples\WritingControls\UserControl.desc
QuickStart\samples\WritingControls\UserControl.src
QuickStart\samples\WritingControls\cs\AcmeLogin.cs
QuickStart\samples\WritingControls\cs\AcmeMenu.cs
QuickStart\samples\WritingControls\cs\Composite.aspx
QuickStart\samples\WritingControls\cs\Inheritance.aspx
QuickStart\samples\WritingControls\cs\UserControl.ascx
QuickStart\samples\WritingControls\cs\UserControl.aspx
QuickStart\samples\WritingControls\vb\AcmeLogin.vb
QuickStart\samples\WritingControls\vb\AcmeMenu.vb
QuickStart\samples\WritingControls\vb\Composite.aspx
QuickStart\samples\WritingControls\vb\Inheritance.aspx
QuickStart\samples\WritingControls\vb\UserControl.ascx
QuickStart\samples\WritingControls\vb\UserControl.aspx
QuickStart\util\RunSample.aspx
QuickStart\util\SrcCtrl.ascx
QuickStart\util\SrcRef.ascx
QuickStart\util\SrcView.aspx
QuickStart\util\tocswitch.ascx
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\ja\redist.txt ===
*****************************************
  Microsoft Mobile Internet Toolkit 1.0  
          Ĕzz\t@C         
*****************************************


Ĕzz\R[h:
---------------------
Program Files\Common Files\Merge Modules\MobileInternetToolkitRedist_xxx.msm ('xxx' ͌ ID)
Windows\Microsoft.NET\Framework\v1.0.xxxx\System.Web.Mobile.dll ('xxxx' ̓rhԍ) 
Windows\Microsoft.NET\Framework\v1.0.xxxx\xx\System.Web.Mobile.resources.dll ('xx' ͌ ID)


\t@C:
--------------------
Windows\Microsoft.NET\Framework\v1.0.xxxx\CONFIG\machine.config ('xxxx' ̓rhԍ)


Tv | foCX A_v^ \[X R[h:
--------------------------------
Adapter Source\ChtmlCalendarAdapter.cs
Adapter Source\ChtmlCommandAdapter.cs
Adapter Source\ChtmlFormAdapter.cs
Adapter Source\ChtmlImageAdapter.cs
Adapter Source\ChtmlLinkAdapter.cs
Adapter Source\ChtmlMobileTextWriter.cs
Adapter Source\ChtmlPageAdapter.cs
Adapter Source\ChtmlPhoneCallAdapter.cs
Adapter Source\ChtmlSelectionListAdapter.cs
Adapter Source\ChtmlTextBoxAdapter.cs
Adapter Source\ControlAdapter.cs
Adapter Source\EmptyTextWriter.cs
Adapter Source\HtmlCalendarAdapter.cs
Adapter Source\HtmlCommandAdapter.cs
Adapter Source\HtmlControlAdapter.cs
Adapter Source\HtmlFormAdapter.cs
Adapter Source\HtmlImageAdapter.cs
Adapter Source\HtmlLabelAdapter.cs
Adapter Source\HtmlLinkAdapter.cs
Adapter Source\HtmlListAdapter.cs
Adapter Source\HtmlLiteralTextAdapter.cs
Adapter Source\HtmlMobileTextWriter.cs
Adapter Source\HtmlObjectListAdapter.cs
Adapter Source\HtmlPageAdapter.cs
Adapter Source\HtmlPanelAdapter.cs
Adapter Source\HtmlPhoneCallAdapter.cs
Adapter Source\HtmlSelectionListAdapter.cs
Adapter Source\HtmlTextBoxAdapter.cs
Adapter Source\HtmlTextViewAdapter.cs
Adapter Source\HtmlValidationSummaryAdapter.cs
Adapter Source\HtmlValidatorAdapter.cs
Adapter Source\MobileTextWriter.cs
Adapter Source\MultiPartWriter.cs
Adapter Source\UpWmlMobileTextWriter.cs
Adapter Source\UpWmlPageAdapter.cs
Adapter Source\web.config-shippedAdapters
Adapter Source\WmlCalendarAdapter.cs
Adapter Source\WmlCommandAdapter.cs
Adapter Source\WmlControlAdapter.cs
Adapter Source\WmlFormAdapter.cs
Adapter Source\WmlImageAdapter.cs
Adapter Source\WmlLabelAdapter.cs
Adapter Source\WmlLinkAdapter.cs
Adapter Source\WmlListAdapter.cs
Adapter Source\WmlLiteralTextAdapter.cs
Adapter Source\WmlMobileTextWriter.cs
Adapter Source\WmlObjectListAdapter.cs
Adapter Source\WmlPageAdapter.cs
Adapter Source\WmlPanelAdapter.cs
Adapter Source\WmlPhoneCallAdapter.cs
Adapter Source\WmlPostFieldType.cs
Adapter Source\WmlSelectionListAdapter.cs
Adapter Source\WmlTextBoxAdapter.cs
Adapter Source\WmlTextViewAdapter.cs
Adapter Source\WmlValidationSummaryAdapter.cs
Adapter Source\WmlValidatorAdapter.cs


Tv - NCbN X^[g `[gA:
------------------------------
QuickStart\Default.aspx
QuickStart\QuickStartRedirect.htm
QuickStart\web.config
QuickStart\bin\Acme.CustomControlsCS.dll
QuickStart\bin\Acme.CustomControlsCS.pdb
QuickStart\bin\Acme.CustomControlsVB.dll
QuickStart\bin\Acme.CustomControlsVB.pdb
QuickStart\bin\Acme.CustomFiltersCS.dll
QuickStart\bin\Acme.CustomFiltersCS.pdb
QuickStart\bin\Acme.CustomFiltersVB.dll
QuickStart\bin\Acme.CustomFiltersVB.pdb
QuickStart\bin\Acme.MobileSMTPControlCS.dll
QuickStart\bin\Acme.MobileSMTPControlCS.pdb
QuickStart\bin\Acme.MobileSMTPControlVB.dll
QuickStart\bin\Acme.MobileSMTPControlVB.pdb
QuickStart\bin\Acme.TimerFormCS.dll
QuickStart\bin\Acme.TimerFormCS.pdb
QuickStart\bin\Acme.TimerFormVB.dll
QuickStart\bin\Acme.TimerFormVB.pdb
QuickStart\doc\Capabilities.aspx
QuickStart\doc\DeviceSpecific.aspx
QuickStart\doc\FMExpense.aspx
QuickStart\doc\HowToView.aspx
QuickStart\doc\IBuySpy.aspx
QuickStart\doc\Input.aspx
QuickStart\doc\Introduction.aspx
QuickStart\doc\Lists.aspx
QuickStart\doc\Localizing.aspx
QuickStart\doc\MailControl.aspx
QuickStart\doc\Pagination.aspx
QuickStart\doc\Resources.aspx
QuickStart\doc\SdkFeatures.aspx
QuickStart\doc\Security.aspx
QuickStart\doc\SimpleForms.aspx
QuickStart\doc\SpecialFeatures.aspx
QuickStart\doc\StateManagement.aspx
QuickStart\doc\Styles.aspx
QuickStart\doc\TimerForm.aspx
QuickStart\doc\toolbar.aspx
QuickStart\doc\WritingControls.aspx
QuickStart\doc\images\bullet.gif
QuickStart\images\bullet.gif
QuickStart\images\MIT_1line250x32.gif
QuickStart\images\qst_195x22.gif
QuickStart\include\copyright.aspx
QuickStart\include\footer.inc
QuickStart\include\header.inc
QuickStart\include\qsstyle.css
QuickStart\include\toc.inc
QuickStart\samples\default.aspx
QuickStart\samples\qsmake.bat
QuickStart\samples\DeviceCapabilities\Browser.desc
QuickStart\samples\DeviceCapabilities\Browser.src
QuickStart\samples\DeviceCapabilities\CustomFilters.desc
QuickStart\samples\DeviceCapabilities\CustomFilters.src
QuickStart\samples\DeviceCapabilities\samples.aspx
QuickStart\samples\DeviceCapabilities\cs\Browser.aspx
QuickStart\samples\DeviceCapabilities\cs\CustomFilters.aspx
QuickStart\samples\DeviceCapabilities\cs\CustomFilters.cs
QuickStart\samples\DeviceCapabilities\cs\web.config
QuickStart\samples\DeviceCapabilities\vb\Browser.aspx
QuickStart\samples\DeviceCapabilities\vb\CustomFilters.aspx
QuickStart\samples\DeviceCapabilities\vb\CustomFilters.vb
QuickStart\samples\DeviceCapabilities\vb\web.config
QuickStart\samples\DeviceSpecific\Arbitrary.desc
QuickStart\samples\DeviceSpecific\Arbitrary.src
QuickStart\samples\DeviceSpecific\Form.desc
QuickStart\samples\DeviceSpecific\Form.src
QuickStart\samples\DeviceSpecific\List.desc
QuickStart\samples\DeviceSpecific\List.src
QuickStart\samples\DeviceSpecific\Override.desc
QuickStart\samples\DeviceSpecific\Override.src
QuickStart\samples\DeviceSpecific\Programming.desc
QuickStart\samples\DeviceSpecific\Programming.src
QuickStart\samples\DeviceSpecific\samples.aspx
QuickStart\samples\DeviceSpecific\Stylesheet.desc
QuickStart\samples\DeviceSpecific\Stylesheet.src
QuickStart\samples\DeviceSpecific\cs\Arbitrary.aspx
QuickStart\samples\DeviceSpecific\cs\Form.aspx
QuickStart\samples\DeviceSpecific\cs\List.aspx
QuickStart\samples\DeviceSpecific\cs\Override.aspx
QuickStart\samples\DeviceSpecific\cs\Programming.aspx
QuickStart\samples\DeviceSpecific\cs\Stylesheet.aspx
QuickStart\samples\DeviceSpecific\images\Cloudy.gif
QuickStart\samples\DeviceSpecific\images\Rainy.gif
QuickStart\samples\DeviceSpecific\images\Sunny.gif
QuickStart\samples\DeviceSpecific\images\Weather.gif
QuickStart\samples\DeviceSpecific\vb\Arbitrary.aspx
QuickStart\samples\DeviceSpecific\vb\Form.aspx
QuickStart\samples\DeviceSpecific\vb\List.aspx
QuickStart\samples\DeviceSpecific\vb\Override.aspx
QuickStart\samples\DeviceSpecific\vb\Programming.aspx
QuickStart\samples\DeviceSpecific\vb\Stylesheet.aspx
QuickStart\samples\Introduction\ControlEvents.desc
QuickStart\samples\Introduction\ControlEvents.src
QuickStart\samples\Introduction\DisplayText.desc
QuickStart\samples\Introduction\DisplayText.src
QuickStart\samples\Introduction\Menu.desc
QuickStart\samples\Introduction\Menu.src
QuickStart\samples\Introduction\MultipleForms.desc
QuickStart\samples\Introduction\MultipleForms.src
QuickStart\samples\Introduction\samples.aspx
QuickStart\samples\Introduction\SimpleForm.desc
QuickStart\samples\Introduction\SimpleForm.src
QuickStart\samples\Introduction\cs\ControlEvents.aspx
QuickStart\samples\Introduction\cs\DisplayText.aspx
QuickStart\samples\Introduction\cs\Menu.aspx
QuickStart\samples\Introduction\cs\MultipleForms.aspx
QuickStart\samples\Introduction\cs\SimpleForm.aspx
QuickStart\samples\Introduction\vb\ControlEvents.aspx
QuickStart\samples\Introduction\vb\DisplayText.aspx
QuickStart\samples\Introduction\vb\Menu.aspx
QuickStart\samples\Introduction\vb\MultipleForms.aspx
QuickStart\samples\Introduction\vb\SimpleForm.aspx
QuickStart\samples\ListControls\ContextMenu.desc
QuickStart\samples\ListControls\ContextMenu.src
QuickStart\samples\ListControls\Databinding.desc
QuickStart\samples\ListControls\DataBinding.src
QuickStart\samples\ListControls\ListStyles.desc
QuickStart\samples\ListControls\ListStyles.src
QuickStart\samples\ListControls\ObjectList.desc
QuickStart\samples\ListControls\ObjectList.src
QuickStart\samples\ListControls\Pagination.desc
QuickStart\samples\ListControls\Pagination.src
QuickStart\samples\ListControls\samples.aspx
QuickStart\samples\ListControls\SelectionList.desc
QuickStart\samples\ListControls\SelectionList.src
QuickStart\samples\ListControls\SelectionListStyles.desc
QuickStart\samples\ListControls\SelectionListStyles.src
QuickStart\samples\ListControls\Simple.desc
QuickStart\samples\ListControls\Simple.src
QuickStart\samples\ListControls\cs\ContextMenu.aspx
QuickStart\samples\ListControls\cs\DataBinding.aspx
QuickStart\samples\ListControls\cs\ListStyles.aspx
QuickStart\samples\ListControls\cs\ObjectList.aspx
QuickStart\samples\ListControls\cs\Pagination.aspx
QuickStart\samples\ListControls\cs\SelectionList.aspx
QuickStart\samples\ListControls\cs\SelectionListStyles.aspx
QuickStart\samples\ListControls\cs\Simple.aspx
QuickStart\samples\ListControls\vb\ContextMenu.aspx
QuickStart\samples\ListControls\vb\DataBinding.aspx
QuickStart\samples\ListControls\vb\ListStyles.aspx
QuickStart\samples\ListControls\vb\ObjectList.aspx
QuickStart\samples\ListControls\vb\Pagination.aspx
QuickStart\samples\ListControls\vb\SelectionList.aspx
QuickStart\samples\ListControls\vb\SelectionListStyles.aspx
QuickStart\samples\ListControls\vb\Simple.aspx
QuickStart\samples\MobileSMTPControl\MobileSMTPControl.desc
QuickStart\samples\MobileSMTPControl\MobileSMTPControl.src
QuickStart\samples\MobileSMTPControl\cs\emailPage.aspx
QuickStart\samples\MobileSMTPControl\cs\MobileSMTPControl.cs
QuickStart\samples\MobileSMTPControl\vb\emailPage.aspx
QuickStart\samples\MobileSMTPControl\vb\MobileSMTPControl.vb
QuickStart\samples\Pagination\Custom.desc
QuickStart\samples\Pagination\Custom.src
QuickStart\samples\Pagination\Header.desc
QuickStart\samples\Pagination\Header.src
QuickStart\samples\Pagination\PagerStyle.desc
QuickStart\samples\Pagination\PagerStyle.src
QuickStart\samples\Pagination\samples.aspx
QuickStart\samples\Pagination\cs\Custom.aspx
QuickStart\samples\Pagination\cs\Header.aspx
QuickStart\samples\Pagination\cs\PagerStyle.aspx
QuickStart\samples\Pagination\vb\Custom.aspx
QuickStart\samples\Pagination\vb\Header.aspx
QuickStart\samples\Pagination\vb\PagerStyle.aspx
QuickStart\samples\Security\login.desc
QuickStart\samples\Security\login.src
QuickStart\samples\Security\cs\FormsAuth.aspx
QuickStart\samples\Security\cs\login.aspx
QuickStart\samples\Security\cs\web.config
QuickStart\samples\Security\vb\FormsAuth.aspx
QuickStart\samples\Security\vb\login.aspx
QuickStart\samples\Security\vb\web.config
QuickStart\samples\SpecialFeatures\AdRotator.desc
QuickStart\samples\SpecialFeatures\AdRotator.src
QuickStart\samples\SpecialFeatures\Ads.xml
QuickStart\samples\SpecialFeatures\buyblue.bmp
QuickStart\samples\SpecialFeatures\buyblue.gif
QuickStart\samples\SpecialFeatures\buyblue.wbmp
QuickStart\samples\SpecialFeatures\buygreen.bmp
QuickStart\samples\SpecialFeatures\buygreen.gif
QuickStart\samples\SpecialFeatures\buygreen.wbmp
QuickStart\samples\SpecialFeatures\buyred.bmp
QuickStart\samples\SpecialFeatures\buyred.gif
QuickStart\samples\SpecialFeatures\buyred.wbmp
QuickStart\samples\SpecialFeatures\Calendar.desc
QuickStart\samples\SpecialFeatures\Calendar.src
QuickStart\samples\SpecialFeatures\Call.desc
QuickStart\samples\SpecialFeatures\Call.src
QuickStart\samples\SpecialFeatures\html-image.gif
QuickStart\samples\SpecialFeatures\Image.desc
QuickStart\samples\SpecialFeatures\Image.src
QuickStart\samples\SpecialFeatures\samples.aspx
QuickStart\samples\SpecialFeatures\wml-image.bmp
QuickStart\samples\SpecialFeatures\wml-image.wbmp
QuickStart\samples\SpecialFeatures\cs\AdRotator.aspx
QuickStart\samples\SpecialFeatures\cs\Calendar.aspx
QuickStart\samples\SpecialFeatures\cs\Call.aspx
QuickStart\samples\SpecialFeatures\cs\Image.aspx
QuickStart\samples\SpecialFeatures\vb\AdRotator.aspx
QuickStart\samples\SpecialFeatures\vb\Calendar.aspx
QuickStart\samples\SpecialFeatures\vb\Call.aspx
QuickStart\samples\SpecialFeatures\vb\Image.aspx
QuickStart\samples\StateManagement\ClientState.desc
QuickStart\samples\StateManagement\ClientState.src
QuickStart\samples\StateManagement\NoViewState.desc
QuickStart\samples\StateManagement\NoViewState.src
QuickStart\samples\StateManagement\OnViewStateExpire.desc
QuickStart\samples\StateManagement\OnViewStateExpire.src
QuickStart\samples\StateManagement\samples.aspx
QuickStart\samples\StateManagement\cs\ClientState.aspx
QuickStart\samples\StateManagement\cs\NoViewState.aspx
QuickStart\samples\StateManagement\cs\OnViewStateExpire.aspx
QuickStart\samples\StateManagement\vb\ClientState.aspx
QuickStart\samples\StateManagement\vb\NoViewState.aspx
QuickStart\samples\StateManagement\vb\OnViewStateExpire.aspx
QuickStart\samples\Styles\BuiltIn.desc
QuickStart\samples\Styles\BuiltIn.src
QuickStart\samples\Styles\DefinedStyleSheet.ascx
QuickStart\samples\Styles\ExternalStyleSheet.desc
QuickStart\samples\Styles\ExternalStyleSheet.src
QuickStart\samples\Styles\samples.aspx
QuickStart\samples\Styles\Styles.desc
QuickStart\samples\Styles\Styles.src
QuickStart\samples\Styles\Stylesheet.desc
QuickStart\samples\Styles\Stylesheet.src
QuickStart\samples\Styles\cs\BuiltIn.aspx
QuickStart\samples\Styles\cs\ExternalStyleSheet.aspx
QuickStart\samples\Styles\cs\Styles.aspx
QuickStart\samples\Styles\cs\Stylesheet.aspx
QuickStart\samples\Styles\vb\BuiltIn.aspx
QuickStart\samples\Styles\vb\ExternalStyleSheet.aspx
QuickStart\samples\Styles\vb\Styles.aspx
QuickStart\samples\Styles\vb\Stylesheet.aspx
QuickStart\samples\TimerForm\TimerForm.desc
QuickStart\samples\TimerForm\TimerForm.src
QuickStart\samples\TimerForm\cs\TimerForm.aspx
QuickStart\samples\TimerForm\cs\TimerForm.cs
QuickStart\samples\TimerForm\cs\web.config
QuickStart\samples\TimerForm\vb\TimerForm.aspx
QuickStart\samples\TimerForm\vb\TimerForm.vb
QuickStart\samples\TimerForm\vb\web.config
QuickStart\samples\UserInput\samples.aspx
QuickStart\samples\UserInput\SelectionList.desc
QuickStart\samples\UserInput\SelectionList.src
QuickStart\samples\UserInput\TextBoxes.desc
QuickStart\samples\UserInput\TextBoxes.src
QuickStart\samples\UserInput\Validation.desc
QuickStart\samples\UserInput\Validation.src
QuickStart\samples\UserInput\ValidationSummary.desc
QuickStart\samples\UserInput\ValidationSummary.src
QuickStart\samples\UserInput\cs\SelectionList.aspx
QuickStart\samples\UserInput\cs\TextBoxes.aspx
QuickStart\samples\UserInput\cs\Validation.aspx
QuickStart\samples\UserInput\cs\ValidationSummary.aspx
QuickStart\samples\UserInput\vb\SelectionList.aspx
QuickStart\samples\UserInput\vb\TextBoxes.aspx
QuickStart\samples\UserInput\vb\Validation.aspx
QuickStart\samples\UserInput\vb\ValidationSummary.aspx
QuickStart\samples\WritingControls\Composite.desc
QuickStart\samples\WritingControls\Composite.src
QuickStart\samples\WritingControls\Inheritance.desc
QuickStart\samples\WritingControls\Inheritance.src
QuickStart\samples\WritingControls\samples.aspx
QuickStart\samples\WritingControls\UserControl.desc
QuickStart\samples\WritingControls\UserControl.src
QuickStart\samples\WritingControls\cs\AcmeLogin.cs
QuickStart\samples\WritingControls\cs\AcmeMenu.cs
QuickStart\samples\WritingControls\cs\Composite.aspx
QuickStart\samples\WritingControls\cs\Inheritance.aspx
QuickStart\samples\WritingControls\cs\UserControl.ascx
QuickStart\samples\WritingControls\cs\UserControl.aspx
QuickStart\samples\WritingControls\vb\AcmeLogin.vb
QuickStart\samples\WritingControls\vb\AcmeMenu.vb
QuickStart\samples\WritingControls\vb\Composite.aspx
QuickStart\samples\WritingControls\vb\Inheritance.aspx
QuickStart\samples\WritingControls\vb\UserControl.ascx
QuickStart\samples\WritingControls\vb\UserControl.aspx
QuickStart\util\RunSample.aspx
QuickStart\util\SrcCtrl.ascx
QuickStart\util\SrcRef.ascx
QuickStart\util\SrcView.aspx
QuickStart\util\tocswitch.ascx
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\localization\jpn\mobileitrtf\mobileitlicenseagreementmemo.rtf ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f28\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f130\froman\fcharset238\fprq2 Times New Roman CE;}{\f131\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f133\froman\fcharset161\fprq2 Times New Roman Greek;} {\f134\froman\fcharset162\fprq2 Times New Roman Tur;}{\f135\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f136\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f137\froman\fcharset186\fprq2 Times New Roman Baltic;} {\f138\fswiss\fcharset238\fprq2 Arial CE;}{\f139\fswiss\fcharset204\fprq2 Arial Cyr;}{\f141\fswiss\fcharset161\fprq2 Arial Greek;}{\f142\fswiss\fcharset162\fprq2 Arial Tur;}{\f143\fswiss\fcharset177\fprq2 Arial (Hebrew);} {\f144\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f145\fswiss\fcharset186\fprq2 Arial Baltic;}{\f354\fswiss\fcharset238\fprq2 Verdana CE;}{\f355\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f357\fswiss\fcharset161\fprq2 Verdana Greek;} {\f358\fswiss\fcharset162\fprq2 Verdana Tur;}{\f361\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0; \red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f28\fs20\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext15 Text,t;}{\*\cs16 \additive \b \sbasedon10 Bold,b;}}{\info{\author Frank Delia}{\operator Frank Delia} {\creatim\yr2001\mo5\dy17\hr16\min56}{\revtim\yr2001\mo5\dy17\hr16\min57}{\version2}{\edmins1}{\nofpages6}{\nofwords2482}{\nofchars14152}{\*\company Microsoft}{\nofcharsws17379}{\vern8269}} \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl  {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5 \pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \f28\fs20\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {This is a legal agreement (\'93Agreement\'94) between you (either an individual or an entity), the end user (\'93Recipient\'94), and Microsoft Corporation (\'93Microsoft\'94).  }{\b BY }{ \cs16\b INSTALLING, COPYING OR OTHERWISE USING THE SOFTWARE (AS DEFINED BELOW), YOU AGREE TO BE BOUND BY THE TERMS OF THIS AGREEMENT.  IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, DO NOT INSTALL, COPY OR USE THE SOFTWARE.}{\b  \par }{ \par }\pard \s15\qc \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {MICROSOFT CORPORATION LICENSE AGREEMENT \par FOR PRERELEASE SOFTWARE \par }\pard \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 { \par }\pard \s15\qc \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {Microsoft Mobile Internet Toolkit Beta 2 \par }\pard \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {Accompanying this Agreement is a prerelease copy of the Microsoft software identified above, which includes soft ware and related documentation and information (collectively the \'93Software\'94 ). The Software is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The Software is licensed, not sold.   \par }{\cs16\b 1.\~\~\~GRANT OF LICENSE; RESTRICTIONS; ACKNOWLEDGEMENT.}{  This Agreement grants Recipient the following rights provided that Recipient complies with all terms and conditions of this Agreement: }{\b  \par }{\cs16\b \~\~\~(a)\~\~\~License Grant for Internal Use; Applications}{.  Microsoft  grants to Recipient a limited, non-exclusive, nontransferable, royalty-free license to install and use unlimited copies of the executable code of the Software on any number of CPUs residing on Recipient\rquote  s premises running validly licensed copies of both Microsoft Windows 2000 and the Microsoft .Net Framework  (each a server), solely (i) to test the compatibility of Recipient\rquote  s application or other product(s) which operate in conjunction with the Software and to evaluate the Software for the purpose of providing feedback thereon to Microsoft, and (ii) to develop software applications (\'93Applications\'94 ) for use in accordance with Section 3 of this Agreement.  All other rights are reserved to Microsoft except as expressly provided herein.   \par \~\~\~(b)\~\~\~License to Device Adapter Code.  In addition to the rights granted in Section 1(a), Microsoft grants to Recipient the right to use, copy and modify the source code version of those portions of the Software identified as \'93 Device Adapter Code\'94 (\'93Device Adapter Code\'94) for the sole purposes of designing, developing, and testing Recipient\rquote  s Applications, and to reproduce and distribute the Device Adapter Code, along with any modifications thereof, solely in object code form as a part of Recipient\rquote s Applications in accordanc e with Section 3 of this Agreement. In addition to the conditions set forth in Section 3 of this Agreement, the foregoing license is subject to the following conditions:  (i) any modifications or derivatives made by Recipient to the Device Adapter Code sh ll only be used in conjunction with the Software; and (ii) Recipient shall not distribute the Device Adapter Code, or any portion thereof, on a stand-alone basis or otherwise permit further distribution of the Device Adapter Code and/or derivatives thereo f by third parties.   \par \~\~\~(c)\~\~\~Open Source}{.  }{Recipient\rquote s license rights to the Software are conditioned upon Recipient (i) not distributing such Software, in whole or in part, in conjunction with Potentially Viral Software (as defined below); and (ii) not u sing Potentially Viral Software (e.g. tools) to develop Recipient software which includes the Software, in whole or in part.  For purposes of the foregoing, \'93Potentially Viral Software\'94  means software which is licensed pursuant to terms that: (x) create, or purport to create, obligations for Microsoft with respect to the Software or (y) grant, or purport to grant, to any third party any rights to or immunities under Microsoft\rquote  s intellectual property or proprietary rights in the Software.  By way of example but not limitation of the foregoing, Recipient shall not distribute the Software, in whole or in part, in conjunction with any Publicly Available Software.  \'93 Publicly Available Software\'94 means each of (i) any software that contains, or is derived in any ma nner (in whole or in part) from, any software that is distributed as free software, open source software (e.g. Linux) or similar licensing or distribution models; and (ii) any software that requires as a condition of use, modification and/or distribution  f such software that other software distributed with such software (A) be disclosed or distributed in source code form; (B) be licensed for the purpose of making derivative works; or (C) be redistributable at no charge.  Publicly Available Software includ es, without limitation, software licensed or distributed under any of the following licenses or distribution models, or licenses or distribution models similar to any of the following: (A) GNU\rquote  s General Public License (GPL) or Lesser/Library GPL (LGPL), (B)  The Artistic License (e.g., PERL), (C) the Mozilla Public License, (D) the Netscape Public License, (E) the Sun Community Source License (SCSL), and (F) the Sun Industry Standards License (SISL). \par }{\cs16\b \~\~\~(d)\~\~\~ACKNOWLEDGEMENT.}{  All other rights are reserved to  Microsoft.  Recipient shall not rent, lease, sell, sublicense, assign, or otherwise transfer any portion of the Software.  Recipient may not reverse engineer, decompile or disassemble any portion of the Software, except and only to the extent that this l imitation is expressly prohibited by applicable law notwithstanding this limitation.  \par }{\cs16\b 2.\~\~\~FEEDBACK}{.  Recipient agrees to provide reasonable feedback to Microsoft, including but not limited to usability, bug reports and test results, with respect to Softwar e testing. All bug reports, test results and other feedback provided to Microsoft by Recipient shall be the property of Microsoft and may be used by Microsoft for any purpose.  Due to the nature of the development work, Microsoft provides no assurance tha t any specific errors or discrepancies in the Software will be corrected.  Recipient may not use the Software in a live operating environment with data that has not been sufficiently backed up. \par }{\cs16\b 3.  \~\~\~APPROVED USES OF APPLICATIONS. \par }{\~\~\~(a)\~\~\~Except as provid ed in Subsection 3(b), Recipient may only use Applications on an internal basis for non-production purposes only and may not distribute or license the Applications to third parties or make the Applications available for use by any third party. \par \~\~\~(b)\~\~\~Rec ipient may deploy and make Applications available for use by third parties via the Internet provided that for the purposes of such deployment, the Application is hosted by an Approved Hoster.  The list of Approved Hosters is available within the Visual St dio.Net software product, on the Visual Studio.NET Start page, in the Web Hosting Section. The Approved Hoster may require a separate hosting agreement with the Recipient and Microsoft disclaims all liability related to any agreements or services provided  by the Approved Hoster.  In addition, }{Recipient agrees (i) to promptly upgrade to and obtain a license for the commercially released version of the Software when it becomes generally available to the public; (ii) to install all updates as \'93 mandatory updates\'94  by Microsoft within 2 business days of receipt of such updates (all updates delivered to Recipient by Microsoft shall be subject to this Agreement); (iii) that Recipient is solely responsible for updating its customers with versions of Applications that  operate satisfactorily with the final commercially released version of the Software; (iv) not to use Microsoft\rquote  s name, logo, or trademarks to market the Application, provided however, that any Application that includes the Device Adapter Code or any deriv atives thereof must include a clear statement indicating that such Application is based upon the Microsoft Mobile Internet Toolkit; (v) to include a valid copyright notice on the Applications in Recipient\rquote  s name; (vi) to indemnify and hold harmless Microsoft from and against any claims or lawsuits, including attorneys\rquote   fees, that arise from or result from the use or deployment of the Application; (vii) to otherwise comply with the terms of this EULA; and (viii) that Microsoft reserves all rights not expressly granted.}{ \par }{\cs16\b 4.\~\~\~TERM OF AGREEMENT}{ . The term of this Agreement shall commence on the date accepted by Recipient and shall continue until terminated by Microsoft in writing at any time, with or without cause.  This Agreement will terminate without notice upon the earlier of (i)\~ commercial release of the Software or (ii)\~one year after the last date Recipient receives the Software or any Update thereto, unless terminated earlier by Microsoft.  Upon the termination of this Agreement (or upon request by Microso ft), Recipient shall promptly return to Microsoft, or certify destruction of, all full or partial copies of the Software provided by Microsoft.  The following Sections shall survive termination or expiration of this Agreement:  Sections 2, 7, 8, 9, 10 and  11.   \par }{\cs16\b 5.\~\~\~COST OF TESTING.}{  There is no charge to Recipient for testing of the Software.   \par }{\cs16\b 6.\~\~\~MAINTENANCE/UPDATES.}{  Microsoft is not obligated to provide maintenance, technical support or updates to Recipient for the Software provided to Recipient pursu ant to this Agreement or to provide any support with respect to the Applications.  However, Microsoft may, in its sole discretion, provide further pre-release versions, technical support, updates and/or supplements of the Software and/or related informati on (\'93Updates\'94) to Recipient hereunder, in which case such Updates shall also be deemed to be included in the \'93Software\'94  and therefore governed by this Agreement, unless other terms of use are provided by Microsoft with such Updates.  In no event shall Micro soft be obligated to provide Recipient a copy of the commercial release version of the Software in connection with Recipient\rquote s participation in the testing program.  Microsoft is not obligated to make the Software commercially available. \par }{\cs16\b 7.\~\~\~INTELLECTUAL PROPERTY RIGHTS.}{ All title and intellectual property rights in and to the Software (including but not limited to any images, photographs, animations, video, audio, music, text and \'93applets\'94  incorporated into the Software), and any copies of the Software th at Recipient is expressly permitted to make herein, are owned by Microsoft or its suppliers.  All title and intellectual property rights in and to the content that may be accessed through use of the Software are the property of the respective content owne  and may be protected by applicable copyright or other intellectual property laws and treaties.  This Agreement grants Recipient no rights to use such content.  If the Software contains documentation that is provided only in electronic form, Recipient may  print one copy of such electronic documentation.  Recipient may not copy the printed materials accompanying the Software.  Microsoft reserves all rights not expressly granted.  \par }{\cs16\b 8.\~\~\~DISCLAIMER OF WARRANTIES.}{  THE SOFTWARE IS DEEMED ACCEPTED BY RECIPIENT.   THE SOFTWARE CONTAINS PRE-RELEASE SOFTWARE AND MAY BE CHANGED SUBSTANTIALLY BEFORE COMMERCIAL RELEASE.  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, MICROSOFT AND ITS SUPPLIERS PROVIDE THE SOFTWARE AND ANY (IF ANY) SUPPORT SERVICES RELATED TO THE SO FTWARE (\'93SUPPORT SERVICES\'94 ) AS IS AND WITH ALL FAULTS, AND HEREBY DISCLAIM WITH RESPECT TO THE SOFTWARE AND SUPPORT SERVICES ALL WARRANTIES AND CONDITIONS, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY (IF ANY) WARRANTIES, DUTIES  OR CONDITIONS OF OR RELATED TO: MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS OF RESPONSES, RESULTS, WORKMANLIKE EFFORT AND LACK OF NEGLIGENCE.  ALSO, THERE IS NO WARRANTY, DUTY OR CONDITION OF TITLE, QUIET  ENJOYMENT, QUIET POSSESSION, AND CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT.  THE ENTIRE RISK AS TO THE QUALITY, OR ARISING OUT OF THE USE OR PERFORMANCE OF THE SOFTWARE AND ANY SUPPORT SERVICES, REMAINS WITH RECIPIENT.   \par }{\cs16\b 9.\~\~\~EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.}{   TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY DIRECT, SPECIAL, INCIDENTAL, INDIRECT, PUNITIVE, CONSEQUENTIAL OR OTHER DAMAGES WHATSOEVER (INCLUD ING, BUT NOT LIMITED TO, DAMAGES FOR: LOSS OF PROFITS, LOSS OF CONFIDENTIAL OR OTHER INFORMATION, BUSINESS INTERRUPTION, PERSONAL INJURY, LOSS OF PRIVACY, FAILURE TO MEET ANY DUTY (INCLUDING OF GOOD FAITH OR OF REASONABLE CARE), NEGLIGENCE, AND ANY OTHER  ECUNIARY OR OTHER LOSS WHATSOEVER) ARISING OUT OF OR IN ANY WAY RELATED TO THE USE OF OR INABILITY TO USE THE SOFTWARE OR SUPPORT SERVICES, THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT SERVICES, OR OTHERWISE UNDER OR IN CONNECTION WITH ANY PROVISION OF  HIS AGREEMENT, EVEN IN THE EVENT OF THE FAULT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, BREACH OF CONTRACT OR BREACH OF WARRANTY OF MICROSOFT OR ANY SUPPLIER, AND EVEN IF MICROSOFT OR ANY SUPPLIER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.   BECAUSE SOME STATES/JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO RECIPIENT. \par }{\cs16\b 10.\~\~\~LIMITATION OF LIABILITY AND REMEDIES}{. NOTWITHSTANDING ANY DAMAGES THAT  RECIPIENT MIGHT INCUR FOR ANY REASON WHATSOEVER (INCLUDING, WITHOUT LIMITATION, ALL DAMAGES REFERENCED ABOVE AND ALL DIRECT OR GENERAL DAMAGES), THE ENTIRE LIABILITY OF MICROSOFT AND ANY OF ITS SUPPLIERS UNDER ANY PROVISION OF THIS AGREEMENT AND RECIPIENT \rquote  S EXCLUSIVE REMEDY FOR ALL OF THE FOREGOING SHALL BE LIMITED TO ACTUAL DAMAGES INCURRED BY YOU BASED ON REASONABLE RELIANCE UP TO THE LESSER OF THE AMOUNT ACTUALLY PAID BY RECIPIENT FOR THE SOFTWARE OR FIVE DOLLARS (US$5.00).  THE FOREGOING LIMITATIONS, E XCLUSIONS AND DISCLAIMERS (INCLUDING SECTIONS 8 AND 9 ABOVE) SHALL APPLY TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, EVEN IF ANY REMEDY FAILS ITS ESSENTIAL PURPOSE. \par }{\cs16\b 11.\~\~\~GOVERNING LAW/JURISDICTION/ATTORNEYS\rquote  FEES}{. This Agreement shall be construed}{\fs24  }{a nd controlled by the laws of the State of Washington, and Recipient consents to exclusive jurisdiction and venue in the federal courts sitting in King County, Washington, unless no federal jurisdiction exists, in which case Recipient consents to exclusive jurisdiction and venue in the Superior Court of King County, Washington.  Recipient waives all defenses of lack of personal jurisdiction and forum non-conveniens.  Process may be served on either party in the manner authorized by applicable law or court r ule.  If either party employs attorneys to enforce any rights arising out of or relating to this Agreement, the prevailing party shall be entitled to recover its reasonable attorneys' fees, costs and other expenses. \par }{\cs16\b 12.\~\~\~U.S. GOVERNMENT RIGHTS}{. All Softwar e provided to the U.S. Government pursuant to solicitations issued on or after December 1, 1995 is provided with the rights and restrictions described elsewhere herein.  All Software provided to the U.S. Government pursuant to solicitations issued prior t o December 1, 1995 is provided with RESTRICTED RIGHTS as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable. \par }{\cs16\b 13.\~\~\~EXPORT RESTRICTIONS}{.  Recipient acknowledges that Software is of U.S. origin. Recipient  agrees to comply with all applicable international and national laws that apply to the Software, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For addi tional information, see <http://www.microsoft.com/exporting/>. \par }{\cs16\b 14.\~\~\~NOTE ON JAVA SUPPORT}{. THE SOFTWARE MAY CONTAIN SUPPORT FOR PROGRAMS WRITTEN IN JAVA. JAVA TECHNOLOGY IS NOT FAULT TOLERANT AND IS NOT DESIGNED, MANUFACTURED, OR INTENDED FOR USE OR RESALE  AS ONLINE CONTROL EQUIPMENT IN HAZARDOUS ENVIRONMENTS REQUIRING FAIL-SAFE PERFORMANCE, SUCH AS IN THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, DIRECT LIFE SUPPORT MACHINES, OR WEAPONS SYSTEMS, IN  WHICH THE FAILURE OF JAVA TECHNOLOGY COULD LEAD DIRECTLY TO DEATH, PERSONAL INJURY, OR SEVERE PHYSICAL OR ENVIRONMENTAL DAMAGE. Sun Microsystems, Inc. has contractually obligated Microsoft to make this disclaimer. \par }{\cs16\b 15.\~\~\~ENTIRE AGREEMENT}{.  This Agreement con stitutes the complete and exclusive agreement between Microsoft and Recipient with respect to the subject matter hereof, and supersedes all prior or contemporaneous oral or written communications, proposals, representations, understandings, or agreements  not specifically incorporated herein.  This Agreement may not be amended except in a writing duly signed by an authorized representative of Microsoft and Recipient. \par }{\cs16\b 16.\~\~\~PARTIES BOUND}{.  If Recipient is executing this Agreement on behalf of an entity, then  Recipient represents he/she has authority to execute this Agreement on behalf of such entity and agrees that the Software (and any copies thereof) shall remain on the company premises, unless otherwise agreed to in writing by Microsoft. \par }{\cs16\b 17.}{\~\~\~Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please write}{\fs24  }{Microsoft Corporation, One Microsoft Way, Redmond WA 98052-6399.}{\fs24  \par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\localization\deu\mobileitrtf\mobileitlicenseagreementmemo.rtf ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;} {\f28\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f130\froman\fcharset238\fprq2 Times New Roman CE;}{\f131\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f133\froman\fcharset161\fprq2 Times New Roman Greek;} {\f134\froman\fcharset162\fprq2 Times New Roman Tur;}{\f135\froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f136\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f137\froman\fcharset186\fprq2 Times New Roman Baltic;} {\f138\fswiss\fcharset238\fprq2 Arial CE;}{\f139\fswiss\fcharset204\fprq2 Arial Cyr;}{\f141\fswiss\fcharset161\fprq2 Arial Greek;}{\f142\fswiss\fcharset162\fprq2 Arial Tur;}{\f143\fswiss\fcharset177\fprq2 Arial (Hebrew);} {\f144\fswiss\fcharset178\fprq2 Arial (Arabic);}{\f145\fswiss\fcharset186\fprq2 Arial Baltic;}{\f354\fswiss\fcharset238\fprq2 Verdana CE;}{\f355\fswiss\fcharset204\fprq2 Verdana Cyr;}{\f357\fswiss\fcharset161\fprq2 Verdana Greek;} {\f358\fswiss\fcharset162\fprq2 Verdana Tur;}{\f361\fswiss\fcharset186\fprq2 Verdana Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0; \red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{ \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f28\fs20\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext15 Text,t;}{\*\cs16 \additive \b \sbasedon10 Bold,b;}}{\info{\author Frank Delia}{\operator Frank Delia} {\creatim\yr2001\mo5\dy17\hr16\min56}{\revtim\yr2001\mo5\dy17\hr16\min57}{\version2}{\edmins1}{\nofpages6}{\nofwords2482}{\nofchars14152}{\*\company Microsoft}{\nofcharsws17379}{\vern8269}} \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind4\viewscale100\nolnhtadjtbl \fet0\sectd \linex0\sectdefaultcl  {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5 \pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \f28\fs20\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {This is a legal agreement (\'93Agreement\'94) between you (either an individual or an entity), the end user (\'93Recipient\'94), and Microsoft Corporation (\'93Microsoft\'94).  }{\b BY }{ \cs16\b INSTALLING, COPYING OR OTHERWISE USING THE SOFTWARE (AS DEFINED BELOW), YOU AGREE TO BE BOUND BY THE TERMS OF THIS AGREEMENT.  IF YOU DO NOT AGREE TO THE TERMS OF THIS AGREEMENT, DO NOT INSTALL, COPY OR USE THE SOFTWARE.}{\b  \par }{ \par }\pard \s15\qc \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {MICROSOFT CORPORATION LICENSE AGREEMENT \par FOR PRERELEASE SOFTWARE \par }\pard \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 { \par }\pard \s15\qc \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {Microsoft Mobile Internet Toolkit Beta 2 \par }\pard \s15\ql \li0\ri0\sb60\sa60\sl-260\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {Accompanying this Agreement is a prerelease copy of the Microsoft software identified above, which includes soft ware and related documentation and information (collectively the \'93Software\'94 ). The Software is protected by copyright laws and international copyright treaties, as well as other intellectual property laws and treaties. The Software is licensed, not sold.   \par }{\cs16\b 1.\~\~\~GRANT OF LICENSE; RESTRICTIONS; ACKNOWLEDGEMENT.}{  This Agreement grants Recipient the following rights provided that Recipient complies with all terms and conditions of this Agreement: }{\b  \par }{\cs16\b \~\~\~(a)\~\~\~License Grant for Internal Use; Applications}{.  Microsoft  grants to Recipient a limited, non-exclusive, nontransferable, royalty-free license to install and use unlimited copies of the executable code of the Software on any number of CPUs residing on Recipient\rquote  s premises running validly licensed copies of both Microsoft Windows 2000 and the Microsoft .Net Framework  (each a server), solely (i) to test the compatibility of Recipient\rquote  s application or other product(s) which operate in conjunction with the Software and to evaluate the Software for the purpose of providing feedback thereon to Microsoft, and (ii) to develop software applications (\'93Applications\'94 ) for use in accordance with Section 3 of this Agreement.  All other rights are reserved to Microsoft except as expressly provided herein.   \par \~\~\~(b)\~\~\~License to Device Adapter Code.  In addition to the rights granted in Section 1(a), Microsoft grants to Recipient the right to use, copy and modify the source code version of those portions of the Software identified as \'93 Device Adapter Code\'94 (\'93Device Adapter Code\'94) for the sole purposes of designing, developing, and testing Recipient\rquote  s Applications, and to reproduce and distribute the Device Adapter Code, along with any modifications thereof, solely in object code form as a part of Recipient\rquote s Applications in accordanc e with Section 3 of this Agreement. In addition to the conditions set forth in Section 3 of this Agreement, the foregoing license is subject to the following conditions:  (i) any modifications or derivatives made by Recipient to the Device Adapter Code sh ll only be used in conjunction with the Software; and (ii) Recipient shall not distribute the Device Adapter Code, or any portion thereof, on a stand-alone basis or otherwise permit further distribution of the Device Adapter Code and/or derivatives thereo f by third parties.   \par \~\~\~(c)\~\~\~Open Source}{.  }{Recipient\rquote s license rights to the Software are conditioned upon Recipient (i) not distributing such Software, in whole or in part, in conjunction with Potentially Viral Software (as defined below); and (ii) not u sing Potentially Viral Software (e.g. tools) to develop Recipient software which includes the Software, in whole or in part.  For purposes of the foregoing, \'93Potentially Viral Software\'94  means software which is licensed pursuant to terms that: (x) create, or purport to create, obligations for Microsoft with respect to the Software or (y) grant, or purport to grant, to any third party any rights to or immunities under Microsoft\rquote  s intellectual property or proprietary rights in the Software.  By way of example but not limitation of the foregoing, Recipient shall not distribute the Software, in whole or in part, in conjunction with any Publicly Available Software.  \'93 Publicly Available Software\'94 means each of (i) any software that contains, or is derived in any ma nner (in whole or in part) from, any software that is distributed as free software, open source software (e.g. Linux) or similar licensing or distribution models; and (ii) any software that requires as a condition of use, modification and/or distribution  f such software that other software distributed with such software (A) be disclosed or distributed in source code form; (B) be licensed for the purpose of making derivative works; or (C) be redistributable at no charge.  Publicly Available Software includ es, without limitation, software licensed or distributed under any of the following licenses or distribution models, or licenses or distribution models similar to any of the following: (A) GNU\rquote  s General Public License (GPL) or Lesser/Library GPL (LGPL), (B)  The Artistic License (e.g., PERL), (C) the Mozilla Public License, (D) the Netscape Public License, (E) the Sun Community Source License (SCSL), and (F) the Sun Industry Standards License (SISL). \par }{\cs16\b \~\~\~(d)\~\~\~ACKNOWLEDGEMENT.}{  All other rights are reserved to  Microsoft.  Recipient shall not rent, lease, sell, sublicense, assign, or otherwise transfer any portion of the Software.  Recipient may not reverse engineer, decompile or disassemble any portion of the Software, except and only to the extent that this l imitation is expressly prohibited by applicable law notwithstanding this limitation.  \par }{\cs16\b 2.\~\~\~FEEDBACK}{.  Recipient agrees to provide reasonable feedback to Microsoft, including but not limited to usability, bug reports and test results, with respect to Softwar e testing. All bug reports, test results and other feedback provided to Microsoft by Recipient shall be the property of Microsoft and may be used by Microsoft for any purpose.  Due to the nature of the development work, Microsoft provides no assurance tha t any specific errors or discrepancies in the Software will be corrected.  Recipient may not use the Software in a live operating environment with data that has not been sufficiently backed up. \par }{\cs16\b 3.  \~\~\~APPROVED USES OF APPLICATIONS. \par }{\~\~\~(a)\~\~\~Except as provid ed in Subsection 3(b), Recipient may only use Applications on an internal basis for non-production purposes only and may not distribute or license the Applications to third parties or make the Applications available for use by any third party. \par \~\~\~(b)\~\~\~Rec ipient may deploy and make Applications available for use by third parties via the Internet provided that for the purposes of such deployment, the Application is hosted by an Approved Hoster.  The list of Approved Hosters is available within the Visual St dio.Net software product, on the Visual Studio.NET Start page, in the Web Hosting Section. The Approved Hoster may require a separate hosting agreement with the Recipient and Microsoft disclaims all liability related to any agreements or services provided  by the Approved Hoster.  In addition, }{Recipient agrees (i) to promptly upgrade to and obtain a license for the commercially released version of the Software when it becomes generally available to the public; (ii) to install all updates as \'93 mandatory updates\'94  by Microsoft within 2 business days of receipt of such updates (all updates delivered to Recipient by Microsoft shall be subject to this Agreement); (iii) that Recipient is solely responsible for updating its customers with versions of Applications that  operate satisfactorily with the final commercially released version of the Software; (iv) not to use Microsoft\rquote  s name, logo, or trademarks to market the Application, provided however, that any Application that includes the Device Adapter Code or any deriv atives thereof must include a clear statement indicating that such Application is based upon the Microsoft Mobile Internet Toolkit; (v) to include a valid copyright notice on the Applications in Recipient\rquote  s name; (vi) to indemnify and hold harmless Microsoft from and against any claims or lawsuits, including attorneys\rquote   fees, that arise from or result from the use or deployment of the Application; (vii) to otherwise comply with the terms of this EULA; and (viii) that Microsoft reserves all rights not expressly granted.}{ \par }{\cs16\b 4.\~\~\~TERM OF AGREEMENT}{ . The term of this Agreement shall commence on the date accepted by Recipient and shall continue until terminated by Microsoft in writing at any time, with or without cause.  This Agreement will terminate without notice upon the earlier of (i)\~ commercial release of the Software or (ii)\~one year after the last date Recipient receives the Software or any Update thereto, unless terminated earlier by Microsoft.  Upon the termination of this Agreement (or upon request by Microso ft), Recipient shall promptly return to Microsoft, or certify destruction of, all full or partial copies of the Software provided by Microsoft.  The following Sections shall survive termination or expiration of this Agreement:  Sections 2, 7, 8, 9, 10 and  11.   \par }{\cs16\b 5.\~\~\~COST OF TESTING.}{  There is no charge to Recipient for testing of the Software.   \par }{\cs16\b 6.\~\~\~MAINTENANCE/UPDATES.}{  Microsoft is not obligated to provide maintenance, technical support or updates to Recipient for the Software provided to Recipient pursu ant to this Agreement or to provide any support with respect to the Applications.  However, Microsoft may, in its sole discretion, provide further pre-release versions, technical support, updates and/or supplements of the Software and/or related informati on (\'93Updates\'94) to Recipient hereunder, in which case such Updates shall also be deemed to be included in the \'93Software\'94  and therefore governed by this Agreement, unless other terms of use are provided by Microsoft with such Updates.  In no event shall Micro soft be obligated to provide Recipient a copy of the commercial release version of the Software in connection with Recipient\rquote s participation in the testing program.  Microsoft is not obligated to make the Software commercially available. \par }{\cs16\b 7.\~\~\~INTELLECTUAL PROPERTY RIGHTS.}{ All title and intellectual property rights in and to the Software (including but not limited to any images, photographs, animations, video, audio, music, text and \'93applets\'94  incorporated into the Software), and any copies of the Software th at Recipient is expressly permitted to make herein, are owned by Microsoft or its suppliers.  All title and intellectual property rights in and to the content that may be accessed through use of the Software are the property of the respective content owne  and may be protected by applicable copyright or other intellectual property laws and treaties.  This Agreement grants Recipient no rights to use such content.  If the Software contains documentation that is provided only in electronic form, Recipient may  print one copy of such electronic documentation.  Recipient may not copy the printed materials accompanying the Software.  Microsoft reserves all rights not expressly granted.  \par }{\cs16\b 8.\~\~\~DISCLAIMER OF WARRANTIES.}{  THE SOFTWARE IS DEEMED ACCEPTED BY RECIPIENT.   THE SOFTWARE CONTAINS PRE-RELEASE SOFTWARE AND MAY BE CHANGED SUBSTANTIALLY BEFORE COMMERCIAL RELEASE.  TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, MICROSOFT AND ITS SUPPLIERS PROVIDE THE SOFTWARE AND ANY (IF ANY) SUPPORT SERVICES RELATED TO THE SO FTWARE (\'93SUPPORT SERVICES\'94 ) AS IS AND WITH ALL FAULTS, AND HEREBY DISCLAIM WITH RESPECT TO THE SOFTWARE AND SUPPORT SERVICES ALL WARRANTIES AND CONDITIONS, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY (IF ANY) WARRANTIES, DUTIES  OR CONDITIONS OF OR RELATED TO: MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS OF RESPONSES, RESULTS, WORKMANLIKE EFFORT AND LACK OF NEGLIGENCE.  ALSO, THERE IS NO WARRANTY, DUTY OR CONDITION OF TITLE, QUIET  ENJOYMENT, QUIET POSSESSION, AND CORRESPONDENCE TO DESCRIPTION OR NON-INFRINGEMENT.  THE ENTIRE RISK AS TO THE QUALITY, OR ARISING OUT OF THE USE OR PERFORMANCE OF THE SOFTWARE AND ANY SUPPORT SERVICES, REMAINS WITH RECIPIENT.   \par }{\cs16\b 9.\~\~\~EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.}{   TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL MICROSOFT OR ITS SUPPLIERS BE LIABLE FOR ANY DIRECT, SPECIAL, INCIDENTAL, INDIRECT, PUNITIVE, CONSEQUENTIAL OR OTHER DAMAGES WHATSOEVER (INCLUD ING, BUT NOT LIMITED TO, DAMAGES FOR: LOSS OF PROFITS, LOSS OF CONFIDENTIAL OR OTHER INFORMATION, BUSINESS INTERRUPTION, PERSONAL INJURY, LOSS OF PRIVACY, FAILURE TO MEET ANY DUTY (INCLUDING OF GOOD FAITH OR OF REASONABLE CARE), NEGLIGENCE, AND ANY OTHER  ECUNIARY OR OTHER LOSS WHATSOEVER) ARISING OUT OF OR IN ANY WAY RELATED TO THE USE OF OR INABILITY TO USE THE SOFTWARE OR SUPPORT SERVICES, THE PROVISION OF OR FAILURE TO PROVIDE SUPPORT SERVICES, OR OTHERWISE UNDER OR IN CONNECTION WITH ANY PROVISION OF  HIS AGREEMENT, EVEN IN THE EVENT OF THE FAULT, TORT (INCLUDING NEGLIGENCE), STRICT LIABILITY, BREACH OF CONTRACT OR BREACH OF WARRANTY OF MICROSOFT OR ANY SUPPLIER, AND EVEN IF MICROSOFT OR ANY SUPPLIER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.   BECAUSE SOME STATES/JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES, THE ABOVE LIMITATION MAY NOT APPLY TO RECIPIENT. \par }{\cs16\b 10.\~\~\~LIMITATION OF LIABILITY AND REMEDIES}{. NOTWITHSTANDING ANY DAMAGES THAT  RECIPIENT MIGHT INCUR FOR ANY REASON WHATSOEVER (INCLUDING, WITHOUT LIMITATION, ALL DAMAGES REFERENCED ABOVE AND ALL DIRECT OR GENERAL DAMAGES), THE ENTIRE LIABILITY OF MICROSOFT AND ANY OF ITS SUPPLIERS UNDER ANY PROVISION OF THIS AGREEMENT AND RECIPIENT \rquote  S EXCLUSIVE REMEDY FOR ALL OF THE FOREGOING SHALL BE LIMITED TO ACTUAL DAMAGES INCURRED BY YOU BASED ON REASONABLE RELIANCE UP TO THE LESSER OF THE AMOUNT ACTUALLY PAID BY RECIPIENT FOR THE SOFTWARE OR FIVE DOLLARS (US$5.00).  THE FOREGOING LIMITATIONS, E XCLUSIONS AND DISCLAIMERS (INCLUDING SECTIONS 8 AND 9 ABOVE) SHALL APPLY TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, EVEN IF ANY REMEDY FAILS ITS ESSENTIAL PURPOSE. \par }{\cs16\b 11.\~\~\~GOVERNING LAW/JURISDICTION/ATTORNEYS\rquote  FEES}{. This Agreement shall be construed}{\fs24  }{a nd controlled by the laws of the State of Washington, and Recipient consents to exclusive jurisdiction and venue in the federal courts sitting in King County, Washington, unless no federal jurisdiction exists, in which case Recipient consents to exclusive jurisdiction and venue in the Superior Court of King County, Washington.  Recipient waives all defenses of lack of personal jurisdiction and forum non-conveniens.  Process may be served on either party in the manner authorized by applicable law or court r ule.  If either party employs attorneys to enforce any rights arising out of or relating to this Agreement, the prevailing party shall be entitled to recover its reasonable attorneys' fees, costs and other expenses. \par }{\cs16\b 12.\~\~\~U.S. GOVERNMENT RIGHTS}{. All Softwar e provided to the U.S. Government pursuant to solicitations issued on or after December 1, 1995 is provided with the rights and restrictions described elsewhere herein.  All Software provided to the U.S. Government pursuant to solicitations issued prior t o December 1, 1995 is provided with RESTRICTED RIGHTS as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable. \par }{\cs16\b 13.\~\~\~EXPORT RESTRICTIONS}{.  Recipient acknowledges that Software is of U.S. origin. Recipient  agrees to comply with all applicable international and national laws that apply to the Software, including the U.S. Export Administration Regulations, as well as end-user, end-use and destination restrictions issued by U.S. and other governments. For addi tional information, see <http://www.microsoft.com/exporting/>. \par }{\cs16\b 14.\~\~\~NOTE ON JAVA SUPPORT}{. THE SOFTWARE MAY CONTAIN SUPPORT FOR PROGRAMS WRITTEN IN JAVA. JAVA TECHNOLOGY IS NOT FAULT TOLERANT AND IS NOT DESIGNED, MANUFACTURED, OR INTENDED FOR USE OR RESALE  AS ONLINE CONTROL EQUIPMENT IN HAZARDOUS ENVIRONMENTS REQUIRING FAIL-SAFE PERFORMANCE, SUCH AS IN THE OPERATION OF NUCLEAR FACILITIES, AIRCRAFT NAVIGATION OR COMMUNICATION SYSTEMS, AIR TRAFFIC CONTROL, DIRECT LIFE SUPPORT MACHINES, OR WEAPONS SYSTEMS, IN  WHICH THE FAILURE OF JAVA TECHNOLOGY COULD LEAD DIRECTLY TO DEATH, PERSONAL INJURY, OR SEVERE PHYSICAL OR ENVIRONMENTAL DAMAGE. Sun Microsystems, Inc. has contractually obligated Microsoft to make this disclaimer. \par }{\cs16\b 15.\~\~\~ENTIRE AGREEMENT}{.  This Agreement con stitutes the complete and exclusive agreement between Microsoft and Recipient with respect to the subject matter hereof, and supersedes all prior or contemporaneous oral or written communications, proposals, representations, understandings, or agreements  not specifically incorporated herein.  This Agreement may not be amended except in a writing duly signed by an authorized representative of Microsoft and Recipient. \par }{\cs16\b 16.\~\~\~PARTIES BOUND}{.  If Recipient is executing this Agreement on behalf of an entity, then  Recipient represents he/she has authority to execute this Agreement on behalf of such entity and agrees that the Software (and any copies thereof) shall remain on the company premises, unless otherwise agreed to in writing by Microsoft. \par }{\cs16\b 17.}{\~\~\~Should you have any questions concerning this Agreement, or if you desire to contact Microsoft for any reason, please write}{\fs24  }{Microsoft Corporation, One Microsoft Way, Redmond WA 98052-6399.}{\fs24  \par }\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f1\fs20  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\eula.rtf ===
{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe2052{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Device Font 10cpi};} {\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f39\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f41\fswiss\fcharset0\fprq2{\*\panose 020b0706030402020204}Franklin Gothic Demi Cond;} {\f42\fswiss\fcharset0\fprq2{\*\panose 020b0503020102020204}Franklin Gothic Book;}{\f114\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Device Font 10cpi};}{\f115\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Device Font 10cpi};} {\f117\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Device Font 10cpi};}{\f118\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Device Font 10cpi};}{\f119\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Device Font 10cpi};} {\f121\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Device Font 10cpi};}{\f122\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Device Font 10cpi};}{\f474\fswiss\fcharset238\fprq2 Tahoma CE;} {\f475\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f477\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f478\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f479\fswiss\fcharset177\fprq2 Tahoma (Hebrew);}{\f480\fswiss\fcharset178\fprq2 Tahoma (Arabic);} {\f481\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f482\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f483\fswiss\fcharset222\fprq2 Tahoma (Thai);}{\f504\froman\fcharset238\fprq2 Book Antiqua CE;}{\f505\froman\fcharset204\fprq2 Book Antiqua Cyr;} {\f507\froman\fcharset161\fprq2 Book Antiqua Greek;}{\f508\froman\fcharset162\fprq2 Book Antiqua Tur;}{\f511\froman\fcharset186\fprq2 Book Antiqua Baltic;}{\f524\fswiss\fcharset238\fprq2 Franklin Gothic Demi Cond CE;} {\f525\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cond Cyr;}{\f527\fswiss\fcharset161\fprq2 Franklin Gothic Demi Cond Greek;}{\f528\fswiss\fcharset162\fprq2 Franklin Gothic Demi Cond Tur;} {\f531\fswiss\fcharset186\fprq2 Franklin Gothic Demi Cond Baltic;}{\f534\fswiss\fcharset238\fprq2 Franklin Gothic Book CE;}{\f535\fswiss\fcharset204\fprq2 Franklin Gothic Book Cyr;}{\f537\fswiss\fcharset161\fprq2 Franklin Gothic Book Greek;} {\f538\fswiss\fcharset162\fprq2 Franklin Gothic Book Tur;}{\f541\fswiss\fcharset186\fprq2 Franklin Gothic Book Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255; \red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;} {\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 \styrsid1646531 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \fi-274\li274\ri0\sb120\sl-460\slmult0 \nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin274\itap0 \f41\fs44\lang1033\langfe1033\kerning42\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext15 \styrsid1646531 1. Section Head;}{\s16\ql \li0\ri0\sb120\sl-200\slmult0\widctlpar\brdrt \brdrs\brdrw15 \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \caps\f41\fs16\lang1033\langfe1033\kerning16\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext16 \styrsid1646531 4. LA Para Head;}{\s17\ql \li0\ri-18\sb120\sl-240\slmult0 \widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin-18\lin0\itap0 \f41\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext17 \styrsid1646531 2. LA Subhead;}{\s18\ql \li0\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext18 \styrsid1646531 3. LA Body;}{\s19\ql \fi-187\li187\ri0\sb60\sl-180\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin187\itap0 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon18 \snext19 \styrsid1646531 3c. Numbered;}{\s20\ql \fi-340\li624\ri0\sb60\sl-160\slmult0 \widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin624\itap0 \f42\fs14\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon18 \snext20 \styrsid1646531 3i. Numbered 2nd level;}{\s21\ql \li0\ri0\sb240\sl-240\slmult0\widctlpar \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f41\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 \sbasedon17 \snext21 \styrsid1646531 2a. French Subhead;}{\s22\ql \li0\ri0\sl-180\slmult0\widctlpar \tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f42\fs16\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext22 \styrsid1646531 footer;}{\s23\ql \li0\ri0\sl-320\slmult0\widctlpar \tx360\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \f42\fs12\cf5\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext23 \styrsid1646531 6. Part No.;}{\s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \f36\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext24 \ssemihidden \styrsid5904086 Balloon Text;}{\s25\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat9  \f36\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext25 \ssemihidden \styrsid5059897 Document Map;}{\s26\ql \li0\ri0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \sbasedon0 \snext26 \styrsid5059897 header;}}{\*\rsidtbl \rsid275282\rsid287840\rsid334859\rsid618292\rsid800165\rsid1013005\rsid1072242\rsid1143574\rsid1646531\rsid1836251\rsid1864437\rsid2125132 \rsid2308270\rsid2621893\rsid3428299\rsid3876592\rsid5059897\rsid5904086\rsid5991874\rsid6036662\rsid6116526\rsid6358755\rsid6646379\rsid6954920\rsid7170211\rsid7294237\rsid7415356\rsid7996222\rsid8329541\rsid8998226\rsid9713087\rsid9913882\rsid11096249 \rsid11220697\rsid11222677\rsid11695900\rsid11888841\rsid12129176\rsid12535088\rsid13385018\rsid13700452\rsid13720106\rsid13960048\rsid14370486\rsid15018394\rsid15480512\rsid16325550}{\*\generator Microsoft Word 10.0.2930;}{\info {\title NEED TO ADD SMC language}{\author Martha Minier (LCA)}{\operator Jeff Lanning}{\creatim\yr2001\mo10\dy31\hr18\min18}{\revtim\yr2001\mo10\dy31\hr18\min18}{\version2}{\edmins1}{\nofpages9}{\nofwords4483}{\nofchars23987} {\*\company Microsoft Corporation}{\nofcharsws28406}{\vern16443}}{\*\userprops {\propname _AdHocReviewCycleID}\proptype3{\staticval -1822406991}{\propname _EmailSubject}\proptype30{\staticval EULA status..coming in an hour or so..sorry for delay <eom>} {\propname _AuthorEmail}\proptype30{\staticval martham@microsoft.com}{\propname _AuthorEmailDisplayName}\proptype30{\staticval Martha Minier (LCA)}{\propname _ReviewingToolsShownOnce}\proptype30{\staticval }}\margl1440\margr1440  \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin\dghspace180\dgvspace180\dghorigin1440\dgvorigin1440\dghshow1\dgvshow1 \jexpand\viewkind1\viewscale115\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct\asianbrkrule\rsidroot9913882 \fet0\sectd  \psz1\linex0\headery0\titlepg\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4 \pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (} {\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain  \s15\ql \li0\ri0\nowidctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid1836251 \f41\fs44\lang1033\langfe1033\kerning42\cgrid\langnp1033\langfenp1033 {\b\f39\fs22\insrsid1646531  END-USER LICENSE AGREEMENT FOR MICROSOFT SOFTWARE}{\b\f39\fs22\kerning44\insrsid1646531  \par }\pard\plain \s17\ql \li0\ri-17\widctlpar\aspalpha\aspnum\faauto\adjustright\rin-17\lin0\itap0\pararsid1836251 \f41\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 {\b\f39\insrsid1836251  \par }{\b\f39\insrsid1646531 IMPORTANT\emdash READ CAREFULLY: }{\b\f39\insrsid11695900  }{\f39\insrsid1646531 This End-User License Agreement (\'93EULA\'94 ) is a legal agreement between you (either an individual or a single entity) and Microsoft Corporation for the Microsoft software product identified above, which includes computer software and may include associated media, printed materials, \'93online \'94 or electronic documentation, and Internet}{\f39\insrsid11695900 -based services (\'93Product\'94).  }{\f39\insrsid1646531 An amendment or addendum to this EULA may accompany the Product.  }{\b\f39\insrsid1646531  YOU AGREE TO BE BOUND BY THE TERMS OF THIS EULA BY INSTALLING, COPYING, OR OTHERWISE USING THE PRODUCT. IF YOU DO NOT AGREE, DO NOT INSTALL OR USE THE PRODUCT; YOU MAY RETURN IT TO YOUR PLACE OF PURCHASE FOR A FULL REFUND.}{\b\f39\insrsid1836251  \par }\pard\plain \s16\ql \li0\ri0\sa60\widctlpar\brdrt\brdrs\brdrw15 \aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid5059897 \caps\f41\fs16\lang1033\langfe1033\kerning16\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid1836251  \par }{\f39\fs22\insrsid1646531 Software PRODUCT LICENSE \par }\pard\plain \s18\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid5059897 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\scaps\f39\fs24\insrsid7170211\charrsid5991874  Microsoft Mobile Internet Toolkit}{\b\scaps\f39\fs24\insrsid1646531\charrsid5991874  \par }\pard\plain \ql \li0\ri0\sa60\widctlpar\faauto\rin0\lin0\itap0\pararsid6954920 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid1646531 1.}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 GRANTS OF LICENSE}{\f39\fs22\insrsid1646531 . }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531  Microsoft grants you the rights described in this EULA provided that you comply with all terms and conditions of this EULA.  }{\f39\fs20\insrsid1646531\charrsid11222677  \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs14\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid1646531 1.1}{\f39\fs22\insrsid5059897  - }{ \b\i\f39\fs22\insrsid1646531 General License Grant}{\f39\fs22\insrsid1646531 . }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531 Microsoft grants to you as an individual, a personal, nonexclusive license to make and use copies of t he Product for the purposes of designing, developing, and testing your software product(s), provided that you are the only individual using the Product.   \par If you are an entity, Microsoft grants to you a personal, nonexclusive license to make and use copies  of the Product, provided that for each individual using the Product within your organization, you have acquired a separate and valid license for each such individual.   \par 1.2}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Documentation}{\f39\fs22\insrsid1646531 .}{\b\f39\fs22\insrsid1646531   }{\f39\fs22\insrsid1646531 You may make and use an unlimited number of copies of any document ation, provided that such copies shall be used only for personal purposes and are not to be republished or distributed (either in hard copy or electronic form) beyond your premises. \par 1.3}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Storage/Network Use}{\f39\fs22\insrsid1646531 . }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531 You may also store or install a copy of the Prod uct on a storage device, such as a network server, used only to install or run the Product on computers used by a licensed end user in accordance with Section 1.1.  A single license for the Product may not be shared or used concurrently by other end users \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid1646531 2.}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 ADDITIONAL LICENSE RIGHTS -- REDISTRIBUTABLE CODE}{\f39\fs22\insrsid1646531  .  In addition to the rights granted in Section 1, certain portions of the Product, as described in this Section\~2, are provided to you with additional license rights.  These additional license rights ar e conditioned upon your compliance with the distribution requirements and license restrictions described in Section 3.}{\i\f39\fs22\insrsid1646531  \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs14\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid1646531 2.1}{\f39\fs22\insrsid5059897  - }{ \b\i\f39\fs22\insrsid11888841 Configuration Files and }{\b\i\f39\fs22\insrsid1646531 Sample }{\b\i\f39\fs22\insrsid12129176 Source}{\b\i\f39\fs22\insrsid5904086  }{\b\i\f39\fs22\insrsid1646531 Code.}{\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid11695900   }{\f39\fs22\insrsid1646531 Microsoft grants you the right to use and modify}{\f39\fs22\insrsid7170211 : (i)\~}{\f39\fs22\insrsid11888841 those portions }{\f39\fs22\insrsid5904086 of }{\f39\fs22\insrsid11888841 the Product identified as }{ \f39\fs22\insrsid5904086 \'93}{\f39\fs22\insrsid11888841 C}{\f39\fs22\insrsid7170211 onfiguration }{\f39\fs22\insrsid11888841 F}{\f39\fs22\insrsid7170211 iles}{\f39\fs22\insrsid5904086 \'94}{\f39\fs22\insrsid7170211   listed in the REDIST.TXT file; and (ii)\~}{\f39\fs22\insrsid1646531 the source code version of those portions of the Product identified as \'93Samples\'94 in REDIST.TXT or elsewhere in the Product (}{\f39\fs22\insrsid7170211 (i)\~ and (ii) above collectively referred to in this EULA as, }{\f39\fs22\insrsid1646531 \'93Sample Code\'94 ) for the sole purposes of designing, developing, and testing your software product(s), and to reproduce and distribute the Sample Code, along with any modifications thereof, in object and/or source code form.   \par 2.2}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Redistributable Code}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531   Microsoft grants you a nonexclusive, royalty-free right to reproduce and distribute the object code form of any portion of the Product listed in REDIST.TXT (\'93Redistributable Code\'94).   \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid1646531 3.}{\f39\fs22\insrsid5059897   }{\b\f39\fs22\insrsid1646531 LICENSE RESTRICTIONS -- DISTRIBUTION REQUIREMENTS.}{\f39\fs22\insrsid1646531   If you choose to exercise your rights under Section\~ 2, any redistribution by you requires compliance with the following terms.  \par }\pard\plain \ql \fi720\li0\ri0\sa60\widctlpar\faauto\rin0\lin0\itap0\pararsid1143574 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid1646531 3.1}{\f39\fs22\insrsid5059897  - }{\f39\fs22\insrsid1646531  If you are authorized and choose}{\f39\fs22\insrsid13960048  to redistribute Sample Code or }{\f39\fs22\insrsid1646531 Redistributable Code}{\f39\fs22\insrsid13960048  }{\f39\fs22\insrsid1646531 (collectively, the \'93Redistributables\'94) as d escribed in Section 2, you agree:}{\f39\fs22\insrsid5991874   }{\b\f39\fs22\insrsid3428299 (i)}{\f39\fs22\insrsid3428299 \~ except as provided in Section 2.1, which allows for redistribution of source code versions of Sample Code, to distribute the Redistributables only in object code form; }{\b\f39\fs22\insrsid3428299\charrsid6116526 (ii)}{\f39\fs22\insrsid3428299 \~ to redistribute the Redistributables only in conjunction with and as a part of a software application product developed by you that adds significant and primary functionality to the Redistributables (\'93Licensed Product\'94); }{ \b\f39\fs22\insrsid3428299 (iii)}{\f39\fs22\insrsid3428299 \~that the Redistributables only operate in conjunction with Microsoft Windows platforms and the Microsoft Mobile Internet }{\f39\fs22\insrsid5904086 Toolkit }{\f39\fs22\insrsid3428299 runtime; }{ \b\f39\fs22\insrsid3428299 (iv)}{\f39\fs22\insrsid3428299  not to use Microsoft\rquote s name, logo, or trademarks to market the Licensed Product; }{\b\f39\fs22\insrsid3428299 (v)}{\f39\fs22\insrsid3428299  to }{\f39\fs22\insrsid3428299\charrsid2621893  display your own valid copyright notice which shall be }{\f39\fs22\insrsid3428299 sufficient to protect Microsoft\rquote s copyright in the Product; }{\b\f39\fs22\insrsid3428299 (vi)}{\f39\fs22\insrsid3428299 \~ not to remove or obscure any copyright, trademark or patent notices that appear on the Product as delivered to you; }{\b\f39\fs22\insrsid3428299 (vii)}{\f39\fs22\insrsid3428299  to indemnify, hold harmless, and defend  Microsoft from and against any claims or lawsuits, including attorney\rquote s fees, that arise or result from the use or distribution of the Licensed Product; }{\b\f39\fs22\insrsid3428299 (viii)}{\f39\fs22\insrsid3428299   otherwise comply with the terms of this EULA; and }{\b\f39\fs22\insrsid3428299 (ix)\~}{\f39\fs22\insrsid3428299 agree that Microsoft reserves all rights}{\f39\fs22\insrsid5059897  not expressly granted.}{\f39\fs22\insrsid1072242  \par }{\f39\fs22\insrsid1646531 You also agree not to permit further distribution of the Redistributables by your end users }{\i\f39\fs22\insrsid1646531 except}{\f39\fs22\insrsid1646531   you may permit further redistribution of the Redistributables by your distributors to your end-user customers if your distributors  only distribute the Redistributables in conjunction with, and as part of, the Licensed Product and you and your distributors comply wit}{\f39\fs22\insrsid5059897 h all other terms of this EULA.}{\f39\fs22\insrsid1646531  \par }\pard \ql \fi720\li0\ri0\sa60\widctlpar\faauto\rin0\lin0\itap0\pararsid6954920 {\f39\fs22\insrsid13960048 3.2}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid13960048 Additional Distribution Requirements \endash  Microsoft Merge Modules (\'93MSM\'94 )  }{\f39\fs22\insrsid13960048 If you choose to exercise your rights under Section\~ 3.1 with respect to files identified in the Product as Microsoft Merge Modules (.MSM files), any redistribution by you also requires compliance with the following terms:  you may redistribute the content of MSM file( s) in the manner described in the Product documentation only so long as you redistribute such content in its entirety and do not modify such content in any way.}{\f39\fs22\insrsid13960048\charrsid618292  \par }{\f39\fs22\insrsid5059897 3.3 - If}{\f39\fs22\insrsid1646531  you use the Redistributables, then in addition to your compliance with the applicable di stribution requirements described for the Redistributables, the following also applies.  Your license rights to the Redistributables are conditioned upon your (i) not incorporating Identified Software into or combining Identified Software with the Redistr butables or a derivative work thereof; (ii) not distributing Identified Software in conjunction with the Redistributables or a derivative work thereof; and (iii) not using Identified Software in the development of a derivative work of the Redistributables .  \'93Identified Software\'94  means software which is licensed pursuant to terms that directly or indirectly (A) create, or purport to create, obligations for Microsoft with respect to the Redistributables or derivative work thereof or (B) grant, or purport to g rant, to any third party any rights or immunities under Microsoft\rquote  s intellectual property or proprietary rights in the Redistributables or derivative work thereof.  Identified Software includes, without limitation, any software that requires as a condition  of use, modification and/or distribution of such software that other software incorporated into, derived from or distributed with such software be (1) disclosed or distributed in source code form; (2) be licensed for the purpose of making derivative work s; or (3) be redistributable at no charge.  }{\f39\fs22\insrsid1646531\charrsid15018394  \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 DESCRIPTION OF OTHER RIGHTS AND LIMITATIONS}{\f39\fs22\insrsid1646531  \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs14\cf1\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .1}{ \f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Not For Resale Software.}{\b\f39\fs22\insrsid1646531  }{\b\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531 If the Product is labeled \'93Not For Resale\'94 or \'93NFR,\'94  then you may not resell, or otherwise transfer for value, the Product. \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .2}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Limitations on Reverse Engineering, Decompilation, and Disassembly.}{\f39\fs22\insrsid1646531    You may not reverse engineer, decompile, or disassemble the Product, except and only to the extent that such activity is expressly permitted by applicable law notwithstanding this limitation. \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .3}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Rental. }{\b\i\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531 You may not rent, lease or lend the Product. \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .4}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Trademarks.}{\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531  This EULA does not grant you any rights in connection with any trademarks or service marks of Microsoft. \par }{\f39\fs22\insrsid13960048 4.5}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Consent to Use of Data.}{\b\f39\fs22\insrsid1646531   }{\f39\fs22\insrsid1646531 You agree that Microsoft and its affiliate s may collect and use technical information gathered as part of the product support services provided to you, if any, related to the Product.  Microsoft may use this information solely to improve our products or to provide customized services or technolog ies to you and will not disclose this information in a form th}{\f39\fs22\insrsid11695900 at personally identifies you.}{\f39\fs22\insrsid1646531  \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .6}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Software Transfer.}{\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531  The initial user of the Product may make a one-time permanent transfer of this EULA and Product only directly to an end user.  This transfer  must include all of the Product (including all component parts, the media and printed materials, any upgrades, this EULA, and, if applicable, the Certificate of Authenticity).  Such transfer may not be by way of consignment or any other indirect transfer.  }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531 The transferee of such one-time transfer must agree to comply with the terms of this EULA, including the obligation not to further transfer this EULA and Product. \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .7}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Separation of Components.}{\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531  The Product is licensed as a single product. Its component parts may not be separated for use by more than one user. \par }{\f39\fs22\insrsid13960048 4}{\f39\fs22\insrsid1646531 .8}{\f39\fs22\insrsid5059897  - }{\b\i\f39\fs22\insrsid1646531 Termination.}{\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531  Without prejudice to any other rights, Microsoft may terminate this EULA if you fail to comply with the terms and conditions of this EULA. In such event, you must destroy all copies of the Product and all of its component parts. \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid13960048 5}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 PRERELEASE CODE.}{\f39\fs22\insrsid11695900   }{\f39\fs22\insrsid1646531  Portions of the Product may be identified as prere}{\f39\fs22\insrsid5991874 lease code (\'93Prerelease Code\'94). }{\f39\fs22\insrsid1646531 Such Prerelease Code is not at the level of performance and compatibility of the final, generally available  product offering. }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531 The Prerelease Code may not operate correctly and may be substantially modified prior to first commercial shipment. }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531  Microsoft is not obligated to make this or any later version of the Prerelease Code commercially available.}{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531  The grant of  license to use Prerelease Code expires upon availability of a commercial release of the }{\f39\fs22\insrsid5991874 Prerelease Code from Microsoft.  }{\f39\fs22\insrsid1646531 NOTE:}{\b\f39\fs22\insrsid1646531  }{\f39\fs22\insrsid1646531  In the event that Prerelease Code contains a separate end-user license agreement, the terms and conditions of such end-user license agreement shall govern your use of the corresponding Prerelease Code. \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid13960048 6}{\f39\fs22\insrsid1646531 .}{\f39\fs22\cf6\insrsid5059897  }{\f39\fs22\cf6\insrsid6954920  }{\b\f39\fs22\insrsid1646531 UPGRADES.}{\f39\fs22\insrsid11695900   }{\f39\fs22\insrsid1646531  To use a Product identified as an upgrade, you must first be licensed for the product identified by Microsoft as eligible for the upgrade. }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531  After upgrading, you may no longer use the product that formed the basis for your upgrade eligibility.}{\f39\fs22\insrsid6646379  }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531 You may use th e resulting upgraded product only in accordance with the terms of this EULA. }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531  If the Product is an upgrade of a component of a package of software programs that you licensed as a single product, the Product may be used and transferred only as part of that s ingle product package and may not be separated for use by more than one end user. \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid13960048 7}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 DOWNGRADES.}{\f39\fs22\insrsid1646531    Instead of installing and using the Product, you may install and use one copy of an earlier version of the Product, provided that you completely remove such e arlier version and install the original Product within a reasonable time.  Your use of such earlier version shall be governed by this EULA, and your rights to use such earlier version shall terminate when you install the original Product. \par }\pard\plain \ql \li270\ri0\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin270\itap0\pararsid1646531 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\cgrid0\insrsid1646531  \par }\pard\plain \s16\ql \li0\ri0\sb60\sl220\slmult0\keepn\widctlpar\brdrt\brdrs\brdrw45\brsp140 \brdrl\brdrs\brdrw45\brsp100 \brdrb\brdrs\brdrw45 \brdrr\brdrs\brdrw45\brsp80  \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0\pararsid1646531 \caps\f41\fs16\lang1033\langfe1033\kerning16\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid11695900 8.}{\f39\fs22\insrsid5059897  }{ \f39\fs22\insrsid6954920  }{\b\caps0\f39\fs22\kerning0\insrsid1646531\charrsid11695900 LIMITED WARRANTY FOR PRODUCT ACQUIRED IN THE US AND CANADA}{\f39\fs22\insrsid1646531 .   \par }\pard\plain \s18\ql \li0\ri0\sb40\sl220\slmult0\keepn\widctlpar\brdrt\brdrs\brdrw45\brsp140 \brdrl\brdrs\brdrw45\brsp100 \brdrb\brdrs\brdrw45 \brdrr\brdrs\brdrw45\brsp80 \aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0\pararsid1646531  \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid1646531 Except with respect to the Redistributables, which are provided \'93AS IS,\'94  without warranty of any kind, Microsoft warrants that the Product will perform substantially in accordance with the accompanying  materials for a period of ninety days from the date of receipt. }{\b\f39\fs22\insrsid1646531  \par If an implied warranty or condition is created by your state/jurisdiction and federal or state/provincial law prohibits disclaimer of it,}{\f39\fs22\insrsid1646531  you also have an implied warranty or condition, }{\b\f39\fs22\insrsid1646531  BUT ONLY AS TO DEFECTS DISCOVERED DURING THE PERIOD OF THIS LIMITED WARRANTY (NINETY DAYS). AS TO ANY DEFECTS DISCOVERED AFTER THE NINETY (90) DAY PERIOD, THERE IS NO WARRANTY OR CONDITION OF ANY KIND.  }{\f39\fs22\insrsid1646531  Some states/jurisdictions do not allow limitations on how long an implied warranty or condition lasts, so the above limitation may not apply to you. \par Any supplements or updates to the  Product, including without limitation, any (if any) service packs or hot fixes provided to you after the expiration of the ninety day Limited Warranty period are not covered by any warranty or condition, express, implied or statutory. \par }\pard \s18\ql \li0\ri0\sb40\sl220\slmult0\widctlpar\brdrt\brdrs\brdrw45\brsp140 \brdrl\brdrs\brdrw45\brsp100 \brdrb\brdrs\brdrw45 \brdrr\brdrs\brdrw45\brsp80 \aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0\pararsid1646531 { \b\f39\fs22\insrsid1646531 LIMITATION ON REMEDIES; NO CONSEQUENTIAL OR OTHER DAMAGES}{\f39\fs22\insrsid1646531 . }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531 Your exclusive remedy for any breach of this Limited Warranty is as set forth below.  } {\b\f39\fs22\insrsid1646531 Except for any refund elected by Microsoft, YOU ARE NOT ENTITLED TO ANY DAMAGES, INCLUDING BUT NOT LIMITED TO CONSEQUENTIAL DAMAGES, if the Product}{\f39\fs22\insrsid1646531  }{\b\f39\fs22\insrsid1646531 does not meet Microsoft \rquote s Limited Warranty, and, to the maximum extent allowed by applicable law, even if any remedy fails of its essential purpose.}{\f39\fs22\insrsid13960048   The terms of Section 10}{\f39\fs22\insrsid1646531  below (\'93 Exclusion of Incidental, Consequential and Certain Other D}{\f39\fs22\insrsid5991874 amages\'94) }{\f39\fs22\insrsid1646531 are also incorporated into this Limited Warranty. }{\f39\fs22\insrsid5991874  }{\caps\f39\fs22\insrsid1646531 S}{ \f39\fs22\insrsid1646531 ome states/jurisdictions do not allow the exclusion or limitation of incidental or consequential damages, so the above limitation or exclusion may not apply to you}{\caps\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid1646531    This Limited Warranty gives you specific legal rights.  You may have others which vary from state/jurisdiction to state/jurisdiction. }{\f39\fs22\insrsid5991874  }{\b\f39\fs22\insrsid1646531 YOUR EXCLUSIVE REMEDY}{\f39\fs22\insrsid1646531 .  Microsoft \rquote s and its suppliers\rquote  entire liability and your exclusive remedy shall be, at Microsoft\rquote s option from time to time exercised subject to applicable law, (a)\~return of the price paid (if any) for the Product, or (b)\~ repair or replacement of the Product, that does not meet this Limited Warranty and that is returned to Microsoft with a copy of your receipt. }{\f39\fs22\insrsid5991874  }{\f39\fs22\insrsid1646531 You will receive t he remedy elected by Microsoft without charge, except that you are responsible for any expenses you may incur (e.g. cost of shipping the Product to Microsoft).  This Limited Warranty is void if failure of the Product has resulted from accident, abuse, mis applic}{\f39\fs22\insrsid5991874 ation, abnormal use or a virus.  }{\f39\fs22\insrsid1646531 Any replacement Product will be warranted for the remainder of the original warranty period or thirty }{\f39\fs22\insrsid5991874 (30) days, whichever is longer.   }{\f39\fs22\insrsid1646531 Outside the United States or Canada, neither these remedies nor any product support s ervices offered by Microsoft are available without proof of purchase from an authorized international source.  To exercise your remedy, contact:  Microsoft, Attn. Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399, or the Microsof t sub}{\f39\fs22\insrsid11695900 sidiary serving your country.}{\f39\fs22\insrsid1646531 \line \line }{\b\caps\f39\fs22\insrsid1646531 LIMITED WARRANTY FOR PRODUCT ACQUIRED OUTSIDE THE US or CANADA. \line  FOR THE LIMITED WARRANTIES AND SPECIAL PROVISIONS PERTAINING TO YOUR PARTICULAR JURISDICTION, PLEASE REFER TO YOUR WARRANTY BOOKLET INCLUDED WITH THIS PACKAGE OR PROVIDED WITH THE SOFTWARE PRODUCT PRINTED MATERIALS. \par }{\f39\fs22\insrsid1646531  \par }\pard\plain \s19\ql \fi-187\li187\ri0\sb60\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin187\itap0\pararsid1646531 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid11695900  \par }\pard \s19\ql \li0\ri0\sb60\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9713087 {\f39\fs22\insrsid8998226 9. }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 DISCLAIMER OF  WARRANTIES. }{ \b\f39\fs22\insrsid11695900  }{\f39\fs22\insrsid1646531 The Limited Warranty that appears above is the only e xpress warranty made to you and is provided in lieu of any other express warranties (if any) created by any documentation, packaging, or other communications.}{\b\f39\fs22\insrsid1646531   Except for the Limited Warranty and to the maximum extent per mitted by applicable law, Microsoft and its suppliers provide the Product}{\f39\fs22\insrsid1646531  }{\b\f39\fs22\insrsid1646531 and support services (if any) }{\b\i\f39\fs22\insrsid1646531 AS IS AND WITH ALL FAULTS}{\b\f39\fs22\insrsid1646531  , and hereby disclaim all other warranties and conditions, either express, implied or statutory, including, but not limited to,  any (if any) implied warranties, duties or conditions of merchantability, of fitness for a particular purpose, of reliability or availability, of accuracy or completeness of responses, of results, of workmanlike effort, of lack of viruses, and of lack of  negligence, all with regard to the Product, and the provision of or failure to provide support or other services, information, software, and related content through the Product or otherwise arising }{\b\f39\fs22\insrsid5991874  out of the use of the Product.  }{\b\f39\fs22\insrsid1646531 ALSO, THERE IS NO WARRANTY OR CONDITION OF TITLE, QUIET ENJOYMENT, QUIET POSSESSION, CORRESPONDENCE TO DESCRIPTION}{\b\f39\fs22\insrsid2308270 ,}{\b\f39\fs22\insrsid1646531   OR NON-INFRINGEMENT WITH REGARD TO THE PRODUCT. \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid13960048 10}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 EXCLUSION OF INCIDENTAL, CONSEQUENTIAL AND CERTAIN OTHER DAMAGES.  }{\b\caps\f39\fs22\insrsid1646531  To the maximum extent permitted by applicable la w, in no event shall Microsoft or its suppliers be liable for any special, incidental, punitive, indirect, or consequential damages whatsoever (including, but not limited to, damages for loss of profits or confidential or other information}{ \b\f39\fs22\insrsid1646531 , }{\b\caps\f39\fs22\insrsid1646531 for business interruption, for personal injury, for loss of privacy, for failure to meet any duty including of good faith or of reasonable care, for negligence, and}{ \b\f39\fs22\insrsid1646531  }{\b\caps\f39\fs22\insrsid1646531 for any other pecuniary or other loss whatsoever) arising out of or in any way related to the use of or in ability to use the PRODUCT, the provision of or failure to provide Support OR OTHER Services, informaton, software, and related CONTENT through the product or otherwise arising out of the use of the product, or otherwise under or in connection with any pr vision of this EULA, even in the event of the fault, tort (including negligence), strict liability, breach of contract or breach of warranty of Microsoft or any supplier, and even if Microsoft or any supplier has been advised of the possibility of such da mages.  \par }{\f39\fs22\insrsid1646531 1}{\f39\fs22\insrsid13960048 1}{\f39\fs22\insrsid1646531 .}{\b\f39\fs22\insrsid5059897  }{\b\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 LIMITA}{\b\f39\fs22\insrsid11695900 TION OF LIABILITY AND REMEDIES.  }{ \b\f39\fs22\insrsid1646531 Notwithstanding any damages that you might incur for any reason whatsoever (including, without limitation, all damages referenced above and all direct or general damages), the entire liability of Microsoft  and any of its suppliers under any provision of this EULA and your exclusive remedy for all of the foregoing (except for any remedy of repair or replacement elected by Microsoft with respect to any breach of the Limited Warranty) shall be limited to the g reater of the amount actually paid by you for the Product}{\f39\fs22\insrsid1646531  }{\b\f39\fs22\insrsid1646531 or U.S.$5.00.  The foregoing limitations, exclusions and d}{\b\f39\fs22\insrsid13960048 isclaimers (including Sections 8, 9}{ \b\f39\fs22\insrsid1646531  a}{\b\f39\fs22\insrsid13960048 nd 10}{\b\f39\fs22\insrsid1646531  above) shall apply to the maximum extent permitted by applicable law, even if any remedy fails its essential purpose. \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid1646531 1}{\f39\fs22\insrsid13960048 2}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 LINKS TO THIRD PARTY SITES.}{\b\f39\fs22\insrsid11695900   }{ \f39\fs22\insrsid1646531 You may link to third party sites through the use of the Product.  The third party sites are not under the control of Microsoft, and Microsoft is not responsible for the contents of any third party sites , any links contained in third party sites, or any changes or updates to third party sites.  Microsoft is not responsible for }{\f39\fs22\insrsid5991874 web casting}{\f39\fs22\insrsid1646531   or any other form of transmission received from any third party sites.  Microsoft is providing these links to third par ty sites to you only as a convenience, and the inclusion of any link does not imply an endorsement by Microsoft of the third party site.   \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid1646531 1}{\f39\fs22\insrsid11096249 3}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 U.S. GOVERNMENT LICENSE RIGHTS}{\f39\fs22\insrsid11695900 .  }{ \f39\fs22\insrsid1646531 All Product provided to the U.S. Government pursuant to solicitations issued on  or after December 1, 1995 is provided with the commercial license rights and restrictions described elsewhere herein.  All Product provided to the U.S. Government pursuant to solicitations issued prior to December 1, 1995 is provided with \'93 Restricted Rights\'94 as provided for in FAR, 48 CFR 52.227-14 (JUNE 1987) or DFAR, 48 CFR 252.227-7013 (OCT 1988), as applicable. \par }\pard \s19\ql \li0\ri0\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid2308270 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid11096249 14}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 EXPORT RESTRICTIONS}{\f39\fs22\insrsid1646531 .  }{\f39\fs22\cgrid0\insrsid1646531 You acknowledge tha t the Product is of U.S. origin and subject to U.S. export jurisdiction.   You agree to comply with all applicable international and national laws that apply to the Product, including the U.S. Export Administration Regulations, as well as end-user, end-use, and destination restrictions issued by U.S.}{ \f39\fs22\cgrid0\insrsid11695900  and other governments.  }{\f39\fs22\cgrid0\insrsid1646531 For additional information see }{\f39\fs22\ul\cgrid0\insrsid1646531 <http://www.microsoft.com/exporting/>}{\f39\fs22\cgrid0\insrsid1646531 . \par }\pard \s19\ql \li0\ri0\sb60\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid9713087 {\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid11096249 15}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 APPLICABLE LAW.  }{\f39\fs22\insrsid1646531  If you acquired this Product in the United States, this EULA is governed by the laws of the Sta te of Washington.  If you acquired this Product in Canada, unless expressly prohibited by local law, this EULA is governed by the laws in force in the Province of Ontario, Canada; and, in respect of any dispute which may arise hereunder, you consent to th e jurisdiction of the federal and provincial courts sitting in Toronto, Ontario. }{\f39\fs22\insrsid12535088  }{\f39\fs22\insrsid1646531 If this Product was acquired outside the United States, then local law may apply.  \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid11096249 16}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid6954920  }{\b\f39\fs22\insrsid1646531 ENTIRE AGREEMENT.  This EULA (including any addendum or amendment to this EULA which is i ncluded with the Product) are the entire agreement between you and Microsoft relating to the Product and the support services (if any) and they supersede all prior or contemporaneous o}{\b\f39\fs22\insrsid6954920 ral or written communications, }{ \b\f39\fs22\insrsid1646531 proposals and representations with respe ct to the Product or any other subject matter covered by this EULA.  To the extent the terms of any Microsoft policies or programs for support services conflict with the terms of this EULA, the terms of this EULA shall control. \par }{\f39\fs22\insrsid2308270  \par }{\f39\fs22\insrsid11096249 17}{\f39\fs22\insrsid1646531 .}{\f39\fs22\insrsid12535088  }{\b\f39\fs22\insrsid5059897  }{\f39\fs22\insrsid1646531 The Product is protected  by copyright and other intellectual property laws and treaties. Microsoft or its suppliers own the title, copyright, and other intellectual property rights in the Product.  }{\b\f39\fs22\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid7294237  The Product is licensed, not sold.}{\b\f39\fs22\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\b\f39\fs22\lang1036\langfe1033\langnp1036\insrsid11695900  \par }{\b\f39\fs22\lang1036\langfe1033\langnp1036\insrsid2308270\charrsid7294237  \par }\pard\plain \s21\ql \li0\ri0\widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 \f41\fs22\lang1033\langfe1033\kerning22\cgrid\langnp1033\langfenp1033 { \b\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 Si vous avez acquis votre produit Microsoft au CANADA, la garantie limit\'e9e suivante vous concerne:}{\b\f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\b\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }\pard \s21\ql \li0\ri0\widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\outlinelevel0\adjustright\rin0\lin0\itap0\pararsid6954920 {\f39\lang3084\langfe1033\langnp3084\insrsid1646531 {\*\bkmkstart _Ref460644722}GARANTIE LIMIT\'c9E {\*\bkmkend _Ref460644722} \par }{\f39\lang3084\langfe1033\langnp3084\insrsid6954920  \par }\pard \s21\ql \li0\ri0\widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid6954920 {\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 Sauf pur celles du \'93Redistributables,\'94 qui sont fournies \'93 comme telles,\'94 Microsoft garantit que le Produit fonctionnera conform\'e9ment aux documents inclus pendant une p\'e9riode de 90\~jours suivant la date de r\'e9ception.}{\f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }{\b\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 Si}{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531  une garantie ou condition implicite est cr\'e9\'e9e par votre \'c9tat ou votre territoire et qu\rquote une loi f\'e9d\'e9 rale ou provinciale ou \'c9tat en interdit le d\'e9ni, v}{\f39\lang3084\langfe1033\langnp3084\insrsid1646531 ous jouissez \'e9galement d\rquote une garantie ou condition implicite,}{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531   MAIS UNIQUEMENT POUR LES D\'c9FAUTS D\'c9COUVERTS DURANT LA P\'c9RIODE DE LA PR\'c9SENTE GARANTIE LIMIT\'c9E (QUATRE-VINGT-DIX JOURS). IL N\rquote Y A AUCUNE GARANTIE OU CONDITION DE QUELQUE NATURE QUE CE SOIT QUANT AUX D\'c9FAUTS D\'c9COUVERTS APR\'c8 S CETTE P\'c9RIODE DE QUATRE-VINGT-DIX JOURS. }{\f39\lang3084\langfe1033\langnp3084\insrsid1646531 Certains \'c9tats ou territoires ne permettent pas de limiter la dur\'e9e d\rquote une garantie ou condition implicite de sorte que la limitation ci\'ad dessus peut ne pas s\rquote appliquer \'e0 vous}{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 . \par }{\f39\lang3084\langfe1033\langnp3084\insrsid6954920  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 Tous les suppl\'e9ments ou toutes les mises \'e0 jour relatifs au Produit, notamment, les ensembles de services ou les r\'e9parations \'e0 chaud (le cas \'e9ch\'e9 ant) qui vous sont fournis apr\'e8s l\rquote expiration de la p\'e9riode de quatre-vingt-dix jours de la garantie limit\'e9e ne sont pas couverts par quelque garantie ou condition que ce soit, expresse ou implicite.}{ \f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 LIMITATION DES RECOURS; ABSENCE DE DOMMAGES INDIRECTS OU AUTRES.}{\f39\lang3084\langfe1033\langnp3084\insrsid1646531  Votre recours exclusif pour toute violation de la pr\'e9sente garantie limit\'e9 e est d\'e9crit ci\'adapr\'e8s. }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 Sauf pour tout remboursement au choix de Microsoft, si le Produit ne respecte pas la garantie limit\'e9 e de Microsoft et, dans la mesure maximale permise par les lois applicables, m\'eame si tout recours n\rquote atteint pas son but essentiel,}{\f39\lang3084\langfe1033\langnp3084\insrsid1646531  }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 VOUS N \rquote AVEZ DROIT \'c0 AUCUNS DOMMAGES, NOTAMMENT DES DOMMAGES INDIRECTS.}{\f39\lang3084\langfe1033\langnp3084\insrsid1646531  Les modalit\'e9s de la clause}{\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 \~}{ \f39\lang3084\langfe1033\langnp3084\insrsid1646531 \'abExclusion des dommages accessoires, indirects et de certains autres dommages \'bb sont \'e9galement int\'e9gr\'e9es \'e0 la pr\'e9sente garantie limit\'e9e. Certains \'c9 tats ou territoires ne permettent pas l\rquote exclusion ou la limitation des dommages indirects ou accessoires de sorte que la limitation ou l\rquote exclusion ci\'addessus peut ne pas s\rquote appliquer \'e0 vous. La pr\'e9sente garantie limit\'e9 e vous donne des droits l\'e9gaux sp\'e9cifiques. Vous pouvez avoir d\rquote autres droits qui peuvent varier d\rquote un territoire ou d\rquote un \'c9tat \'e0 un autre. }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 VOTRE RECOURS EXCLUSIF.}{ \f39\lang3084\langfe1033\langnp3084\insrsid1646531  L\rquote obligation int\'e9grale de Microsoft et de ses fournisseurs et votre recours exclusif seront, selon le choix de Microsoft de temps \'e0 autre sous r\'e9serve de toute loi applicable, a)\~ le remboursement du prix pay\'e9, le cas \'e9ch\'e9ant, pour le Produit ou b)\~la r\'e9paration ou le remplacement du Produit qui ne respecte pas la pr\'e9sente garantie limit\'e9e et qui est retourn\'e9 \'e0 Microsoft avec une copie de votre re\'e7 u. Vous recevrez la compensation choisie par Microsoft, sans frais, sauf que vous \'eates responsable des d\'e9penses que vous pourriez engager (p.\~ex., les frais d\rquote envoi du Produit \'e0 Microsoft). La pr\'e9sente garantie limit\'e9 e est nulle si la d\'e9fectuosit\'e9 du Produit est caus\'e9e par un accident, un usage abusif, une mauvaise application, un usage anormal ou un virus. Tout Produit de remplacement sera garanti pour le reste de la p\'e9 riode de garantie initiale ou pendant trente (30) jours, selon la plus longue entre ces deux p\'e9riodes. \'c0 l\rquote ext\'e9rieur des \'c9tats-Unis ou du Canada, ces recours ou l\rquote un  quelconque des services de soutien technique offerts par Microsoft ne sont pas disponibles sans preuve d\rquote achat d\rquote une source internationale autoris\'e9 e. Pour exercer votre recours, vous devez communiquer avec Microsoft et vous adresser au Microsoft Sales Information Center/One Microsoft Way/Redmond, WA 98052-6399, ou \'e0 la filiale de Microsoft de votre pays. \par }{\f39\lang3084\langfe1033\langnp3084\insrsid6954920  \par }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531 {\*\bkmkstart _Ref460641200}D\'c9NI DE GARANTIES. }{\f39\lang3084\langfe1033\langnp3084\insrsid1646531 La garantie limit\'e9e mentionn\'e9 e ci-dessus constitue la seule garantie expresse qui vous est donn\'e9e et remplace toutes autres garanties expresses (s\rquote il en est) mentionn\'e9es dans un document ou sur un emballage. }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531  Sauf en ce qui a trait \'e0 la garantie limit\'e9e et dans la mesure maximale permise par les lois applicables, le Produit et les services de soutien technique (le cas \'e9ch\'e9ant) sont fournis }{\b\i\f39\lang3084\langfe1033\langnp3084\insrsid1646531  TELS QUELS}{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531  }{\b\i\f39\lang3084\langfe1033\langnp3084\insrsid1646531 ET AVEC TOUS LES D\'c9FAUTS }{\b\f39\lang3084\langfe1033\langnp3084\insrsid1646531  par Microsoft et ses fournisseurs, lesquels par les pr\'e9sentes d\'e9nient toutes autres garanties et conditions expresses, implicites ou en vertu de la loi, notamment (le cas \'e9ch\'e9ant) les garanties, devoirs ou conditions implicites de qualit\'e9  marchande, d\rquote adaptation \'e0 un usage particulier, d\rquote exactitude ou d\rquote exhaustivit\'e9 des r\'e9ponses, des r\'e9sultats, des efforts d\'e9ploy\'e9s selon les r\'e8gles de l\rquote art, d\rquote absence de virus et de n\'e9 gligence, le tout \'e0 l\rquote \'e9gard du Produit et de la prestation des services de soutien technique ou de l\rquote omission d\rquote une telle prestation. PAR AILLEURS, IL N\rquote Y A AUCUNE GARANTIE OU CONDITION QUANT AU TITRE DE PROPRI\'c9T\'c9,  \'c0 LA JOUISSANCE OU LA POSSESSION PAISIBLE, \'c0 LA CONCORDANCE \'c0 UNE DESCRIPTION NI QUANT \'c0 UNE ABSENCE DE CONTREFA\'c7ON CONCERNANT LE PRODUIT.{\*\bkmkend _Ref460641200} \par }{\b\f39\lang3084\langfe1033\langnp3084\insrsid6954920  \par }{\b\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 {\*\bkmkstart _Ref460641236}{\*\bkmkstart _Ref460644292} EXCLUSION DES DOMMAGES ACCESSOIRES, INDIRECTS ET DE CERTAINS AUTRES DOMMAGES. DANS LA MESURE MAXIMALE PERMISE PAR LES LOIS APPLICABLES, EN AUCUN CAS MICROSOFT OU SES FOURNISSEURS NE SERONT RESPONSABLES DES DOMMAGES SP\'c9CIAUX, CONS\'c9 CUTIFS, ACCESSOIRES OU INDIRECTS DE QUELQUE NATURE QUE CE SOIT (NOTAMMENT, LES DOMMAGES \'c0 L\rquote \'c9GARD DU MANQUE \'c0 GAGNER OU DE LA DIVULGATION DE RENSEIGNEMENTS CONFIDENTIELS OU AUTRES, DE LA PERTE D\rquote  EXPLOITATION, DE BLESSURES CORPORELLES, DE LA VIOLATION DE LA VIE PRIV\'c9E, DE L\rquote OMISSION DE REMPLIR TOUT DEVOIR, Y COMPRIS D\rquote AGIR DE BONNE FOI OU D\rquote EXERCER UN SOIN RAISONNABLE, DE LA N\'c9GLIGENCE ET DE TOUTE AUTRE PERTE P\'c9 CUNIAIRE OU AUTRE PERTE DE QUELQUE NATURE QUE CE SOIT) SE RAPPORTANT DE QUELQUE MANI\'c8RE QUE CE SOIT \'c0 L\rquote UTILISATION DU PRODUIT OU \'c0 L\rquote INCAPACIT\'c9 DE S\rquote EN SERVIR, \'c0 LA PRESTATION OU \'c0 L\rquote OMISSION D\rquote  UNE TELLE PRESTATION DE SERVICES DE SOUTIEN TECHNIQUE OU AUTREMENT AUX TERMES DE TOUTE DISPOSITION DU PR\'c9SENT EULA OU RELATIVEMENT \'c0 UNE TELLE DISPOSITION, M\'caME EN CAS DE FAUTE, DE D\'c9LIT CIVIL (Y COMPRIS LA N\'c9GLIGENCE), DE RESPONSABILIT\'c9  STRICTE, DE VIOLATION DE CONTRAT OU DE VIOLATION DE GARANTIE DE MICROSOFT OU DE TOUT FOURNISSEUR ET M\'caME SI MICROSOFT OU TOUT FOURNISSEUR A \'c9T\'c9 AVIS\'c9 DE LA POSSIBILIT\'c9 DE TELS DOMMAGES.}{ \b\f39\lang1036\langfe1033\langnp1036\insrsid1646531 {\*\bkmkend _Ref460641236}{\*\bkmkend _Ref460644292} \par }{\b\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 LIMITATION DE RESPONSABILIT\'c9 ET RECOURS. Malgr\'e9 les dommages que vous puissiez subir pour quelque motif que ce soit (notamment, tous les dommages susmentionn\'e9 s et tous les dommages directs ou g\'e9n\'e9raux), l\rquote obligation int\'e9grale de Microsoft et de l\rquote un ou l\rquote autre de ses fournisseurs aux termes de toute disposition du pr\'e9sent EULA et votre recours exclusif \'e0 l\rquote \'e9 gard de tout ce qui pr\'e9c\'e8de (sauf en ce qui concerne tout recours de r\'e9paration ou de remplacement choisi par Microsoft \'e0 l\rquote \'e9gard de tout manquement \'e0 la garantie limit\'e9e) se limite au plus \'e9lev\'e9  entre les montants suivants\~: le montant que vous avez r\'e9ellement pay\'e9 pour le Produit ou 5,00\~$US. Les limites, exclusions et d\'e9nis qui pr\'e9c\'e8dent (y compris les clauses ci-dessus), s\rquote  appliquent dans la mesure maximale permise par les lois applicables, m\'eame si tout recours n\rquote atteint pas son but essentiel.}{\f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 La pr\'e9sente Convention est r\'e9gie par les lois de la province d\rquote Ontario, Canada. Chacune des parties \'e0 la pr\'e9sente reconna\'eet irr\'e9vocablement la comp\'e9 tence des tribunaux de la province d\rquote Ontario et consent \'e0 instituer tout litige qui pourrait d\'e9couler de la pr\'e9sente aupr\'e8s des tribunaux situ\'e9s dans le district judiciaire de York, province d\rquote Ontario.}{ \f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid275282  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid1646531\charrsid275282 Au cas o\'f9 vous auriez des questions concernant cette licence ou que vous d\'e9 siriez vous mettre en rapport avec Microsoft pour quelque raison que ce soit, veuillez contacter la succursale Microsoft desservant votre pays, dont l\rquote adresse est fournie dans ce produit, ou \'e9crivez \'e0\~ : Microsoft Sales Information Center, One Microsoft Way, Redmond, Washington\~98052-6399.}{\f39\lang1036\langfe1033\langnp1036\insrsid1646531  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid11695900  \par }{\f39\lang1036\langfe1033\langnp1036\insrsid6954920\charrsid11695900  \par }\pard\plain \s19\ql \fi-187\li187\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin187\itap0\pararsid6954920 \f42\fs16\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\f39\fs22\insrsid11695900\charrsid11695900 0598  Part No. X03-71287}{ \f39\fs22\insrsid6954920  \par  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\ja\eula.txt ===
﻿対象製品： Microsoft Mobile Internet Toolkit 日本語版

使用許諾契約書
重要―以下のライセンス契約書を注意してお読みください。本使用許諾契約書 (以下「本契約書」といいます) は、上記に示されたマイクロソフト ソフトウェア製品に関してお客様 (自然人または法人のいずれであるかを問いません) とMicrosoft Corporation (以下「マイクロソフト」といいます) との間に締結される法的な契約書です。本製品はコンピュータ ソフトウェアを含み、それに関連した媒体、印刷物 (マニュアルなどの文書)、オンライン文書または電子文書、およびインターネット ベースのサービス (以下「本製品」といいます) を含むこともあります。本製品に本契約書の修正または追加条項が付属している場合があります。本製品をインストール、複製、または使用することによって、お客様は本契約書の条項に拘束されることに承諾されたものとします。本契約書の条項に同意されない場合、マイクロソフトは、お客様に本製品のインストールまたは使用のいずれも許諾できません。そのような場合、本製品を直ちに購入店へご返品いただければ、お支払いいただいた金額を全額払戻しいたします。
ソフトウェア製品ライセンス


1.  ライセンスの許諾  マイクロソフトは、お客様が本契約書のすべての条項および条件を厳守することを条件として、お客様に本契約書に記載されている権利を許諾します。  
       1.1 - 一般的ライセンスの許諾  お客様が個人の場合、マイクロソフトは、お客様のみが本製品を使用することを条件として、お客様のソフトウェア製品の設計、開発、およびテストのために本製品のコピーを作成および使用する属人的かつ非独占的なライセンスをお客様 1 名に許諾します。  
       お客様が法人の場合、マイクロソフトは、お客様の組織内で本製品を使用する各ユーザーについてお客様が個別に正規のライセンスを取得されていることを条件として、本製品のコピーを作成および使用する属人的かつ非独占的なライセンスをお客様 1 法人に許諾します。  
       1.2 – ドキュメント  お客様は、ドキュメントのコピーが個人的な目的で使用されること、かつ当該コピーがお客様の組織外に再発行または頒布（ハードコピーであると電子的形態であるとを問いません）されないことを条件として、当該コピーを数に限りなく作成して使用することができます。
       1.3 -記憶装置／ネットワークの使用  お客様は、ネットワークサーバーのような記憶装置に、本製品のコピー 1 部を蓄積またはインストールすることもできます。その場合、お客様は、本製品を本契約書第 1 条第 1 項に従ってライセンスを許諾されたエンド ユーザーによって使用されるコンピュータにインストールまたは実行するためだけに、かかる記憶装置上のコピーを使用しなければなりません。また、本製品についての 1 つのライセンスを他のエンド ユーザーと同時に共有または使用することはできません。

2.  追加のライセンスの権利 - 再頒布可能コード 本契約書第 1 条で許諾された権利に加え、本第2条に記載されているように、本製品の特定の部分に関して追加の権利が許諾されます。ただしその場合、本契約書第 3 条の頒布の条件およびライセンスに関する制限に従わなければなりません。
       2.1 - 構成ファイルおよびサンプル ソース コード  マイクロソフトはお客様に、お客様のソフトウェア製品を設計、開発、およびテストするためにのみ、(i) 本製品の REDIST.TXT ファイルに記載されている「構成ファイル」と指定されている部分、および (ii) 本製品の REDIST.TXT またはその他の場所で「サンプる」と指定されている部分 (以下本契約書で (i) および (ii) を総称して「本サンプル コード」といいます) のソース コード バージョンを使用および改変して、本サンプル コードをその改変されたものと共にオブジェクトコードまたはソース コードで複製および頒布する権利を許諾します。
       2.2 - 再頒布可能コード  マイクロソフトはお客様に、本製品の REDIST.TXTに記載されている部分 (以下「再頒布可能コード」といいます) のオブジェクト コードを複製および頒布する非独占的かつ無償の権利を許諾します。 

3.  ライセンスの制限 -- 頒布の条件  お客様が本契約書第 2 条に基づく権利を行使される場合は、再頒布に関して以下の条項に従うものとします。 
       3.1 - お客様は、本契約書第 2 条に記載されている本サンプルコードまたは再頒布可能コード (以下総称して「再頒布可能ファイル」といいます) を再頒布される場合、お客様は以下の条項に同意されるものとします。
       (i) 本サンプルコードのソースコードの再頒布を許可する本契約書第 2 条第 1 項に規定されている場合を除き、お客様は、再頒布可能ファイルをオブジェクト コードでのみ再頒布しなければなりません。
       (ii) お客様は、再頒布可能ファイルに重要かつ主要な機能を追加するお客様のアプリケーション製品 (以下「本ライセンス製品」といいます) と共におよびその一部としてのみ、再頒布可能ファイルを再頒布しなければなりません。
       (iii) 再頒布可能ファイルは、Microsoft Windows プラットフォームおよび Microsoft Mobile Internet Toolkit ランタイムと共にのみ動作するものでなければなりません。
       (iv) お客様は本ライセンス製品の販売にあたり、マイクロソフトの商号、ロゴまたは商標を使用することはできません。
       (v) お客様は、本ライセンス製品にお客様の名義で本製品に関するマイクロソフトの著作権を保護するに十分な著作権表示を付さなければなりません。
       (vi) お客様に提供された本製品に表示されている著作権、商標、または特許表示を削除したり隠してはいけません。
       (vii) お客様は、本ライセンス製品の使用または頒布の結果から生じる紛争、または訴訟について、マイクロソフトを免責、保護、補償するものとします (弁護士費用についての免責、保護、補償も含みます)。
       (viii) その他の点では、お客様は、本契約書の条項に従わなければなりません。
       (ix) 本契約書で明示的に許諾されていない権利はすべてマイクロソフトによって留保されることに同意するものとします。
       お客様は、エンド ユーザーに再頒布可能ファイルの再頒布を許可することはできません。ただし、お客様の頒布者が、本ライセンス製品と共におよびその一部としてのみ再頒布可能ファイルを頒布し、かつお客様と頒布者とが本契約書のその他の条項に従うことを条件とし、再頒布可能ファイルを頒布者からエンド ユーザーに再頒布することを許可することができます。
       3.2 -頒布に関する追加の条件 – Microsoft Merge Modules (「MSM」)
       お客様が、本製品のうち Microsoft Merge Modules と指定されているファイル(以下「.MSM ファイル」といいます) に関して本契約書第 3 条第 1 項の権利を行使される場合、再頒布に関して以下の条項に従わなければなりません。お客様は、MSM ファイルおよびMSMファイルに含まれるコンポーネントをドキュメントに記載されている方法でのみ再頒布することができます。ただし、MSMファイル自体はそのまま再頒布し、MSMファイルに含まれるコンポーネントをいかなる方法でも改変しないことを条件とします。
       3.3 - お客様が再頒布可能ファイルを使用する場合、再頒布可能ファイルに関して記載されている該当する頒布の条件に従うことに加え、以下の条項が適用されます。お客様の再頒布可能ファイルに関するライセンスの権利は以下の条項を条件とします。
       (i) 指定ソフトウェアを再頒布可能ファイルまたはその二次的著作物に組み込まないこと、それと一体化しないこと
       (ii) 指定ソフトウェアを再頒布可能ファイルまたはその二次的著作物と共に頒布しないこと
       (iii) 指定ソフトウェアを再頒布可能ファイルの二次的著作物の開発に使用しないこと
       「指定ソフトウェア」とは、(i)再頒布可能ファイルもしくはその二次的著作物に関してマイクロソフトに対する義務を直接または間接的に生じるもしくはそれを意図する条項、または (ii) 再頒布可能ファイルもしくはその二次的著作物に関するマイクロソフトの無体財産権または所有権に基づく権利もしくは免責を第三者に直接または間接的に付与するもしくはそれを意図する条項に従って許諾されたソフトウェアを意味します。指定ソフトウェアは、ソフトウェアの使用、改変または頒布の条件として、かかるソフトウェアに組み込まれている、それから派生している、もしくはそれと共に頒布されているその他のソフトウェアが (a) ソースコードで公開もしくは頒布されている、(b) 二次的著作物を作成するために許諾されている、または (c) 無償で再頒布できるソフトウェアを含みますが、それらに限定されません。 

4.  その他の権利および制限
       4.1 - Not For Resale ソフトウェア  本製品に「Not For Resale」または「NFR」と明記されている場合、お客様は本製品を再販売または他のいかなる方法でも対価を得て譲渡することはできません。
       4.2 - リバース エンジニアリング、逆コンパイル、逆アセンブルの制限  お客様は本製品をリバースエンジニアリング、逆コンパイル、または逆アセンブルすることはできません。
       4.3 - レンタル  お客様は本製品をレンタル、リースまたは貸与することはできません。
       4.4 - 商標  本契約書は、マイクロソフトの商標またはサービス マークに関する権利をお客様に許諾するものではありません。
       4.5 - データの使用に関する承諾  お客様は、マイクロソフトおよびその関連会社が、本製品に関連した製品サポートサービスの一部として集めた技術情報を収集して使用することがあることに承諾されるものとします。ただし、マイクロソフトは製品の向上のため、またはお客様にカスタマイズされたサービスもしくは技術を提供するためにのみ、この技術情報を使用するものとします。マイクロソフトは第三者にこの情報を開示できるものとしますが、その場合、お客様を特定することとなるような方法で開示しないものとします。
       4.6 - ソフトウェアの譲渡  本製品の最初のユーザーは、本契約および本製品を一度に限り直接エンドユーザーに恒久的に譲渡することができます。ただしその場合、本製品の一切 (全ての構成部分、媒体、マニュアルなどの文書、アップグレード、本契約書、およびあてはまる場合には Certificate of Authenticity を含みます) を譲渡することを条件とします。そのような譲渡は、委託その他の間接的な譲渡によることはできません。譲受人は、本契約書の条項に同意し、本契約書および本製品をさらに譲渡しないことに同意しなければなりません。
       4.7 - 構成部分の分離  本製品は 1 つの製品として許諾されています。その構成部分を分離して複数のユーザーが使用することはできません。
       4.8 – 契約の終了  お客様が本契約書の条項または条件に違反した場合、マイクロソフトは、他の権利を害することなく本契約を終了することができます。そのような場合、お客様は本製品の複製物およびその構成部分を全て破棄しなければなりません。

5.  プレリリース コード  本製品には出荷前のコード (以下「本プレリリースコード」といいます) を含む場合があり、これは機能および互換性の点において一般向けに出荷されることを予定する最終的な完成品ではありません。本プレリリースコードが正確に動作することおよび製品版の出荷前に実質的に変更されないことは、保証されていません。マイクロソフトは、本プレリリースコードまたはそのすべての後継バージョンを製品版にアップデートする義務を負いません。本プレリリース コードの使用許諾は、マイクロソフトによる本プレリリース コードの製品版の出荷と同時に消滅します。注意: 本プレリリース コードに別途の使用許諾契約書が含まれている場合は、対応する本プレリリース コードの使用については、かかる使用許諾契約書の条項および条件が適用されます。

6.  アップグレード  本製品がアップグレードである場合、本製品を使用するためには、マイクロソフトによってアップグレード対象製品と指定されている製品の正規のライセンスをお客様がお持ちでなければなりません。アップグレード後は、お客様はそのアップグレードの対象となる製品を使用することはできません。お客様はアップグレードした製品を本契約書の条項に従ってのみ使用することができます。本製品が 1 つの製品としてお客様にライセンスされたソフトウェア プログラム パッケージの構成部分のアップグレードの場合、本製品は、1 つの製品パッケージの一部としてのみ使用および譲渡できますが、構成部分を分離して複数のエンド ユーザーが使用することはできません。

7.  ダウングレード  本製品をインストールして使用するかわりに、お客様は、本製品の旧バージョンのコピー 1 部をインストールして使用することができます。ただしその場合、合理的な期間内に、お客様がそのような旧バージョンを完全に削除して本製品をインストールすることを条件とします。お客様のそのような旧バージョンの使用には本契約書が適用され、旧バージョンを使用する権利は本製品をインストールしたときに消滅するものとします。

8.  保証の限定  下記の『品質保証規定』（以下「本保証規定」といいます）は、お客様に適用される唯一の明示の品質保証規定であり、ドキュメントまたはパッケージに記載されるその他の明示的保証（該当する場合）に代替するものです。本製品に関して、本保証規定に規定されていない保証を一切いたしません。本保証規定を除き、かつ法律上許容される最大限において、マイクロソフトおよびその供給者は、本製品およびサポートサービスを現状有姿かつ瑕疵を問わない条件で提供しています。そのため、本製品、およびサポートまたは本製品を通じたその他のサービス、情報、ソフトウェア、および関連コンテンツの提供もしくは提供不能に関して、または本製品の使用から生じる、本保証規定に規定されていない保証（商品性、特定の目的に対する適合性、信頼性または可用性、応答の的確性、使用結果、職人的努力、ウィルスの不存在、および過失の不存在についての黙示の保証、義務または条件を含みますがこれらに限定されません）を、明示、黙示、若しくは法律上のものであるとを問わず一切いたしません。本製品に関する権原、平穏享有、平穏占有、表示との一致または権利侵害の不存在についての保証または条件についても同様です。

9.  損害に関する免責  法律上の請求の原因の種類を問わず、マイクロソフトおよびその供給者は、法律上許容される最大限において、本製品の使用もしくは使用不能、サポートまたは本製品を通じたその他のサービス、情報、ソフトウェア、および関連コンテンツの提供もしくは提供不能、または本製品の使用から生じる、またはその他本契約書に関して生じる特別損害、付随的損害、懲罰的損害、間接損害、派生的損害、またはその他の一切の損害 (逸失利益、機密情報もしくはその他の情報の喪失、事業の中断、人身傷害、プライバシーの喪失、誠実義務または合理的な注意義務を含めた義務の不履行、過失、またはその他の金銭的損失を含みますがこれらに限定されません) に関しては、マイクロソフトまたはその供給者の落ち度、不法行為（過失を含む）、無過失責任、契約違反または保証違反の場合であっても、一切責任を負いません。たとえ、マイクロソフトまたはその供給者がこのような損害の可能性について知らされていた場合でも同様です。

10.  責任及び救済手段の制限  いかなる理由において生じる損害 (上記および本保証規定の損害および直接損害または通常損害を含みますがこれらに限定されません) にも関わらず、本契約書に基づくマイクロソフトおよびその供給者の責任 (本保証規定違反に関してマイクロソフトによって選択された修理または交換による対応を除きます) は、本製品についてお客様が実際に支払った金額または 700 円のいずれか高い額を上限とします。たとえいかなる救済手段もその実質的目的を達せない場合でも、上記の責任制限、保証の限定および免責条項 (本契約書第 8 条および9 条を含む) が法律上最大限認められる限度で適用されます。

11.  第三者のサイトへのリンク  お客様は、本製品を使用して第三者のサイトにリンクすることができます。第三者のサイトは、マイクロソフトの管理のもとにはなく、マイクロソフトは、あらゆる第三者のサイトのコンテンツまたは第三者のサイトに含まれるリンクの内容、またはそれらの変更もしくは更新について責任を負いません。マイクロソフトは、いかなる第三者のサイトから受信されたウェブ キャスティングまたはその他のいかなる形式の送信についても責任を負いません。マイクロソフトは、お客様の便宜の一つとしてのみ第三者のサイトへのリンクを提供しているのであって、いかなるリンクが含まれていても、そのことがマイクロソフトによる第三者のサイトの推奨を意味するものではありません。  

12.  輸出規制  お客様は、本製品がアメリカ合衆国で製品化されたものであり、本製品がアメリカ合衆国の輸出に関する規制の対象となることを認めるものとします。お客様は、本製品に適用されるすべての国内法および国際法（アメリカ合衆国の輸出管理規則ならびにアメリカ合衆国、日本国およびその他の政府機関によるエンドユーザー、エンドユーザーによる使用、および輸出対象国に関する制限を含みます）を遵守することに同意されたものとします。詳細については http://www.microsoft.com/exporting/ をご参照ください。

13.  準拠法   本契約は、日本国法に準拠するものとします。

14.  完全な合意  本契約書 (本製品に含まれる本契約書の追加および修正を含みます) は、本製品およびサポート サービス (該当する場合) に関してお客様とマイクロソフトの間の完全な合意を構成し、本製品または本契約書で扱われているその他の主題に関するすべての以前および同時の口頭または書面による意思表示、提案、および表明を無効にします。マイクロソフトのポリシーまたはサポートサービスに関する条項が本契約書の条項と異なる場合は、本契約書の条項が適用されます。

15.  本製品は、著作権法ならびにその他の無体財産権に関する法律および条約によって保護されています。マイクロソフトおよびその供給者は、本製品に関する権原、著作権、およびその他の無体財産権を有しています。本製品は許諾されるもので、販売されるものではありません。
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\ja\eula.rtf ===
{\rtf1\ansi\ansicpg1252\uc2\deff0\stshfdbch11\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1041{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman{\*\falt Device Font 10cpi};} {\f11\froman\fcharset128\fprq1{\*\panose 02020609040205080304}\'82\'6c\'82\'72 \'96\'be\'92\'a9{\*\falt ?l?r ??\'81\'66c};}{\f19\froman\fcharset128\fprq1{\*\panose 02020609040305080305}Mincho{\*\falt MS ??};} {\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma{\*\falt ?l?r ??????????????????????????};}{\f38\froman\fcharset128\fprq1{\*\panose 02020609040205080304}@\'82\'6c\'82\'72 \'96\'be\'92\'a9;} {\f41\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Arial Narrow{\*\falt Helvetica-Narrow};}{\f42\froman\fcharset128\fprq2{\*\panose 00000000000000000000}\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9{\*\falt MS ??};} {\f43\froman\fcharset128\fprq2{\*\panose 00000000000000000000}@\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9;}{\f44\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Franklin Gothic Demi Cond{\*\falt Impact};} {\f45\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Franklin Gothic Book{\*\falt Arial};}{\f67\froman\fcharset128\fprq1{\*\panose 00000000000000000000}@Mincho;}{\f68\froman\fcharset238\fprq2 Times New Roman CE{\*\falt Device Font 10cpi};} {\f69\froman\fcharset204\fprq2 Times New Roman Cyr{\*\falt Device Font 10cpi};}{\f71\froman\fcharset161\fprq2 Times New Roman Greek{\*\falt Device Font 10cpi};}{\f72\froman\fcharset162\fprq2 Times New Roman Tur{\*\falt Device Font 10cpi};} {\f73\froman\fcharset177\fprq2 Times New Roman (Hebrew){\*\falt Device Font 10cpi};}{\f74\froman\fcharset178\fprq2 Times New Roman (Arabic){\*\falt Device Font 10cpi};}{\f75\froman\fcharset186\fprq2 Times New Roman Baltic{\*\falt Device Font 10cpi};} {\f76\froman\fcharset163\fprq2 Times New Roman (Vietnamese){\*\falt Device Font 10cpi};}{\f180\froman\fcharset0\fprq1 MS Mincho Western{\*\falt ?l?r ??\'81\'66c};}{\f178\froman\fcharset238\fprq1 MS Mincho CE{\*\falt ?l?r ??\'81\'66c};} {\f179\froman\fcharset204\fprq1 MS Mincho Cyr{\*\falt ?l?r ??\'81\'66c};}{\f181\froman\fcharset161\fprq1 MS Mincho Greek{\*\falt ?l?r ??\'81\'66c};}{\f182\froman\fcharset162\fprq1 MS Mincho Tur{\*\falt ?l?r ??\'81\'66c};} {\f185\froman\fcharset186\fprq1 MS Mincho Baltic{\*\falt ?l?r ??\'81\'66c};}{\f428\fswiss\fcharset238\fprq2 Tahoma CE{\*\falt ?l?r ??????????????????????????};}{\f429\fswiss\fcharset204\fprq2 Tahoma Cyr{\*\falt ?l?r ??????????????????????????};} {\f431\fswiss\fcharset161\fprq2 Tahoma Greek{\*\falt ?l?r ??????????????????????????};}{\f432\fswiss\fcharset162\fprq2 Tahoma Tur{\*\falt ?l?r ??????????????????????????};} {\f433\fswiss\fcharset177\fprq2 Tahoma (Hebrew){\*\falt ?l?r ??????????????????????????};}{\f434\fswiss\fcharset178\fprq2 Tahoma (Arabic){\*\falt ?l?r ??????????????????????????};} {\f435\fswiss\fcharset186\fprq2 Tahoma Baltic{\*\falt ?l?r ??????????????????????????};}{\f436\fswiss\fcharset163\fprq2 Tahoma (Vietnamese){\*\falt ?l?r ??????????????????????????};} {\f437\fswiss\fcharset222\fprq2 Tahoma (Thai){\*\falt ?l?r ??????????????????????????};}{\f450\froman\fcharset0\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 Western;}{\f448\froman\fcharset238\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 CE;} {\f449\froman\fcharset204\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 Cyr;}{\f451\froman\fcharset161\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 Greek;}{\f452\froman\fcharset162\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 Tur;} {\f455\froman\fcharset186\fprq1 @\'82\'6c\'82\'72 \'96\'be\'92\'a9 Baltic;}{\f478\fswiss\fcharset238\fprq2 Arial Narrow CE{\*\falt Helvetica-Narrow};}{\f479\fswiss\fcharset204\fprq2 Arial Narrow Cyr{\*\falt Helvetica-Narrow};} {\f481\fswiss\fcharset161\fprq2 Arial Narrow Greek{\*\falt Helvetica-Narrow};}{\f482\fswiss\fcharset162\fprq2 Arial Narrow Tur{\*\falt Helvetica-Narrow};}{\f485\fswiss\fcharset186\fprq2 Arial Narrow Baltic{\*\falt Helvetica-Narrow};} {\f490\froman\fcharset0\fprq2 MS PMincho Western{\*\falt MS ??};}{\f488\froman\fcharset238\fprq2 MS PMincho CE{\*\falt MS ??};}{\f489\froman\fcharset204\fprq2 MS PMincho Cyr{\*\falt MS ??};}{\f491\froman\fcharset161\fprq2 MS PMincho Greek{\*\falt MS ??};} {\f492\froman\fcharset162\fprq2 MS PMincho Tur{\*\falt MS ??};}{\f495\froman\fcharset186\fprq2 MS PMincho Baltic{\*\falt MS ??};}{\f500\froman\fcharset0\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 Western;} {\f498\froman\fcharset238\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 CE;}{\f499\froman\fcharset204\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 Cyr;}{\f501\froman\fcharset161\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 Greek;} {\f502\froman\fcharset162\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 Tur;}{\f505\froman\fcharset186\fprq2 @\'82\'6c\'82\'72 \'82\'6f\'96\'be\'92\'a9 Baltic;}{\f508\fswiss\fcharset238\fprq2 Franklin Gothic Demi Cond CE{\*\falt Impact};} {\f509\fswiss\fcharset204\fprq2 Franklin Gothic Demi Cond Cyr{\*\falt Impact};}{\f511\fswiss\fcharset161\fprq2 Franklin Gothic Demi Cond Greek{\*\falt Impact};}{\f512\fswiss\fcharset162\fprq2 Franklin Gothic Demi Cond Tur{\*\falt Impact};} {\f515\fswiss\fcharset186\fprq2 Franklin Gothic Demi Cond Baltic{\*\falt Impact};}{\f518\fswiss\fcharset238\fprq2 Franklin Gothic Book CE{\*\falt Arial};}{\f519\fswiss\fcharset204\fprq2 Franklin Gothic Book Cyr{\*\falt Arial};} {\f521\fswiss\fcharset161\fprq2 Franklin Gothic Book Greek{\*\falt Arial};}{\f522\fswiss\fcharset162\fprq2 Franklin Gothic Book Tur{\*\falt Arial};}{\f525\fswiss\fcharset186\fprq2 Franklin Gothic Book Baltic{\*\falt Arial};}}{\colortbl;\red0\green0\blue0; \red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128; \red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0  \fs24\lang1033\langfe1041\loch\f0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 \snext0 Normal;}{\*\cs10 \additive \ssemihidden Default Paragraph Font;}{\* \ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv  \ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\loch\f0\hich\af0\dbch\af11\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\s15\ql \fi-274\li274\ri0\sb120\sl-460\slmult0 \nowidctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin274\itap0 \fs44\lang1033\langfe1041\kerning42\loch\f44\hich\af44\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext15 1. Section Head;}{\s16\ql \li0\ri0\sb120\sl-200\slmult0\widctlpar\brdrt \brdrs\brdrw15 \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \caps\fs16\lang1033\langfe1041\kerning16\loch\f44\hich\af44\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext16 4. LA Para Head;}{ \s17\ql \li0\ri-18\sb120\sl-240\slmult0\widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin-18\lin0\itap0 \fs22\lang1033\langfe1041\kerning22\loch\f44\hich\af44\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext17 2. LA Subhead;}{ \s18\ql \li0\ri0\sb60\sl-180\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\f45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext18 3. LA Body;}{ \s19\ql \fi-187\li187\ri0\sb60\sl-180\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin187\itap0 \fs16\lang1033\langfe1041\loch\f45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon18 \snext19 3c. Numbered;}{ \s20\ql \fi-340\li624\ri0\sb60\sl-160\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin624\itap0 \fs14\cf1\lang1033\langfe1041\loch\f45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon18 \snext20 3i. Numbered 2nd level;}{ \s21\ql \li0\ri0\sb240\sl-240\slmult0\widctlpar\tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs22\lang1033\langfe1041\kerning22\loch\f44\hich\af44\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon17 \snext21 2a. French Subhead;} {\s22\ql \li0\ri0\sl-180\slmult0\widctlpar\tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\cf1\lang1033\langfe1041\loch\f45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext22 footer;}{ \s23\ql \li0\ri0\sl-320\slmult0\widctlpar\tx360\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs12\cf5\lang1033\langfe1041\loch\f45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext23 6. Part No.;}{ \s24\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext24 \ssemihidden Balloon Text;}{ \s25\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \cbpat9 \fs24\lang1033\langfe1041\loch\f36\hich\af36\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext25 \ssemihidden Document Map;}{\s26\ql \li0\ri0\widctlpar \tqc\tx4320\tqr\tx8640\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1041\loch\f0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext26 header;}{\s27\ql \li0\ri0\sb120\sl-200\slmult0\widctlpar\brdrt\brdrs\brdrw15  \tx576\tx1152\tx1728\nooverflow\faroman\rin0\lin0\itap0 \b\caps\fs16\expnd-1\expndtw-5\lang1033\langfe1041\kerning16\loch\f41\hich\af41\dbch\af19\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext27 04. LA Para Head;}{\*\cs28 \additive \fs18  \sbasedon10 \ssemihidden annotation reference;}{\s29\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1041\loch\f0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon0 \snext29 \ssemihidden  annotation text;}{\s30\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \b\fs24\lang1033\langfe1041\loch\f0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 \sbasedon29 \snext29 \ssemihidden annotation subject;}}{\*\revtbl {Unknown;}} {\*\rsidtbl \rsid658831}{\*\generator Microsoft Word 10.0.3416;}{\info{\title NEED TO ADD SMC language}{\author Martha Minier (LCA)}{\operator Rustin Gibbs}{\creatim\yr2001\mo12\dy14\hr16\min28}{\revtim\yr2001\mo12\dy14\hr16\min29} {\printim\yr2001\mo11\dy21\hr21\min1}{\version3}{\edmins7}{\nofpages5}{\nofwords1204}{\nofchars6863}{\*\company MSKK}{\nofcharsws8051}{\vern16453}}{\*\userprops {\propname _AdHocReviewCycleID}\proptype3{\staticval -1822406991}{\propname _EmailSubject} \proptype30{\staticval EULA status..coming in an hour or so..sorry for delay <eom>}{\propname _AuthorEmail}\proptype30{\staticval martham@microsoft.com}{\propname _AuthorEmailDisplayName}\proptype30{\staticval Martha Minier (LCA)} {\propname _ReviewingToolsShownOnce}\proptype30{\staticval }}\paperw12240\paperh15840\margl1440\margr1440\margt1985\margb1701\gutter0 \widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\formshade\horzdoc\dgmargin \dghspace180\dgvspace180\dghorigin1440\dgvorigin1985\dghshow1\dgvshow1\jexpand\viewkind4\viewscale100\pgbrdrhead\pgbrdrfoot\nolnhtadjtbl\rsidroot658831 \fet0\sectd \psz1\linex0\headery0\titlepg\sectdefaultcl\sftnbj {\*\pnseclvl1 \pnucrm\pnstart1\pnindent720\pnhang {\pntxta \hich .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta \hich .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta \hich .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang  {\pntxta \hich )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \hich (} {\pntxta \hich )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb \hich (}{\pntxta \hich )}}\pard\plain  \qj \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1041\loch\af0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u23550\'91\'ce\u-29599\'8f\'db \u-30467\'90\'bb\u21697\'95\'69\u-230\'81\'46}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  Microsoft Mobile Internet Toolkit }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26085\'93\'fa\u26412\'96\'7b\u-30050\'8c\'ea\u29256 \'94\'c5}{\fs21\dbch\af42\insrsid1994203  \par }\pard \qc \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\b\fs28\dbch\af42\insrsid1994203  \par }{\b\fs28\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\u29992\'97\'70\u-30159\'8b\'96\u-29954\'91\'f8\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91}{\b\fs28\dbch\af42\insrsid1994203  \par }\pard \ql \li0\ri0\widctlpar\brdrt\brdrs\brdrw15\brsp20 \aspalpha\aspnum\faauto\adjustright\rin0\lin0\rtlgutter\itap0 {\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-28211\'8f\'64\u-30335\'97\'76\u8213\'81\'5c\u20197\'88\'c8\u19979\'89\'ba \u12398\'82\'cc\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12434\'82\'f0\u27880\'92\'8d\u24847\'88\'d3\u12375\'82\'b5\u12390\'82\'c4\u12362\'82\'a8\u-30035\'93\'c7\u12415 \'82\'dd\u12367\'82\'ad\u12384\'82\'be\u12373\'82\'b3\u12356\'82\'a2\u12290\'81\'42\u26412\'96\'7b\u20351\'8e\'67\u29992\'97\'70\u-30159\'8b\'96\u-29954\'91\'f8\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91}{\b\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0  (}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2 \u12414\'82\'dc\u12377\'82\'b7}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\u12289\'81\'41\u19978\'8f\'e3\u-30184\'8b\'4c\u12395\'82\'c9\u31034\'8e\'a6\u12373\'82\'b3 \u12428\'82\'ea\u12383\'82\'bd\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c}{ \b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-32278\'8e\'a9\u28982\'91\'52\u20154\'90\'6c\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u27861\'96\'40\u20154\'90\'6c\u12398\'82\'cc \u12356\'82\'a2\u12378\'82\'b8\u12428\'82\'ea\u12391\'82\'c5\u12354\'82\'a0\u12427\'82\'e9\u12363\'82\'a9\u12434\'82\'f0\u21839\'96\'e2\u12356\'82\'a2\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 )  }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 Microsoft Corporation (}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300 \'81\'75\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{\b\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0 ) }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\u12398\'82\'cc\u-27245\'8a\'d4\u12395\'82\'c9\u32224\'92\'f7\u32080\'8c\'8b\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u27861\'96\'40\u30340\'93\'49 \u12394\'82\'c8\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12391\'82\'c5\u12377\'82\'b7\u12290\'81\'42\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12399\'82\'cd\u12467\'83\'52\u12531\'83\'93\u12500\'83\'73\u12517\'83\'85\u12540\'81\'5b\u12479 \'83\'5e}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u21547\'8a\'dc\u12415 \'82\'dd\u12289\'81\'41\u12381\'82\'bb\u12428\'82\'ea\u12395\'82\'c9\u-27230\'8a\'d6\u-28637\'98\'41\u12375\'82\'b5\u12383\'82\'bd\u23186\'94\'7d\u20307\'91\'cc\u12289\'81\'41\u21360\'88\'f3\loch\af0\hich\af0\dbch\f42 \u21047\'8d\'fc\u29289\'95\'a8}{ \b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\u12491\'83\'6a\u12517\'83\'85\u12450\'83\'41\u12523\'83\'8b\u12394\'82\'c8\u12393\'82\'c7\u12398\'82\'cc\u25991\'95\'b6 \u26360\'8f\'91}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 )}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\u12458\'83\'49\u12531\'83\'93\u12521\'83\'89\u12452\'83\'43\u12531\'83\'93\u25991\'95\'b6\u26360\'8f\'91 \u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-26885\'93\'64\u23376\'8e\'71\u25991\'95\'b6\u26360\'8f\'91\u12289\'81\'41\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12452\'83\'43\u12531\'83\'93\u12479\'83\'5e\u12540\'81\'5b\u12493\'83\'6c\u12483 \'83\'62\u12488\'83\'67}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12505\'83\'78\u12540\'81\'5b\u12473\'83\'58\u12398\'82\'cc\u12469\'83\'54\u12540\'81\'5b\u12499\'83\'72\u12473 \'83\'58}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12301\'81\'76\u12392\'82\'c6\u12356 \'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{\b\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\b\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\u21547\'8a\'dc\u12416\'82\'de\u12371\'82\'b1\u12392\'82\'c6\u12418 \'82\'e0\u12354\'82\'a0\u12426\'82\'e8\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u20462\'8f\'43\u27491\'90\'b3 \u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-28675\'92\'c7\u21152\'89\'c1\u26465\'8f\'f0\u-26619\'8d\'80\u12364\'82\'aa\u20184\'95\'74\u23646\'91\'ae\u12375\'82\'b5\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12364 \'82\'aa\u12354\'82\'a0\u12426\'82\'e8\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u12452\'83\'43\u12531\'83\'93\u12473\'83\'58\u12488\'83\'67\u12540\'81\'5b\u12523\'83\'8b\u12289\'81\'41 \u-30457\'95\'a1\u-30467\'90\'bb\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12395\'82\'c9\u12424\'82\'e6\u12387\'82\'c1\u12390\'82\'c4\u12289 \'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u25304\'8d\'53\u26463\'91\'a9\u12373\'82\'b3\u12428\'82\'ea \u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12395\'82\'c9\u25215\'8f\'b3\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12383\'82\'bd\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u26412 \'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u21516\'93\'af\u24847\'88\'d3\u12373\'82\'b3\u12428\'82\'ea\u12394\'82\'c8\u12356\'82\'a2\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41 \u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398 \'82\'cc\u12452\'83\'43\u12531\'83\'93\u12473\'83\'58\u12488\'83\'67\u12540\'81\'5b\u12523\'83\'8b\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u20351\'8e\'67\u29992\'97\'70\u12398\'82\'cc\u12356\'82\'a2\u12378\'82\'b8\u12428\'82\'ea\u12418\'82\'e0 \u-30159\'8b\'96\u-29954\'91\'f8\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u12381\'82\'bb\u12398\'82\'cc\u12424\'82\'e6\u12358\'82\'a4\u12394\'82\'c8\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u26412 \'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u30452\'92\'bc\u12385\'82\'bf\u12395\'82\'c9\u-29444\'8d\'77\u20837\'93\'fc\u24215\'93\'58\u12408\'82\'d6\u12372\'82\'b2\u-28716\'95\'d4\u21697\'95\'69\u12356\'82\'a2\u12383\'82\'bd\u12384\'82\'be \u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\u12362\'82\'a8\u25903\'8e\'78\u25173\'95\'a5\u12356\'82\'a2\u12356\'82\'a2\u12383\'82\'bd\u12384\'82\'be\u12356\'82\'a2\u12383\'82\'bd\u-28207\'8b\'e0\u-26547\'8a\'7a \u12434\'82\'f0\u20840\'91\'53\u-26547\'8a\'7a\u25173\'95\'a5\u25147\'96\'df\u12375\'82\'b5\u12356\'82\'a2\u12383\'82\'bd\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\b\dbch\af42\insrsid1994203  \par }\pard\plain \s16\ql \li0\ri0\widctlpar\brdrt\brdrs\brdrw15 \tx576\tx1152\tx1728\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \caps\fs16\lang1033\langfe1041\kerning16\loch\af44\hich\af44\dbch\af11\cgrid\langnp1033\langfenp1041 { \b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u-30467\'90\'bb\u21697\'95\'69\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531 \'83\'93\u12473\'83\'58}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \s27\ql \li0\ri0\widctlpar\nooverflow\faroman\rin0\lin0\itap0 \b\caps\fs16\expnd-1\expndtw-5\lang1033\langfe1041\kerning16\loch\af41\hich\af41\dbch\af19\cgrid\langnp1033\langfenp1041 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \ql \li0\ri0\sa60\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1041\loch\af0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 1.  }{\b\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12398\'82\'cc\u-30159\'8b\'96\u-29954\'91\'f8}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12289 \'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u12377\'82\'b7\u12409\'82\'d7\u12390\'82\'c4\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12362\'82\'a8 \u12424\'82\'e6\u12403\'82\'d1\u26465\'8f\'f0\u20214\'8c\'8f\u12434\'82\'f0\u21427\'8c\'b5\u23432\'8e\'e7\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4 \u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12395\'82\'c9\u-30184\'8b\'4c\u-28919\'8d\'da\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427 \'82\'e9\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u-30159\'8b\'96\u-29954\'91\'f8\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs14\cf1\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0 1.1 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\u-32212\'94\'ca\u30340\'93\'49\u12521\'83\'89 \u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12398\'82\'cc\u-30159\'8b\'96\u-29954\'91\'f8}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u20491\'8c\'c2\u20154\'90\'6c\u12398\'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c \u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u12415\'82\'dd\u12364\'82\'aa\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377 \'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u12477\'83\'5c\u12501\'83\'74\u12488 \'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u-30163\'90\'dd\u-30200\'8c\'76\u12289\'81\'41\u-27253\'8a\'4a\u30330\'94\'ad\u12289\'81\'41\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12486\'83\'65 \u12473\'83\'58\u12488\'83\'67\u12398\'82\'cc\u12383\'82\'bd\u12417\'82\'df\u12395\'82\'c9\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b\u12434\'82\'f0\u20316\'8d\'ec\u25104\'90\'ac\u12362 \'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u23646\'91\'ae\u20154\'90\'6c\u30340\'93\'49\u12363\'82\'a9\u12388\'82\'c2\u-26786\'94\'f1\u29420\'93\'c6\u21344\'90\'e8\u30340\'93\'49\u12394\'82\'c8 \u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12434\'82\'f0\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u21517\'96\'bc\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\u-30159\'8b\'96\u-29954\'91\'f8\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    \par }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u27861\'96\'40\u20154\'90\'6c\u12398\'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12510\'83\'7d\u12452 \'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u32068\'91\'67\u32340\'90\'44\u20869\'93\'e0\u12391\'82\'c5\u26412\'96\'7b \u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u21508\'8a\'65\u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12395\'82\'c9\u12388\'82\'c2\u12356\'82\'a2\u12390\'82\'c4\u12362 \'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u20491\'8c\'c2\u21029\'95\'ca\u12395\'82\'c9\u27491\'90\'b3\u-30321\'8b\'4b\u12398\'82\'cc\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12434\'82\'f0\u21462\'8e\'e6 \u24471\'93\'be\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u12289\'81\'41\u26412\'96\'7b\u-30467 \'90\'bb\u21697\'95\'69\u12398\'82\'cc\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b\u12434\'82\'f0\u20316\'8d\'ec\u25104\'90\'ac\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u23646\'91\'ae\u20154 \'90\'6c\u30340\'93\'49\u12363\'82\'a9\u12388\'82\'c2\u-26786\'94\'f1\u29420\'93\'c6\u21344\'90\'e8\u30340\'93\'49\u12394\'82\'c8\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12434\'82\'f0\u12362\'82\'a8\u23458\'8b\'71 \u27096\'97\'6c}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\chshdng0\chcfpat1\chcbpat8\insrsid1994203 \hich\af0\dbch\af42\loch\f0 1 }{ \fs21\loch\af0\hich\af0\dbch\af42\chshdng0\chcfpat1\chcbpat8\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\u20154\'90\'6c\u12395\'82\'c9\u-30159\'8b\'96}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-29954 \'91\'f8\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 1.2 \hich\f0 \endash }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\u12461\'83\'4c\u12517\'83\'85\u12513\'83\'81\u12531\'83\'93\u12488\'83\'67}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u12489\'83\'68\u12461\'83\'4c\u12517\'83\'85\u12513\'83\'81\u12531\'83\'93\u12488\'83\'67\u12398\'82\'cc\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b \u12364\'82\'aa\u20491\'8c\'c2\u20154\'90\'6c\u30340\'93\'49\u12394\'82\'c8\u30446\'96\'da\u30340\'93\'49\u12391\'82\'c5\u20351\'8e\'67\u29992\'97\'70\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12289\'81\'41\u12363\'82\'a9 \u12388\'82\'c2\u24403\'93\'96\u-30094\'8a\'59\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b\u12364\'82\'aa\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u32068\'91\'67\u32340\'90\'44\u22806\'8a\'4f\u12395\'82\'c9\u20877\'8d\'c4\u30330 \'94\'ad\u-30644\'8d\'73\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-26606\'94\'d0\u24067\'95\'7a\u-248\'81\'69\u12495\'83\'6e\u12540\'81\'5b\u12489\'83\'68\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b\u12391\'82\'c5\u12354\'82\'a0\u12427\'82\'e9 \u12392\'82\'c6\u-26885\'93\'64\u23376\'8e\'71\u30340\'93\'49\u24418\'8c\'60\u24907\'91\'d4\u12391\'82\'c5\u12354\'82\'a0\u12427\'82\'e9\u12392\'82\'c6\u12434\'82\'f0\u21839\'96\'e2\u12356\'82\'a2\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u-247\'81\'6a \u12373\'82\'b3\u12428\'82\'ea\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u12289\'81\'41\u24403\'93\'96\u-30094\'8a\'59\u12467\'83\'52\u12500 \'83\'73\u12540\'81\'5b\u12434\'82\'f0\u25968\'90\'94\u12395\'82\'c9\u-27056\'8c\'c0\u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\u12367\'82\'ad\u20316\'8d\'ec\u25104\'90\'ac\u12375\'82\'b5\u12390\'82\'c4\u20351\'8e\'67\u29992\'97\'70\u12377 \'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12364\'82\'aa\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 1.3 -}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-30184\'8b\'4c\u25014\'89\'af\u-30523\'91\'95\u32622\'92\'75\u-241\'81\'5e\u12493 \'83\'6c\u12483\'83\'62\u12488\'83\'67\u12527\'83\'8f\u12540\'81\'5b\u12463\'83\'4e\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u12493\'83\'6c\u12483\'83\'62\u12488\'83\'67\u12527\'83\'8f\u12540\'81\'5b\u12463\'83\'4e\u12469 \'83\'54\u12540\'81\'5b\u12496\'83\'6f\u12540\'81\'5b\u12398\'82\'cc\u12424\'82\'e6\u12358\'82\'a4\u12394\'82\'c8\u-30184\'8b\'4c\u25014\'89\'af\u-30523\'91\'95\u32622\'92\'75\u12395\'82\'c9\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69 \u12398\'82\'cc\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-28440\'95\'94\u12434\'82\'f0 \u-31548\'92\'7e\u31309\'90\'cf\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12452\'83\'43\u12531\'83\'93\u12473\'83\'58\u12488\'83\'67\u12540\'81\'5b\u12523\'83\'8b\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12418\'82\'e0\u12391 \'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12381\'82\'bb\u12398\'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb \u21697\'95\'69\u12434\'82\'f0\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\u12395\'82\'c9 \u24467\'8f\'5d\u12387\'82\'c1\u12390\'82\'c4\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12434\'82\'f0\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12383\'82\'bd\u12456\'83\'47\u12531\'83\'93\u12489 \'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12395\'82\'c9\u12424 \'82\'e6\u12387\'82\'c1\u12390\'82\'c4\u20351\'8e\'67\u29992\'97\'70\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u12467\'83\'52\u12531\'83\'93\u12500\'83\'73\u12517\'83\'85\u12540\'81\'5b\u12479\'83\'5e\u12395\'82\'c9\u12452\'83\'43\u12531\'83\'93\u12473 \'83\'58\u12488\'83\'67\u12540\'81\'5b\u12523\'83\'8b\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u23455\'8e\'c0\u-30644\'8d\'73\u12377\'82\'b7\u12427\'82\'e9\u12383\'82\'bd\u12417\'82\'df\u12384\'82\'be\u12369\'82\'af\u12395\'82\'c9\u12289\'81\'41 \u12363\'82\'a9\u12363\'82\'a9\u12427\'82\'e9\u-30184\'8b\'4c\u25014\'89\'af\u-30523\'91\'95\u32622\'92\'75\u19978\'8f\'e3\u12398\'82\'cc\u12467\'83\'52\u12500\'83\'73\u12540\'81\'5b\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12375\'82\'b5\u12394 \'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u12414\'82\'dc\u12383\'82\'bd\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9 \u12388\'82\'c2\u12356\'82\'a2\u12390\'82\'c4\u12398\'82\'cc}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\u12398\'82\'cc \u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12434\'82\'f0\u20182\'91\'bc\u12398\'82\'cc\u12456\'83\'47\u12531\'83\'93\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12392\'82\'c6\u21516\'93\'af\u26178\'8e\'9e\u12395\'82\'c9\u20849\'8b\'a4\u26377\'97\'4c\u12414\'82\'dc\u12383 \'82\'bd\u12399\'82\'cd\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 2.}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-28675 \'92\'c7\u21152\'89\'c1\u12398\'82\'cc\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  - }{ \b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u12391\'82\'c5\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12383\'82\'bd\u27177\'8c\'a0\u21033\'97\'98\u12395 \'82\'c9\u21152\'89\'c1\u12360\'82\'a6\u12289\'81\'41\u26412\'96\'7b\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 2}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465 \'8f\'f0\u12395\'82\'c9\u-30184\'8b\'4c\u-28919\'8d\'da\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12424\'82\'e6\u12358\'82\'a4\u12395\'82\'c9\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc \u29305\'93\'c1\u23450\'92\'e8\u12398\'82\'cc\u-28440\'95\'94\u20998\'95\'aa\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u-28675\'92\'c7\u21152\'89\'c1\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98\u12364\'82\'aa\u-30159\'8b\'96\u-29954 \'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12383\'82\'bd\u12384\'82\'be\u12375\'82\'b5\u12381\'82\'bb\u12398\'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360 \'8f\'91\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  3 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u12398\'82\'cc\u-26606\'94\'d0\u24067\'95\'7a\u12398 \'82\'cc\u26465\'8f\'f0\u20214\'8c\'8f\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12395\'82\'c9\u-27230\'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u21046\'90\'a7\u-27056\'8c\'c0 \u12395\'82\'c9\u24467\'8f\'5d\u12431\'82\'ed\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\i\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs14\cf1\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0 2.1 - }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u27083\'8d\'5c\u25104\'90\'ac\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1 \u12469\'83\'54\u12531\'83\'93\u12503\'83\'76\u12523\'83\'8b}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\u12540\'81\'5b \u12473\'83\'58}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488 \'83\'67\u12399\'82\'cd\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41 \u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u-30163\'90\'dd\u-30200\'8c\'76\u12289\'81\'41\u-27253\'8a\'4a\u30330\'94\'ad\u12289\'81\'41\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12486\'83\'65\u12473\'83\'58\u12488\'83\'67\u12377\'82\'b7\u12427 \'82\'e9\u12383\'82\'bd\u12417\'82\'df\u12395\'82\'c9\u12398\'82\'cc\u12415\'82\'dd\u12289\'81\'41}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (i) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  REDIST.TXT }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9\u-30184\'8b\'4c\u-28919\'8d\'da\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\u12427\'82\'e9\u12300\'81\'75 \u27083\'8d\'5c\u25104\'90\'ac\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12301\'81\'76\u12392\'82\'c6\u25351\'8e\'77\u23450\'92\'e8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u-28440\'95\'94\u20998 \'95\'aa\u12289\'81\'41\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (ii) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467 \'90\'bb\u21697\'95\'69\u12398\'82\'cc}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  REDIST.TXT }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd \u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u22580\'8f\'ea\u25152\'8f\'8a\u12391\'82\'c5\u12300\'81\'75\u12469\'83\'54\u12531\'83\'93\u12503\'83\'76\u12427\'82\'e9\u12301\'81\'76\u12392\'82\'c6\u25351\'8e\'77\u23450\'92\'e8\u12373\'82\'b3 \u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u-28440\'95\'94\u20998\'95\'aa}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u20197\'88\'c8\u19979\'89\'ba\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12391\'82\'c5}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (i) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (ii) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0 \u32207\'91\'8d\u31216\'8f\'cc\u12375\'82\'b5\u12390\'82\'c4\u12300\'81\'75\u26412\'96\'7b\u12469\'83\'54\u12531\'83\'93\u12503\'83\'76\u12523\'83\'8b}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\u12477\'83\'5c\u12540\'81\'5b\u12473\'83\'58}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\u12540\'81\'5b\u12472\'83\'57\u12519\'83\'87\u12531\'83\'93\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12362\'82\'a8\u12424 \'82\'e6\u12403\'82\'d1\u25913\'89\'fc\u22793\'95\'cf\u12375\'82\'b5\u12390\'82\'c4\u12289\'81\'41\u26412\'96\'7b\u12469\'83\'54\u12531\'83\'93\u12503\'83\'76\u12523\'83\'8b}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12434\'82\'f0\u12381\'82\'bb\u12398\'82\'cc\u25913\'89\'fc\u22793\'95\'cf\u12373\'82\'b3\u12428\'82\'ea\u12383\'82\'bd\u12418 \'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u12458\'83\'49\u12502\'83\'75\u12472\'83\'57\u12455\'83\'46\u12463\'83\'4e\u12488\'83\'67\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12477 \'83\'5c\u12540\'81\'5b\u12473\'83\'58}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12391 \'82\'c5\u-30457\'95\'a1\u-30467\'90\'bb\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u-26606\'94\'d0\u24067\'95\'7a\u12377\'82\'b7\u12427\'82\'e9\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u-30159\'8b\'96\u-29954\'91\'f8\u12375\'82\'b5\u12414\'82\'dc \u12377\'82\'b7\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 2.2 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20877 \'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb \u21697\'95\'69\u12398\'82\'cc}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  REDIST.TXT}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\u-30184\'8b\'4c\u-28919\'8d\'da\u12373 \'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u-28440\'95\'94\u20998\'95\'aa}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12301 \'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\u12458\'83\'49\u12502\'83\'75\u12472\'83\'57\u12455\'83\'46\u12463\'83\'4e\u12488\'83\'67}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12434\'82\'f0\u-30457\'95\'a1\u-30467\'90\'bb\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u-26606\'94\'d0\u24067\'95\'7a\u12377\'82\'b7\u12427\'82\'e9\u-26786\'94\'f1\u29420 \'93\'c6\u21344\'90\'e8\u30340\'93\'49\u12363\'82\'a9\u12388\'82\'c2\u28961\'96\'b3\u20767\'8f\'9e\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u-30159\'8b\'96\u-29954\'91\'f8\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 3.}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12521 \'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12398\'82\'cc\u21046\'90\'a7\u-27056\'8c\'c0}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  -- }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u-26606\'94\'d0\u24067\'95\'7a\u12398\'82\'cc\u26465\'8f\'f0\u20214\'8c\'8f}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  2 }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u12395\'82\'c9\u22522\'8a\'ee\u12389\'82\'c3\u12367\'82\'ad\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u-30644\'8d\'73\u20351\'8e\'67\u12373\'82\'b3\u12428 \'82\'ea\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12399\'82\'cd\u12289\'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u20197\'88\'c8\u19979\'89\'ba\u12398\'82\'cc\u26465\'8f\'f0 \u-26619\'8d\'80\u12395\'82\'c9\u24467\'8f\'5d\u12358\'82\'a4\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   \par }\pard\plain \ql \fi720\li0\ri0\sa60\widctlpar\faauto\rin0\lin0\itap0 \fs24\lang1033\langfe1041\loch\af0\hich\af0\dbch\af11\cgrid\langnp1033\langfenp1041 {\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 3.1 -}{\fs21\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0  }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u31532\'91\'e6}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  2 }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u12395\'82\'c9\u-30184\'8b\'4c\u-28919\'8d\'da\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427 \'82\'e9\u26412\'96\'7b\u12469\'83\'54\u12531\'83\'93\u12503\'83\'76\u12523\'83\'8b\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u32207\'91\'8d\u31216\'8f\'cc\u12375\'82\'b5\u12390 \'82\'c4\u12300\'81\'75\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u22580\'8f\'ea\u21512 \'8d\'87\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u20197\'88\'c8\u19979\'89\'ba\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u21516\'93\'af\u24847\'88\'d3\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9 \u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (i)}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u12469\'83\'54\u12531\'83\'93\u12503\'83\'76 \u12523\'83\'8b\loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12398\'82\'cc\u12477\'83\'5c\u12540\'81\'5b\u12473\'83\'58\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12398\'82\'cc\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a \u12434\'82\'f0\u-30159\'8b\'96\u21487\'89\'c2\u12377\'82\'b7\u12427\'82\'e9\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u31532\'91\'e6}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  2 }{\fs21\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u31532\'91\'e6}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\u12395\'82\'c9\u-30321\'8b\'4b\u23450\'92\'e8\u12373 \'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12434\'82\'f0\u-27036\'8f\'9c\u12365\'82\'ab\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u20877\'8d\'c4 \u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12434\'82\'f0\u12458\'83\'49\u12502\'83\'75\u12472\'83\'57\u12455\'83\'46\u12463\'83\'4e\u12488\'83\'67}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12391\'82\'c5\u12398\'82\'cc\u12415\'82\'dd\u20877\'8d\'c4\u-26606\'94\'d0\u24067 \'95\'7a\u12375\'82\'b5\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (ii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a \u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9\u-28211\'8f\'64\u-30335\'97\'76\u12363\'82\'a9\u12388\'82\'c2\u20027\'8e\'e5\u-30335\'97\'76\u12394\'82\'c8\u27231\'8b\'40\u-32515\'94\'5c\u12434 \'82\'f0\u-28675\'92\'c7\u21152\'89\'c1\u12377\'82\'b7\u12427\'82\'e9\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u12450\'83\'41\u12503\'83\'76\u12522\'83\'8a\u12465\'83\'50\u12540\'81\'5b\u12471\'83\'56\u12519\'83\'87\u12531\'83\'93 \u-30467\'90\'bb\u21697\'95\'69}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75\u26412\'96\'7b\u12521\'83\'89\u12452\'83\'43\u12475 \'83\'5a\u12531\'83\'93\u12473\'83\'58\u-30467\'90\'bb\u21697\'95\'69\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12381\'82\'bb\u12398\'82\'cc\u19968\'88\'ea\u-28440\'95\'94\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u12398\'82\'cc\u12415\'82\'dd \u12289\'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12434\'82\'f0\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12375\'82\'b5\u12394\'82\'c8\u12369 \'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (iii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43 \u12523\'83\'8b\u12399\'82\'cd\u12289\'81\'41}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 Microsoft Windows }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\u12521\'83\'89\u12483\'83\'62\u12488\'83\'67\u12501 \'83\'74\u12457\'83\'48\u12540\'81\'5b\u12512\'83\'80\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  Microsoft\hich\af0\dbch\af42\loch\f0  Mobile Internet Toolkit }{\fs21\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\u12531\'83\'93\u12479\'83\'5e\u12452\'83\'43\u12512\'83\'80\u12392\'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u12398\'82\'cc\u12415\'82\'dd\u21205\'93\'ae\u20316\'8d\'ec\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0 \u12398\'82\'cc\u12391\'82\'c5\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (iv) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u26412\'96\'7b\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a \u12531\'83\'93\u12473\'83\'58\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u-29527\'94\'cc\u22770\'94\'84\u12395\'82\'c9\u12354\'82\'a0\u12383\'82\'bd\u12426\'82\'e8\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477 \'83\'5c\u12501\'83\'74\u12488\'83\'67\u12398\'82\'cc\u21830\'8f\'a4\u21495\'8d\'86\u12289\'81\'41\u12525\'83\'8d\u12468\'83\'53\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u21830\'8f\'a4\u27161\'95\'57\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377 \'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (v) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u26412\'96\'7b\u12521\'83\'89\u12452\'83\'43\u12475 \'83\'5a\u12531\'83\'93\u12473\'83\'58\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u21517\'96\'bc\u32681\'8b\'60\u12391\'82\'c5\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9 \u-27230\'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12398\'82\'cc\u-31657\'92\'98\u20316\'8d\'ec\u27177\'8c\'a0\u12434\'82\'f0\u20445\'95\'db\u-29833 \'8c\'ec\u12377\'82\'b7\u12427\'82\'e9\u12395\'82\'c9\u21313\'8f\'5c\u20998\'95\'aa\u12394\'82\'c8\u-31657\'92\'98\u20316\'8d\'ec\u27177\'8c\'a0\u-30616\'95\'5c\u31034\'8e\'a6\u12434\'82\'f0\u20184\'95\'74\u12373\'82\'b3\u12394\'82\'c8\u12369\'82\'af \u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (vi) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u25552\'92\'f1\u20379\'8b\'9f\u12373\'82\'b3\u12428\'82\'ea \u12383\'82\'bd\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u-30616\'95\'5c\u31034\'8e\'a6\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u-31657\'92\'98\u20316\'8d\'ec\u27177\'8c\'a0\u12289\'81\'41\u21830 \'8f\'a4\u27161\'95\'57\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u29305\'93\'c1\u-30159\'8b\'96\u-30616\'95\'5c\u31034\'8e\'a6\u12434\'82\'f0\u21066\'8d\'ed\u-27036\'8f\'9c\u12375\'82\'b5\u12383\'82\'bd\u12426\'82\'e8\u-26976\'89\'42 \u12375\'82\'b5\u12390\'82\'c4\u12399\'82\'cd\u12356\'82\'a2\u12369\'82\'af\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (vii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u26412\'96\'7b\u12521\'83\'89\u12452\'83\'43 \u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-26606\'94\'d0\u24067\'95\'7a\u12398\'82\'cc\u32080\'8c\'8b \u26524\'89\'ca\u12363\'82\'a9\u12425\'82\'e7\u29983\'90\'b6\u12376\'82\'b6\u12427\'82\'e9\u32027\'95\'b4\u20105\'91\'88\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-30156\'91\'69\u-30177\'8f\'d7\u12395\'82\'c9\u12388\'82\'c2\u12356 \'82\'a2\u12390\'82\'c4\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12434\'82\'f0\u20813\'96\'c6\u-29524\'90\'d3\u12289\'81\'41\u20445\'95\'db\u-29833\'8c\'ec\u12289\'81\'41 \u-30500\'95\'e2\u20767\'8f\'9e\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u24321\'95\'d9\u-29833\'8c\'ec\u22763\'8e\'6d\u-29509\'94\'ef\u29992\'97\'70\u12395\'82\'c9\u12388\'82\'c2\u12356\'82\'a2\u12390\'82\'c4\u12398\'82\'cc\u20813\'96\'c6\u-29524\'90\'d3\u12289\'81\'41\u20445\'95\'db\u-29833 \'8c\'ec\u12289\'81\'41\u-30500\'95\'e2\u20767\'8f\'9e\u12418\'82\'e0\u21547\'8a\'dc\u12415\'82\'dd\u12414\'82\'dc\u12377\'82\'b7}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 )}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (viii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u28857\'93\'5f\u12391\'82\'c5\u12399\'82\'cd\u12289\'81\'41 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u24467\'8f\'5d\u12431\'82\'ed\u12394\'82\'c8\u12369 \'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (ix) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12391\'82\'c5\u26126\'96\'be\u31034\'8e\'a6\u30340\'93\'49 \u12395\'82\'c9\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12394\'82\'c8\u12356\'82\'a2\u27177\'8c\'a0\u21033\'97\'98\u12399\'82\'cd\u12377\'82\'b7\u12409\'82\'d7\u12390\'82\'c4\u12510\'83\'7d\u12452 \'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12395\'82\'c9\u12424\'82\'e6\u12387\'82\'c1\u12390\'82\'c4\u30041\'97\'af\u20445\'95\'db\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12395 \'82\'c9\u21516\'93\'af\u24847\'88\'d3\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u12456\'83\'47\u12531\'83\'93\u12489\'83\'68}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12395\'82\'c9\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452 \'83\'43\u12523\'83\'8b\u12398\'82\'cc\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12434\'82\'f0\u-30159\'8b\'96\u21487\'89\'c2\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc \u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u12383\'82\'bd\u12384\'82\'be\u12375\'82\'b5\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u-26606\'94\'d0\u24067\'95\'7a\u-32763\'8e\'d2\u12364\'82\'aa\u12289\'81\'41\u26412 \'96\'7b\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u-30467\'90\'bb\u21697\'95\'69\u12392\'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12381\'82\'bb\u12398\'82\'cc\u19968\'88\'ea \u-28440\'95\'94\u12392\'82\'c6\u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\u12398\'82\'cc\u12415\'82\'dd\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523 \'83\'8b\u12434\'82\'f0\u-26606\'94\'d0\u24067\'95\'7a\u12375\'82\'b5\u12289\'81\'41\u12363\'82\'a9\u12388\'82\'c2\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12392\'82\'c6\u-26606\'94\'d0\u24067\'95\'7a\u-32763\'8e\'d2\u12392\'82\'c6\u12364\'82\'aa \u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u24467\'8f\'5d\u12358\'82\'a4\u12371\'82\'b1\u12392\'82\'c6\u12434 \'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12289\'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12434\'82\'f0\u-26606\'94\'d0 \u24067\'95\'7a\u-32763\'8e\'d2\u12363\'82\'a9\u12425\'82\'e7\u12456\'83\'47\u12531\'83\'93\u12489\'83\'68}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\u12540 \'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12395\'82\'c9\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u-30159\'8b\'96\u21487\'89\'c2\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1 \u12392\'82\'c6\u12364\'82\'aa\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 3.2 -}{\b\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-26606\'94\'d0\u24067\'95\'7a\u12395\'82\'c9\u-27230\'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u-28675\'92\'c7\u21152\'89\'c1 \u12398\'82\'cc\u26465\'8f\'f0\u20214\'8c\'8f}{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  \hich\f0 \endash \loch\f0  Microsoft Merge Modules (}{\b\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12300\'81\'75}{ \b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 MSM}{\b\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12301\'81\'76}{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 )}{\b\i\fs21\dbch\af42\insrsid1994203  \par }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u12358\'82\'a4\u12385\'82\'bf}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  Microsoft Merge Modules }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\u25351\'8e\'77\u23450\'92\'e8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2 \u12427\'82\'e9\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 .MSM }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2\u12414 \'82\'dc\u12377\'82\'b7}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1 \u26360\'8f\'91\u31532\'91\'e6}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  3 }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\u31532\'91\'e6}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{ \fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u-30644\'8d\'73\u20351\'8e\'67\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12289 \'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u20197\'88\'c8\u19979\'89\'ba\u12398\'82\'cc\u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\u12395\'82\'c9\u24467\'8f\'5d \u12431\'82\'ed\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 MSM }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 MSM}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9\u21547\'8a\'dc\u12414\'82\'dc\u12428\'82\'ea\u12427 \'82\'e9\u12467\'83\'52\u12531\'83\'93\u12509\'83\'7c\u12540\'81\'5b\u12493\'83\'6c\u12531\'83\'93\u12488\'83\'67\u12434\'82\'f0\u12489\'83\'68\u12461\'83\'4c\u12517\'83\'85\u12513\'83\'81\u12531\'83\'93\u12488\'83\'67\u12395\'82\'c9\u-30184\'8b\'4c \u-28919\'8d\'da\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u26041\'95\'fb\u27861\'96\'40\u12391\'82\'c5\u12398\'82\'cc\u12415\'82\'dd\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12377\'82\'b7\u12427\'82\'e9\u12371 \'82\'b1\u12392\'82\'c6\u12364\'82\'aa\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12383\'82\'bd\u12384\'82\'be\u12375\'82\'b5\u12289\'81\'41}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 MSM}{ \fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u-32278\'8e\'a9\u20307\'91\'cc\u12399\'82\'cd\u12381\'82\'bb\u12398\'82\'cc\u12414\'82\'dc\u12414\'82\'dc\u20877\'8d\'c4\u-26606 \'94\'d0\u24067\'95\'7a\u12375\'82\'b5\u12289\'81\'41}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 MSM}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9 \u21547\'8a\'dc\u12414\'82\'dc\u12428\'82\'ea\u12427\'82\'e9\u12467\'83\'52\u12531\'83\'93\u12509\'83\'7c\u12540\'81\'5b\u12493\'83\'6c\u12531\'83\'93\u12488\'83\'67\u12434\'82\'f0\u12356\'82\'a2\u12363\'82\'a9\u12394\'82\'c8\u12427\'82\'e9\u26041\'95\'fb \u27861\'96\'40\u12391\'82\'c5\u12418\'82\'e0\u25913\'89\'fc\u22793\'95\'cf\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7 \u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par }{\b\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 3.3 -}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa \u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12289 \'81\'41\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390\'82\'c4\u-30184\'8b\'4c\u-28919\'8d\'da\u12373\'82\'b3 \u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u-30094\'8a\'59\u24403\'93\'96\u12377\'82\'b7\u12427\'82\'e9\u-26606\'94\'d0\u24067\'95\'7a\u12398\'82\'cc\u26465\'8f\'f0\u20214\'8c\'8f\u12395\'82\'c9\u24467\'8f\'5d\u12358\'82\'a4\u12371 \'82\'b1\u12392\'82\'c6\u12395\'82\'c9\u21152\'89\'c1\u12360\'82\'a6\u12289\'81\'41\u20197\'88\'c8\u19979\'89\'ba\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12364\'82\'aa\u-28567\'93\'4b\u29992\'97\'70\u12373\'82\'b3\u12428\'82\'ea\u12414\'82\'dc \u12377\'82\'b7\u12290\'81\'42\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12398\'82\'cc\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12395\'82\'c9\u-27230 \'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u12521\'83\'89\u12452\'83\'43\u12475\'83\'5a\u12531\'83\'93\u12473\'83\'58\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98\u12399\'82\'cd\u20197\'88\'c8\u19979\'89\'ba\u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26465 \'8f\'f0\u-26619\'8d\'80\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203  \par \hich\af0\dbch\af42\loch\f0 (i) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u25351\'8e\'77\u23450\'92\'e8\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u20877\'8d\'c4\u-26606 \'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12381\'82\'bb\u12398\'82\'cc\u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98 \u20316\'8d\'ec\u29289\'95\'a8\u12395\'82\'c9\u32068\'91\'67\u12415\'82\'dd\u-28740\'8d\'9e\u12414\'82\'dc\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6\u12289\'81\'41\u12381\'82\'bb\u12428\'82\'ea\u12392\'82\'c6\u19968\'88\'ea\u20307 \'91\'cc\u21270\'89\'bb\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6}{\fs21\dbch\af42\insrsid1994203  \par \hich\af0\dbch\af42\loch\f0 (ii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u25351\'8e\'77\u23450\'92\'e8\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u20877\'8d\'c4\u-26606 \'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12381\'82\'bb\u12398\'82\'cc\u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98 \u20316\'8d\'ec\u29289\'95\'a8\u12392\'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u-26606\'94\'d0\u24067\'95\'7a\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6}{\fs21\dbch\af42\insrsid1994203  \par \hich\af0\dbch\af42\loch\f0 (iii) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u25351\'8e\'77\u23450\'92\'e8\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u20877\'8d\'c4\u-26606 \'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12398\'82\'cc\u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98\u20316\'8d\'ec\u29289\'95\'a8\u12398\'82\'cc\u-27253\'8a\'4a \u30330\'94\'ad\u12395\'82\'c9\u20351\'8e\'67\u29992\'97\'70\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6}{\fs21\dbch\af42\insrsid1994203  \par }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12300\'81\'75\u25351\'8e\'77\u23450\'92\'e8\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12301\'81\'76\u12392\'82\'c6\u12399\'82\'cd\u12289 \'81\'41}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (i)}{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43 \u12523\'83\'8b\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u12381\'82\'bb\u12398\'82\'cc\u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98\u20316\'8d\'ec\u29289\'95\'a8\u12395\'82\'c9\u-27230\'8a\'d6\u12375\'82\'b5\u12390 \'82\'c4\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12395\'82\'c9\u23550\'91\'ce\u12377\'82\'b7\u12427\'82\'e9\u32681\'8b\'60\u21209\'96\'b1\u12434\'82\'f0\u30452\'92\'bc\u25509\'90\'da\u12414 \'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-27245\'8a\'d4\u25509\'90\'da\u30340\'93\'49\u12395\'82\'c9\u29983\'90\'b6\u12376\'82\'b6\u12427\'82\'e9\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u12381\'82\'bb\u12428\'82\'ea\u12434\'82\'f0 \u24847\'88\'d3\u22259\'90\'7d\u12377\'82\'b7\u12427\'82\'e9\u26465\'8f\'f0\u-26619\'8d\'80\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (ii) }{\fs21\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u21487\'89\'c2\u-32515\'94\'5c\u12501\'83\'74\u12449\'83\'40\u12452\'83\'43\u12523\'83\'8b\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd \u12381\'82\'bb\u12398\'82\'cc\u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98\u20316\'8d\'ec\u29289\'95\'a8\u12395\'82\'c9\u-27230\'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477 \'83\'5c\u12501\'83\'74\u12488\'83\'67\u12398\'82\'cc\u28961\'96\'b3\u20307\'91\'cc\u-29535\'8d\'e0\u29987\'8e\'59\u27177\'8c\'a0\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u25152\'8f\'8a\u26377\'97\'4c\u27177\'8c\'a0\u12395\'82\'c9\u22522\'8a\'ee \u12389\'82\'c3\u12367\'82\'ad\u27177\'8c\'a0\u21033\'97\'98\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u20813\'96\'c6\u-29524\'90\'d3\u12434\'82\'f0\u31532\'91\'e6\u19977\'8e\'4f\u-32763\'8e\'d2\u12395\'82\'c9\u30452\'92\'bc\u25509 \'90\'da\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-27245\'8a\'d4\u25509\'90\'da\u30340\'93\'49\u12395\'82\'c9\u20184\'95\'74\u19982\'97\'5e\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u12381\'82\'bb \u12428\'82\'ea\u12434\'82\'f0\u24847\'88\'d3\u22259\'90\'7d\u12377\'82\'b7\u12427\'82\'e9\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u24467\'8f\'5d\u12387\'82\'c1\u12390\'82\'c4\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12383 \'82\'bd\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u24847\'88\'d3\u21619\'96\'a1\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u25351\'8e\'77\u23450\'92\'e8\u12477\'83\'5c\u12501 \'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12399\'82\'cd\u12289\'81\'41\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u12289\'81\'41\u25913 \'89\'fc\u22793\'95\'cf\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-26606\'94\'d0\u24067\'95\'7a\u12398\'82\'cc\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u12289\'81\'41\u12363\'82\'a9\u12363\'82\'a9\u12427\'82\'e9 \u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12395\'82\'c9\u32068\'91\'67\u12415\'82\'dd\u-28740\'8d\'9e\u12414\'82\'dc\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12289\'81\'41\u12381 \'82\'bb\u12428\'82\'ea\u12363\'82\'a9\u12425\'82\'e7\u27966\'94\'68\u29983\'90\'b6\u12375\'82\'b5\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12289\'81\'41\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u12381\'82\'bb\u12428\'82\'ea\u12392 \'82\'c6\u20849\'8b\'a4\u12395\'82\'c9\u-26606\'94\'d0\u24067\'95\'7a\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67 \u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12364\'82\'aa}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (a) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\u12540\'81\'5b\u12473\'83\'58\u12467\'83\'52\u12540 \'81\'5b\u12489\'83\'68\u12391\'82\'c5\u20844\'8c\'f6\u-27253\'8a\'4a\u12418\'82\'e0\u12375\'82\'b5\u12367\'82\'ad\u12399\'82\'cd\u-26606\'94\'d0\u24067\'95\'7a\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12289\'81\'41}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 (b) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20108\'93\'f1\u27425\'8e\'9f\u30340\'93\'49\u-31657\'92\'98\u20316\'8d\'ec\u29289\'95\'a8\u12434\'82\'f0\u20316\'8d\'ec\u25104 \'90\'ac\u12377\'82\'b7\u12427\'82\'e9\u12383\'82\'bd\u12417\'82\'df\u12395\'82\'c9\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd}{ \fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (c) }{\fs21\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u28961\'96\'b3\u20767\'8f\'9e\u12391\'82\'c5\u20877\'8d\'c4\u-26606\'94\'d0\u24067\'95\'7a\u12391\'82\'c5\u12365\'82\'ab \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12434\'82\'f0\u21547\'8a\'dc\u12415\'82\'dd\u12414\'82\'dc\u12377\'82\'b7\u12364\'82\'aa\u12289\'81\'41\u12381\'82\'bb \u12428\'82\'ea\u12425\'82\'e7\u12395\'82\'c9\u-27056\'8c\'c0\u23450\'92\'e8\u12373\'82\'b3\u12428\'82\'ea\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u27177\'8c\'a0\u21033 \'97\'98\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u21046\'90\'a7\u-27056\'8c\'c0}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \s20\ql \fi720\li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs14\cf1\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0 4.1 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 Not For Resale }{ \b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u12300\'81\'75}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 Not For Resale}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12301\'81\'76\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12300\'81\'75}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 NFR}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12301\'81\'76\u12392\'82\'c6\u26126\'96\'be\u-30184\'8b\'4c\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12289 \'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u20877\'8d\'c4\u-29527\'94\'cc\u22770\'94\'84\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u20182\'91\'bc\u12398\'82\'cc \u12356\'82\'a2\u12363\'82\'a9\u12394\'82\'c8\u12427\'82\'e9\u26041\'95\'fb\u27861\'96\'40\u12391\'82\'c5\u12418\'82\'e0\u23550\'91\'ce\u20385\'89\'bf\u12434\'82\'f0\u24471\'93\'be\u12390\'82\'c4\u-29838\'8f\'f7\u28193\'93\'6e\u12377\'82\'b7\u12427 \'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.2 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12522 \'83\'8a\u12496\'83\'6f\u12540\'81\'5b\u12473\'83\'58}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12456\'83\'47\u12531\'83\'93\u12472 \'83\'57\u12491\'83\'6a\u12450\'83\'41\u12522\'83\'8a\u12531\'83\'93\u12464\'83\'4f\u12289\'81\'41\u-28666\'8b\'74\u12467\'83\'52\u12531\'83\'93\u12497\'83\'70\u12452\'83\'43\u12523\'83\'8b\u12289\'81\'41\u-28666\'8b\'74\u12450\'83\'41\u12475\'83\'5a \u12531\'83\'93\u12502\'83\'75\u12523\'83\'8b\u12398\'82\'cc\u21046\'90\'a7\u-27056\'8c\'c0}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u12522\'83\'8a\u12496\'83\'6f\u12540\'81\'5b\u12473\'83\'58\u12456\'83\'47\u12531\'83\'93\u12472\'83\'57\u12491\'83\'6a\u12450 \'83\'41\u12522\'83\'8a\u12531\'83\'93\u12464\'83\'4f\u12289\'81\'41\u-28666\'8b\'74\u12467\'83\'52\u12531\'83\'93\u12497\'83\'70\u12452\'83\'43\u12523\'83\'8b\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-28666\'8b\'74\u12450\'83\'41 \u12475\'83\'5a\u12531\'83\'93\u12502\'83\'75\u12523\'83\'8b\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.3 - }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12524\'83\'8c\u12531\'83\'93\u12479\'83\'5e\u12523\'83\'8b}{ \b\i\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u12524\'83\'8c\u12531\'83\'93\u12479\'83\'5e\u12523\'83\'8b\u12289\'81\'41\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u-29512\'91\'dd\u19982 \'97\'5e\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.4 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u21830 \'8f\'a4\u27161\'95\'57}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12399 \'82\'cd\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12398\'82\'cc\u21830\'8f\'a4\u27161\'95\'57\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12469\'83\'54\u12540\'81\'5b\u12499 \'83\'72\u12473\'83\'58}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\u12540\'81\'5b\u12463\'83\'4e\u12395\'82\'c9\u-27230 \'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12395\'82\'c9\u-30159\'8b\'96\u-29954\'91\'f8\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12391\'82\'c5 \u12399\'82\'cd\u12354\'82\'a0\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.5 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12487 \'83\'66\u12540\'81\'5b\u12479\'83\'5e\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u12395\'82\'c9\u-27230\'8a\'d6\u12377\'82\'b7\u12427\'82\'e9\u25215\'8f\'b3\u-29954\'91\'f8}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12399\'82\'cd\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477 \'83\'5c\u12501\'83\'74\u12488\'83\'67\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12381\'82\'bb\u12398\'82\'cc\u-27230\'8a\'d6\u-28637\'98\'41\u20250\'89\'ef\u31038\'8e\'d0\u12364\'82\'aa\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69 \u12395\'82\'c9\u-27230\'8a\'d6\u-28637\'98\'41\u12375\'82\'b5\u12383\'82\'bd\u-30467\'90\'bb\u21697\'95\'69\u12469\'83\'54\u12509\'83\'7c\u12540\'81\'5b\u12488\'83\'67\u12469\'83\'54\u12540\'81\'5b\u12499\'83\'72\u12473\'83\'58\u12398\'82\'cc\u19968 \'88\'ea\u-28440\'95\'94\u12392\'82\'c6\u12375\'82\'b5\u12390\'82\'c4\u-26938\'8f\'57\u12417\'82\'df\u12383\'82\'bd\u25216\'8b\'5a\u-30637\'8f\'70\u24773\'8f\'ee\u22577\'95\'f1\u12434\'82\'f0\u21454\'8e\'fb\u-26938\'8f\'57\u12375\'82\'b5\u12390\'82\'c4 \u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12364\'82\'aa\u12354\'82\'a0\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12395\'82\'c9\u25215\'8f\'b3\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12427 \'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12383\'82\'bd\u12384\'82\'be\u12375\'82\'b5\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501 \'83\'74\u12488\'83\'67\u12399\'82\'cd\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u21521\'8c\'fc\u19978\'8f\'e3\u12398\'82\'cc\u12383\'82\'bd\u12417\'82\'df\u12289\'81\'41\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12362\'82\'a8\u23458\'8b\'71 \u27096\'97\'6c\u12395\'82\'c9\u12459\'83\'4a\u12473\'83\'58\u12479\'83\'5e\u12510\'83\'7d\u12452\'83\'43\u12474\'83\'59\u12373\'82\'b3\u12428\'82\'ea\u12383\'82\'bd\u12469\'83\'54\u12540\'81\'5b\u12499\'83\'72\u12473\'83\'58\u12418\'82\'e0\u12375\'82\'b5 \u12367\'82\'ad\u12399\'82\'cd\u25216\'8b\'5a\u-30637\'8f\'70\u12434\'82\'f0\u25552\'92\'f1\u20379\'8b\'9f\u12377\'82\'b7\u12427\'82\'e9\u12383\'82\'bd\u12417\'82\'df\u12395\'82\'c9\u12398\'82\'cc\u12415\'82\'dd\u12289\'81\'41\loch\af0\hich\af0\dbch\f42  \u12371\'82\'b1\u12398\'82\'cc\u25216\'8b\'5a\u-30637\'8f\'70\u24773\'8f\'ee\u22577\'95\'f1\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377 \'82\'b7\u12290\'81\'42\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u31532\'91\'e6\u19977\'8e\'4f\u-32763\'8e\'d2\u12395\'82\'c9\u12371\'82\'b1\u12398\'82\'cc\u24773\'8f\'ee \u22577\'95\'f1\u12434\'82\'f0\u-27253\'8a\'4a\u31034\'8e\'a6\u12391\'82\'c5\u12365\'82\'ab\u12427\'82\'e9\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12364\'82\'aa\u12289\'81\'41\u12381\'82\'bb\u12398 \'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12434\'82\'f0\u29305\'93\'c1\u23450\'92\'e8\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12392\'82\'c6\u12394\'82\'c8\u12427\'82\'e9\u12424 \'82\'e6\u12358\'82\'a4\u12394\'82\'c8\u26041\'95\'fb\u27861\'96\'40\u12391\'82\'c5\u-27253\'8a\'4a\u31034\'8e\'a6\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12418\'82\'e0\u12398\'82\'cc\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.6 -}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12477 \'83\'5c\u12501\'83\'74\u12488\'83\'67\u12454\'83\'45\u12455\'83\'46\u12450\'83\'41\u12398\'82\'cc\u-29838\'8f\'f7\u28193\'93\'6e}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u26368\'8d\'c5\u21021\'8f\'89\u12398\'82\'cc\u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12399 \'82\'cd\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u19968\'88\'ea\u24230\'93\'78\u12395\'82\'c9\u-27056\'8c\'c0\u12426\'82\'e8 \u30452\'92\'bc\u25509\'90\'da\u12456\'83\'47\u12531\'83\'93\u12489\'83\'68\u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12395\'82\'c9\u24658\'8d\'50\u20037\'8b\'76\u30340\'93\'49\u12395\'82\'c9\u-29838\'8f\'f7\u28193\'93\'6e\u12377 \'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12364\'82\'aa\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12383\'82\'bd\u12384\'82\'be\u12375\'82\'b5\u12381\'82\'bb\u12398\'82\'cc\u22580\'8f\'ea\u21512\'8d\'87\u12289 \'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u19968\'88\'ea\u20999\'90\'d8}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u20840\'91\'53\u12390\'82\'c4\u12398\'82\'cc\u27083\'8d\'5c\u25104\'90\'ac\u-28440\'95\'94\u20998\'95\'aa\u12289\'81\'41\u23186\'94\'7d\u20307\'91\'cc\u12289\'81\'41\u12510\'83\'7d\u12491\'83\'6a\u12517\'83\'85\u12450\'83\'41 \u12523\'83\'8b\u12394\'82\'c8\u12393\'82\'c7\u12398\'82\'cc\u25991\'95\'b6\u26360\'8f\'91\u12289\'81\'41\u12450\'83\'41\u12483\'83\'62\u12503\'83\'76\u12464\'83\'4f\u12524\'83\'8c\u12540\'81\'5b\u12489\'83\'68\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f \u32004\'96\'f1\u26360\'8f\'91\u12289\'81\'41\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12354\'82\'a0\u12390\'82\'c4\u12399\'82\'cd\u12414\'82\'dc\u12427\'82\'e9\u22580\'8f\'ea\u21512\'8d\'87\u12395\'82\'c9\u12399\'82\'cd}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  Certificate of Authenticity }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\u21547\'8a\'dc\u12415\'82\'dd\u12414\'82\'dc\u12377 \'82\'b7}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-29838\'8f\'f7\u28193\'93\'6e\u12377 \'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12434\'82\'f0\u26465\'8f\'f0\u20214\'8c\'8f\u12392\'82\'c6\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12381\'82\'bb\u12398\'82\'cc\u12424\'82\'e6\u12358\'82\'a4\u12394\'82\'c8 \u-29838\'8f\'f7\u28193\'93\'6e\u12399\'82\'cd\u12289\'81\'41\u22996\'88\'cf\u-30185\'91\'f5\u12381\'82\'bb\u12398\'82\'cc\u20182\'91\'bc\u12398\'82\'cc\u-27245\'8a\'d4\u25509\'90\'da\u30340\'93\'49\u12394\'82\'c8\u-29838\'8f\'f7\u28193\'93\'6e\u12395 \'82\'c9\u12424\'82\'e6\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u-29838\'8f\'f7\u21463\'8e\'f3\u20154\'90\'6c\u12399\'82\'cd\u12289\'81\'41 \u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12395\'82\'c9\u21516\'93\'af\u24847\'88\'d3\u12375\'82\'b5\u12289\'81\'41\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12362 \'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u12373\'82\'b3\u12425\'82\'e7\u12395\'82\'c9\u-29838\'8f\'f7\u28193\'93\'6e\u12375\'82\'b5\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6 \u12395\'82\'c9\u21516\'93\'af\u24847\'88\'d3\u12375\'82\'b5\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.7 - }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u27083\'8d\'5c\u25104\'90\'ac\u-28440\'95\'94\u20998\'95\'aa\u12398\'82\'cc\u20998 \'95\'aa\u-26910\'97\'a3}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12399\'82\'cd}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\u12398\'82\'cc\u-30467\'90\'bb\u21697\'95\'69\u12392\'82\'c6\u12375\'82\'b5 \u12390\'82\'c4\u-30159\'8b\'96\u-29954\'91\'f8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12381\'82\'bb\u12398\'82\'cc\u27083\'8d\'5c\u25104\'90\'ac\u-28440\'95\'94\u20998\'95\'aa\u12434 \'82\'f0\u20998\'95\'aa\u-26910\'97\'a3\u12375\'82\'b5\u12390\'82\'c4\u-30457\'95\'a1\u25968\'90\'94\u12398\'82\'cc\u12518\'83\'86\u12540\'81\'5b\u12470\'83\'55\u12540\'81\'5b\u12364\'82\'aa\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9 \u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 4.8 \hich\f0 \endash \loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\u32004\'96\'f1\u12398\'82\'cc\u32066\'8f\'49 \u20102\'97\'b9}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c\u12364\'82\'aa\u26412\'96\'7b \u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc\u26465\'8f\'f0\u-26619\'8d\'80\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u26465\'8f\'f0\u20214\'8c\'8f\u12395\'82\'c9\u-28587\'88\'e1\u21453\'94\'bd\u12375\'82\'b5\u12383\'82\'bd\u22580 \'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399\'82\'cd\u12289\'81\'41\u20182\'91\'bc\u12398\'82\'cc\u27177\'8c\'a0\u21033\'97\'98\u12434\'82\'f0\u23475 \'8a\'51\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12394\'82\'c8\u12367\'82\'ad\u26412\'96\'7b\u22865\'8c\'5f\u32004\'96\'f1\u12434\'82\'f0\u32066\'8f\'49\u20102\'97\'b9\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12364 \'82\'aa\u12391\'82\'c5\u12365\'82\'ab\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u12381\'82\'bb\u12398\'82\'cc\u12424\'82\'e6\u12358\'82\'a4\u12394\'82\'c8\u22580\'8f\'ea\u21512\'8d\'87\u12289\'81\'41\u12362\'82\'a8\u23458\'8b\'71\u27096\'97\'6c \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12398\'82\'cc\u-30457\'95\'a1\u-30467\'90\'bb\u29289\'95\'a8\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u12381\'82\'bb\u12398\'82\'cc\u27083\'8d\'5c\u25104 \'90\'ac\u-28440\'95\'94\u20998\'95\'aa\u12434\'82\'f0\u20840\'91\'53\u12390\'82\'c4\u30772\'94\'6a\u26820\'8a\'fc\u12375\'82\'b5\u12394\'82\'c8\u12369\'82\'af\u12428\'82\'ea\u12400\'82\'ce\u12394\'82\'c8\u12426\'82\'e8\u12414\'82\'dc\u12379\'82\'b9 \u12435\'82\'f1\u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard\plain \s19\ql \li0\ri0\sa60\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs16\lang1033\langfe1041\loch\af45\hich\af45\dbch\af11\cgrid\langnp1033\langfenp1041 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 5.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473 \'83\'58}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12395\'82\'c9\u12399\'82\'cd\u20986\'8f\'6f \u-31881\'89\'d7\u21069\'91\'4f\u12398\'82\'cc\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u20197\'88\'c8\u19979\'89\'ba\u12300\'81\'75\u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12301\'81\'76\u12392\'82\'c6\u12356\'82\'a2\u12356\'82\'a2 \u12414\'82\'dc\u12377\'82\'b7}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\u21547\'8a\'dc\u12416\'82\'de\u22580\'8f\'ea \u21512\'8d\'87\u12364\'82\'aa\u12354\'82\'a0\u12426\'82\'e8\u12289\'81\'41\u12371\'82\'b1\u12428\'82\'ea\u12399\'82\'cd\u27231\'8b\'40\u-32515\'94\'5c\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u20114\'8c\'dd\u25563\'8a\'b7\u24615\'90\'ab\u12398 \'82\'cc\u28857\'93\'5f\u12395\'82\'c9\u12362\'82\'a8\u12356\'82\'a2\u12390\'82\'c4\u19968\'88\'ea\u-32212\'94\'ca\u21521\'8c\'fc\u12369\'82\'af\u12395\'82\'c9\u20986\'8f\'6f\u-31881\'89\'d7\u12373\'82\'b3\u12428\'82\'ea\u12427\'82\'e9\u12371\'82\'b1 \u12392\'82\'c6\u12434\'82\'f0\u20104\'97\'5c\u23450\'92\'e8\u12377\'82\'b7\u12427\'82\'e9\u26368\'8d\'c5\u32066\'8f\'49\u30340\'93\'49\u12394\'82\'c8\u23436\'8a\'ae\u25104\'90\'ac\u21697\'95\'69\u12391\'82\'c5\u12399\'82\'cd\u12354\'82\'a0\u12426\'82\'e8 \u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12364\'82\'aa\u27491\'90\'b3\u30906\'8a\'6d \u12395\'82\'c9\u21205\'93\'ae\u20316\'8d\'ec\u12377\'82\'b7\u12427\'82\'e9\u12371\'82\'b1\u12392\'82\'c6\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u-30467\'90\'bb\u21697\'95\'69\u29256\'94\'c5\u12398\'82\'cc\u20986\'8f\'6f\u-31881\'89\'d7\u21069 \'91\'4f\u12395\'82\'c9\u23455\'8e\'c0\u-29462\'8e\'bf\u30340\'93\'49\u12395\'82\'c9\u22793\'95\'cf\u26356\'8d\'58\u12373\'82\'b3\u12428\'82\'ea\u12394\'82\'c8\u12356\'82\'a2\u12371\'82\'b1\u12392\'82\'c6\u12399\'82\'cd\u12289\'81\'41\u20445\'95\'db \u-30148\'8f\'d8\u12373\'82\'b3\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42\u12510\'83\'7d\u12452\'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12399 \'82\'cd\u12289\'81\'41\u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58\u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12414\'82\'dc\u12383\'82\'bd\u12399\'82\'cd\u12381\'82\'bb\u12398\'82\'cc\u12377 \'82\'b7\u12409\'82\'d7\u12390\'82\'c4\u12398\'82\'cc\u24460\'8c\'e3\u32153\'8c\'70\u12496\'83\'6f\u12540\'81\'5b\u12472\'83\'57\u12519\'83\'87\u12531\'83\'93\u12434\'82\'f0\u-30467\'90\'bb\u21697\'95\'69\u29256\'94\'c5\u12395\'82\'c9\u12450\'83\'41 \u12483\'83\'62\u12503\'83\'76\u12487\'83\'66\u12540\'81\'5b\u12488\'83\'67\u12377\'82\'b7\u12427\'82\'e9\u32681\'8b\'60\u21209\'96\'b1\u12434\'82\'f0\u-29536\'95\'89\u12356\'82\'a2\u12414\'82\'dc\u12379\'82\'b9\u12435\'82\'f1\u12290\'81\'42 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u-30159\'8b\'96\u-29954\'91\'f8\u12399\'82\'cd\u12289\'81\'41\u12510\'83\'7d\u12452 \'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12395\'82\'c9\u12424\'82\'e6\u12427\'82\'e9\u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12398\'82\'cc\u-30467\'90\'bb\u21697\'95\'69\u29256 \'94\'c5\u12398\'82\'cc\u20986\'8f\'6f\u-31881\'89\'d7\u12392\'82\'c6\u21516\'93\'af\u26178\'8e\'9e\u12395\'82\'c9\u28040\'8f\'c1\u28357\'96\'c5\u12375\'82\'b5\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42\u27880\'92\'8d\u24847\'88\'d3}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 : }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473 \'83\'58}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12395\'82\'c9\u21029\'95\'ca\u-28652 \'93\'72\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u-30159\'8b\'96\u-29954\'91\'f8\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12364\'82\'aa\u21547\'8a\'dc\u12414\'82\'dc\u12428\'82\'ea\u12390\'82\'c4\u12356\'82\'a2\u12427\'82\'e9\u22580\'8f\'ea \u21512\'8d\'87\u12399\'82\'cd\u12289\'81\'41\u23550\'91\'ce\u24540\'89\'9e\u12377\'82\'b7\u12427\'82\'e9\u26412\'96\'7b\u12503\'83\'76\u12524\'83\'8c\u12522\'83\'8a\u12522\'83\'8a\u12540\'81\'5b\u12473\'83\'58}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\u12540\'81\'5b\u12489\'83\'68\u12398\'82\'cc\u20351\'8e\'67\u29992\'97\'70\u12395 \'82\'c9\u12388\'82\'c2\u12356\'82\'a2\u12390\'82\'c4\u12399\'82\'cd\u12289\'81\'41\u12363\'82\'a9\u12363\'82\'a9\u12427\'82\'e9\u20351\'8e\'67\u29992\'97\'70\u-30159\'8b\'96\u-29954\'91\'f8\u22865\'8c\'5f\u32004\'96\'f1\u26360\'8f\'91\u12398\'82\'cc \u26465\'8f\'f0\u-26619\'8d\'80\u12362\'82\'a8\u12424\'82\'e6\u12403\'82\'d1\u26465\'8f\'f0\u20214\'8c\'8f\u12364\'82\'aa\u-28567\'93\'4b\u29992\'97\'70\u12373\'82\'b3\u12428\'82\'ea\u12414\'82\'dc\u12377\'82\'b7\u12290\'81\'42}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 6.}{\fs21\cf6\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u12450\'83\'41\u12483\'83\'62\u12503\'83\'76\u12464\'83\'4f\u12524\'83\'8c\u12540\'81\'5b\u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12364\'82\'aa\u12450\'83\'41\u12483\'83\'62\u12503\'83\'76\u12464\'83\'4f\u12524\'83\'8c\u12540\'81\'5b\u12489\'83\'68\u12391\'82\'c5\u12354\'82\'a0\u12427\'82\'e9\u22580\'8f\'ea \u21512\'8d\'87\u12289\'81\'41\u26412\'96\'7b\u-30467\'90\'bb\u21697\'95\'69\u12434\'82\'f0\u20351\'8e\'67\u29992\'97\'70\u12377\'82\'b7\u12427\'82\'e9\u12383\'82\'bd\u12417\'82\'df\u12395\'82\'c9\u12399\'82\'cd\u12289\'81\'41\u12510\'83\'7d\u12452 \'83\'43\u12463\'83\'4e\u12525\'83\'8d\u12477\'83\'5c\u12501\'83\'74\u12488\'83\'67\u12395\'82\'c9\u12424\'82\'e6\u12387\'82\'c1\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12483 \'83\'62\loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524\'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42  \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42 \u-29599\'8f\'db\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u25351\'8e\'77 \loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12427 \'82\'e9\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u27491\'90\'b3\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42  \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12475\'83\'5a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12362 \'82\'a8\loch\af0\hich\af0\dbch\f42 \u25345\'8e\'9d\loch\af0\hich\af0\dbch\f42 \u12385\'82\'bf\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12369\'82\'af\loch\af0\hich\af0\dbch\f42  \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12400\'82\'ce\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9 \loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12464 \'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524\'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u24460\'8c\'e3\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42  \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524 \'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42 \u-29599\'8f\'db\loch\af0\hich\af0\dbch\f42  \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0 \loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392 \'82\'c6\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42  \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd \loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524\'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540 \'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42  \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u24467\'8f\'5d\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42 \u12390 \'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42  \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697 \'95\'69\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42  \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\loch\af0\hich\af0\dbch\f42 \u12452 \'83\'43\loch\af0\hich\af0\dbch\f42 \u12475\'83\'5a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42  \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42 \u12455\'83\'46 \loch\af0\hich\af0\dbch\f42 \u12450\'83\'41}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12525 \'83\'8d\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\loch\af0\hich\af0\dbch\f42 \u12512\'83\'80}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12497\'83\'70\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12465\'83\'50\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42  \u12472\'83\'57\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u27083\'8d\'5c\loch\af0\hich\af0\dbch\f42 \u25104\'90\'ac\loch\af0\hich\af0\dbch\f42 \u-28440\'95\'94\loch\af0\hich\af0\dbch\f42 \u20998\'95\'aa \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524 \'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42  \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-30467 \'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12497\'83\'70\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12465\'83\'50\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42  \u12472\'83\'57\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u-28440\'95\'94\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5 \loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12362 \'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u-29838\'8f\'f7\loch\af0\hich\af0\dbch\f42 \u28193\'93\'6e\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42  \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u27083\'8d\'5c \loch\af0\hich\af0\dbch\f42 \u25104\'90\'ac\loch\af0\hich\af0\dbch\f42 \u-28440\'95\'94\loch\af0\hich\af0\dbch\f42 \u20998\'95\'aa\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u20998\'95\'aa\loch\af0\hich\af0\dbch\f42 \u-26910 \'97\'a3\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u-30457\'95\'a1\loch\af0\hich\af0\dbch\f42 \u25968\'90\'94\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u12456\'83\'47\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12470\'83\'55\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u20351 \'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42  \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1 \loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 7.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12480\'83\'5f\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42  \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12524\'83\'8c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0 \loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12523 \'83\'8b\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42  \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412 \'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26087\'8b\'8c\loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\loch\af0\hich\af0\dbch\f42  \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12472\'83\'57\loch\af0\hich\af0\dbch\f42 \u12519\'83\'87\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12467\'83\'52 \loch\af0\hich\af0\dbch\f42 \u12500\'83\'73\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  1 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-28440 \'95\'94\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42  \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12523\'83\'8b\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70 \loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12391 \'82\'c5\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42  \u12384\'82\'be\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87 \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u26399 \'8a\'fa\loch\af0\hich\af0\dbch\f42 \u-27245\'8a\'d4\loch\af0\hich\af0\dbch\f42 \u20869\'93\'e0\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42  \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6 \loch\af0\hich\af0\dbch\f42 \u12358\'82\'a4\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u26087\'8b\'8c\loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12472 \'83\'57\loch\af0\hich\af0\dbch\f42 \u12519\'83\'87\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u23436\'8a\'ae\loch\af0\hich\af0\dbch\f42 \u20840\'91\'53\loch\af0\hich\af0\dbch\f42  \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u21066\'8d\'ed\loch\af0\hich\af0\dbch\f42 \u-27036\'8f\'9c\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b \loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473 \'83\'58\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12523\'83\'8b\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u20214\'8c\'8f\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6 \loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458 \'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42  \u12358\'82\'a4\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u26087\'8b\'8c\loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12472\'83\'57 \loch\af0\hich\af0\dbch\f42 \u12519\'83\'87\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12395 \'82\'c9\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42  \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u-28567\'93\'4b\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u26087\'8b\'8c\loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12472\'83\'57\loch\af0\hich\af0\dbch\f42 \u12519\'83\'87\loch\af0\hich\af0\dbch\f42 \u12531 \'83\'93\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u21033\'97\'98\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12540 \'81\'5b\loch\af0\hich\af0\dbch\f42 \u12523\'83\'8b\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42  \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u28040\'8f\'c1\loch\af0\hich\af0\dbch\f42 \u28357\'96\'c5\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290 \'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }\pard \s19\ql \li0\ri0\sb60\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 8.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42  \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u19979\'89\'ba\loch\af0\hich\af0\dbch\f42 \u-30184\'8b\'4c\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12302\'81\'77\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u-29462 \'8e\'bf\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12303\'81\'78\loch\af0\hich\af0\dbch\f42  \u-248\'81\'69\loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\loch\af0\hich\af0\dbch\f42 \u19979\'89\'ba\loch\af0\hich\af0\dbch\f42 \u12300\'81\'75\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db \loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12301\'81\'76\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12356 \'82\'a2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u-247\'81\'6a\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42  \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-28567\'93\'4b \loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u21807\'97\'42\loch\af0\hich\af0\dbch\f42 \u19968 \'88\'ea\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26126\'96\'be\loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42  \u-29462\'8e\'bf\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5 \loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12461\'83\'4c\loch\af0\hich\af0\dbch\f42 \u12517 \'83\'85\loch\af0\hich\af0\dbch\f42 \u12513\'83\'81\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42  \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12497\'83\'70\loch\af0\hich\af0\dbch\f42 \u12483\'83\'62\loch\af0\hich\af0\dbch\f42 \u12465\'83\'50\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12472\'83\'57 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-30184\'8b\'4c\loch\af0\hich\af0\dbch\f42 \u-28919\'8d\'da\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427 \'82\'e9\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26126\'96\'be\loch\af0\hich\af0\dbch\f42  \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-248\'81\'69\loch\af0\hich\af0\dbch\f42 \u-30094\'8a\'59 \loch\af0\hich\af0\dbch\f42 \u24403\'93\'96\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u-247 \'81\'6a\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u20195\'91\'e3\loch\af0\hich\af0\dbch\f42 \u26367\'91\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b \loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390 \'82\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42  \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea \loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148 \'8f\'d8\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u20999\'90\'d8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42  \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b \loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-27036 \'8f\'9c\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42  \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u-30159\'8b\'96\loch\af0\hich\af0\dbch\f42 \u23481\'97\'65\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u26368\'8d\'c5\loch\af0\hich\af0\dbch\f42 \u22823\'91\'e5\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12362 \'82\'a8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42  \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8 \loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u32102 \'8b\'8b\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42  \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12509\'83\'7c \loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12499\'83\'72\loch\af0\hich\af0\dbch\f42 \u12473 \'83\'58\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u29694\'8c\'bb\loch\af0\hich\af0\dbch\f42 \u29366\'8f\'f3\loch\af0\hich\af0\dbch\f42 \u26377\'97\'4c\loch\af0\hich\af0\dbch\f42 \u23039\'8e\'70\loch\af0\hich\af0\dbch\f42  \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u29781\'e0\'ea\loch\af0\hich\af0\dbch\f42 \u30133\'e1\'72\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21839\'96\'e2 \loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u20214\'8c\'8f\loch\af0\hich\af0\dbch\f42 \u12391 \'82\'c5\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42  \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd \loch\af0\hich\af0\dbch\f42 \u12417\'82\'df\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12509\'83\'7c\loch\af0\hich\af0\dbch\f42  \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b \loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-28646\'92\'ca\loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42  \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12499\'83\'72\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u24773\'8f\'ee\loch\af0\hich\af0\dbch\f42 \u22577\'95\'f1 \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42 \u12455 \'83\'46\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42  \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u-28637\'98\'41\loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12486\'83\'65\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93 \loch\af0\hich\af0\dbch\f42 \u12484\'83\'63\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12375 \'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42  \u-32515\'94\'5c\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697 \'95\'69\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42  \u29983\'90\'b6\loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db \loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450 \'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42  \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-248\'81\'69\loch\af0\hich\af0\dbch\f42 \u21830\'8f\'a4\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69 \loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u29305\'93\'c1\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u30446 \'96\'da\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u-28567\'93\'4b\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u20449\'90\'4d\loch\af0\hich\af0\dbch\f42 \u-26564\'97\'8a \loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u21487\'89\'c2\loch\af0\hich\af0\dbch\f42 \u29992 \'97\'70\loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u24540\'89\'9e\loch\af0\hich\af0\dbch\f42 \u31572\'93\'9a\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u30906\'8a\'6d\loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70 \loch\af0\hich\af0\dbch\f42 \u32080\'8c\'8b\loch\af0\hich\af0\dbch\f42 \u26524\'89\'ca\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-32649\'90\'45\loch\af0\hich\af0\dbch\f42 \u20154\'90\'6c\loch\af0\hich\af0\dbch\f42 \u30340 \'93\'49\loch\af0\hich\af0\dbch\f42 \u21162\'93\'77\loch\af0\hich\af0\dbch\f42 \u21147\'97\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42 \u12451\'83\'42\loch\af0\hich\af0\dbch\f42  \u12523\'83\'8b\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u23384\'91\'b6\loch\af0\hich\af0\dbch\f42 \u22312\'8d\'dd \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u-28594\'89\'df\loch\af0\hich\af0\dbch\f42 \u22833 \'8e\'b8\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u23384\'91\'b6\loch\af0\hich\af0\dbch\f42 \u22312\'8d\'dd\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42  \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-24871\'96\'d9\loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u32681\'8b\'60\loch\af0\hich\af0\dbch\f42 \u21209 \'96\'b1\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u20214\'8c\'8f\loch\af0\hich\af0\dbch\f42  \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa \loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u23450 \'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42  \u-247\'81\'6a\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26126\'96\'be\loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u-24871\'96\'d9\loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-32027\'8e\'e1\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367 \'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21839\'96\'e2\loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12378\'82\'b8\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u20999 \'90\'d8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42  \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9 \loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u21407\'8c\'b4\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u24179\'95\'bd\loch\af0\hich\af0\dbch\f42 \u31311\'89\'b8\loch\af0\hich\af0\dbch\f42 \u20139\'8b\'9d\loch\af0\hich\af0\dbch\f42 \u26377\'97\'4c\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42  \u24179\'95\'bd\loch\af0\hich\af0\dbch\f42 \u31311\'89\'b8\loch\af0\hich\af0\dbch\f42 \u21344\'90\'e8\loch\af0\hich\af0\dbch\f42 \u26377\'97\'4c\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-30616\'95\'5c \loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u-32268\'92\'76\loch\af0\hich\af0\dbch\f42 \u12414 \'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u21033\'97\'98\loch\af0\hich\af0\dbch\f42 \u20405\'90\'4e\loch\af0\hich\af0\dbch\f42  \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u23384\'91\'b6\loch\af0\hich\af0\dbch\f42 \u22312\'8d\'dd\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9 \loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148 \'8f\'d8\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u20214\'8c\'8f\loch\af0\hich\af0\dbch\f42  \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u21516\'93\'af \loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 9.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42  \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u20813\'96\'c6\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3}{ \b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u19978 \'8f\'e3\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-30005\'90\'bf\loch\af0\hich\af0\dbch\f42 \u27714\'8b\'81\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21407\'8c\'b4\loch\af0\hich\af0\dbch\f42  \u22240\'88\'f6\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u31278\'8e\'ed\loch\af0\hich\af0\dbch\f42 \u-26530\'97\'de\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21839\'96\'e2 \loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12378\'82\'b8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463 \'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42  \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u32102\'8b\'8b \loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u19978 \'8f\'e3\loch\af0\hich\af0\dbch\f42 \u-30159\'8b\'96\loch\af0\hich\af0\dbch\f42 \u23481\'97\'65\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u26368\'8d\'c5\loch\af0\hich\af0\dbch\f42 \u22823\'91\'e5\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2 \loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42  \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u-32515\'94\'5c\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12509\'83\'7c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42  \u-28646\'92\'ca\loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12499\'83\'72\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u24773\'8f\'ee\loch\af0\hich\af0\dbch\f42 \u22577\'95\'f1\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42  \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42 \u12455\'83\'46\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8 \loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u-28637\'98\'41\loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\loch\af0\hich\af0\dbch\f42 \u12531 \'83\'93\loch\af0\hich\af0\dbch\f42 \u12486\'83\'65\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12484\'83\'63\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42  \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1 \loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u-32515\'94\'5c\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u29983\'90\'b6\loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6 \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381 \'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42  \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u29983\'90\'b6 \loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u29305\'93\'c1\loch\af0\hich\af0\dbch\f42 \u21029\'95\'ca\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475 \'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u20184\'95\'74\loch\af0\hich\af0\dbch\f42 \u-26993\'90\'8f\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42  \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u25074\'92\'a6\loch\af0\hich\af0\dbch\f42 \u32624\'94\'b1\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9 \loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-27245\'8a\'d4\loch\af0\hich\af0\dbch\f42 \u25509\'90\'da\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475 \'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u27966\'94\'68\loch\af0\hich\af0\dbch\f42 \u29983\'90\'b6\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42  \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u20999\'90\'d8\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42  \u-28616\'88\'ed\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u21033\'97\'98\loch\af0\hich\af0\dbch\f42 \u30410\'89\'76\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u27231\'8b\'40 \loch\af0\hich\af0\dbch\f42 \u23494\'96\'a7\loch\af0\hich\af0\dbch\f42 \u24773\'8f\'ee\loch\af0\hich\af0\dbch\f42 \u22577\'95\'f1\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367 \'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u24773\'8f\'ee\loch\af0\hich\af0\dbch\f42 \u22577\'95\'f1\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21930\'91\'72\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u20107\'8e\'96\loch\af0\hich\af0\dbch\f42 \u26989\'8b\'c6\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20013\'92\'86\loch\af0\hich\af0\dbch\f42 \u26029\'92\'66\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u20154\'90\'6c\loch\af0\hich\af0\dbch\f42 \u-29013\'90\'67\loch\af0\hich\af0\dbch\f42 \u20663\'8f\'9d\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42  \u12503\'83\'76\loch\af0\hich\af0\dbch\f42 \u12521\'83\'89\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12496\'83\'6f\loch\af0\hich\af0\dbch\f42 \u12471\'83\'56\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21930\'91\'72\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-30048\'90\'bd\loch\af0\hich\af0\dbch\f42 \u23455 \'8e\'c0\loch\af0\hich\af0\dbch\f42 \u32681\'8b\'60\loch\af0\hich\af0\dbch\f42 \u21209\'96\'b1\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42  \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u27880\'92\'8d\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3 \loch\af0\hich\af0\dbch\f42 \u32681\'8b\'60\loch\af0\hich\af0\dbch\f42 \u21209\'96\'b1\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12417\'82\'df\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u32681\'8b\'60\loch\af0\hich\af0\dbch\f42 \u21209\'96\'b1\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u23653\'97\'9a\loch\af0\hich\af0\dbch\f42  \u-30644\'8d\'73\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-28594\'89\'df\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc \loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u-28207\'8b\'e0\loch\af0\hich\af0\dbch\f42 \u-27987\'91\'4b\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42  \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa \loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u23450 \'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375 \'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42  \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc \loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u32102 \'8b\'8b\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-31683\'97\'8e\loch\af0\hich\af0\dbch\f42 \u12385\'82\'bf\loch\af0\hich\af0\dbch\f42 \u24230\'93\'78\loch\af0\hich\af0\dbch\f42  \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u19981\'95\'73\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u-30644\'8d\'73\loch\af0\hich\af0\dbch\f42 \u28858\'88\'d7\loch\af0\hich\af0\dbch\f42 \u-248\'81\'69 \loch\af0\hich\af0\dbch\f42 \u-28594\'89\'df\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12416\'82\'de\loch\af0\hich\af0\dbch\f42 \u-247 \'81\'6a\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u28961\'96\'b3\loch\af0\hich\af0\dbch\f42 \u-28594\'89\'df\loch\af0\hich\af0\dbch\f42 \u22833\'8e\'b8\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42  \u20219\'94\'43\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u-28587\'88\'e1\loch\af0\hich\af0\dbch\f42 \u21453\'94\'bd \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-28587 \'88\'e1\loch\af0\hich\af0\dbch\f42 \u21453\'94\'bd\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42  \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea \loch\af0\hich\af0\dbch\f42 \u20999\'90\'d8\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u20219\'94\'43\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-29536\'95\'89\loch\af0\hich\af0\dbch\f42 \u12356 \'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42  \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12360\'82\'a6\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e \loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u32102\'8b\'8b\loch\af0\hich\af0\dbch\f42  \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12358\'82\'a4 \loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21487\'89\'c2\loch\af0\hich\af0\dbch\f42 \u-32515 \'94\'5c\loch\af0\hich\af0\dbch\f42 \u24615\'90\'ab\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42  \u30693\'92\'6d\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2 \loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u21516 \'93\'af\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\caps\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 10.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u20219\'94\'43\loch\af0\hich\af0\dbch\f42  \u21450\'8b\'79\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u25937\'8b\'7e\loch\af0\hich\af0\dbch\f42 \u28168\'8d\'cf\loch\af0\hich\af0\dbch\f42 \u25163\'8e\'e8\loch\af0\hich\af0\dbch\f42 \u27573\'92\'69 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u21046\'90\'a7\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u30001\'97\'52\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4 \loch\af0\hich\af0\dbch\f42 \u29983\'90\'b6\loch\af0\hich\af0\dbch\f42 \u12376\'82\'b6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u-30184\'8b\'4c\loch\af0\hich\af0\dbch\f42 \u12362 \'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42  \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8 \loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u30452\'92\'bc\loch\af0\hich\af0\dbch\f42 \u25509\'90\'da\loch\af0\hich\af0\dbch\f42 \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475 \'8a\'51\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u-28646\'92\'ca\loch\af0\hich\af0\dbch\f42 \u24120\'8f\'ed\loch\af0\hich\af0\dbch\f42  \u25613\'91\'b9\loch\af0\hich\af0\dbch\f42 \u23475\'8a\'51\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc \loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12395 \'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42  \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9 \loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12378\'82\'b8\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42  \u22522\'8a\'ee\loch\af0\hich\af0\dbch\f42 \u12389\'82\'c3\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e \loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424 \'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u32102\'8b\'8b\loch\af0\hich\af0\dbch\f42  \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u20219\'94\'43}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42  \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42 \u-28587\'88\'e1\loch\af0\hich\af0\dbch\f42 \u21453\'94\'bd\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5 \loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477 \'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42  \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u-28552\'91\'49\loch\af0\hich\af0\dbch\f42 \u25246\'91\'f0\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd \loch\af0\hich\af0\dbch\f42 \u20462\'8f\'43\loch\af0\hich\af0\dbch\f42 \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u20132 \'8c\'f0\loch\af0\hich\af0\dbch\f42 \u25563\'8a\'b7\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42  \u24540\'89\'9e\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-27036\'8f\'9c\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412 \'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42  \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u23455\'8e\'c0 \loch\af0\hich\af0\dbch\f42 \u-26981\'8d\'db\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u25903\'8e\'78\loch\af0\hich\af0\dbch\f42 \u25173\'95\'a5\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u-28207\'8b\'e0\loch\af0\hich\af0\dbch\f42 \u-26547\'8a\'7a\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  700 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u20870\'89\'7e\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12356 \'82\'a2\loch\af0\hich\af0\dbch\f42 \u12378\'82\'b8\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u-25896\'8d\'82\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42  \u-26547\'8a\'7a\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5 \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12360 \'82\'a6\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u25937\'8b\'7e\loch\af0\hich\af0\dbch\f42  \u28168\'8d\'cf\loch\af0\hich\af0\dbch\f42 \u25163\'8e\'e8\loch\af0\hich\af0\dbch\f42 \u27573\'92\'69\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc \loch\af0\hich\af0\dbch\f42 \u23455\'8e\'c0\loch\af0\hich\af0\dbch\f42 \u-29462\'8e\'bf\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u30446\'96\'da\loch\af0\hich\af0\dbch\f42 \u30340\'93\'49\loch\af0\hich\af0\dbch\f42 \u12434 \'82\'f0\loch\af0\hich\af0\dbch\f42 \u-28588\'92\'42\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42  \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u-30184\'8b\'4c \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u20219\'94\'43\loch\af0\hich\af0\dbch\f42 \u21046\'90\'a7\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-30148\'8f\'d8\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u23450\'92\'e8\loch\af0\hich\af0\dbch\f42  \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u20813\'96\'c6\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0 \loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865 \'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  8 }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 9 }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547 \'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12416\'82\'de}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42  \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u19978\'8f\'e3\loch\af0\hich\af0\dbch\f42 \u26368\'8d\'c5\loch\af0\hich\af0\dbch\f42 \u22823\'91\'e5\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0 \loch\af0\hich\af0\dbch\f42 \u-30067\'94\'46\loch\af0\hich\af0\dbch\f42 \u12417\'82\'df\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u-27056 \'8c\'c0\loch\af0\hich\af0\dbch\f42 \u24230\'93\'78\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u-28567\'93\'4b\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42  \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 11.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42  \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12408\'82\'d6 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42  \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67 \loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763 \'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42  \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1 \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12365\'82\'ab\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377 \'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d \loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488 \'83\'67\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u31649\'8a\'c7\loch\af0\hich\af0\dbch\f42 \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42  \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501 \'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42  \u12422\'82\'e4\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc \loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12467\'83\'52\loch\af0\hich\af0\dbch\f42 \u12531 \'83\'93\loch\af0\hich\af0\dbch\f42 \u12486\'83\'65\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12484\'83\'63\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42  \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54 \loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12428 \'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u20869\'93\'e0\loch\af0\hich\af0\dbch\f42 \u23481\'97\'65\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd \loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u22793\'95\'cf\loch\af0\hich\af0\dbch\f42 \u26356 \'8d\'58\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26356\'8d\'58\loch\af0\hich\af0\dbch\f42  \u26032\'90\'56\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3 \loch\af0\hich\af0\dbch\f42 \u20219\'94\'43\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-29536\'95\'89\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379 \'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42  \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977 \'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42  \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u21463\'8e\'f3\loch\af0\hich\af0\dbch\f42 \u20449\'90\'4d\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea \loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12454\'83\'45\loch\af0\hich\af0\dbch\f42 \u12455\'83\'46\loch\af0\hich\af0\dbch\f42 \u12502\'83\'75}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12461\'83\'4c\loch\af0\hich\af0\dbch\f42 \u12515\'83\'83\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12486\'83\'65\loch\af0\hich\af0\dbch\f42  \u12451\'83\'42\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12464\'83\'4f\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd \loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12363 \'82\'a9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u24418\'8c\'60\loch\af0\hich\af0\dbch\f42 \u24335\'8e\'ae\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u-28671\'91\'97\loch\af0\hich\af0\dbch\f42 \u20449\'90\'4d\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4 \loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u-29524\'90\'d3\loch\af0\hich\af0\dbch\f42 \u20219\'94\'43\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-29536\'95\'89\loch\af0\hich\af0\dbch\f42 \u12356 \'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42  \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67 \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u20415\'95\'d6\loch\af0\hich\af0\dbch\f42 \u23452\'8b\'58\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u19968\'88\'ea\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42  \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6 \loch\af0\hich\af0\dbch\f42 \u19977\'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488 \'83\'67\loch\af0\hich\af0\dbch\f42 \u12408\'82\'d6\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42  \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2 \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42 \u12390 \'82\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12363\'82\'a9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc \loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42  \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74 \loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u31532\'91\'e6\loch\af0\hich\af0\dbch\f42 \u19977 \'8e\'4f\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42  \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u25512\'90\'84\loch\af0\hich\af0\dbch\f42 \u22888\'8f\'a7\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3\loch\af0\hich\af0\dbch\f42 \u21619\'96\'a1 \loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12399 \'82\'cd\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42  \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    \par }\pard \s19\ql \li0\ri0\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 12.  }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-28872\'97\'41\loch\af0\hich\af0\dbch\f42 \u20986\'8f\'6f\loch\af0\hich\af0\dbch\f42  \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u21046\'90\'a7}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8 \loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467 \'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12513\'83\'81\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42  \u12459\'83\'4a\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u-30650\'8f\'4f\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb \loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u21270\'89\'bb\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12418 \'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42  \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12513\'83\'81 \loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12459\'83\'4a\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u-30650\'8f\'4f\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u-28872\'97\'41\loch\af0\hich\af0\dbch\f42 \u20986\'8f\'6f\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42  \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u-30321\'8b\'4b\loch\af0\hich\af0\dbch\f42 \u21046\'90\'a7\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42 \u-29599\'8f\'db \loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12434 \'82\'f0\loch\af0\hich\af0\dbch\f42 \u-30067\'94\'46\loch\af0\hich\af0\dbch\f42 \u12417\'82\'df\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8 \loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467 \'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-28567\'93\'4b\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42  \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12409\'82\'d7\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc \loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u20869\'93\'e0\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403 \'82\'d1\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u-26981\'8d\'db\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u-248\'81\'69\loch\af0\hich\af0\dbch\f42 \u12450\'83\'41\loch\af0\hich\af0\dbch\f42  \u12513\'83\'81\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12459\'83\'4a\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u-30650\'8f\'4f\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91 \loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-28872\'97\'41\loch\af0\hich\af0\dbch\f42 \u20986\'8f\'6f\loch\af0\hich\af0\dbch\f42 \u31649\'8a\'c7\loch\af0\hich\af0\dbch\f42 \u29702\'97\'9d\loch\af0\hich\af0\dbch\f42 \u-30321 \'8b\'4b\loch\af0\hich\af0\dbch\f42 \u21063\'91\'a5\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42  \u12450\'83\'41\loch\af0\hich\af0\dbch\f42 \u12513\'83\'81\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12459\'83\'4a\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u-30650\'8f\'4f \loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26085\'93\'fa\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u12362 \'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42  \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u25919\'90\'ad\loch\af0\hich\af0\dbch\f42 \u24220\'95\'7b\loch\af0\hich\af0\dbch\f42 \u27231\'8b\'40\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9 \loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12456\'83\'47\loch\af0\hich\af0\dbch\f42 \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12518 \'83\'86\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12470\'83\'55\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12456\'83\'47\loch\af0\hich\af0\dbch\f42  \u12531\'83\'93\loch\af0\hich\af0\dbch\f42 \u12489\'83\'68\loch\af0\hich\af0\dbch\f42 \u12518\'83\'86\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12470\'83\'55\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u20351\'8e\'67\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12289 \'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u-28872\'97\'41\loch\af0\hich\af0\dbch\f42 \u20986\'8f\'6f\loch\af0\hich\af0\dbch\f42  \u23550\'91\'ce\loch\af0\hich\af0\dbch\f42 \u-29599\'8f\'db\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7 \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u21046\'90\'a7\loch\af0\hich\af0\dbch\f42 \u-27056\'8c\'c0\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12415 \'82\'dd\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u-247\'81\'6a\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u-28555\'8f\'85\loch\af0\hich\af0\dbch\f42  \u23432\'8e\'e7\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12371\'82\'b1\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9 \loch\af0\hich\af0\dbch\f42 \u21516\'93\'af\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12418 \'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42  \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u-30093\'8f\'da\loch\af0\hich\af0\dbch\f42 \u32048\'8d\'d7\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12388\'82\'c2\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2 \loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\ul\cf2\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  http://www.microsoft.com/exporting/}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u12372\'82\'b2 \loch\af0\hich\af0\dbch\f42 \u21442\'8e\'51\loch\af0\hich\af0\dbch\f42 \u29031\'8f\'c6\loch\af0\hich\af0\dbch\f42 \u12367\'82\'ad\loch\af0\hich\af0\dbch\f42 \u12384\'82\'be\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12356 \'82\'a2\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\cgrid0\insrsid1994203  \par }\pard \s19\ql \li0\ri0\sb60\sl220\slmult0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 13.}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u28310 \'8f\'80\loch\af0\hich\af0\dbch\f42 \u25312\'8b\'92\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0    }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26085 \'93\'fa\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22269\'8d\'91\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u28310\'8f\'80\loch\af0\hich\af0\dbch\f42  \u25312\'8b\'92\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6 \loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 14.}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0   }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u23436 \'8a\'ae\loch\af0\hich\af0\dbch\f42 \u20840\'91\'53\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3}{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \hich\af0\dbch\af42\loch\f0   }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697 \'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u-28675\'92\'c7 \loch\af0\hich\af0\dbch\f42 \u21152\'89\'c1\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u20462\'8f\'43\loch\af0\hich\af0\dbch\f42 \u27491 \'90\'b3\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u21547\'8a\'dc\loch\af0\hich\af0\dbch\f42 \u12415\'82\'dd\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412 \'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42  \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12509\'83\'7c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12499\'83\'72\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58}{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0  (}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u-30094\'8a\'59\loch\af0\hich\af0\dbch\f42 \u24403\'93\'96\loch\af0\hich\af0\dbch\f42 \u12377 \'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42 \u21512\'8d\'87}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 ) }{ \fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42  \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u23458\'8b\'71\loch\af0\hich\af0\dbch\f42 \u27096\'97\'6c\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43 \loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u-27245\'8a\'d4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u23436\'8a\'ae\loch\af0\hich\af0\dbch\f42 \u20840\'91\'53\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42  \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u27083\'8d\'5c\loch\af0\hich\af0\dbch\f42 \u25104\'90\'ac\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5 \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383 \'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42  \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u25201\'88\'b5\loch\af0\hich\af0\dbch\f42 \u12431\'82\'ed\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2 \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20027 \'8e\'e5\loch\af0\hich\af0\dbch\f42 \u-26548\'91\'e8\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12409\'82\'d7\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20197\'88\'c8\loch\af0\hich\af0\dbch\f42 \u21069\'91\'4f \loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u21516\'93\'af\loch\af0\hich\af0\dbch\f42 \u26178\'8e\'9e\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u21475\'8c\'fb\loch\af0\hich\af0\dbch\f42 \u-26579\'93\'aa\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42  \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u-26782\'96\'ca\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u24847\'88\'d3 \loch\af0\hich\af0\dbch\f42 \u24605\'8e\'76\loch\af0\hich\af0\dbch\f42 \u-30616\'95\'5c\loch\af0\hich\af0\dbch\f42 \u31034\'8e\'a6\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u25552\'92\'f1\loch\af0\hich\af0\dbch\f42 \u26696 \'88\'c4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u-30616\'95\'5c\loch\af0\hich\af0\dbch\f42  \u26126\'96\'be\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u28961\'96\'b3\loch\af0\hich\af0\dbch\f42 \u21177\'8c\'f8\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5 \loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452\'83\'43\loch\af0\hich\af0\dbch\f42 \u12463 \'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42  \u12509\'83\'7c\loch\af0\hich\af0\dbch\f42 \u12522\'83\'8a\loch\af0\hich\af0\dbch\f42 \u12471\'83\'56\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12383\'82\'bd \loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12469\'83\'54\loch\af0\hich\af0\dbch\f42 \u12509\'83\'7c\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42 \u12469 \'83\'54\loch\af0\hich\af0\dbch\f42 \u12540\'81\'5b\loch\af0\hich\af0\dbch\f42 \u12499\'83\'72\loch\af0\hich\af0\dbch\f42 \u12473\'83\'58\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42  \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b \loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u-26619 \'8d\'80\loch\af0\hich\af0\dbch\f42 \u12392\'82\'c6\loch\af0\hich\af0\dbch\f42 \u30064\'88\'d9\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u22580\'8f\'ea\loch\af0\hich\af0\dbch\f42  \u21512\'8d\'87\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u22865\'8c\'5f\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1 \loch\af0\hich\af0\dbch\f42 \u26360\'8f\'91\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u-26619\'8d\'80\loch\af0\hich\af0\dbch\f42 \u12364\'82\'aa\loch\af0\hich\af0\dbch\f42 \u-28567 \'93\'4b\loch\af0\hich\af0\dbch\f42 \u29992\'97\'70\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42  \u12290\'81\'42}{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203  \par  \par }{\b\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \hich\af0\dbch\af42\loch\f0 15.  }{\fs21\loch\af0\hich\af0\dbch\af42\insrsid1994203 \loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467\'90\'bb\loch\af0\hich\af0\dbch\f42  \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-31657\'92\'98\loch\af0\hich\af0\dbch\f42 \u20316\'8d\'ec\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0 \loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u12394\'82\'c8\loch\af0\hich\af0\dbch\f42 \u12425\'82\'e7\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12381 \'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u28961\'96\'b3\loch\af0\hich\af0\dbch\f42 \u20307\'91\'cc\loch\af0\hich\af0\dbch\f42  \u-29535\'8d\'e0\loch\af0\hich\af0\dbch\f42 \u29987\'8e\'59\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7 \loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u27861\'96\'40\loch\af0\hich\af0\dbch\f42 \u24459\'97\'a5\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403 \'82\'d1\loch\af0\hich\af0\dbch\f42 \u26465\'8f\'f0\loch\af0\hich\af0\dbch\f42 \u32004\'96\'f1\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12387\'82\'c1\loch\af0\hich\af0\dbch\f42  \u12390\'82\'c4\loch\af0\hich\af0\dbch\f42 \u20445\'95\'db\loch\af0\hich\af0\dbch\f42 \u-29833\'8c\'ec\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4 \loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u12510\'83\'7d\loch\af0\hich\af0\dbch\f42 \u12452 \'83\'43\loch\af0\hich\af0\dbch\f42 \u12463\'83\'4e\loch\af0\hich\af0\dbch\f42 \u12525\'83\'8d\loch\af0\hich\af0\dbch\f42 \u12477\'83\'5c\loch\af0\hich\af0\dbch\f42 \u12501\'83\'74\loch\af0\hich\af0\dbch\f42 \u12488\'83\'67\loch\af0\hich\af0\dbch\f42  \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u20379\'8b\'9f \loch\af0\hich\af0\dbch\f42 \u32102\'8b\'8b\loch\af0\hich\af0\dbch\f42 \u-32763\'8e\'d2\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467 \'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12395\'82\'c9\loch\af0\hich\af0\dbch\f42 \u-27230\'8a\'d6\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42  \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u21407\'8c\'b4\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u-31657\'92\'98\loch\af0\hich\af0\dbch\f42 \u20316\'8d\'ec\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0 \loch\af0\hich\af0\dbch\f42 \u12289\'81\'41\loch\af0\hich\af0\dbch\f42 \u12362\'82\'a8\loch\af0\hich\af0\dbch\f42 \u12424\'82\'e6\loch\af0\hich\af0\dbch\f42 \u12403\'82\'d1\loch\af0\hich\af0\dbch\f42 \u12381\'82\'bb\loch\af0\hich\af0\dbch\f42 \u12398 \'82\'cc\loch\af0\hich\af0\dbch\f42 \u20182\'91\'bc\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u28961\'96\'b3\loch\af0\hich\af0\dbch\f42 \u20307\'91\'cc\loch\af0\hich\af0\dbch\f42 \u-29535\'8d\'e0\loch\af0\hich\af0\dbch\f42  \u29987\'8e\'59\loch\af0\hich\af0\dbch\f42 \u27177\'8c\'a0\loch\af0\hich\af0\dbch\f42 \u12434\'82\'f0\loch\af0\hich\af0\dbch\f42 \u26377\'97\'4c\loch\af0\hich\af0\dbch\f42 \u12375\'82\'b5\loch\af0\hich\af0\dbch\f42 \u12390\'82\'c4 \loch\af0\hich\af0\dbch\f42 \u12356\'82\'a2\loch\af0\hich\af0\dbch\f42 \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12377\'82\'b7\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42\loch\af0\hich\af0\dbch\f42 \u26412\'96\'7b\loch\af0\hich\af0\dbch\f42 \u-30467 \'90\'bb\loch\af0\hich\af0\dbch\f42 \u21697\'95\'69\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u-30159\'8b\'96\loch\af0\hich\af0\dbch\f42 \u-29954\'91\'f8\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42  \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418\'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12289\'81\'41 \loch\af0\hich\af0\dbch\f42 \u-29527\'94\'cc\loch\af0\hich\af0\dbch\f42 \u22770\'94\'84\loch\af0\hich\af0\dbch\f42 \u12373\'82\'b3\loch\af0\hich\af0\dbch\f42 \u12428\'82\'ea\loch\af0\hich\af0\dbch\f42 \u12427\'82\'e9\loch\af0\hich\af0\dbch\f42 \u12418 \'82\'e0\loch\af0\hich\af0\dbch\f42 \u12398\'82\'cc\loch\af0\hich\af0\dbch\f42 \u12391\'82\'c5\loch\af0\hich\af0\dbch\f42 \u12399\'82\'cd\loch\af0\hich\af0\dbch\f42 \u12354\'82\'a0\loch\af0\hich\af0\dbch\f42 \u12426\'82\'e8\loch\af0\hich\af0\dbch\f42  \u12414\'82\'dc\loch\af0\hich\af0\dbch\f42 \u12379\'82\'b9\loch\af0\hich\af0\dbch\f42 \u12435\'82\'f1\loch\af0\hich\af0\dbch\f42 \u12290\'81\'42}{\fs21\lang1036\langfe1041\loch\af0\hich\af0\dbch\af42\langnp1036\insrsid1994203  \par }{\b\fs21\lang1036\langfe1041\loch\af0\hich\af0\dbch\af42\langnp1036\insrsid1994203  \par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\setup\pid\pid.txt ===
M i c r o s o f t   M o b i l e   I n t e r n e t   T o o l k i t   1 . 0   P r o d u c t I D s 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\system\web\system.web.ui.mobilecontrols.adapters.txt ===
##############################################
##     Strings for Adapters                 ##
##############################################

CalendarAdapterFirstPrompt=Calendar
CalendarAdapterOptionPrompt=Select an option:
CalendarAdapterOptionType=Type a date
CalendarAdapterOptionEra=Select an era:
CalendarAdapterOptionChooseDate=Choose a date
CalendarAdapterOptionChooseWeek=Choose a week
CalendarAdapterOptionChooseMonth=Choose a month
CalendarAdapterTextBoxErrorMessage=The date entered was incorrect.

ChtmlImageAdapterDecimalCodeExpectedAfterGroupChar=Decimal code is expected after the group picture character.

ChtmlPageAdapterRedirectPageContent=Please click on the following link to continue
ChtmlPageAdapterRedirectLinkLabel=Continue

ControlAdapterBasePagePropertyShouldNotBeSet=The set method of Page property is not expected to be called directly.  It should be overridden by subclasses.

FormAdapterMultiControlsAttemptSecondaryUI=Multiple controls attempting secondary UI.

MobileTextWriterNotMultiPart=Target does not support multipart documents.
ObjectListAdapter_InvalidPostedData=Invalid posted data for current ObjectList ViewMode.  (The ObjectList may have been databound on postback during Page_Load, resetting the ViewMode.  Call DataBind in Page_Load only if IsPostBack is false.)

WmlMobileTextWriterBackLabel=Back
WmlMobileTextWriterOKLabel=OK
WmlMobileTextWriterGoLabel=Go

WmlPageAdapterServerError=Server Error in {0}
WmlPageAdapterStackTrace=Stack Trace:
WmlPageAdapterPartialStackTrace=Partial Stack Trace:
WmlPageAdapterMethod=Method:

WmlObjectListAdapterDetails=Details
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\mit\system\web\system.web.mobile.txt ===
###########################################################
###########################################################
####   Strings for System.Web.Mobile                   ####
###########################################################
###########################################################

ConfigSect_MissingAttr=Required attribute '{0}' is missing.
ConfigSect_UnknownAttr=Unexpected attribute '{0}'.
ConfigSect_UnrecognizedXML=Unrecognized XML.
ConfigSect_MissingValue=Attribute '{0}' must have a value.
ConfigSect_InvalidBooleanAttr=Invalid boolean attribute '{0}'.
ConfigSect_InvalidIntegerAttr=Invalid integer attribute '{0}'.

DevCapSect_EmptyClass=The type attribute cannot be null or an empty string.
DevCapSect_ExtraCompareDelegator=An evaluator delegate has already been specified.  A compare attribute is not necessary.
DevCapSect_ExtraArgumentDelegator=An evaluator delegate has already been specified.  An argument attribute is not necessary.
DevCapSect_NoTypeInfo=Unable to get type information for type '{0}'. Specify a valid type.
DevCapSect_NoCapabilityEval=Could not create capability evaluator for method '{0}' because of the following error: '{1}'.
DevCapSect_MustSpecify=You must specify either a filter name and comparison value (e.g., <filter name="capability" compare="capabilityName" argument="argument"/>) or a type and method (e.g., <filter name="capability" type="typeName" method="methodName"/>).
DevCapSect_ComparisonAlreadySpecified=A comparison has already been specified. You need not specify a method attribute.
DevCapSect_UnableAddDelegate=Delegate '{0}' cannot be added because of the following error: '{1}'.
DevCapSect_UnrecognizedTag=Unrecognized tag '{0}'.

DevFiltDict_FoundLoop=The filter '{0}' is already directly or indirectly dependent on the filter '{1}'. Construct your filters to avoid loops.

MobCap_DelegateNameNoValue=delegateName must have a value.
MobCap_CantFindCapability=Cannot find a capability named '{0}'.

MobileRedirect_RedirectNotAllowed=Calling Response.Redirect on a postback can have unpredictable results on mobile devices and gateways. Use MobilePage.RedirectToMobilePage method instead.

###########################################################
###########################################################
####   Strings for System.Web.UI.MobileControls        ####
###########################################################
###########################################################


#######################################################
## In the runtime, used by the designer              ##
#######################################################

Category_Action=Action
Category_Appearance=Appearance
Category_Behavior=Behavior
Category_Data=Data
Category_Navigation=Navigation
Category_Paging=Paging
Category_Style=Style

AdRotator_AdvertisementFile=XML file that contains advertisements.
AdRotator_ImageKey=XML element name that specifies which image URL to retrieve.
AdRotator_NavigateUrlKey=XML element name that specifies which advertisement Web page URL to retrieve.
AdRotator_KeywordFilter=Keyword for limiting selection of advertisements.
AdRotator_AdCreated=Raises an event after an advertisement is retrieved from the AdvertisementFile.

BaseValidator_ControlToValidate=ID of the control to validate.
BaseValidator_Display=Appearance of the validator.
BaseValidator_ErrorMessage=Message to display when validation fails.

Calendar_FirstDayOfWeek=The day of the week that appears first.
Calendar_SelectedDate=The currently selected date.
Calendar_SelectionMode=Determines whether days, weeks, and months are selectable.
Calendar_ShowDayHeader=True if showing days of week header.
Calendar_VisibleDate=The month that appears.
Calendar_CalendarEntryText=Text for the link that provides date selection. This link is only used when a series of steps is needed.
Calendar_OnSelectionChanged=Raises an event when the user changes the selection.

PhoneCall_AlternateFormat=Text format that appears for devices that cannot make phone calls.
PhoneCall_AlternateUrl=The target URL for devices that cannot make phone calls.
PhoneCall_PhoneNumber=The phone number to dial for devices that can make phone calls.
PhoneCall_SoftkeyLabel=Label used for the phone call when rendered on a softkey. Only applies to devices that support softkeys.

Command_CommandArgument=The argument associated with the command.
Command_CommandName=The name associated with the command.
Command_CausesValidation=Whether to invoke validation on the form when activated.
Command_OnClick=Raises an event when the user activates the command.
Command_OnItemCommand=Raises an event when the user activates the command. The event is bubbled up to parent controls.
Command_SoftkeyLabel=Label used for the command when rendered on a softkey. Only applies to devices that support softkeys.
Command_Format=The visual appearance of the control.

CompareValidator_ControlToCompare=ID of the control to compare to.
CompareValidator_Operator=Comparison operation to apply to values.
CompareValidator_Type=Data type of values for comparison.
CompareValidator_ValueToCompare=Value to compare to.

Control_AccessKey=The access key used to give focus to the control on i-mode phones, using the directkey function.

CustomValidator_OnServerValidate=Called to perform validation on the server.

FontInfo_Bold=Bold setting for the font.
FontInfo_Italic=Italic setting for the font.
FontInfo_Name=The preferred font for the control.
FontInfo_Size=The relative size of the font.

Form_OnActivate=Raises an event when the form becomes active.
Form_OnDeactivate=Raises an event when a previously active form becomes inactive.
Form_OnPaginated=Raises an event after the form is paginated.
Form_Action=The URL to which the form should be submitted.
Form_Method=The method used to submit the form to the server.
Form_PagerStyle=The styles used for pagination properties in the control.
Form_Title=The title used to identify the form.

Image_AlternateText=The alternate text displayed when the image cannot be rendered.
Image_AutoFormat=Whether the source image should be auto-formatted to match device capabilities.
Image_Coverage=Percentage of the screen area the image should use.
Image_ImageUrl=The URL of the image to be rendered.
Image_NavigateUrl=The URL or Form to navigate to.
Image_SoftkeyLabel=Label used for the image when rendered on a softkey. Only applies to devices that support softkeys.

Link_NavigateUrl=The URL or Form to link to.
Link_SoftkeyLabel=Label used for the link when rendered on a softkey. Only used on devices that support softkeys.

List_DataMember=Table used for binding when a DataSet is used as the data source.
List_DataSource=Data source that populates items in the list.
List_DataTextField=Specifies which property of a databound item to use to determine the item's text property.
List_DataValueField=Specifies which property of a databound item to use to determine the item's value property.
List_Decoration=List format used for the items.
List_ItemsAsLinks=Whether the items in the list should be interpreted as hyperlinks.
List_Items=Collection of items in the list.
List_OnItemCommand=Raises an event when an individual list item generates an event as a result of a user action.
List_OnItemDataBind=Raises an event after an item has been databound.

MobileControl_Alignment=Horizontal alignment of the control.
MobileControl_BackColor=Background color of the control.
MobileControl_BreakAfter=Whether to add a line break after the control at run time.
MobileControl_Font=Font that this control uses.
MobileControl_ForeColor=Color of the text within the control.
MobileControl_InfiniteTemplateRecursion=A circular reference was detected in a template.
MobileControl_StyleReference=Style that this control uses.
MobileControl_Wrapping=The wrapping behavior of text in the control.

ObjectList_DataMember=Table used for binding when a DataSet is used as the data source.
ObjectList_DataSource=Data source that populates items in the list.
ObjectList_LabelField=Field in the data source to use for a compact representation of the items in list view.
ObjectList_TableFields=Fields in the data source to use for an expanded representation of the items in list view.
ObjectList_AutoGenerateFields=Whether the fields are generated automatically at run time based on the associated datasource.
ObjectList_Fields=Collection of fields representing the items in details view.
ObjectList_Commands=Collection of commands for each item in the list.
ObjectList_OnItemCommand=Raises an event when the user selects a command associated with the item.
ObjectList_OnItemSelect=Raises an event when the user selects an item in the list view.
ObjectList_OnItemDataBind=Raises an event after an item is bound to a data source.
ObjectList_OnShowItemCommands=Raises an event before showing the set of commands for an item.
ObjectList_DefaultCommand=Command raised when an item is selected in list view.
ObjectList_DetailsCommandText=Text for the link to details view.
ObjectList_BackCommandText=Text for back link in details view.
ObjectList_MoreText=Text for the link to more details and commands.
ObjectList_CommandStyle=The style applied to the commands in the list.
ObjectList_LabelStyle=The style applied to the header label.

PagedControl_ItemCount=Number of items to render in the control. The value '0' indicates automatic pagination.
PagedControl_ItemsPerPage=Number of items to render in each page of the control. The value '0' indicates default pagination.
PagedControl_OnLoadItems=Raises an event when the control uses custom paging and requests more data.

PagerStyle_NextPageText=Label for the link to the next page.
PagerStyle_PageLabel=Label for current page.
PagerStyle_PreviousPageText=Label for the link to the previous page.

Panel_Paginate=Whether the contents can be divided into pages.

RangeValidator_MaximumValue=Maximum value for the control being validated.
RangeValidator_MinimumValue=Minimum value of the control being validated.
RangeValidator_Type=Data type of values for comparison.

RegularExpressionValidator_ValidationExpression=Regular expression to determine validity.

RequiredFieldValidator_InitialValue=Initial value of the field to validate.

SelectionList_OnSelectedIndexChanged=Raises an event when the user changes a selection.
SelectionList_Rows=The number of visible rows to render.
SelectionList_SelectType=The type of selection list.
SelectionList_Title=The title shown above the input area on devices that support it.


Style_Alignment=Horizontal alignment of the control.
Style_BackColor=Background color of the control.
Style_Font=Font for text within the control.
Style_ForeColor=Color of the text within the control.
Style_Name=Name of the style.
Style_Reference=Reference to another style to inherit from.
Style_Wrapping=Wrapping behavior of text in the control.

StyleSheet_ReferencePath=Relative file path to a user control containing a StyleSheet control.

TextBox_Numeric=Whether the input is restricted to numeric values.
TextBox_MaxLength=The maximum number of characters that can be entered.
TextBox_OnTextChanged=Raises an event after the user changes the text property. The event occurs only after a postback to the server.
TextBox_Password=Whether the input is hidden.
TextBox_Size=The expected character length of the input.
TextBox_Title=The title shown above the input area on devices that support it.

TextControl_Text=Text that appears in the control.

TextView_Text=Text that appears in the control.

ValidationSummary_BackLabel=Label for the link that returns to the offending form.
ValidationSummary_FormToValidate=ID of the form to validate.
ValidationSummary_HeaderText=Header text that appears in the summary.

#######################################################
## In the runtime, actually used by the runtime      ##
#######################################################

BaseValidator_ControlToValidateBlank=The ControlToValidate property of '{0}' cannot be blank.
BaseValidator_ControlNotFound=Unable to find control with the id '{0}' referenced by the {1} property of the control '{2}'.
BaseValidator_BadControlType=The control with the id '{0}', referenced by the '{1}' property of the control '{2}', cannot be validated.

PhoneCall_InvalidPhoneNumberFormat=The value of the '{0}' property is not in a correct format: '{1}'
PhoneCall_EmptyPhoneNumber=The property PhoneNumber of the following PhoneCall control cannot be empty: '{0}'

CompareValidator_BadCompareControl=Control '{0}' cannot have the same value '{1}' for both ControlToValidate and ControlToCompare.

ControlAdapter_BackLabel=Back
ControlAdapter_GoLabel=Go
ControlAdapter_OKLabel=OK
ControlAdapter_MoreLabel=More
ControlAdapter_OptionsLabel=Options
ControlAdapter_NextLabel=Next
ControlAdapter_PreviousLabel=Prev
ControlAdapter_LinkLabel=Link
ControlAdapter_PhoneCallLabel=Call
ControlAdapter_InvalidDefaultLabel=The default label ID specified is invalid.

ControlsConfig_NoDeviceConfigRegistered=No mobile controls device configuration was registered for the requesting device.  User agent string is '{0}'.

DataSourceHelper_MissingDataMember=Missing data member '{0}'
DataSourceHelper_DataSourceWithoutDataMember={0} without data member

DeviceSpecific_OnlyChoiceElementsAllowed=Only Choice elements are allowed in a DeviceSpecific element.

DeviceSpecificChoice_OverridingPropertyNotFound=Property '{0}' to override not found.
DeviceSpecificChoice_OverridingPropertyTypeCast=Property '{0}' cannot be converted from text.
DeviceSpecificChoice_OverridingPropertyNotDeclarable=Property '{0}' is not declarable, and cannot be overridden.
DeviceSpecificChoice_InvalidPropertyOverride=Invalid property override: '{0}'
DeviceSpecificChoice_PropertyNotAnAttribute=Specified property is not an attribute.
DeviceSpecificChoice_ChoiceOnlyExistInDeviceSpecific=Choice elements can only exist in a DeviceSpecific element.
DeviceSpecificChoice_CantFindFilter=Can find neither a device capability named '{0}' nor a public non-static method on the page named '{0}' that returns a System.Boolean and takes System.Web.Mobile.MobileCapabilities and System.String as arguments.

ErrorFormatterPage_ServerError=Server Error in {0}
ErrorFormatterPage_MiscErrorMessage={0}: {1}
ErrorFormatterPage_File=File: {0}
ErrorFormatterPage_Line=Line: {0}

Form_NestedForms=Forms cannot be nested.  Found Form with ID '{0}' inside Form with ID '{1}'.
Form_PropertyNotAccessible=The '{0}' property is not accessible for the Form.
Form_PropertyNotSettable=The '{0}' property is not settable on the Form.
Form_InvalidSubControlType='{0}' cannot be a toplevel form element.
Form_InvalidControlToPaginateForm=ControlToPaginate must be inside the active form.

IndividualDeviceConfig_TypeMustSupportInterface=The type '{0}' is not a valid device adapter, because it does not implement the interface '{1}'.  Use another type, or modify the type to implement the interface.
IndividualDeviceConfig_ControlWithIncorrectPageAdapter=Control '{0}' is not registered with device with page adapter '{1}'.

LiteralTextParser_InvalidTagFormat=The text contains a tag with invalid syntax.  Specify tags that use correct syntax.

MobileControl_MustBeInMobilePage=MobileControl must be contained within a MobilePage: {0}
MobileControl_MustBeInForm=The control with id {0} of type {1} must be contained within a Form.
MobileControl_NoTemplatesDefined=Cannot create templated UI because no templates are defined.
MobileControl_NoMultipleDeviceSpecifics=You can specify only one DeviceSpecific element per control.
MobileControl_NoCustomAttributes=Cannot set custom attributes on mobile controls in this page.  Custom attributes specified are: {0}.
MobileControl_InvalidAccessKey=The following AccessKey property must be 0-9, # or *: '{0}'
MobileControl_InnerTextCannotContainTags=The control with id {1} contains tags in its inner text.  A {0} control cannot contain tags in its inner text.
MobileControl_TextCannotContainNewlines=The control with id {1} contains newline characters in its inner text.  A {0} control cannot contain newline characters in its inner text.

MobileControlBuilder_ControlMustBeTopLevelOfPage={0} must be defined at the top level of a page.
MobileControlBuilder_StyleMustBeInStyleSheet=Styles must be defined in a StyleSheet.

MobileControlsSectionHandler_UnknownElementName=Unknown element name - {0} expected.
MobileControlsSectionHandler_DeviceConfigNotFound=The following device configuration is not found: '{0}'
MobileControlsSectionHandler_CantCreateMethodOnClass=Unable to find suitable predicate method '{0}' on class '{1}'
MobileControlsSectionHandler_TypeNotFound=Type '{0}' used as {1} not found.
MobileControlsSectionHandler_DuplicatedDeviceName=The following device adapter set is already registered: '{0}'
MobileControlsSectionHandler_NotAssignable='{0}' is not assignable to '{1}'
MobileControlsSectionHandler_CircularReference=The device configuration '{0}' contains a circular reference

MobileErrorInfo_Unknown=Unknown
MobileErrorInfo_CompilationErrorType=Compilation Error
MobileErrorInfo_CompilationErrorMiscTitle=Compiler Error Message
MobileErrorInfo_CompilationErrorDescription=An error occurred during the compilation of a resource required to service this request. Please review the following specific error details and modify your source code appropriately.
MobileErrorInfo_ParserErrorType=Parser Error
MobileErrorInfo_ParserErrorMiscTitle=Parser Error Message
MobileErrorInfo_ParserErrorDescription=An error occurred during the parsing of a resource required to service this request. Please review the following specific parse error details and modify your source file appropriately.
MobileErrorInfo_SourceObject=Source Object

MobileListItemCollection_ViewStateManagementError=Viewstate management error

MobilePage_InvalidApplicationUrl=Invalid application URL - {0}
MobilePage_AtLeastOneFormInPage=Page must contain at least one Form.
MobilePage_FormNotFound=Form not found: '{0}'
MobilePage_RequiresSessionState=The page needs to save viewstate, but session state is disabled or readonly. Enable session state, or disable viewstate for the page.

ObjectList_FieldNotFound=Field {0} not found
ObjectList_ItemTitle=Item
ObjectList_SelectedIndexTooSmall=The SelectedIndex property cannot be set to less than -1: '{0}'.
ObjectList_SelectedIndexTooBig=SelectedIndex must be less than the item count.  SelectedIndex is being set to {0}, but the item count is {1}.  
ObjectList_CannotSetViewModeWithNoSelectedItem=To set the ViewMode to Commands or Details, you must first select an item.
ObjectList_MustBeInListModeToClearSelectedIndex=To set the SelectedIndex to -1, the ViewMode property must first be set to ObjectListViewMode.List.
ObjectList_MustBeInDetailsModeToGetDetails=Cannot access the Details property unless the ViewMode property is first set to ObjectListViewMode.Details.
ObjectList_MustHaveOneOrMoreFields=Must have one or more fields to databind.  (Application may have autogenerated fields from an empty DataSource.  To clear items, set DataSource to null.)
ObjectListField_DataFieldNotFound=The DataField '{0}' does not exist in the source data.  Specify a different DataField property, or remove the field.
ObjectListField_DataBoundText=DataBound

PagedControl_ItemCountCantBeNegative=ItemCount cannot be negative: {0}
PagedControl_ItemsPerPageCantBeNegative=ItemsPerPage cannot be negative: {0}

PagerStyle_NextPageText_DefaultValue=Next
PagerStyle_PreviousPageText_DefaultValue=Previous

RangeValidator_RangeOverlap=The MaximumValue {0} cannot be less than the MinimumValue {1} of {2}.

SessionViewState_InvalidSessionStateHistory=Invalid value for session state history.
SessionViewState_ExpiredOrCookieless=The page requires session state that is no longer available. Either the session has expired, the client did not send a valid session cookie, or the session state history size is too small. Try increasing the history size or session expiry limit.

SelectionList_AdapterNotHandlingLoadPostData=Device adapter must handle LoadPostData for SelectionList.

Style_DuplicateName=A style with that name already exists. Please choose another name.
Style_NameChangeCauseCircularLoop=This name change creates a circular loop. Please choose another name.
Style_ReferenceCauseCircularLoop=This reference creates a circular loop. Please choose another style reference.
Style_StyleNotFound=Style not found: {0}
Style_EmptyName=A style name cannot be empty.
Style_StyleNotFoundOnGenericUserControl=Style not found: {0}.  Note that Styles will never be found on a System.Web.UI.UserControl.  Use System.Web.UI.MobileControls.MobileUserControl instead.
Style_CircularReference=The following style contains a circular reference: '{0}'
Style_UnregisteredProperty=Unregistered property: {0}
Style_ErrorMessageTitle=Styles Editor

StyleSheet_DuplicateName=Duplicate Style elements named {0} found within a style sheet.
StyleSheet_MustContainID=Style elements must contain a 'Name' attribute.
StyleSheet_NoStyleSheetInExternalFile=External file does not contain a style sheet control.
StyleSheet_PropertyNotAccessible=The following style sheet property is not accessible: '{0}'
StyleSheet_PropertyNotSettable=The following style sheet property is not settable: '{0}'
StyleSheet_InvalidStyleName=Attempting to set Style named '{0}' into style sheet key '{1}'.  These values must match.
StyleSheet_StyleAlreadyOwned=Attempting to insert Style named '{0}' into style sheet even though it's already in another style sheet named '{1}'.  Only one style sheet can own a given Style.
StyleSheet_LoopReference=The following style sheet contains a circular reference to an external style sheet: '{0}'

# Used in ArgumentException where concatenation will occur.
TextBox_NotNegativeNumber=must be greater than or equal to zero.

SelectionList_OutOfRange=Unexpected value {0}.  The value of SelectedIndex must be at least -1 and less than the number of items.
ValidationSummary_InvalidFormToValidate=The form with id {0}, referenced by the ValidationSummary control '{1}', does not exist. Change the FormToValidate property to a valid form.

Validator_ValueBadType=The {1} property of the control with id {2} is set to the value {0}, which cannot be converted to the required type {3}. Use a legal value.

###########################################################
###########################################################
####  Strings for System.Web.UI.Design.MobileControls  ####
###########################################################
###########################################################

AppliedDeviceFiltersDialog_Title=Applied Device Filters
AppliedDeviceFiltersDialog_AppliedDeviceFilters=A&pplied Device Filters:
AppliedDeviceFiltersDialog_AssociatedItemsWillBeLost=Any templates and property overrides associated with this device filter will be lost. Are you sure you want to continue?
AppliedDeviceFiltersDialog_ApplyDeviceFilter=&Add To List
AppliedDeviceFiltersDialog_AvailableDeviceFilters=A&vailable Device Filters:
AppliedDeviceFiltersDialog_Argument=A&rgument:
AppliedDeviceFiltersDialog_DuplicateChoices=The following filters have been applied multiple times with the same argument: '{0}'.  Please remove the duplicate filters or change their arguments.
AppliedDeviceFiltersDialog_DefaultFilterAlreadyApplied=The default filter may only be applied once.

BaseTemplatedMobileComponentEditor_TemplateModeErrorMessage=The control does not support property editing while it is in template editing mode. You must complete template editing before using the Property Builder.
BaseTemplatedMobileComponentEditor_TemplateModeErrorTitle=Property Builder

Category_DeviceSpecific=Device Specific

DeviceFilter_DefaultChoice=(Default)
DeviceFilter_NoChoice=(None)

DeviceFilterEditorDialog_Header=Create device filters for control templating and property overrides in this application.  These filters are stored in the Web.config management file.
DeviceFilterEditorDialog_DeviceFilters=Device &Filters:
DeviceFilterEditorDialog_NewDeviceFilter=&New Device Filter
DeviceFilterEditorDialog_UnnamedFilter=A device filter name cannot be empty. Please type a name.
DeviceFilterEditorDialog_DuplicateName=The following device filter already exists: '{0}'. Please choose another name.
DeviceFilterEditorDialog_IllegalDefaultName=You cannot create a device filter named '(Default)'. This name is reserved for the default filter. Please choose another name.
DeviceFilterEditorDialog_Argument=&Argument:
DeviceFilterEditorDialog_Attributes=Attributes
DeviceFilterEditorDialog_Method=&Method:
DeviceFilterEditorDialog_TypeGl=Type
DeviceFilterEditorDialog_Equality=Equality &Comparison
DeviceFilterEditorDialog_Compare=C&ompare:
DeviceFilterEditorDialog_Evaluator=Evaluator &Delegate
DeviceFilterEditorDialog_TypeTxt=&Type:
DeviceFilterEditorDialog_Title=Device Filter Editor
DeviceFilterEditorDialog_InvalidFilter=The following device filters are not valid as specified:\n\n{0}\n\nEquality Comparison device filters must have a defined Compare property.  Evaluator Delegate device filters must have defined Type and Method properties.  Please correct these filters.
DeviceFilterEditorDialog_DuplicateNames=This action could not be completed because multiple device filters that share the same name exist in this project's Web.config file.  Please correct these duplicate filter definitions in the Web.config file.
DeviceFilterEditorDialog_WebConfigMissingOnOpen=Before you can create Device Filters you must add a Web.config file to this project.
DeviceFilterEditorDialog_WebConfigMissing=The action could not be completed because this project's Web.config file has been deleted or renamed.
DeviceFilterEditorDialog_WebConfigParsingError=The following error was encountered while attempting to parse this project's Web.config file:\n\n{0}\n\nPlease correct this condition in the Web.config file.

DeviceFilterNode_DefaultFilterName=DeviceFilter

DeviceSpecific_DefaultMessage=Right-click and select the Templating Options command to apply device filters.
DeviceSpecific_TemplateEditingMessage=Right-click and select a set of templates to edit their device-specific content.
DeviceSpecific_DuplicateWarningMessage=Only one DeviceSpecific control is allowed in this container. Please remove all extra DeviceSpecific controls.
DeviceSpecific_NonHTMLSchemaMessage=You can edit only HTML-based templates in Design view. Switch to HTML view to edit the template contents.
DeviceSpecific_PropNotSet=(None)

EditableTreeList_Rename=&Rename

PropertyOverridesDialog_AppliedDeviceFilters=&Applied Device Filter:
PropertyOverridesDialog_Title=Property Overrides
PropertyOverridesDialog_DeviceSpecificProperties=Device-Specific &Properties:
PropertyOverridesDialog_InvalidPropertyValue='{0}' is an invalid value for the following property: '{1}'.  This property has been reset to its default value.
PropertyOverridesDialog_NotICloneable='{0}' uses ExpandableObjectConverter, but type '{1}' does not implement ICloneable.
PropertyOverridesDialog_DuplicateChoices=The following filters have been applied multiple times with the same argument: '{0}'.  Please remove the duplicate filters in the Applied Device Filters dialog before editing property overrides.

GenericDialog_OKBtnCaption=OK
GenericDialog_CancelBtnCaption=Cancel
GenericDialog_HelpBtnCaption=Help
GenericDialog_CloseBtnCaption=Close
GenericDialog_Edit=&Edit...

ImageUrlPicker_ImageCaption=Select Image
ImageUrlPicker_ImageFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png;*.wbmp)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png;*.wbmp|All Files(*.*)|*.*|

ListGeneralPage_Title=General
ListGeneralPage_DataGroupLabel=Data
ListGeneralPage_PagingGroupLabel=Paging
ListGeneralPage_AppearanceGroupLabel=Appearance
ListGeneralPage_DataSourceCaption=&DataSource:
ListGeneralPage_DataMemberCaption=Data&Member:
ListGeneralPage_DataTextFieldCaption=Data&TextField:
ListGeneralPage_DataValueFieldCaption=Data&ValueField:
ListGeneralPage_ItemCountCaption=Item&Count:
ListGeneralPage_ItemsPerPageCaption=ItemsPer&Page:
ListGeneralPage_DecorationCaption=Deco&ration:
ListGeneralPage_DecorationNone=None
ListGeneralPage_DecorationBulleted=Bulleted
ListGeneralPage_DecorationNumbered=Numbered
ListGeneralPage_SelectTypeCaption=&SelectType:
ListGeneralPage_SelectTypeDropDown=DropDown
ListGeneralPage_SelectTypeListBox=ListBox
ListGeneralPage_SelectTypeRadio=Radio
ListGeneralPage_SelectTypeMultiSelectListBox=MultiSelectListBox
ListGeneralPage_SelectTypeCheckBox=CheckBox
ListGeneralPage_RowsCaption=&Rows:
ListGeneralPage_NoneComboEntry=(None)
ListGeneralPage_UnboundComboEntry=(Unbound)
ListGeneralPage_PrivateMemberMessage={0} is marked as private member.
ListGeneralPage_PrivateMemberCaption=The DataSource's modifier must be changed to public before you can select it.

ListItemsPage_Title=Items
ListItemsPage_ItemsAsLinksCaption=&Render list items as hyperlinks
ListItemsPage_ItemListGroupLabel=Item list
ListItemsPage_DefaultItemText=Text
ListItemsPage_ItemCaption=Item &Text:
ListItemsPage_NewItemCaption=&Create New Item
ListItemsPage_ItemValueCaption=&Value:
ListItemsPage_ItemSelectedCaption=&Selected

MarkupSchema_HTML32=http://schemas.microsoft.com/mobile/html32template
MarkupSchema_cHTML10=http://schemas.microsoft.com/mobile/chtml10template

MobileControl_FormPanelContainmentErrorMessage=This control must be placed in a Form or Panel control, or within a template. Please move or delete this control.
MobileControl_StrictlyFormPanelContainmentErrorMessage=This control must be placed in a Form or Panel control. Please move or delete this control.
MobileControl_TopPageContainmentErrorMessage=This control must be placed directly on the page. Please move or delete this control.
MobileControl_MobilePageErrorMessage=This control only works in pages of type MobilePage.
MobileControl_NonHtmlSchemaErrorMessage=You can edit only HTML-based templates in Design view. Switch to HTML view to edit the template contents.
MobileControl_DefaultErrorMessage=An internal error occurred.
MobileControl_SettingGenericChoiceDescription=Select the device filters to use for property overrides.
MobileControl_DeviceSpecificPropsDescription=The collection of property overrides associated with this control.
MobileControl_AppliedDeviceFiltersDescription=The collection of device filters you can use to customize this control.
MobileControl_InnerTextCannotContainTagsDesigner=This control cannot contain tags in its inner text.
MobileControl_UserControlWarningMessage=This control is not supported in Design view when placed inside a Web User Control, use Mobile User Control instead.

MobileWebFormDesigner_NonMobileControlOnPageWarning=Non-mobile controls are permitted only inside templates.\nPlease delete these controls or move them into templates.
MobileWebFormDesigner_NonMobileControlCreatedWarning=Non-mobile controls are permitted only inside templates.\nPlease delete this control or move it into a template.
MobileWebFormDesigner_MessageBoxTitle=Mobile Internet Designer

NavigateUrlConverter_SelectURITarget=(Select URL...)

ObjectListCommandsPage_Title=Commands
ObjectListCommandsPage_DefaultCommandCaption=&Default command:
ObjectListCommandsPage_CommandListGroupLabel=Command list
ObjectListCommandsPage_DataGroupLabel=Data
ObjectListCommandsPage_DefaultCommandName=Command
ObjectListCommandsPage_CommandNameCaption=Command &Name:
ObjectListCommandsPage_NewCommandBtnCaption=&Create New Command
ObjectListCommandsPage_PropertiesGroupLabel=Properties
ObjectListCommandsPage_TextCaption=&Text:
ObjectListCommandsPage_EmptyNameError=A command name cannot be empty. Please type a name.
ObjectListCommandsPage_ErrorMessageTitle=Commands Editor Page

ObjectListFieldsPage_Title=Fields
ObjectListFieldsPage_AutoGenerateFieldsCaption=Create &fields automatically at run time
ObjectListFieldsPage_FieldListGroupLabel=Field list
ObjectListFieldsPage_DefaultFieldName=Field
ObjectListFieldsPage_FieldNameCaption=Field &Name:
ObjectListFieldsPage_NewFieldBtnCaption=&Create New Field
ObjectListFieldsPage_PropertiesGroupLabel=Properties
ObjectListFieldsPage_DataFieldCaption=&DataField:
ObjectListFieldsPage_NoneComboEntry=(None)
ObjectListFieldsPage_DataFormatStringCaption=DataFormat&String:
ObjectListFieldsPage_TitleCaption=&Title:
ObjectListFieldsPage_VisibleCaption=&Visible
ObjectListFieldsPage_EmptyNameError=A field name cannot be empty. Please type a name.
ObjectListFieldsPage_ErrorMessageTitle=Fields Editor Page

ObjectListGeneralPage_Title=General
ObjectListGeneralPage_AppearanceGroupLabel=Appearance
ObjectListGeneralPage_DataGroupLabel=Data
ObjectListGeneralPage_PagingGroupLabel=Paging
ObjectListGeneralPage_NoneComboEntry=(None)
ObjectListGeneralPage_UnboundComboEntry=(Unbound)
ObjectListGeneralPage_BackCommandTextCaption=&BackCommandText:
ObjectListGeneralPage_DetailsCommandTextCaption=De&tailsCommandText:
ObjectListGeneralPage_MoreTextCaption=M&oreText:
ObjectListGeneralPage_DataSourceCaption=&DataSource:
ObjectListGeneralPage_DataMemberCaption=Data&Member:
ObjectListGeneralPage_LabelFieldCaption=&LabelField:
ObjectListGeneralPage_PrivateDataSourceMessage={0} is marked as private member.
ObjectListGeneralPage_PrivateDataSourceTitle=The DataSource's modifier must be changed to public before you can select it.
ObjectListGeneralPage_TableFieldsGroupLabel=TableFields
ObjectListGeneralPage_TableFieldsAvailableListLabel=A&vailable Fields:
ObjectListGeneralPage_TableFieldsSelectedListLabel=&Selected Fields:

PropertyBuilderVerb=Property &Builder...

Security_ReturnUrlCannotBeAbsolute=The ReturnUrl value "{0}" is invalid because it is absolute.

StylesEditorDialog_DuplicateStyleException=StylesEditorDialog cannot edit a style sheet with multiple styles declared which share the same name.
StylesEditorDialog_DuplicateStyleNames=This action could not be completed because there are multiple styles defined in this style sheet that share the same name.  Please first correct this problem in the HTML view.
StylesEditorDialog_Title=Styles Editor
StylesEditorDialog_PreviewText=AaBbYyZz
StylesEditorDialog_StyleListGroupLabel=Style List
StylesEditorDialog_AvailableStylesCaption=Style &Types:
StylesEditorDialog_AddBtnCation=>
StylesEditorDialog_DefinedStylesCaption=&Defined Styles:
StylesEditorDialog_StylePropertiesGroupLabel=Style Properties
StylesEditorDialog_TypeCaption=T&ype:
StylesEditorDialog_SampleCaption=Sample:
StylesEditorDialog_PropertiesCaption=&Properties:
StylesEditorDialog_DeleteStyleMessage=This will remove any templates and property overrides associated with this style.\nAre you sure you want to continue?
StylesEditorDialog_DeleteStyleCaption=Confirm Style Deletion
StylesEditorDialog_EmptyName=A style name cannot be empty. Please type a name.

StyleSheet_DefaultMessage=Right-click and choose the Edit Styles command to define styles.
StyleSheet_TemplateEditingMessage=Right-click and choose the Edit Styles command to define styles. Use the Edit Template command to edit templates for the current style and device filter.
StyleSheet_DuplicateStyleNamesMessage=This style sheet contains multiple styles which have the following names: {0}. Each style must have a unique 'Name' attribute.
StyleSheet_DuplicateWarningMessage=You can specify only one style sheet per page. Please remove all extra style sheets.
StyleSheet_NonHTMLSchemaMessage=You can edit only HTML-based templates in Design view. Switch to HTML view to edit the template contents.
StyleSheet_RefCycleErrorMessage=A circular reference is present: {0}. Please correct this problem.
StyleSheet_PropNotSet=(None)
StyleSheet_StylesCaption=St&yle:
StyleSheet_TemplateStyleDescription=The style used for the templating of this control.
StyleSheet_StylesEditorVerb=Edit Sty&les...
StyleSheet_SettingTemplatingStyleChoiceDescription=For each style, select the device filters to use for this stylesheet's templates.
StyleSheet_SettingGenericStyleChoiceDescription=For each style, select the device filters to use for this style sheet's templates and property overrides.
Stylesheet_EditBtnCaption=E&dit...

StyleSheetRefUrlEditor_Filter=ASCX Files(*.ascx)|*.ascx|
StyleSheetRefUrlEditor_Caption=Select ASCX File

TemplateableDesigner_SetTemplatesFilterVerb=Templating &Options...
TemplateableDesigner_SettingTemplatingChoiceDescription=Select the device filters to use for this control's templates.
TemplateableDesigner_SettingGenericChoiceDescription=Select the device filters to use for this control's templates and property overrides.
TemplateableDesigner_TemplateChoiceDescription=Identifies the device filter used to display or edit this control's templates.

TemplatingOptionsDialog_Title=Templating Options
TemplatingOptionsDialog_FilterCaption=Applied Device &Filter:
TemplatingOptionsDialog_EditBtnCaption=&Edit...
TemplatingOptionsDialog_SchemaCaption=Mar&kup Schema:
TemplatingOptionsDialog_HTMLSchemaFriendly=Mobile HTML 3.2 Template
TemplatingOptionsDialog_CHTMLSchemaFriendly=Mobile cHTML 1.0 Template

Toolbox_TabName=Mobile Web Forms

UrlPicker_DefaultFilter=All Files(*.*)|*.*|
UrlPicker_DefaultCaption=Select URL

TemplateFrame_HeaderFooterTemplates=&Header and Footer Templates
TemplateFrame_ItemTemplates=&Item Templates
TemplateFrame_ContentTemplate=&Content Template
TemplateFrame_SeparatorTemplate=&Separator Template
TemplateFrame_IllFormedWarning=This template is not well formed. Switch to HTML view to edit the content.

UrlPath_EmptyPathHasNoDirectory=Empty path has no directory.
UrlPath_PathMustBeRooted=Path must be rooted.
UrlPath_PhysicalPathNotAllowed='{0}' is a physical path, which is not allowed here
UrlPath_CannotExitUpTopDirectory=Cannot use a leading '..' to refer to locations outside the root directory.

UnsettableComboBox_NotSetText=<Not Set>
UnsettableComboBox_NotSetCompactText=NotSet

ValidationSummary_ErrorMessage=Error message {0}.

WebConfig_FileNotFoundException=No Web.config file exists in this project's directory.
WebConfig_FileLoadException=An error occurred when attempting to read the Web.config file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\net\resources\system\net\_networkingperfcounters.ini ===
;   / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 
 ;   / /   < c o p y r i g h t   f i l e = " _ N e t w o r k i n g P e r f C o u n t e r s . i n i "   c o m p a n y = " M i c r o s o f t " > 
 
 ;   / /           C o p y r i g h t   ( c )   M i c r o s o f t   C o r p o r a t i o n .     A l l   r i g h t s   r e s e r v e d . 
 
 ;   / /   < / c o p y r i g h t > 
 
 ;   / / - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 
 
 
 
 
 ;   / * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * \ 
 
 ;   * 
 
 ;   *   C o p y r i g h t   ( c )   1 9 9 8 - 2 0 0 2 ,   M i c r o s o f t   C o r p .     A l l   R i g h t s   R e s e r v e d . 
 
 ;   * 
 
 ;   *   M o d u l e   N a m e : 
 
 ;   * 
 
 ;   *       _ N e t w o r k i n g P e r f C o u n t e r s . i n i 
 
 ;   * 
 
 ;   *   A b s t r a c t : 
 
 ;   * 
 
 ;   *   R e v i s i o n   H i s t o r y : 
 
 ;   * 
 
 ;   \ * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * / 
 
 
 
 [ i n f o ] 
 
 d r i v e r n a m e = . N E T   C L R   N e t w o r k i n g 
 
 s y m b o l f i l e = _ N e t w o r k i n g P e r f C o u n t e r s . h 
 
 
 
 [ l a n g u a g e s ] 
 
 0 0 9 = l a n g u a g e 0 0 9 
 
 0 0 7 = l a n g u a g e 0 0 7 
 
 4 0 4 = l a n g u a g e 4 0 4 
 
 0 1 2 = l a n g u a g e 0 1 2 
 
 8 0 4 = l a n g u a g e 8 0 4 
 
 0 1 1 = l a n g u a g e 0 1 1 
 
 0 0 A = l a n g u a g e 0 0 A 
 
 0 0 5 = l a n g u a g e 0 0 5 
 
 0 0 6 = l a n g u a g e 0 0 6 
 
 0 0 8 = l a n g u a g e 0 0 8 
 
 0 0 B = l a n g u a g e 0 0 B 
 
 0 0 C = l a n g u a g e 0 0 C 
 
 0 0 E = l a n g u a g e 0 0 E 
 
 0 1 0 = l a n g u a g e 0 1 0 
 
 0 1 3 = l a n g u a g e 0 1 3 
 
 0 1 4 = l a n g u a g e 0 1 4 
 
 0 1 5 = l a n g u a g e 0 1 5 
 
 4 1 6 = l a n g u a g e 4 1 6 
 
 8 1 6 = l a n g u a g e 8 1 6 
 
 0 1 9 = l a n g u a g e 0 1 9 
 
 0 1 D = l a n g u a g e 0 1 D 
 
 0 1 F = l a n g u a g e 0 1 F 
 
 0 0 D = l a n g u a g e 0 0 D 
 
 0 0 1 = l a n g u a g e 0 0 1 
 
 
 
 [ o b j e c t s ] 
 
 O B J E C T _ 1 _ 0 0 9 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 7 _ N A M E = . N E T   C L R - N e t z w e r k 
 
 O B J E C T _ 1 _ 4 0 4 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 A _ N A M E = R e d   d e   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 5 _ N A M E = S  eo v    s l u ~b y   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 6 _ N A M E = . N E T   C L R   N e t v  r k 
 
 O B J E C T _ 1 _ 0 0 8 _ N A M E =   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 B _ N A M E = . N E T   C L R   - v e r k k o y h t e y d e t 
 
 O B J E C T _ 1 _ 0 0 C _ N A M E = R  s e a u   C L R   . N E T 
 
 O B J E C T _ 1 _ 0 0 E _ N A M E = . N E T   C L R      h  l  z a t k e z e l  s 
 
 O B J E C T _ 1 _ 0 1 0 _ N A M E = R e t e   C L R   . N E T 
 
 O B J E C T _ 1 _ 0 1 3 _ N A M E = . N E T   C L R - n e t w e r k 
 
 O B J E C T _ 1 _ 0 1 4 _ N A M E = . N E T   C L R - n e t t v e r k 
 
 O B J E C T _ 1 _ 0 1 5 _ N A M E = O b s Bu g a   s i e c i   . N E T   C L R 
 
 O B J E C T _ 1 _ 4 1 6 _ N A M E = S i s t e m a   d e   R e d e   d o   . N E T   C L R 
 
 O B J E C T _ 1 _ 8 1 6 _ N A M E = F u n c i o n a m e n t o   e m   r e d e   d e   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 1 9 _ N A M E = @30=870F8O  A5B8  C L R   . N E T 
 
 O B J E C T _ 1 _ 0 1 D _ N A M E = . N E T   C L R - n  t v e r k 
 
 O B J E C T _ 1 _ 0 1 F _ N A M E = . N E T   C L R   A   O l u _t u r m a 
 
 O B J E C T _ 1 _ 0 0 1 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 D _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 
 
 
 
 
 
 [ t e x t ] 
 
 O B J E C T _ 1 _ 0 0 9 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 9 _ H E L P = H e l p   n o t   a v a i l a b l e . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 9 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 9 _ H E L P = T h e   c u m u l a t i v e   t o t a l   n u m b e r   o f   s o c k e t   c o n n e c t i o n s   e s t a b l i s h e d   f o r   t h i s   p r o c e s s   s i n c e   t h e   p r o c e s s   w a s   s t a r t e d . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 9 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 9 _ H E L P = T h e   c u m u l a t i v e   t o t a l   n u m b e r   o f   b y t e s   r e c e i v e d   o v e r   a l l   o p e n   s o c k e t   c o n n e c t i o n s   s i n c e   t h e   p r o c e s s   w a s   s t a r t e d .   T h i s   n u m b e r   i n c l u d e s   d a t a   a n d   a n y   p r o t o c o l   i n f o r m a t i o n   t h a t   i s   n o t   d e f i n e d   b y   t h e   T C P / I P   p r o t o c o l . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 9 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 9 _ H E L P = T h e   c u m u l a t i v e   t o t a l   n u m b e r   o f   b y t e s   s e n t   o v e r   a l l   o p e n   s o c k e t   c o n n e c t i o n s   s i n c e   t h e   p r o c e s s   w a s   s t a r t e d .   T h i s   n u m b e r   i n c l u d e s   d a t a   a n d   a n y   p r o t o c o l   i n f o r m a t i o n   t h a t   i s   n o t   d e f i n e d   b y   t h e   T C P / I P   p r o t o c o l . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 9 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 9 _ H E L P = T h e   c u m u l a t i v e   t o t a l   n u m b e r   o f   d a t a g r a m   p a c k e t s   r e c e i v e d   s i n c e   t h e   p r o c e s s   w a s   s t a r t e d . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 9 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 9 _ H E L P = T h e   c u m u l a t i v e   t o t a l   n u m b e r   o f   d a t a g r a m   p a c k e t s   s e n t   s i n c e   t h e   p r o c e s s   w a s   s t a r t e d . 
 
 
 
 
 
 O B J E C T _ 1 _ 4 0 4 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 4 0 4 _ H E L P = f!qlO(u0
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 4 0 4 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 4 0 4 _ H E L P = Ut^_UR_pPUt^^zv
z#cv/}=~xe0
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 4 0 4 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 4 0 4 _ H E L P = Ut^_UR_@b	g_Uv
z#c
N]c6eMOCQD}v/}=~xe0PxeϑS+TǌeNUO^  T C P / I P   
TS[@b[v
TS[ǌ
0
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 4 0 4 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 4 0 4 _ H E L P = Ut^_UR_@b	g_Uv
z#c
N]|vMOCQD}v/}=~xe0PxeϑS+TǌeNUO^  T C P / I P   
TS[@b[v
TS[ǌ
0
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 4 0 4 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 4 0 4 _ H E L P = Ut^_UR_]c6evǌeS\Sv/}=~xe0
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 4 0 4 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 4 0 4 _ H E L P = Ut^_UR_]|vvǌeS\Sv/}=~xe0
 
 
 
 O B J E C T _ 1 _ 0 1 2 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 1 2 _ H E L P = ĳйD  `    ŵȲ. 
 
 
 
 O B J E C T _ 1 _ 0 1 2 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 1 2 _ H E L P = ĳйD  `    ŵȲ. 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 2 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 2 _ H E L P = \8     t\  t  \8  $    ŰX    Ȳ. 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 2 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 2 _ H E L P = \8     t\    $  ǔ    Ű  @      tǸ  Ȳ. 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 2 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 2 _ H E L P = \8     t\  $  ǔ      Ű        tǸ  Ȳ.   t  Ŕ  T C P / I P   \\  X  J@  pt0@  \\     h)Ȳ. 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 2 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 2 _ H E L P = \8     t\  @  pt0  (ӷX    Ȳ. 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 2 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 2 _ H E L P = \8     t\    pt0  (ӷX    Ȳ. 
 
 
 
 O B J E C T _ 1 _ 8 0 4 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 8 0 4 _ H E L P = .^R
NS(u0
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 8 0 4 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 8 0 4 _ H E L P = N/TRۏzNeg:Ndkۏz^zvWYcW[ޏcv/}y;`pe0
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 8 0 4 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 8 0 4 _ H E L P = N/TRۏzNeg(W@b	gSb _vWYcW[ޏc
N]c6evW[v/}y;`pe0dkpeW[SbpencT  T C P / I P   OS*g[INvNUOOSOo`0
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 8 0 4 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 8 0 4 _ H E L P = N/TRۏzNeg(W@b	gSb _vWYcW[ޏc
N]SvW[v/}y;`pe0dkpeW[SbpencT  T C P / I P   OS*g[INvNUOOSOo`0
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 8 0 4 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 8 0 4 _ H E L P = N/TRۏzNeg]c6evpencebSv/}y;`pe0
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 8 0 4 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 8 0 4 _ H E L P = N/TRۏzNeg]SvpencebSv/}y;`pe0
 
 
 
 O B J E C T _ 1 _ 0 1 1 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 1 1 _ H E L P = 000o0O(ug0M0~0[000
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 1 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 1 _ H E L P = 0000L0YW0f0Neg0S0n00000n0_00k00000c}L0j0U00_0/}MzTpeg0Y00
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 1 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 1 _ H E L P = 0000L0YW0f0Neg0Y0y0f0n00000c}0W0f0SOW0_0000n0/}MzTpeg0Y00S0n0Tpek0o00T C P / I P   00000g0[U00f0D0j0D0000J00s000000`1XL0+T~00~0Y00
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 1 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 1 _ H E L P = 0000L0YW0f0Neg0Y0y0f0n00000c}0W0f0OW0_0000n0/}MzTpeg0Y00S0n0Tpek0o00T C P / I P   00000g0[U00f0D0j0D0000J00s000000`1XL0+T~00~0Y00
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 1 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 1 _ H E L P = 0000L0YW0f0NegSOW0_0000000  0000n0/}MzTpeg0Y00
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 1 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 1 _ H E L P = 0000L0YW0f0NegOW0_0000000  0000n0/}MzTpeg0Y00
 
 
 
 O B J E C T _ 1 _ 0 0 7 _ N A M E = . N E T   C L R - N e t z w e r k 
 
 O B J E C T _ 1 _ 0 0 7 _ H E L P = H i l f e   n i c h t   v e r f  g b a r . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 7 _ N A M E = H e r g e s t e l l t e   V e r b i n d u n g e n 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 7 _ H E L P = D i e   k u m u l a t i v e   G e s a m t a n z a h l   d e r   S o c k e t v e r b i n d u n g e n ,   d i e   s e i t   d e m   S t a r t   d e s   P r o z e s s e s   f  r   d e n   P r o z e s s   h e r g e s t e l l t   w u r d e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 7 _ N A M E = E m p f a n g e n e   B y t e s 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 7 _ H E L P = D i e   k u m u l a t i v e   G e s a m t a n z a h l   d e r   B y t e s ,   d i e   s e i t   d e m   S t a r t   d e s   P r o z e s s e s    b e r   d i e   g e  f f n e t e n   S o c k e t v e r b i n d u n g e n   e m p f a n g e n   w u r d e n .   D i e s e r   W e r t   e n t h  l t   d i e   D a t e n   u n d   a l l e   P r o t o k o l l i n f o r m a t i o n e n ,   d i e   n i c h t   v o m   T C P / I P - P r o t o k o l l   d e f i n i e r t   w e r d e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 7 _ N A M E = G e s e n d e t e   B y t e s 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 7 _ H E L P = D i e   k u m u l a t i v e   G e s a m t a n z a h l   d e r   B y t e s ,   d i e   s e i t   d e m   S t a r t   d e s   P r o z e s s e s    b e r   d i e   g e  f f n e t e n   S o c k e t v e r b i n d u n g e n   g e s e n d e t   w u r d e n .   D i e s e r   W e r t   e n t h  l t   d i e   D a t e n   u n d   a l l e   P r o t o k o l l i n f o r m a t i o n e n ,   d i e   n i c h t   v o m   T C P / I P - P r o t o k o l l   d e f i n i e r t   w e r d e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 7 _ N A M E = E m p f a n g e n e   D a t e n p a k e t e 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 7 _ H E L P = D i e   k u m u l a t i v e   G e s a m t a n z a h l   d e r   D a t e n p a k e t e ,   d i e   s e i t   d e m   S t a r t   d e s   P r o z e s s e s   e m p f a n g e n   w u r d e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 7 _ N A M E = G e s e n d e t e   D a t e n p a k e t e 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 7 _ H E L P = D i e   k u m u l a t i v e   G e s a m t a n z a h l   d e r   D a t e n p a k e t e ,   d i e   s e i t   d e m   S t a r t   d e s   P r o z e s s e s   g e s e n d e t   w u r d e n . 
 
 
 
 O B J E C T _ 1 _ 0 0 A _ N A M E = R e d   d e   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 A _ H E L P = N o   h a y   a y u d a   d i s p o n i b l e . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 A _ N A M E = C o n e x i o n e s   e s t a b l e c i d a s 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 A _ H E L P = E l   n  m e r o   t o t a l   a c u m u l a t i v o   d e   c o n e x i o n e s   d e   s o c k e t   e s t a b l e c i d a s   d e   e s t e   p r o c e s o   d e s d e   q u e   s e   i n i c i  . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 A _ N A M E = B y t e s   r e c i b i d o s 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 A _ H E L P = E l   n  m e r o   t o t a l   a c u m u l a t i v o   d e   b y t e s   r e c i b i d o s   d e   t o d a s   l a s   c o n e x i o n e s   a b i e r t a s   d e   s o c k e t   d e s d e   q u e   s e   i n i c i    e l   p r o c e s o .   E s t e   n  m e r o   i n c l u y e   d a t o s   y   c u a l q u i e r   i n f o r m a c i  n   d e   p r o t o c o l o   q u e   n o   e s t    d e f i n i d a   p o r   e l   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 A _ N A M E = B y t e s   e n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 A _ H E L P = E l   n  m e r o   t o t a l   a c u m u l a t i v o   d e   b y t e s   e n v i a d o s   d e   t o d a s   l a s   c o n e x i o n e s   a b i e r t a s   d e   s o c k e t     d e s d e   q u e   s e   i n i c i    e l   p r o c e s o .   E s t e   n  m e r o   i n c l u y e   d a t o s   y   c u a l q u i e r   i n f o r m a c i  n   d e   p r o t o c o l o   q u e   n o   e s t    d e f i n i d a   p o r   e l   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 A _ N A M E = D a t a g r a m a s   r e c i b i d o s 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 A _ H E L P = E l   n  m e r o   t o t a l   a c u m u l a t i v o   d e   p a q u e t e s   d e   d a t a g r a m a s   r e c i b i d o s   d e s d e   q u e   s e   i n i c i    e l   p r o c e s o . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 A _ N A M E = D a t a g r a m a s   e n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 A _ H E L P = E l   n  m e r o   t o t a l   a c u m u l a t i v o   d e   p a q u e t e s   d e   d a t a g r a m a s   e n v i a d o s   d e s d e   q u e   s e   i n i c i    e l   p r o c e s o . 
 
 
 
 O B J E C T _ 1 _ 0 0 5 _ N A M E = S  eo v    s l u ~b y   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 5 _ H E L P = N  p o v d a   n e n    k   d i s p o z i c i . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 5 _ N A M E = N a v  z a n    p Yi p o j e n  
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 5 _ H E L P = K u m u l a t i v n    p o 
e t   s o k e t o v  c h   p Yi p o j e n    v y t v o Ye n  c h   p r o   t e n t o   p r o c e s   o d   j e h o   s p u at n  . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 5 _ N A M E = P Yi j a t    b a j t y 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 5 _ H E L P = K u m u l a t i v n    c e l k o v    p o 
e t   b a j t o  p Yi j a t  c h   p r o s t Ye d n i c t v  m   v ae c h   o t e v Ye n  c h   s o k e t o v  c h   p Yi p o j e n    o d   s p u at n    p r o c e s u .   T e n t o    d a j   z a h r n u j e   d a t a   a   v ae c h n y   i n f o r m a c e   o   p r o t o k o l e c h ,   k t e r    n e j s o u   d e f i n o v  n y   p r o t o k o l e m   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 5 _ N A M E = O d e s l a n    b a j t y 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 5 _ H E L P = K u m u l a t i v n    c e l k o v    p o 
e t   b a j t o  o d e s l a n  c h   p r o s t Ye d n i c t v  m   v ae c h   o t e v Ye n  c h   s o k e t o v  c h   p Yi p o j e n    o d   s p u at n    p r o c e s u .   T e n t o    d a j   z a h r n u j e   d a t a   a   v ae c h n y   i n f o r m a c e   o   p r o t o k o l e c h ,   k t e r    n e j s o u   d e f i n o v  n y   p r o t o k o l e m   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 5 _ N A M E = P Yi j a t    d a t a g r a m y 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 5 _ H E L P = K u m u l a t i v n    c e l k o v    p o 
e t   p a k e t o  d a t a g r a m o  p Yi j a t  c h   o d   s p u at n    p r o c e s u . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 5 _ N A M E = O d e s l a n    d a t a g r a m y 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 5 _ H E L P = K u m u l a t i v n    c e l k o v    p o 
e t   p a k e t o  d a t a g r a m o  o d e s l a n  c h   o d   s p u at n    p r o c e s u . 
 
 
 
 O B J E C T _ 1 _ 0 0 6 _ N A M E = . N E T   C L R   N e t v  r k 
 
 O B J E C T _ 1 _ 0 0 6 _ H E L P = D e r   e r   i n g e n   h j  l p   t i l g  n g e l i g . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 6 _ N A M E = E t a b l e r e d e   f o r b i n d e l s e r 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   s o c k e t - f o r b i n d e l s e r ,   d e r   e r   e t a b l e r e t   f o r   d e n n e   p r o c e s ,   s i d e n   p r o c e s s e n   b l e v   s t a r t e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 6 _ N A M E = B y t e   m o d t a g e t 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   b y t e ,   d e r   e r   m o d t a g e t   o v e r   a l l e    b n e   s o c k e t - f o r b i n d e l s e r ,   s i d e n   p r o c e s s e n   b l e v   s t a r t e t .   D e t t e   t a l   o m f a t t e r   d a t a   o g   e v e n t u e l l e   p r o t o k o l o p l y s n i n g e r ,   s o m   i k k e   e r   d e f i n e r e t   a f   T C P / I P - p r o t o k o l l e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 6 _ N A M E = B y t e   s e n d t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   b y t e ,   d e r   e r   s e n d t   o v e r   a l l e    b n e   s o c k e t - f o r b i n d e l s e r ,   s i d e n   p r o c e s s e n   b l e v   s t a r t e t .   D e t t e   t a l   o m f a t t e r   d a t a   o g   e v e n t u e l l e   p r o t o k o l o p l y s n i n g e r ,   s o m   i k k e   e r   d e f i n e r e t   a f   T C P / I P - p r o t o k o l l e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 6 _ N A M E = D a t a g r a m m e r   m o d t a g e t 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   d a t a g r a m m e r ,   d e r   e r   m o d t a g e t ,   s i d e n   p r o c e s s e n   b l e v   s t a r t e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 6 _ N A M E = D a t a g r a m m e r   s e n d t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   d a t a g r a m m e r ,   d e r   e r   s e n d t ,   s i d e n   p r o c e s s e n   b l e v   s t a r t e t . 
 
 
 
 O B J E C T _ 1 _ 0 0 8 _ N A M E =   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 0 8 _ H E L P =       . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 8 _ N A M E =     
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 8 _ H E L P =                                   . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 8 _ N A M E = B y t e     
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 8 _ H E L P =           b y t e                           .                                 T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 8 _ N A M E = B y t e     
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 8 _ H E L P =           b y t e                           .                                 T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 8 _ N A M E =       
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 8 _ H E L P =                           . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 8 _ N A M E =       
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 8 _ H E L P =                           . 
 
 
 
 O B J E C T _ 1 _ 0 0 B _ N A M E = . N E T   C L R   - v e r k k o y h t e y d e t 
 
 O B J E C T _ 1 _ 0 0 B _ H E L P = E i   o h j e t t a . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 B _ N A M E = M u o d o s t e t u t   y h t e y d e t 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 B _ H E L P = T  l l e   p r o s e s s i l l e   l u o t u j e n   v a s t a k e y h t e y k s i e n   k u m u l a t i i v i n e n   k o k o n a i s m   r    p r o s e s s i n   k  y n n i s t  m i s e n   j  l k e e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 B _ N A M E = V a s t a a n o t e t u t   t a v u t 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 B _ H E L P = K a i k k i e n   a v o i n t e n   v a s t a k e y h t e y k s i e n   v a s t a a n o t t a m i e n   t a v u j e n   k u m u l a t i i v i n e n   k o k o n a i s m   r    p r o s e s s i n   k  y n n i s t  m i s e n   j  l k e e n .   T  m    l u k u   s i s  l t     d a t a n   j a   k a i k k i   m u u t   k u i n   T C P / I P - p r o t o k o l l a n   m   r i t t  m  t   p r o t o k o l l a t i e d o t . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 B _ N A M E = L  h e t e t y t   t a v u t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 B _ H E L P = K a i k k i e n   a v o i n t e n   v a s t a k e y h t e y k s i e n   l  h e t t  m i e n   t a v u j e n   k u m u l a t i i v i n e n   k o k o n a i s m   r    p r o s e s s i n   k  y n n i s t  m i s e n   j  l k e e n .   T  m    l u k u   s i s  l t     d a t a n   j a   k a i k k i   m u u t   k u i n   T C P / I P - p r o t o k o l l a n   m   r i t t  m  t   p r o t o k o l l a t i e d o t . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 B _ N A M E = V a s t a a n o t e t u t   d a t a g r a m m i t 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 B _ H E L P = V a s t a a n o t e t t u j e n   d a t a g r a m m i p a k e t t i e n   k u m u l a t i i v i n e n   k o k o n a i s m   r    p r o s e s s i n   k  y n n i s t  m i s e n   j  l k e e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 B _ N A M E = L  h e t e t y t   d a t a g r a m m i t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 B _ H E L P = L  h e t e t t y j e n   d a t a g r a m m i p a k e t t i e n   k u m u l a t i i v i n e n   k o k o n a i s m   r    p r o s e s s i n   k  y n n i s t  m i s e n   j  l k e e n . 
 
 
 
 O B J E C T _ 1 _ 0 0 C _ N A M E = R  s e a u   C L R   . N E T 
 
 O B J E C T _ 1 _ 0 0 C _ H E L P = A i d e   n o n   d i s p o n i b l e . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 C _ N A M E = C o n n e x i o n s    t a b l i e s 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 C _ H E L P = N o m b r e   t o t a l   c u m u l a t i f   d e   c o n n e x i o n s   d e   s o c k e t    t a b l i e s   p o u r   c e   p r o c e s s u s   d e p u i s   s o n   d  m a r r a g e . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 C _ N A M E = O c t e t s   r e  u s 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 C _ H E L P = N o m b r e   t o t a l   c u m u l a t i f   d ' o c t e t s   r e  u s   s u r   t o u t e s   l e s   c o n n e x i o n s   d e   s o c k e t   o u v e r t e s   d e p u i s   l e   d  m a r r a g e   d u   p r o c e s s u s .   C e   n o m b r e   i n c l u t   l e s   d o n n  e s   e t   l e s    v e n t u e l l e s   i n f o r m a t i o n s   d e   p r o t o c o l e   q u i   n e   s o n t   p a s   d  f i n i e s   p a r   l e   p r o t o c o l e   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 C _ N A M E = O c t e t s   e n v o y  s 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 C _ H E L P = N o m b r e   t o t a l   c u m u l a t i f   d ' o c t e t s   e n v o y  s   s u r   t o u t e s   l e s   c o n n e x i o n s   d e   s o c k e t   o u v e r t e s   d e p u i s   l e   d  m a r r a g e   d u   p r o c e s s u s .   C e   n o m b r e   i n c l u t   l e s   d o n n  e s   e t   l e s    v e n t u e l l e s   i n f o r m a t i o n s   d e   p r o t o c o l e   q u i   n e   s o n t   p a s   d  f i n i e s   p a r   l e   p r o t o c o l e   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 C _ N A M E = D a t a g r a m m e s   r e  u s 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 C _ H E L P = N o m b r e   t o t a l   c u m u l a t i f   d e   p a q u e t s   d e   d a t a g r a m m e s   r e  u s   d e p u i s   l e   d  m a r r a g e   d u   p r o c e s s u s . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 C _ N A M E = D a t a g r a m m e s   e n v o y  s 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 C _ H E L P = N o m b r e   t o t a l   c u m u l a t i f   d e   p a q u e t s   d e   d a t a g r a m m e s   e n v o y  s   d e p u i s   l e   d  m a r r a g e   d u   p r o c e s s u s . 
 
 
 
 O B J E C T _ 1 _ 0 0 E _ N A M E = . N E T   C L R      h  l  z a t k e z e l  s 
 
 O B J E C T _ 1 _ 0 0 E _ H E L P = E h h e z   a   t  m  h o z   n e m   t a r t o z i k   s  g  . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 E _ N A M E = S i k e r e s e n   f e l  p  t e t t   k a p c s o l a t o k   s z  m a 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 E _ H E L P = A   f o l y a m a t   i n d  t  s a    t a   a z   e   f o l y a m a t h o z   l  t r e h o z o t t   s z o f t v e r c s a t o r n a - k a p c s o l a t o k    s s z e s  t e t t   s z  m a . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 E _ N A M E = F o g a d o t t   b  j t o k   s z  m a 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 E _ H E L P = A   f o l y a m a t   i n d  t  s a    t a   a z    s s z e s   n y i t o t t   s z o f t v e r c s a t o r n a - k a p c s o l a t o n   k e r e s z t  l   f o g a d o t t   b  j t o k    s s z e s  t e t t   s z  m a .   E b b e   b e l e  r t e n d Qk   a z   a d a t b  j t o k ,   v a l a m i n t   m i n d e n   o l y a n   p r o t o k o l l i n f o r m  c i  ,   a m e l y e t   a   T C P / I P   p r o t o k o l l   n e m   d e f i n i  l . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 E _ N A M E = K  l d  t t   b  j t o k   s z  m a 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 E _ H E L P = A   f o l y a m a t   i n d  t  s a    t a   a z    s s z e s   n y i t o t t   s z o f t v e r c s a t o r n a - k a p c s o l a t o n   k e r e s z t  l   e l k  l d  t t   b  j t o k    s s z e s  t e t t   s z  m a .   E b b e   b e l e  r t e n d Qk   a z   a d a t b  j t o k ,   v a l a m i n t   m i n d e n   o l y a n   p r o t o k o l l i n f o r m  c i  ,   a m e l y e t   a   T C P / I P   p r o t o k o l l   n e m   d e f i n i  l . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 E _ N A M E = F o g a d o t t   d a t a g r a m o k   s z  m a 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 E _ H E L P = A   f o l y a m a t   i n d  t  s a    t a   f o g a d o t t   d a t a g r a m c s o m a g o k    s s z e s  t e t t   s z  m a . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 E _ N A M E = K  l d  t t   d a t a g r a m o k   s z  m a 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 E _ H E L P = A   f o l y a m a t   i n d  t  s a    t a   e l k  l d  t t   d a t a g r a m c s o m a g o k    s s z e s  t e t t   s z  m a . 
 
 
 
 O B J E C T _ 1 _ 0 1 0 _ N A M E = R e t e   C L R   . N E T 
 
 O B J E C T _ 1 _ 0 1 0 _ H E L P = G u i d a   i n   l i n e a   n o n   d i s p o n i b i l e . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 0 _ N A M E = C o n n e s s i o n i   s t a b i l i t e 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   c o n n e s s i o n i   s o c k e t   s t a b i l i t e   p e r   i l   p r o c e s s o   d a   q u a n d o   i l   p r o c e s s o      s t a t o   a v v i a t o . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 0 _ N A M E = B y t e   r i c e v u t i 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   b y t e   r i c e v u t i   s u   t u t t e   l e   c o n n e s s i o n i   s o c k e t   a p e r t e   d a   q u a n d o   i l   p r o c e s s o      s t a t o   a v v i a t o .   Q u e s t o   n u m e r o   i n c l u d e   d a t i   e   i n f o r m a z i o n i   d i   p r o t o c o l l o   n o n   d e f i n i t e   d a l   p r o t o c o l l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 0 _ N A M E = B y t e   i n v i a t i 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   b y t e   i n v i a t i   s u   t u t t e   l e   c o n n e s s i o n i   s o c k e t   a p e r t e   d a   q u a n d o   i l   p r o c e s s o      s t a t o   a v v i a t o .   Q u e s t o   n u m e r o   i n c l u d e   d a t i   e   i n f o r m a z i o n i   d i   p r o t o c o l l o   n o n   d e f i n i t e   d a l   p r o t o c o l l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 0 _ N A M E = D a t a g r a m m i   r i c e v u t i 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   p a c c h e t t i   d i   d a t a g r a m m i   r i c e v u t i   d a   q u a n d o   i l   p r o c e s s o      s t a t o   a v v i a t o . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 0 _ N A M E = D a t a g r a m m i   i n v i a t i 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   p a c c h e t t i   d i   d a t a g r a m m i   i n v i a t i   d a   q u a n d o   i l   p r o c e s s o      s t a t o   a v v i a t o . 
 
 
 
 O B J E C T _ 1 _ 0 1 3 _ N A M E = . N E T   C L R - n e t w e r k 
 
 O B J E C T _ 1 _ 0 1 3 _ H E L P = H e l p   n i e t   b e s c h i k b a a r . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 3 _ N A M E = V e r b i n d i n g e n   t o t   s t a n d   g e b r a c h t 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 3 _ H E L P = H e t   c u m u l a t i e v e   a a n t a l   s o c k e t - v e r b i n d i n g e n   d a t   s i n d s   h e t   b e g i n   v a n   h e t   p r o c e s   v o o r   d i t   p r o c e s   t o t   s t a n d   i s   g e b r a c h t . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 3 _ N A M E = O n t v a n g e n   b y t e s 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 3 _ H E L P = H e t   c u m u l a t i e v e   a a n t a l   b y t e s   d a t   s i n d s   h e t   b e g i n   v a n   h e t   p r o c e s   v i a   a l l e   g e o p e n d e   s o c k e t - v e r b i n d i n g e n   i s   o n t v a n g e n .   D i t   a a n t a l   b e s t a a t   u i t   g e g e v e n s   e n   e v e n t u e l e   p r o t o c o l i n f o r m a t i e   d i e   n i e t   d o o r   h e t   T C P / I P - p r o t o c o l   i s   g e d e f i n i e e r d . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 3 _ N A M E = V e r z o n d e n   b y t e s 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 3 _ H E L P = H e t   c u m u l a t i e v e   a a n t a l   b y t e s   d a t   s i n d s   h e t   b e g i n   v a n   h e t   p r o c e s   v i a   a l l e   g e o p e n d e   s o c k e t - v e r b i n d i n g e n   i s   v e r z o n d e n .   D i t   a a n t a l   b e s t a a t   u i t   g e g e v e n s   e n   e v e n t u e l e   p r o t o c o l i n f o r m a t i e   d i e   n i e t   d o o r   h e t   T C P / I P - p r o t o c o l   i s   g e d e f i n i e e r d . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 3 _ N A M E = O n t v a n g e n   d a t a g r a m m e n 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 3 _ H E L P = H e t   c u m u l a t i e v e   a a n t a l   d a t a g r a m p a k k e t t e n   d a t   s i n d s   h e t   b e g i n   v a n   h e t   p r o c e s   i s   o n t v a n g e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 3 _ N A M E = V e r z o n d e n   d a t a g r a m m e n 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 3 _ H E L P = H e t   c u m u l a t i e v e   a a n t a l   d a t a g r a m p a k k e t t e n   d a t   s i n d s   h e t   b e g i n   v a n   h e t   p r o c e s   i s   v e r z o n d e n . 
 
 
 
 O B J E C T _ 1 _ 0 1 4 _ N A M E = . N E T   C L R - n e t t v e r k 
 
 O B J E C T _ 1 _ 0 1 4 _ H E L P = H j e l p   e r   i k k e   t i l g j e n g e l i g . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 4 _ N A M E = O p p r e t t e d e   t i l k o b l i n g e r 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 4 _ H E L P = D e t   a k k u m u l e r t e ,   t o t a l e   a n t a l l e t   s o c k e t - t i l k o b l i n g e r   s o m   e r   o p p r e t t e t   f o r   d e n n e   p r o s e s s e n   s i d e n   d e n   b l e   s t a r t e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 4 _ N A M E = B y t e   m o t t a t t 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 4 _ H E L P = D e t   a k k u m u l e r t e ,   t o t a l e   a n t a l l e t   b y t e   s o m   e r   m o t t a t t   v i a   a l l e    p n e   s o c k e t - t i l k o b l i n g e r   s i d e n   p r o s e s s e n   b l e   s t a r t e t .   D e t t e   a n t a l l e t   i n k l u d e r e r   d a t a   o g   p r o t o k o l l i n f o r m a s j o n   s o m   i k k e   e r   d e f i n e r t   a v   T C P / I P - p r o t o k o l l e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 4 _ N A M E = B y t e   s e n d t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 4 _ H E L P = D e t   a k k u m u l e r t e ,   t o t a l e   a n t a l l e t   b y t e   s o m   e r   s e n d t   v i a   a l l e    p n e   s o c k e t - t i l k o b l i n g e r   s i d e n   p r o s e s s e n   b l e   s t a r t e t .   D e t t e   a n t a l l e t   i n k l u d e r e r   d a t a   o g   p r o t o k o l l i n f o r m a s j o n   s o m   i k k e   e r   d e f i n e r t   a v   T C P / I P - p r o t o k o l l e n . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 4 _ N A M E = M o t t a t t e   d a t a g r a m m e r 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 4 _ H E L P = D e t   a k k u m u l e r t e ,   t o t a l e   a n t a l l e t   d a t a g r a m p a k k e r   s o m   e r   m o t t a t t   s i d e n   p r o s e s s e n   b l e   s t a r t e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 4 _ N A M E = S e n d t e   d a t a g r a m m e r 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 4 _ H E L P = D e t   a k k u m u l e r t e ,   t o t a l e   a n t a l l e t   d a t a g r a m p a k k e r   s o m   e r   s e n d t   s i d e n   p r o s e s s e n   s t a r t e t . 
 
 
 
 O B J E C T _ 1 _ 0 1 5 _ N A M E = O b s Bu g a   s i e c i   . N E T   C L R 
 
 O B J E C T _ 1 _ 0 1 5 _ H E L P = P o m o c   n i e   j e s t   d o s t p n a . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 5 _ N A M E = P o Bc z e n i a   u s t a n o w i o n e 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 5 _ H E L P = U s t a n o w i o n a   d l a   p r o c e s u   s k u m u l o w a n a   c a Bk o w i t a   l i c z b a   p o Bc z e D  z   g n i a z d a m i   n a w i z a n y c h   o d   c z a s u   u r u c h o m i e n i a   t e g o   p r o c e s u . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 5 _ N A M E = B a j t y   o d e b r a n e 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 5 _ H E L P = S k u m u l o w a n a   c a Bk o w i t a   l i c z b a   b a j t  w   o d e b r a n y c h   p r z e z   w s z y s t k i e   o t w a r t e   p o Bc z e n i a   z   g n i a z d a m i   o d   c z a s u   u r u c h o m i e n i a   t e g o   p r o c e s u .   W   t e j   w a r t o [c i   u w z g l d n i o n e   s   d a n e   o r a z   w s z y s t k i e   i n f o r m a c j e   o   p r o t o k o l e ,   k t  r e   n i e   s   z d e f i n i o w a n e   w   p r o t o k o l e   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 5 _ N A M E = B a j t y   w y s Ba n e 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 5 _ H E L P = S k u m u l o w a n a   c a Bk o w i t a   l i c z b a   b a j t  w   w y s Ba n y c h   p r z e z   w s z y s t k i e   o t w a r t e   p o Bc z e n i a   z   g n i a z d a m i   o d   c z a s u   u r u c h o m i e n i a   t e g o   p r o c e s u .   W   t e j   w a r t o [c i   u w z g l d n i o n e   s   d a n e   o r a z   w s z y s t k i e   i n f o r m a c j e   o   p r o t o k o l e ,   k t  r e   n i e   s   z d e f i n i o w a n e   w   p r o t o k o l e   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 5 _ N A M E = O d e b r a n e   d a t a g r a m y 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 5 _ H E L P = S k u m u l o w a n a   c a Bk o w i t a   l i c z b a   p a k i e t  w   d a t a g r a m  w   o d e b r a n y c h   o d   c z a s u   u r u c h o m i e n i a   t e g o   p r o c e s u . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 5 _ N A M E = W y s Ba n e   d a t a g r a m y 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 5 _ H E L P = S k u m u l o w a n a   c a Bk o w i t a   l i c z b a   p a k i e t  w   d a t a g r a m  w   w y s Ba n y c h   o d   c z a s u   u r u c h o m i e n i a   t e g o   p r o c e s u . 
 
 
 
 O B J E C T _ 1 _ 4 1 6 _ N A M E = S i s t e m a   d e   R e d e   d o   . N E T   C L R 
 
 O B J E C T _ 1 _ 4 1 6 _ H E L P = A j u d a   n  o   d i s p o n  v e l . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 4 1 6 _ N A M E = C o n e x  e s   E s t a b e l e c i d a s 
 
 D E V I C E _ C O U N T E R _ 1 _ 4 1 6 _ H E L P = N  m e r o   t o t a l   c u m u l a t i v o   d e   c o n e x  e s   d e   s o q u e t e   e s t a b e l e c i d a s   p a r a   e s s e   p r o c e s s o   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 4 1 6 _ N A M E = B y t e s   R e c e b i d o s 
 
 D E V I C E _ C O U N T E R _ 2 _ 4 1 6 _ H E L P = N  m e r o   t o t a l   c u m u l a t i v o   d e   b y t e s   r e c e b i d o s   e m   t o d a s   a s   c o n e x  e s   d e   s o q u e t e   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o .   E s s e   n  m e r o   i n c l u i   d a d o s   e   i n f o r m a   e s   d e   p r o t o c o l o   q u e   n  o   s  o   d e f i n i d a s   p e l o   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 4 1 6 _ N A M E = B y t e s   E n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 3 _ 4 1 6 _ H E L P = N  m e r o   t o t a l   c u m u l a t i v o   d e   b y t e s   e n v i a d o s   e m   t o d a s   a s   c o n e x  e s   d e   s o q u e t e   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o .   E s s e   n  m e r o   i n c l u i   d a d o s   e   i n f o r m a   e s   d e   p r o t o c o l o   q u e   n  o   s  o   d e f i n i d a s   p e l o   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 4 1 6 _ N A M E = D a t a g r a m a s   R e c e b i d o s 
 
 D E V I C E _ C O U N T E R _ 4 _ 4 1 6 _ H E L P = N  m e r o   t o t a l   c u m u l a t i v o   d e   p a c o t e s   d e   d a t a g r a m a   r e c e b i d o s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 4 1 6 _ N A M E = D a t a g r a m a s   E n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 5 _ 4 1 6 _ H E L P = N  m e r o   t o t a l   c u m u l a t i v o   d e   p a c o t e s   d e   d a t a g r a m a   e n v i a d o s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 O B J E C T _ 1 _ 8 1 6 _ N A M E = F u n c i o n a m e n t o   e m   r e d e   d e   . N E T   C L R 
 
 O B J E C T _ 1 _ 8 1 6 _ H E L P = N  o   e x i s t e   a j u d a   d i s p o n  v e l . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 8 1 6 _ N A M E = L i g a   e s   e s t a b e l e c i d a s 
 
 D E V I C E _ C O U N T E R _ 1 _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   c u m u l a t i v o   d e   l i g a   e s   d e   s o c k e t   e s t a b e l e c i d a s   p a r a   e s t e   p r o c e s s o   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 8 1 6 _ N A M E = B y t e s   r e c e b i d o s 
 
 D E V I C E _ C O U N T E R _ 2 _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   c u m u l a t i v o   d e   b y t e s   r e c e b i d o s   e m   t o d a s   a s   l i g a   e s   d e   s o c k e t   a b e r t a s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o .   E s t e   n  m e r o   i n c l u i   d a d o s   e   q u a i s q u e r   i n f o r m a   e s   d e   p r o t o c o l o   n  o   d e f i n i d a s   p e l o   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 8 1 6 _ N A M E = B y t e s   e n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 3 _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   c u m u l a t i v o   d e   b y t e s   e n v i a d o s   e m   t o d a s   a s   l i g a   e s   d e   s o c k e t   a b e r t a s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o .   E s t e   n  m e r o   i n c l u i   d a d o s   e   q u a i s q u e r   i n f o r m a   e s   d e   p r o t o c o l o   n  o   d e f i n i d a s   p e l o   p r o t o c o l o   T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 8 1 6 _ N A M E = D a t a g r a m a s   r e c e b i d o s 
 
 D E V I C E _ C O U N T E R _ 4 _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   c u m u l a t i v o   d e   p a c o t e s   d e   d a t a g r a m a s   r e c e b i d o s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 8 1 6 _ N A M E = D a t a g r a m a s   e n v i a d o s 
 
 D E V I C E _ C O U N T E R _ 5 _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   c u m u l a t i v o   d e   p a c o t e s   d e   d a t a g r a m a s   e n v i a d o s   d e s d e   q u e   o   p r o c e s s o   f o i   i n i c i a d o . 
 
 
 
 O B J E C T _ 1 _ 0 1 9 _ N A M E = @30=870F8O  A5B8  C L R   . N E T 
 
 O B J E C T _ 1 _ 0 1 9 _ H E L P = !?@02:0  =54>ABC?=0. 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 9 _ N A M E = #AB0=>2;5=>  A>548=5=89
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 9 _ H E L P = 1I55  A>2>:C?=>5  G8A;>  A>548=5=89  A>:5B>2,   CAB0=>2;5==KE  4;O  MB>3>  ?@>F5AA0  A  <><5=B0  53>  70?CA:0. 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 9 _ N A M E = >;CG5=>  109B
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 9 _ H E L P = 0:>?;5==>5  A>2>:C?=>5  G8A;>  109B,   ?>;CG5==KE  G5@57  2A5  >B:@KBK5  A>548=5=8O  A>:5B>2  A  <><5=B0  70?CA:0  ?@>F5AA0.   -B>  G8A;>  2:;NG05B  2  A51O  40==K5  8  2AN  >B=>AOICNAO  :  ?@>B>:>;0<  8=D>@<0F8N,   =5  >?@545;5==CN  2  ?@>B>:>;5  T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 9 _ N A M E = 5@540=>  109B
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 9 _ H E L P = 0:>?;5==>5  A>2>:C?=>5  G8A;>  109B,   ?5@540==KE  G5@57  2A5  >B:@KBK5  A>548=5=8O  A>:5B>2  A  <><5=B0  70?CA:0  ?@>F5AA0.   -B>  G8A;>  2:;NG05B  2  A51O  40==K5  8  2AN  >B=>AOICNAO  :  ?@>B>:>;0<  8=D>@<0F8N,   =5  >?@545;5==CN  2  ?@>B>:>;5  T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 9 _ N A M E = >;CG5=>  40B03@0<<
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 9 _ H E L P = 0:>?;5==>5  A>2>:C?=>5  G8A;>  40B03@0<<,   ?>;CG5==KE  A  <><5=B0  70?CA:0  ?@>F5AA0. 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 9 _ N A M E = 5@540=>  40B03@0<<
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 9 _ H E L P = 0:>?;5==>5  A>2>:C?=>5  G8A;>  40B03@0<<,   ?5@540==KE  A  <><5=B0  70?CA:0  ?@>F5AA0. 
 
 
 
 O B J E C T _ 1 _ 0 1 D _ N A M E = . N E T   C L R - n  t v e r k 
 
 O B J E C T _ 1 _ 0 1 D _ H E L P = I n g e n   h j  l p   f i n n s   t i l l g  n g l i g . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 D _ N A M E = B e f i n t l i g a   a n s l u t n i n g a r 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 D _ H E L P = D e t   s a m m a n l a g d a   a n t a l e t   s o c k e t a n s l u t n i n g a r   s o m   u p p r  t t a t s   f  r   d e n   h  r   p r o c e s s e n   s e d a n   d e n   s t a r t a d e s . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 D _ N A M E = M o t t a g n a   b y t e 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 D _ H E L P = D e t   s a m m a n l a g d a   a n t a l e t   b y t e   s o m   m o t t a g i t s    v e r   a l l a    p p n a   s o c k e t a n s l u t n i n g a r   s e d a n   p r o c e s s e n   s t a r t a d e s .   D e t   h  r   a n t a l e t   i n k l u d e r a r   d a t a   o c h   p r o t o k o l l i n f o r m a t i o n   s o m   i n t e   h a r   d e f i n i e r a t s   a v   T C P / I P - p r o t o k o l l e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 D _ N A M E = S k i c k a d e   b y t e 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 D _ H E L P = D e t   s a m m a n l a g d a   a n t a l e t   b y t e   s o m   s k i c k a t s    v e r   a l l a    p p n a   s o c k e t a n s l u t n i n g a r   s e d a n   p r o c e s s e n   s t a r t a d e s .   D e t   h  r   a n t a l e t   i n k l u d e r a r   d a t a   o c h   p r o t o k o l l i n f o r m a t i o n   s o m   i n t e   h a r   d e f i n i e r a t s   a v   T C P / I P - p r o t o k o l l e t . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 D _ N A M E = M o t t a g n a   d a t a g r a m 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 D _ H E L P = D e t   s a m m a n l a g d a   a n t a l e t   d a t a g r a m p a k e t   s o m   m o t t a g i t s   s e d a n   p r o c e s s e n   s t a r t a d e s . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 D _ N A M E = S k i c k a d e   d a t a g r a m 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 D _ H E L P = D e t   s a m m a n l a g d a   a n t a l e t   d a t a g r a m p a k e t   s o m   s k i c k a t s   s e d a n   p r o c e s s e n   s t a r t a d e s . 
 
 
 
 O B J E C T _ 1 _ 0 1 F _ N A M E = . N E T   C L R   A   O l u _t u r m a 
 
 O B J E C T _ 1 _ 0 1 F _ H E L P = Y a r d 1m   k u l l a n 1l a m 1y o r . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 F _ N A M E = K u r u l a n   B a l a n t 1  S a y 1s 1
 
 D E V I C E _ C O U N T E R _ 1 _ 0 1 F _ H E L P = 0_l e m   b a _l a t 1l d 1k t a n   s o n r a   b u   i _l e m   i  i n   k u r u l a n   y u v a   b a l a n t 1l a r 1n 1n   k  m  l a t i f   t o p l a m   s a y 1s 1. 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 F _ N A M E = A l 1n a n   B a y t 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 1 F _ H E L P = 0_l e m   b a _l a t 1l d 1k t a n   s o n r a   a  1k   o l a n   t  m   y u v a   b a l a n t 1l a r 1   z e r i n d e n   a l 1n a n   k  m  l a t i f   t o p l a m   s a y 1s 1.   B u   s a y 1,   T C P / I P   i l e t i _i m   k u r a l 1  t a r a f 1n d a n   t a n 1m l a n m a y a n   v e r i   v e   i l e t i _i m   k u r a l 1  b i l g i l e r i n i   i  e r i r . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 F _ N A M E = G  n d e r i l e n   B a y t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 1 F _ H E L P = 0_l e m   b a _l a t 1l d 1k t a n   s o n r a   a  1k   o l a n   t  m   y u v a   b a l a n t 1l a r 1   z e r i n d e n   g  n d e r i l e n   k  m  l a t i f   t o p l a m   s a y 1s 1.   B u   s a y 1,   T C P / I P   i l e t i _i m   k u r a l 1  t a r a f 1n d a n   t a n 1m l a n m a y a n   v e r i   v e   i l e t i _i m   k u r a l 1  b i l g i l e r i n i   i  e r i r . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 F _ N A M E = A l 1n a n   D a t a g r a m   S a y 1s 1
 
 D E V I C E _ C O U N T E R _ 4 _ 0 1 F _ H E L P = 0_l e m   b a _l a t 1l d 1k t a n   s o n r a   a l 1n a n   d a t a g r a m   p a k e t l e r i n i n   k  m  l a t i f   t o p l a m   s a y 1s 1. 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 F _ N A M E = G  n d e r i l e n   D a t a g r a m   S a y 1s 1
 
 D E V I C E _ C O U N T E R _ 5 _ 0 1 F _ H E L P = 0_l e m   b a _l a t 1l d 1k t a n   s o n r a   g  n d e r i l e n   d a t a g r a m   p a k e t l e r i n i n   k  m  l a t i f   t o p l a m   s a y 1s 1. 
 
 
 
 O B J E C T _ 1 _ 0 0 1 _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 1 _ H E L P = 'D*9DJE'*  :J1  E*HA1). 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 1 _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 1 _ H E L P = %,E'DJ  'D9//  'D*1'CEJ  DE".0  'D*H5JD  'D*J  *E  *#3J3G'  DG0G  'D9EDJ)  EF0  (/!  'D9EDJ). 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 1 _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 1 _ H E L P = %,E'DJ  'D9//  'D*1'CEJ  DH-/'*  'D('J*  'D*J  *E  *DBJG'  9(1  C'A)  E".0  'D*H5JD  'DEA*H-)  EF0  (/!  'D9EDJ).   J*6EF  G0'  'D9//  (J'F'*  H#J  E9DHE'*  .'5)  ('D(1H*HCHD  DE  J*E  *91JAG'  EF  B(D  (1H*HCHD  T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 1 _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 1 _ H E L P = %,E'DJ  'D9//  'D*1'CEJ  DH-/'*  'D('J*  'D*J  *E  %13'DG'  9(1  C'A)  E".0  'D*H5JD  'DEA*H-)  EF0  (/!  'D9EDJ).   J*6EF  G0'  'D9//  (J'F'*  H#J  E9DHE'*  .'5)  ('D(1H*HCHD  DE  J*E  *91JAG'  EF  B(D  (1H*HCHD  T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 1 _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 1 _ H E L P = %,E'DJ  'D9//  'D*1'CEJ  D-2E  C*D  'D(J'F'*  'D*J  *E  *DBJG'  EF0  (/!  'D9EDJ). 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 1 _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 1 _ H E L P = %,E'DJ  'D9//  'D*1'CEJ  D-2E  C*D  'D(J'F'*  'D*J  *E  %13'DG'  EF0  (/!  'D9EDJ). 
 
 
 
 O B J E C T _ 1 _ 0 0 D _ N A M E = . N E T   C L R   N e t w o r k i n g 
 
 O B J E C T _ 1 _ 0 0 D _ H E L P =     . 
 
 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 D _ N A M E = C o n n e c t i o n s   E s t a b l i s h e d 
 
 D E V I C E _ C O U N T E R _ 1 _ 0 0 D _ H E L P =         S o c k e t               . 
 
 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 D _ N A M E = B y t e s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 2 _ 0 0 D _ H E L P =                 -   S o c k e t       .                         T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 D _ N A M E = B y t e s   S e n t 
 
 D E V I C E _ C O U N T E R _ 3 _ 0 0 D _ H E L P =                 -   S o c k e t       .                         T C P / I P . 
 
 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 D _ N A M E = D a t a g r a m s   R e c e i v e d 
 
 D E V I C E _ C O U N T E R _ 4 _ 0 0 D _ H E L P =                 . 
 
 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 D _ N A M E = D a t a g r a m s   S e n t 
 
 D E V I C E _ C O U N T E R _ 5 _ 0 0 D _ H E L P =                 . 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\runtimetools\installutil\installutil.txt ===
; Resources for System.Configuration.Install component
; Copyright (c) 2000 Microsoft Corporation


[strings]

; string constants

InstallUtilSignOnMessage=Microsoft (R) .NET Framework Installation utility Version {0}\r\n{1}\r\n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\runtimetools\licensecompiler\sr.txt ===
Logo=Microsoft (R) .NET License Compiler \n[Microsoft .Net Framework, Version {0}]\n{1}\n\n
Usage=Generates a .NET Licenses file and adds it to the manifest of the given assembly\nUsage:\n    lc /target:TargetAssembly /complist:filename [/outdir:path] [/i:modules] [/v] [/nologo]\n\nOptions:\n    /target:<str>              Target assembly for the generated licenses file\n    /complist:<str>            Licensed component list file\n    /outdir:<str>              Output directory for the generated licenses file\n    /i:<str>                   Specify modules to load\n    /v                         Verbose output\n    /nologo                    Suppress the display of the startup banner\n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\services\config\system.configuration.install.txt ===
; Resources for System.Configuration.Install component
; Copyright (c) 2000 Microsoft Corporation

[strings]


; Exceptions messages

InstallAbort=Aborting installation for {0}.
InstallException=An exception occurred while trying to find the installers in the {0} assembly.
InstallLogContent=See the contents of the log file for the {0} assembly's progress.
InstallFileLocation=The file is located at {0}.
InstallLogParameters=Affected parameters are:
InstallLogNone=(none)
InstallNoPublicInstallers=No public installers with the RunInstallerAttribute.Yes attribute could be found in the {0} assembly.
InstallFileNotFound=The {0} file could not be found.
InstallNoInstallerTypes=Unable to get installer types in the {0} assembly.
InstallCannotCreateInstance=Unable to create an instance of the {0} installer type.
InstallBadParent=An installer's parent cannot be equal to itself.
InstallRecursiveParent=You cannot set an installer's Parent to an installer that creates a circular dependency.
InstallNullParameter=The {0} parameter cannot be null.
InstallDictionaryMissingValues=The {0} dictionary does not contain the expected values and might have been corrupted.
InstallDictionaryCorrupted=The {0} dictionary contains inconsistent data and might have been corrupted.
InstallCommitException=An exception occurred during the Commit phase of the installation. This exception will be ignored and installation will continue. However, the application might not function correctly after installation is complete.
InstallRollbackException=An exception occurred during the Rollback phase of the installation. This exception will be ignored and the rollback will continue. However, the machine might not fully revert to its initial state after the rollback is complete.
InstallUninstallException=An exception occurred while uninstalling. This exception will be ignored and the uninstall will continue. However, the application might not be fully uninstalled after the uninstall is complete.
InstallEventException=An exception occurred in the {0} event handler of {1}.
InstallInstallerNotFound=The given item could not be found in the collection.
InstallSeverityError=Error!
InstallSeverityWarning=Warning!
InstallLogInner=The inner exception {0} was thrown with the following error message: {1}.
InstallLogError=An exception occurred in the {1} event handler of {2}.
InstallLogCommitException=An exception occurred during the Commit phase of the {0} installer.
InstallLogRollbackException=An exception occurred during the Rollback phase of the {0} installer.
InstallLogUninstallException=An exception occurred during the uninstallation of the {0} installer.
InstallRollback=The installation failed, and the rollback has been performed.
InstallAssemblyHelp=Options for installing any assembly:\r\n/AssemblyName\r\n The assembly parameter will be interpreted as an assembly name.\r\n The default is to interpret the assembly parameter a filename.\r\n\r\n/LogFile=[filename]\r\n File to write progress to. If empty, do not write log. Default\r\n is <assemblyname>.InstallLog\r\n\r\n/LogToConsole={true|false}\r\n If false, suppresses output to the console.\r\n\r\n/ShowCallStack\r\n If an exception occurs at any point during installation, the call\r\n stack will be printed to the log.
InstallActivityRollingBack=Rolling back assembly '{0}'.
InstallActivityUninstalling=Uninstalling assembly '{0}'.
InstallActivityCommitting=Committing assembly '{0}'.
InstallActivityInstalling=Installing assembly '{0}'.
InstallInfoTransacted=Running a transacted installation.
InstallInfoBeginInstall=Beginning the Install phase of the installation.
InstallInfoException=An exception occurred during the Install phase.
InstallInfoBeginRollback=The Rollback phase of the installation is beginning.
InstallInfoRollbackDone=The Rollback phase completed successfully.
InstallInfoBeginCommit=The Install phase completed successfully, and the Commit phase is beginning.
InstallInfoCommitDone=The Commit phase completed successfully.
InstallInfoTransactedDone=The transacted install has completed.
InstallInfoBeginUninstall=The uninstall is beginning.
InstallInfoUninstallDone=The uninstall has completed.
InstallSavedStateFileCorruptedWarning=The file containing the saved state for the {0} assembly, located at {1}, could not be read, and the file might have been corrupted. The uninstall will continue without the saved information.
IncompleteEventLog=Log and Source properties must be set on the Eventlog to create an installer.
IncompletePerformanceCounter=CategoryName property must be set on the PerformanceCounter to create an installer.
NotCustomPerformanceCategory=You cannot create an installer for a system or a nonextensible PerformanceCategory.
RemovingInstallState=Remove InstallState file because there are no installers.
InstallUnableDeleteFile=Unable to delete file {0}.
InstallInitializeException=Exception occurred while initializing the installation:\r\n{0}: {1}.
InstallFileDoesntExist=File {0} does not exist.
InstallFileDoesntExistCommandLine=File {0} does not exist. If this parameter is used as an installer option, the format must be /key=[value].
WinNTRequired=Feature requires Windows NT.

; string constants

WrappedExceptionSource=Wrapped Exception from System.Configuration.Install.Installer

InvalidProperty=Invalid value {1} for property {0}
NotAPerformanceCounter=PerformanceCounterInstaller can only be used to install objects of type PerformanceCounter.
NewCategory=PerformanceCounterInstaller can only install multiple counters in the same category. To install this counter, create a new instance of PerformanceCounterInstaller.
RestoringPerformanceCounter=Restoring performance counter data to previous state for performance counter category {0}.
CreatingPerformanceCounter=Creating performance counter category {0}.
RemovingPerformanceCounter=Removing performance counter category {0}.
PCCategoryName=Category name of the performance counter object.
PCCounterName=Counter name of the performance counter object.
PCInstanceName=Instance name of the performance counter object.
PCMachineName=Specifies the machine from where to read the performance data.
PCI_CategoryHelp=Help information about this category.
PCI_Counters=The set of counters to install with this category.
PCI_UninstallAction=Determines behavior of the installer at uninstall time.
NotAnEventLog=EventLogInstaller cannot copy properties from components that are not EventLogs.
CreatingEventLog=Creating EventLog source {0} in log {1}...
RestoringEventLog=Restoring event log to previous state for source {0}.
RemovingEventLog=Removing EventLog source {0}.
DeletingEventLog=Deleting event log {0}.
LocalSourceNotRegisteredWarning=Warning: The source {0} is not registered on the local machine.
InstallRollbackNtRun=Running Rollback phase of non-transacted install.
InstallCommitNtRun=Running Commit phase of non-transacted install.
InstallUninstallNtRun=Running Uninstall phase of non-transacted install
InstallInstallNtRun=Running Install phase of non-transacted install

InstallHelpMessageStart=Usage: InstallUtil [/u | /uninstall] [option [...]] assembly [[option [...]] assembly] [...]]\r\n\r\nInstallUtil executes the installers in each given assembly.\r\nIf the /u or /uninstall switch is specified, it uninstalls\r\nthe assemblies, otherwise it installs them. Unlike other\r\noptions, /u applies to all assemblies, regardless of where it\r\nappears on the command line.\r\n\r\nInstallation is done in a transactioned way: If one of the\r\nassemblies fails to install, the installations of all other\r\nassemblies are rolled back. Uninstall is not transactioned.\r\n\r\nOptions take the form /switch=[value]. Any option that occurs\r\nbefore the name of an assembly will apply to that assembly's\r\ninstallation. Options are cumulative but overridable - options\r\nspecified for one assembly will apply to the next as well unless\r\nthe option is specified with a new value. The default for all\r\noptions is empty or false unless otherwise specified.\r\n\r\nOptions recognized:

InstallHelpMessageEnd=\r\nIndividual installers used within an assembly may recognize other\r\noptions. To learn about these options, run InstallUtil with the paths\r\nof the assemblies on the command line along with the /? or /help option.\r\n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\services\ds\system.directoryservices.txt ===
; Resources for System.DirectoryServices component
; Copyright (c) 2000 Microsoft Corporation

[strings]

; Exceptions messages

DSDoesNotImplementIADs=The value provided for adsObject does not implement IADs.
DSNoObject=The object located at the path {0} could not be retrieved.
DSNotAContainer=The Active Directory object located at the path {0} is not a container.
DSCannotDelete=The object cannot be deleted.
DSNotInCollection=The given child could not be found in the collection.
DSNoCurrentChild=There is no current child.
DSCannotBeIndexed=The entry's properties cannot be indexed by number.
DSCannotCount=The directory cannot report the number of properties.
DSCannotGetKeys=Directory cannot report the names of the available properties.
DSCannotEmunerate=The entry's properties cannot be enumerated. Consider using the entry's schema to determine what properties are available.
DSNoCurrentProperty=There is no current property.
DSNoCurrentValue=No current value is available.
DSBadPageSize=The PageSize must be greater than 0, or set to 0 for no paging.
DSBadSizeLimit=SizeLimit must be greater than or equal to zero.
DSSearchUnsupported=The provider does not support searching and cannot search {0}.
DSNoCurrentEntry=There is no current entry.
DSInvalidSearchFilter=The {0} search filter is invalid.
DSPropertyNotFound=The property {0} could not be found in the search results. The property might not exist on the found object, or it might not have been requested in the search query through DirectorySearcher.PropertiesToLoad.
DSConvertFailed=The ADSVALUE with the union value {0} cannot be converted to the ADSTYPEENUM type {1}.
DSConvertTypeInvalid=ADSVALUE type is invalid.
DSAdsvalueTypeNYI=Handling of this ADSVALUE type is not yet implemented (type = {0}).
DSAdsiNotInstalled=Active Directory Client has not been installed on this computer.
DSNotSet=[Not Set]
DSVersion=Active Directory Service Interface (ADSI) versions prior to 5.0 must have a value for SearchRootWith. Your ADSI version is {0}.
DSEnumerator=Enumerator is positioned before the first item or after the last item.
DSPathIsNotSet=Path property has not been set.
DSPropertySetSupported=New PropertyValueCollection cannot be set into a DirectoryEntry PropertyCollection.
DSAddNotSupported=New properties cannot be added to a DirectoryEntry PropertyCollection.
DSClearNotSupported=DirectoryEntry PropertyCollection cannot be cleared.
DSRemoveNotSupported=Properties cannot be removed from a DirectoryEntry PropertyCollection.
DSSearchPreferencesNotAccepted=The value for the property {0} could not be set.

;DescriptionAttribute

DSChildren=The child entries of this node.
DSGuid=The globally unique identifier of this entry.
DSName=The name of the object as named with the service.
DSNativeObject=The native ADSI object.
DSParent=The parent entry of this node.
DSPassword=The password to use when authenticating the client.
DSPath=The path of this DirectoryEntry.
DSProperties=The properties of this entry.
DSSchemaClassName=The name of the schema for this entry.
DSSchemaEntry=The DirectoryEntry that holds this entry's schema.
DSUsePropertyCache=Whether to use the ADSI property cache.
DSUsername=The username to use when authenticating the client.
DSAuthenticationType=Specifies authentication options used in ADSI for binding to directory service objects.
DSNativeGuid=The GUID text returned by the provider for this directory entry.
DSCacheResults=Indicates whether the result should be cached on the client machine.
DSClientTimeout=The maximum time that the client waits for the server to return results.
DSPropertyNamesOnly=Indicates whether the search should retrieve only the names of requested properties or their names and values.
DSFilter=Specifies the search criteria for this search.
DSPageSize=Sets the page size in a paged search.
DSPropertiesToLoad=The set of properties retrieved during the search.
DSReferralChasing=How referrals are chased.
DSSearchScope=The scope of the search that should be observed by the server.
DSServerPageTimeLimit=The time limit that the server should observe for a page results (as opposed to the time limit for the entire search).
DSServerTimeLimit=The maximum amount of time the server should spend searching.
DSSizeLimit=The maximum number of objects that the server should return in a search.
DSSearchRoot=The node in the Active Directory hierarchy at which the search will start.
DSSort=The property on which the results should be sorted.
DSSortName=The property name on which the results should be sorted.
DSSortDirection=The direction in which the results should be sorted.
DSUnknown=Unknown error (0x{0})
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\services\messaging\system.messaging.txt ===
; Resources for System.Messaging component
; Copyright (c) 2000 Microsoft Corporation

[strings]

; Exceptions messages

MSMQNotInstalled=Message Queuing has not been installed on this computer.
MSMQInfoNotSupported=Browsing private queues is not supported by the Microsoft Message Queuing (MSMQ) runtime installed on this computer.
MissingProperty=Property {0} was not retrieved when receiving the message. Ensure that the PropertyFilter is set correctly.
NotAcknowledgement=Cannot retrieve property because the message is not an acknowledgment message.
InvalidId=Identifier is not in the incorrect format.
ArrivedTimeNotSet=Arrived time is undefined for this message. This message was not created by a call to the Receive method.
AuthenticationNotSet=Cannot determine authentication for this message. This message was not created by a call to the Receive method.
DestinationQueueNotSet=Destination queue is not defined for this message. The message was not created by a call to the Receive method.
IdNotSet=Unique identifier for this message is not defined. The message was not created by a call to the Receive method.
MessageTypeNotSet=Type is not defined for this message. The message was not created by a call to the Receive method.
SenderIdNotAttached=Sender identifier has not been attached to the message.
SenderIdNotSet=Sender identifier is not defined for this message. The message was not created by a call to the Receive method.
SentTimeNotSet=Sent time is not defined for this message. The message was not created by a call to the Receive method.
SourceMachineNotSet=Source computer is not defined for this message. The message was not created by a call to the Receive method.
VersionNotSet=Message Queuing version is not defined for this message. The message was not created by a call to the Receive method.
PathNotSet=Operation failed because the path was not set.
CriteriaNotDefined=Criteria property has not been defined.
TypeNotSupported=Serializer does not support the type.
InvalidQueuePathToCreate=Cannot create a queue with the path {0}.
PathSyntax=Path syntax is invalid.
InvalidLabel=Cannot find queue with label {0}.
AmbiguousLabel=Label "{0}" references more than one queue. Set the path for the desired queue.
LongQueueName=Queue name is too long. Size of queue name cannot exceed 255 characters.
TransactionStarted=Cannot start a transaction while a pending transaction exists.
TransactionNotStarted=Cannot commit or roll back transaction because BeginTransaction has not been called.
CoertionType=Cannot specify coercion type for serialized objects using this formatter.
InvalidTypeDeserialization=Cannot deserialize the message passed as an argument. Cannot recognize the serialization format.
InvalidTypeSerialization=Cannot serialize the object because its type is not supported.
TypeListMissing=Target type array is missing. The target type array must be set in order to deserialize the XML-formatted message.
FormatterMissing=Cannot find a formatter capable of reading this message.
QueueExistsError=Cannot determine whether a queue with the specified format name exists.
AsyncResultInvalid=IAsyncResult interface passed is not valid because it was not created as a result of an asynchronous request on this object.
NotAMessageQueue=MessageQueueInstaller cannot install the component. MessageQueue installer can only install MessageQueue components.
NoCurrentMessageQueue=Cursor is not currently pointing to a MessageQueue instance. It is located either before the first or after the last queue in the enumeration.
NoCurrentMessage=Cursor is not currently pointing to a Message instance. It is located either before the first or after the last message in the enumeration.
TooManyColumns=Column Count limit exceeded ({0}).
PropertyAddFailed=Property has not been added.
PropertyOverflow=Property overflow.
MessageNotFound=Message requested was not found in the queue specified.
DefaultSizeError=Size is invalid. It must be greater than or equal to zero.
IncompleteMQ=Path property must be set to create an installer for this MessageQueue.
PermissionPathOrCriteria=Path, FormatName, MachineName, Label, or Category cannot be set simultaneously as a single permission entry criteria.
PermissionAllNull=At least one of the following properties (Path, FormatName, MachineName, Label, or Category) must be set as permission entry criteria.
InvalidProperty=Invalid value {1} for property {0}.
InvalidParameter=Invalid value {1} for parameter {0}.
InvalidXmlFormat=XML format is invalid.
UnknownError=Error 0x{0} is unknown.
CouldntResolve=Could not resolve name {0} (error = {1} ).
CouldntResolveName=Could not resolve name {0}.
IncorrectNumberOfBytes=Wrote an incorrect number of bytes.
NotImplemented=Feature is not implemented.
InvalidDateValue=Date is invalid. It must be between {0} and {1}.
StoredObjectsNotSupported=Stored object format is not supported by ActiveXMessageFormatter.
PathNameDns=DNS path name for the queue specified is not available.
InvalidTrusteeName=Entry in the access control list contains a trustee with an invalid name.
InvalidTrustee=Trustee property of an entry in the access control list is null.
WinNTRequired=Feature requires Windows NT.

; Log entries

ClearingQueue=Clearing any messages from queue {0}.
CreatingQueue=Creating queue {0}.
RestoringQueue=Restoring message queue {0} to previous state.
RemovingQueue=Removing message queue {0}.
DeletingQueue=Deleting queue {0}.

; DescriptionAttribute

MsgTopObjectFormat=Determines how the top (root) object of a graph is laid out in the serialized stream.
MsgTypeFormat=Determines how type descriptions are laid out in the serialized stream.
MsgAcknowledgeType=Specifies the type of acknowledgment messages the system posts (in the administration queue) and when acknowledgments are returned.
MsgAdministrationQueue=Specifies the administration queue used for system-generated acknowledgment.
MsgAppSpecific=Specifies application-generated information such as single integer values or application-defined message classes.
MsgAttachSenderId=Indicates if the SenderId is to be or has been attached to the message.
MsgExtension=Provides a place to put additional application-defined information that is associated with the message.
MsgHashAlgorithm=Identifies the hashing algorithm MSMQ uses when authenticating messages.
MsgLabel=Specifies the label of the message.
MsgPriority=Message priority affects how MSMQ handles the message while it is in route, as well as where the message is placed in the queue.
MsgRecoverable=The message will be delivered, even if a computer crashes while the message is en-route to the queue.
MsgResponseQueue=Specifies the queue to which application-generated response messages are returned.
MsgTimeToBeReceived=Specifies the total time (in seconds) the message is allowed to live. Use "Infinity" to set the maximum value.
MsgTimeToReachQueue=Specifies a time limit (in seconds) for the message to reach the queue. Use "Infinity" to set the maximum value.
MsgTransactionStatusQueue=Identifies the transaction status queue on the source computer.
MsgUseAuthentication=Specifies if the message needs to be authenticated.
MsgUseDeadLetterQueue=Specifies if a copy of the message should be sent to a dead-letter queue.
MsgUseEncryption=Set this property to have MSMQ encrypt a private message.
MsgUseJournalQueue=Specifies if a copy of the message should be kept in a machine journal (on the originating machine).
MsgUseTracing=Specifies if report messages are sent when tracing a message.
MsgAcknowledgement=Gets the classification of acknowledgment that this message represents.
MsgArrivedTime=Indicates when the message arrived at the queue.
MsgAuthenticated=Used by the receiving application when trying to determine if authentication was requested. If authentication was requested and the message is in the queue, then the message was authenticated.
MsgAuthenticationProviderName=Specifies the name of the cryptographic provider used to generate the digital signature of the message.
MsgAuthenticationProviderType=Specifies the type of cryptographic provider used to generate the digital signature of the message.
MsgBodyStream=Represents the information included in the body of the message.
MsgBodyType=Indicates the type of body the message contains
MsgConnectorType=Whenever a message is passed by a connector application, the connector type is required so that the sending and receiving applications know how to interpret the security and acknowledgment properties of the messages. When sending application-encrypted messages, this property tells the MSMQ runtime to use the symmetric key.
MsgCorrelationId=Provides an application-defined identifier that the receiving application can use to sort messages.
MsgDestinationQueue=Identifies the original destination queue of a message.
MsgDestinationSymmetricKey=Specifies the symmetric key used to encrypt messages. Is required when you send application-encrypted messages.
MsgDigitalSignature=Specifies the digital signature used to authenticate the message.
MsgEncryptionAlgorithm=Specifies the encryption algorithm used to encrypt the message body of a private message.
MsgId=Indicates the MSMQ-generated identifier of the message.
MsgIsFirstInTransaction=It is used by receiving applications to verify that a message was the first message sent in a single transaction to a single queue.
MsgIsLastInTransaction=It is used by receiving applications to verify that a message was the last message sent from a single transaction to a single queue.
MsgMessageType=A message can be a normal MSMQ message, a positive or negative (arrival and read) acknowledgment message, or a report message.
MsgSenderCertificate=Specifies the security certificate used to authenticate messages.
MsgSenderId=This property is set by MSMQ, and is used primarily by the receiving Queue Manager when authenticating a message.
MsgSenderVersion=Specifies the version of MSMQ used to send the message.
MsgSentTime=Indicates the date and time that the message was sent by the source Queue Manager.
MsgSourceMachine=Specifies the computer where the message originated.
MsgTransactionId=It is used by receiving applications to verify that a message was sent from a specific transaction.
MsgBody=Represents the information included in the body of the message.
MsgDefaultBodySize=The default body buffer size to create, when the message is received.
MsgDefaultExtensionSize=The default extension buffer size to create, when the message is received.
MsgDefaultLabelSize=The default label buffer size to create, when the message is received.

MQ_Authenticate=Specifies whether or not the queue only accepts authenticated messages.
MQ_BasePriority=Used for routing the queue's messages over the network.
MQ_CanRead=Indicates if the queue has read permission.
MQ_CanWrite=Indicates if the queue has write permission.
MQ_Category=Allows applications to categorize their queues according to how they are used.
MQ_CreateTime=Indicates the time and date when the queue was created.
MQ_DefaultPropertiesToSend=Specifies the properties that are going to be used by default when sending messages to the queue referenced by this object.
MQ_DenySharedReceive=If true, no other instance of this object will be able to receive messages.
MQ_EncryptionRequired=Specifies whether or not the queue only accepts non-private (clear) messages.
MQ_FormatName=Specifies a unique name for the queue generated by MSMQ when it is created.
MQ_Formatter=This is the formatter that will be used when an object is written to or read from the body.
MQ_GuidId=Identifies a specific public queue.
MQ_Label=Specifies a description of the queue.
MQ_LastModifyTime=Indicates the last time the properties of a queue were modified.
MQ_MachineName=Specifies the machine where the queue referenced by this object is located.
MQ_MaximumJournalSize=Specifies the maximum size (in kilobytes) of the journal queue. Use "Infinity" to set the maximum value.
MQ_MaximumQueueSize=Specifies the maximum size (in kilobytes) of the queue. Use "Infinity" to set the maximum value.
MQ_MessageReadPropertyFilter=Specifies the property filter used by this queue to receive messages.
MQ_Path=Specifies the location of the queue that will be referenced by this object.
MQ_QueueName=Specifies the friendly name that identifies the queue referenced by this object.
MQ_ReadHandle=The native handle used to receive messages from the message queue.
MQ_SynchronizingObject=The object used to marshal the event handler calls issued as a result of a BeginReceive or BeginPeek request.
MQ_Transactional=If a queue is transactional, it can only accept messages that are sent as part of a transaction.
MQ_UseJournalQueue=Specifies if messages retrieved from the queue are also copied to its journal queue.
MQ_WriteHandle=The native handle used to send messages to the message queue.
MQ_PeekCompleted=This event occurs when a message is read without being removed from the queue using the BeginPeek method.
MQ_ReceiveCompleted=This event occurs when a message is removed from the queue using the BeginReceive method.

XmlMsgTargetTypeNames=Specifies the set of possible types that will be deserialized by the formatter from the message provided.
XmlMsgTargetTypes=Specifies the set of possible types that will be deserialized by the formatter from the message provided.

;Strings for QueueValueEditor

NotSet=[Not Set]
RefByFormatName=Format Name
RefByPath=Path
RefByLabel=Label
ReferenceLabel=&Reference Queue By:
QueueOk=OK
QueueHelp=&Help
SelectLabel=&Select message queue:
MessageQueueBrowser=Message Queue Browser
QueueNetworkProblems=Cannot access MessageQueue network. Please make sure that the message queuing service is available in your system.
ActiveXFormatter=ActiveX Formatter
XmlFormatter=Xml Formatter
InfiniteValue=Infinity
toStringNone=(none)
PleaseWait=Please wait while locating machines.
CancelCaption=Cancel


; Server Runtime Strings

C00E0025=Access to Message Queuing system is denied.
C00E0035=Security context is unrecognized.
C00E001A=Buffer supplied to MQReceiveMessage for reading the message body was too small. The message cannot be removed from the queue, and the message body was truncated to fit the buffer when it was copied to the buffer.
C00E0024=Security credentials cannot be verified because the Remote Procedure Call (RPC) server cannot reproduce the client application.
C00E0033=Encryption operations are not supported by the computer.
C00E002D=Internal Message Queuing certificate is corrupted.
C00E0068=Initialization file for queue {1} in LQS was deleted because it was corrupted.
C00E0030=Cryptographic function has failed.
C00E0037=Cannot retrieve user account information.
C00E0036=Cannot retrieve SID information from the thread token.
C00E0048=Connected Network is in use and cannot be deleted.
C00E0067=Message Queuing server has reached the maximum number of dependent clients it can serve.
C00E004C=Failure to connect to MS DTC.
C00E0043=Internal DS error has occurred.
C00E0042=DS is full.
C00E001F=Format name buffer supplied to the API was too small to fit the format name.
C00E005B=Invalid context Parameter(MQLocateBegin).
C00E001C=MQ_ACTION_PEEK_NEXT specified to MQReceiveMessage cannot be used with the current cursor position.
C00E001E=Format name is invalid.
C00E0038=MQCOLUMNS parameter is invalid.
C00E0041=Invalid MQQMPROPS parameter. It is either null or has zero properties.
C00E003D=Invalid MQQUEUEPROPS parameter. It is either null or has zero properties.
C00E0064=Foreign message queuing system does not support the operation.
C00E003B=Invalid property buffer size.
C00E0018=Invalid property value.
C00E0019=Invalid VARTYPE value.
C00E0039=Invalid propid value.
C00E0014=Invalid queue path name.
C00E003A=Invalid relation value in restriction.
C00E003C=Invalid propid value in MQRESTRICTION parameter.
C00E0021=Security descriptor is not valid.
C00E0010=Sort specified in MQLocateBegin is invalid. There may be duplicate columns.
C00E005C=Invalid propid value in MQSORTSET.
C00E0011=User is invalid.
C00E003F=Required properties for the operation were not all specified in the input parameters.
C00E0027=Insufficient resources to perform operation.
C00E002C=User certificate is not valid.
C00E0007=An invalid handle was passed to the function.
C00E0044=Object owner was invalid. For example, MQCreateQueue failed because the Queue Manager object is invalid.
C00E0006=Invalid parameter was passed to a function.
C00E001B=Timeout for the requested operation has expired.
C00E005E=Label buffer supplied to the API was too small.
C00E005D=Label size is too big. It should be less than or equal to MQ_MAX_MSG_LABEL_LEN.
C00E0040=Computer with the same name already exists on the network.
C00E000D=Cannot find specified machine.
C00E001D=Message that the cursor is currently pointing to has been removed from the queue by another process or by another call to Receive without the use of this cursor.
C00E002A=Cannot store recoverable or journal message. The corresponding message was not sent.
C00E0055=ConnectorType was not supplied. The connector type is required to send acknowledgment or secure messages.
C00E0060=MQIS database is in read-only mode.
C00E005F=Registry list of MQIS servers is empty.
C00E0013=Cannot establish connection with the controller(s).
C00E002F=User's internal Message Queuing certificate does not exist.
C00E0049=The object owner has not responded.
C00E004A=The object owner is not reachable.
C00E0008=Operation was cancelled before it could be completed.
C00E0026=Client does not have the required privileges to perform the operation.
C00E0063=The buffer passed for the Provider name property is too small.
C00E0002=One or more of the passed properties are invalid.
C00E003E=Invalid propid supplied for the requested Operation.
C00E005A=Queue handle can no longer be used to receive messages because the queue was deleted. The handle should be closed.
C00E004B=Error occurs when reading from a queue on a remote computer.
C00E0003=Queue is not registered in the DS.
C00E0005=Queue with the specified path name is already registered in the DS.
C00E0069=Remote computer is not available.
C00E0046=The buffer supplied for the result is too small.
C00E0023=The buffer passed to MQGetQueueSecurity is too small.
C00E0022=The buffer supplied for the user identifier property is too small.
C00E002B=The buffer supplied for the user certificate property is too small.
C00E000B=Message Queue service is not available.
C00E0009=Sharing violation resulted from queue being open already for exclusive receive.
C00E0062=The buffer supplied for the signature property is too small.
C00E0061=The buffer supplied for the symmetric key property is too small.
C00E0056=The Queue manager service has been restarted. The queue handle is stale and should be closed.
C00E0058=Cannot enlist the transaction.
C00E004E=Cannot import the transaction.
C00E0051=The transaction operations sequence is invalid.
C00E0050=The transaction usage is invalid.
C00E0045=The specified access mode is not supported.
C00E0020=The specified format name does not support the requested operation. For example, a direct queue format name cannot be deleted.
C00E0028=Cannot process request because the user buffer is too small to hold the information returned by the request.
C00E0066=MSMQ independent clients cannot serve MSMQ dependent clients.
C00E0065=The database does not currently allow write operations because another MQIS server is being installed.
C00E006A=A workgroup installation computer does not support the operation.
C00E006B=The Cryptographic Service Provider is not supported by Message Queuing.
C00E006C=Cannot set the Security descriptor for the cryptographic.
C00E006D=A user attempted to send an authenticated message without a certificate. 
C00E006E=Column PROPID_Q_PATHNAME_DNS is not supported for the MQLocateBegin API.
C00E006F=Cannot create a certificate store for the internal certificate.
C00E0070=Cannot open a certificate store for the internal certificate.
C00E0071=MSMQServices object does not support the operation.
C00E0072=Failed to grant the Add Guid permission to the current user.
C00E0073=MSMQOCM.DLL library cannot be loaded.
C00E0074=Entry point in the MSMQOCM.DLL library cannot be located.
C00E0075=Failed to find Message Queuing servers on the domain controllers.
C00E0076=Failed to join Message Queuing enterprise on Windows 2000 domain.
C00E0077=Failed to create an object on a specified Global Catalog server.
C00E0078=Failed to create msmqConfiguration object with GUID that matched computer installation. You must uninstall Message Queuing and then reinstall it.
C00E0079=Public key for the computer cannot be found.
C00E007A=Public key for the computer does not exist.
C00E007B=MQPRIVATEPROPS parameter value is invalid. This might be because it has a null value or has zero properties specified.
C00E007C=Cannot find Global Catalog servers in the specified domain.
C00E007D=Cannot find Message Queuing servers on the Global Catalog domain controllers.
C00E007E=Failed to retrieve the distinguished name of the local computer.
C00E007F=Cannot hash Data for an authenticated message.
C00E0080=Cannot sign data for an authenticated message before it was sent.
C00E0081=Cannot create hash object for an authenticated message.
C00E0082=Signature of a received message is not valid.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\services\servproc\system.serviceprocess.txt ===
; Resources for System.ServiceProcess component
; Copyright (c) 2000 Microsoft Corporation


[strings]
                                                                                                                           
; Exceptions messages

FileName=Cannot get service file name.
ServiceStartedIncorrectly=Service was not started correctly. Type net start [<ServiceName>] from the command line or use the Control Panel to start the service.
CallbackHandler=Cannot register control callback handler for service {0}.
OpenService=Cannot open {0} service on computer '{1}'.
StartService=Cannot start {0} service on computer '{1}'.
StopService=Cannot stop {0} service on computer '{1}'.
PauseService=Cannot pause {0} service on computer '{1}'.
ResumeService=Cannot resume {0} service on computer '{1}'.
ControlService=Cannot control {0} service on computer '{1}'.
ServiceName=Service name {0} contains invalid characters or is too long (max length = {1}).
ServiceStartType=Start type of the {0} service is invalid. 
ServiceDependency=Service dependency name {1} of service {0} contains invalid characters.
InstallService=Install Service : {0}
InstallError=Install Error
UserName=User Name:
UserPassword=Password:
ButtonOK=&OK
ServiceUsage=Usage: <ServiceExeName> <Options> \r\n -Install \r\n -InstallLogin [<UserName> <Password>] \r\n -Uninstall
ServiceNameTooLongForNt4=Service name must be 80 characters or less on this operating system.
DisplayNameTooLong=Display name {0} is too long. Display name must be 255 characters or less.
NoService=Service {0} was not found on computer '{1}'.
NoDisplayName=Display name could not be retrieved for service {0} on computer '{1}'.
OpenSC=Cannot open Service Control Manager on computer '{0}'. This operation might require other privileges.
Timeout=Time out has expired and the operation has not been completed.

CannotChangeProperties=Cannot change CanStop, CanPauseAndContinue, CanShutdown or CanHandlePowerEvent property values after the service has been started.
CannotChangeName=Cannot change service name when the service is running.
NoServices=Service has not been supplied. At least one object derived from ServiceBase is required in order to run.
NoMachineName=MachineName was not set.
BadMachineName=MachineName value {0} is invalid.
NoGivenName=ServiceName and DisplayName have not been set. Either ServiceName or DisplayName is required. 
CannotStart=Cannot start service {0} on computer '{1}'.
NotAService=ServiceInstaller cannot install the component because it does not inherit from Service.
NoInstaller=Installation failed due to the absence of a ServiceProcessInstaller. The ServiceProcessInstaller must either be the containing installer, or it must be present in the Installers collection on the same installer as the ServiceInstaller.
UserCanceledInstall=User has canceled installation of services in executable {0}.
UnattendedCannotPrompt=Username and password were not provided when installing the service located at {0}. Unattended installation does not provide a logon prompt for the username and password during installation.   
InvalidParameter=Invalid value {1} for parameter {0}.

;Resources for service logging

StartSuccessful=Service started successfully.
StopSuccessful=Service stopped successfully.
PauseSuccessful=Service paused successfully.
ContinueSuccessful=Service continued successfully.
InstallSuccessful=Service was installed successfully.
UninstallSuccessful=Service was uninstalled successfully.
CommandSuccessful=Service command was processed successfully.
StartFailed=Service cannot be started. {0}
StopFailed=Failed to stop service.
PauseFailed=Failed to pause service.
ContinueFailed=Failed to continue service.
InstallFailed=Failed to install service. Service may have been installed already.
UninstallFailed=Failed to uninstall service. Service may be running.
CommandFailed=Failed to process service command.
ErrorNumber=Windows Error number: {0}.
ShutdownOK=Service has been successfully shut down.
ShutdownFailed=Failed to shut down service. The error that occurred was: {0}.
PowerEventOK=PowerEvent handled successfully by the service.
PowerEventFailed=Failed in handling the PowerEvent. The error that occurred was: {0}.
InstallOK=Service {0} has been successfully installed.
TryToStop=Attempt to stop service {0}.
ServiceRemoving=Service {0} is being removed from the system...
ServiceRemoved=Service {0} was successfully removed from the system.
HelpText=Options for installing a Service Application:\r\n/username=name\r\n    Sets the user account to run the service under. You must also\r\n    specify the /password= option.\r\n\r\n/password=pwd\r\n    Sets the password for the account to run the service under.\r\n\r\nThe /username and /password options will be used only if the vendor of\r\nthe service designated it as requiring a user account. If a service was\r\nso designated, and you do not use the /username and /password options,\r\nyou will be prompted at install time for the account.\r\n/unattended\r\n    Unattended install.  Will not prompt for username or password.

CantStartFromCommandLine=Cannot start service from the command line or a debugger.  A Windows Service must first be installed (using installutil.exe) and then started with the ServerExplorer, Windows Services Administrative tool or the NET START command.
CantStartFromCommandLineTitle=Windows Service Start Failure
CantRunOnWin9x=Operating system does not support a Windows service. A service can only be run on Windows NT, Windows 2000, or later.
CantRunOnWin9xTitle=Windows Service Error
CantControlOnWin9x=Operating system does not support controlling a Windows service. A service can only be controlled on Windows NT, Windows 2000, or later.
CantInstallOnWin9x=A Windows service cannot be installed on this operating system. It can only be installed on Windows NT, Windows 2000, or later.

InstallingService=Installing service {0}...
StartingService=Starting service {0}...

; DescriptionAttribute

SBAutoLog=Whether the service should automatically write to the event log on common events such as Install and Start.
SBServiceName=The name by which the service is identified to the system.
SPCanPauseAndContinue=Whether this service recognizes the Pause and Continue commands.
SPCanShutdown=Whether this service can respond to a system shutdown.
SPCanStop=Whether this service can be stopped.
SPDisplayName=The descriptive name of the service.
SPDependentServices=The services that depend on this service in order to run.
SPMachineName=The name of the machine on which this service resides.
SPServiceName=The short name of the service.
SPServicesDependedOn=Services that must be started in order for this one to start.
SPStatus=The status of the service, e.g., Running or Stopped.
SPServiceType=The type of this service.

; ServiceInstallerDialogLabels
Label_SetServiceLogin=Set Service Login
Label_MissmatchedPasswords=The passwords do not match.  Re-enter the password.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\services\web\system.web.services.txt ===
;
; Resources for System.Web.Services component
;
; Copyright (c) 2000 Microsoft Corporation
;

[strings]

;
; Exceptions messages
;

WebConfigMissingElement=Missing XML element in the Web Services section of the Web.config file.
WebConfigInvalidSection=Invalid entry in the Web Services section of the Web.config file. {0} is not a valid section.
WebConfigMissingType=Missing type in section {0} of the Web Services section of the Web.config file.
WebConfigCannotLoadType=The {0} type could not be loaded.
WebConfigUnrecognizedElement={0} is an unrecognized element in the {1} section of the Web Services section of the Web.config file.
WebConfigInvalidExtensionGroup={0} is an invalid value for extension group. Use 0 for high and 1 for low.
WebConfigInvalidExtensionPriority={0} is an invalid value for the extension priority. The priority must be nonnegative.
Config_base_elements_only=Only elements are allowed.
Config_base_no_child_nodes=Child nodes are not allowed.
Config_base_required_attribute_empty=Required attribute '{0}' cannot be empty.
Config_base_required_attribute_missing=Required attribute '{0}' was not found.
Config_base_unrecognized_attribute=Unrecognized attribute '{0}'.
Config_base_unrecognized_element=Unrecognized element.
Invalid_boolean_attribute=The '{0}' attribute must be set to 'true' or 'false'.
Invalid_integer_attribute=The '{0}' attribute must be set to an integer value.
Invalid_positive_integer_attribute=The '{0}' attribute must be set to a positive integer value.
Invalid_type_attribute=The '{0}' attribute must be set to a valid type name.
Missing_required_attribute=The '{0}' attribute must be specified on the '{1}' tag.
WebConfigMissingSection=Missing required Web Services section of the Web.config file.
WebConfigInvalidNumber=Invalid entry in the Web Services section of the Web.config file. {0} must contain a valid integer value.
WebSetClassNameFailed=ProtocolImporter failed to set ClassName.
WebErrorImportMethod=Error importing schema for {0} Web Service method.
WebMissingServiceDescription=Missing service description {0} that defines interface {1}.
WebMissingInterface=Service description {0} did not define interface {1}.
WebLoadFailed=Status code {0} returned from HTTP request for {1}.
WebUndefinedResource=Unidentified resource at: {0}.
WebSchemaNotFound=Schema not found.
WebReflectionError=Error reflecting {0}.{1}.
WebInvalidMethodName={0} Web Service method name is not valid.
WebInvalidMethodNameCase=Invalid method name '{0}',  method names are case sensitive.   The method name '{1}' with the same name but different casing was found.
WebInvalidRequestFormat=Request format is invalid.
WebInvalidRequestFormatDetails=Request format is invalid: {0}.
WebMethodStatic=Web Service methods cannot be static.
WebMethodMissingParams=The last two parameters of method {0}.{1} must be of type {2} and {3}.
WebBadOutParameter=The {0} parameter of the {1}.{2} method must be an input-only parameter.
WebInOutParameter=The {0} parameter of the {1}.{2} method must be an output-only parameter.
WebAsyncMissingEnd=Asynchronous method {0}.{1} does not have a corresponding {2} method.
WebMissingPath=Path property must be set before calling the Send method.
WebAsynchronousInProgress=An asynchronous operation is already in progress.
WebInitTwice=Initialize has already been called and can only be called once.
WebResponseKnownError=The request failed with HTTP status {0}: {1}.
WebResponseUnknownError=The request failed with the error message:
WebResponseContent=Client found response content type of '{0}', but expected '{1}'.
WebBadHeaderClient=Client did not find required {0} SOAP header in the message.
WebBadHeaderServer=Server did not find required {0} SOAP header in the message.
WebBadStreamState=Properties and methods of the stream can't be accessed in the BeforeSerialize stage.
WebCannotUnderstandHeader=SOAP header {0} was not understood.
WebHeaderValueMissingClient=Required field/property {1}.{2} of SOAP header {0} was not set by the client prior to making the call.
WebHeaderValueMissingServer=Required field/property {1}.{2} of SOAP header {0} was not set by the server prior to returning from the call.
WebNoReturnValue=There is no return value.
WebCannotAccessValue=The value can not be accessed because there was an exception during message processing.
WebCannotAccessValueStage=The value may not be accessed in message stage {0}.
WebInvalidBindingPlacement=The Binding property of {0} may not be specified in this context.
WebBothMethodAttrs=A web service method can't have both a SoapDocumentMethodAttribute and a SoapRpcMethodAttribute. Use one or the other.
WebBothServiceAttrs=A web service can't have both a SoapDocumentServiceAttribute and a SoapRpcServiceAttribute. Use one or the other.
WebOneWayOutParameters=One-way methods cannot have out or ref parameters.
WebOneWayReturnValue=One-way methods cannot have return values.
WebReflectionErrorMethod=Method {0}.{1} can not be reflected.
WebMultiDimArray=Multi-dimensional arrays are not supported. Use a jagged array instead.
WebHeaderMissing=The header property/field {0}.{1} is missing or not public.
WebHeaderStatic=The header property/field {0}.{1} cannot be static.
WebHeaderRead=The header property/field {0}.{1} could not be  read.
WebHeaderWrite=The header property/field {0}.{1} could not be written to.
WebHeaderType=The header property/field {0}.{1} must be of type SoapHeader or a derived type, or an array of SoapHeader or SoapUnknownHeader.
WebHeaderRequiredTypeConflict=The header attribute 'Required' can be true only if the header is a user derived type of SoapHeader.
WebHeaderOneWayOut=The header property/field {0}.{1} cannot be an out header because the method is one-way.
WebHeaderInvalidMustUnderstand='{0}' is not a valid value for the field EncodedMustUnderstand. Valid values are '0', '1', 'true', and 'false'.
WebMultiplyDeclaredHeaderTypes=An operation can have only one in or out header of a given type. {0}.{1} conflicts with another header field of the same type and direction.
WebHttpHeader=Server did not recognize the value of HTTP Header {0}: {1}.
WebHttpHeaderFormat=HTTP Header format {0}: {1} is invalid.
WebRequestContent=Server found request content type to be '{0}', but expected '{1}'.
WebRequestUnableToRead=Server was unable to read request.
WebRequestUnableToProcess=Server was unable to process request.
WebRequestErrorStatusDescription=Internal Server Error.
WebUnsupportedMediaTypeStatusDescription=Unsupported media type.
WebBadRequestStatusDescription=Bad request.
WebNewTransactionFailed=Transactional proxy object could not be instantiated.
WebNoContext=Context is not available.
WebMissingParameter=Missing parameter: {0}.
WebUnrecognizedRequestFormat=Request format is unrecognized.
WebRedirect=The Web Service call was redirected.
WebStatusCode=The status code must be a redirect status code.
WebTimeout=The timeout period expired before the response was received.
WebMissingHelpContext=HttpContext is not available.   This class can only be used in the context of an ASP.NET request.
WebMissingCustomAttribute={0} must have the {1} custom attribute.
WebMissingClientProtocol=ClientProtocol must be set first.
WebResolveMissingClientProtocol=ClientProtocol property must be set before calling Resolve.
WebMissingWSDL=A Service Description was not found at the URL {0}.
WebRemoteError=The remote server returned error code {0} for the URL {1}.\r\nThe contents of the response were:\r\n{2}
WebPathNotFound=Path:{0} could not be found.
WebMissingResource=The document at the url {0} was not recognized as a known document type.\r\nThe error message from each known type may help you fix the problem:
WebContractReferenceName=WSDL Document
WebShemaReferenceName=XML Schema
WebDiscoveryDocumentReferenceName=DISCO Document
WebMissingDocument=Discovery document at the URL {0} could not be found.
WebMissingSchema=A schema could not be found at the URL {0}.
WebInvalidContentType=The document format is not recognized (the content type is '{0}').
WebInvalidFormat=The document format is not recognized.
WebBadBindingFormat=Binding must be a QName, formatted like '<uri>:<name>'.
WebInternalMissingSchema=Internal error: imported schema {0} is not in collection.
WebInternalMissingSchemaId=Internal error: schema does not have ID.
WebInvalidEnvelopeNamespace=Possible SOAP version mismatch: Envelope namespace {0} was unexpected. Expecting {1}.
WebResultNotXml=Result was not XML.
WebDescriptionMissingItem=Element {0} named {1} from namespace {2} is missing.
WebDescriptionMissing=Cannot find definition for {0}.  Service Description with namespace {1} is missing.
WebDescriptionPartElementRequired=Part '{0}' from message '{1}' in namespace '{2}' is missing the element attribute. The element attribute is required for headers when Use=Literal.
WebDescriptionPartTypeRequired=Part '{0}' from message '{1}' in namespace '{2}' is missing the type attribute. The type attribute is required for headers when Use=Encoded.
WebDescriptionPartElementWarning=Part '{0}' from message '{1}' in namespace '{2}' defines both the element and type attributes. Only the element attribute is used for headers when Use=Literal.
WebDescriptionPartTypeWarning=Part '{0}' from message '{1}' in namespace '{2}' defines both the element and type attributes. Only the type attribute is used for headers when Use=Encoded.
WebDescriptionTooManyMessages=No more than one input and one output message may be specified.
WebDescriptionHeaderAndBodyUseMismatch=The value of use defined on the soap:header element must match that defined on the soap:body element.
WebQNamePrefixUndefined=Namespace prefix '{0}' not defined
WebNegativeValue=The value for '{0}' cannot be negative.
WebEmptyRef=Invalid empty reference of type '{0}' encountered in the document at URI '{1}'.
WebInvalidDocType=Invalid Document type. Expecting '{0}', got '{1}'.\r\nDocument URI is '{2}'.
WebDiscoRefReport=Report from '{0}' is '{1}'.
WebTextMatchMissingPattern=Each match element must have a pattern attribute containing a valid regular expression.
WebTextMatchIgnoredTypeWarning=Optional attribute 'type' was ignored because the match does not contain submatches.
WebTextMatchBadCaptureIndex={0} is not a valid capture index for match '{1}'. The highest valid capture index for this match is {2}.
WebTextMatchBadGroupIndex={0} is not a valid group index for match '{1}'. The highest valid group index for this match is {2}.
WebServiceDescriptionIgnoredOptional=The optional WSDL extension element '{0}' from namespace '{1}' was not handled.
WebServiceDescriptionIgnoredRequired=The required WSDL extension element '{0}' from namespace '{1}' was not handled.
WebDuplicateFormatExtension=More than one format extension named '{0}' was specified. Each format extension must have a unique name.
WebDuplicateOperationMessage=More than one operation message named '{0}' was specified. Each operation message must have a unique name.
WebDuplicateImport=More than one import named '{0}' was specified. Each import must have a unique name.
WebDuplicateMessage=More than one message named '{0}' was specified. Each message must have a unique name.
WebDuplicatePort=More than one port named '{0}' was specified. Each port must have a unique name.
WebDuplicatePortType=More than one port type named '{0}' was specified. Each port type must have a unique name.
WebDuplicateBinding=More than one binding named '{0}' was specified. Each binding must have a unique name.
WebDuplicateService=More than one service named '{0}' was specified. Each service must have a unique name.
WebDuplicateMessagePart=More than one message part named '{0}' was specified. Each message part must have a unique name.
WebDuplicateOperationBinding=More than one operation binding named '{0}' was specified. Each operation binding must have a unique name.
WebDuplicateFaultBinding=More than one fault binding named '{0}' was specified. Each fault binding must have a unique name.
WebDuplicateOperation=More than one operation named '{0}' was specified. Each operation must have a unique name.
WebDuplicateOperationFault=More than one operation fault named '{0}' was specified. Each operation fault must have a unique name.
WebDuplicateUnknownElement=More than one {0} named '{1}' was specified. Each {0} must have a unique name.
WebUnknownEncodingStyle=The encoding style '{0}' is not supported.
WebSoap11EncodingStyleNotSupported1=The SOAP 1.1 encoding style is not supported for operations that use SOAP 1.2. Use the URI '{0}' to refer to the SOAP 1.2 encoding style.
WebNullAsyncResultInBegin=For server-side asynchronous method calls, your Begin method must return a valid IAsyncResult. Your Begin method cannot return null.
WebNullAsyncResultInEnd=For asynchronous method calls, you must supply a non-null IAsyncResult instance when you call the End method.
WebAsyncTransaction=Transactions are not supported for asynchronous method calls. Provide a synchronous version of the method or unset the TransactionOption property of the WebMethodAttribute.
WebConfigExtensionError=There was an exception running the extensions specified in the config file.
WebChangeTypeFailed=Cannot convert {0} to {1}.
WebBadEnum=The value '{0}' was not found in the enum type '{1}'.
WebBadHex=Invalid hex digit: '{0}'.
WebClientBindingAttributeRequired=WebServiceBindingAttribute is required on proxy classes.
WebSoap12NotSupported=The Soap 1.2 protocol is not supported. The Soap 1.2 specification was not a full W3C Recommendation in time for support to be included in this product. This functionality will be provided in a future release of the .NET Framework.
WebVirtualDisoRoot=Web Directory '{0}' must be same or below to '{1}'.

; DescriptionAttributes

WebServiceContext=The ASP.NET context object for the current request.
WebServiceSession=The ASP.NET session object for the current request.
WebServiceServer=The ASP.NET utility object for the current request.
WebServiceUser=The ASP.NET user object for the current request.  The object is used for authorization.
WebServiceSoapVersion=The version of the SOAP protocol used for the request.
ClientProtocolAllowAutoRedirect=Enable automatic handling of server redirects.
ClientProtocolCookieContainer=A container for all cookies received from servers in the current session.
ClientProtocolPreAuthenticate=Enables pre authentication of the request.
ClientProtocolClientCertificates=The client certificates that will be sent to the server, if the server requests them.
ClientProtocolUrl=The base URL to the server to use for requests.
ClientProtocolEncoding=The encoding to use for requests.
ClientProtocolTimeout=Sets the timeout in milliseconds to be used for synchronous calls.  The default of -1 means infinite.
ClientProtocolUserAgent=Sets the user agent http header for the request.
ClientProtocolUsername=The user name to be sent for basic and digest authentication.
ClientProtocolPassword=The password to be used for basic and digest authentication.
ClientProtocolDomain=The domain to be used for basic and digest authentication.
ClientProtocolProxyName=The name of the proxy server to use for requests.
ClientProtocolProxyPort=The port number of the proxy server to use for requests.
ClientProtocolSoapVersion=The version of the SOAP protocol to use for requests. By default, SOAP 1.1 will be used.

; DefaultWsdlHelpGenerator.aspx localized text

HelpGeneratorHttpGetTitle=HTTP GET
HelpGeneratorHttpGetText=The following is a sample HTTP GET request and response.  The <font class=value>placeholders</font> shown need to be replaced with actual values.
HelpGeneratorHttpPostTitle=HTTP POST
HelpGeneratorHttpPostText=The following is a sample HTTP POST request and response.  The <font class=value>placeholders</font> shown need to be replaced with actual values.
HelpGeneratorSoapTitle=SOAP
HelpGeneratorSoapText=The following is a sample SOAP request and response.  The <font class=value>placeholders</font> shown need to be replaced with actual values.
HelpGeneratorInvokeButton=Invoke
HelpGeneratorParameter=Parameter
HelpGeneratorValue=Value
HelpGeneratorTestHeader=Test
HelpGeneratorTestText=To test the operation using the HTTP POST protocol, click the 'Invoke' button.
HelpGeneratorNoTestFormRemote=The test form is only available for requests from the local machine.
HelpGeneratorLinkBack=Click <a href=\"{0}\">here</a> for a complete list of operations.
HelpGeneratorEnableHttpPostHeader=Enabling http post protocol in configuration
HelpGeneratorEnableHttpPostInstructions=To enable the http post protocol add the following to the web.config file in your application or site root directory.
HelpGeneratorOperationsIntro=The following operations are supported.  For a formal definition, please review the <a href=\"{0}\">Service Description</a>.
HelpGeneratorWebService=Web Service
HelpGeneratorNoHttpGetTest=No test form is available as this service or method does not support the HTTP GET protocol.
HelpGeneratorNoHttpPostTest=No test form is available as this service or method does not support the HTTP POST protocol.
HelpGeneratorNoTestNonPrimitive=The test form is only available for methods with primitive types or arrays of primitive types as parameters.
HelpGeneratorMethodNotFound=Method Not Found
HelpGeneratorMethodNotFoundText=Method '{0}' was not found in service {1}.
HelpGeneratorStyleBODY=color: #000000; background-color: white; font-family: Verdana; margin-left: 0px; margin-top: 0px;
HelpGeneratorStylecontent=margin-left: 30px; font-size: .70em; padding-bottom: 2em;
HelpGeneratorStyleAlink=color: #336699; font-weight: bold; text-decoration: underline;
HelpGeneratorStyleAvisited=color: #6699cc; font-weight: bold; text-decoration: underline;
HelpGeneratorStyleAactive=color: #336699; font-weight: bold; text-decoration: underline;
HelpGeneratorStyleAhover=color: cc3300; font-weight: bold; text-decoration: underline;
HelpGeneratorStyleP=color: #000000; margin-top: 0px; margin-bottom: 12px; font-family: Verdana;
HelpGeneratorStylepre=background-color: #e5e5cc; padding: 5px; font-family: Courier New; font-size: x-small; margin-top: -5px; border: 1px #f0f0e0 solid;
HelpGeneratorStyletd=color: #000000; font-family: Verdana; font-size: .7em;
HelpGeneratorStyleh2=font-size: 1.5em; font-weight: bold; margin-top: 25px; margin-bottom: 10px; border-top: 1px solid #003366; margin-left: -15px; color: #003366;
HelpGeneratorStyleh3=font-size: 1.1em; color: #000000; margin-left: -15px; margin-top: 10px; margin-bottom: 10px;
HelpGeneratorStyleul=margin-top: 10px; margin-left: 20px;
HelpGeneratorStyleol=margin-top: 10px; margin-left: 20px;
HelpGeneratorStyleli=margin-top: 10px; color: #000000;
HelpGeneratorStylefontvalue=color: darkblue; font: bold;
HelpGeneratorStylefontkey=color: darkgreen; font: bold;
HelpGeneratorStyleheading1=color: #ffffff; font-family: Tahoma; font-size: 26px; font-weight: normal; background-color: #003366; margin-top: 0px; margin-bottom: 0px; margin-left: -30px; padding-top: 10px; padding-bottom: 3px; padding-left: 15px; width: 105%;
HelpGeneratorStylebutton=background-color: #dcdcdc; font-family: Verdana; font-size: 1em; border-top: #cccccc 1px solid; border-bottom: #666666 1px solid; border-left: #cccccc 1px solid; border-right: #666666 1px solid;
HelpGeneratorStylefrmheader=color: #000000; background: #dcdcdc; font-family: Verdana; font-size: .7em; font-weight: normal; border-bottom: 1px solid #dcdcdc; padding-top: 2px; padding-bottom: 2px;
HelpGeneratorStylefrmtext=font-family: Verdana; font-size: .7em; margin-top: 8px; margin-bottom: 0px; margin-left: 32px;
HelpGeneratorStylefrmInput=font-family: Verdana; font-size: 1em;
HelpGeneratorStyleintro=margin-left: -15px;
HelpGeneratorImplementation=implementation
HelpGeneratorDefaultNamespaceWarning1=This web service is using http://tempuri.org/ as its default namespace.
HelpGeneratorDefaultNamespaceWarning2=Recommendation: Change the default namespace before the XML Web service is made public.
HelpGeneratorDefaultNamespaceHelp1=Each XML Web service needs a unique namespace in order for client applications to distinguish it from other services on the Web. http://tempuri.org/ is available for XML Web services that are under development, but published XML Web services should use a more permanent namespace.
HelpGeneratorDefaultNamespaceHelp2=Your XML Web service should be identified by a namespace that you control. For example, you can use your company's Internet domain name as part of the namespace. Although many XML Web service namespaces look like URLs, they need not point to actual resources on the Web. (XML Web service namespaces are URIs.)
HelpGeneratorDefaultNamespaceHelp3=For XML Web services creating using ASP.NET, the default namespace can be changed using the WebService attribute's Namespace property. The WebService attribute is an attribute applied to the class that contains the XML Web service methods. Below is a code example that sets the namespace to "http://microsoft.com/webservices/":
HelpGeneratorDefaultNamespaceHelp4=For more details on XML namespaces, see the W3C recommendation on <a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</A>.
HelpGeneratorDefaultNamespaceHelp5=For more details on WSDL, see the <a href="http://www.w3.org/TR/wsdl">WSDL Specification</a>.
HelpGeneratorDefaultNamespaceHelp6=For more details on URIs, see <a href="http://www.ietf.org/rfc/rfc2396.txt">RFC 2396</a>.
HelpGeneratorInternalError=The XML Web service help page encountered an internal error.
;

WhenUsingAMessageStyleOfParametersAsDocument0=When using a Bare parameter style and a service RoutingStyle of RequestElement, the method must have exactly one parameter.
UnsupportedMessageStyle1=Message style {0} is not supported.
TheMethodsAndUseTheSameSoapActionWhenTheService3=The methods {0} and {1} use the same SOAPAction '{2}'. When the RoutingStyle of the XML Web service is SoapAction, SOAPAction values must be unique across methods on the XML Web service. You can change the SOAPAction with the Action parameter to the SoapDocumentMethod or SoapRpcMethod attributes, or you can specify a RoutingStyle of RequestElement on the XML Web service.
TheMethodDoesNotHaveARequestElementEither1=The method {0} does not have a request element. You can use a RoutingStyle of SoapAction on the XML Web service, use the Wrapped parameter style on the method, or add a parameter to the method.
TheMethodsAndUseTheSameRequestElementXmlns4=The methods {0} and {1} use the same request element <{2} xmlns='{3}'>. When the RoutingStyle of the XML Web service is RequestElement, request elements must be unique across methods on the XML Web service. If you are using the Rpc style, you can change the message name with the RequestElementName and RequestElementNamespace parameters to SoapRpcMethodAttribute. For document style using wrapped parameter style, use the RequestElementName and RequestElementNamespace parameters to SoapDocumentMethodAttribute. For the bare parameter style, you must change the element that represents the parameter. Alternatively, you can specify a RoutingStyle of SoapAction on the XML Web service.
TheMethodsAndUseTheSameRequestElementAndSoapActionXmlns6=The methods {0} and {1} use the same request element <{2} xmlns='{3}'> and the methods {0} and {4} use the same SOAPAction '{5}'. Each method on the XML Web service must have a unique SOAPAction or request element. If you are using the Rpc style, you can change the message name with the RequestElementName and RequestElementNamespace parameters to SoapRpcMethodAttribute. For document style using wrapped parameter style, use the RequestElementName and RequestElementNamespace parameters to SoapDocumentMethodAttribute. For the bare parameter style, you must change the element that represents the parameter. Alternatively, you can specify a unique SoapAction for each method using the Action parameter to SoapRpcMethodAttribute or SoapDocumentMethodAttribute.
TheRootElementForTheRequestCouldNotBeDetermined0=The root element for the request could not be determined. When RoutingStyle is set to RequestElement, SoapExtensions configured via an attribute on the method cannot modify the request stream before it is read. The extension must be configured via the SoapExtensionTypes element in web.config, or the request must arrive at the server as clear text.
TheRequestElementXmlnsWasNotRecognized2=The request element <{0} xmlns='{1}'> was not recognized.
ServiceDescriptionWasNotFound0=XML Web service description was not found.
internalError0=An internal error occurred.
DiscoveryIsNotPossibleBecauseTypeIsMissing1=Discovery is not possible because type '{0}' is missing a WebServiceBinding attribute.
TheBindingNamedFromNamespaceWasNotFoundIn3=The binding named '{0}' from namespace '{1}' was not found in the discovery document found at '{2}'.
Missing2=Missing {0}.{1}
MissingHttpOperationElement0=Missing http:operation element.
MessageHasNoParts1=Message '{0}' has no parts.
DuplicateInputOutputNames0=Duplicate input/output names.
MissingBinding0=The operation has no matching binding. Check if the operation, input and output names in the Binding section match with the corresponding names in the PortType section.
MissingInputBinding0=Missing input binding.
MissingOutputBinding0=Missing output binding.
UnableToImportOperation1=Unable to import operation '{0}'.
UnableToImportBindingFromNamespace2=Unable to import binding '{0}' from namespace '{1}'.
TheOperationFromNamespaceHadInvalidSyntax3=The operation '{0}' in porttype '{1}' from namespace '{2}' had the following syntax error:  {3}
TheOperationBindingFromNamespaceHadInvalid3=The operation binding '{0}' from namespace '{1}' had invalid syntax.  {2}
IfAppSettingBaseUrlArgumentIsSpecifiedThen0=If 'appSettingBaseUrl' argument is specified then 'url' argument must also be specified.
MissingMessagePartForMessageFromNamespace3=Missing message part '{0}' for message '{1}' from namespace '{2}'.
MissingMessage2=Missing message '{0}' from namespace '{1}'.
OnlyXmlElementsOrTypesDerivingFromServiceDescriptionFormatExtension0=Only XmlElements or types deriving from ServiceDescriptionFormatExtension may be added.
OnlyOperationInputOrOperationOutputTypes=Only objects of type OperationInput or OperationOutput may be added.
ProtocolWithNameIsNotRecognized1=Protocol with name '{0}' is not recognized.
BothAndUseTheMessageNameUseTheMessageName3=Both {0} and {1} use the message name '{2}'.  Use the MessageName property of the WebMethod custom attribute to specify unique message names for the methods.
MissingSoapOperationBinding0=Missing soap:operation binding.
OnlyOneWebServiceBindingAttributeMayBeSpecified1=Only one WebServiceBinding attribute may be specified on type '{0}'.
TypeIsMissingWebServiceBindingAttributeThat2=Type '{0}' is missing WebServiceBinding attribute that defines a binding named '{1}'.
UnknownWebServicesProtocolInConfigFile1=Unknown XML Web services protocol '{0}' in config file.
RequiredXmlFormatExtensionAttributeIsMissing1=Required XmlFormatExtension attribute is missing on class {0}.
TheSyntaxOfTypeMayNotBeExtended1=The syntax of type {0} may not be extended.
InternalConfigurationError0=Internal configuration error.
ThereIsNoSoapTransportImporterThatUnderstands1=There is no SoapTransportImporter that understands the transport '{0}'.
MissingSoapBodyInputBinding0=Missing soap:body input binding.
MissingSoapBodyOutputBinding0=Missing soap:body output binding.
TheOperationStyleRpcButBothMessagesAreNot0=The operation style=rpc but both messages are not use=encoded.
TheCombinationOfStyleRpcWithUseLiteralIsNot0=The combination of style=rpc with use=literal is not supported.
TheEncodingIsNotSupported1=The encoding '{0}' is not supported.
SpecifyingAnElementForUseEncodedMessageParts0=Specifying an element for use=encoded message parts is not supported.
EachMessagePartInAnUseEncodedMessageMustSpecify0=Each message part in an use=encoded message must specify a type.
TheCombinationOfStyleDocumentWithUseEncoded0=The combination of style=document with use=encoded is not supported.
SpecifyingATypeForUseLiteralMessagesIs0=Specifying a type for use=literal messages is not supported.
EachMessagePartInAUseLiteralMessageMustSpecify0=Each message part in a use=literal message must specify an element.
NoInputMIMEFormatsWereRecognized0=No input MIME formats were recognized.
NoInputHTTPFormatsWereRecognized0=No input HTTP formats were recognized.
NoOutputMIMEFormatsWereRecognized0=No output MIME formats were recognized.
MissingMatchElement0=Missing match element.
SolicitResponseIsNotSupported0=SolicitResponse is not supported.
RequestResponseIsNotSupported0=RequestResponse is not supported.
OneWayIsNotSupported0=OneWay is not supported.
NotificationIsNotSupported0=Notification is not supported.
SyntaxErrorInWSDLDocumentMessageDoesNotHave1=Syntax error in WSDL document: Message '{0}' does not have an operation associated with it in the portType.
WebMissingBodyElement=Request format is invalid: Missing required soap:Body element.
UnableToHandleRequestActionNotRecognized1=Unable to handle request. The action '{0}' was not recognized.
UnableToHandleRequestActionRequired0=Unable to handle request without a valid action parameter. Please supply a valid soap action.
UnableToHandleRequest0=Unable to handle request.
FailedToHandleRequest0=Failed to handle request.

TheBinding0FromNamespace1WasIgnored2=The binding '{0}' from namespace '{1}' was ignored.  {2}
TheOperation0FromNamespace1WasIgnored2=The operation '{0}' from namespace '{1}' was ignored.  {2}
TheOperationBinding0FromNamespace1WasIgnored=The operation binding '{0}' from namespace '{1}' was ignored.  {2}
NoMethodsWereFoundInTheWSDLForThisProtocol=No methods were found in the WSDL for this protocol.
UnexpectedFlush=Unexpected flush
ThereWasAnErrorDuringAsyncProcessing=There was an error during async processing.
CanTCallTheEndMethodOfAnAsyncCallMoreThan=Can't call the end method of an async call more than once.
StreamDoesNotSeek=This stream does not support seeking operations.
StreamDoesNotRead=This stream does not support read operations.
ElementTypeMustBeObjectOrSoapReflectedException=The elementType must be one of SoapReflectedExtension or Object.
ElementTypeMustBeObjectOrSoapExtensionOrSoapReflectedException=The elementType must be one of SoapExtension, SoapReflectedExtension, or Object.
ProtocolDoesNotAsyncSerialize=The protocol does not support async serialization.
ThereWasAnErrorDownloading0=There was an error downloading '{0}'.
TheHTMLDocumentDoesNotContainDiscoveryInformation=The HTML document does not contain Web service discovery information.
TheDocumentWasNotRecognizedAsAKnownDocumentType=The document was not recognized as a known document type (WSDL, XML Schema, or Discovery document) for the following reason: \n  - {0}
TheDocumentWasUnderstoodButContainsErrors=The document was understood, but it could not be processed.
TheWSDLDocumentContainsLinksThatCouldNotBeResolved=The WSDL document contains links that could not be resolved.
TheSchemaDocumentContainsLinksThatCouldNotBeResolved=The XML schema document contains links that could not be resolved.
CanTSpecifyElementOnEncodedMessagePartsPart=The element attribute is not allowed on encoded message parts. The erroneous part is named '{0}' in message '{1}'.
indexMustBeBetweenAnd0Inclusive=index must be between 0 and {0}, inclusive.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\servicesunmanaged\eventlogmessages\readme.txt ===
A build in this directory creates WFCEventLogMessageLib.dll. WFCEventLogMessageLib.dll 
is a file used by the EventLog component to provide a usable event log message library 
for user-written events. It is a file that consists entirely of resources - no code 
except for a DllMain that returns TRUE.

The resources in the file are made up of
  1) version information
  2) message resources
Message resources are produced with mc.exe, compiling a .mc file. Since it takes a 
long time to do this, I have checked in the outputs of that step, which are 
WFCEventLogMessageLib.h, WFCEventLogMessageLib.rc, and MSG00001.bin. When you type 
build, it uses those files plus the other sources in the directory to create the DLL.

To rebuild with mc.exe, use rebuild.bat. It simply calls mc.exe with the right parameters.

Contact stefanph if you have any questions.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\vsdesigner\designer\microsoft.visualstudio.designer.designer.txt ===
# This is the [Design] text we append to the designer window title in Visual Studio.
DesignerCaption=[Design]

# We append this to the designer window title in VS when the file is read-only.
DesignerReadOnlyCaption=[Read Only]

# The description for the "Name" property of controls and components.
ShadowPropName=Indicates the name used in code to identify the object.

# In Tools->Options, this is the title of the designer options dialog tab.  This is what shows up in the tree view on the left.
DesignerOptionsPageTitle=Windows Forms Designer

# In Tools->Options, this is the "General" sub category on the same tab.
DesignerOptionsPageGeneralTitle=General
VisualStudioCategory_GridSettings=GridSettings

AddComponentsPageTitle=Add .Net Framework Components
AddComponentsGAC=Global Assembly Cache

EDITORNoDesignerService=Visual Studio is unable to open '{0}' in design view.\r\nThe designer service is not installed correctly.

#=------------------------------------------------------------------=
# Property Categories
#
CatDesign=Design

#=------------------------------------------------------------------=
# Designer options resources
#
DesignerOptionsGridSizeDesc=Sets the default X and Y grid sizing on designers
DesignerOptionsSelectionCacheSizeDesc=Sets the number of objects for which to preserve PropertyBrowser state
DesignerOptionsShowGridDesc=Sets if designers should display sizing grid by default
DesignerOptionsSnapToGridDesc=Sets if designers should snap to grid by default

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CodeDomSerializer error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Happens when we can't find a base class that satisifes designer requirements.  Example: we can't find a designer for
# the base class, the base class is something that we couldn't find (My.Foo, where this class couldn't be loaded...)
# To fix, people need to derive from a base class that supports designers.  If they are deriving from something in their
# project, like a inherited form or control, they need to make sure the project is built.
SerializerNoRootSerializer=The designer could not be shown for this file because none of the classes within it can be designed.

# Same error as above, only we were able to find more information.  Here we were able to identify all the classes in the file, and
# under this error we will list why each class failed our requirements.
SerializerNoRootSerializerWithFailures=The designer could not be shown for this file because none of the classes within it can be designed.  The designer inspected the following classes in the file: \r\n{0}

# Possible failures that will be listed by the above error.  Fix described problem
# and close and reopen the designer window.

# Class wasn't referenced in the project, so we couldn't load it.
SerializerTypeFailedTypeNotFound=\t{0} --- The base class '{1}' could not be loaded.  Ensure the assembly has been referenced or built if it is part of the project.

# We loaded the class, but it can't be designed because the implementor of the class
# didn't provide a designer.
SerializerTypeFailedTypeNotDesignable=\t{0} --- The base class '{1}' cannot be designed.

# We loaded the class and found a designer, but we couldn't load that designer.  Either
# setup error or the user has installed the redist version only.
SerializerTypeFailedTypeDesignerNotInstalled=\t{0} --- The designer for base class '{1}' is not installed.

# Due to restrictions in the VS project system, only the first type can be designable.  We detect the case where the 
# designer can load just fine, but the type it will load against is not the fisrt type in the file.
SerializerTypeNotFirstType=The class {0} can be designed, but is not the first class in the file.  Visual Studio requires that designers use the first class in the file.  Move the class code so that it is the first class in the file and try loading the designer again.

# Two "button1" declarations, for example.  Also, declarations must be unique across inherited forms too, so you can't have Form1 with button1
# and a Form2 that derives from Form1 that also has a button1.  Must also be unique regardless of case.  This 
# is invoked while we are parsing code.
SerializerDuplicateComponentDecl=Duplicate declaration of member '{0}'

# This is an internal error in the serializer.  It's related to SerializerObjectHasName
# Contact MS for a fix.
SerializerNameInUse=The name '{0}' is already used by another object.

# This is an internal error in the serializer.  It indciates that the serializer has tried to name
# an object twice, which isn't supported.  Call MS for fix.
SerializerObjectHasName=Cannot name the object '{0}' because it is already named '{1}'.

# This is an internal error in the designer.  It indicates that the designer has tried to add an event 
# handling method to a component that does not have a member variable in the designer.  Call control vendor for fix.
SerializerNoComponentSite=Cannot create a method name for the requsted component because it is not a member of the design container.

# Used during parsing to indicate invalid code statements.  Fix code to remove compile errors.
SerializerInvalidIdentifier='{0}' is not a valid identifier.

# Intenral error in the serializer.  The serializer has offered an instance of a type that does not
# match the current architecture we're using.  For example, we're emitting to the CodeDom but it
# gave us an XML serializer.  Contact control vendor (because they own the serializers).
SerializerBadSerializationObject=The serialization data object is not of the proper type.

# Happens when we are trying to create an event handling method.  This can happen if an event
# was created by a non CLS-compliant language. There is something wrong with the event type.
# contact control vendor.
SerializerBadDelegate=Delegate class '{0}' has no Invoke method.  Is this class a delegate?

# While parsing we couldn't find a constructor that had matching parameters.  Seems obvious,
# but it can also happen if we couldn't convert parameter types. Example: Point(int, int) and
# the user gave floats.  We're worse at this than the compiler.  To fix: use a different
# ctor or provide an explicit cast.
SerializerNoMatchingCtor=Type '{0}' does not have a constructor with parameters of types {1}.

# Happens when we are trying to wire up an event method and we couldn't find one or more 
# parameter types for the method.  Usually caused by a missing reference.  Add the reference
# containing the type to the project and try again.
SerializerInvalidProjectReferences=Could not load type '{0}'. Please make sure that the assembly containing this type is added to the project references.

XmlParseException=The designer cannot process the code at line {0}, please see the Task List for details.  The code within the method '{1}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.
XmlUnknownCode=Failed to parse the following code: \r\n\r\n{0}\r\n\r\nThe code within the method '{1}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.
XmlUnknownCodeWithLine=The designer cannot process the code at line {0}: \r\n\r\n{1}\r\n\r\nThe code within the method '{2}' is generated by the designer and should not be manually modified.  Please remove any changes and try opening the designer again.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CodeDomSerializer resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# This is just the comment tag on the expandable node in code view that wraps InitializeComponent.
SerializerDesignerGeneratedCode=Designer Generated Code

# We emit a comment into the source code in place of statements we failed to write out because
# of an error.
FailedToGenerateCode=Code generation for '{0}' failed because of Exception '{1}'.
DesignerCodeGeneration=Designer generated code

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerHost error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Inherited controls are "owned" by their inheriting class, so you can't rename or destroy them.
CODEMANCantDestroyInheritedComponent=Cannot remove or destroy inherited component '{0}'.

# Add a group box to the same group box.  That would cause a recursion at runtime. This can also
# happen if in Form1, there is code in InitializeComponent that creates another instance of Form1.
CODEMANCyclicAdd=The component cannot be added because it contains a circular reference to '{0}'.

CODEMANOnUnload=The component cannot be added because the container is in the process of being unloaded.

# Same as SerializerTypeFailedTypeNotDesignable, but can sit stand-alone.
CODEMANNoTopLevelDesigner=Visual Studio was unable to find a designer for classes of type '{0}'.

# Same as SerializerTypeFailedTypeNotFound, but sometimes it's used for SerializerTypeFailedTypeDesignerNotInstalled
CODEMANNoBaseClass=Visual Studio cannot open a designer for the file because the class within it does not inherit from a class that can be visually designed.

# This is an error in the component you just placed or loaded.  It indicates that the component provided
# a constructor that takes an IContainer, but that in this constructor the component broke the rules
# and didn't add itself to the container.  The designer will work fine, but there may be problems with
# the component at runtime.  Contact component vendor.  If it's your component, call add in the constructor.
CODEMANDidntCallAddInConstructor=Component '{0}' did not call container.Add() in its constructor.

# Duplicate name message that is presented to the user when the name is changed in the properties window.
CODEMANDupComponentName=There is already a component named '{0}'.  Components must have unique names, and names must be case-insensitive.  A name also cannot conflict with the name of any component in an inherited class.

# Happens when user tries to rename component to an empty value.
CODEMANEmptyIdentifier=Component name cannot be empty.

# User has tried to rename component to invalid value.  What is valid?  Depends on the
# language.  Same rules apply for component names that apply for identifiers of the language.
CODEMANInvalidIdentifier=Invalid component name: '{0}'.

# This indicates a problem in the root designer.  It means that the designer does not support
# the same view types that VS does.  Today VS view types are restricted to Windows Forms
# and "Passthrough" (which means you're using VSIP interfaces directly).  Contact component
# vendor.
CODEMANUnsupportedTechnology=The class {0} cannot be designed in this version of Visual Studio.  The designer for the class uses unsupported technology.

GlobalEdit=A global edit has been made external to the designer.  Please close and re-open the designer.s

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerHost resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Wrapper message before we show the global failure message for the document.  The real error follows.
# This is never added to an exception, it's just painted on the window.
CODEMANDocumentException=An error occurred while loading the document.  Fix the error, and then try loading the document again.  The error message follows:\r\n\r\n{0}

# Essentially an internal error in the serializer.  It said it wasn't successful, but didn't say why.
CODEMANUnknownLoadError=An error occurred while loading the document.  The document provided no additional information.

# Undo name given to the undo unit that represents a delete of a component.
CODEMANDestroyComponentTransaction=Deleting '{0}'.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerLoader error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# While loading the designer, we failed to find a type.  
DESIGNERLOADERTypeNotFound=The type '{0}' could not be found.  Ensure that the assembly containing the type is referenced.  If the assembly is part of the current development project, ensure that the project has been built.

# Same error as above, but this usually happens because of a metadata attribute.  Check that all assemblies used by
# attributes are also referenced.
DESIGNERLOADERAssemblyNotFound=The assembly '{0}' could not be found.  Ensure that the assembly is referenced.  If the assembly is part of the current development project, ensure that the project has been built.

# This can happen if you have the .cs or .resx file opened in a binary editor, for example.  Designers often require several
# files besides the basic code file.  The editor that has the file open will be surfaced for the user to see.
DESIGNERLOADERIVsTextStreamNotFound=Another editor has '{0}' open in an incompatible mode. Please close the editor and try this operation again.

# Same error as above, only the shell didn't give us a file name.
DESIGNERLOADERIVsTextStreamNotFoundGeneric=Another editor has the file open in an incompatible mode. Please close the editor and try this operation again.

# This happens when VS rejects our request to edit a file.  This is generally due to 
# disk space or memory problems.
DESIGNERLOADEREditFailed=The text in the code editor could not be modified.  Check that the file is not read-only and there is sufficient disk space.

# This happens when the text editor is marked as read only.  Generally users see this when you have
# a Visual Basic project that is in run mode.  In this case Visual Basic locks all edits out of the code files.
BUFFERNoModify=The designer cannot be modified at this time.

# This happens when we can't find a CodeDom engine for the project language.  This can happen if you do an Open With on a file
# that is in a project that doesn't support designers (like the misc files project).
DESIGNERLOADERNoLanguageSupport=The language for this file does not support the necessary code parsing and generation services.  Please ensure the file you are opening is a member of a project and then try to open the file again.

# Similar to above, but this is more internal.  This is a registration problem or designer
# problem.  Call MS.
DESIGNERLOADERNoFileCodeModel=This language engine does not support a CodeModel with which to load a designer.

# Normally we will reload a designer after changes are made automatically. However, the implementor of the designer
# can choose to turn this off.  If it's off, we will display this message prompting the user to
# close and re-open by hand.  Web forms used to do this, but they ended up implementing reload support
# anyway.
DESIGNERLOADERManualReload=Another editor has made changes to {0}.  Close and re-open this designer for those changes to take effect.

#
# The designer emits code in one big burst into the code window.  If the user presses undo in the code window he/she could undo all of those
# designer changes.  We display this message when the user presses undo in the code window as a warning that the designer changes are
# about to be removed.
#
DESIGNERLOADERUndoWarning=Undoing this operation may result in a loss of work.  The operation represents all changes made in the designer before the code window was shown.  These changes will be lost if you proceed.\r\n\r\nDo you want to undo these changes?

# This is again similar to missing CodeDom.  The user had to use Open With to get to this message. The message indicates
# that the language of the project does not support code parsing.
DESIGNERSERVICENoDesignerLoaderForType=Visual Studio is unable to open '{0}' in design view.\r\nNo parser is installed for the file type.

# this means that there is a DesignerLoader registered for the file type, but we couldn't load it.  This is a setup
# error.  Contact language vendor for a fix.
DESIGNERSERVICENoDesignerLoaderClass=A requested language parser is not installed.  The language parser name is '{0}'

# Contact vendor. The vendor has registered a DesignerLoader class in the registry that doesn't actually
# derive from DesignerLoader.
DESIGNERSERVICEBadDesignerLoader=The language parser class '{0}' is not implemented properly.  Please contact the vendor for an updated parser module.

# This is a designer problem.  Contact component vendor for a fix.  It indicates that someone
# has called AddService with an interface and object pair, but the object does not implement
# the interface.
DESIGNERSERVICEInvalidServiceInstance=The service instance must derive from or implement {0}.

# Designer problem. Contact control vendor.  This happens when a designer requests access to
# a tools options page by name, but the page doesn't exist.
DESIGNERPACKAGEUnknownPage=Unable to find page named '{0}'

# Same as above, but for a particular value on a page.  
DESIGNERPACKAGEUnknownPageValue=Unable to find property '{0}' on page '{1}'

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignerLoader resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

DESIGNERSERVICEUnknownName=<Unknown>
DESIGNERPACKAGEUnknownName=<Unknown>

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Connection point error messages.
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

ConnPointAdviseFailed=IConnectionPoint::Advise failed with hr=0x{0:X} for event interface {1}.
ConnPointCouldNotCreate=Could not create connection point for event interface '{0}'.
ConnPointSinkIF=The sink object does not implement the event interface.
ConnPointSourceIF=The source object does not expose the {0} event interface.
ConnPointUnhandledType=Unhandled type {0}.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# MenuCommandService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# This happens if the designer adds a command to the command table, but there
# is already a handler for the command.  Contact control vendor for a new
# designer.
MENUCOMMANDSERVICEDuplicateCommand=There is already a command handler for the menu command '{0}'.

#=------------------------------------------------------------------=
# Toolbox tabs
#=------------------------------------------------------------------=

TOOLTABDefault=General
# Note: these are not used in code, but they are accessed late-bound by the toollist.txt file.  Don't nuke them!
TOOLTABWinForms=Windows Forms
TOOLTABComponents=Components
TOOLTABWebForms=Web Forms
TOOLTABMobileWebForms=Mobile Web Forms

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# AssemblyService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal designer error.  Something in VS needed a particular service, but
# that service wasn't available.  Generally a problem in MS code, but may happen
# if you try to force a designer to load on a project that can't support it.
ASSEMBLYSERVICEMissingService=The service '{0}' is required, but could not be located.  There may be a problem with your Visual Studio installation.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# TypeResolutionService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal MS error, indicates we accessed VS specific goodies
# from the wrong thread.  VS hates this and crashes.
TYPELOADERTypeResolutionServiceInvalidThread=The type resolution service may only be called from the main application thread.

# Contact control vendor.  This indicates someonen has asked for a
# particular assembly, but the name they provided is not a valid
# assembly name (contains garbage, etc).
TYPELOADERInvalidAssemblyName=The assembly name '{0}' is invalid.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# TypeResolutionService resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

TYPELOADERNotifyRebuild=You must rebuild your project for the changes to {0} to show up in any open designers.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# ToolboxService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Designer error.  Contact control vendor.  Indicates that the designer
# tried to access a tab on the toolbox but that tab isn't
# there.
TBXSVCBadCategory=\"{0}\" is not a toolbox category.

# Designer error.  Contact control vendor.  Indicates that the designer
# tried to reference a class on a particular toolbox tab, but it's not
# there.
TBXSVCToolNotInCategory=Category '{1}' does not have a tool for class '{0}'

# Internal MS error.  Contact MS.  We need the Visual Studio toolbox,
# but it's not around.
TBXSVCNoVsToolbox=Cannot access the Visual Studio Toolbox at this time.

# Internal designer error.  Contact control vendor.  The vendor added
# a callback to a toolbox item, but the item already contains a callback.
TBXSVCCreatorAlreadyResigered=There is already a toolbox item creator registered for the format '{0}'.

# This can happen if the data within the toolbox item becomes corrupted or
# the version of the component has changed.  
TBCSVCBadToolboxItem=The toolbox item for '{0}' could not be retrieved from the toolbox.  Try removing the item from the toolbox and adding it back.

# This is similar to the above, except that we got the toolbox item, but the item itself threw
# an exception when we accessed it.  Contact component vendor.
TBCSVCBadToolboxItemWithException=The toolbox item for '{0}' could not be retrieved from the toolbox.  Make sure the assembly that contains the toolbox item is correctly installed.  The toolbox item raised the following error: {1}

# Internal MS error.  Our toolbox enumerator only supports one item at a time.  This is only
# accessible from internal COM interfaces so only MS people can get at it.
TBXCOMPOnlyOneEnum=The Toolbox enumerator object only supports retrieving one item at a time.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# ToolboxService Resources
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

TBXSVCDefaultTab=General

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# CheckoutService error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# User wants to make a change to a file that is checked into SCC.  Normally
# we present the checkout dialog and the user checks out the file. For some
# reason this didn't happen and we failed to check out the file.  Perhaps caused
# by a merge conflict during check out...
CHECKOUTSERVICEUnableToCheckout=Unable to checkout the current file.  The file may be locked, or you may need to check the file manually.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Generic error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# We were asked to create a component, but the object we created doesn't
# implement IComponent.  Contact component vendor.
# 0 - classname
ClassNotIComponent=The object '{0}' does not implement the IComponent interface.

# This is a problem with the user's source code.  The name of the class we're
# designing is not valid for the language.
# 0 - component name
InvalidClassNameIdentifier=The class name is not a valid identifier for this language.

# Wrapper error while parsing.  Generally parsing errors are caused by syntax errors or a problem
# in the parser.  
FailedToParseMethod=Failed to parse method '{0}'. The parser reported the following error '{1}'. Please look in the Task List for potential errors.

# This most often happens when the user tries to connect an event to a control that
# is being inhrited from a base class, but the controls' member variable is private
# so we can't connect it to the method.  Privately inherited controls cannot have
# additional events bound to them.
# 0 - property name
EventReadOnly=Cannot bind an event handler to the '{0}' event because it is read only.

# Contact vendor of object.  We were asked by a designer to create an object, but the object
# threw when we tried.
# 0 - classname, 1 - exception text
ExceptionCreatingObject=An exception occurred while trying to create an instance of {0}. The exception was \"{1}\".

# Generic wrapper exception.  If we get an exception out of nowhere, we wrap it in this and display a dialog.
# We will populate the help link with the help link from the exception that actually happened.
ExceptionInMessageLoop=The following exception has occurred:\r\n\r\n{0}: {1}

# Similar to the parse error listed in serialization, only this happens as a result
# of a designer explicitly asking to create an object with particular parameters in the
# constructor.  Contact component vendor for an update.
# 0 - classname
ClassMissingConstructor=Class {0} has no matching constructor.

;properties window
PbrsSelectedObject=Selected Object
PbrsComponentsComboAccessibleName=Components

# UndoService strings

UNDOComponentAdd0=Add Component
UNDOComponentAdd1=Add {0}
UNDOComponentChange0=Change Component
UNDOComponentChange1=Change {0}
UNDOComponentChange2=Change {0}.{1}
UNDOComponentRemove0=Remove Component
UNDOComponentRemove1=Remove {0}

# Wizard Strings

# Common -- Can we all share it?
CancelButton=Cancel
HelpButton=Help

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# InheritancePicker error messages
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Internal VS error -- the templates for inherited forms are not
# on the disk.  Call MS.
IP_Error1a=Could not locate the project item templates for inherited components.

# Dialog caption for above error.
IP_Error1b=Template Error

# Happens when the user browses to a file, but the file couldn't be opened.
# The file might not be a valid assembly.
IP_Error2a=Assembly {0} Could not be opened. Check that the file still exists.
IP_Error2b=Assembly Error

# Happens when the user specifies a name for an inherited form that already exists in the project.
IP_Error3a='{0}' already exists in '{1}'.  Please enter a unique Name.
IP_Error3b=File Exists

# Happens when the assembly the user picked threw an exception while trying to load.  Generally this
# indicates it isn't a valied assembly file (like a native dll).
IP_Error5a=Unable to load assembly '{0}'.  Ensure that the file is a valid .Net Framework assembly.
IP_Error5b=Assembly Load Error

# We failed to add a reference.
IP_Error6a=Unable to add reference '{0}' to the current application.  Check that a different version of '{0}' is not already referenced.
IP_Error6b=Reference Error

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# StyleDesigner
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# StyleBuilder strings
SB_Caption=Style Builder
SB_OK=OK
SB_Cancel=Cancel
SB_Help=Help

# Miscellaneous common strings
Combo_NotSetValue=<Not Set>

# FontStylePage strings
FntSP_Caption=Font
FntSP_PreviewText=Sample Text
FntSP_FontNameLabel=&Font name
FntSP_FamilyOption=Family:
FntSP_SysFontOption=System font:
FntSP_SysFontCombo_1=Window caption
FntSP_SysFontCombo_2=ToolWindow caption
FntSP_SysFontCombo_3=Dialog text
FntSP_SysFontCombo_4=Icon labels
FntSP_SysFontCombo_5=Menu text
FntSP_SysFontCombo_6=Tooltip text
FntSP_FontAttribLabel=Font attributes
FntSP_ColorLabel=&Color:
FntSP_ItalicsLabel=&Italics:
FntSP_ItalicsCombo_1=Normal
FntSP_ItalicsCombo_2=Italic
FntSP_SmallCapsLabel=S&mall caps:
FntSP_SmallCapsCombo_1=Normal
FntSP_SmallCapsCombo_2=Small caps
FntSP_SizeLabel=&Size
FntSP_SpcSizeOption=Specific:
FntSP_AbsSizeOption=Absolute:
FntSP_AbsSizeCombo_1=XX-Small
FntSP_AbsSizeCombo_2=X-Small
FntSP_AbsSizeCombo_3=Small
FntSP_AbsSizeCombo_4=Medium
FntSP_AbsSizeCombo_5=Large
FntSP_AbsSizeCombo_6=X-Large
FntSP_AbsSizeCombo_7=XX-Large
FntSP_RelSizeOption=Relative:
FntSP_RelSizeCombo_1=Smaller
FntSP_RelSizeCombo_2=Larger
FntSP_WeightLabel=&Bold
FntSP_AbsWtOption=Absolute:
FntSP_AbsWtCombo_1=Normal
FntSP_AbsWtCombo_2=Bold
FntSP_RelWtOption=Relative:
FntSP_RelWtCombo_1=Lighter
FntSP_RelWtCombo_2=Bolder
FntSP_EffectsLabel=Effects
FntSP_EffectNoneCheck=&None
FntSP_EffectUnderlineCheck=&Underline
FntSP_EffectStrikethroughCheck=Stri&kethrough
FntSP_EffectOverlineCheck=&Overline
FntSP_CapitalizationLabel=Capitali&zation:
FntSP_CapitalizationCombo_1=None
FntSP_CapitalizationCombo_2=Initial Cap
FntSP_CapitalizationCombo_3=lowercase
FntSP_CapitalizationCombo_4=UPPERCASE

# FontPicker strings
FP_Caption=Font Picker
FP_OKButton=OK
FP_CancelButton=Cancel
FP_HelpButton=Help
FP_InstructionLabel=Create a font sequence in order of preference:
FP_InstFontLabel=&Installed fonts:
FP_GenericFontLabel=&Generic fonts:
FP_CustomFontLabel=&Custom fonts:
FP_SelectedFonts=&Selected fonts:

# BackgroundStylePage strings
BgSP_Caption=Background
BgSP_PreviewText=Sample Text
BgSP_BackColorLabel=Background color
BgSP_TransparentCheck=T&ransparent
BgSP_ColorLabel=&Color:
BgSP_BackImageLabel=Background image
BgSP_BackImageNoneCheck=&Do not use background image
BgSP_BackImageURLLabel=&Image:
BgSP_BackImageURLSelect=Select Background Image
BgSP_BackImageURLFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|
BgSP_TilingLabel=&Tiling:
BgSP_TilingCombo_1=Tile in horizontal direction
BgSP_TilingCombo_2=Tile in vertical direction
BgSP_TilingCombo_3=Tile in both directions
BgSP_TilingCombo_4=Do not tile
BgSP_ScrollingLabel=&Scrolling:
BgSP_ScrollingCombo_1=Scrolling background
BgSP_ScrollingCombo_2=Fixed background
BgSP_PositionGroup= Position
BgSP_HPosLabel=&Horizontal:
BgSP_HPosCombo_1=Left
BgSP_HPosCombo_2=Center
BgSP_HPosCombo_3=Right
BgSP_HPosCombo_4=Custom
BgSP_VPosLabel=&Vertical:
BgSP_VPosCombo_1=Top
BgSP_VPosCombo_2=Center
BgSP_VPosCombo_3=Bottom
BgSP_VPosCombo_4=Custom

# TextStylePage strings
TxtSP_Caption=Text
TxtSP_PreviewTextNormal=Normal Text
TxtSP_PreviewTextInflow=Inflow Text
TxtSP_PreviewTextPara=sample paragraph text sample paragraph text sample paragraph text sample paragraph text sample paragraph text
TxtSP_PreviewText=Inflow text.<P>Sample Text Line 1<br>Sample Text Line 2(with some whitespace)</P>
TxtSP_AlignmentLabel=Alignment
TxtSP_HorzAlignLabel=&Horizontal:
TxtSP_HorzAlignCombo_1=Left
TxtSP_HorzAlignCombo_2=Centered
TxtSP_HorzAlignCombo_3=Right
TxtSP_HorzAlignCombo_4=Justified
TxtSP_VertAlignLabel=&Vertical:
TxtSP_VertAlignCombo_1=Subscript
TxtSP_VertAlignCombo_2=Superscript
TxtSP_VertAlignCombo_3=Normal
TxtSP_JustificationLabel=&Justification:
TxtSP_JustificationCombo_1=Auto
TxtSP_JustificationCombo_2=Space words
TxtSP_JustificationCombo_3=Newspaper style
TxtSP_JustificationCombo_4=Distribute spacing
TxtSP_JustificationCombo_5=Distribute all lines
TxtSP_SpacingLabel=Spacing between
TxtSP_SpcLettersLabel=L&etters:
TxtSP_SpcWordsLabel=Words:
TxtSP_SpcLinesLabel=&Lines:
TxtSP_SpcCombo_1=Normal
TxtSP_SpcCombo_2=Custom
TxtSP_FlowLabel=Text flow
TxtSP_IndentationLabel=&Indentation:
TxtSP_DirectionLabel=Te&xt direction:
TxtSP_DirectionCombo_1=Left to right
TxtSP_DirectionCombo_2=Right to left
TxtSP_WhitespaceLabel=&Whitespace:
TxtSP_WhitespaceCombo_1=Collapse whitespace
TxtSP_WhitespaceCombo_2=Preserve whitespace
TxtSP_WhitespaceCombo_3=Do not wrap

# EdgesStylePage strings
EdgeSP_Caption=Edges
EdgesSP_MarginsLabel=&Margins
EdgesSP_PaddingLabel=&Padding
EdgesSP_EdgeTopLabel=Top:
EdgesSP_EdgeBottomLabel=Bottom:
EdgesSP_EdgeLeftLabel=Left:
EdgesSP_EdgeRightLabel=Right:
EdgesSP_BordersLabel=Borders
EdgesSP_SidesLabel=Select the &edge to be changed:
EdgesSP_SidesCombo_1=Top
EdgesSP_SidesCombo_2=Bottom
EdgesSP_SidesCombo_3=Left
EdgesSP_SidesCombo_4=Right
EdgesSP_SidesCombo_5=All
EdgesSP_StyleLabel=&Style:
EdgesSP_StyleCombo_1=None
EdgesSP_StyleCombo_2=Solid Line
EdgesSP_StyleCombo_3=Double Line
EdgesSP_StyleCombo_4=Groove
EdgesSP_StyleCombo_5=Ridge
EdgesSP_StyleCombo_6=Inset
EdgesSP_StyleCombo_7=Outset
EdgesSP_WidthLabel=&Width:
EdgesSP_WidthCombo_1=Thin
EdgesSP_WidthCombo_2=Medium
EdgesSP_WidthCombo_3=Thick
EdgesSP_WidthCombo_4=Custom
EdgesSP_ColorLabel=&Color:

# LayoutStylePage strings
LytSP_Caption=Layout
LytSP_FlowControlLabel=Flow control
LytSP_VisibilityLabel=&Visibility:
LytSP_VisibilityCombo_1=Hidden
LytSP_VisibilityCombo_2=Visible
LytSP_DisplayLabel=&Display:
LytSP_DisplayCombo_1=Do not display
LytSP_DisplayCombo_2=As a block element
LytSP_DisplayCombo_3=As an inflow element
LytSP_FloatLabel=Allow te&xt to flow:
LytSP_FloatCombo_1=Don't allow text on sides
LytSP_FloatCombo_2=To the right
LytSP_FloatCombo_3=To the left
LytSP_ClearLabel=Allow &floating objects:
LytSP_ClearCombo_1=On either side
LytSP_ClearCombo_2=Only on right
LytSP_ClearCombo_3=Only on left
LytSP_ClearCombo_4=Do not allow
LytSP_ContentLabel=Content
LytSP_OverflowLabel=&Overflow:
LytSP_OverflowCombo_1=Use scrollbars if needed
LytSP_OverflowCombo_2=Always use scrollbars
LytSP_OverflowCombo_3=Content is not clipped
LytSP_OverflowCombo_4=Content is clipped
LytSP_ClippingGroup= Clipping
LytSP_ClipTopLabel=&Top:
LytSP_ClipLeftLabel=&Left:
LytSP_ClipBottomLabel=&Bottom:
LytSP_ClipRightLabel=&Right:
LytSP_PageBreakGroup=Printing page breaks
LytSP_PgBrBeforeLabel=B&efore:
LytSP_PgBrBeforeCombo_1=Auto
LytSP_PgBrBeforeCombo_2=Force a page break
LytSP_PgBrAfterLabel=&After:
LytSP_PgBrAfterCombo_1=Auto
LytSP_PgBrAfterCombo_2=Force a page break

# PositionStylePage strings
PosSP_Caption=Position
PosSP_PosModeLabel=&Position mode:
PosSP_PosModeCombo_1=Position in normal flow
PosSP_PosModeCombo_2=Offset from normal flow
PosSP_PosModeCombo_3=Absolutely position
PosSP_TopLabel=&Top:
PosSP_LeftLabel=&Left:
PosSP_WidthLabel=&Width:
PosSP_HeightLabel=&Height:
PosSP_ZIndexLabel=&Z-Index:

# ListsStylePage strings
LstSP_Caption=Lists
LstSP_PreviewText_1=List Item 1, Line 1<br>List Item 1, Line 2
LstSP_PreviewText_2=List Item 2, Line 1
LstSP_ListTypeLabel=&Lists:
LstSP_ListTypeCombo_1=Bulleted
LstSP_ListTypeCombo_2=Unbulleted
LstSP_BulletsLabel=Bullets
LstSP_PositionLabel=&Position:
LstSP_PositionCombo_1=Outside (Text is indented in)
LstSP_PositionCombo_2=Inside (Text is not indented)
LstSP_StyleLabel=&Style:
LstSP_StyleCombo_1=Circle
LstSP_StyleCombo_2=Disc
LstSP_StyleCombo_3=Square
LstSP_StyleCombo_4=1 2 3 4 ...
LstSP_StyleCombo_5=i ii iii iv ...
LstSP_StyleCombo_6=I II III IV ...
LstSP_StyleCombo_7=a b c d ...
LstSP_StyleCombo_8=A B C D ...
LstSP_CustomBulletCheck=&Custom bullet
LstSP_CustomImageOption=Image:
LstSP_CustomNoneOption=None
LstSP_CustomImageSelect=Select Bullet Image
LstSP_CustomImageFilter=Image Files(*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png)|*.gif;*.jpg;*.jpeg;*.bmp;*.wmf;*.png|All Files(*.*)|*.*|

# OtherStylePage strings
OtherSP_Caption=Other
OtherSP_VisEffectsLabel=Visual effects
OtherSP_FilterLabel=&Filter:
OtherSP_UILabel=User interface
OtherSP_CursorLabel=&Cursor:
OtherSP_CursorCombo_1=Auto
OtherSP_CursorCombo_2=Default
OtherSP_CursorCombo_3=Crosshair
OtherSP_CursorCombo_4=Hand
OtherSP_CursorCombo_5=Move
OtherSP_CursorCombo_6=Top Resize
OtherSP_CursorCombo_7=Bottom Resize
OtherSP_CursorCombo_8=Left Resize
OtherSP_CursorCombo_9=Right Resize
OtherSP_CursorCombo_10=Top-Left Resize
OtherSP_CursorCombo_11=Bottom-Left Resize
OtherSP_CursorCombo_12=Top-Right Resize
OtherSP_CursorCombo_13=Bottom-Right Resize
OtherSP_CursorCombo_14=Text
OtherSP_CursorCombo_15=Hourglass
OtherSP_CursorCombo_16=Help
OtherSP_BehaviorLabel=Behavior
OtherSP_URLLabel=&URL:
OtherSP_BehaviorSelect=Select Behavior
OtherSP_BehaviorFilter=Behavior Files(*.htc)|*.htc|All Files(*.*)|*.*|
OtherSP_TablesLabel=Tables
OtherSP_BordersLabel=&Borders:
OtherSP_BordersCombo_1=Separate cell borders
OtherSP_BordersCombo_2=Collapse cell borders
OtherSP_LayoutLabel=&Layout:
OtherSP_LayoutCombo_1=Auto
OtherSP_LayoutCombo_2=Fixed layout

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Web Forms Designer strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

# Add/Remove components dialog strings
AddRemoveComponentsBrowse=&Browse...
AddRemoveComponentsSDK=Directory
AddRemoveComponentsVersion=Version:
AddRemoveComponentsLanguage=Language:
AddRemoveComponentsAssemblyNameHeader=Assembly Name
AddRemoveComponentsNamespace=Namespace
AddRemoveComponentsUnavailable=(Unavailable)
AddRemoveComponentsDebug={0} (Debug)
AddRemoveComponentsRetail={0} (Retail)
AddRemoveComponentsAssemblyName={0} ({1})
AddRemoveComponentsName=Name
AddRemoveComponentsFilter=Executables (*.dll; *.exe)|*.dll;*.exe|All Files (*.*)|*.*
AddRemoveComponentsBadModule='{0}' is not a Microsoft .NET module.

# This happens if there are bogus or incompatible files in the SDK directories.
#
AddRemoveComponentsSdkErrors=The following assemblies are installed SDK assemblies but could not be shown in the customize toolbox dialog because they are missing one or more components.  Please make sure that all necessary libraries are available:\r\n{0}

# This can happen if the user entered a file to load and we couldn't load all types in the file.  Typically
# this happens if the file has dependencies on assemblies that aren't on the machine.
#
AddRemoveComponentsTypeLoadFailed=The assembly '{0}' could not be loaded.  Check that any dependencies the file requires are installed.

# This can happen if the user gives us a file that is a valid assembly, but that 
# assembly didn't contain anything we can put on the toolbox.
#
AddRemoveComponentsNoComponents=There are no components in '{0}' that can be placed on the toolbox.


#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# installer design strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

InstallerDesign_AddInstallerLink=Add &Installer
InstallerDesign_AddInstallerFailed=AddInstaller failed.
InstallerDesign_CouldntGetService=Couldn't get IExtensibilityService.
InstallerDesign_BadProjectType=Unknown project type. Project installers are supported only in Visual Basic and CSharp projects.
InstallerDesign_UnableToAddProjectInstaller=Unable to add installer. The designer could not add a ProjectInstaller.
InstallerDesign_UnableToFindTemplateDir=Unable to add installer.  Could not find templates directory for this project type.
InstallerDesign_NoProjectFilename=Unable to add installer.  Could not determine file type.
InstallerDesign_CoulndtFindTemplate=Couldn't find installer template.
InstallerDesign_CouldntShowProjectInstaller=Unable to add installer. The designer could not be shown for the ProjectInstaller class. Check to make sure there are no syntax errors in the file.
InstallerDesign_NoInstallerAttrib=The given component of type '{0}' does not have an associated installer. (Installers are associated through an InstallerTypeAttribute in the component's metadata.)
InstallerDesign_InstallerNotAnInstaller=The type '{0}', specified as installer for components of type '{1}', is not an installer. It must inherit from System.Configuration.Installer.
InstallerDesign_CouldntCreateInstaller=Could not create installer of type '{0}'.


#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# dynamic properties service strings
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

;
; Exceptions messages
;

ConfigGetNoComponent=No component to get the value from
ConfigSetNoComponent=No component to set the value on
ConfigMissingRoot=The configuration file is not valid because the root element is not <configuration>.
ConfigMissingKey=Missing key attribute on add tag in appSettings section.
ConfigMissingValue=Missing value attribute on add tag in appSettings section.
ConfigLoadError=There was an error loading app.config.  Since the document being loaded uses Dynamic Properties, the config file must be valid.  Correct the following error in app.config:\n\n{0}
ServiceCantGetIDesignerHost=Unable to get IDesignerHost interface.  Dynamic properties not supported.

;
; constant strings
;

ConfigAdvanced=(Advanced)
ConfigConfiguredProperties=Dynamic Properties
ConfigNone=(None)
ConfigDefault=(Default)
ConfigCustom=(Custom)
ConfigEdit=Edit...
ConfigUserAppComment1=    User application and configured property settings go here.
ConfigUserAppComment2=    Example: <add key="settingName" value="settingValue"/> 
ConfigAdvancedDesc=Advanced Dynamic Properties allows you to configure and set key names by which to store any dynamic property values.

;
; DescriptionAttribute
;

ManagedPropServiceDescr=Maps values in the application configuration file <appSettings> section to this component's properties.

InvalidArgument='{1}' is not a valid value for '{0}'.
ObjectDisposed='{0}' has been disposed and can no longer be used.
InvalidNullArgument=Null is not a valid value for '{0}'.
PersisterClassNotFound=<couldn't find resource string "PersisterClassNotFound">
DesignerBatchCreateMenu=Create MenuItem
DesignerBatchDeleteMenu=Delete MenuItem
DesignerBatchMoveMenu=Move MenuItem
MenuDesignerInvalidPropertyValue=Invalid property value for MenuItem.
MenuDesignerInheritedParent=Cannot add a new item to this menu because it is inherited.
MenuDesignerEditMenuVerb=&Edit Menu
MenuDesignerTopLevelSeparator=Top-level menu names cannot contain separators.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\sys\system.txt ===
### File system.core.core.txt ###

[strings]

#=------------------------------------------------------------------=
# Strings used by the debug class
#=------------------------------------------------------------------=

DebugLaunchFailed=Cannot launch the debugger.  Make sure that a Microsoft (R) .NET Framework debugger is properly installed.
DebugLaunchFailedTitle=Microsoft .NET Framework Debug Launch Failure
DebugAssertTitle=Assertion Failed: Abort=Quit, Retry=Debug, Ignore=Continue
DebugAssertBanner=---- DEBUG ASSERTION FAILED ----
DebugAssertShortMessage=---- Assert Short Message ----
DebugAssertLongMessage=---- Assert Long Message ----

ObjectDisposed=Object {0} has been disposed and can no longer be used.
NotSupported=This operation is not supported.
ExceptionOccurred=An exception occurred writing trace output to log file '{0}'. {1}

ToStringNull=(null)

#=------------------------------------------------------------------=
# Enum converter resources
#=------------------------------------------------------------------=

EnumConverterInvalidValue=The value '{0}' is not a valid value for the enum '{1}'.

#=------------------------------------------------------------------=
# Strings used by type converters
#=------------------------------------------------------------------=

ConvertFromException={0} cannot convert from {1}.
ConvertToException='{0}' is unable to convert '{1}' to '{2}'.
ConvertInvalidPrimitive={0} is not a valid value for {1}.

ErrorMissingPropertyAccessors=Accessor methods for the {0} property are missing.
ErrorInvalidPropertyType=Invalid type for the {0} property.
ErrorMissingEventAccessors=Accessor methods for the {0} event are missing.
ErrorInvalidEventHandler=Invalid event handler for the {0} event.
ErrorInvalidEventType=Invalid type for the {0} event.
InvalidMemberName=Invalid member name.
ErrorBadExtenderType=The {0} extender provider is not compatible with the {1} type.

#=------------------------------------------------------------------=
# Strings used by System Events
#=------------------------------------------------------------------=

ErrorCreateSystemEvents=Failed to create system events window thread.
ErrorCreateTimer=Cannot create timer.
ErrorKillTimer=Cannot end timer.
ErrorSystemEventsNotSupported=System event notifications are not supported under the current context. Server processes, for example, may not support global system event notifications.
ErrorGetTempPath=Cannot get temporary file name

# CheckoutException strings
CHECKOUTCanceled=The checkout was canceled by the user.

# service provider container strings
ErrorInvalidServiceInstance=The service instance must derive from or implement {0}.
ErrorServiceExists=The service {0} already exists in the service container.

# Strings used by System.Collections
ArgumentNull_Key=Key cannot be null.
Argument_AddingDuplicate=An entry with the same key already exists.
ArgumentOutOfRange_NeedNonNegNum=Index is less than zero.
InvalidOperation_EnumFailedVersion=Collection was modified after the enumerator was instantiated.
InvalidOperation_EnumOpCantHappen=Enumerator is positioned before the first element or after the last element of the collection.

# Strings used by System.CodeDom
InvalidPrimitiveType=Invalid Primitive Type: {0}. Only CLS compliant primitive types can be used. Consider using CodeObjectCreateExpression.
CodeGenOutputWriter=The output writer for code generation and the writer supplied don't match and cannot be used. This is generally caused by a bad implementation of a CodeGenerator derived class.
InvalidLanguageIdentifier=The identifier:"{0}" on the property:"{1}" of type:"{2}" is not a valid language-independent identifier name. Check to see if CodeGenerator.IsValidLanguageIndependentIdentifier allows the identifier name.
InvalidTypeName=The type name:"{0}" on the property:"{1}" of type:"{2}" is not a valid language-independent type name.

#----------------------------------------------------------------------
# Metadata helpers
#=------------------------------------------------------------------=

# 0 - property name, 1 - provider name
MetaExtenderName={0} on {1}

# 0 - Argument, 1 - invalid value, 2 - Enum class
InvalidEnumArgument=Enum argument value {1} is not valid for {0}. {0} should be a value from {2}.

# 0 - Argument
InvalidNullArgument=Null is not a valid value for {0}.
InvalidNullEmptyArgument=Argument {0} cannot be null or zero-length.

# 0 - Argument, 1 - invalid value

LicExceptionTypeOnly=A valid license cannot be granted for the type {0}. Contact the manufacturer of the component for more information.
LicExceptionTypeAndInstance=An instance of type '{1}' was being created, and a valid license could not be granted for the type '{0}'. Please,  contact the manufacturer of the component for more information.
LicMgrContextCannotBeChanged=The CurrentContext property of the LicenseManager is currently locked and cannot be changed.
LicMgrAlreadyLocked=The CurrentContext property of the LicenseManager is already locked by another user.
LicMgrDifferentUser=The CurrentContext property of the LicenseManager can only be unlocked with the same contextUser.

InvalidElementType=Element type {0} is not supported.
InvalidIdentifier=Identifier '{0}' is not valid.
ExecFailedToCreate=Failed to create file {0}.
ExecTimeout=Timed out waiting for a program to execute. The command being executed was {0}.
ExecBadreturn=An invalid return code was encountered waiting for a program to execute. The command being executed was {0}.
ExecCantGetRetCode=Unable to get the return code for a program being executed. The command that was being executed was '{0}'.
ExecCantExec=Cannot execute a program. The command being executed was {0}.
ExecCantRevert=Cannot execute a program. Impersonation failed.
CompilerNotFound=Compiler executable file {0} cannot be found.
DuplicateFileName=The file name '{0}' was already in the collection.

CollectionReadOnly=Collection is read-only.

BitVectorFull=Bit vector is full.

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# DesignTime
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=


#=------------------------------------------------------------------=
# array converter resources
#=------------------------------------------------------------------=
ArrayConverterText={0} Array

#=------------------------------------------------------------------=
# CollectionConverter resources
#=------------------------------------------------------------------=
CollectionConverterText=(Collection)

#=------------------------------------------------------------------=
# CultureInfoConverter
#=------------------------------------------------------------------=
CultureInfoConverterDefaultCultureString=(Default)
CultureInfoConverterInvalidCulture=The {0} culture cannot be converted to a CultureInfo object on this computer.

#=------------------------------------------------------------------=
# editors
#=------------------------------------------------------------------=
# {0} - text {1} primitive
InvalidPrimitive=The text {0} is not a valid {1}.

#=------------------------------------------------------------------=
# timer control properties/events
#=------------------------------------------------------------------=
TimerInvalidInterval='{0}' is not a valid value for 'Interval'. 'Interval' must be greater than {1}.

#Resources for TraceSwitch component
TraceSwitchLevelTooHigh=Attempted to set {0} to a value that is too high.  Setting level to TraceLevel.Verbose
TraceSwitchLevelTooLow=Attempted to set {0} to a value that is too low.  Setting level to TraceLevel.Off
TraceSwitchInvalidLevel=The Level must be set to a value in the enumeration TraceLevel.
TraceListenerIndentSize=The IndentSize property must be non-negative.
TraceListenerFail=Fail:

#=------------------------------------------------------------------=
#=------------------------------------------------------------------=
# Runtime
#=------------------------------------------------------------------=
#=------------------------------------------------------------------=

DuplicateComponentName=Duplicate component name '{0}'.  Component names must be unique and case-insensitive.
# {0} - name of the feature.
NotImplemented={0}: Not implemented
OutOfMemory=Could not allocate needed memory.
EOF=End of data stream encountered.
IOError=Unknown input/output failure.
# 0 - Character
BadChar=Unexpected Character: '{0}'.
toStringNone=(none)
toStringUnknown=(unknown)
# 0 - invalid value, 1 - Enum class
InvalidEnum={0} is not a valid {1} value.
# 0 - Number
IndexOutOfRange=Index {0} is out of range.
ErrorPropertyAccessorException=Property accessor '{0}' on object '{1}' threw the following exception:'{2}'
InvalidOperation=Invalid operation.
EmptyStack=Stack has no items in it.

#=------------------------------------------------------------------=
#Resources for PerformanceCounter component
#=------------------------------------------------------------------=

PCCategoryName=Category name of the performance counter object.
PCCounterName=Counter name of the performance counter object.
PCInstanceName=Instance name of the performance counter object.
PCMachineName=Specifies the machine from where to read the performance data.

#=------------------------------------------------------------------=
#Default category names
#=------------------------------------------------------------------=

PropertyCategoryAction=Action
PropertyCategoryAppearance=Appearance
PropertyCategoryBehavior=Behavior
PropertyCategoryData=Data
PropertyCategoryDDE=DDE
PropertyCategoryDesign=Design
PropertyCategoryDragDrop=Drag Drop
PropertyCategoryFocus=Focus
PropertyCategoryFont=Font
PropertyCategoryFormat=Format
PropertyCategoryKey=Key
PropertyCategoryList=List
PropertyCategoryLayout=Layout
PropertyCategoryDefault=Misc
PropertyCategoryMouse=Mouse
PropertyCategoryPosition=Position
PropertyCategoryText=Text
PropertyCategoryScale=Scale
PropertyCategoryWindowStyle=Window Style
PropertyCategoryConfig=Configurations

#Property Grid stuff
PBRSToolTipProperty Pages=Property Pages

#=------------------------------------------------------------------=
# strings used in Regex, RegexReplacement
#=------------------------------------------------------------------=

OnlyAllowedOnce=This operation is only allowed once per object.
BeginIndexNotNegative=Start index cannot be less than 0 or greater than input length.
LengthNotNegative=Length cannot be less than 0 or exceed input length.

# strings used in RegexCompiler, RegexInterpreter
UnimplementedState=Unimplemented state.

# strings used in RegexFCD, RegexCode, RegexWriter
UnexpectedOpcode=Unexpected opcode in regexp generation: {0}.

# strings used in RegexMatch
NoResultOnFailed=Result cannot be called on a failed Match.

# strings used in RegexParser
UnterminatedBracket=Unterminated [] set.
TooManyParens=Too many )'s.
NestedQuantify=Nested quantifier {0}.
QuantifyAfterNothing=Quantifier {x,y} following nothing.
InternalError=Internal error in ScanRegex.
IllegalRange=Illegal {x,y} with x > y.
NotEnoughParens=Not enough )'s.
BadClassInCharRange=Cannot include class \\{0} in character range.
ReversedCharRange=[x-y] range in reverse order.
UndefinedReference=(?({0}) ) reference to undefined group.
MalformedReference=(?({0}) ) malformed.
UnrecognizedGrouping=Unrecognized grouping construct.
UnterminatedComment=Unterminated (?#...) comment.
IllegalEndEscape=Illegal \\ at end of pattern.
MalformedNameRef=Malformed \\k<...> named backreference.
UndefinedBackref=Reference to undefined group number {0}.
UndefinedNameRef=Reference to undefined group name {0}.
TooFewHex=Insufficient hexadecimal digits.
MissingControl=Missing control character.
UnrecognizedControl=Unrecognized control character.
UnrecognizedEscape=Unrecognized escape sequence \\{0}.
IllegalCondition=Illegal conditional (?(...)) expression.
TooManyAlternates=Too many | in (?()|).
MakeException=parsing "{0}" - {1}
IncompleteSlashP=Incomplete \\p{X} character escape.
MalformedSlashP=Malformed \\p{X} character escape.
InvalidGroupName=Invalid group name: Group names must begin with a word character.
CapnumNotZero=Capture number cannot be zero.
AlternationCantCapture=Alternation conditions do not capture and cannot be named.
AlternationCantHaveComment=Alternation conditions cannot be comments.

# strings used in RegexCharClass
UnknownProperty=Unknown property '{0}'.

# strings used in RegexReplacement
ReplacementError=Replacement pattern error.
CountTooSmall=Count cannot be less than -1.

# string used in Regex*Collection
EnumNotStarted=Enumeration has either not started or has already finished.

#=------------------------------------------------------------------=
# File system.net.txt
#=------------------------------------------------------------------=

net_baddate=The value of the date string in the header is invalid.
net_writestarted=This property cannot be set after writing has started.
net_clsmall=The Content-Length value must be greater than or equal to zero.
net_reqsubmitted=This operation cannot be performed after the request has been submitted.
net_resubmitcanceled=An error occurred on an automatic resubmission of the request.
net_redirect_perm=WebPermission Demand failed for redirect URI.
net_resubmitprotofailed=Cannot handle redirect from http/https protocols to other dissimilar ones.
net_needchunked=TransferEncoding requires SendChunked to be set to true.
net_nochunked=Chunked encoding must be set via the Chunked property.
net_nochunkuploadonhttp10=Chunked encoding upload is not supported on the HTTP/1.0 protocol.
net_connarg=Keep-Alive and Close may not be set with this property.
net_no100=100-Continue may not be set with this property.
net_fromto=The From parameter cannot be less than To.
net_rangetoosmall=The From or To parameter cannot be less than 0.
net_entitytoobig=Bytes to be written to the stream exceed Content-Length bytes size specified.
net_invalidversion=This protocol version is not supported.
net_invalidstatus=The status code must be exactly three digits.
net_toosmall=The specified value must be greater than 0.
net_toolong=The size of {0} is too long. It cannot be longer than {1} characters.
net_connclosed=The underlying connection was closed: {0}.
net_headerrestrict=This header must be modified with the appropriate property.
net_noseek=This stream does not support seek operations.
net_servererror=The remote server returned an error: {0}.
net_nouploadonget=Cannot send a content-body with this verb-type.
net_invasync=Cannot block a call on this socket, while an earlier async one is in progress.
net_repcall=Cannot re-call BeginGetRequestStream/BeginGetResponse while a previous call is still in progress.
net_wrongversion=Only HTTP/1.0 and HTTP/1.1 version requests are currently supported.
net_badmethod=Cannot set null or blank methods on request.
net_io_notenoughbyteswritten=Cannot close stream until all bytes are written.
net_requestaborted=The request was aborted: {0}.
net_mustwrite=The response for this request cannot be retrieved until request data has been written.
net_tooManyRedirections=Too many automatic redirections attempted.
net_authmodulenotregistered=The supplied authentication module was never registered.
net_authschemenotregistered=A module for this authentication scheme was never registered.
net_proxyschemenotsupported=The ServicePointManager does not support proxies of {0} scheme.
net_maxsrvpoints=The Max Number of Service Points were exceeded.
net_unknown_prefix=The URI prefix is not recognized.
net_notconnected=Operation not allowed on non-connected sockets.
net_notstream=Operation not allowed on non-stream oriented sockets.
net_timeout=The operation has timed-out.
net_nocontentlengthonget=Content-Length cannot be set for a non-write operation.
net_contentlengthmissing=Either ContentLength must be set to a non-negative number, or SendChunked set to true in order to perform the write operation when AllowWriteStreamBuffering is disabled.
net_nullproxynotallowed=A Null IWebProxy is not allowed, please use GlobalSelectProxy.GetEmptyWebProxy() instead.
net_nonhttpproxynotallowed=The URI scheme for the supplied IWebProxy has the illegal value of '{0}'. Only 'http' is supported.
net_nottoken=The supplied string is not a valid HTTP token.
net_rangetype=A different Range specifier has already been added for this request.
net_need_writebuffering=This request requires buffering of data for authentication or redirection to be successful.
net_securitypackagesupport=The requested security package is not supported.
net_nodefaultcreds=Default credentials cannot be supplied for the {0} authentication scheme.
net_stopped=Not listening. Please call the Start() method.
net_udpconnected=Cannot send packets to an arbitrary host while connected.
net_readonlystream=The stream does not support writing.
net_writeonlystream=The stream does not support reading.
net_no_concurrent_io_allowed=The stream does not support concurrent IO read or write operations. 
net_needmorethreads=There were not enough free threads in the ThreadPool object to complete the operation. 
net_MethodNotImplementedException=This method is not implemented by this class.
net_PropertyNotImplementedException=This property is not implemented by this class.
net_MethodNotSupportedException=This method is not supported by this class.
net_PropertyNotSupportedException=This property is not supported by this class.
net_ProtocolNotSupportedException=The '{0}' protocol is not supported by this class.
net_HashAlgorithmNotSupportedException=The '{0}' hash algorithm not supported by this class.
net_QOPNotSupportedException=The '{0}' quality of service is not supported by this class.
net_SelectModeNotSupportedException=The '{0}' select mode is not supported by this class.
net_InvalidSocketHandle=The value {0} is not a valid socket handle.
net_InvalidAddressFamily=The AddressFamily {0} is not valid for the {1} EndPoint, use {2} instead.
net_InvalidSocketAddressSize=The supplied {0} is of invalid size for the {1} EndPoint.

net_sockets_blocking=Operation not allowed on a non-blocking Socket.
net_sockets_useblocking=Please use the Blocking property to change the status of the Socket.
net_sockets_select=Operation not allowed on objects of type {0}, please use only objects of type {1}.
net_sockets_empty_select=All lists are either null or empty.
net_sockets_mustbind=Please use the Bind method before doing this operation.

net_webstatus_Success=Status success
net_webstatus_NameResolutionFailure=The remote name could not be resolved
net_webstatus_ConnectFailure=Unable to connect to the remote server
net_webstatus_ReceiveFailure=An unexpected error occurred on a receive
net_webstatus_SendFailure=An unexpected error occurred on a send
net_webstatus_PipelineFailure=Pipeline failure
net_webstatus_RequestCanceled=The request was canceled
net_webstatus_ConnectionClosed=The connection was closed unexpectedly
net_webstatus_TrustFailure=Could not establish trust relationship with remote server
net_webstatus_SecureChannelFailure=Could not establish secure channel for SSL/TLS
net_webstatus_ServerProtocolViolation=The server committed an HTTP protocol violation
net_webstatus_KeepAliveFailure=The server unexpectedly refused to keep the connection alive
net_webstatus_ProxyNameResolutionFailure=The proxy name could not be resolved, verify correct proxy configuration
net_webstatus_MessageLengthLimitExceeded=The limit set on the message length was exceeded

net_httpstatuscode_NoContent=No Content
net_httpstatuscode_NonAuthoritativeInformation=Non Authoritative Information
net_httpstatuscode_ResetContent=Reset Content
net_httpstatuscode_PartialContent=Partial Content

net_httpstatuscode_MultipleChoices=Multiple Choices Redirect
net_httpstatuscode_Ambiguous=Ambiguous Redirect
net_httpstatuscode_MovedPermanently=Moved Permanently Redirect
net_httpstatuscode_Moved=Moved Redirect
net_httpstatuscode_Found=Found Redirect
net_httpstatuscode_Redirect=Redirect
net_httpstatuscode_SeeOther=See Other
net_httpstatuscode_RedirectMethod=Redirect Method
net_httpstatuscode_NotModified=Not Modified
net_httpstatuscode_UseProxy=Use Proxy Redirect
net_httpstatuscode_TemporaryRedirect=Temporary Redirect
net_httpstatuscode_RedirectKeepVerb=Redirect Keep Verb

net_httpstatuscode_BadRequest=Bad Request
net_httpstatuscode_Unauthorized=Unauthorized
net_httpstatuscode_PaymentRequired=Payment Required
net_httpstatuscode_Forbidden=Forbidden
net_httpstatuscode_NotFound=Not Found
net_httpstatuscode_MethodNotAllowed=Method Not Allowed
net_httpstatuscode_NotAcceptable=Not Acceptable
net_httpstatuscode_ProxyAuthenticationRequired=Proxy Authentication Required
net_httpstatuscode_RequestTimeout=Request Timeout
net_httpstatuscode_Conflict=Conflict
net_httpstatuscode_Gone=Gone
net_httpstatuscode_LengthRequired=Length Required

net_httpstatuscode_InternalServerError=Internal Server Error
net_httpstatuscode_NotImplemented=Not Implemented
net_httpstatuscode_BadGateway=Bad Gateway
net_httpstatuscode_ServiceUnavailable=Server Unavailable
net_httpstatuscode_GatewayTimeout=Gateway Timeout
net_httpstatuscode_HttpVersionNotSupported=Http Version Not Supported

net_uri_BadScheme=Invalid URI: The URI scheme is not valid.
net_uri_BadFormat=Invalid URI: The format of the URI could not be determined.
net_uri_BadUserPassword=Invalid URI: The username:password construct is badly formed.
net_uri_BadHostName=Invalid URI: The hostname could not be parsed.
net_uri_BadFileName=Invalid URI: Problems trying to parse as filename.
net_uri_EmptyUri=Invalid URI: The URI is empty.
net_uri_BadString=Invalid URI: There is an invalid sequence in the string.

net_io_writefailure=Unable to write data to the transport connection.
net_io_readfailure=Unable to read data from the transport connection.
net_io_transportfailure=Unable to create a transport connection.
net_io_internal_bind=Internal Error: A socket handle could not be bound to a completion port.
net_io_invalidasyncresult=The IAsyncResult object was not returned from the corresponding asynchronous method on this class.
net_io_invalidendcall={0} can only be called once for each asynchronous operation.

net_tls_version=The SSL version is not supported.

net_perm_target=Cannot cast Target Permission type.
net_perm_both_regex=Cannot subset Regex. Only support if both patterns are identical.
net_perm_none=There are no permissions to check.
net_perm_attrib_count=The value for '{0}' must be specified.
net_perm_invalid_val=The parameter value '{0}={1}' is invalid.
net_perm_attrib_multi=The permission '{0}={1}' cannot be added. Add a separate Attribute statement.
net_perm_epname=Argument value '{0}' is invalid for creating a SocketPermission object.
net_perm_invalid_val_in_element=The '{0}' element contains one or more invalid values.

dns_bad_ip_address=An invalid IP address was specified.

net_webclient=An exception occurred during a WebClient request.
net_webclient_ContentType=The Content-Type header cannot be changed from its default value for this request.
net_webclient_Multipart=The Content-Type header cannot be set to a multipart type for this request.

net_container_add_cookie=An error has occurred when adding a cookie into the container.
net_cookie_invalid=Invalid contents for cookie = '{0}'.
net_cookie_size=The value size of the Cookie = '{0}' exceeds configured maximum = '{1}'.
net_cookie_parse_header=An error has occurred when parsing Cookie header for Uri '{0}'.
net_cookie_attribute=The '{0}'='{1}' part of the Cookie is invalid.
net_cookie_format=Cookie format error.

net_set_token=Failed to impersonate a thread doing authentication of a Web Request.
net_revert_token=Failed to revert the thread token after authenticating a Web Request.

#=------------------------------------------------------------------=
# File system.configuration.txt
#=------------------------------------------------------------------=

_sep02_=sep
; ctracy 00.11.04: added since move
Config_name_value_file_section_file_invalid_root=The root element must match the name of the section referencing the file, '{0}'
Config_system_already_set=The configuration system can only be set once.  Configuration system is already set

; ctracy 00.11.04: Config_base is use in HandlerBase
Config_base_required_attribute_missing=Required attribute '{0}' not found
Config_base_required_attribute_empty=Required attribute '{0}' cannot be empty
Config_base_unrecognized_attribute=Unrecognized attribute '{0}'
Config_base_unrecognized_element=Unrecognized element
Config_base_elements_only=Only elements allowed
Config_base_no_child_nodes=Child nodes not allowed

; ctracy 00.11.04: the rest need to be filtered for System.Configuration
Config_file_doesnt_have_root_configuration=Configuration file {0} does not have root <configuration> tag
Client_config_init_error=GetConfig was called during configuration initialization
Client_config_too_many_configsections_elements=Only one <configSections> element allowed per config file and if present must be the first child of the root <configuration> element.
Exception_in_config_section_handler=Exception in configuration section handler
Tag_name_cannot_be_location=The tag name 'location' is reserved for <location> sections
Tag_name_cannot_begin_with_config=Tag names beginning with config are reserved
Tag_name_already_defined=Section or group name '{0}' already defined
Could_not_create_type_instance=Could not create {0}
Type_doesnt_implement_IConfigSectionHandler={0} does not implement IConfigurationSectionHandler
Could_not_remove_section_handler=Could not remove section handler {0}
Error_loading_XML_file=Error loading XML file {0} {1}
Unrecognized_configuration_section=Unrecognized configuration section {0}
Missing_required_attribute=The '{0}' attribute must be specified on the '{1}' tag
Invalid_boolean_attribute=The '{0}' attribute must be set to 'true' or 'false'
Invalid_integer_attribute=The '{0}' attribute must be set to an integer value
Invalid_positive_integer_attribute=The '{0}' attribute must be set to a positive integer value
Invalid_type_attribute=The '{0}' attribute must be set to a valid Type name
Could_not_create_listener=Couldn't create listener '{0}'.
Cannot_remove_with_null=Cannot remove with null name.
Could_not_find_type=Couldn't find type for class {0}.
Could_not_get_constructor=Couldn't find constructor for class {0}.
Type_isnt_tracelistener=Could not add trace listener {0} because it is not a subclass of TraceListener.
Value_must_be_numeric=Error in trace switch '{0}': The value of a switch must be integral.  

#=------------------------------------------------------------------=
# System.IO.txt
#=------------------------------------------------------------------=

;
; Exceptions messages
;

InvalidDirName=The directory name {0} is invalid.
FSW_IOError=Error reading the {0} directory.
PatternInvalidChar=The character '{0}' in the pattern provided is not valid.
BufferSizeTooLarge=The specified buffer size is too large. FileSystemWatcher cannot allocate {0} bytes for the internal buffer.

; DescriptionAttribute
FSW_ChangedFilter=Flag to indicate which change event to monitor.
FSW_Enabled=Flag to indicate whether this component is active or not.
FSW_Filter=The file pattern filter.
FSW_IncludeSubdirectories=Flag to watch subdirectories.
FSW_Path=The path to the directory to monitor.
FSW_SynchronizingObject=The object used to marshal the event handler calls issued as a result of a Directory change.
FSW_Changed=Occurs when a file and/or directory change matches the filter.
FSW_Created=Occurs when a file and/or directory creation matches the filter.
FSW_Deleted=Occurs when a file and/or directory deletion matches the filter.
FSW_Renamed=Occurs when a file and/or directory rename matches the filter.
FSW_BufferOverflow=Too many changes at once in directory:{0}.

#=------------------------------------------------------------------=
# File system.timers.txt
#=------------------------------------------------------------------=

NotSet=[Not Set]
;service is available in your system.

; DescriptionAttribute

TimerAutoReset=Indicates whether the timer will be restarted when it is enabled.
TimerEnabled=Indicates whether the timer is enabled to fire events at a defined interval.
TimerInterval=The number of milliseconds between timer events.
TimerIntervalElapsed=Occurs when the Interval has elapsed.
TimerSynchronizingObject=The object used to marshal the event handler calls issued when an interval has elapsed.

#=------------------------------------------------------------------=
# File system.diagnostics.txt
#=------------------------------------------------------------------=

;
; Exceptions messages
;

MismatchedCounterTypes=Mismatched counter types.

; EventLog

BadLogName=Event log names must consist of printable characters and can not contain \\, *, ?, or spaces
InvalidProperty=Invalid value {1} for property {0}.
NotifyCreateFailed=Cannot create Notify event.
CantMonitorEventLog=Cannot monitor Event log. The log may exist on a remote computer.
InitTwice=Cannot initialize the same object twice.
InvalidParameter=Invalid value {1} for parameter {0}.
MissingParameter=Must specify value for {0}.
ParameterTooLong=The size of {0} is too big. It cannot be longer than {1} characters.
LocalSourceAlreadyExists=Source {0} already exists on the local computer.
SourceAlreadyExists=Source {0} already exists on the computer {1}.
LocalLogAlreadyExistsAsSource=Log {0} has already been registered as a source on the local computer.
LogAlreadyExistsAsSource=Log {0} has already been registered as a source on the computer {1}.
DuplicateLogName=Only the first eight characters of a custom log name are significant, and there is already another log on the system using the first eight characters of the name given. Name given: '{0}', name of existing log: '{1}'.
RegKeyMissing=Cannot open registry key {0}\\{1}\\{2} on computer {3}.
LocalRegKeyMissing=Cannot open registry key {0}\\{1}\\{2}.
RegKeyMissingShort=Cannot open registry key {0} on computer {1}.
InvalidParameterFormat=Invalid format for argument {0}.
NoLogName=Log to delete was not specified.
RegKeyNoAccess=Cannot open registry key {0} on computer {1}. You might not have access.
MissingLog=Cannot find Log {0} on computer {1}.
SourceNotRegistered=The source '{0}' is not registered on machine '{1}', or you do not have write access to the {2} registry key.
LocalSourceNotRegistered=Source {0} is not registered on the local computer.
CantRetrieveEntries=Cannot retrieve all entries.
IndexOutOfBounds=Index {0} is out of bounds.
CantReadLogEntryAt=Cannot read log entry number {0}.
MissingLogProperty=Log property value has not been specified.
CantOpenLog=Cannot open log {0} on machine {1}. Windows has not provided an error code.
NeedSourceToOpen=Source property was not set before opening the event log in write mode.
NeedSourceToWrite=Source property was not set before writing to the event log.
CantOpenLogAccess=Cannot open log for source {0}. You may not have write access.
LogEntryTooLong=Log entry string is too long. A string written to the event log cannot exceed {0} characters.
LogSourceMismatch=The source '{0}' is not registered in log '{1}'. (It is registered in log '{2}'.) " The Source and Log properties must be matched, or you may set Log to the empty string, and it will automatically be matched to the Source property.
NoAccountInfo=Cannot obtain account information.
NoCurrentEntry=No current EventLog entry available, cursor is located before the first or after the last element of the enumeration.
MessageNotFormatted=The message '{0}' for application '{1}' could not be formatted using library(ies): '{2}'. The log entry contains the following replacement strings:
EventID=Invalid eventID value '{0}'. It must be in the range between '{1}' and '{2}'.
LogDoesNotExists=The event log '{0}' on computer '{1}' does not exist.
InvalidCustomerLogName=The log name: '{0}' is invalid for customer log creation.
CannotDeleteEqualSource=The event log source '{0}' can not be deleted, because it's equal to the log name.
ConfigSectionsUnique=The '{0}' section can only appear once per config file. 

; PerformanceCounter

ReadOnlyCounter=Cannot update Performance Counter, this object has been initialized as ReadOnly.
ReadOnlyRemoveInstance=Cannot remove Performance Counter Instance, this object as been initialized as ReadOnly.
NotCustomCounter=The requested Performance Counter is not a custom counter, it has to be initialized as ReadOnly.
CategoryNameMissing=Failed to initialize because CategoryName is missing.
CounterNameMissing=Failed to initialize because CounterName is missing.
InstanceNameProhibited=Counter is single instance, instance name '{0}' is not valid for this counter category.
InstanceNameRequired=Counter is not single instance, an instance name needs to be specified.
MissingInstance=Instance {0} does not exist in category {1}.
PerformanceCategoryExists=Cannot create Performance Category because it already exists.
InvalidCounterName=Invalid empty or null string for counter name.
DuplicateCounterName=Cannot create Performance Category with counter name {0} because the name is a duplicate.
CantDeleteCategory=Cannot delete Performance Category because this category is not registered or is a system category.
MissingCategory=Category does not exist.
MissingCategoryDetail=Category {0} does not exist.
CantReadCategory=Cannot read Category {0}.
MissingCounter=Counter {0} does not exist.
CategoryNameNotSet=Category name property has not been set.
CounterExists=Could not locate Performance Counter with specified category name '{0}', counter name '{1}'.
CantReadCategoryIndex=Could not Read Category Index: {0}.
CantReadCounter=Cannot read Counter :{0}.
CantReadInstance=Cannot read Instance :{0}.
RemoteWriting=Cannot write to a Performance Counter in a remote machine.
CounterLayout=The Counter layout for the Category specified is invalid, a counter of the type:  AverageCount64, AverageTimer32, CounterMultiTimer, CounterMultiTimerInverse, CounterMultiTimer100Ns, CounterMultiTimer100NsInverse, RawFraction, SampleFraction or SampleCounter has to be immediately followed by any of the base counter types: AverageBase, MultiBase, RawBase or SampleBase.
PossibleDeadlock=The operation couldn't be completed, potential internal deadlock.
SharedMemoryGhosted=Cannot access shared memory, AppDomain has been unloaded.
HelpNotAvailable=Help not available.
PerfInvalidHelp=Invalid help string. Its length must be in the range between '{0}' and '{1}'.
PerfInvalidCounterName=Invalid counter name. Its length must be in the range between '{0}' and '{1}'. Double quotes, control characters and leading or trailing spaces are not allowed.
PerfInvalidCategoryName=Invalid category name. Its length must be in the range between '{0}' and '{1}'. Double quotes, control characters and leading or trailing spaces are not allowed.
PerfMaxCreationDataCount=The CounterCreationDataCollection size must be in the range between '{0}' and '{1}'.
RemoteCounterAdmin=Creating or Deleting Performance Counter Categories on remote machines is not supported.
NoInstanceInformation=The {0} category doesn't provide any instance information, no accurate data can be returned.

; Process

PriorityClassNotSupported=The AboveNormal and BelowNormal priority classes are not available on this platform.
WinNTRequired=Feature requires Windows NT.
Win2kRequired=Feature requires Windows 2000.
NoAssociatedProcess=No process is associated with this object.
ProcessIdRequired=Feature requires a process identifier.
NotSupportedRemote=Feature is not supported for remote machines.
NoProcessInfo=Process has exited, so the requested information is not available.
WaitTillExit=Process must exit before requested information can be determined.
NoProcessHandle=Process was not started by this object, so requested information cannot be determined.
MissingProccess=Process with an Id of {0} is not running.
BadMinWorkset=Minimum working set size is invalid. It must be less than or equal to the maximum working set size.
BadMaxWorkset=Maximum working set size is invalid. It must be greater than or equal to the minimum working set size.
WinNTRequiredForRemote=Operating system does not support accessing processes on remote computers. This feature requires Windows NT or later.
ProcessHasExited=Cannot process request because the process ({0}) has exited.
ProcessHasExitedNoId=Cannot process request because the process has exited.
ThreadExited=The request can not be processed because the thread ({0}) has exited.
Win2000Required=Feature requires Windows 2000 or later.
ProcessNotFound=Thread {0} found, but no process {1} found.
CantGetProcessId=Cannot retrieve process identifier from the process handle.
ProcessDisabled=Process performance counter is disabled, so the requested operation cannot be performed.
WaitReasonUnavailable=WaitReason is only available if the ThreadState is Wait.
NotSupportedRemoteThread=Feature is not supported for threads on remote computers.
UseShellExecuteRequiresSTA=Current thread is not in Single Thread Apartment (STA) mode. Starting a process with UseShellExecute set to True requires the current thread be in STA mode.  Ensure that your Main function has STAThreadAttribute marked.
CantRedirectStreams=The Process object must have the UseShellExecute property set to false in order to redirect IO streams.
CantUseEnvVars=The Process object must have the UseShellExecute property set to false in order to use environment variables.
CouldntConnectToRemoteMachine=Couldn't connect to remote machine.
CouldntGetRemoteProcesses=Couldn't get process information from remote machine.
InputIdleUnkownError=WaitForInputIdle failed.  This could be because the process does not have a graphical interface.
FileNameMissing=Cannot start process because a file name has not been provided.
EnvironmentBlock=The environment block provided doesn't have the correct format.
EnumProcessModuleFailed=Unable to enumerate the process modules.

CountersOOM=Custom counters file view is out of memory.
MappingCorrupted=Cannot continue the current operation, the performance counters memory mapping has been corrupted.
SetSecurityDescriptorFailed=Cannot initialize security descriptor initialized.
CantCreateFileMapping=Cannot create file mapping.
CantMapFileView=Cannot map view of file.
CantGetStandardOut=StandardOut has not been redirected.
CantGetStandardIn=StandardIn has not been redirected.
CantGetStandardError=StandardError has not been redirected.
NoFileMappingSize=Cannot retrieve file mapping size while initializing configuration settings.

; DescriptionAttribute

CounterType=The type of this counter.
CounterName=The name of this counter.
CounterHelp=Help information for this counter.

LogEntries=The contents of the log.
LogLog=Gets or sets the name of the log to read from and write to.
LogMachineName=The name of the machine on which to read or write events.
LogMonitoring=Indicates if the component monitors the event log for changes.
LogSynchronizingObject=The object used to marshal the event handler calls issued as a result of an EventLog change.
LogSource=The application name (source name) to use when writing to the event log.
LogEntryWritten=Raised each time any application writes an entry to the event log.
LogEntryMachineName=The machine on which this event log resides.
LogEntryData=The binary data associated with this entry in the event log.
LogEntryIndex=The sequence of this entry in the event log.
LogEntryCategory=The category for this message.
LogEntryCategoryNumber=An application-specific category number assigned to this entry.
LogEntryEventID=The number identifying the message for this source.
LogEntryEntryType=The type of entry - Information, Warning, etc.
LogEntryMessage=The text of the message for this entry
LogEntrySource=The name of the application that wrote this entry.
LogEntryReplacementStrings=The application-supplied strings used in the message.
LogEntryTimeGenerated=The time at which the application logged this entry.
LogEntryTimeWritten=The time at which the system logged this entry to the event log.
LogEntryUserName=The username of the account associated with this entry by the writing application.
PC_CounterHelp=The description message for this counter.
PC_CounterType=The counter type indicates how to interpret the value of the counter, for example an actual count or a rate of change.
PC_ReadOnly=Indicates if the counter is read only.  Remote counters and counters not created using this component are read-only.
PC_RawValue=Directly accesses the raw value of this counter.  The counter must have been created using this component.
ProcessAssociated=Indicates if the process component is associated with a real process.
ProcessExitCode=The value returned from the associated process when it terminated.
ProcessTerminated=Indicates if the associated process has been terminated.
ProcessExitTime=The time that the associated process exited.
ProcessHandle=Returns the native handle for this process.   The handle is only available if the process was started using this component.
ProcessHandleCount=The number of native handles associated with this process.
ProcessId=The unique identifier for the process.
ProcessMachineName=The name of the machine the running the process.
ProcessMainModule=The main module for the associated process.
ProcessModules=The modules that have been loaded by the associated process.
ProcessSynchronizingObject=The object used to marshal the event handler calls issued as a result of a Process exit.
ProcessThreads=The threads running in the associated process.
ProcessEnableRaisingEvents=Whether the process component should watch for the associated process to exit, and raise the Exited event.
ProcessExited=If the WatchForExit property is set to true, then this event is raised when the associated process exits.
ProcessFileName=The name of the application, document or URL to start.
ProcessWorkingDirectory=The initial working directory for the process.
ProcessBasePriority=The base priority computed based on the priority class that all threads run relative to.
ProcessMainWindowHandle=The handle of the main window for the process.
ProcessMainWindowTitle=The caption of the main window for the process.
ProcessMaxWorkingSet=The maximum amount of physical memory the process has required since it was started.
ProcessMinWorkingSet=The minimum amount of physical memory the process has required since it was started.
ProcessNonpagedSystemMemorySize=The number of bytes of non pageable system  memory the process is using.
ProcessPagedMemorySize=The current amount of memory that can be paged to disk that the process is using.
ProcessPagedSystemMemorySize=The number of bytes of pageable system memory the process is using.
ProcessPeakPagedMemorySize=The maximum amount of memory that can be paged to disk that the process has used since it was started.
ProcessPeakWorkingSet=The maximum amount of physical memory the process has used since it was started.
ProcessPeakVirtualMemorySize=The maximum amount of virtual memory the process has allocated since it was started.
ProcessPriorityBoostEnabled=Whether this process would like a priority boost when the user interacts with it.
ProcessPriorityClass=The priority that the threads in the process run relative to.
ProcessPrivateMemorySize=The current amount of memory that the process has allocated that can not be shared with other processes.
ProcessPrivilegedProcessorTime=The amount of CPU time the process spent inside the operating system core.
ProcessProcessName=The name of the process.
ProcessProcessorAffinity=A bit mask which represents the processors that the threads within the process are allowed to run on.
ProcessResponding=Whether this process is currently responding.
ProcessStandardError=Standard error stream of the process.
ProcessStandardInput=Standard input stream of the process.
ProcessStandardOutput=Standard output stream of the process.
ProcessStartInfo=Specifies information used to start a process.
ProcessStartTime=The time at which the process was started.
ProcessTotalProcessorTime=The amount of CPU time the process has used.
ProcessUserProcessorTime=The amount of CPU time the process spent outside the operating system core.
ProcessVirtualMemorySize=The amount of virtual memory the process has currently allocated.
ProcessWorkingSet=The current amount of physical memory the process is using.
ProcModModuleName=The name of the module.
ProcModFileName=The file name of the module.
ProcModBaseAddress=The memory address that the module loaded at.
ProcModModuleMemorySize=The amount of virtual memory required by the code and data in the module file.
ProcModEntryPointAddress=The memory address of the function that runs when the module is loaded.
ProcessVerb=The verb to apply to the document specified by the FileName property.
ProcessArguments=Command line arguments that will be passed to the application specified by the FileName property.
ProcessErrorDialog=Whether to show an error dialog to the user if there is an error.
ProcessWindowStyle=How the main window should be created when the process starts.
ProcessCreateNoWindow=Whether to start the process without creating a new window to contain it.
ProcessEnvironmentVariables=Set of environment variables that apply to this process and child processes.
ProcessRedirectStandardInput=Whether the process command input is read from the Process instance's StandardInput member.
ProcessRedirectStandardOutput=Whether the process output is written to the Process instance's StandardOutput member.
ProcessRedirectStandardError=Whether the process's error output is written to the Process instance's StandardError member.
ProcessUseShellExecute=Whether to use the operating system shell to start the process.
ThreadBasePriority=The current base priority of the thread.
ThreadCurrentPriority=The current priority level of the thread.
ThreadId=The unique identifier for the thread.
ThreadPriorityBoostEnabled=Whether the thread would like a priority boost when the user interacts with UI associated with the thread.
ThreadPriorityLevel=The priority level of the thread.
ThreadPrivilegedProcessorTime=The amount of CPU time the thread spent inside the operating system core.
ThreadStartAddress=The memory address of the function that was run when the thread started.
ThreadStartTime=The time the thread was started.
ThreadThreadState=The execution state of the thread.
ThreadTotalProcessorTime=The amount of CPU time the thread has consumed since it was started.
ThreadUserProcessorTime=The amount of CPU time the thread spent outside the operating system core.
ThreadWaitReason=The reason the thread is waiting, if it is waiting.

; String constants

VerbEditorDefault=(Default)

; AppSettingsReader exceptions

AppSettingsReaderNoKey=The key '{0}' does not exist in the appSettings configuration section.
AppSettingsReaderNoParser=Type '{0}' does not have a Parse method.
AppSettingsReaderCantParse=The value '{0}' was found in the appSettings configuration section for key '{1}', and this value is not a valid {2}.
AppSettingsReaderEmptyString=(empty string)

; ResourcePermissionBase

PermissionNumberOfElements=The number of elements on the access path must be the same as the number of tag names.
PermissionItemExists=The item provided already exists.
PermissionItemDoesntExist=The requested item doesn't exist.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\vsdesigner\designer\resources\microsoft\visualstudio\designer\shell\protoollist.txt ===
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;
; NOTE: The names after the class names below are
;       assembly file names, NOT assembly names.
;       Toolbox items must have an embedded SDK
;       path in them, so we are tied to the SDK
;       that is currently installed.  We match
;       this name with the appropriate file in
;       the SDK directory.  The actual assembly
;       is then loaded via the GAC by using
;       the version stamp within the file.
;
;       There are also suites (Events1 and Properties1)
;       that rely on this file.  Suites don't use
;       the SDK path, but use reflection to locate
;       the fully qualified assembly name out
;       of the AssemblyRefs file.  This relies on
;       the string used in AssemblyRefs to match
;       the string below if you remove the dots.
; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[TOOLTABWinForms]
System.Windows.Forms.Label, System.Windows.Forms
System.Windows.Forms.LinkLabel, System.Windows.Forms
System.Windows.Forms.Button, System.Windows.Forms
System.Windows.Forms.TextBox, System.Windows.Forms
System.Windows.Forms.MainMenu, System.Windows.Forms
System.Windows.Forms.CheckBox, System.Windows.Forms
System.Windows.Forms.RadioButton, System.Windows.Forms
System.Windows.Forms.GroupBox, System.Windows.Forms
System.Windows.Forms.PictureBox, System.Windows.Forms
System.Windows.Forms.Panel, System.Windows.Forms
System.Windows.Forms.DataGrid, System.Windows.Forms
System.Windows.Forms.ListBox, System.Windows.Forms
System.Windows.Forms.CheckedListBox, System.Windows.Forms
System.Windows.Forms.ComboBox, System.Windows.Forms
System.Windows.Forms.ListView, System.Windows.Forms
System.Windows.Forms.TreeView, System.Windows.Forms
System.Windows.Forms.TabControl, System.Windows.Forms
System.Windows.Forms.DateTimePicker, System.Windows.Forms
System.Windows.Forms.MonthCalendar, System.Windows.Forms
System.Windows.Forms.HScrollBar, System.Windows.Forms
System.Windows.Forms.VScrollBar, System.Windows.Forms
System.Windows.Forms.Timer, System.Windows.Forms
System.Windows.Forms.Splitter, System.Windows.Forms
System.Windows.Forms.DomainUpDown, System.Windows.Forms
System.Windows.Forms.NumericUpDown, System.Windows.Forms
System.Windows.Forms.TrackBar, System.Windows.Forms
System.Windows.Forms.ProgressBar, System.Windows.Forms
System.Windows.Forms.RichTextBox, System.Windows.Forms
System.Windows.Forms.ImageList, System.Windows.Forms
System.Windows.Forms.HelpProvider, System.Windows.Forms
System.Windows.Forms.ToolTip, System.Windows.Forms
System.Windows.Forms.ContextMenu, System.Windows.Forms
System.Windows.Forms.ToolBar, System.Windows.Forms
System.Windows.Forms.StatusBar, System.Windows.Forms
; animation control
System.Windows.Forms.NotifyIcon, System.Windows.Forms
System.Windows.Forms.OpenFileDialog, System.Windows.Forms
System.Windows.Forms.SaveFileDialog, System.Windows.Forms
System.Windows.Forms.FolderBrowserDialog, System.Windows.Forms
System.Windows.Forms.FontDialog, System.Windows.Forms
System.Windows.Forms.ColorDialog, System.Windows.Forms
System.Windows.Forms.PrintDialog, System.Windows.Forms
System.Windows.Forms.PrintPreviewDialog, System.Windows.Forms
System.Windows.Forms.PrintPreviewControl, System.Windows.Forms

; unordered ----
System.Windows.Forms.ErrorProvider, System.Windows.Forms
System.Drawing.Printing.PrintDocument, System.Drawing
System.Windows.Forms.PageSetupDialog, System.Windows.Forms

[TOOLTABComponents]
System.IO.FileSystemWatcher, System
System.Diagnostics.EventLog, System
System.DirectoryServices.DirectoryEntry, System.DirectoryServices
System.DirectoryServices.DirectorySearcher, System.DirectoryServices
System.Messaging.MessageQueue, System.Messaging
System.Diagnostics.PerformanceCounter, System
System.Diagnostics.Process, System
System.ServiceProcess.ServiceController, System.ServiceProcess
System.Timers.Timer, System

[TOOLTABWebForms]
System.Web.UI.WebControls.Label, System.Web
System.Web.UI.WebControls.TextBox, System.Web
System.Web.UI.WebControls.Button, System.Web
System.Web.UI.WebControls.LinkButton, System.Web
System.Web.UI.WebControls.ImageButton, System.Web
System.Web.UI.WebControls.HyperLink, System.Web
System.Web.UI.WebControls.DropDownList, System.Web
System.Web.UI.WebControls.ListBox, System.Web
System.Web.UI.WebControls.DataGrid, System.Web
System.Web.UI.WebControls.DataList, System.Web
System.Web.UI.WebControls.Repeater, System.Web
System.Web.UI.WebControls.CheckBox, System.Web
System.Web.UI.WebControls.CheckBoxList, System.Web
System.Web.UI.WebControls.RadioButtonList, System.Web
System.Web.UI.WebControls.RadioButton, System.Web
System.Web.UI.WebControls.Image, System.Web
System.Web.UI.WebControls.Panel, System.Web
System.Web.UI.WebControls.PlaceHolder, System.Web
System.Web.UI.WebControls.Calendar, System.Web
System.Web.UI.WebControls.AdRotator, System.Web
System.Web.UI.WebControls.Table, System.Web
System.Web.UI.WebControls.RequiredFieldValidator, System.Web
System.Web.UI.WebControls.CompareValidator, System.Web
System.Web.UI.WebControls.RangeValidator, System.Web
System.Web.UI.WebControls.RegularExpressionValidator, System.Web
System.Web.UI.WebControls.CustomValidator, System.Web
System.Web.UI.WebControls.ValidationSummary, System.Web
System.Web.UI.WebControls.Xml, System.Web
System.Web.UI.WebControls.Literal, System.Web

[TOOLTABMobileWebForms]
System.Web.UI.MobileControls.Form, System.Web.Mobile
System.Web.UI.MobileControls.Panel, System.Web.Mobile
System.Web.UI.MobileControls.Label, System.Web.Mobile
System.Web.UI.MobileControls.TextBox, System.Web.Mobile
System.Web.UI.MobileControls.TextView, System.Web.Mobile
System.Web.UI.MobileControls.Command, System.Web.Mobile
System.Web.UI.MobileControls.Link, System.Web.Mobile
System.Web.UI.MobileControls.PhoneCall, System.Web.Mobile
System.Web.UI.MobileControls.Image, System.Web.Mobile
System.Web.UI.MobileControls.List, System.Web.Mobile
System.Web.UI.MobileControls.SelectionList, System.Web.Mobile
System.Web.UI.MobileControls.ObjectList, System.Web.Mobile
System.Web.UI.MobileControls.DeviceSpecific, System.Web.Mobile
System.Web.UI.MobileControls.StyleSheet, System.Web.Mobile
System.Web.UI.MobileControls.Calendar, System.Web.Mobile
System.Web.UI.MobileControls.AdRotator, System.Web.Mobile
System.Web.UI.MobileControls.RequiredFieldValidator, System.Web.Mobile
System.Web.UI.MobileControls.CompareValidator, System.Web.Mobile
System.Web.UI.MobileControls.RangeValidator, System.Web.Mobile
System.Web.UI.MobileControls.RegularExpressionValidator, System.Web.Mobile
System.Web.UI.MobileControls.CustomValidator, System.Web.Mobile
System.Web.UI.MobileControls.ValidationSummary, System.Web.Mobile
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\vsdesigner\tools\axtowfc\sr.txt ===
AxImpError=AxImp Error: {0}

Err_FileNotExists=Unable to locate input ActiveX library: '{0}'.
Err_InputFileNotFound=Unable to locate input type library: '{0}'
Err_InputFileNotValidTypeLib=The input file '{0}' is not a valid type library
Err_InvalidStrongName=Invalid strong name parameters specified.
Err_TypeLibLoad=Error occurred while opening type library:\r\n{0}
Err_InvalidExtension=The extension for the output assembly must be either .dll or .mcl
Err_OutputFileNameTooLong=Output file name, created from Type Library name, would be too long:\r\n{0}
Err_OutputWouldOverwriteInput=Output file would overwrite input file
Err_InvalidOutputDirectory=Output directory does not exist
Err_CannotWriteToOutputFile=Error writing to output file
Err_TypeLoadExceptions=The following exceptions were thrown while loading the types in the assembly:\r\n
Err_ErrorWhileOpeningFile=The following error occured while trying to open file {0}:
Err_InvalidOption=An invalid option has been specified
Err_NoInputFile=No input file has been specified
Err_TooManyKeys=Only one key pair/public key may be specified on the command line
Err_RefAssemblyNotFound=Unable to locate referenced assembly: '{0}'
Err_RefAssemblyInvalid=Referenced assembly '{0}' is not a valid assembly
Err_ImpFromTlbAttrNotFound=Assembly '{0}' cannot be used to resolve a reference to a type library since it was not imported from a type library.
Err_GuidAttrNotFound=Assembly '{0}' cannot be used to resolve a reference to a type library since it does not have a guid attribute.
Err_MultipleGuidAttrs=Assembly '{0}' cannot be used to resolve a reference to a type library since it has multiple guid attributes which is not allowed.
Err_RefNotInList=Type library '{0}' is not in the list of references
Err_CircularReference=The referenced type library, '{0}', contains a circular reference, and may not be fully imported.
Err_CannotCreateAppDomain=Error creating an app domain to perform the conversion
Err_CannotCreateRemoteAxImp=Unable to load the RemoteAxImp type required to perform the conversion
Err_OutputCannotBeDirectory=The output file name cannot specify a directory.
Err_DelaySignError=The /delay option should be used with /keyfile or /keycontainer.
Err_AssemblyLoadFailed=The assembly '{0}' failed to load with this error: {1}.
Err_NotRcw=The assembly '{0}' does not appear to be a Runtime Callable Wrapper, and has no ImportedFromTypeLibAttribute.

; Command line parsing error strings.
Err_AmbigousOption=Ambiguous option: /{0}
Err_UnknownOption=Unknown option: /{0}
Err_NoValueRequired=The /{0} option does not require a value
Err_ValueRequired=The /{0} option requires a value

; AxImp message strings.
Msg_TypeLibImported=Type library imported successfully to {0}
Msg_DisplayException=Exception[{0}]={1}
Msg_DisplayNestedException=Exception[{0}] ==>> {1}

GeneratedAssembly=Generated Assembly: {0}
GeneratedSource=Generated Source: {0}
Logo=Microsoft (R) .NET ActiveX Control to Windows Forms Assembly Generator \n[Microsoft .Net Framework, Version {0}]\n{1}\n\n
Usage=Generates a Windows Forms Control that wraps ActiveX controls defined in the given OcxName.\n\nUsage:\n    AxImp OcxName [Options]\r\nOptions:\r\n    /out:FileName            File name of assembly to be produced\r\n    /publickey:FileName      File containing strong name public key\r\n    /keyfile:FileName        File containing strong name key pair\r\n    /keycontainer:FileName   Key container holding strong name key pair\r\n    /delaysign               Force strong name delay signing\r\n                             Used with /keyfile or /keycontainer\r\n    /source                  Generate C# source code for Windows Forms wrapper\r\n    /rcw:FileName            Assembly to use for Runtime Callable Wrapper rather than generating new one.\r\n                             Multiple instances may be specified. Current directory is used for relative paths.\r\n    /nologo                  Prevents AxImp from displaying logo\r\n    /silent                  Prevents AxImp from displaying success message\r\n    /verbose                 Displays extra information\r\n    /? or /help              Display this usage message\r\n
; ExtendedUsage=Generates a Windows Forms Control that wraps ActiveX controls defined in the given OcxName.\n\nUsage:\n    AxImp OcxName [Options]\r\nOptions:\r\n    /out:FileName            File name of assembly to be produced\r\n    /namespace:Namespace     Namespace of the assembly to be produced\r\n                             The Windows Forms ActiveX assembly will have "Ax"\r\n                             prepended to the namespace.\r\n    /version:VersionNumber   Version number of the assembly to be produced\r\n                             Has to be in Major.Minor.Build.Revision format.\r\n    /publickey:FileName      File containing strong name public key\r\n    /keyfile:FileName        File containing strong name key pair\r\n    /keycontainer:FileName   Key container holding strong name key pair\r\n    /delaysign               Force strong name delay signing\r\n                             Used with /keyfile or /keycontainer\r\n    /primary                 Produce a primary interop assembly\r\n    /source                  Generate C# source code for Windows Forms wrapper\r\n    /nologo                  Prevents AxImp from displaying logo\r\n    /silent                  Prevents AxImp from displaying success message\r\n    /verbose                 Displays extra information\r\n    /? or /help              Display this usage message\r\n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\vsdesigner\tools\changeiid\changelist.txt ===
D4F3F4B1-E900-4e51-ADB3-D532348F83CB, 7d960b00-7af8-11d0-8e5e-00a0c911005a
A7A1C907-C3D2-4acb-9114-4EE23B6FCF7E, 94E6E7DE-F418-11d2-B6FA-00C04F9901D1
53BA0F89-24DD-46e1-A7D6-ED24C039FBC4, 45CF6805-93EB-11D0-AF4C-00A0C90F9DE6
0D0E68EA-C910-45a7-8C24-7BBFA7D2D201, 45CF6806-93EB-11D0-AF4C-00A0C90F9DE6
67A65088-52F3-4c47-B829-1B53A112E8DC, 45CF6807-93EB-11D0-AF4C-00A0C90F9DE6
33FCD00A-BD45-403c-9C66-07BA9A923501, 7d960b05-7af8-11d0-8e5e-00a0c911005a
8CBFFBBE-241E-4b9c-9926-C06F7374386C, BC798C3A-4EB9-11d3-B2BF-00C04F688E57
F08400BB-0960-47f4-9E12-591DBF370546, 7d960b06-7af8-11d0-8e5e-00a0c911005a
E4197123-1086-4d51-B2D5-903F4D61C5AA, 70F026F7-E043-4634-9DFF-C1ED96C264D6
59B2D1D0-5DB0-4f9f-9609-13F0168516D6, 7d960b01-7af8-11d0-8e5e-00a0c911005a
E82609EA-5169-47f4-91D0-6957272CBE9F, 7d960b02-7af8-11d0-8e5e-00a0c911005a
6DDD8DC3-32B2-4bf1-A1E1-B6DA40526D1E, 7d960b03-7af8-11d0-8e5e-00a0c911005a
8FE0E50A-785A-4a50-8EDB-1D054D68EF87, 92D73940-C541-11d2-8598-006097C68E81
7F7CD0DB-91EF-49dc-9FA9-02D128515DD4, 054AECC1-AC4D-11d0-AF54-00A0C90F9DE6
A8516B56-7421-4dbd-AB87-57AF7A2E85DE, 054AECC2-AC4D-11d0-AF54-00A0C90F9DE6
A711DF67-B00A-4e82-A990-51B2B450EA0F, 710932AF-2116-4cbd-8E48-0C5944EF0C6A
CD4028ED-C4D8-44ba-890F-E7FB02A380C6, 625911f3-af99-11d0-8e69-00a0c911005a
4AF886C3-7796-4c81-A174-4A87080DEE58, 669B7232-890C-11d1-BC18-0000F87552E7
1C11116E-4FF2-4a80-82DC-69F95042E0A4, 36201871-BC59-11d2-BFC9-00C04F990235
4B2BEBAA-BA1E-4479-8720-8CE19D276098, 21f29401-a80b-4a7f-b5c4-a9f9ca849447
3F819030-50CF-4b72-B3FC-B3B9BFBBEE69, 9c68abb3-d1e5-4986-a501-e1f446005a43
E09C9DCF-D4B7-4d6e-A676-1FC64B4BF6EB, 3E7CBE01-C114-4291-80DE-7DCDE3AB0032
11DFCCEB-D935-4a9f-9796-5BA433C5AF8E, a448e7a0-b830-11d0-9ffd-00a0c911e8e9
6B90D260-E363-4e8a-AE51-BD19C493416D, 8C73614F-7E67-11d2-BFB9-00C04F990235
D93A191C-525A-43bc-ACFD-7EF494143CF4, 75437597-FE86-11d2-BECE-00C04F682A08
61116CFF-5319-440a-81CE-5D9F54A610DE, 61116CFF-5319-440a-81CE-5D9F54A610DE
82A40D77-D2D4-4c93-AB11-8D50ADF02B1E, 6EF99245-719D-4d55-8955-7F9E9A1ADFD1
C3E2ED14-4E64-4c26-84D7-68CCD071A0C8, 9B550A73-1215-11d3-BED1-00C04F682A08
D5C658C5-59A1-414f-AF5E-E72E83377EAE, 6b60be84-7b47-11d2-b2c2-00c04fb17608
A928AA21-EA77-47ac-8A07-355206C94BDD, 625911f2-af99-11d0-8e69-00a0c911005a
BEA6BB4F-A905-49ca-A216-202DF370E07E, 5579c9f0-d09d-11d0-8e75-00a0c911005a
15C7826F-443C-406d-98F8-55F6260669EC, e38a9670-8e0b-11d1-b278-00c04fb17608
376ED667-F576-458f-B991-2CFD3EBC7B08, e69a388a-fce0-11d2-8a60-00c04f682e21
685933F2-C1AD-4540-A15A-D3F977A81AF7, e2334ed2-43b5-11d3-8a7c-00c04f682e21
11138F8A-38C0-4436-B5A6-2F5EF2C3E242, 7d960b0d-7af8-11d0-8e5e-00a0c911005a
FE46E1DF-E8A8-48d3-932E-B61BC092E681, A31CAE00-0AB0-11d1-B646-00A0C922E851
B7EE8DBA-E930-4c5d-984D-B07F8EB60977, 349D5D4E-5811-11d3-B741-00C04F9901D1
7E7C4B21-079F-4830-9ED5-E0CB0BF281F1, C562FF5A-FE57-11d2-B709-00C04F9901D1
CF7549A9-7A2A-4a6e-ACF4-05452C98CF7E, 34ECEDC1-06FE-11d1-AED2-549FFB000000
4544D333-8D5F-4517-9113-3550D618F2AD, 34ECEDC2-06FE-11d1-AED2-549FFB000000
B61FC35B-EEBF-4dec-BFF1-28A2DD43C38F, 7d960b1d-7af8-11d0-8e5e-00a0c911005a
686C2AF1-A2E5-4f6c-B660-B63FD4F70C18, A33B889B-18C2-4c4e-B561-4D95F0C3DD40
7DB81657-7722-4407-B675-9F4A6FEEEA15, 914C74A0-8F69-11d1-BC27-0000F87552E7
E36756DE-BB4F-4900-A7F0-E827BDBD2092, 2FC2CA21-B6AA-11d0-AE1A-00A0C90FFFC3
999B1784-A1EE-42eb-B4B6-E928008FFB5D, 74C9E366-2BCD-11D2-B2B4-00C04FB17608
F04C8816-7F77-450d-9527-14D0B93DA159, b4e98631-f322-11d0-8e89-00a0c911005a
250E1E9A-D2FC-410f-99E4-1ABA5B390A9A, b4e98630-f322-11d0-8e89-00a0c911005a
DC7EDE19-3DD1-4e20-A7F1-110883ED996F, 632f13be-b1cc-11d0-ae4c-00c04fb68006
26831FB7-7C55-4ab1-B4AD-E37783F2D4A8, 702312F2-461F-45b2-8EEA-DA1D566115DF
35299EEC-11EE-4518-9F08-401638D1D3BC, 7d960b17-7af8-11d0-8e5e-00a0c911005a
0F4B629E-8C34-4b5e-A450-F9F8DCFE3009, 46ca0880-0ed7-11d1-8ebd-00a0c90f26ea
D5D49C61-1C0B-4ea1-9ADB-A79FB1DBC7B5, 7d960b1c-7af8-11d0-8e5e-00a0c911005a
9D71890D-090C-4b67-80C3-4CB55C600B60, 1E3A7DC6-800A-11d2-ADD5-00C04F7971C3
BF955013-A875-439d-A4E7-A3BBDF12AA4F, 04F29FC4-CE44-11d1-88B1-0000F87579D2
18933F6E-0937-4888-8C77-EC8A393B21EA, a12946d0-bcf3-11d0-8e69-00a0c911005a
5A494367-DF56-4062-8EDA-54E2C1FF42BC, EEFEA81A-8949-4f04-A089-CFBF9BC414C5
A2DD88C9-D878-4323-95A3-77DAF258E5D0, 7d960b0e-7af8-11d0-8e5e-00a0c911005a
B0834D0F-ACFF-4ea5-809B-97CBB5D3D26B, 7d960b08-7af8-11d0-8e5e-00a0c911005a
9673A35F-C03A-438d-BD7E-27D9E28AC184, 7d960b0c-7af8-11d0-8e5e-00a0c911005a
BEC77711-2DF9-44d7-B478-A453C2E8A134, A2C2BCF9-AC4D-11d0-AF54-00A0C90F9DE6
8C453B03-8907-435b-96D7-573C40948F5C, 46052C70-DCFB-11d0-9404-00A0C90F2734
FD9DC8E3-2FFC-446D-8C50-99CA4A3D2D1C, 7d960b09-7af8-11d0-8e5e-00a0c911005a
FC5EF273-DCE3-4DBB-AEE3-F54F91F00286, 9A726311-D779-11d0-AE21-00A0C90FFFC3
7A54FEA1-E786-4A30-8F38-45B3703E50DD, 8C506C01-D7A0-11d0-AE21-00A0C90FFFC3
40FB079B-B62C-486F-9823-C9A2EAE8DBFD, 7d960b13-7af8-11d0-8e5e-00a0c911005a
78036A8D-A04C-43E4-8BC0-846E63AFA9A2, 7d960b14-7af8-11d0-8e5e-00a0c911005a
02AC210F-139B-4F8E-9159-501CF2A87D6E, fa50ef7c-2b83-42c5-ab89-e9395e9731d8
96973FC6-C2E4-4CB9-8BAF-7F7CD6DBC604, 7d960b0f-7af8-11d0-8e5e-00a0c911005a
687396AE-252E-460F-8F54-EF2C521BB6D8, 1C97C7F5-8C7B-46a2-A84B-AB12A5833A45
30E5C390-C3E6-40AC-BD1D-7015B1B5F541, 65C8CA4C-0871-48c5-A2E5-FB2F4DC4DB23
E68652D0-396C-4937-95A3-F0AE7ACD0E15, 4C8F7500-5106-11d3-8821-00C04F7971A5
18291FD1-A1DD-4264-AEAD-6AFD616BF15A, 7d960b10-7af8-11d0-8e5e-00a0c911005a
82871589-D680-4D86-B969-9D1102B00F6F, 7d960b11-7af8-11d0-8e5e-00a0c911005a
55AB9450-F9C7-4305-94E8-BEF12065338D, 7d960b12-7af8-11d0-8e5e-00a0c911005a
9D21BCC5-2C63-4A61-B055-2F3DF78EB30A, BC5955D1-AA0D-11d0-A8C5-00A0C921A4D2
6909C6ED-2AF5-4A35-8EA7-E6095A3ECF9E, BC5955D2-AA0D-11d0-A8C5-00A0C921A4D2
A7E6B1F9-DFF1-4354-870F-196BE871F329, 842BEEF8-B57A-11d2-8B97-00C04F8EC28C
0F6D7FB4-2649-4E51-BC20-3698F9F51358, BC5955D3-AA0D-11d0-A8C5-00A0C921A4D2
970A6925-5FFA-4A77-972F-7AB90C0130E5, D30A201A-7837-11d2-8B81-00C04F8EC28C
66638598-522B-4058-9E65-FAF237700E81, BC5955D4-AA0D-11d0-A8C5-00A0C921A4D2
327C43D7-CCB1-41D7-9A7B-CE87751201F7, 92ED80E0-144D-11d1-8F8B-00A0C91BBFA2
EC47207E-5A2A-45D4-9FA4-F9AB94E380B4, 92ED80E1-144D-11d1-8F8B-00A0C91BBFA2
D94C96DA-A6C4-4F52-84F6-52ECF05DEA3A, 92ED80E2-144D-11d1-8F8B-00A0C91BBFA2
D529FAD1-4BE0-4BEA-92A3-A58A4B89D056, 92ED80E3-144D-11d1-8F8B-00A0C91BBFA2
9B878A55-296A-404D-80C4-1468BB7CDC43, B7886422-E776-11d0-AE28-00A0C90FFFC3
533FAD11-FE7F-41EE-A381-8B67792CD692, B7886421-E776-11d0-AE28-00A0C90FFFC3
C734671A-9BB0-45C5-A08E-B9AB73CF5F47, d0b027c6-8c1f-11d0-8a34-00a0c91e2acd
EE559C3D-0189-4F81-B088-C6CC6A394CA1, d0b027c7-8c1f-11d0-8a34-00a0c91e2acd
AC7D8BE5-B7F5-400B-B02C-35207672F56B, 7d960b1b-7af8-11d0-8e5e-00a0c911005a
D84D04B8-8E0D-4298-AD9C-27F8C0D5484A, C43E5BC8-14FC-4b6d-9237-1ADD628D4899
5AA5B118-B3D4-40C5-8739-231CE192850C, 7d960b1a-7af8-11d0-8e5e-00a0c911005a
D6F79714-BFA9-4F00-98CF-E2FA31802694 , 455AD7A0-8C58-11d0-A8AB-00A0C921A4D
F7C88E0E-A5C6-4E32-BD42-AFFCFB94A1D1, 7d960b15-7af8-11d0-8e5e-00a0c911005a 
E2E82904-6072-4F8E-A4F5-9AF15A98F444, A5412570-5FB9-11d1-A811-00A0C9110051 
2E10DD68-AD50-4D3C-94F7-D6C165C7E25D, 7d960b16-7af8-11d0-8e5e-00a0c911005a 
D53BFAC7-AE4E-4500-AFB0-3925AE60B2BC, EF16A8B0-41CF-11d1-84A4-00A0C9110055 
A847B389-401A-4438-8A90-CA5BF2451E13, 65BC5C20-41D1-11d1-84A4-00A0C9110055 
6979C82C-21DB-4E5C-A225-C50A766AA5BA, c21c16a2-1612-4995-b445-f7b1c1657878 
374FAF39-7EF3-4877-8667-7E96EC0C1771, 53525550-C745-11d0-A7A6-00A0C9110051 
A001CA6F-F6FF-4C98-873A-845B1C917B96, 76A3B2C0-C743-11d0-A7A6-00A0C9110051 
F925DA6B-3F43-4437-9E1E-4D4C1BBDAB3F, E370AEAA-AA14-11d0-8C46-00C04FC2AA89
B5E12E94-6653-4A0D-9C42-5357F2654360, E370AEAB-AA14-11d0-8C46-00C04FC2AA89
5303CCDE-D37A-445B-88A1-A71742F66345, ADB5A663-C641-11d0-8C54-00C04FC2AA89
CC81495D-3C2B-4B1E-82CE-965EA5FCA2A0, ADB5A664-C641-11d0-8C54-00C04FC2AA89
70E643E2-1673-4764-8A39-63CB1AEE0DC9, E370AEA9-AA14-11d0-8C46-00C04FC2AA89
08E728DC-9C45-4060-A243-B73443B7CA16, 0F844C7D-5EF0-11d2-B213-0000F87570EE
6A2A1D82-C590-4AB1-8CC2-D95BACBBA9E0, E31E5D50-D8A6-11d2-AFBD-00105A9991EF
D388BD3B-4D50-4356-B09A-8917E706D196, DB5CFB59-FC95-11d0-8C7E-00C04FC2AA89
DC0AF70E-5097-4DD3-9983-5A98C3A19942, 1F9C665D-F96A-11d0-8C7E-00C04FC2AA89
47B1D60A-4EB8-4723-B991-992E6393E392, 81CD5C00-FFA1-11d0-B63F-00A0C922E851
1375E029-1FDD-47FF-A22C-6709242133E2, 040F3EE3-55D8-11d3-9ECE-00C04F682A08
910035B1-D8BE-403A-975E-E4FB68CE40A1, 0E3C4039-6639-11d3-BFFC-00C04F990235
66899421-F497-4503-8C9D-ADAE290F2F27, 2F952EED-564F-11d3-9ECE-00C04F682A08
A4AAB3EC-A9BB-42E2-8FD4-B01FE406D3F1, 970D9860-EE83-11d0-A778-00A0C91110C3
6375FC20-7D0B-4D4D-B67F-40F6ABBBB94C, D1E5F1F2-66F8-4384-BB9E-38DA0DCCE632
C4158C7D-5052-48D9-8643-7A821BB0F50B, CC27B016-3D1E-469e-A0B6-9CFAB0E6DBF6
87066898-76AB-45E2-B33C-C5B6B99BB03E, E85449F3-F8BC-11d0-A77A-00A0C91110C3
E86128E4-3B1B-4BE9-BEB6-D30E5BF40850, 1FF9C984-5E75-47cd-B65F-FB63445BFCD7
DC1B976F-4DC7-4B3D-9EC7-A0DE9D39BC13, 7E547EFB-5DBB-4049-B039-86E416220E30
44CCEB38-619B-401C-9B48-B9E874FFEE21, E85449F6-F8BC-11d0-A77A-00A0C91110C3
C48F7AB9-8966-4138-B602-14C5EB8BD857, 07f5fbe1-1abb-11d3-85aa-006097c68e81
5801DB45-16AA-4F08-BB57-82A070B79512, 0e801c7a-479b-11d3-bdba-00c04f688e50
01E95D2E-2D20-4662-9DE7-4C1C35524260, 07f5fbe0-1abb-11d3-85aa-006097c68e81
7C4C8065-FB7E-45D8-9B50-940A8FCB5876, 07f5fbe2-1abb-11d3-85aa-006097c68e81
A66E54A0-1102-4A7A-A058-03C7109B99D1, E85449F7-F8BC-11d0-A77A-00A0C91110C3
EA31732A-0A11-4E80-8DCC-9E6DB395BE59, E85449F8-F8BC-11d0-A77A-00A0C91110C3
0587FED2-8072-401F-9090-BCA98C44BBF7, 7178484A-76B0-11d3-BDC7-00C04F688E50
D7ECCE71-9C14-49A9-A93D-A5ED6286AC46, C9C0AE26-AA77-11d2-B3F0-0000F87570EE
0DF98187-FD9A-4669-8A56-727910A4866C, 269A02DC-6AF8-11d3-BDC4-00C04F688E50
46B4B7C2-11EB-4753-BE4B-0E0A16E9CE53, 6114C8A0-0CE9-11d1-8BD9-00A0C90F26F7
66A77728-86E1-4D18-88C5-EE0D4FD4BF60, 6114C8A1-0CE9-11d1-8BD9-00A0C90F26F7
CC05EE57-C6C0-4742-A469-0961E50B0049, 6114C8A2-0CE9-11d1-8BD9-00A0C90F26F7
D2C45F92-23B5-408B-B41D-D4365FB7EDA8, 94017641-2BA3-11d1-AE65-00A0C90F26F4
8C444EF9-5863-4AB1-A1D0-55CC60AC253A, 5E0EEA6C-2EBD-11d1-8CC5-00C04FC2AB22
34DBAA55-2CA4-44EF-9F92-85435D3E4451, 3d4683e0-313b-11d1-a04a-00a0c911e8e9
DC0A8728-F58B-4444-B9F0-32D6868BF399, F71AA513-9038-11d0-8C3C-00C04FC2AA89
6FBCB271-B391-4F80-B560-45E650DEF0A7, 559BAFB1-8396-11d0-B668-00AA00A3EE26
61B34381-6D7C-461D-949A-1AE178CBA00D, 6A213651-8396-11d0-B668-00AA00A3EE26
EAF61568-F99B-4BC2-83C4-1DAD8FFAE9E5, 6513023F-94BD-11d0-8C3E-00C04FC2AA89
35A96FFB-7ED0-4D76-93CE-49BE83A9C91E, B9C589F8-471B-11d1-8862-0000F87579D2
F4936BE4-7AE0-4C97-9D82-51D219FC5D77, 16c5b4c1-03b3-11d1-a39a-006097df2373
508ED8E9-923D-44ED-8165-5B96DA4E0829, AEC7E124-7662-11d1-9CF5-00C04FB17665
B1E402B6-D8E0-4422-9164-421FEE099F00, AA71B5C0-CD90-11d1-B4D6-00A0C911E8B1
DF29D855-D0EC-4DA1-BCC3-42FA3A09B1CB, 7EEDD561-FC1E-11d2-BECD-00C04F682A08
4D25F3C7-3138-4AC6-91AF-D7FF6929DB9F, 7EEDD562-FC1E-11d2-BECD-00C04F682A08
320E51F6-D238-4BD0-BA89-CCA91DBCF411, 8F97C0CD-2B64-11d3-BEDD-00C04F682A08
6D10BA00-9465-4F93-8B1D-11E36EE1FF65, D3EE8D38-78D7-11d2-8776-00C04F7971A5
366704D5-85D0-4F7D-B267-90FA4DD37D5B, 1B04D776-CAB7-11d2-A41B-00C04F72D18A
2BD8D42F-5BC5-4B7F-AB50-FE9310F2FE53, 2CAA1AB2-0261-11d3-BE8A-0080C747D9A0
0660CD86-F3AB-4008-930D-BAE8B10FF8CA, 94964F2F-FF42-11d2-A434-00C04F72D18A
811DEB01-C1B0-4172-9CA3-504C5095882E, 1D009554-87E2-11d3-A45A-00C04F72D18A
575BC578-7562-44E7-986C-5B31398CF121, 9A90C18F-7F31-11d2-9BFC-00C04F9901D1
CA3E5036-9567-407C-B464-5ECA98B533A0, F6A0FA50-B78B-11d0-A79E-00A0C9110051
BC039978-213E-4CA0-81C4-10EDF2AF2D66, 41218D4C-AC2A-11d2-8B91-00C04F8EC28C
5FA2AC9A-3BEF-423A-8B5E-6645811BFB6B, 0514444A-F8DB-11d2-AE7D-00C04F7971C3
1D42A4C9-57DE-4D3E-8010-485ADFC1E95B, A76B7F30-50CF-11d3-8E5C-00104BC90F0C
F73E1D1E-3D1B-44F0-B736-D59F960B7F9E, 12F8E1DA-1EB3-11d3-AE9B-00C04F7971C3
3448FF72-B072-435E-9059-29D89C0A3CD0, 9B7C3392-145C-11d3-AE91-00C04F7971C3
40BC7B1A-E625-4DA1-86B4-7660F3CCBB16, 1369CBD4-0FBD-11d3-AE8E-00C04F7971C3
82780F79-A3ED-4B7F-90C0-5FEE14CBB53E, 30B4F22A-0EE3-11d3-9B52-00C04F68380C
9E6F916A-3E8B-4741-8AFB-5187F82B699B, 746797AC-0EE3-11d3-9B52-00C04F68380C
237ABD5F-9537-4AEE-A893-72AB9A0EA8E8, 6DD48D3C-1BD1-11d3-8BBD-00C04F8EC28C
0FF510A3-5FA5-49F1-8CCC-190D71083F3E, 0A55B998-D98E-11D2-91DF-00A0CC394083
ED77D5EC-B0DE-4721-BDC6-38DCBE589B4C, C96FC5D4-DE9F-43bf-B197-03897D829800
44A39218-81BD-4669-9DE0-F282A8BAEE34, 1AB09D1C-6A1F-410f-856D-7C35D386A068
BED89B98-6EC9-43CB-B0A8-41D6E2D6669D, bdb56d23-712a-43f0-a2d0-5cf06e71003d
3634494C-492F-4F91-8009-4541234E4E99, edea12ea-3621-4a7e-ac32-8940f17453b7
B8F932A5-5037-48C9-AB3A-A4ABBA79358B, d0b027b1-8c1f-11d0-8a34-00a0c91e2acd
2BC88742-618D-46B2-B65D-67AC990E3215, d0b027dc-8c1f-11d0-8a34-00a0c91e2acd
A17326AD-C97B-4278-86E2-72163C4C6A8C, d0b027c3-8c1f-11d0-8a34-00a0c91e2acd
8588E475-BB33-4763-B4BA-0322F839AA3C, d0b027c0-8c1f-11d0-8a34-00a0c91e2acd
E9964F8D-5600-4623-B611-FF4007B22419, 942DCAB5-BA5D-11d0-AB23-00A0C90F2713
358F6C9F-CD65-446A-B79A-30CEE094FDC1, 2bc4e9c7-66b3-11d1-b194-00a0c91e2acd
2DBDF061-439B-4822-9727-CA3ED918B658, d0b027b2-8c1f-11d0-8a34-00a0c91e2acd
A7ADE7A0-F286-4C03-8137-D6D0EF3D6848, 521F66DD-F1C1-11d2-B0AD-00A0C9CFCEE6
EEABD2BE-4F4F-4CCB-86AD-9F469C5C9686, d0b027e0-8c1f-11d0-8a34-00a0c91e2acd
E6D78900-BB40-4039-9C54-593A242B65DA, 2bc4e9f0-66b3-11d1-b194-00a0c91e2acd
0D6D480C-894F-48E4-98D2-E0A7127750E4, 99913f1e-1ee3-11d3-8a6e-00c04f682e21
623E34D5-82C1-42ED-A82C-6CA0478FFDDA, 2bc4e9f1-66b3-11d1-b194-00a0c91e2acd
803E46E2-6A0D-4D5D-9F84-6CE1248B068D, e0b027b0-8c1f-11d0-8a34-00a0c91e2acd
509D0E4F-A770-44C3-9185-D4F1E4813AD6, BFDCD88A-30CA-11d3-9B5F-00C04F68380C
0A8AC2FB-87BC-4795-8C8B-47E877F48FE8, d0b027b3-8c1f-11d0-8a34-00a0c91e2acd
0238DCC5-62D6-4DAC-A977-2C6A36C502F4, d0b027b4-8c1f-11d0-8a34-00a0c91e2acd
2D39742A-C729-44C3-AC5B-85785D4C1C22, d0b027c8-8c1f-11d0-8a34-00a0c91e2acd
FCC03D95-7C2E-4398-AAAE-0F4B56104FC8, 521F66DE-F1C1-11d2-B0AD-00A0C9CFCEE6
653BB330-1205-4CF8-8F88-723D6E199A01, 521F66DF-F1C1-11d2-B0AD-00A0C9CFCEE6
A086E870-AA0B-4EF9-8CF3-4A38267B9C7D, 521F66E0-F1C1-11d2-B0AD-00A0C9CFCEE6
B4D28A5B-063D-4622-B0C7-C3DDEBFCDCCF, 06e2018b-568f-44e9-8af7-5d501cae6eb7
9DB6689F-3C5F-43ED-B0D5-54851A980B93, d0b027b6-8c1f-11d0-8a34-00a0c91e2acd
28D58EEE-EFFC-4B4D-834C-3A746FEAC7AE, d0b027d6-8c1f-11d0-8a34-00a0c91e2acd
0ED850AF-C30A-42BA-AA20-3436ADF24937, d0b027b5-8c1f-11d0-8a34-00a0c91e2acd
819CC554-C7BF-4965-A4D4-937B2B6CD2E1, d0b027c9-8c1f-11d0-8a34-00a0c91e2acd
EC9ABAFB-E744-44B5-8771-0B875EE6FC5C, d0b027cb-8c1f-11d0-8a34-00a0c91e2acd
805B0E0A-7122-4855-962F-887E46D2F112, 2bc4e9c0-66b3-11d1-b194-00a0c91e2acd
BF283741-E0AD-49C0-BEA4-1E267E52208F, d0b027cc-8c1f-11d0-8a34-00a0c91e2acd
3018E511-6282-41FC-8E1F-77AB1BDDE523, 2bc4e9c1-66b3-11d1-b194-00a0c91e2acd
0612FCA3-B60E-410B-BCCE-43953FF0763C, 2bc4e9c2-66b3-11d1-b194-00a0c91e2acd
12B43F9F-8550-4FFA-850F-FE9D4D396C20, d0b027e1-8c1f-11d0-8a34-00a0c91e2acd
218D0424-9C53-4EA1-A679-A0AED59B0E4F, CB89733A-B2E0-11d1-981B-0000F8058E9D
B6622DC2-ACC1-463A-A50C-F9674DA9C827, 910E8284-F867-11d0-AB36-00A0C90F2713
05A323E9-5069-474E-9BCC-14F87302B213, 96313150-6AA6-11d1-A202-0000F8026F55
A9F86308-5EA7-485D-BAB8-E8989C3CFBDC, d0b027da-8c1f-11d0-8a34-00a0c91e2acd
F59DBC1A-91C3-45C9-9796-1CAB558502DD, 868163bb-1da7-41df-87b8-ce64439a4093
93E969D6-1AA0-455F-B208-6ED3C82B5C58, d0b027db-8c1f-11d0-8a34-00a0c91e2acd
80353F58-F2A3-47B8-B2DF-0475E07BB1C6, e823a2b0-88ed-44c8-98de-73fd5d54b908
910ACC85-ECD4-4CF8-85E0-EB105ABE8008, 699D5E17-9B22-466b-ACFA-2E12CD64E249
0E7798AD-4000-48DF-AA1D-851425D45825, 9E9AB119-D2A1-4381-9020-6B771DC46AE9
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\vsdesigner\tools\resgen\sr.txt ===
DuplicateResourceKey=Duplicate resource key!  Name was: {0}
ErrorOutput=error: {0}
WarningOutput=warning: {0}
UnknownFileExtension=Unknown file extension '{0}'
FileNotFound=Couldn't find input file '{0}'
InvalidResX=Invalid format or contents in input. '{0}' error trying to read input.
WriteError=Couldn't write output file '{0}'
CorruptOutput=.resources file is possibly corrupt.  Deleting '{0}'
DeleteOutputFileFailed=Could not delete possibly corrupted output file '{0}'.
SpecificError=Specific exception: {0}  Message: {1}
GenericWriteError=Error while writing the output file '{0}'
ErrorCount={0} error(s).
INFFileBracket=Unexpected INF file bracket syntax - ResGen does not support text in square brackets.  Bad text: '[{0}'.
NoEqualsWithNewLine=Found a resource that had a new line in it, but couldn't find the equal sign within!  Length: {0}  name: '{1}'.
NoEquals=Found an equals sign at beginning of a line!  Expected a name / value pair like 'name = value'
BadEscape=Unsupported escape character in value!  Name was: {0}
NoName=Missing value!  Expected a name / value pair like 'name = value'.  Name was '{0}'
ReadIn=Read in {0} resources from '{1}'
BeginWriting=Writing resource file...  
DoneDot=Done.
MalformedCompileString=You must specify an input & outfile file name like this:\ninFile.txt,outFile.resources.\nYou passed in "{0}".
StringsTagObsolete=The "[strings]" tag is no longer necessary in your text files.  Please remove it.
OnlyString=Only strings can be written to a .txt file; the value of '{0}' is a '{1}'
Usage=Microsoft (R) .NET Resource Generator \n[Microsoft .Net Framework, Version {0}]\n{1}\n\nUsage:\n    ResGen inputFile.ext [outputFile.ext]\n    ResGen /compile inputFile1.ext[,outputFile1.resources] [...]\n\nWhere .ext is .resX, .txt, or .resources\n\nConverts files from one resource format to another.  If the output \nfilename is not specified, inputFile.resources will be used.\nThe /compile option takes a list of .resX or .txt files to convert to \n.resources files in one bulk operation, replacing .ext with .resources for\nthe output file name.\n\n.txt files have this format:\n\n    # Use # at the beginning of a line for a comment character.\n    name=value\n    more elaborate name=value\n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\xml\system.xml.txt ===
[strings]

; NOTE: see #15116
; NOTE: do not use \", use ' instead
; NOTE: do not use #, use ; instead for comments
; NOTE: leave the [strings] alone

; These are the managed resources for System.Xml.Dll.  See
; ResourceManager documentation and the ResGen tool, which is
; a managed app built from \com99\src\toolbox\resgen.

Xml_UserException={0}
Xml_DefaultException=An XML error has occurred. 
Xml_InvalidOperation=The operation is not valid due to the current state of the object. 
Xml_StackOverflow=Stack overflow.

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; XmlScanner Errors
Xml_UnclosedQuote=There is an unclosed literal string.
Xml_UnexpectedEOF=An unexpected end of file parsing {0} has occurred.
Xml_BadStartNameChar=The '{0}' character, hexadecimal value {1}, cannot begin with a name.
Xml_BadNameChar=The '{0}' character, hexadecimal value {1}, cannot be included in a name.
Xml_BadComment=This is an invalid comment syntax.  Expected '-->'.
Xml_BadDecimalEntity=This is an invalid syntax for a decimal numeric entity reference.
Xml_BadHexEntity=This is an invalid syntax for a hexadecimal numeric entity reference.
Xml_NumEntityOverflow=The numeric entity value is too large.
Xml_MissingByteOrderMark=There is no Unicode byte order mark. Cannot switch to Unicode.
Xml_UnknownEncoding=The system does not support '{0}' encoding.
Xml_InternalError=An internal error has occurred.
Xml_UnexpectedCharacter='{0}', hexadecimal value {1}, is an unexpected character.
Xml_InvalidCharInThisEncoding=There is an invalid character in the given encoding.

; XmlParser errors
Xml_ErrorPosition=Line {0}, position {1}.
Xml_UnexpectedToken=This is an unexpected token. The expected token is '{0}'.
Xml_UnexpectedToken1=This is an unexpected token. The expected token is '|' or ')'.
Xml_TagMismatchFileName=The '{0}' start tag on line '{1}' doesn't match the end tag of '{2}' in file '{3}'.
Xml_TagMismatch=The '{0}' start tag on line '{1}' does not match the end tag of '{2}'.
Xml_UnexpectedEndTag=There is an unexpected end tag.
Xml_UnknownNs='{0}' is an undeclared namespace.
Xml_ReservedNs=This is a reserved namespace.
Xml_BadAttributeChar='{0}', hexadecimal value {1}, is an invalid attribute character.
Xml_MissingRoot=The root element is missing.
Xml_MultipleRoots=There are multiple root elements.
Xml_BadElementData=The element data is invalid.
Xml_InvalidRootData=The data at the root level is invalid.
Xml_XmlDeclNotFirst=The XML declaration is unexpected.
Xml_InvalidXmlDecl=The syntax for an XML declaration is invalid.
Xml_InvalidNodeType='{0}' is an invalid node type.
Xml_InvalidPIName='{0}' is an invalid name for processing instructions.
Xml_InvalidXmlSpace='{0}' is an invalid xml:space value.
Xml_InvalidVersionNumber=The version number {0} is invalid.
Xml_DupAttributeName='{0}' is a duplicate attribute name.
Xml_BadDTDLocation=This is a DTD declaration outside of a DTD.
Xml_UnexpectedElement=The <{0}> tag from namespace {1} is not expected.
Xml_TagNotInTheSameEntity=<{0}> and </{0}> are not defined in the same entity.
Xml_PartialContentNodeTypeNotSupported=This NodeType is not supported for partial content parsing.
Xml_InvalidPartialContentData=There is invalid partial content data.
Xml_MultipleDTDsProvided=Cannot have multiple DTDs.
Xml_CanNotBindToReservedNamespace=Cannot bind to the reserved namespace.
Xml_CanNotStartWithXmlInNamespace=Namespace qualifiers beginning with 'xml' are reserved, and cannot be used in user-specified namespaces.
Xml_XmlnsBelongsToReservedNs=The 'xmlns' attribute is bound to the reserved namespace 'http://www.w3.org/2000/xmlns/'.
Xml_InvalidCharacter='{0}', hexadecimal value {1}, is an invalid character.
Xml_ExpectDtdMarkup=The expected DTD markup was not found.
Xml_InvalidBinHexValue='{0}' is not a valid BinHex text sequence.
Xml_InvalidTextDecl=This is an invalid text declaration.
Xml_InvalidBase64Value='{0}' is not a valid Base64 text sequence.
Xml_ExpectExternalOrPublicId=Expecting a system identifier or a public identifier.
Xml_ExpectExternalIdOrEntityValue=Expecting an external identifier or an entity value.
Xml_ExpectAttType=Expecting an attribute type.
Xml_ExpectIgnoreOrInclude=Conditional sections must specify the keyword 'IGNORE' or 'INCLUDE'.
Xml_ExpectSubOrClose=Expecting an internal subset or the end of the DOCTYPE declaration.
Xml_ExpectExternalOrClose=Expecting external ID, '[' or '>'.
Xml_ExpectOp=Expecting '?', '*', or '+'.
Xml_ExpectPcData=Expecting 'PCDATA'.
Xml_UndeclaredParEntity=Reference to undeclared parameter entity, '{0}'.
Xml_UndeclaredEntity=Reference to undeclared entity, '{0}'.
Xml_RecursiveParEntity=The parameter entity, {0}, references itself.
Xml_RecursiveGenEntity=The '{0}' general entity references itself.
Xml_ExternalEntityInAttValue=External entity '{0}' reference cannot appear in the attribute value.
Xml_UnparsedEntityRef=Reference to unparsed entity, {0}.
Xml_UnparsedEntity=The '{0}' entity is not an unparsed entity.
Xml_InvalidConditionalSection=A conditional section is not allowed in an internal subset.
Xml_InvalidParEntityRef=A parameter entity reference is not allowed in internal markup.
Xml_InvalidContentModel=This is an invalid content model.
Xml_InvalidXmlDocument=This an invalid XML document, {0}.
Xml_FragmentId=The fragment identifier '{0}' cannot be part of the system identifier '{1}'.
Xml_ColonInLocalName={0} is an unqualified name and cannot contain the character, ':'.
Xml_InvalidAttributeType={0} is an invalid attribute type.
Xml_UnexpectedCDataEnd="]]>" is not expected here.
Xml_InvalidContentForThisNode=Invalid content for {0} NodeType.
Xml_EnumerationRequired=The enumeration data type is required here.
Xml_NotSameNametable=Not the same name table.
Xml_NoDTDPresent=No DTD found.
Xml_MultipleValidaitonTypes=Unsupported combination of validation types.
Xml_BadNamespaceDecl=Invalid namespace declaration.
Xml_ErrorParsingEntityName=An error occurred while parsing EntityName.
Xml_NoValidation=No validation took place.
Xml_MissingEncodingDecl=Encoding declaration is required in an XmlDeclaration in an external entity.
Xml_WhitespaceHandling=Expected WhitespaceHandling.None or WhitespaceHandling.All or WhitespaceHandling.Significant.
Xml_InvalidResetStateCall=Cannot call ResetState when parsing an XML fragment.
Xml_EntityHandling=Expected EntityHandling.ExpandEntities or EntityHandling.ExpandCharEntities.
Xml_InvalidNmToken=Invalid NmToken value'{0}'.

; XmlURLResolver
Xml_UnsupportedClass=This object type is not supported.
Xml_NullResolver=Resolving of external URIs was prohibited. 
Xml_UntrustedCodeSettingResolver=The XmlResolver can be set only by fully trusted code.

; XmlWriter errors
Xml_InvalidQuote=This is an invalid XML attribute quote character. Valid attribute quote characters are ' and ".
Xml_UndefPrefix=An undefined prefix is in use.
Xml_PrefixForEmptyNs=Cannot use a prefix with an empty namespace.
Xml_NoNamespaces=Cannot set the namespace if Namespaces is 'false'.
Xml_InvalidCDataChars=Cannot have ']]>' inside an XML CDATA block.
Xml_InvalidCommentChars=An XML comment cannot have '--' inside, and '-' cannot be the last character.
Xml_NotTheFirst=WriteStartDocument needs to be the first call.
Xml_InvalidPiChars=Cannot have '?>' inside an XML processing instruction.
Xml_UndefNamespace=The '{0}' namespace is not defined.
Xml_EmptyName=The Name cannot be empty.
Xml_InvalidNameChars=There is an invalid name character in {0}.
Xml_NoStartTag=There was no XML start tag open.
Xml_Closed=The Writer is closed.
Xml_WrongToken=Token {0} in state {1} would result in an invalid XML document.
Xml_InvalidPrefix=Prefixes beginning with "xml" (regardless of whether the characters are uppercase, lowercase, or some combination thereof) are reserved for use by XML.
Xml_NonWhitespace=Only white space characters should be used.
Xml_DupXmlDecl=WriteStartDocument had the XML declaration written.
Xml_NoRoot=This document does not have a root element.
Xml_InvalidIndentation=The indentation value must be greater than 0.
Xml_NotInWriteState=NotInWriteState.
Xml_InvalidPosition=The current position on the Reader is neither an element nor an attribute.
Xml_IncompleteEntity=Incomplete entity contents.
Xml_IncompleteDtdContent=The DTD content is incomplete.
Xml_InvalidSurrogatePair=The surrogate pair is invalid.
Xml_SurrogatePairSplit=The second character surrogate pair is not in the input buffer to be written.

; XmlSchema errors
Sch_ErrorPosition=An error occurred at {0}, ({1}, {2}).
Sch_ParEntityRefNesting=The parameter entity replacement text must nest properly within markup declarations.
Sch_DupElementDecl=The '{0}' element has already been declared.
Sch_ReservedNsDecl=The '{0}' prefix is reserved.
Sch_IdAttrDeclared=The attribute of type ID is already declared on the '{0}' element.
Sch_RootMatchDocType=The root element name must match the DocType name.
Sch_DupId='{0}' is already used as an ID.
Sch_UndeclaredElement=The '{0}' element is not declared.
Sch_UndeclaredAttribute=The '{0}' attribute is not declared.
Sch_UndeclaredNotation=The '{0}' notation is not declared.
Sch_UndeclaredId=Reference to undeclared ID is '{0}'.
Sch_SchemaRootExpected=Expected Schema root. Make sure that the root element is <schema> and the namespace is 'http://www.w3.org/2001/XMLSchema' for an XSD schema or 'urn:schemas-microsoft-com:xml-data' for an XDR schema.
Sch_UnsupportedAttribute=The '{0}' attribute is not supported in this context.
Sch_UnsupportedElement=The '{0}' element is not supported in this context.
Sch_MissAttribute=The '{0}' attribute is either invalid or missing.
Sch_AnnotationLocation=The 'annotation' element cannot appear at this location.
Sch_DataTypeTextOnly=Content must be "textOnly" when using DataType on an ElementType.
Sch_UnknownModel=The model attribute must have a value of open or closed, not '{0}'.
Sch_UnknownOrder=The order attribute must have a value of 'seq', 'one' or 'many', not '{0}'.
Sch_UnknownContent=The content attribute must have a value of 'textOnly', 'eltOnly', 'mixed', or 'empty', not '{0}'.
Sch_UnknownRequired=The required attribute must have a value of yes or no.
Sch_UnknownDtType=Reference to an unknown data type, '{0}'.
Sch_MixedMany=The order must be many when content is mixed.
Sch_GroupDisabled=The group is not allowed when ElementType has empty or textOnly content.
Sch_MissDtvalue=The DataType value cannot be empty.
Sch_MissDtvaluesAttribute=The dt:values attribute is missing.
Sch_DupDtType=This data type has already been declared.
Sch_DupAttribute=The '{0}' attribute has already been declared for this ElementType.
Sch_RequireEnumeration=Data type should be enumeration when the values attribute is present.
Sch_DefaultIdValue=The attribute of type, ID, should not have the default value.
Sch_ElementNotAllowed=Element is not allowed when the content is empty or textOnly.
Sch_ElementMissing=There is a missing element.
Sch_ManyMaxOccurs=When the order is many, the maxOccurs attribute must have a value of '*'.
Sch_MaxOccursInvalid=The maxOccurs attribute must have a value of 1 or *.
Sch_MinOccursInvalid=The minOccurs attribute must have a value of 0 or 1.
Sch_DtMaxLengthInvalid=The value '{0}' is invalid for dt:maxLength.
Sch_DtMinLengthInvalid=The value '{0}' is invalid for dt:minLength.
Sch_DupDtMaxLength=The value of maxLength has already been declared.
Sch_DupDtMinLength=The value of minLength has already been declared.
Sch_DtMinMaxLength=The maxLength value must be equal to or greater than the minLength value.
Sch_DupElement=The '{0}' element already exists in the content model.
Sch_DupGroupParticle=The content model can only have one of the following; 'all', 'choice', or 'sequence'.
Sch_InvalidValue=The value '{0}' is invalid according to its data type.
Sch_MissRequiredAttribute=The required attribute '{0}' is missing.
Sch_FixedAttributeValue=The value of the '{0}' attribute does not equal its fixed value.
Sch_FixedElementValue=The value of the '{0}' element does not equal its fixed value.
Sch_AttributeValueDataType=The '{0}' attribute has an invalid value according to its data type.
Sch_AttributeDefaultDataType=The default value of '{0}' attribute is invalid according to its datatype. 
Sch_IncludeLocation=The 'include' element cannot appear at this location.
Sch_ImportLocation=The 'import' element cannot appear at this location.
Sch_RedefineLocation=The 'redefine' element cannot appear at this location.
Sch_InvalidBlockDefaultValue=The value 'list' or 'union' are invalid for the blockDefault attribute.
Sch_InvalidFinalDefaultValue=The value 'substitution' is invalid for the finalDefault attribute.
Sch_InvalidElementBlockValue=The value 'list' or 'union' are invalid for the block attribute on element.
Sch_InvalidElementFinalValue=The value 'substitution', 'list' or 'union' are invalid for the final attribute on element.
Sch_InvalidSimpleTypeFinalValue=The value 'substitution' or 'extension' are invalid for the final attribute on simpleType.
Sch_InvalidComplexTypeBlockValue=The value 'substitution', 'list' or 'union' are invalid for the block attribute on complexType.
Sch_InvalidComplexTypeFinalValue=The value 'substitution', 'list' or 'union' are invalid for the final attribute on complexType.
Sch_DupIdentityConstraint=The identity constraint '{0}' has already been declared.
Sch_DupGlobalElement=The global element '{0}' has already been declared.
Sch_DupGlobalAttribute= The global attribute '{0}' has already been declared.
Sch_DupSimpleType=The simpleType '{0}' has already been declared.
Sch_DupComplexType=The complexType '{0}' has already been declared.
Sch_DupGroup=The group '{0}' has already been declared.
Sch_DupAttributeGroup=The attributeGroup '{0}' has already been declared.
Sch_DupNotation=The notation '{0}' has already been declared.
Sch_DefaultFixedAttributes=The fixed and default attributes cannot both be present.
Sch_FixedInRef=The fixed value constraint on the '{0}' attribute reference must match the fixed value constraint on the declaration.
Sch_FixedDefaultInRef=The default value constraint cannot be present on the '{0}' attribute reference if fixed value constraint is present on the declaration.
Sch_DupXsdElement='{0}' is a duplicate XSD element.
Sch_ForbiddenAttribute=The '{0}' attribute cannot be present.
Sch_AttributeIgnored=The '{0}' attribute is equivalent to no component since the value of prohibited for attribute use serves to only prevent inheritance of an identically named attribute use from the base type definition. 
Sch_ElementRef=When the ref attribute is present, the type attribute and complexType, simpleType, key, keyref, and unique elements cannot be present.
Sch_TypeMutualExclusive=The type element cannot be present with either simpleType or complexType.
Sch_ElementNameRef=For element declaration either the name or the ref attribute must be present.
Sch_AttributeNameRef=For attribute '{0}' either the name or the ref attribute must be present, but not both.
Sch_TextNotAllowed=The following text is not allowed in this context: '{0}'.
Sch_UndeclaredType=Type '{0}' is not declared.
Sch_UndeclaredSimpleType=Type '{0}' is not declared or not a simple type.
Sch_UndeclaredEquivClass=Substitution group refers to '{0}', an undeclared element.
Sch_AttListPresence=An attribute of type ID must have a declared default of either #IMPLIED or #REQUIRED.
Sch_NotInSchemaCollection=The '{0}' schema does not exist in the XmlSchemaCollection.
Sch_NotationValue='{0}' is not in the notation list.
Sch_EnumerationValue='{0}' is not in the enumeration list.
Sch_EmptyAttributeValue=The attribute value cannot be empty.
Sch_InvalidLanguageId='{0}' is an invalid language identifier.
Sch_XmlSpace=Invalid xml:space syntax.
Sch_InvalidXsdAttributeValue='{1}' is an invalid value for the '{0}' attribute.
Sch_InvalidXsdAttributeDatatypeValue=The value for the '{0}' attribute is invalid - {1}.
Sch_ElementValueDataType=The '{0}' element has an invalid value according to its data type.
Sch_NonDeterministic=The content model must be deterministic. Multiple definition of element '{0}' causes the content model to become ambiguous. 
Sch_NonDeterministicAny=The content model must be deterministic. Wildcard declaration along with a local element declaration causes the content model to become ambiguous.
Sch_StandAlone=The standalone document declaration must have a value of 'no'.
Sch_XmlNsAttribute=The value 'xmlns' cannot be used as the name of an attribute declaration.
Sch_AllElement=Element '{0}' cannot appear more than once if content model type is "all".
Sch_MismatchTargetNamespace=The attribute targetNamespace does not match the designated namespace URI.
Sch_XsiTypeNotFound=This is an invalid xsi:type '{0}'.
Sch_ListFromNonatomic=A list data type, must be derived from an atomic or union data type.
Sch_UnionFromUnion=A union data type, must be derived from an atomic or list data type.
Sch_DupLengthFacet=This is a duplicate Length constraining facet.
Sch_DupMinLengthFacet=This is a duplicate MinLength constraining facet.
Sch_DupMaxLengthFacet=This is a duplicate MaxLength constraining facet.
Sch_DupWhiteSpaceFacet=This is a duplicate WhiteSpace constraining facet.
Sch_DupMaxInclusiveFacet=This is a duplicate MaxInclusive constraining facet.
Sch_DupMaxExclusiveFacet=This is a duplicate MaxExclusive constraining facet.
Sch_DupMinInclusiveFacet=This is a duplicate MinInclusive constraining facet.
Sch_DupMinExclusiveFacet=This is a duplicate MinExclusive constraining facet.
Sch_DupTotalDigitsFacet=This is a duplicate TotalDigits constraining facet.
Sch_DupFractionDigitsFacet=This is a duplicate FractionDigits constraining facet.
Sch_LengthFacetProhibited=The length constraining facet is prohibited for '{0}'.
Sch_MinLengthFacetProhibited=The MinLength constraining facet is prohibited for '{0}'.
Sch_MaxLengthFacetProhibited=The MaxLength constraining facet is prohibited for '{0}'.
Sch_PatternFacetProhibited=The Pattern constraining facet is prohibited for '{0}'.
Sch_EnumerationFacetProhibited=The Enumeration constraining facet is prohibited for '{0}'.
Sch_WhiteSpaceFacetProhibited=The WhiteSpace constraining facet is prohibited for '{0}'.
Sch_MaxInclusiveFacetProhibited=The MaxInclusive constraining facet is prohibited for '{0}'.
Sch_MaxExclusiveFacetProhibited=The MaxExclusive constraining facet is prohibited for '{0}'.
Sch_MinInclusiveFacetProhibited=The MinInclusive constraining facet is prohibited for '{0}'.
Sch_MinExclusiveFacetProhibited=The MinExclusive constraining facet is prohibited for '{0}'.
Sch_TotalDigitsFacetProhibited=The TotalDigits constraining facet is prohibited for '{0}'.
Sch_FractionDigitsFacetProhibited=The FractionDigits constraining facet is prohibited for '{0}'.
Sch_LengthFacetInvalid=The Length constraining facet is invalid - {0}.
Sch_MinLengthFacetInvalid=The MinLength constraining facet is invalid - {0}.
Sch_MaxLengthFacetInvalid=The MaxLength constraining facet is invalid - {0}.
Sch_MaxInclusiveFacetInvalid=The MaxInclusive constraining facet is invalid - {0}.
Sch_MaxExclusiveFacetInvalid=The MaxExclusive constraining facet is invalid - {0}.
Sch_MinInclusiveFacetInvalid=The MinInclusive constraining facet is invalid - {0}.
Sch_MinExclusiveFacetInvalid=The MinExclusive constraining facet is invalid - {0}.
Sch_TotalDigitsFacetInvalid=The TotalDigits constraining facet is invalid - {0}.
Sch_FractionDigitsFacetInvalid=The FractionDigits constraining facet is invalid - {0}.
Sch_PatternFacetInvalid=The Pattern constraining facet is invalid - {0}.
Sch_EnumerationFacetInvalid=The Enumeration constraining facet is invalid - {0}.
Sch_InvalidWhiteSpace=The white space character, '{0}', is invalid.
Sch_UnknownFacet=This is an unknown facet.
Sch_LengthAndMinMax=It is an error for length and minLength, or maxLength to be present.
Sch_MinLengthGtMaxLength=MinLength is greater than MaxLength.
Sch_FractionDigitsGtTotalDigits=FractionDigits is greater than TotalDigits.
Sch_LengthConstraintFailed=The actual length is not equal to the specified length.
Sch_MinLengthConstraintFailed=The actual length is less than the Minlength value.
Sch_MaxLengthConstraintFailed=The actual length is greater than the Maxlength value.
Sch_PatternConstraintFailed=The Pattern constraint failed.
Sch_EnumerationConstraintFailed=The Enumeration constraint failed.
Sch_MaxInclusiveConstraintFailed=The MaxInclusive constraint failed.
Sch_MaxExclusiveConstraintFailed=The MaxExclusive constraint failed.
Sch_MinInclusiveConstraintFailed=The MinInclusive constraint failed.
Sch_MinExclusiveConstraintFailed=The MinExclusive constraint failed.
Sch_TotalDigitsConstraintFailed=The TotalDigits constraint failed.
Sch_FractionDigitsConstraintFailed=The FractionDigits constraint failed.
Sch_UnionFailed=Union does not support this value.
Sch_NotationRequired=NOTATION cannot be used directly in a schema; only data types derived from NOTATION by specifying an enumeration value can be used in a schema. All enumeration facet values must match the name of a notation declared in the current schema.
Sch_DupNotationAttribute=No element type may have more than one NOTATION attribute specified.
Sch_NotationAttributeOnEmptyElement=An attribute of type NOTATION must not be declared on an element declared EMPTY.
Sch_RefNotInScope=The Keyref '{0}' cannot find referred key or unique in scope.
Sch_UndeclaredIdentityConstraint=The '{0}' identity constraint is not declared.
Sch_RefInvalidIdentityConstraint=Reference to an invalid identity constraint '{0}'.
Sch_RefInvalidCardin=Keyref '{0}' has different cardinality as the referred key or unique element.
Sch_ReftoKeyref=The '{0}' Keyref can refer to key or unique only.
Sch_EmptyXPath=The XPath for selector or field cannot be empty.
Sch_UnresolvedPrefix=The prefix '{0}' in XPath is unresolvable.
Sch_UnresolvedKeyref=The key sequence '{0}' in Keyref fails to refer to some key.
Sch_ICXpathError=The '{0}' is an invalid XPath for selector or field.
Sch_SelectorAttr=The '{0}' is an invalid XPath for selector. Selector cannot have an XPath selection with an attribute node.
Sch_FieldSimpleTypeExpected=The field '{0}' is expecting an element or attribute with simple type or simple content.
Sch_FieldSingleValueExpected=The field '{0}' is expecting at the most one value.
Sch_MissingKey=The identity constraint '{0}' validation has failed due to either a key that is missing or the existing key has an empty node.
Sch_DuplicateKey=There is a duplicate key sequence '{0}' for '{1}' key or unique identity constraint. 
Sch_TargetNamespaceXsi=The target namespace of an attribute declaration, whether local or global, must not match http://www.w3.org/2001/XMLSchema-instance.
Sch_UndeclaredEntity=This is a reference to an undeclared entity, '{0}'.
Sch_UnparsedEntityRef=This is a reference to an unparsed entity, '{0}'.
Sch_NotationNotAttr=This NOTATION should be used only on attributes.
Sch_MaxOccursInvalidXsd=The value for the 'maxOccurs' attribute must be xsd:nonNegativeInteger or 'unbounded'.
Sch_MinOccursInvalidXsd=The value for the 'minOccurs' attribute must be xsd:nonNegativeInteger.
Sch_MaxInclusiveExclusive='maxInclusive' and 'maxExclusive' cannot both be specified for the same data type.
Sch_MinInclusiveExclusive='minInclusive' and 'minExclusive' cannot both be specified for the same data type.
Sch_MinInclusiveGtMaxInclusive=The value specified for 'minInclusive' cannot be greater than the value specified for maxInclusive for the same data type.
Sch_MinExclusiveGtMaxExclusive=The value specified for 'minExclusive' cannot be greater than the value specified for maxExclusive for the same data type.
Sch_MinInclusiveGtMaxExclusive=The value specified for 'minInclusive' cannot be greater than the value specified for maxExclusive for the same data type.
Sch_MinExclusiveGtMaxInclusive=The value specified for 'minExclusive' cannot be greater than the value specified for maxInclusive for the same data type.
Sch_SimpleTypeRestriction='simpleType' should be the first child of restriction.
Sch_InvalidFacetPosition=Facet should go before 'attribute', 'attributeGroup' or 'anyAttribute'.
Sch_AttributeMutuallyExclusive='{0}' and content model are mutually exclusive.
Sch_AnyAttributeLastChild='anyAttribute' must be the last child.
Sch_ComplexTypeContentModel=The content model of a complex type must consist of 'annotation' (if present) followed by zero or one of 'simpleContent' or 'complexContent' or 'group' or 'choice' or 'sequence' or 'all' followed by zero or more attributes or attributeGroups followed by zero or one anyAttribute.
Sch_ComplexContentContentModel=Complex content restriction or extension should consist of zero or one of 'group' or 'choice' or 'sequence' or 'all' followed by zero or more attributes or attributeGroups followed by zero or one anyAttribute.
Sch_NotNormalizedString='xsd:normalizedString' is the set of strings that do not contain the carriage return (#xD), line feed (#xA), nor tab (#x9) characters.
Sch_NotTokenString='xsd:token' is the set of strings that do not contain the line-feed (#xA), nor tab (#x9) characters that have no leading or trailing spaces; (#x20) and that have no internal sequences of two or more spaces.
Sch_FractionDigitsNotOnDecimal=FractionDigits should be equal to 0 on types other then decimal.
Sch_ContentInNill=Element '{0}' must have no character or element children.
Sch_NoElementSchemaFound=Could not find schema information for the element '{0}'.
Sch_NoAttributeSchemaFound=Could not find schema information for the attribute '{0}'.
Sch_InvalidNamespace=The Namespace '{0}' is an invalid URI.
Sch_InvalidSchemaLocation=The SchemaLocation '{0}' is an invalid URI.
Sch_ImportTargetNamespace=Namespace attribute must not match the real value of the enclosing  targetNamespace of the <schema>.
Sch_ImportTargetNamespaceNull=The enclosing <schema> must have a targetNamespace, if the Namespace attribute is absent on the import element.
Sch_GroupDoubleRedefine=Double redefine for group.
Sch_GroupRedefineNotFound=No group to redefine.
Sch_AttrGroupDoubleRedefine=Double redefine for attribute group.
Sch_AttrGroupRedefineNotFound=No attribute group to redefine.
Sch_ComplexTypeDoubleRedefine=Double redefine for complex type.
Sch_ComplexTypeRedefineNotFound=No complex type to redefine.
Sch_SimpleToComplexTypeRedefine=Cannot redefine a simple type as complex type.
Sch_SimpleTypeDoubleRedefine=Double redefine for simple type.
Sch_ComplexToSimpleTypeRedefine=Cannot redefine a complex type as simple type.
Sch_SimpleTypeRedefineNotFound=No simple type to redefine.
Sch_MinMaxGroupRedefine=When group is redefined, the real value of both minOccurs and maxOccurs attribute must be 1 (or absent).
Sch_MultipleGroupSelfRef=Multiple self-reference within a group is redefined.
Sch_MultipleAttrGroupSelfRef=Multiple self-reference within an attribute group is redefined.
Sch_InvalidTypeRedefine=If type is being redefined the base type has to be self-referenced.
Sch_InvalidElementRef=If ref is present, then all of <complexType>, <simpleType>, <key>, <keyref>, <unique>, nillable, default, fixed, form, block and type must be absent.
Sch_MinGtMax=minOccurs value cannot be greater than maxOccurs value.
Sch_DupSelector=Selector cannot appear twice in one identity constraint.
Sch_IdConstraintNoSelector=Selector must be present.
Sch_IdConstraintNoFields=At least one field must be present.
Sch_IdConstraintNoRefer=The referring attribute must be present.
Sch_SelectorBeforeFields=Cannot define fields before selector.
Sch_NoSimpleTypeContent=SimpleType content is missing.
Sch_SimpleTypeRestRefBase=Either the base attribute or the simpleType child must be present, but not both.
Sch_SimpleTypeListRefBase=Either the itemType attribute or the simpleType child must be present, but not both.
Sch_SimpleTypeUnionNoBase=Either the memberTypes attribute must be non-empty or there must be at least one simpleType child.
Sch_NoRestOrExt='restriction' or 'extension' child is required.
Sch_NoGroupParticle='sequence', 'choice' or 'all' child is required.
Sch_InvalidAllMin='all' must have 'minOccurs' value of 0 or 1.
Sch_InvalidAllMax='all' must have {max occurs}=1.
Sch_InvalidFacet=The value attribute has to be present in facet.
Sch_AbstractElement=The element '{0}' is or it's type is abstract.
Sch_XsiTypeBlocked=The element '{0}' has xsi:type derivation blocked.
Sch_InvalidXsiNill=If the 'nillable' attribute is false in the schema, then the 'xsi:nil' attribute must not be present in the instance.
Sch_InvalidContent=The element '{0}' has invalid content.
Sch_InvalidContentExpecting=The element '{0}' has invalid content. Expected '{1}'.
Sch_InvalidElementContent=The element '{0}' has invalid child element '{1}'.
Sch_InvalidTextWhiteSpace=The element cannot contain text or white space. Content model is empty.
Sch_InvalidTextInEmpty=The element cannot contain text. Content model is empty.
Sch_InvalidWhitespaceInEmpty=The element cannot contain white space. Content model is empty.
Sch_InvalidElementInEmpty=The element cannot contain child element. Content model is empty.
Sch_InvalidElementInTextOnly=The element cannot contain a child element. Content model is text only.
Sch_InvalidTextInElement=The element '{0}' cannot contain text.
Sch_InvalidTextInElementExpecting=The element '{0}' cannot contain text. Expected '{1}'.
Sch_InvalidElementContentExpecting=The element '{0}' has invalid child element '{1}'. Expected '{2}'.
Sch_IncompleteContent=The element '{0}' has incomplete content.
Sch_IncompleteContentExpecting=The element '{0}' has incomplete content. Expected '{1}'.
Sch_InvalidAttributeRef=If ref is present, then all of simpleType, form, type, and use must be absent.
Sch_OptionalDefaultAttribute=The 'use' attribute must be optional (or absent) if the default attribute is present.
Sch_AttributeCircularRef=Circular attribute reference.
Sch_IdentityConstraintCircularRef=Circular identity constraint reference.
Sch_SubstitutionCircularRef=Circular substitution group affiliation.
Sch_InvalidAnyAttribute=Invalid namespace in anyAttribute.
Sch_DupIdAttribute=Duplicate ID attribute.
Sch_InvalidAllElementMax=The {max occurs} of all the particles in the {particles} of an all group must be 0 or 1.
Sch_InvalidAny=Invalid namespace in any.
Sch_InvalidExamplar=May not be nominated as the {substitution group affiliation} of any other declaration.
Sch_NoExamplar=Reference to undeclared substitution group affiliation.
Sch_InvalidSubstitutionMember='{0}' cannot be a member of substitution group with head element '{1}'.
Sch_RedefineNoSchema=SchemaLocation must successfully resolve if <redefine> contains any child other than <annotation>. 
Sch_ProhibitedAttribute=The '{0}' attribute is not allowed.
Sch_TypeCircularRef=Circular type reference.
Sch_TwoIdAttrUses=Two distinct members of the {attribute uses} must not have {type definition}s which are the same or are derived from the same ID.
Sch_BaseFinalExtension=The base type is the final extension.
Sch_NotSimpleContent=The content type of the base type must be a simple type definition or it must be mixed, and simpleType child must be present.
Sch_NotComplexContent=The content type of the base type must not be a simple type definition.
Sch_BaseFinalRestriction=The base type is final restriction.
Sch_BaseFinalList=The base type is the final list.
Sch_BaseFinalUnion=The base type is the final union.
Sch_UndefBaseRestriction=Undefined complexType '{0}' is used as a base for complex type restriction".
Sch_UndefBaseExtension=Undefined complexType '{0}' is used as a base for complex type extension".
Sch_DifContentType=The derived type and the base type must have the same content type.
Sch_InvalidContentRestriction=Invalid content type derivation by restriction.
Sch_DupAttributeUse=The attribute '{0}' already exists.
Sch_InvalidParticleRestriction=Invalid particle derivation by restriction.
Sch_UndefGroupRef=Reference to undeclared model group '{0}'.
Sch_GroupCircularRef=Circular group reference.
Sch_AllRefNotRoot=The group ref to 'all' is not the root particle, or it is being used as an extension.
Sch_AllRefMinMax=The group ref to 'all' must have {min occurs}={max occurs}=1.
Sch_NotAllAlone='all' is not the only particle in a group or being used as an extension.
Sch_AttributeGroupCircularRef=Circular attribute group reference.
Sch_UndefAttributeGroupRef=Reference to undeclared attribute group '{0}'.
Sch_InvalidAttributeExtension=Invalid attribute extension.
Sch_InvalidAnyAttributeRestriction=The base any attribute must be a superset of the derived anyAttribute.
Sch_AttributeRestrictionProhibited=Invalid attribute restriction - prohibited in base type.
Sch_AttributeRestrictionInvalid=Invalid attribute restriction.
Sch_AttributeRestrictionInvalidFromWildcard=The {base type definition} must have an {attribute wildcard} and the {target namespace} of the R's {attribute declaration} must be valid with respect to that wildcard.
Sch_UnexpressibleAnyAttribute=Not expressible anyAttribute.
Sch_RefInvalidAttribute=Reference to invalid attribute '{0}'.
Sch_ElementCircularRef=Circular element reference.
Sch_RefInvalidElement=Reference to invalid element '{0}'.
Sch_ElementCannotHaveValue=Element's type does not allow fixed or default value constraint.
Sch_ElementTypeCollision=Elements with the same name and in the same scope must have the same type.
Sch_InvalidIncludeLocation=Cannot resolve schemaLocation attribute.
Sch_CannotLoadSchema=Cannot load schema for the namespace '{0}' - {1}.
Sch_LengthGtBaseLength=It is an error if length is among the members of {facets} of {base type definition} and {value} is greater than the {value} of the parent length.
Sch_MinLengthGtBaseMinLength=It is an error if minLength is among the members of {facets} of {base type definition} and {value} is less than the {value} of the parent minLength.
Sch_MaxLengthGtBaseMaxLength=It is an error if maxLength is among the members of {facets} of {base type definition} and {value} is greater than the {value} of the parent maxLength.
Sch_MaxInclusiveMismatch=It is an error if maxInclusive is among the members of {facets} of {base type definition} and {value} is greater than or equal to the {value} of the parent maxInclusive.
Sch_MaxExclusiveMismatch=It is an error if maxExclusive is among the members of {facets} of {base type definition} and {value} is greater than the {value} of the parent maxExclusive.
Sch_MinInclusiveMismatch=It is an error if minInclusive is among the members of {facets} of {base type definition} and {value} is less than or equal to the {value} of the parent minInclusive.
Sch_MinExclusiveMismatch=It is an error if minExclusive is among the members of {facets} of {base type definition} and {value} is less than or equal to the {value} of the parent minExclusive.
Sch_MinIncExlMismatch=It is an error if minExclusive is among the members of {facets} of {base type definition} and {value} is less than or equal to the {value} of the parent minExclusive.
Sch_MinExlIncMismatch=It is an error if minInclusive is among the members of {facets} of {base type definition} and {value} is less than {value} - 1 of the parent minInclusive.
Sch_MaxIncExlMismatch=It is an error if maxExclusive is among the members of {facets} of {base type definition} and {value} is greater than or equal to the {value} of the parent maxExclusive. 
Sch_MaxExlIncMismatch=It is an error if maxInclusive is among the members of {facets} of {base type definition} and {value} is greater than the {value} of the parent maxInclusive. 
Sch_TotalDigitsMismatch=It is an error if totalDigits is among the members of {facets} of {base type definition} and {value} is greater than the {value} of the parent totalDigits. 
Sch_FacetBaseFixed=Base type has {fixed} equal to true.
Sch_WhiteSpaceRestriction1=It is an error if whiteSpace is among the members of {facets} of {base type definition} and {value} is replace or preserve and the {value} of the parent whiteSpace is collapse.
Sch_WhiteSpaceRestriction2=It is an error if whiteSpace is among the members of {facets} of {base type definition} and {value} is preserve and the {value} of the parent whiteSpace is replace.
Sch_UnSpecifiedDefaultAttributeInExternalStandalone=Markup for unspecified default attribute '{0}' is external and standalone='yes'.
Sch_StandAloneNormalization=StandAlone is 'yes' and the value of the attribute '{0}' contains a definition in external document which changes on normalization.
Sch_XsiNilAndFixed=There must be no fixed value when attribute is xsi:nil and has a value of true.
Sch_XSCHEMA=x-schema can load only XDR schemas.
Sch_MixSchemaTypes=Mixing different schema types.
Sch_InvalidPublicAttribute=Public attribute '{0}' is invalid URI.
Sch_InvalidSystemAttribute=System attribute '{0}' is invalid URI.
Sch_TypeAfterConstraints=simpleType or complexType cannot follow unique, key or keyref.
Sch_XsiNilAndType=There must be no type value when attribute is xsi:nil and has a value of true.
Sch_DupSimpleTypeChild=simpleType should have only one child union, list, or restriction.
Sch_InvalidIdAttribute=Invalid 'id' attribute value: {0}.
Sch_InvalidNameAttribute=Invalid 'name' attribute value: {0}.
Sch_InvalidAttribute=Invalid '{0}' attribute: {1}.
Sch_EmptyChoice=Empty choice is unsatisfiable if minOccurs not equal to 0.
Sch_DerivedNotFromBase=The data type of the simple content is not a valid restriction of the base complex type.
Sch_NeedSimpleTypeChild=Simple content restriction must have a simple type child if content type of the base type is not a simple type definition,
Sch_InvalidCollection=The schema items collection cannot contain an object of type 'XmlSchemaInclude', 'XmlSchemaImport', or 'XmlSchemaRedefine'.
Sch_DubSchema=Schema for targetNamespace '{0}' already present in collection and being used for validation.
Sch_UnrefNS=Namespace '{0}' is not available to be referenced in this schema. 
Sch_InvalidSimpleTypeRestriction=Restriction of anySimpleType is not allowed.

;XPath Parser errors
Xp_UnclosedString=This is an unclosed string.
Xp_TokenExpected=A token was expected.
Xp_NodeTestExpected=A NodeTest was expected at {0}.
Xp_ExprExpected='{0}' is an invalid expression.
Xp_NumberExpected=A number was expected.
Xp_QueryExpected=A query was expected.
Xp_InvalidArgument='{0}' function in '{1}' has an invalid argument. Possibly ')' is missing.
Xp_InvalidArgumentType=The argument to function '{0}' in '{1}' cannot be converted to nodeset.
Xp_InvalidNumArgs=Function '{0}' in '{1}' has invalid number of arguments.
Xp_InvalidName='{0}' has an invalid qualified name.
Xp_InvalidToken='{0}' has an invalid token.
Xp_FunctionExpected=A function was expected.
Xp_NodeSetExpected=The expression passed to this method should result in a NodeSet.
Xp_NotSupported=The XPath query '{0}' is not supported.
Xp_InvalidPattern={0} is an invalid XSLT pattern.
Xp_InvalidPatternString={0} is an invalid XSLT pattern.
Xp_InvalidKeyPattern={0} is an invalid key pattern. It either has a variable reference or key function.
Xp_BadQueryObject=This is an invalid object. Only objects returned from Compile() can be passed as input.
Xp_UndefinedXsltContext=XsltContext is needed for this query because of an unknown function.
Xp_BadQueryString=The XPath expression passed into Compile() is null or empty.
Xp_NoContext=Namespace Manager or XsltContext needed. This query has a  prefix, variable, or user-defined function.

;;; Xslt errors
Xslt_CompileError={0}({1},{2}) :\n
Xslt_WrongStylesheetElement=Stylesheet should start from 'xsl:stylesheet' or 'xsl:transform' element or from literal result element with 'xsl:version' attribute.
Xslt_UnsuppFunction='{0}()' is an unsupported XSLT function.
Xslt_NotFirstImport='xsl:import' should be the first instruction of the stylesheet.
Xslt_UnexpectedKeyword='{0}' cannot be a child of '{1}' element.
Xslt_NullNsAtTopLevel=Top level elements should have non-null namespace, {0}.
Xslt_InvalidContents=The contents of '{0}' are invalid.
Xslt_InvalidAttribute='{0}' is an invalid attribute for '{1}' element.
Xslt_MissingAttribute=Missing mandatory attribute '{0}'.
Xslt_InvalidAttrValue='{1}' is an invalid value for '{0}' attribute.
Xslt_EmptyTagRequired=The tag '{0}' must be empty.
Xslt_CircularInclude=There is a circular import or include of the file, '{0}'.
Xslt_CantResolve=Cannot resolve the referenced document '{0}'.
Xslt_SingleRightAvt=There should be a single right curly brace outside AVT expression '{0}'.
Xslt_OpenBracesAvt=The braces are not closed in AVT expression '{0}'.
Xslt_OpenLiteralAvt=The literal in AVT expression is not correctly closed '{0}'.
Xslt_NestedAvt=AVT cannot be nested in AVT '{0}'.
Xslt_EmptyAvtExpr=XPath Expression in AVT cannot be empty: '{0}'.
Xslt_InvalidXPath='{0}' is an invalid XPath expression.
Xslt_InvalidQName='{0}' is an invalid QName.
Xslt_VariableCntSel=The '{0}' variable has both a select attribute of '{1}' and non-empty contents.
Xslt_NoStylesheetLoaded=No stylesheet was loaded.
Xslt_DupTemplateName='{0}' is a duplicate template name.
Xslt_TemplateNoAttrib=An xsl:template requires at least a match or name attribute.
Xslt_InvalidVariable=The variable or param '{0}' is either not defined or it is out of scope.
Xslt_DupVarName=Variable or param '{0}' was duplicated within the same scope.
Xslt_WrongNumberArgs=XSLT function '{0}' has the wrong number of arguments.
Xslt_UnknownXsltFunction='{0}()' is an unknown XSLT function.
Xslt_NoNodeSetConversion=Cannot convert the operand to NodeSet.
Xslt_NoNavigatorConversion=Cannot convert the operand to 'Result tree fragment'.
Xslt_NoAttributeSet=A reference to attribute set '{0}' cannot be resolved.  An xsl:attribute-set of this name must be declared at the top level of the stylesheet.
Xslt_CircularAttributeSet=There was a circular reference in the '{0}' xsl:attribute-set declaration.
Xslt_InvalidCallTemplate=The named template '{0}' does not exist.
Xslt_WrongNamespace=The wrong namespace was used for XSL. Use 'http://www.w3.org/1999/XSL/Transform'.
Xslt_InvalidPrefix=Prefix '{0}' is not defined.
Xslt_FunctionFailed=Function '{0}()' has failed.
Xslt_InvalidFormat=Format cannot be empty.
Xslt_InvalidFormat1=Format '{0}' cannot have digit symbol after zerodigit symbol before a decimal point.
Xslt_InvalidFormat2=Format '{0}' cannot have zerodigit symbol after digit symbol after decimal point
Xslt_InvalidFormat3=Format '{0}' has two pattern separators.
Xslt_InvalidFormat4=Format '{0}' cannot end with a pattern separator.
Xslt_InvalidFormat5=Format '{0}' cannot have two decimal separators.
Xslt_InvalidFormat6=Format '{0}' has both  '*' and '_' which is invalid. 
Xslt_InvalidFormat7=Format '{0}' has '{1}' which is invalid.
Xslt_InvalidFormat8=Format string should have at least one digit or zerodigit.
Xslt_ScriptMixLang=Multiple scripting languages for the same namespace is not supported.
Xslt_ScriptCompileErrors=Script compile errors:\n{0}
Xslt_ScriptInvalidPrefix=Cannot find the script or external object that implements prefix '{0}'.
Xslt_ScriptDub=Namespace '{0}' has duplicate implementation.
Xslt_ScriptEmpty=msxsl:script cannot be empty.
Xslt_ScriptInvalidLang=The scripting language '{0}' is not supported.
Xslt_DupDecimalFormat=Decimal format '{0}' has duplicate declaration.
Xslt_NoDecimalFormat=Decimal format '{0}' is not declared in the stylesheet but is referenced.
Xslt_CircularReference=There is a circular reference in definition of variable '{0}'.
Xslt_InvalidExtensionNamespace=Extension namespace cannot be 'null' or an XSLT namespace URI.
Xslt_InvalidExtensionPermitions=Extension object should not have wider permissions than the caller of the AddExtensionObject(). If wider permissions are needed, wrap the extension object. 
Xslt_InvalidParamNamespace=Parameter cannot belong to XSLT namespace.
Xslt_InvalidModeAttribute=xsl:template cannot have 'mode' attribute without a 'match' attribute.
Xslt_MultipleRoots=There are multiple root elements in the output XML.
Xslt_ApplyImports=The xsl:apply-imports instruction cannot be included within the content of an xsl:for-each instruction or within xsl:template instruction without match attribute.
Xslt_DuplicateParametr=Duplicate parameter: '{0}'.
Xslt_ReservedNS=Elements and attributes cannot belong to reserved namespace: '{0}'.
Xslt_NoWhen=xsl:choose must have at least one xsl:when child.
Xslt_Terminate=Transform terminated: '{0}'.

;;; Xml DOM errors
Xdom_DualDocumentTypeNode=This document already has a DocumentType node.
Xdom_DualDocumentElementNode=This document already has a DocumentElement node.
Xdom_DualDeclarationNode=This document already has an XmlDeclaration node.
Xdom_Import=Cannot import nodes of type '{0}'.
Xdom_Import_NullNode=Cannot import a null node.
Xdom_NoRootEle=The document does not have a root element.
Xdom_Attr_Name=The attribute local name cannot be empty.
Xdom_AttrCol_Object=An Attributes collection can only contain Attribute objects.
Xdom_AttrCol_Insert=The reference node must be a child of the current node.
Xdom_NamedNode_Context=The named node is from a different document context.
Xdom_Version=Wrong XML version information: only XML version 1.0 is supported.
Xdom_standalone=Wrong value for the XML declaration standalone attribute of '{0}'.
Xdom_Ele_Prefix=The prefix of an element name cannot start with 'xml'.
Xdom_Ent_Innertext=The InnerText of Entity node is read-only and cannot be set.
Xdom_EntRef_SetVal=EntityReference nodes have no support for setting value.
Xdom_WS_Char=The string for white space contains an invalid character.
Xdom_Node_SetVal=Cannot set a value on node type: {0}.
Xdom_Empty_LocalName=The local name for elements or attributes cannot be null or an empty string.
Xdom_Set_InnerXml=Cannot set the InnerXml for the current node because it is either read-only or cannot have children.
Xdom_Attr_InUse=The Attribute node cannot be inserted because it is already an attribute of another element.
Xdom_Enum_ElementList=The element list has changed. The enumeration operation failed to continue.
Xdom_Invalid_NT_String=The string doesn't represent any nodetype: {0}.
Xdom_InvalidCharacter_EntityReference=Cannot create an EntityReference node with a name starting with '#'.
Xdom_IndexOutOfRange=The index being passed in is out of range.

;;; DocumentXPathNavigator errors
XdomXpNav_NullParam=The parameter (other) being passed in is null.
;;; XmlLoader errors
Xdom_Load_NoDocument=The document to be loaded could not be found.
Xdom_Load_NoReader=There is no reader from which to load the document.
Xdom_Load_NodeType=XmlLoader.Load(): Unexpected NodeType: {0}.
;;; XmlNode operations
Xdom_Node_Null_Doc=Cannot create a node without an owner document.
Xdom_Node_Insert_Child=Cannot insert a node or any ancestor of that node as a child of itself.
Xdom_Node_Insert_Contain=The current node cannot contain other nodes.
Xdom_Node_Insert_Path=The reference node is not a child of this node.
Xdom_Node_Insert_Context=The node to be inserted is from a different document context.
Xdom_Node_Insert_Location=Cannot insert the node in the specified location.
Xdom_Node_Insert_TypeConflict=The specified node cannot be inserted as the valid child of this node, because the specified node is the wrong type.
Xdom_Node_Remove_Contain=The current node cannot contain other nodes, so the node to be removed is not its child.
Xdom_Node_Remove_Child=The node to be removed is not a child of this node.
Xdom_Node_Modify_ReadOnly=This node is read-only. It cannot be modified.
Xdom_TextNode_SplitText=The Text node is not connected in the DOM live tree. No SplitText operation could be fulfilled.
Xdom_Attr_Reserved_XmlNS=The namespace declaration attribute has an incorrect namespaceURI: {0}.
Xdom_Node_Cloning=Entity and Notation nodes cannot be cloned.

;;; XmlNodeReader errors
Xnr_ResolveEntity=The node is not an expandable EntityReference node.


; Exceptions messages
;

XmlMissingMethod={0} was not found in {1}.
XmlMissingType=The type {0} is missing in the generated assembly.
XmlUnsupportedType={0} is an unsupported type.
XmlUnsupportedTypeKind=The type {0} may not be serialized.
XmlUnsupportedSoapTypeKind=The type {0} may not be serialized with SOAP-encoded messages. Set the Use for your message to Literal.
XmlUnsupportedIDictionary=The type {0} is not supported because it implements IDictionary.
XmlDuplicateTypeName=A type with the name {0} has already been added in namespace {1}.
XmlSerializableNameMissing1=Schema Id is missing. The schema returned from {0}.GetSchema() must have an Id.
XmlConstructorInaccessible={0} cannot be serialized because it does not have a default public constructor.
XmlTypeInaccessible={0} is inaccessible due to its protection level. Only public types can be processed.
XmlNoDefaultAccessors=You must implement a default accessor on {0} because it inherits from ICollection.
XmlNoAddMethod=You must implement the Add({1}) method on {0} because it inherits from {2}.
XmlAttributeSetAgain={0}.{1} already has attributes.
XmlIllegalWildcard=Cannot use wildcards at the top level of a schema.
XmlIllegalArrayElement=An element declared at the top level of a schema cannot have maxOccurs > 1. Provide a wrapper element for '{0}' by using XmlArray or XmlArrayItem instead of XmlElementAttribute, or by using the Wrapped parameter style.
XmlIllegalForm=There was an error exporting '{0}': elements declared at the top level of a schema cannot be unqualified.
XmlBareTextMember=There was an error exporting {0}: bare members cannot contain text content.
XmlBareAttributeMember=There was an error exporting {0}: bare members cannot be attributes.
XmlReflectionError=There was an error reflecting '{0}'.
XmlTypeReflectionError=There was an error reflecting type '{0}'.
XmlPropertyReflectionError=There was an error reflecting property '{0}'.
XmlFieldReflectionError=There was an error reflecting field '{0}'.
XmlIncludeSerializableError=Type {0} is derived from {1} and therefore cannot be used with attribute XmlInclude.
XmlInvalidDataTypeUsage='{0}' is an invalid value for the {1} property. The property may only be specified for primitive types.
XmlInvalidXsdDataType=Value '{0}' cannot be used for the {1} property. The datatype '{2}' is missing.
XmlDataTypeMismatch='{0}' is an invalid value for the {1} property. {0} cannot be converted to {2}.
XmlIllegalTypeContext={0} cannot be used as: 'xml {1}'.
XmlUdeclaredXsdType=The type, {0}, is undeclared.
XmlAnyElementNamespace=The element {0} has been attributed with an XmlAnyElementAttribute and a namespace {1}, but no name. When a namespace is supplied, a name is also required. Supply a name or remove the namespace.
XmlInvalidConstantAttribute=Only XmlEnum may be used on enumerated constants.
XmlIllegalDefault=The default value for XmlAttribute or XmlElement may only be specified for primitive types.
XmlIllegalAttributesArrayAttribute=XmlAttribute and XmlAnyAttribute cannot be used in conjunction with XmlElement, XmlText, XmlAnyElement, XmlArray, or XmlArrayItem.
XmlIllegalElementsArrayAttribute=XmlElement, XmlText, and XmlAnyElement cannot be used in conjunction with XmlAttribute, XmlAnyAttribute, XmlArray, or XmlArrayItem.
XmlIllegalArrayArrayAttribute=XmlArray and XmlArrayItem cannot be used in conjunction with XmlAttribute, XmlAnyAttribute, XmlElement, XmlText, or XmlAnyElement.
XmlIllegalAttribute=For non-array types, you may use the following attributes: XmlAttribute, XmlText, XmlElement, or XmlAnyElement.
XmlIllegalType=The type for {0} may not be specified for primitive types.
XmlIllegalAttrOrText=Cannot serialize member '{0}'. XmlAttribute/XmlText cannot be used to encode complex types.
XmlIllegalAttributeFlagsArray=XmlAttribute cannot be used to encode array of {1}, because it is marked with FlagsAttribute.
XmlIllegalAnyElement=XmlAnyElement can only be used with classes of type XmlNode or a type deriving from XmlNode.
XmlInvalidIsNullable=IsNullable may not be 'true' for value type {0}.
XmlInvalidFormUnqualified=The Form property may not be 'Unqualified' when an explicit Namespace property is present.
XmlDuplicateNamespace=The namespace, {0}, is a duplicate.
XmlElementHasNoName=This element has no name.
XmlAttributeHasNoName=This attribute has no name.
XmlElementImportedTwice=The element, {0}, from namespace, {1}, was imported twice for different reasons: ({2}, {3}).
XmlHiddenMember=Member {0}.{1} of type {2} hides base class member {3}.{4} of type {5}. Use XmlElementAttribute or XmlAttributeAttribute to specify a new name.
XmlInvalidXmlOverride=Member '{0}.{1}' hides inherited member '{2}.{3}', but has different custom attributes.
XmlMembersDeriveError=These members may not be derived.
XmlTypeUsedTwice=The type '{0}' from namespace '{1}' was used in two different ways.
XmlMissingGroup=Group {0} is missing.
XmlMissingAttributeGroup=The attribute group {0} is missing.
XmlMissingDataType=The datatype '{0}' is missing.
XmlInvalidEncoding=Referenced type '{0}' is only valid for encoded SOAP.
XmlMissingElement=The element '{0}' is missing.
XmlMissingAttribute=The attribute {0} is missing.
XmlMissingMethodEnum=The method for enum {0} is missing.
XmlNoAttributeHere=Cannot write a node of type XmlAttribute as an element value. Use XmlAnyAttributeAttribute with an array of XmlNode or XmlAttribute to write the node as an attribute.
XmlNeedAttributeHere=The node must be either type XmlAttribute or a derived type.
XmlElementNameMismatch=This element was named '{0}' from namespace '{1}' but should have been named '{2}' from namespace '{3}'.
XmlUnsupportedDefaultType=The default value type, {0}, is unsupported.
XmlUnsupportedDefaultValue=The formatter {0} cannot be used for default values.
XmlInvalidDefaultValue=Value '{0}' cannot be converted to {1}.
XmlInvalidDefaultEnumValue=Enum {0} cannot be converted to {1}.
XmlUnknownNode={0} was not expected.
XmlUnknownConstant='{0}' is not a valid value for {1}.
XmlSerializeError=There is an error in the XML document.
XmlSerializeErrorDetails=There is an error in XML document ({0}, {1}).
XmlCompilerError=Unable to generate a temporary class (result={0}).
XmlCompilerDynModule=Unable to generate a serializer for type {0} from assembly {1} because the assembly may be dynamic. Save the assembly and load it from disk to use it with XmlSerialization.
XmlSchemaDuplicateNamespace=A schema with the namespace '{0}' has already been added.
XmlInvalidArrayDimentions=SOAP-ENC:arrayType with multidimensional array found at {0}. Only single-dimensional arrays are supported. Consider using an array of arrays instead.
XmlInvalidArrayTypeName=The SOAP-ENC:arrayType references type is named '{0}'; a type named '{1}' was expected at {2}.
XmlInvalidArrayTypeNamespace=The SOAP-ENC:arrayType references type is from namespace '{0}'; the namespace '{1}' was expected at {2}.
XmlMissingArrayType=SOAP-ENC:arrayType was missing at {0}.
XmlEmptyArrayType=SOAP-ENC:arrayType was empty at {0}.
XmlInvalidArraySyntax=SOAP-ENC:arrayType must end with a ']' character.
XmlInvalidArrayTypeSyntax=Invalid wsd:arrayType syntax: '{0}'.
XmlMismatchedArrayBrackets=SOAP-ENC:arrayType has mismatched brackets.
XmlInvalidArrayLength=SOAP-ENC:arrayType could not handle '{1}' as the length of the array.
XmlMissingHref=The referenced element with ID '{0}' is located outside the current document and cannot be retrieved.
XmlInvalidHref=The referenced element with ID '{0}' was not found in the document.
XmlUnknownType=The specified type was not recognized: name='{0}', namespace='{1}', at {2}.
XmlAbstractType=The specified type is abstract: name='{0}', namespace='{1}', at {2}.
XmlMappingsScopeMismatch=Exported mappings must come from the same importer.
XmlMethodTypeNameConflict=The XML element named '{0}' from namespace '{1}' references a method and a type. Change the method's message name using WebMethodAttribute or change the type's root element using the XmlRootAttribute.
XmlCannotReconcileAccessor=The XML element named '{0}' from namespace '{1}' references distinct types {2} and {3}. Use XML attributes to specify another XML name or namespace for the element or types.
XmlInvalidTypeAttributes=XmlRoot and XmlType attributes may not be specified for the type {0}.
XmlInvalidAttributeUse=XML attributes may not be specified for the type {0}.
XmlTypesDuplicate=Types {0} and {1} both use the XML type name, {2}, from namespace {3}. Use XML attributes to specify a unique XML name and/or namespace for the type.
XmlInvalidSoapArray=An array of type {0} may not be used with XmlArrayType.Soap.
XmlCannotIncludeInSchema=The type {0} may not be exported to a schema because the IncludeInSchema property of the XmlType attribute is 'false'.
XmlSoapCannotIncludeInSchema=The type {0} may not be exported to a schema because the IncludeInSchema property of the SoapType attribute is 'false'.
XmlInvalidSerializable=The type {0} may not be used in this context. To use {0} as a parameter, return type, or member of a class or struct, the parameter, return type, or member must be declared as type {0} (it can't be object). Objects of type {0} may not be used in un-typed collections, such as ArrayLists.
XmlInvalidUseOfType=The type {0} may not be used in this context.
XmlUnxpectedType=The type {0} was not expected. Use the XmlInclude or SoapInclude attribute to specify types that are not known statically.
XmlUnknownAnyElement=The XML element named '{0}' from namespace '{1}' was not expected. The XML element name and namespace must match those provided via XmlAnyElementAttribute(s).
XmlMultipleAttributeOverrides={0}. {1} already has attributes.
XmlInvalidEnumAttribute=Only SoapEnum may be used on enum constants.
XmlInvalidReturnPosition=The return value must be the first member.
XmlInvalidElementAttribute=Only SoapElementAttribute or SoapAttributeAttribute may be used on members.
XmlInvalidVoid=The type Void is not valid in this context.
XmlInvalidContent=Invalid content {0}.
XmlInvalidSchemaType=Types must be declared at the top level in the schema.
XmlInvalidSubstitutionGroupUse=Substitution group may not be used.
XmlElementMissingType=Element '{0}' does not specify a type.
XmlInvalidAnyUse=Any may not be specified.
XmlSoapInvalidAttributeUse=Use elements (not attributes) for fields/parameters.
XmlSoapInvalidChoice=Use all or sequence (not choice) for fields/parameters.
XmlSoapUnsupportedGroupRef=The ref syntax for groups is not supported.
XmlSoapUnsupportedGroupRepeat=Group may not repeat.
XmlSoapUnsupportedGroupNested=Nested groups may not be specified.
XmlSoapUnsupportedGroupAny=Any may not be specified.
XmlInvalidEnumContent=Invalid content '{0}' for enumerated data type {1}.
XmlInvalidAttributeType={0} may not be used on parameters or return values when they are not wrapped.
XmlInvalidBaseType=Type {0} cannot derive from {1} because it already has base type {2}.
XmlPrimitiveBaseType=Type '{0}' from namespace '{1}' is not a complex type and cannot be used as a {2}.
XmlInvalidIdentifier=Identifier '{0}' is not CLS-compliant.
XmlGenError=There was an error generating the XML document.
XmlInvalidXmlns=Invalid namespace attribute: {0}="".
XmlCircularReference=A circular reference was detected while serializing an object of type {0}.
XmlMissingSchema=Missing schema targetNamespace="{0}".
XmlNoSerializableMembers=Cannot serialize object of type '{0}'. The object does not have serializable members.
XmlIllegalOverride=Error: Type '{0}' could not be imported because it redefines inherited member '{1}' with a different type. '{1}' is declared as type '{3}' on '{0}', but as type '{2}' on base class '{4}'.
XmlReadOnlyCollection=Could not serialize {0}. Default constructors are required for collections and enumerators.
XmlRpcNestedValueType=Cannot serialize {0}. Nested structs are not supported with encoded SOAP.
XmlRpcRefsInValueType=Cannot serialize {0}. References in structs are not supported with encoded SOAP.
XmlRpcArrayOfValueTypes=Cannot serialize {0}. Arrays of structs are not supported with encoded SOAP.
XmlDuplicateElementName=The XML element named '{0}' from namespace '{1}' is already present in the current scope. Use XML attributes to specify another XML name or namespace for the element.
XmlDuplicateAttributeName=The XML attribute named '{0}' from namespace '{1}' is already present in the current scope. Use XML attributes to specify another XML name or namespace for the attribute.
XmlBadBaseType=Element '{0}' from namespace '{1}' is not a complex type and cannot be used as a {2}.
XmlUndefinedAlias=Namespace prefix '{0}' is not defined.
XmlChoiceIdentifierType=Type of choice identifier '{0}' is inconsistent with type of '{1}'. Please use {2}.
XmlChoiceIdentifierArrayType=Type of choice identifier '{0}' is inconsistent with type of '{1}'. Please use array of {2}.
XmlChoiceIdentifierTypeEnum=Choice identifier '{0}' must be an enum.
XmlChoiceIdentiferMemberMissing=Missing '{0}' member needed for serialization of choice '{1}'.
XmlChoiceIdentiferAmbiguous=Ambiguous choice identifier. There are several members named '{0}'.
XmlChoiceIdentiferMissing=You need to add {0} to the '{1}' member.
XmlChoiceMissingValue=Type {0} is missing enumeration value '{1}' for element '{2}' from namespace '{3}'.
XmlChoiceMissingAnyValue=Type {0} is missing enumeration value '##any:' corresponding to XmlAnyElementAttribute.
XmlChoiceMismatchChoiceException=Value of {0} mismatches the type of {1}; you need to set it to {2}.
XmlArrayItemAmbiguousTypes=Ambiguous types specified for member '{0}'.  Items '{1}' and '{2}' have the same type.  Please consider using {3} with {4} instead.
XmlUnsupportedInterface=Cannot serialize interface {0}.
XmlUnsupportedInterfaceDetails=Cannot serialize member {0} of type {1} because it is an interface.
XmlUnsupportedRank=Cannot serialize object of type {0}. Multidimensional arrays are not supported.
XmlIllegalMultipleText=Cannot serialize object of type '{0}' because it has multiple XmlText attributes. Consider using an array of strings with XmlTextAttribute for serialization of a mixed complex type.
XmlIllegalMultipleTextMembers=XmlText may not be used on multiple parameters or return values.
XmlIllegalArrayTextAttribute=Member '{0}' cannot be encoded using the XmlText attribute. You may use the XmlText attribute to encode primitives, enumerations, arrays of strings, or arrays of XmlNode.
XmlSchemaSyntaxError=Schema with targetNamespace='{0}' has invalid syntax.
XmlIllegalTypedTextAttribute=Cannot serialize object of type '{0}'. Consider changing type of XmlText member '{0}.{1}' from {2} to string or string array.
XmlIllegalSimpleContentExtension=Cannot serialize object of type '{0}'. Base type '{1}' has simpleContent and can only be extended by adding XmlAttribute elements. Please consider changing XmlText member of the base class to string array.
XmlInvalidCast=Cannot assign object of type {0} to an object of type {1}.
XmlInvalidNullCast=Cannot assign null value to an object of type {1}.
XmlMultipleXmlns=Cannot serialize object of type '{0}' because it has multiple XmlNamespaceDeclarations attributes.
XmlMultipleXmlnsMembers=XmlNamespaceDeclarations may not be used on multiple parameters or return values.
XmlXmlnsInvalidType=Cannot use XmlNamespaceDeclarations attribute on member '{0}' of type {1}.  This attribute is only valid on members of type {2}.
XmlSoleXmlnsAttribute=XmlNamespaceDeclarations attribute cannot be used in conjunction with any other custom attributes.
XmlConstructorHasSecurityAttributes=The type '{0}' cannot be serialized because its parameterless constructor is decorated with declarative security permission attributes. Consider using imperative asserts or demands in the constructor.
XmlPropertyHasSecurityAttributes=The property '{0}' on type '{1}' cannot be serialized because it is decorated with declarative security permission attributes. Consider using imperative asserts or demands in the property accessors.
XmlMethodHasSecurityAttributes=The type '{0}' cannot be serialized because the {1}({2}) method is decorated with declarative security permission attributes. Consider using imperative asserts or demands in the method.
XmlDefaultAccessorHasSecurityAttributes=The type '{0}' cannot be serialized because its default accessor is decorated with declarative security permission attributes. Consider using imperative asserts or demands in the accessor.
XmlInvalidChoiceIdentifierValue=Invalid or missing value of the choice identifier '{1}' of type '{0}[]'.
XmlAnyElementDuplicate=The element '{0}' has been attributed with duplicate XmlAnyElementAttribute(Name="{1}", Namespace="{2}").
XmlChoiceIdDuplicate=Enum values in the XmlChoiceIdentifier '{0}' have to be unique.  Value '{1}' already present.
XmlChoiceIdentifierMismatch=Value '{0}' of the choice identifier '{1}' does not match element '{2}' from namespace '{3}'.
XmlUnsupportedRedefine=Cannot import schema for type '{0}' from namespace '{1}'. Redefine not supported.
XmlDuplicateChoiceElement=The XML element named '{0}' from namespace '{1}' is already present in the current scope. Elements with the same name in the same scope must have the same type.
XmlNoPartialTrust=One or more assemblies referenced by the XmlSerializer cannot be called from partially trusted code.
XmlInvalidEncodingNotEncoded1=The encoding style '{0}' is not valid for this call because this XmlSerializer instance does not support encoding. Use the SoapReflectionImporter to initialize an XmlSerializer that supports encoding.
XmlInvalidEncoding3=The encoding style '{0}' is not valid for this call. Valid values are '{1}' for SOAP 1.1 encoding or '{2}' for SOAP 1.2 encoding.

XmlInternalError=Internal error.
XmlInternalErrorDetails=Internal error: {0}.
XmlInternalErrorMethod=Internal error: missing generated method for {0}.

; XmlConvert Errors
;
XmlConvert_BadTimeSpan=The string was not recognized as a valid TimeSpan value.
XmlConvert_BadBoolean=The string was not recognized as a valid Boolean value.
XmlConvert_BadUri=The string was not recognized as a valid Uri.
; END

RefSyntaxNotSupportedForElements0=Ref syntax not supported for elements.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\xsp\inc\aspnetperflocalized.txt ===
; ; 
 
 ; ;   P l e a s e   p u t   t h e   l a n g u a g e   i d   a s   3   d i g i t s ! 
 
 ; ; 
 
 
 
 [ l a n g u a g e s ] 
 
 0 0 1 = A r a b i c 
 
 0 0 5 = C z e c h 
 
 0 0 6 = D a n i s h 
 
 0 0 7 = G e r m a n 
 
 0 0 8 = G r e e k 
 
 0 0 9 = E n g l i s h 
 
 0 0 A = S p a n i s h 
 
 0 0 B = F i n n i s h 
 
 0 0 C = F r e n c h 
 
 0 0 D = H e b r e w 
 
 0 0 E = H u n g a r i a n 
 
 0 1 0 = I t a l i a n 
 
 0 1 1 = J a p a n e s e 
 
 0 1 2 = K o r e a n 
 
 0 1 3 = D u t c h 
 
 0 1 4 = N o r w e g i a n 
 
 0 1 5 = P o l i s h 
 
 0 1 9 = R u s s i a n 
 
 0 1 D = S w e d i s h 
 
 0 1 F = T u r k i s h 
 
 4 0 4 = C h i n e s e 
 
 4 1 6 = P o r t u g u e s e   B r a z i l i a n 
 
 8 0 4 = C h i n e s e 
 
 8 1 6 = P o r t u g u e s e   S t a n d a r d 
 
 
 
 [ t e x t ] 
 
 ; ; 
 
 ; ;     A S P . N E T   -   E n g l i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 9 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 9 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   g l o b a l   p e r f o r m a n c e   c o u n t e r s 
 
 O B J E C T _ 2 _ 0 0 9 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 9 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   a p p l i c a t i o n   p e r f o r m a n c e   c o u n t e r s 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 9 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 9 _ H E L P = N u m b e r   o f   r e q u e s t s   u t i l i z i n g   a n o n y m o u s   a u t h e n t i c a t i o n . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 9 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 9 _ H E L P = N u m b e r   o f   A u t h e n t i c a t i o n   A n o n y m o u s   R e q u e s t s / S e c 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 9 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   e n t r i e s   w i t h i n   t h e   c a c h e   a d d e d   b y   t h e   u s e r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 9 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 9 _ H E L P = N u m b e r   o f   c a c h e   h i t s   f r o m   u s e r   c o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 9 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 9 _ H E L P = N u m b e r   o f   c a c h e   m i s s e s   c a l l e d   f r o m   u s e r   c o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 9 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 9 _ H E L P = R a t i o   o f   h i t s   c a l l e d   f r o m   u s e r   c o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ H E L P = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ H E L P = N u m b e r   o f   a d d i t i o n s   a n d   r e m o v a l s   t o   t h e   A P I   c a c h e   p e r   s e c o n d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 9 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 9 _ H E L P = N u m b e r   o f   t i m e s   t h e   a p p l i c a t i o n   h a s   b e e n   r e s t a r t e d   d u r i n g   t h e   w e b   s e r v e r ' s   l i f e t i m e . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 9 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 9 _ H E L P = N u m b e r   o f   c u r r e n t l y   r u n n i n g   w e b   a p p l i c a t i o n s . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 9 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 9 _ H E L P = N u m b e r   o f   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x ,   o r   . a s p x   s o u r c e   f i l e s   d y n a m i c a l l y   c o m p i l e d . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 9 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 9 _ H E L P = N u m b e r   o f   d e b u g g i n g   r e q u e s t s   p r o c e s s e d . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 9 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 9 _ H E L P = N u m b e r   o f   e r r o r s   t h a t   h a v e   o c c u r r e d   d u r i n g   c o m p i l a t i o n . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 9 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 9 _ H E L P = N u m b e r   o f   e r r o r s   t h a t   h a v e   o c c u r r e d   d u r i n g   t h e   p r o c e s s i n g   o f   a   r e q u e s t . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 9 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 9 _ H E L P = N u m b e r   o f   e r r o r s   t h a t   h a v e   o c c u r r e d   d u r i n g   p a r s i n g   a n d   c o n f i g u r a t i o n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 9 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   e r r o r s   o c c u r r e d . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 9 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 9 _ H E L P = R a t e   o f   e r r o r s   o c c u r r e d . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 9 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 9 _ H E L P = N u m b e r   o f   e r r o r s   n o t   h a n d l e d   b y   u s e r   c o d e ,   b u t   b y   t h e   d e f a u l t   e r r o r   h a n d l e r . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 9 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 9 _ H E L P = R a t e   o f   u n h a n d l e d   e r r o r s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 9 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 9 _ H E L P = C u r r e n t   n u m b e r   o f   e n t r i e s   i n   t h e   o u t p u t   c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 9 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   o u p u t   c a c h e a b l e   r e q u e s t s   s e r v e d   f r o m   t h e   o u t p u t   c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 9 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   o u p u t   c a c h e a b l e   r e q u e s t s   n o t   s e r v e d   f r o m   t h e   o u t p u t   c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 9 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 9 _ H E L P = R a t i o   o f   h i t s   t o   r e q u e s t s   f o r   o u t p u t   c a c h e a b l e   r e q u e s t s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ H E L P = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ H E L P = N u m b e r   o f   a d d i t i o n s   a n d   r e m o v a l s   t o   t h e   o u t p u t   c a c h e   p e r   s e c o n d . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 9 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 0 0 9 _ H E L P = N u m b e r   o f   a c t i v e   p i p e l i n e   i n s t a n c e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 9 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 9 _ H E L P = T h e   t o t a l   s i z e ,   i n   b y t e s ,   o f   a l l   r e q u e s t s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 9 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 9 _ H E L P = T h e   t o t a l   s i z e ,   i n   b y t e s ,   o f   r e s p o n s e s   s e n t   t o   a   c l i e n t .     T h i s   d o e s   n o t   i n c l u d e   s t a n d a r d   H T T P   r e s p o n s e   h e a d e r s . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 9 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   m i l l i s e c o n d s   t h a t   i t   t o o k   t o   e x e c u t e   t h e   m o s t   r e c e n t   r e q u e s t . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 9 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   m i l l i s e c o n d s   t h e   m o s t   r e c e n t   r e q u e s t   w a s   w a i t i n g   i n   t h e   q u e u e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 9 _ N A M E = R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 9 _ H E L P = T h e   c u r r e n t   n u m b e r   o f   r e q u e s t s ,   i n c l u d i n g   t h o s e   t h a t   a r e   q u e u e d ,   c u r r e n t l y   e x e c u t i n g ,   o r   w a i t i n g   t o   b e   w r i t t e n   t o   t h e   c l i e n t .     U n d e r   t h e   A S P . N E T   p r o c e s s   m o d e l ,   w h e n   t h i s   c o u n t e r   e x c e e d s   t h e   r e q u e s t Q u e u e L i m i t   d e f i n e d   i n   t h e   p r o c e s s M o d e l   c o n f i g u r a t i o n   s e c t i o n ,   A S P . N E T   w i l l   b e g i n   r e j e c t i n g   r e q u e s t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 9 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   d i s c o n n e c t e d   d u e   t o   c o m m u n i c a t i o n   e r r o r s   o r   u s e r   t e r m i n a t e d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 9 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   c u r r e n t l y   e x e c u t i n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 9 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   f a i l e d   r e q u e s t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 9 _ N A M E = R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   i n   t h e   a p p l i c a t i o n   r e q u e s t   q u e u e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 9 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 9 _ H E L P = N u m b e r   o f   r e q u e s t s   f a i l e d   d u e   t o   u n a u t h o r i z e d   a c c e s s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 9 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   f o r   r e s o u r c e s   t h a t   w e r e   n o t   f o u n d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 9 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   w a i t i n g   t o   b e   p r o c e s s e d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 9 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   r e j e c t e d   b e c a u s e   t h e   r e q u e s t   q u e u e   w a s   f u l l . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 9 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   t h a t   e x e c u t e d   s u c c e s s f u l l y . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 9 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   t h a t   t i m e d   o u t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 9 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   r e q u e s t s   s i n c e   t h e   a p p l i c a t i o n   w a s   s t a r t e d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 9 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   e x e c u t e d   p e r   s e c o n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 9 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   c o n n e c t i o n s   t o   t h e   S Q L   S e r v e r   u s e d   b y   s e s s i o n   s t a t e . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 9 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   c o n n e c t i o n s   t o   t h e   S t a t e   S e r v e r   u s e d   b y   s e s s i o n   s t a t e . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 9 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   s e s s i o n s   t h a t   h a v e   b e e n   e x p l i c i t l y   a b a n d o n e d . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 9 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 9 _ H E L P = T h e   c u r r e n t   n u m b e r   o f   s e s s i o n s   c u r r e n t l y   a c t i v e . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 9 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   s e s s i o n s   t i m e d   o u t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 9 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   s e s s i o n s   s i n c e   t h e   a p p l i c a t i o n   w a s   s t a r t e d . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 9 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   s e s s i o n s   t h a t   h a v e   b e e n   e x p l i c i t l y   a b a n d o n e d . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 9 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 9 _ H E L P = T h e   c u r r e n t   n u m b e r   o f   s e s s i o n s   c u r r e n t l y   a c t i v e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 9 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   s e s s i o n s   t i m e d   o u t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 9 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   s e s s i o n s   t o t a l . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 9 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   e n t r i e s   w i t h i n   t h e   c a c h e   ( b o t h   i n t e r n a l   a n d   u s e r   a d d e d ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 9 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   h i t s   f r o m   t h e   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 9 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 9 _ H E L P = T o t a l   n u m b e r   o f   c a c h e   m i s s e s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 9 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 9 _ H E L P = R a t i o   o f   h i t s   f r o m   a l l   c a c h e   c a l l s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 9 _ H E L P = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 9 _ H E L P = N u m b e r   o f   a d d i t i o n s   a n d   r e m o v a l s   t o   t h e   t o t a l   c a c h e   p e r   s e c o n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 9 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   t r a n s a c t i o n s   a b o r t e d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 9 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 9 _ H E L P = T h e   n u m b e r   o f   t r a n s a c t i o n s   c o m m i t t e d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 9 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 9 _ H E L P = N u m b e r   o f   t r a n s a c t i o n s   i n   p r o g r e s s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 9 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 9 _ H E L P = T r a n s a c t i o n s   s t a r t e d   p e r   s e c o n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 9 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 9 _ H E L P = T h e   t o t a l   n u m b e r   o f   t r a n s a c t i o n s   s i n c e   t h e   a p p l i c a t i o n   w a s   s t a r t e d . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 9 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 9 _ H E L P = N u m b e r   o f   t i m e s   a   w o r k e r   p r o c e s s   h a s   r e s t a r t e d   o n   t h e   m a c h i n e . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 9 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 9 _ H E L P = N u m b e r   o f   w o r k e r   p r o c e s s e s   r u n n i n g   o n   t h e   m a c h i n e . 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   A r a b i c 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 1 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 1 _ H E L P = 9/'/'*  'D#/'!  'D9EHEJ)  A S P . N E T   'D%5/'1  % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 1 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 1 _ H E L P = 9/'/'*  #/'!  'D*7(JB  A S P . N E T   'D%5/'1  % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 1 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *3*./E  E5'/B)  E,GHD). 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 1 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 1 _ H E L P = 9//  'D7D('*  'DE,GHD)  DDE5'/B)  AJ  'D+'FJ)
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 1 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 1 _ H E L P = %,E'DJ  9//  'D%/.'D'*  'D*J  B'E  'DE3*./E  (%6'A*G'  /'.D  0'C1)  'D*.2JF  'DE$B*  . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 1 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 1 _ H E L P = 9//  '3*1/'/'*  0'C1)  'D*.2JF  'DE$B*  EF  1E2  'DE3*./E. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 1 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 1 _ H E L P = 9//  %.A'B'*  0'C1)  'D*.2JF  'DE$B*  'DE3*/9')  EF  1E2  'DE3*./E. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 1 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 1 _ H E L P = F3()  'D'3*1/'/*  'DE3*/9')  EF  1E2  'DE3*./E. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ H E L P = B'9/)  F3()  '3*1/'/  0'C1)  'D*.2JF  'DE$B*  D@  A P I 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ H E L P = 9//  E1'*  'D%6'A)  H'D%2'D)  AJ  0'C1)  'D*.2JF  'DE$B*  D@  A P I   AJ  'D+'FJ). 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 1 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 1 _ H E L P = 9//  'DE1'*  'D*J  *E  AJG'  %9'/)  *4:JD  'D*7(JB  #+F'!  A*1)  (B'!  EDBE  HJ(. 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 1 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 1 _ H E L P = 9//  *7(JB'*  HJ(  'D*J  *9ED  -'DJK'. 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 1 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 1 _ H E L P = 9//  EDA'*  'DE5/1  . a s a x   #H  . a s c x   #H  . a s h x   #H  . a s m x   #H  . a s p x   'DE*1,E)  -JHJK'. 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 1 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 1 _ H E L P = 9//  7D('*  'D*5-J-  'D*J  *E*  E9'D,*G'. 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 1 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 1 _ H E L P = 9//  'D#.7'!  'D*J  -/+*  #+F'!  'D*1,E). 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 1 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 1 _ H E L P = 9//  'D#.7'!  'D*J  -/+*  #+F'!  E9'D,)  #-/  'D7D('*. 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 1 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 1 _ H E L P = 9//  'D#.7'!  'D*J  -/+*  #+F'!  'D*-DJD  'DD:HJ  H'D*CHJF. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 1 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 1 _ H E L P = %,E'DJ  9//  'D#.7'!  'D*J  -/+*. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 1 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 1 _ H E L P = E9/D  'D#.7'!  'D*J  -/+*. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 1 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 1 _ H E L P = 9//  'D#.7'!  'D*J  DE  J*E  E9'D,*G'  (H'37)  1E2  'DE3*./E  (D  (H'37)  E9'D,  'D.7#  'D'A*1'6J. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 1 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 1 _ H E L P = E9/D  'D#.7'!  'D*J  DE  J*E  E9'D,*G'. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 1 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 1 _ H E L P = 9//  'D%/.'D'*  'D-'DJ)  AJ  0'C1)  'D*.2JF  'DE$B*  'D.'5)  ('D%.1',. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 1 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 1 _ H E L P = %,E'DJ  9//  7D('*  'D%.1',  'DB'(D)  DD*.2JF  'DE$B*  'DEB/E)  EF  0'C1)  'D*.2JF  'DE$B*  'D.'5)  ('D%.1',. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 1 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 1 _ H E L P = %,E'DJ  9//  7D('*  'D%.1',  'DB'(D)  DD*.2JF  'DE$B*  :J1  'DEB/E)  EF  0'C1)  'D*.2JF  'DE$B*  'D.'5)  ('D%.1',. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 1 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 1 _ H E L P = F3()  'D'3*1/'/*  %DI  'D7D('*  'D.'5)  (7D('*  'D%.1',  'DB'(D)  DD*.2JF  'DE$B*. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ H E L P = B'9/)  F3()  '3*1/'/  0'C1)  'D*.2JF  'DE$B*  'D.'5)  ('D%.1',
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ H E L P = 9//  E1'*  'D%6'A)  H'D%2'D)  AJ  0'C1)  'D*.2JF  'DE$B*  'D.'5)  ('D%.1',  AJ  'D+'FJ). 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 1 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 0 0 1 _ H E L P = 9//  E+JD'*  *H,JG  'D%.1',  'DF47). 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 1 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 1 _ H E L P = 'D-,E  'D%,E'DJ  DD7D('*  ('D('J*. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 1 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 1 _ H E L P = 'D-,E  'D%,E'DJ  DD'3*,'('*  'D*J  *E  %13'DG'  %DI  'D9EJD  ('D('J*.   D'  J4ED  0DC  1$H3  '3*,'()  H T T P   'DBJ'3J). 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 1 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 1 _ H E L P = 9//  'DEDDJ  +'FJ)  'DE3*:1B)  D*FAJ0  #-/+  'D7D('*. 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 1 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 1 _ H E L P = 9//  'DEDDJ  +'FJ)  'D*J  'F*81G'  #-/+  'D7D('*  AJ  B'&E)  'D'F*8'1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 1 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *E  B79  'D'*5'D  (G'  (3((  #.7'!  'D'*5'D  #H  %FG'&G'  EF  B(D  'DE3*./E. 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 1 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 1 _ H E L P = 9//  'D7D('*  'D,'1J  *FAJ0G'  -'DJK'. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 1 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 1 _ H E L P = %,E'DJ  9//  'D7D('*  'DA'4D). 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 1 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  A4D*  F*J,)  DH5HD  :J1  E51-  (G. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 1 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 1 _ H E L P = 9//  7D('*  'DEH'1/  'D*J  DE  J*E  'D9+H1  9DJG'. 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 1 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *F*81  'DE9'D,). 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 1 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *E  1A6G'  (3((  'E*D'!  B'&E)  'F*8'1  'D7D('*. 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 1 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *E  *FAJ0G'  (F,'-. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 1 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  'F*G*  EGD*G'. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 1 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 1 _ H E L P = %,E'DJ  9//  'D7D('*  EF0  (/!  *4:JD  'D*7(JB. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 1 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 1 _ H E L P = 9//  'D7D('*  'D*J  *E  *FAJ0G'  AJ  'D+'FJ). 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 1 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 1 _ H E L P = 'D9//  'D%,E'DJ  DD'*5'D'*  (EDBE  S Q L   'DE3*./E)  (H'37)  -'D)  ,D3)  'D9ED
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 1 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 1 _ H E L P =   %,E'DJ  9//  'D'*5'D'*  (EDBE  'D-'D)  'DE3*./E)  (H'37)  -'D)  ,D3)  'D9ED.   
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 1 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 1 _ H E L P = 9//  ,D3'*  'D9ED  'D*J  *E  'D*.DJ  9FG'  (4CD  51J-. 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 1 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 1 _ H E L P = 'D9//  'D-'DJ  D,D3'*  'D9ED  'DF47)  -'DJK'. 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 1 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 1 _ H E L P = 9//  ,D3'*  'D9ED  'D*J  'F*G*  EGD*G'. 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 1 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 1 _ H E L P = %,E'DJ  9//  ,D3'*  'D9ED  EF0  (/!  *4:JD  'D*7(JB. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 1 _ H E L P = 9//  ,D3'*  'D9ED  'D*J  *E  'D*.DJ  9FG'  (4CD  51J-. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 1 _ H E L P = 'D9//  'D-'DJ  D,D3'*  'D9ED  'DF47)  -'DJK'. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 1 _ H E L P = 9//  ,D3'*  'D9ED  'D*J  'F*G*  EGD*G'. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 1 _ H E L P = 9//  %,E'DJ  ,D3'*  'D9ED. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 1 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 1 _ H E L P = %,E'DJ  9//  'D%/.'D'*  /'.D  0'C1)  'D*.2JF  'DE$B*  ( CDL  EF  'D%/.'D'*  'D/'.DJ)  H'D%/.'D'*  'D*J  B'E  'DE3*./E  (%6'A*G') 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 1 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 1 _ H E L P = %,E'DJ  9//  'D'3*1/'/'*  EF  0'C1)  'D*.2JF  'DE$B*. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 1 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 1 _ H E L P = %,E'DJ  9//  %.A'B'*  0'C1)  'D*.2JF  'DE$B*. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 1 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 1 _ H E L P = F3()  'D'3*1/'/'*  EF  '3*/9'!'*  0'C1)  'D*.2JF  'DE$B*. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 1 _ H E L P = B'9/)  %,E'DJ  F3()  '3*1/'/  0'C1)  'D*.2JF  'DE$B*
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 1 _ H E L P = 9//  E1'*  'D%6'A)  H'D%2'D)  D%,E'DJ  0'C1)  'D*.2JF  'DE$B*  AJ  'D+'FJ). 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 1 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 1 _ H E L P = 9//  'DE9'ED'*  'D*J  *E  %-('7G'. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 1 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 1 _ H E L P = 9//  'DE9'ED'*  'DE-,H2). 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 1 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 1 _ H E L P = 9//  'DE9'ED'*  'D*J  BJ/  'D*B/E. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 1 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 1 _ H E L P = 'DE9'ED'*  'D*J  *E  (/$G'  AJ  'D+'FJ). 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 1 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 1 _ H E L P = %,E'DJ  9//  'DE9'ED'*  EF0  (/!  *4:JD  'D*7(JB. 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 1 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 1 _ H E L P = 9//  'DE1'*  'D*J  *E  AJG'  %9'/)  *4:JD  9EDJ)  'D9'ED  9DI  'D,G'2. 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 1 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 1 _ H E L P = 9//  9EDJ'*  'D9'ED  'D*J  BJ/  'D*4:JD  9DI  'D,G'2. 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   C z e c h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 5 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 5 _ H E L P = G l o b  l n    
 t a 
e   v  k o n u   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 5 _ N A M E = A p l i k a c e   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 5 _ H E L P =  t a 
e   v  k o n u   a p l i k a c e   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 5 _ N A M E = A n o n y m n    p o ~a d a v k y 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o  v y u ~ v a j  c  c h   a n o n y m n    o v Ye n  . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 5 _ N A M E = A n o n y m n    p o ~a d a v k y   z a   s e k u n d u 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o  s   a n o n y m n  m   o v Ye n  m   z a   s e k u n d u 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 5 _ N A M E = P o l o ~k y   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p o l o ~e k   v   m e z i p a m t i   p Yi d a n  c h   u ~i v a t e l e m . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 5 _ N A M E =  s p an    p Y s t u p y   d o   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 5 _ H E L P = P o 
e t    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   z   k  d u   u ~i v a t e l e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 5 _ N A M E = N e  s p an    p Y s t u p y   d o   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 5 _ H E L P = P o 
e t   n e  s p an  c h   p Y s t u p o  d o   m e z i p a m t i   z   k  d u   u ~i v a t e l e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 5 _ N A M E = P o m r    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 5 _ H E L P = P o m r    s p an  c h   p Y s t u p o  z   k  d u   u ~i v a t e l e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ N A M E = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ H E L P = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   A P I 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ N A M E = F r e k v e n c e   p Y s t u p o  d o   m e z i p a m t i   A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ H E L P = P o 
e t   p Yi d  n    a   o d e b r  n    p o l o ~e k   v   m e z i p a m t i   A P I   z a   s e k u n d u . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 5 _ N A M E = R e s t a r t o v  n    a p l i k a c e 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 5 _ H E L P = P o 
e t   r e s t a r t o v  n    a p l i k a c e   v   p r ob h u   ~i v o t n o s t i   w e b o v  h o   s e r v e r u . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 5 _ N A M E = S p u at n    a p l i k a c e 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 5 _ H E L P = P o 
e t   s p u at n  c h   w e b o v  c h   a p l i k a c  . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 5 _ N A M E = K o m p i l a c e   c e l k e m 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 5 _ H E L P = P o 
e t   d y n a m i c k y   k o m p i l o v a n  c h   z d r o j o v  c h   s o u b o r o  A S A X ,   A S C X ,   A S H X ,   A S M X   n e b o   A S P X . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 5 _ N A M E = P o ~a d a v k y   n a   l a d n  
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 5 _ H E L P = P o 
e t   z p r a c o v a n  c h   p o ~a d a v k o  n a   l a d n  . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 5 _ N A M E = C h y b y   p Yi   k o m p i l a c i 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 5 _ H E L P = P o 
e t   c h y b ,   k   n i m ~  d o al o   v   p r ob h u   k o m p i l a c e . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 5 _ N A M E = C h y b y   p Yi   p r o v  d n  
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 5 _ H E L P = P o 
e t   c h y b ,   k   n i m ~  d o al o   v   p r ob h u   z p r a c o v  n    p o ~a d a v k u . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 5 _ N A M E = C h y b y   p Yi   p Ye d b ~n  m   z p r a c o v  n  
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 5 _ H E L P = P o 
e t   c h y b ,   k   n i m ~  d o al o   v   p r ob h u   a n a l  z y   a   k o m p i l a c e . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 5 _ N A M E = C h y b y   c e l k e m 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   c h y b ,   k   n i m ~  d o al o . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 5 _ N A M E = C h y b y   c e l k e m   z a   s e k u n d u 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 5 _ H E L P = F r e k v e n c e   c h y b ,   k   n i m ~  d o al o . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 5 _ N A M E = C h y b y   n e o ae t Ye n    p Yi   p r o v  d n  
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 5 _ H E L P = P o 
e t   c h y b ,   k t e r    n e b y l y   o ae t Ye n y   k  d e m   u ~i v a t e l e ,   a l e   v  c h o z    o b s l u h o u   c h y b . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 5 _ N A M E = C h y b y   n e o ae t Ye n    p Yi   p r o v  d n    z a   s e k u n d u 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 5 _ H E L P = F r e k v e n c e   n e o ae t Ye n  c h   c h y b . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 5 _ N A M E = P o l o ~k y   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 5 _ H E L P = A k t u  l n    p o 
e t   p o l o ~e k   v e   v  s t u p n    m e z i p a m t i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 5 _ N A M E =  s p an    p Y s t u p y   d o   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p o ~a d a v k o,   k t e r    l z e   u l o ~i t   d o   v  s t u p n    m e z i p a m t i ,   o b s l o u ~e n  c h   z   v  s t u p n    m e z i p a m t i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 5 _ N A M E = N e  s p an    p Y s t u p y   d o   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p o ~a d a v k o,   k t e r    l z e   u l o ~i t   d o   v  s t u p n    m e z i p a m t i ,   n e o b s l o u ~e n  c h   z   v  s t u p n    m e z i p a m t i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 5 _ N A M E = P o m r    s p an  c h   p Y s t u p o  d o   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 5 _ H E L P = P o m r    s p an  c h   p Y s t u p o  k   p o ~a d a v k om ,   k t e r    l z e   u l o ~i t   d o   v  s t u p n    m e z i p a m t i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ N A M E = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ H E L P = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   v  s t u p n    m e z i p a m t i 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ N A M E = F r e k v e n c e   p Y s t u p o  d o   v  s t u p n    m e z i p a m t i 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ H E L P = P o 
e t   p Yi d  n    a   o d e b r  n    p o l o ~e k   v e   v  s t u p n    m e z i p a m t i   z a   s e k u n d u . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 5 _ N A M E = P o 
e t   i n s t a n c    k a n  l u   p r o   o d e s  l  n  
 
 A S P N E T _ P I P E L I N E S _ 0 0 5 _ H E L P = P o 
e t   a k t i v n  c h   i n s t a n c    k a n  l u   p r o   o d e s  l  n  . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 5 _ N A M E = P Yi j a t    b a j t y   p o ~a d a v k o  c e l k e m 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 5 _ H E L P = C e l k o v    v e l i k o s t   v ae c h   p o ~a d a v k o  v   b a j t e c h . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 5 _ N A M E = O d e s l a n    b a j t y   p o ~a d a v k o  c e l k e m 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 5 _ H E L P = C e l k o v    v e l i k o s t   o d p o v d    z a s l a n  c h   k l i e n t o v i   v   b a j t e c h .   N e z a h r n u j e   s t a n d a r d n    z  h l a v    o d p o v d i   H T T P . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 5 _ N A M E = D o b a   p r o v  d n    p o ~a d a v k u 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 5 _ H E L P = D o b a   p o t Ye b n    k   p r o v e d e n    p o s l e d n  h o   p o ~a d a v k u   v   m i l i s e k u n d  c h . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 5 _ N A M E = D o b a   
e k  n    p o ~a d a v k u 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 5 _ H E L P = D o b a   
e k  n    p o s l e d n  h o   p o ~a d a v k u   v e   f r o n t   v   m i l i s e k u n d  c h . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 5 _ N A M E = O d p o j e n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o,   k t e r    b y l y   o d p o j e n y   z   d ov o d u   c h y b y   k o m u n i k a c e   n e b o   u k o n 
e n y   u ~i v a t e l e m . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 5 _ N A M E = S p u at n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 5 _ H E L P = P o 
e t   n y n    s p u at n  c h   p o ~a d a v k o. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 5 _ N A M E = N e z d a Ye n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   n e z d a Ye n  c h   p o ~a d a v k o. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 5 _ N A M E = N e o p r  v n n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o,   k t e r    s e   n e z d a Yi l y   z   d ov o d u   n e o p r  v n n  h o   p Y s t u p u . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 5 _ N A M E = N e n a l e z e n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o  n a   p r o s t Ye d k y ,   k t e r    n e b y l y   n a l e z e n y . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 5 _ N A M E = P o ~a d a v k y   z a Ya z e n    v e   f r o n t 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o  
e k a j  c  c h   n a   z p r a c o v  n  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 5 _ N A M E = O d m  t n u t    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o,   k t e r    b y l y   o d m  t n u t y   z   d ov o d u   z a p l n n    f r o n t y . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 5 _ N A M E =  s p an    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o,   k t e r    b y l y    s p an   p r o v e d e n y . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 5 _ N A M E = V y p r ae l    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o,   j e j i c h ~  
a s o v    l i m i t   v y p r ae l . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 5 _ N A M E = P o ~a d a v k y   c e l k e m 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p o ~a d a v k o  o d   s p u at n    a p l i k a c e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 5 _ N A M E = P o ~a d a v k y   z a   s e k u n d u 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 5 _ H E L P = P o 
e t   p o ~a d a v k o  p r o v e d e n  c h   z a   s e k u n d u . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 5 _ N A M E = C e l k o v    p o 
e t   p Yi p o j e n    r e l a c    s e r v e r u   S Q L   S e r v e r 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p Yi p o j e n    k   s e r v e r u   S Q L   S e r v e r   v y u ~ v a n  c h   s t a v e m   r e l a c e . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 5 _ N A M E = C e l k o v    p o 
e t   p Yi p o j e n    s e r v e r u   s t a v u   r e l a c  
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p Yi p o j e n    k e   s t a v o v  m u     s e r v e r u   v y u ~ v a n  c h   s t a v e m   r e l a c e . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 5 _ N A M E = O p u at n    r e l a c e 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 5 _ H E L P = P o 
e t   r e l a c  ,   k t e r    b y l y   v  s l o v n   o p u at n y . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 5 _ N A M E = A k t i v n    r e l a c e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 5 _ H E L P = A k t u  l n    p o 
e t   a k t i v n  c h   r e l a c  . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 5 _ N A M E = V y p r ae l    r e l a c e 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 5 _ H E L P = P o 
e t   r e l a c  ,   j e j i c h ~  
a s o v    l i m i t   v y p r ae l . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 5 _ N A M E = R e l a c e   c e l k e m 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   r e l a c    o d   s p u at n    a p l i k a c e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 5 _ N A M E = O p u at n    r e l a c e   s t a v o v  h o   s e r v e r u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 5 _ H E L P = P o 
e t   r e l a c  ,   k t e r    b y l y   v  s l o v n   o p u at n y . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 5 _ N A M E = A k t i v n    r e l a c e   s t a v o v  h o   s e r v e r u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 5 _ H E L P = A k t u  l n    p o 
e t   a k t i v n  c h   r e l a c  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 5 _ N A M E = V y p r ae l    r e l a c e   s t a v o v  h o   s e r v e r u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 5 _ H E L P = P o 
e t   r e l a c  ,   j e j i c h ~  
a s o v    l i m i t   v y p r ae l . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 5 _ N A M E = R e l a c e   s t a v o v  h o   s e r v e r u   c e l k e m 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   r e l a c  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 5 _ N A M E = P o l o ~k y   m e z i p a m t i   c e l k e m 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   p o l o ~e k   v   m e z i p a m t i   ( v n i t Yn  c h   i   p Yi d a n  c h   u ~i v a t e l e m ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 5 _ N A M E =  s p an    p Y s t u p y   d o   m e z i p a m t i   c e l k e m 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t    s p an  c h   p Y s t u p o  d o   m e z i p a m t i . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 5 _ N A M E = N e  s p an    p Y s t u p y   d o   m e z i p a m t i   c e l k e m 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   n e  s p an  c h   p Y s t u p o  d o   m e z i p a m t i . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 5 _ N A M E = P o m r    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   c e l k e m 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 5 _ H E L P = P o m r    s p an  c h   p Y s t u p o  z e   v ae c h   v o l  n    m e z i p a m t i . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ N A M E = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   c e l k e m 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 5 _ H E L P = Z  k l a d   p o m r u    s p an  c h   p Y s t u p o  d o   m e z i p a m t i   c e l k e m 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ N A M E = C e l k o v    f r e k v e n c e   p Y s t u p o  d o   m e z i p a m t i 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 5 _ H E L P = P o 
e t   p Yi d  n    a   o d e b r  n    p o l o ~e k   v   c e l k o v    m e z i p a m t i   z a   s e k u n d u . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 5 _ N A M E = P Ye r u ae n    t r a n s a k c e 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 5 _ H E L P = P o 
e t   p Ye r u ae n  c h   t r a n s a k c  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 5 _ N A M E = P o t v r z e n    t r a n s a k c e 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 5 _ H E L P = P o 
e t   p o t v r z e n  c h   t r a n s a k c  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 5 _ N A M E = T r a n s a k c e   
e k a j  c    n a   v y Y z e n  
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 5 _ H E L P = P o 
e t   p r  v   z p r a c o v  v a n  c h   t r a n s a k c  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 5 _ N A M E = T r a n s a k c e   z a   s e k u n d u 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 5 _ H E L P = P o 
e t   t r a n s a k c    s p u at n  c h   z a   s e k u n d u . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 5 _ N A M E = T r a n s a k c e   c e l k e m 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 5 _ H E L P = C e l k o v    p o 
e t   t r a n s a k c    o d   s p u at n    a p l i k a c e . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 5 _ N A M E = R e s t a r t o v  n    p r a c o v n  h o   p r o c e s u 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 5 _ H E L P = P o 
e t   r e s t a r t o v  n    p r a c o v n  h o   p r o c e s u   v   p o 
 t a 
i . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 5 _ N A M E = S p u at n    p r a c o v n    p r o c e s y 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 5 _ H E L P = P o 
e t   p r a c o v n  c h   p r o c e s o  s p u at n  c h   v   p o 
 t a 
i . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   D a n i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 6 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 6 _ H E L P = G l o b a l e   y d e l s e s t  l l e r e   f o r   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 6 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 6 _ H E L P = P r o g r a m y d e l s e s t  l l e r e   f o r   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 6 _ N A M E = A n o n y m e   a n m o d n i n g e r 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   b r u g e r   a n o n y m   g o d k e n d e l s e . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 6 _ N A M E = A n o n y m e   a n m o d n i n g e r   p r .   s e k u n d 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 6 _ H E L P = A n t a l   a n o n y m e   a n m o d n i n g e r   o m   g o d k e n d e l s e   p r .   s e k u n d 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 6 _ N A M E = P o s t e r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   p o s t e r ,   b r u g e r e n   h a r   t i l f  j e t   i   c a c h e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 6 _ N A M E = F o r e k o m s t e r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 6 _ H E L P = A n t a l   c a c h e f o r e k o m s t e r   f r a   b r u g e r k o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 6 _ N A M E = R e s u l t a t l  s e   s  g n i n g e r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 6 _ H E L P = A n t a l   r e s u l t a t l  s e   s  g e k a l d   f r a   b r u g e r k o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 6 _ N A M E = F o r e k o m s t f o r h o l d   f o r   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 6 _ H E L P = F o r e k o m s t f o r h o l d   f o r   k a l d   f r a   b r u g e r k o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ N A M E = F o r e k o m s t f o r h o l d   f o r   c a c h e - A P I   ( b a s i s ) 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ H E L P = F o r e k o m s t f o r h o l d   f o r   c a c h e - A P I   ( b a s i s ) 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ N A M E = U d s k i f t n i n g s h a s t i g h e d   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ H E L P = A n t a l   t i l f  j e l s e r   o g   f j e r n e l s e r   i   c a c h e - A P I   p r .   s e k u n d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 6 _ N A M E = G e n s t a r t e d e   p r o g r a m m e r 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 6 _ H E L P = A n t a l   g a n g e   p r o g r a m m e t   e r   b l e v e t   g e n s t a r t e t   i   d e n   t i d ,   w e b s e r v e r e n   h a r   k  r t . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 6 _ N A M E = K  r e n d e   p r o g r a m m e r 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 6 _ H E L P = A n t a l   w e b p r o g r a m m e r ,   d e r   k  r e r   i    j e b l i k k e t . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 6 _ N A M E = S a m l e t   a n t a l   k o m p i l e r i n g e r 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 6 _ H E L P = A n t a l   d y n a m i s k   k o m p i l e r e d e   k i l d e f i l e r   a f   t y p e n   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   e l l e r   . a s p x . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 6 _ N A M E = A n m o d n i n g e r   o m   f e j l f i n d i n g 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 6 _ H E L P = A n t a l   b e h a n d l e d e   a n m o d n i n g e r   o m   f e j l f i n d i n g . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 6 _ N A M E = F e j l   u n d e r   k o m p i l e r i n g 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 6 _ H E L P = A n t a l   f e j l ,   d e r   o p s t o d   u n d e r   k o m p i l e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 6 _ N A M E = F e j l   u n d e r   k  r s e l 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 6 _ H E L P = A n t a l   f e j l ,   d e r   o p s t o d   u n d e r   b e h a n d l i n g   a f   e n   a n m o d n i n g . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 6 _ N A M E = F e j l   u n d e r   f o r b e h a n d l i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 6 _ H E L P = A n t a l   f e j l ,   d e r   o p s t o d   u n d e r   p a r s i n g   o g   k o n f i g u r e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 6 _ N A M E = S a m l e t   a n t a l   f e j l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   o p s t  e d e   f e j l . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 6 _ N A M E = S a m l e t   a n t a l   f e j l   p r .   s e k u n d 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 6 _ H E L P = A n t a l   o p s t  e d e   f e j l . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 6 _ N A M E = I k k e - h  n d t e r e d e   f e j l   u n d e r   k  r s e l 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 6 _ H E L P = A n t a l   f e j l ,   d e r   i k k e   b l e v   h  n d t e r e t   a f   b r u g e r k o d e ,   m e n   a f   s t a n d a r d f e j l h  n d t e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 6 _ N A M E = I k k e - h  n d t e r e d e   f e j l   u n d e r   k  r s e l   p r .   s e k u n d 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 6 _ H E L P = A n t a l   i k k e - h  n d t e r e d e   f e j l . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 6 _ N A M E = P o s t e r   i   o u t p u t c a c h e n 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 6 _ H E L P = D e t   a k t u e l l e   a n t a l   p o s t e r   i   o u t p u t c a c h e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 6 _ N A M E = F o r e k o m s t e r   i   o u t p u t c a c h e n 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   a n m o d n i n g e r ,   d e r   k a n   c a c h e l a g r e s ,   o g   s o m   h e n t e s   f r a   o u t p u t c a c h e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 6 _ N A M E = R e s u l t a t l  s e   s  g n i n g e r   i   o u t p u t c a c h e n 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   a n m o d n i n g e r ,   d e r   k a n   c a c h e l a g r e s ,   o g   s o m   i k k e   h e n t e s   f r a   o u t p u t c a c h e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 6 _ N A M E = F o r e k o m s t f o r h o l d   f o r   o u t p u t c a c h e n 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 6 _ H E L P = F o r e k o m s t f o r h o l d   f o r   a n m o d n i n g e r   o m   l a g r i n g   i   o u t p u t c a c h e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ N A M E = F o r e k o m s t f o r h o l d   f o r   o u t p u t c a c h e n   ( b a s i s ) 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ H E L P = F o r e k o m s t f o r h o l d   f o r   o u t p u t c a c h e n   ( b a s i s ) 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ N A M E = U d s k i f t n i n g s h a s t i g h e d   i   o u t p u t c a c h e n 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ H E L P = A n t a l   t i l f  j e l s e r   o g   f j e r n e l s e r   i   o u t p u t c a c h e n   p r .   s e k u n d . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 6 _ N A M E = A n t a l   p i p e l i n e f o r e k o m s t e r 
 
 A S P N E T _ P I P E L I N E S _ 0 0 6 _ H E L P = A n t a l   a k t i v e   p i p e l i n e f o r e k o m s t e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 6 _ N A M E = S a m l e t   a n t a l   i n p u t b y t e   i   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 6 _ H E L P = D e n   s a m l e d e   s t  r r e l s e   i   b y t e   a f   a l l e   a n m o d n i n g e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 6 _ N A M E = S a m l e t   a n t a l   o u t p u t b y t e   i   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 6 _ H E L P = D e n   s a m l e d e   s t  r r e l s e   i   b y t e   a f   s v a r   s e n d t   t i l   k l i e n t e r .   T a l l e t   i n k l u d e r e r   i k k e   h e a d e r d a t a   i   s t a n d a r d   H T T P - s v a r . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 6 _ N A M E = K  r s e l s t i d   f o r   a n m o d n i n g 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 6 _ H E L P = K  r s e l s t i d   i   m i l l i s e k u n d e r   f o r   d e n   s e n e s t e   a n m o d n i n g . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 6 _ N A M E = V e n t e t i d   f o r   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 6 _ H E L P = A n t a l   m i l l i s e k u n d e r ,   d e n   s e n e s t e   a n m o d n i n g   v e n t e d e   i   k  e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 6 _ N A M E = A f b r u d t e   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   b l e v   a f b r u d t   p    g r u n d   a f   k o m m u n i k a t i o n s f e j l   e l l e r   a f s l u t t e t   a f   b r u g e r e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 6 _ N A M E = A n m o d n i n g e r   u n d e r   k  r s e l 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   s o m   k  r e s   i    j e b l i k k e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 6 _ N A M E = M i s l y k k e d e   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   m i s l y k k e d e   a n m o d n i n g e r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 6 _ N A M E = A n m o d n i n g e r   u d e n   a u t o r i s a t i o n 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   m i s l y k k e d e s   p    g r u n d   a f   u a u t o r i s e r e t   a d g a n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 6 _ N A M E = A n m o d n i n g e r ,   d e r   i k k e   b l e v   f u n d e t 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r   o m   r e s s o u r c e r ,   d e r   i k k e   b l e v   f u n d e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 6 _ N A M E = A n m o d n i n g e r   i   k  e n 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   v e n t e r   p    a t   b l i v e   b e h a n d l e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 6 _ N A M E = A f v i s t e   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   b l e v   a f v i s t ,   f o r d i   a n m o d n i n g s k  e n   v a r   f u l d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 6 _ N A M E = G e n n e m f  r t e   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   b l e v   g e n n e m f  r t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 6 _ N A M E = A n m o d n i n g e r   m e d   t i m e o u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 6 _ H E L P = A n t a l   a n m o d n i n g e r ,   d e r   f i k   t i m e o u t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 6 _ N A M E = S a m l e t   a n t a l   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   a n m o d n i n g e r ,   s i d e n   p r o g r a m m e t   b l e v   s t a r t e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 6 _ N A M E = A n m o d n i n g e r   p r .   s e k u n d 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 6 _ H E L P = A n t a l   g e n n e m f  r t e   a n m o d n i n g e r   p r .   s e k u n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 6 _ N A M E = S e s s i o n e n s   s a m l e d e   a n t a l   S Q L   S e r v e r - f o r b i n d e l s e r 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   f o r b i n d e l s e r   t i l   S Q L - s e r v e r e n ,   s o m   b r u g e s   a f   s e s s i o n s t i l s t a n d e n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 6 _ N A M E = S a m l e t   a n t a l   f o r b i n d e l s e r   t i l   s e s s i o n s t i l s t a n d s s e r v e r e n 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   f o r b i n d e l s e r   t i l   t i l s t a n d s s e r v e r e n ,   s o m   s e s s i o n s t i l s t a n d e n   b r u g e r . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 6 _ N A M E = A f b r u d t e   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 6 _ H E L P = A n t a l   s e s s i o n e r ,   d e r   e k s p l i c i t   e r   b l e v e t   a f b r u d t . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 6 _ N A M E = A k t i v e   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 6 _ H E L P = A n t a l   a k t i v e   s e s s i o n e r   i    j e b l i k k e t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 6 _ N A M E = S e s s i o n e r   m e d   t i m e o u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 6 _ H E L P = A n t a l   s e s s i o n e r ,   d e r   f i k   t i m e o u t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 6 _ N A M E = S a m l e t   a n t a l   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   s e s s i o n e r ,   s i d e n   p r o g r a m m e t   b l e v   s t a r t e t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 6 _ N A M E = A f b r u d t e   t i l s t a n d s s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 6 _ H E L P = A n t a l   s e s s i o n e r ,   d e r   e k s p l i c i t   e r   b l e v e t   a f b r u d t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 6 _ N A M E = A k t i v e   t i l s t a n d s s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 6 _ H E L P = A n t a l   a k t i v e   s e s s i o n e r   i    j e b l i k k e t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 6 _ N A M E = T i l s t a n d s s e r v e r s e s s i o n e r   m e d   t i m e o u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 6 _ H E L P = A n t a l   s e s s i o n e r ,   d e r   f i k   t i m e o u t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 6 _ N A M E = S a m l e t   a n t a l   t i l s t a n d s s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   s e s s i o n e r . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 6 _ N A M E = S a m l e t   a n t a l   p o s t e r   i   c a c h e n 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   p o s t e r   i   c a c h e n   ( b  d e   i n t e r n e   o g   t i l f  j e d e   a f   b r u g e r e n ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 6 _ N A M E = S a m l e t   a n t a l   c a c h e f o r e k o m s t e r 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   f o r e k o m s t e r   f r a   c a c h e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 6 _ N A M E = S a m l e t   a n t a l   r e s u l t a t l  s e   s  g n i n g e r   i   c a c h e n 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   r e s u l t a t l  s e   s  g n i n g e r   i   c a c h e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 6 _ N A M E = S a m l e t   f o r e k o m s t f o r h o l d   f o r   c a c h e n 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 6 _ H E L P = F o r e k o m s t f o r h o l d e t   f r a   s a m t l i g e   c a c h e k a l d . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ N A M E = S a m l e t   f o r e k o m s t f o r h o l d   f o r   c a c h e n   ( b a s i s ) 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 6 _ H E L P = S a m l e t   f o r e k o m s t f o r h o l d   f o r   c a c h e n   ( b a s i s ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ N A M E = S a m l e t   u d s k i f t n i n g s h a s t i g h e d   i   c a c h e n 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 6 _ H E L P = A n t a l   t i l f  j e l s e r   o g   f j e r n e l s e r   i   d e n   s a m l e d e   c a c h e   p r .   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 6 _ N A M E = A f b r u d t e   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 6 _ H E L P = A n t a l   a f b r u d t e   t r a n s a k t i o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 6 _ N A M E = B e k r  f t e d e   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 6 _ H E L P = A n t a l l e t   a f   b e k r  f t e d e   t r a n s a k t i o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 6 _ N A M E = U d e s t  e n d e   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 6 _ H E L P = A n t a l   t r a n s a k t i o n e r ,   d e r   e r   i   g a n g . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 6 _ N A M E = T r a n s a k t i o n e r   p r .   s e k u n d 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 6 _ H E L P = T r a n s a k t i o n e r   s t a r t e t   p r .   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 6 _ N A M E = S a m l e t   a n t a l   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 6 _ H E L P = D e t   s a m l e d e   a n t a l   t r a n s a k t i o n e r ,   s i d e n   p r o g r a m m e t   b l e v   s t a r t e t . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 6 _ N A M E = G e n s t a r t e d e   a r b e j d s p r o c e s s e r 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 6 _ H E L P = A n t a l   g a n g e   e n   a r b e j d s p r o c e s   e r   b l e v e t   g e n s t a r t e t   p    m a s k i n e n . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 6 _ N A M E = K  r e n d e   a r b e j d s p r o c e s s e r 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 6 _ H E L P = A n t a l   a r b e j d s p r o c e s s e r ,   d e r   k  r e r   p    m a s k i n e n . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   G e r m a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 7 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 7 _ H E L P = G l o b a l e   L e i s t u n g s i n d i k a t o r e n   f  r   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 7 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 7 _ H E L P = P r o g r a m m l e i s t u n g s i n d i k a t o r e n   f  r   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 7 _ N A M E = A n o n y m e   A n f o r d e r u n g e n 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   a n o n y m e   A u t h e n t i f i z i e r u n g   v e r w e n d e n . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 7 _ N A M E = A n o n y m e   A n f o r d e r u n g e n / S e k . 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n   m i t   a n o n y m e r   A u t h e n t i f i z i e r u n g   p r o   S e k u n d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 7 _ N A M E = C a c h e - A P I - E i n t r  g e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 7 _ H E L P = D i e   G e s a m t z a h l   d e r   C a c h e e i n t r  g e ,   d i e   v o m   B e n u t z e r   h i n z u g e f  g t   w u r d e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 7 _ N A M E = C a c h e - A P I - T r e f f e r 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   C a c h e t r e f f e r   v o m   B e n u t z e r c o d e   a u s . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 7 _ N A M E = F e h l g e s c h l a g e n e   C a c h e - A P I - Z u g r i f f e 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   f e h l g e s c h l a g e n e n   C a c h e z u g r i f f e ,   d i e   v o m   B e n u t z e r c o d e   a u s   a u f g e r u f e n   w u r d e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 7 _ N A M E = C a c h e - A P I - T r e f f e r r a t e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 7 _ H E L P = D i e   T r e f f e r r a t e   d e r   B e n u t z e r c o d e a u f r u f e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ N A M E = A P I - C a c h e - T r e f f e r r a t e   ( B a s i s ) 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ H E L P = A P I - C a c h e - T r e f f e r r a t e   ( B a s i s ) 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ N A M E = T u r n o v e r r a t e   f  r   C a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ H E L P = A n z a h l   d e r   H i n z u f  g e -   u n d   L  s c h v o r g  n g e   i m   A P I - C a c h e   p r o   S e k u n d e . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 7 _ N A M E = A n w e n d u n g s n e u s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 7 _ H E L P = G i b t   a n ,   w i e   o f t   d i e   A n w e n d u n g   w  h r e n d   d e r   G  l t i g k e i t s d a u e r   d e s   W e b s e r v e r s   n e u   g e s t a r t e t   w u r d e . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 7 _ N A M E = A u s g e f  h r t e   A n w e n d u n g e n 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   W e b a n w e n d u n g e n ,   d i e   m o m e n t a n   a u s g e f  h r t   w e r d e n . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 7 _ N A M E = K o m p i l i e r u n g e n   i n s g e s a m t 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   d y n a m i s c h   k o m p i l i e r t e n   Q u e l l d a t e i e n   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   o d e r   . a s p x . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 7 _ N A M E = D e b u g - A n f o r d e r u n g e n 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   D e b u g - A n f o r d e r u n g e n ,   d i e   v e r a r b e i t e t   w u r d e n . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 7 _ N A M E = F e h l e r   b e i   d e r   K o m p i l i e r u n g 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   F e h l e r ,   d i e   b e i m   K o m p i l i e r e n   a u f g e t r e t e n   s i n d . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 7 _ N A M E = F e h l e r   b e i m   A u s f  h r e n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   F e h l e r ,   d i e   b e i m   V e r a r b e i t e n   e i n e r   A n f o r d e r u n g   a u f g e t r e t e n   s i n d . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 7 _ N A M E = F e h l e r   b e i   d e r   V o r v e r a r b e i t u n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   F e h l e r ,   d i e   b e i m   A n a l y s i e r e n   u n d   K o n f i g u r i e r e n   a u f g e t r e t e n   s i n d . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 7 _ N A M E = F e h l e r   g e s a m t 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 7 _ H E L P = A n z a h l   d e r   a u f g e t r e t e n e n   F e h l e r . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 7 _ N A M E = F e h l e r   g e s a m t / S e k . 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 7 _ H E L P = R a t e   d e r   a u f g e t r e t e n e n   F e h l e r . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 7 _ N A M E = U n b e h a n d e l t e   F e h l e r   b e i m   A u s f  h r e n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   F e h l e r ,   d i e   n i c h t   v o m   B e n u t z e r c o d e   v e r a r b e i t e t   w u r d e n ,   s o n d e r n   v o m   S t a n d a r d f e h l e r h a n d l e r . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 7 _ N A M E = U n b e h a n d e l t e   F e h l e r   w  h r e n d   d e r   A u s f  h r u n g   p r o   S e k u n d e 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 7 _ H E L P = R a t e   d e r   u n b e h a n d e l t e n   F e h l e r . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 7 _ N A M E = A u s g a b e c a c h e e i n t r  g e 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 7 _ H E L P = D i e   a k t u e l l e   A n z a h l   d e r   E i n t r  g e   i m   A u s g a b e c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 7 _ N A M E = A u s g a b e c a c h e t r e f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 7 _ H E L P = D i e   G e s a m t a n z a h l   d e r   z w i s c h e n s p e i c h e r b a r e n   A n f o r d e r u n g e n ,   d i e   v o m   A u s g a b e c a c h e   b e a n t w o r t e t   w e r d e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 7 _ N A M E = F e h l g e s c h l a g e n e   A u s g a b e c a c h e - Z u g r i f f e 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 7 _ H E L P = D i e   G e s a m t a n z a h l   d e r   z w i s c h e n s p e i c h e r b a r e n   A n f o r d e r u n g e n ,   d i e   n i c h t   v o m   A u s g a b e c a c h e   b e a n t w o r t e t   w e r d e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 7 _ N A M E = A u s g a b e c a c h e - T r e f f e r r a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 7 _ H E L P = T r e f f e r r a t e   d e r   z w i s c h e n s p e i c h e r b a r e n   A u s g a b e a n f o r d e r u n g e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ N A M E = A u s g a b e c a c h e - T r e f f e r r a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ H E L P = A u s g a b e c a c h e - T r e f f e r r a t e 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ N A M E = T u r n o v e r r a t e   f  r   d e n   A u s g a b e c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ H E L P = A n z a h l   d e r   H i n z u f  g e -   u n d   L  s c h v o r g  n g e   i m   A u s g a b e c a c h e   p r o   S e k u n d e . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 7 _ N A M E = P i p e l i n e - I n s t a n z e n z a h l 
 
 A S P N E T _ P I P E L I N E S _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   a k t i v e n   P i p e l i n e i n s t a n z e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 7 _ N A M E = A n f o r d e r u n g s b y t e s   g e s a m t   ( e i n s c h l i e  l . ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 7 _ H E L P = D i e   G e s a m t g r   e   a l l e r   A n f o r d e r u n g e n   i n   B y t e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 7 _ N A M E = A n f o r d e r u n g s b y t e s   g e s a m t   ( a u s s c h l i e  l . ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 7 _ H E L P = D i e   G e s a m t g r   e   a l l e r   A n t w o r t e n   i n   B y t e s ,   d i e   a n   e i n e n   C l i e n t   g e s e n d e t   w u r d e n ,   w o b e i   s t a n d a r d m   i g e   H T T P - A n t w o r t h e a d e r   a u s g e s c h l o s s e n   w e r d e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 7 _ N A M E = A u s f  h r u n g s z e i t   d e r   A n f o r d e r u n g 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 7 _ H E L P = D i e   Z e i t d a u e r   z u m   A u s f  h r e n   d e r   l e t z t e n   A n f o r d e r u n g   i n   M i l l i s e k u n d e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 7 _ N A M E = W a r t e z e i t   d e r   A n f o r d e r u n g 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   M i l l i s e k u n d e n ,   d i e   d i e   l e t z t e   A n f o r d e r u n g   i n   d e r   W a r t e s c h l a n g e   w a r t e t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 7 _ N A M E = G e t r e n n t e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   a u f g r u n d   v o n   K o m m u n i k a t i o n s f e h l e r n   o d e r   v o m   B e n u t z e r   g e t r e n n t   w u r d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 7 _ N A M E = A u s g e f  h r t e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   m o m e n t a n   a u s g e f  h r t   w e r d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 7 _ N A M E = F e h l g e s c h l a g e n e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 7 _ H E L P = D i e   G e s a m t s z a h l   d e r   f e h l g e s c h l a g e n e n   A n f o r d e r u n g e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 7 _ N A M E = N i c h t   b e r e c h t i g t e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   w e g e n   m a n g e l n d e r   Z u g r i f f s b e r e c h t i g u n g   f e h l g e s c h l a g e n   s i n d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 7 _ N A M E = N i c h t   g e f u n d e n e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n   f  r   R e s s o u r c e n ,   d i e   n i c h t   g e f u n d e n   w u r d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 7 _ N A M E = A n f o r d e r u n g e n   i n   W a r t e s c h l a n g e 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   a u f   d i e   V e r a r b e i t u n g   w a r t e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 7 _ N A M E = A n f o r d e r u n g e n   w u r d e n   a b g e l e h n t 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   a b g e l e h n t e n   A n f o r d e r u n g e n ,   d a   d i e   A n f o r d e r u n g s s c h l a n g e   v o l l   w a r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 7 _ N A M E = E r f o l g r e i c h e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   e r f o l g r e i c h   a u s g e f  h r t   w u r d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 7 _ N A M E = A n f o r d e r u n g e n   m i t   Z e i t  b e r s c h r e i t u n g 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d e r e n   m i t   Z e i t l i m i t    b e r s c h r i t t e n   w u r d e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 7 _ N A M E = A n f o r d e r u n g e n   g e s a m t 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 7 _ H E L P = D i e   G e s a m t s z a h l   d e r   A n f o r d e r u n g e n   s e i t   d i e   A n w e n d u n g   g e s t a r t e t   w u r d e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 7 _ N A M E = A n f o r d e r u n g e n / S e k . 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   A n f o r d e r u n g e n ,   d i e   p r o   S e k u n d e   a u s g e f  h r t   w e r d e n . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 7 _ N A M E = G e s a m t a n z a h l   d e r   S Q L   S e r v e r - V e r b i n d u n g e n 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 7 _ H E L P = G e s a m t a n z a h l   d e r   V e r b i n d u n g e n   m i t   S Q L   S e r v e r ,   d i e   v o m   S i t z u n g s s t a t u s   v e r w e n d e t   w e r d e n .   
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 7 _ N A M E = G e s a m t a n z a h l   d e r   S t a t u s s e r v e r v e r b i n d u n g e n 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 7 _ H E L P = G e s a m t a n z a h l   d e r   S t a t u s s e r v e r v e r b i n d u n g e n ,   d i e   v o m   S i t z u n g s s t a t u s   v e r w e n d e t   w e r d e n .   
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 7 _ N A M E = A b g e b r o c h e n e   S i t z u n g e n 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   S i t z u n g e n ,   d i e   e x p l i z i t   a b g e b r o c h e n   w u r d e n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 7 _ N A M E = A k t i v e   S i t z u n g e n 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   S i t z u n g e n ,   d i e   m o m e n t a n   a k t i v e   s i n d . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 7 _ N A M E = S i t z u n g e n   m i t   Z e i t  b e r s c h r e i t u n g 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 7 _ H E L P = A n z a h l   d e r   S i t z u n g e n   m i t   Z e i t  b e r s c h r e i t u n g 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 7 _ N A M E = S i t z u n g e n   g e s a m t 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 7 _ H E L P = G e s a m t a n z a h l   d e r   S i t z u n g e n   s e i t   d i e   A n w e n d u n g   g e s t a r t e t   w u r d e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 7 _ N A M E = A b g e b r o c h e n e   S t a t u s s e r v e r s i t z u n g e n 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   S i t z u n g e n ,   d i e   e x p l i z i t   a b g e b r o c h e n   w u r d e n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 7 _ N A M E = A k t i v e   S t a t u s s e r v e r s i t z u n g e n 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   S i t z u n g e n ,   d i e   m o m e n t a n   a k t i v e   s i n d . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 7 _ N A M E = A b g e l a u f e n e   S t a t u s s e r v e r s i t z u n g e n 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 7 _ H E L P = A n z a h l   d e r   S i t z u n g e n   m i t   Z e i t  b e r s c h r e i t u n g 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 7 _ N A M E = S t a t u s s e r v e r s i t z u n g e n   i n s g e s a m t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 7 _ H E L P = G e s a m t a n z a h l   d e r   S i t z u n g e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 7 _ N A M E = C a c h e e i n t r  g e   g e s a m t 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 7 _ H E L P = D i e   G e s a m t z a h l   d e r   C a c h e e i n t r  g e   ( i n t e r n   u n d   v o n   B e n u t z e r   h i n z u g e f  g t ) . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 7 _ N A M E = C a c h e t r e f f e r   g e s a m t 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 7 _ H E L P = D i e   G e s a m t z a h l   d e r   C a c h e t r e f f e r . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 7 _ N A M E = F e h l g e s c h l a g e n e   C a c h e z u g r i f f e   g e s a m t 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 7 _ H E L P = D i e   G e s a m t z a h l   d e r   f e h l g e s c h l a g e n e n   C a c h e z u g r i f f e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 7 _ N A M E = C a c h e - T r e f f e r r a t e   g e s a m t 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 7 _ H E L P = D i e   T r e f f e r r a t e   a l l e r   C a c h e a u f r u f e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ N A M E = C a c h e - T r e f f e r r a t e   g e s a m t   ( B a s i s ) 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 7 _ H E L P = C a c h e - T r e f f e r r a t e   g e s a m t   ( B a s i s ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ N A M E = G e s a m t e   C a c h e t u r n o v e r r a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 7 _ H E L P = A n z a h l   d e r   H i n z u f  g e -   u n d   L  s c h v o r g  n g e   i m   g e s a m t e n   C a c h e   p r o   S e k u n d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 7 _ N A M E = A b g e b r o c h e n e   T r a n s a k t i o n e n 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   a b g e b r o c h e n e n   T r a n s a k t i o n e n . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 7 _ N A M E =  b e r m i t t e l t e   T r a n s a k t i o n e n 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   T r a n s a k t i o n e n ,   f  r   d i e   e i n   C o m m i t   a u s g e f  h r t   w u r d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 7 _ N A M E = A u s s t e h e n d e   T r a n s a k t i o n e n 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   T r a n s a k t i o n e n ,   d i e   s i c h   B e a r b e i t u n g   b e f i n d e n . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 7 _ N A M E = T r a n s a k t i o n e n / S e k 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   T r a n s a k t i o n e n ,   d i e   p r o   S e k u n d e   g e s t a r t e t   w e r d e n . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 7 _ N A M E = T r a n s a k t i o n e n   g e s a m t 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 7 _ H E L P = D i e   G e s a m t a n z a h l   d e r   T r a n s a k t i o n e n   s e i t   d i e   A n w e n d u n g   g e s t a r t e t   w u r d e . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 7 _ N A M E = W o r k e r p r o z e s s - N e u s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 7 _ H E L P = G i b t   a n ,   w i e   o f t   e i n   W o r k e r p r o z e s s   a u f   d e m   C o m p u t e r   n e u   g e s t a r t e t   w u r d e . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 7 _ N A M E = A u s g e f  h r t e   W o r k e r p r o z e s s e 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 7 _ H E L P = D i e   A n z a h l   d e r   W o r k e r p r o z e s s e ,   d i e   a u f   d e m   C o m p u t e r   a u s g e f  h r t   w e r d e n . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   G r e e k 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 8 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 8 _ H E L P =       A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 8 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 8 _ H E L P =         A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 8 _ N A M E =   
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 8 _ H E L P =                   . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 8 _ N A M E =   / 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 8 _ H E L P =                 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 8 _ N A M E =   A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 8 _ H E L P =             c a c h e             . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 8 _ N A M E =     A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 8 _ H E L P =             c a c h e         . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 8 _ N A M E =     A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 8 _ H E L P =             c a c h e             . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 8 _ N A M E =     A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 8 _ H E L P =                     . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ N A M E =           A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ H E L P =           A P I     c a c h e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ N A M E =     A P I     c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ H E L P =               c a c h e     A P I     . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 8 _ N A M E =     
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 8 _ H E L P =                         w e b . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 8 _ N A M E =     
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 8 _ H E L P =         w e b           . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 8 _ N A M E =   
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 8 _ H E L P =           . a s a x ,   . a s c x ,   . a s h x ,   . a s m x     . a s p x         . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 8 _ N A M E =     
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 8 _ H E L P =                   . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 8 _ N A M E =       
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 8 _ N A M E =       
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 8 _ H E L P =                     . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 8 _ N A M E =       - 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 8 _ H E L P =                           . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 8 _ N A M E =   
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 8 _ H E L P =             . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 8 _ N A M E =   / 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 8 _ N A M E =             
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 8 _ H E L P =                                 . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 8 _ N A M E =             / 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 8 _ H E L P =             . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 8 _ N A M E =     c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 8 _ H E L P =             c a c h e   . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 8 _ N A M E =       c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 8 _ H E L P =                     c a c h e   ,             c a c h e   . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 8 _ N A M E =       c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 8 _ H E L P =                     c a c h e   ,               c a c h e   . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 8 _ N A M E =       c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 8 _ H E L P =                           c a c h e   . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ N A M E =             c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ H E L P =             c a c h e   
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ N A M E =       c a c h e   
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ H E L P =               c a c h e       . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 8 _ N A M E =     
 
 A S P N E T _ P I P E L I N E S _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 8 _ N A M E =   b y t e     
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 8 _ H E L P =     ,     b y t e ,       . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 8 _ N A M E =   b y t e     
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 8 _ H E L P =     ,     b y t e ,                 - .               H T T P . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 8 _ H E L P =                     ,         . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 8 _ H E L P =                 ,         . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 8 _ H E L P =                           . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 8 _ H E L P =             . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 8 _ H E L P =                   . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 8 _ N A M E =       
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 8 _ H E L P =                       . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 8 _ N A M E =   
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 8 _ H E L P =                   . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 8 _ N A M E = / 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 8 _ N A M E =         S Q L   S e r v e r   
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 8 _ H E L P =             S Q L   S e r v e r               . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 8 _ N A M E =             
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 8 _ H E L P =                               . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 8 _ N A M E =       
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 8 _ N A M E =     
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 8 _ H E L P =                     . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 8 _ N A M E =       
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 8 _ N A M E =     
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 8 _ H E L P =                     . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 8 _ N A M E =             
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 8 _ N A M E =           
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 8 _ H E L P =                     . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 8 _ N A M E =             
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 8 _ N A M E =           
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 8 _ H E L P =         . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 8 _ N A M E =       c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 8 _ H E L P =             c a c h e   (               ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 8 _ N A M E =         c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 8 _ H E L P =                 c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 8 _ N A M E =         c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 8 _ H E L P =               c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 8 _ N A M E =         c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 8 _ H E L P =                     c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ N A M E =                   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 8 _ H E L P =                   c a c h e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ N A M E =     o   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 8 _ H E L P =               c a c h e     . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 8 _ N A M E =     
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 8 _ N A M E =     
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 8 _ H E L P =               . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 8 _ N A M E = / 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 8 _ H E L P =           . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 8 _ N A M E =   
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 8 _ H E L P =                   . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 8 _ N A M E =       
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 8 _ H E L P =                 . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 8 _ N A M E =       
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 8 _ H E L P =                 . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   S p a n i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 A _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 A _ H E L P = C o n t a d o r e s   d e   r e n d i m i e n t o   g l o b a l   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 A _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 A _ H E L P = C o n t a d o r e s   d e   r e n d i m i e n t o   d e   a p l i c a c i  n   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 A _ N A M E = S o l i c i t u d e s   a n  n i m a s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   q u e   u t i l i z a n   a u t e n t i c a c i  n   a n  n i m a . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 A _ N A M E = S o l i c i t u d e s   a n  n i m a s   p o r   s e g u n d o 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   d e   a u t e n t i c a c i  n   a n  n i m a   p o r   s e g u n d o 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 A _ N A M E = E n t r a d a s   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   e n   l a   m e m o r i a   c a c h    a g r e g a d a s   p o r   e l   u s u a r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 A _ N A M E = A c i e r t o s   d e   l a   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 A _ H E L P = N  m e r o   d e   a c i e r t o s   d e   c a c h    d e s d e   e l   c  d i g o   d e   u s u a r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 A _ N A M E = E r r o r e s   d e   l a   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   d e   c a c h    l l a m a d o s   d e s d e   e l   c  d i g o   d e   u s u a r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 A _ N A M E = P r o p o r c i  n   d e   a c i e r t o s   d e   l a   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 A _ H E L P = P r o p o r c i  n   d e   a c i e r t o s   l l a m a d o s   d e s d e   e l   c  d i g o   d e   u s u a r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ N A M E = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   d e   l a   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ H E L P = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   d e   l a   A P I   d e   c a c h  
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ N A M E = T a s a   d e   r e n o v a c i  n   d e   l a   A P I   d e   c a c h  
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ H E L P = N  m e r o   d e   e l e m e n t o s   q u e   s e   a g r e g a n   a   o   e l i m i n a n   d e   l a   c a c h    d e   A P I   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 A _ N A M E = R e i n i c i o s   d e   l a   a p l i c a c i  n 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 A _ H E L P = N  m e r o   d e   v e c e s   q u e   s e   h a   r e i n i c i a d o   l a   a p l i c a c i  n   d e s d e   q u e   s e   i n s t a l    e l   s e r v i d o r   W e b . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 A _ N A M E = A p l i c a c i o n e s   a c t i v a s 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 A _ H E L P = N  m e r o   d e   a p l i c a c i o n e s   W e b   a c t i v a s   a c t u a l m e n t e . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 A _ N A M E = T o t a l   d e   c o m p i l a c i o n e s 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 A _ H E L P = N  m e r o   d e   a r c h i v o s   d e   c  d i g o   f u e n t e   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x ,   o   . a s p x   c o m p i l a d o s   d i n  m i c a m e n t e . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 A _ N A M E = S o l i c i t u d e s   d e   d e p u r a c i  n 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   d e   d e p u r a c i  n   p r o c e s a d a s . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 A _ N A M E = E r r o r e s   p r o d u c i d o s   d u r a n t e   l a   c o m p i l a c i  n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   p r o d u c i d o s   d u r a n t e   l a   c o m p i l a c i  n . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 A _ N A M E = E r r o r e s   p r o d u c i d o s   d u r a n t e   l a   e j e c u c i  n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   p r o d u c i d o s   a l   p r o c e s a r   u n a   s o l i c i t u d . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 A _ N A M E = E r r o r e s   d u r a n t e   e l   p r e p r o c e s a m i e n t o 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   p r o d u c i d o s   d u r a n t e   e l   a n  l i s i s   y   l a   c o n f i g u r a c i  n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 A _ N A M E = T o t a l   d e   e r r o r e s 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   e r r o r e s . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 A _ N A M E = T o t a l   d e   e r r o r e s   p o r   s e g u n d o 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 A _ H E L P = T a s a   d e   e r r o r e s . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 A _ N A M E = E r r o r e s   n o   c o n t r o l a d o s   d u r a n t e   l a   e j e c u c i  n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   n o   c o n t r o l a d o s   p o r   e l   c  d i g o   d e   u s u a r i o ,   s i n o   p o r   e l   c o n t r o l a d o r   d e   e r r o r e s   p r e d e t e r m i n a d o . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 A _ N A M E = E r r o r e s   n o   c o n t r o l a d o s   d u r a n t e   l a   e j e c u c i  n   p o r   s e g u n d o 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 A _ H E L P = T a s a   d e   e r r o r e s   n o   c o n t r o l a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 A _ N A M E = E n t r a d a s   d e   l a   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 A _ H E L P = N  m e r o   a c t u a l   d e   e n t r a d a s   e n   l a   c a c h    d e   r e s u l t a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 A _ N A M E = A c i e r t o s   d e   l a   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t u d e s   p a r a   c a c h    d e   r e s u l t a d o s   d i s p o n i b l e s   d e s d e   l a   c a c h    d e   r e s u l t a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 A _ N A M E = E r r o r e s   d e   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t u d e s   p a r a   c a c h    d e   r e s u l t a d o s   n o   d i s p o n i b l e s   d e s d e   l a   c a c h    d e   r e s u l t a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 A _ N A M E = P r o p o r c i  n   d e   a c i e r t o s   d e   l a   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 A _ H E L P = P r o p o r c i  n   d e   a c i e r t o s   a   s o l i c i t u d e s   e n   s o l i c i t u d e s   p a r a   c a c h    d e   r e s u l t a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ N A M E = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   d e   l a   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ H E L P = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   d e   l a   c a c h    d e   r e s u l t a d o s 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ N A M E =  n d i c e   d e   m o v i m i e n t o   d e   c a c h    d e   r e s u l t a d o s 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ H E L P = N  m e r o   d e   e l e m e n t o s   q u e   s e   a g r e g a n   a   o   e l i m i n a n   d e   l a   c a c h    d e   r e s u l t a d o s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 A _ N A M E = R e c u e n t o   d e   i n s t a n c i a s   d e   c a n a l i z a c i  n 
 
 A S P N E T _ P I P E L I N E S _ 0 0 A _ H E L P = N  m e r o   d e   i n s t a n c i a s   d e   c a n a l i z a c i  n   a c t i v a s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 A _ N A M E = T o t a l   d e   b y t e s   d e   l a s   s o l i c i t u d e s 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 A _ H E L P = T a m a  o   t o t a l ,   e n   b y t e s ,   d e   t o d a s   l a s   s o l i c i t u d e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 A _ N A M E = T o t a l   d e   b y t e s   d e   s a l i d a   d e   l a   s o l i c i t u d 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 A _ H E L P = T a m a  o   t o t a l ,   e n   b y t e s ,   d e   r e s p u e s t a s   e n v i a d a s   a   u n   c l i e n t e .   N o   i n c l u y e   e n c a b e z a d o s   d e   r e s p u e s t a   H T T P   e s t  n d a r . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 A _ N A M E = S o l i c i t u d   d e   t i e m p o   d e   e j e c u c i  n 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 A _ H E L P = N  m e r o   d e   m i l i s e g u n d o s   q u e   t a r d    e n   e j e c u t a r s e   l a   s o l i c i t u d   m  s   r e c i e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 A _ N A M E = T i e m p o   d e   e s p e r a   d e   l a   s o l i c i t u d 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 A _ H E L P = N  m e r o   d e   m i l i s e g u n d o s   q u e   l a   s o l i c i t u d   m  s   r e c i e n t e   e s p e r    e n   l a   c o l a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 A _ N A M E = S o l i c i t u d e s   d e s c o n e c t a d a s 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   d e s c o n e c t a d a s   p o r   e r r o r e s   e n   l a   c o m u n i c a c i  n   o   p o r q u e   e l   u s u a r i o   t e r m i n  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 A _ N A M E = S o l i c i t u d e s   e n   e j e c u c i  n 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   q u e   s e   e j e c u t a n   a c t u a l m e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 A _ N A M E = E r r o r   d e   s o l i c i t u d e s 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   e r r o r e s   e n   l a s   s o l i c i t u d e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 A _ N A M E = S o l i c i t u d e s   n o   a u t o r i z a d a s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 A _ H E L P = N  m e r o   d e   e r r o r e s   e n   s o l i c i t u d e s   p o r   a c c e s o   n o   a u t o r i z a d o 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 A _ N A M E = S o l i c i t u d e s   n o   e n c o n t r a d a s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   p a r a   r e c u r s o s   q u e   n o   s e   p u e d e n   e n c o n t r a r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 A _ N A M E = S o l i c i t u d e s   e n   c o l a 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   e n   e s p e r a   d e   p r o c e s o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 A _ N A M E = S o l i c i t u d e s   r e c h a z a d a s 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 A _ H E L P = E l   n  m e r o   d e   s o l i c i t u d e s   s e   h a   r e c h a z a d o   p o r q u e   l a   c o l a   d e   s o l i c i t u d e s   e s t a b a   l l e n a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 A _ N A M E = S o l i c i t u d e s   c o r r e c t a s 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   e j e c u t a d a s   c o r r e c t a m e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 A _ N A M E = T i e m p o   d e   e s p e r a   a g o t a d o   p a r a   l a s   s o l i c i t u d e s 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   q u e   h a n   s u p e r a d o   e l   t i e m p o   d e   e s p e r a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 A _ N A M E = T o t a l   d e   s o l i c i t u d e s 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t u d e s   d e s d e   q u e   s e   i n i c i    l a   a p l i c a c i  n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 A _ N A M E = S o l i c i t u d e s   p o r   s e g . 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 A _ H E L P = N  m e r o   d e   s o l i c i t u d e s   e j e c u t a d a s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 A _ N A M E = C o n e x i o n e s   t o t a l e s   d e   s e s i  n   c o n   S Q L   S e r v e r 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   c o n e x i o n e s   c o n   S Q L   S e r v e r   u t i l i z a d a s   p o r   e l   e s t a d o   d e   s e s i  n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 A _ N A M E = C o n e x i o n e s   t o t a l e s   d e   s e s i  n   c o n   e l   s e r v i d o r   d e   e s t a d o 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   c o n e x i o n e s   c o n   e l   s e r v i d o r   d e   e s t a d o   u t i l i z a d a s   p o r   e l   e s t a d o   d e   s e s i  n 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 A _ N A M E = S e s i o n e s   d e t e n i d a s 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 A _ H E L P = N  m e r o   d e   s e s i o n e s   a b a n d o n a d a s   e x p l  c i t a m e n t e . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 A _ N A M E = S e s i o n e s   a c t i v a s 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 A _ H E L P = N  m e r o   a c t u a l   d e   s e s i o n e s   a c t i v a s . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 A _ N A M E = S e s i o n e s   c u y o   t i e m p o   d e   e s p e r a   h a   t e r m i n a d o 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 A _ H E L P = N  m e r o   d e   s e s i o n e s   q u e   a g o t a r o n   e l   t i e m p o   d e   e s p e r a . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 A _ N A M E = T o t a l   d e   s e s i o n e s 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   s e s i o n e s   d e s d e   q u e   s e   i n i c i    l a   a p l i c a c i  n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 A _ N A M E = S e s i o n e s   a b a n d o n a d a s   d e l   s e r v i d o r   d e   e s t a d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 A _ H E L P = N  m e r o   d e   s e s i o n e s   a b a n d o n a d a s   e x p l  c i t a m e n t e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 A _ N A M E = S e s i o n e s   a c t i v a s   d e l   s e r v i d o r   d e   e s t a d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 A _ H E L P = N  m e r o   a c t u a l   d e   s e s i o n e s   a c t i v a s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 A _ N A M E = S e s i o n e s   d e l   s e r v i d o r   d e   e s t a d o   q u e   s u p e r a r o n   e l   t i e m p o   d e   e s p e r a 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 A _ H E L P = N  m e r o   d e   s e s i o n e s   q u e   a g o t a r o n   e l   t i e m p o   d e   e s p e r a . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 A _ N A M E = S e s i o n e s   t o t a l e s   d e l   s e r v i d o r   d e   e s t a d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   s e s i o n e s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 A _ N A M E = E n t r a d a s   t o t a l e s   e n   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   e n   l a   m e m o r i a   c a c h    ( i n t e r n a s   y   a g r e g a d a s   p o r   e l   u s u a r i o ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 A _ N A M E = T o t a l   d e   v i s i t a s   d e   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   a c i e r t o s   d e   c a c h  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 A _ N A M E = T o t a l   e r r o r e s   d e   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   e r r o r e s   d e   c a c h  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 A _ N A M E = P r o p o r c i  n   t o t a l   d e   a c i e r t o s   d e   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 A _ H E L P = P r o p o r c i  n   d e   a c i e r t o s   d e   t o d a s   l a s   l l a m a d a s   d e   c a c h  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ N A M E = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   t o t a l e s   d e   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 A _ H E L P = P r o p o r c i  n   d e   b a s e   d e   a c i e r t o s   t o t a l e s   d e   c a c h  
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ N A M E = T a s a   d e   r e n o v a c i  n   t o t a l   d e   c a c h  
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 A _ H E L P = N  m e r o   d e   e l e m e n t o s   q u e   s e   a g r e g a n   a   o   e l i m i n a n   d e   l a   m e m o r i a   c a c h    p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 A _ N A M E = T r a n s a c c i o n e s   a n u l a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 A _ H E L P = N  m e r o   d e   t r a n s a c c i o n e s   a n u l a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 A _ N A M E = T r a n s a c c i o n e s   c o n f i r m a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 A _ H E L P = N  m e r o   d e   t r a n s a c c i o n e s   c o n f i r m a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 A _ N A M E = T r a n s a c c i o n e s   p e n d i e n t e s 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 A _ H E L P = N  m e r o   d e   t r a n s a c c i o n e s   e n   c u r s o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 A _ N A M E = T r a n s a c c i o n e s   p o r   s e g u n d o 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 A _ H E L P = T r a n s a c c i o n e s   i n i c i a d a s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 A _ N A M E = T o t a l   d e   t r a n s a c c i o n e s 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 A _ H E L P = N  m e r o   t o t a l   d e   t r a n s a c c i o n e s   d e s d e   q u e   c o m e n z    l a   a p l i c a c i  n . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 A _ N A M E = R e i n i c i o s   d e l   p r o c e s o   d e   t r a b a j o 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 A _ H E L P = N  m e r o   d e   v e c e s   q u e   s e   h a   r e i n i c i a d o   e n   e l   e q u i p o   u n   p r o c e s o   d e   t r a b a j o . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 A _ N A M E = P r o c e s o s   d e   t r a b a j o   e n   e j e c u c i  n 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 A _ H E L P = N  m e r o   d e   p r o c e s o s   d e   t r a b a j o   q u e   s e   e j e c u t a n   e n   e l   e q u i p o . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   F i n n i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 B _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 B _ H E L P = A S P . N E T   % A S P N E T _ V E R %   y l e i s e t   s u o r i t u s k y k y l a s k u r i t 
 
 O B J E C T _ 2 _ 0 0 B _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 B _ H E L P = A S P . N E T   % A S P N E T _ V E R %   s o v e l l u k s e n   s u o r i t u s k y k y l a s k u r i t 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 B _ N A M E = N i m e t t  m  t   p y y n n  t 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 B _ H E L P = N i m e t  n t    t o d e n n u s t a   k  y t t  v i e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 B _ N A M E = N i m e t t  m i    p y y n t  j    s e k u n n i s s a 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 B _ H E L P = N i m e t t  m i e n   t o d e n n u s p y y n t  j e n   m   r    s e k u n n i s s a 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 B _ N A M E = V  l i m u i s t i n   A P I - m e r k i n n  t 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 B _ H E L P = K  y t t  j  n   v  l i m u i s t i i n   l i s   m i e n   m e r k i n t  j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 B _ N A M E = O n n i s t u n e e t   A P I - v  l i m u i s t i h a u t 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 B _ H E L P = K  y t t  j  n   k o o d i s t a   t e h t y j e n   o n n i s t u n e i d e n   v  l i m u i s t i h a k u j e n   m   r  . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 B _ N A M E = E p  o n n i s t u n e e t   A P I - v  l i m u i s t i h a u t 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 B _ H E L P = K  y t t  j  n   k o o d i s t a   t e h t y j e n   e p  o n n i s t u n e i d e n   v  l i m u i s t i h a k u j e n   m   r  . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 B _ N A M E = A P I - v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 B _ H E L P = K  y t t  j  n   k o o d i s t a   t e h t y j e n   h a k u j e n   o n n i s t u m i s s u h d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ N A M E = A P I - v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ H E L P = A P I - v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ N A M E = V  l i m u i s t i n   A P I - t o i m i e n   n o p e u s 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ H E L P = A P I - v  l i m u i s t i l l e   t e h t y j e n   l i s  y s t e n   j a   p o i s t o j e n   m   r    s e k u n n i s s a . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 B _ N A M E = S o v e l l u s t e n   u u d e l l e e n k  y n n i s t y k s e t 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 B _ H E L P = S o v e l l u k s e n   u u d e l l e e n k  y n n i s t y s t e n   m   r    W e b - p a l v e l i m e n   t o i m i n n a n   a i k a n a . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 B _ N A M E = K  y n n i s s    o l e v a t   s o v e l l u k s e t 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 B _ H E L P = P a r h a i l l a a n   k  y n n i s s    o l e v i e n   W e b - s o v e l l u s t e n   m   r  . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 B _ N A M E = K   n n  k s i    y h t e e n s  
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 B _ H E L P = D y n a a m i s e s t i   k   n n e t t y j e n   . a s a x - ,   . a s c x - ,   . a s h x - ,   . a s m x -   t a i   . a s p x - l  h d e t i e d o s t o j e n   m   r  . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 B _ N A M E = V i r h e e n k o r j a u s p y y n n  t 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 B _ H E L P = K  s i t e l t y j e n   v i r h e e n k o r j a u s p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 B _ N A M E = V i r h e e t   k   n t  m i s e n   a i k a n a 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 B _ H E L P = K   n t  m i s e n   a i k a n a   i l m e n n e e t   v i r h e e t . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 B _ N A M E = V i r h e e t   s u o r i t u k s e n   a i k a n a 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 B _ H E L P = P y y n n  n   k  s i t t e l y n   a i k a n a   i l m e n n e e t   v i r h e e t . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 B _ N A M E = V i r h e e t   e s i k  s i t t e l y n   a i k a n a 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 B _ H E L P = J  s e n n y k s e n   j a   m   r i t y k s e n   a i k a n a   i l m e n n e e t   v i r h e e t . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 B _ N A M E = V i r h e i t    y h t e e n s  
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 B _ H E L P = I l m e n n e i d e n   v i r h e i d e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 B _ N A M E = V i r h e i t    s e k u n n i s s a   y h t e e n s  
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 B _ H E L P = V i r h e i d e n   i l m e n e m i s n o p e u s . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 B _ N A M E = K  s i t t e l e m  t t  m  t   v i r h e e t   s u o r i t u k s e n   a i k a n a 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 B _ H E L P = S e l l a i s t e n   v i r h e i d e n   m   r  ,   j o i t a   k  y t t  j  n   k o o d i   e i   k  s i t e l l y t ,   m u t t a   v i r h e i d e n   o l e t u s k  s i t t e l i j    k  s i t t e l i . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 B _ N A M E = S u o r i t u k s e n   a i k a n a   k  s i t t e l e m  t t  m  t   v i r h e e t   s e k u n n i s s a 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 B _ H E L P = K  s i t t e l e m  t t  m i e n   v i r h e i d e n   m   r    s e k u n n i s s a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 B _ N A M E = T u l o s t e v  l i m u i s t i n   m e r k i n n  t 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i n   m e r k i n t  j e n   n y k y i n e n   m   r  . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 B _ N A M E = O n n i s t u n e e t   t u l o s t e v  l i m u i s t i h a u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i l l e   t e h t y j e n   v a s t a t t u j e n   p y y n t  j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 B _ N A M E = E p  o n n i s t u n e e t   t u l o s t e v  l i m u i s t i h a u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i l l e   t e h t y j e n   v a s t a a m a t t o m i e n   p y y n t  j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 B _ N A M E = T u l o s t e v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i n   h a k u p y y n t  j e n   o n n i s t u m i s s u h d e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ N A M E = T u l o s t e v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ N A M E = T u l o s t e v  l i m u i s t i l l e   t e h t y j e n   t o i m i e n   n o p e u s 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ H E L P = T u l o s t e v  l i m u i s t i l l e   t e h t y j e n   l i s  y s t e n   j a   p o i s t o j e n   m   r    s e k u n n i s s a . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 B _ N A M E = P e r  k k  i s e s i i n t y m i e n 
 
 A S P N E T _ P I P E L I N E S _ 0 0 B _ H E L P = A k t i i v i s t e n   p e r  k k  i s e s i i n t y m i e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 B _ N A M E = V a s t a a n o t e t t u j e n   p y y n t  t a v u j e n   k o k o n a i s m   r  
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 B _ H E L P = K a i k k i e n   p y y n t  j e n   k o k o n a i s k o k o   t a v u i n a . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 B _ N A M E = L  h e t e t t y j e n   p y y n t  t a v u j e n   k o k o n a i s m   r  
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 B _ H E L P = A s i a k k a a l l e   l  h e t e t t y j e n   v a s t a u s t e n   k o k o n a i s k o k o   t a v u i n a .   T a v a l l i s e t   H T T P - v a s t a u s o t s i k o t   e i v  t   s i s  l l y   t  h  n   k o k o o n . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 B _ N A M E = P y y n n  n   s u o r i t u s a i k a 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 B _ H E L P = V i i m e i s i m m  n   p y y n n  n   s u o r i t t a m i s e e n   k u l u n u t   a i k a   m i l l i s e k u n t e i n a . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 B _ N A M E = P y y n n  n   o d o t u s a i k a 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 B _ H E L P = V i i m e i s i m m  n   p y y n n  n   o d o t u s a i k a   j o n o s s a   m i l l i s e k u n t e i n a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 B _ N A M E = K a t k a i s t u t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 B _ H E L P = T i e t o l i i k e n n e v i r h e i d e n   v u o k s i   k a t k a i s t u j e n   t a i   k  y t t  j  n   k e s k e y t t  m i e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 B _ N A M E = S u o r i t e t t a v a t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 B _ H E L P = P a r h a i l l a a n   s u o r i t e t t a v i e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 B _ N A M E = E p  o n n i s t u n e e t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 B _ H E L P = E p  o n n i s t u n e i d e n   p y y n t  j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 B _ N A M E = P y y n n  t ,   j o i h i n   e i   o l e   o i k e u k s i a 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 B _ H E L P = R i i t t  m  t t  m i e n   o i k e u k s i e n   v u o k s i   e p  o n n i s t u n e i d e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 B _ N A M E = L  y t y m  t t  m  t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 B _ H E L P = N i i d e n   p y y n t  j e n   m   r  ,   j o t k a   t e h t i i n   r e s u r s s e i l l e ,   j o i t a   e i   l  y t y n y t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 B _ N A M E = J o n o s s a   o l e v a t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 B _ H E L P = K  s i t t e l y    o d o t t a v i e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 B _ N A M E = H y l  t y t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 B _ H E L P = P y y n t  j o n o n   t  y t t y m i s e n   v u o k s i   h y l  t t y j e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 B _ N A M E = O n n i s t u n e e t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 B _ H E L P = O n n i s t u n e e s t i   s u o r i t e t t u j e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 B _ N A M E = A i k a k a t k a i s t u t   p y y n n  t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 B _ H E L P = A i k a k a t k a i s t u j e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 B _ N A M E = P y y n t  j    y h t e e n s  
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 B _ H E L P = S o v e l l u k s e n   k  y n n i s t  m i s e n   j  l k e e n   t e h t y j e n   p y y n t  j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 B _ N A M E = P y y n t  j    s e k u n n i s s a 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 B _ H E L P = S u o r i t e t t u j e n   p y y n t  j e n   m   r    s e k u n t i a   k o h t i . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 B _ N A M E = I s t u n n o n   S Q L   S e r v e r   - y h t e y k s i e n   k o k o n a i s m   r  
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 B _ H E L P = K  y t  s s    o l e v i e n   S Q L   S e r v e r   - y h t e y k s i e n   l u k u m   r    i s t u n t o t i l a n   m u k a a n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 B _ N A M E = I s t u n n o n   S t a t e   S e r v e r   - y h t e y k s i e n   k o k o n a i s m   r  
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 B _ H E L P = K  y t  s s    o l e v i e n   S t a t e   S e r v e r   - y h t e y k s i e n   k o k o n a i s m   r    i s t u n t o t i l a n   m u k a a n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 B _ N A M E = J  t e t y t   i s t u n n o t 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 B _ H E L P = E k s p l i t i i t t i s e s t i   j  t e t t y j e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 B _ N A M E = A k t i i v i s e t   i s t u n n o t 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 B _ H E L P = P a r h a i l l a a n   a k t i i v i s e n a   o l e v i e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 B _ N A M E = A i k a k a t k a i s t u t   i s t u n n o t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 B _ H E L P = A i k a k a t k a i s t u j e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 B _ N A M E = I s t u n t o j a   y h t e e n s  
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 B _ H E L P = S o v e l l u k s e n   k  y n n i s t  m i s e n   j  l k e i s t e n   i s t u n t o j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 B _ N A M E = J  t e t y t   t i l a p a l v e l i m e n   i s t u n n o t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 B _ H E L P = E k s p l i s i i t t i s e s t i   j  t e t t y j e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 B _ N A M E = A k t i i v i s e t   t i l a p a l v e l i m e n   i s t u n n o t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 B _ H E L P = N y k y i s t e n   a k t i i v i s t e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 B _ N A M E = A i k a k a t k a i s t u t   t i l a p a l v e l i m e n   i s t u n n o t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 B _ H E L P = A i k a k a t k a i s t u j e n   i s t u n t o j e n   m   r  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 B _ N A M E = T i l a p a l v e l i m e n   i s t u n t o j e n   k o k o n a i s m   r  
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 B _ H E L P = I s t u n t o j e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 B _ N A M E = V  l i m u i s t i n   m e r k i n t  j    y h t e e n s  
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 B _ H E L P = V  l i m u i s t i n   m e r k i n t  j e n   ( s e k    s i s  i s e t   e t t    k  y t t  j  n   l i s   m  t )   y h t e i s m   r  
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 B _ N A M E = V  l i m u i s t i h a k u j e n   o n n i s t u m i s t e n   k o k o n a i s m   r  
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 B _ H E L P = V  l i m u i s t i s t a   t e h t y j e n   h a k u j e n   o n n i s t u m i s t e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 B _ N A M E = V  l i m u i s t i h a k u j e n   e p  o n n i s t u m i s t e n   k o k o n a i s m   r  
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 B _ H E L P = V  l i m u i s t i s t a   t e h t y j e n   h a k u j e n   e p  o n n i s t u m i s t e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 B _ N A M E = V  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 B _ H E L P = K a i k k i e n   k u t s u t t u j e n   v  l i m u i s t i h a k u j e n   o n n i s t u m i s s u h d e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ N A M E = V  l i m u i s t i h a k u j e n   k o k o n a i s o n n i s t u m i s s u h d e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 B _ H E L P = V  l i m u i s t i h a k u j e n   k o k o n a i s o n n i s t u m i s s u h d e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ N A M E = V  l i m u i s t i l l e   t e h t y j e n   t o i m i e n   n o p e u s 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 B _ H E L P = V  l i m u i s t i l l e   t e h t y j e n   l i s  y s t e n   j a   p o i s t o j e n   m   r    s e k u n n i s s a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 B _ N A M E = K e s k e y t e t y t   t a p a h t u m a t 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 B _ H E L P = K e s k e y t e t t y j e n   t a p a h t u m i e n   m   r  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 B _ N A M E = M   r i t e t y t   t a p a h t u m a t 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 B _ H E L P = M   r i t e t t y j e n   t a p a h t u m i e n   m   r  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 B _ N A M E = O d o t t a v a t   t a p a h t u m a t 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 B _ H E L P = K  y n n i s s    o l e v i e n   t a p a h t u m i e n   m   r  . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 B _ N A M E = T a p a h t u m i a   s e k u n n i s s a 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 B _ H E L P = K  y n n i s t e t t y j    t a p a h t u m i a   s e k u n n i s s a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 B _ N A M E = T a p a h t u m i a   y h t e e n s  
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 B _ H E L P = S o v e l l u k s e n   k  y n n i s t  m i s e n   j  l k e i s t e n   t a p a h t u m i e n   k o k o n a i s m   r  . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 B _ N A M E = T y  p r o s e s s i n   u u d e l l e e n k  y n n i s t y k s e t 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 B _ H E L P = K o n e e n   t y  p r o s e s s i n   u u d e l l e e n k  y n n i s t y s t e n   m   r  . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 B _ N A M E = K  y n n i s s    o l e v a t   t y  p r o s e s s i t 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 B _ H E L P = K o n e e s s a   k  y n n i s s    o l e v i e n   t y  p r o s e s s i e n   m   r  . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   F r e n c h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 C _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 C _ H E L P = C o m p t e u r s   d e   p e r f o r m a n c e   g l o b a u x   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 C _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 C _ H E L P = C o m p t e u r s   d e   p e r f o r m a n c e   d ' a p p l i c a t i o n   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 C _ N A M E = D e m a n d e s   a n o n y m e s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   q u i   u t i l i s e n t   l ' a u t h e n t i f i c a t i o n   a n o n y m e . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 C _ N A M E = D e m a n d e s   a n o n y m e s / s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   a n o n y m e s   d ' a u t h e n t i f i c a t i o n   p a r   s e c o n d e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 C _ N A M E = E n t r  e s   A P I   d u   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d ' e n t r  e s   d a n s   l e   c a c h e   a j o u t  e s   p a r   l ' u t i l i s a t e u r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 C _ N A M E = A c c  s   A P I   a u   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 C _ H E L P = N o m b r e   d ' a c c  s   a u   c a c h e      p a r t i r   d u   c o d e   u t i l i s a t e u r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 C _ N A M E = A c c  s   A P I   a u   c a c h e   s a n s   r  s u l t a t 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 C _ H E L P = N o m b r e   d ' a c c  s   a u   c a c h e   s a n s   r  s u l t a t   a p p e l  s      p a r t i r   d u   c o d e   u t i l i s a t e u r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 C _ N A M E = T a u x   d ' a c c  s   A P I   a u   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 C _ H E L P = T a u x   d ' a c c  s   a p p e l  s      p a r t i r   d u   c o d e   u t i l i s a t e u r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ N A M E = B a s e   d u   t a u x   d ' a c c  s   A P I   a u   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ H E L P = B a s e   d u   t a u x   d ' a c c  s   A P I   a u   c a c h e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ N A M E = T a u x   d e   r e n d e m e n t   d e   l ' A P I   d u   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ H E L P = N o m b r e   d ' a j o u t s   e t   d e   s u p p r e s s i o n s   d a n s   l e   c a c h e   A P I   p a r   s e c o n d e . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 C _ N A M E = R e d  m a r r a g e s   d e   l ' a p p l i c a t i o n 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 C _ H E L P = N o m b r e   d e   f o i s   o    l ' a p p l i c a t i o n   a    t    r e d  m a r r  e   a u   c o u r s   d e   l a   d u r  e   d e   v i e   d u   s e r v e u r   W e b . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 C _ N A M E = E x  c u t i o n   d e s   a p p l i c a t i o n s 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 C _ H E L P = N o m b r e   d ' a p p l i c a t i o n s   W e b   e n   c o u r s   d ' e x  c u t i o n . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 C _ N A M E = T o t a l   c o m p i l a t i o n s 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 C _ H E L P = N o m b r e   d e   f i c h i e r s   s o u r c e s   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   o u   . a s p x   c o m p i l  s   d y n a m i q u e m e n t . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 C _ N A M E = D e m a n d e s   d e   d  b o g a g e 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   d e   d  b o g a g e   t r a i t  e s . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 C _ N A M E = E r r e u r s   l o r s   d e   l a   c o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 C _ H E L P = N o m b r e   d ' e r r e u r s   q u i   s e   s o n t   p r o d u i t e s   l o r s   d e   l a   c o m p i l a t i o n . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 C _ N A M E = E r r e u r s   l o r s   d e   l ' e x  c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 C _ H E L P = N o m b r e   d ' e r r e u r s   q u i   s e   s o n t   p r o d u i t e s   l o r s   d u   t r a i t e m e n t   d ' u n e   d e m a n d e . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 C _ N A M E = E r r e u r s   l o r s   d u   p r  t r a i t e m e n t 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 C _ H E L P = N o m b r e   d ' e r r e u r s   q u i   s e   s o n t   p r o d u i t e s   l o r s   d e   l ' a n a l y s e   e t   d e   l a   c o n f i g u r a t i o n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 C _ N A M E = T o t a l   e r r e u r s 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 C _ H E L P = N o m b r e   t o t a l   d ' e r r e u r s . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 C _ N A M E = T o t a l   e r r e u r s / s 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 C _ H E L P = T a u x   d ' e r r e u r s . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 C _ N A M E = E r r e u r s   n o n   g  r  e s   l o r s   d e   l ' e x  c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 C _ H E L P = N o m b r e   d ' e r r e u r s   n o n   g  r  e s   p a r   l e   c o d e   u t i l i s a t e u r ,   m a i s   p a r   l e   g e s t i o n n a i r e   d ' e r r e u r s   p a r   d  f a u t . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 C _ N A M E = E r r e u r s   n o n   g  r  e s   l o r s   d e   l ' e x  c u t i o n / s 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 C _ H E L P = T a u x   d ' e r r e u r s   n o n   g  r  e s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 C _ N A M E = E n t r  e s   d a n s   l e   c a c h e   d e   s o r t i e 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 C _ H E L P = N o m b r e   a c t u e l   d ' e n t r  e s   d a n s   l e   c a c h e   d e   s o r t i e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 C _ N A M E = A c c  s   a u   c a c h e   d e   s o r t i e 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   d e m a n d e s   p o u v a n t    t r e   m i s e s   d a n s   l e   c a c h e   d e   s o r t i e   p r i s e s   e n   c h a r g e      p a r t i r   d u   c a c h e   d e   s o r t i e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 C _ N A M E = A c c  s   a u   c a c h e   d e   s o r t i e   s a n s   r  s u l t a t 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   d e m a n d e s   p o u v a n t    t r e   m i s e s   d a n s   l e   c a c h e   d e   s o r t i e   n o n   p r i s e s   e n   c h a r g e      p a r t i r   d u   c a c h e   d e   s o r t i e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 C _ N A M E = T a u x   d ' a c c  s   a u   c a c h e   d e   s o r t i e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 C _ H E L P = T a u x   d ' a c c  s   p o u r   d e m a n d e r   d e s   d e m a n d e s   p o u v a n t    t r e   m i s e s   d a n s   l e   c a c h e   d e   s o r t i e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ N A M E = B a s e   d u   t a u x   d ' a c c  s   a u   c a c h e   d e   s o r t i e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ H E L P = B a s e   d u   t a u x   d ' a c c  s   a u   c a c h e   d e   s o r t i e 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ N A M E = T a u x   d e   r e n d e m e n t   d u   c a c h e   d e   s o r t i e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ H E L P = N o m b r e   d ' a j o u t s   e t   d e   s u p p r e s s i o n s   d a n s   l e   c a c h e   d e   s o r t i e   p a r   s e c o n d e . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 C _ N A M E = N o m b r e   d ' i n s t a n c e s   d e   p i p e l i n e 
 
 A S P N E T _ P I P E L I N E S _ 0 0 C _ H E L P = N o m b r e   d ' i n s t a n c e s   d e   p i p e l i n e   a c t i v e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 C _ N A M E = T o t a l   d e m a n d e s   e n t r a n t e s   e n   o c t e t s 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 C _ H E L P = T a i l l e   t o t a l e ,   e n   o c t e t s ,   d e   t o u t e s   l e s   d e m a n d e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 C _ N A M E = T o t a l   d e m a n d e s   s o r t a n t e s   e n   o c t e t s 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 C _ H E L P = T a i l l e   t o t a l e ,   e n   o c t e t s ,   d e s   r  p o n s e s   e n v o y  e s      u n   c l i e n t .   N e   c o m p r e n d   p a s   l e s   e n - t  t e s   d e   r  p o n s e   H T T P   s t a n d a r d . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 C _ N A M E = D u r  e   d ' e x  c u t i o n   d e   l a   d e m a n d e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 C _ H E L P = N o m b r e   d e   m i l l i s e c o n d e s   n  c e s s a i r e s   p o u r   e x  c u t e r   l a   d e m a n d e   l a   p l u s   r  c e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 C _ N A M E = D u r  e   d ' a t t e n t e   d e   l a   d e m a n d e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 C _ H E L P = N o m b r e   d e   m i l l i s e c o n d e s   p e n d a n t   l e s q u e l l e s   l a   d e m a n d e   l a   p l u s   r  c e n t e   a   a t t e n d u   d a n s   l a   f i l e   d ' a t t e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 C _ N A M E = D e m a n d e s   d  c o n n e c t  e s 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   d  c o n n e c t  e s   e n   r a i s o n   d ' e r r e u r s   d e   c o m m u n i c a t i o n   o u   d ' i n t e r r u p t i o n s   d e   l ' u t i l i s a t e u r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 C _ N A M E = D e m a n d e s   e n   c o u r s   d ' e x  c u t i o n 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   e n   c o u r s   d ' e x  c u t i o n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 C _ N A M E = D e m a n d e s    c h o u  
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   d e m a n d e s   q u i   o n t    c h o u  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 C _ N A M E = D e m a n d e s   n o n   a u t o r i s  e s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   q u i   o n t    c h o u    e n   r a i s o n   d ' u n   a c c  s   n o n   a u t o r i s  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 C _ N A M E = D e m a n d e s   n o n   t r o u v  e s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   d e   r e s s o u r c e s   i n t r o u v a b l e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 C _ N A M E = D e m a n d e s   e n   a t t e n t e 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   e n   a t t e n t e   d e   t r a i t e m e n t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 C _ N A M E = D e m a n d e s   r e j e t  e s 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   r e j e t  e s ,   c a r   l a   f i l e   d ' a t t e n t e   d e s   d e m a n d e s    t a i t   p l e i n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 C _ N A M E = D e m a n d e s   r  u s s i e s 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   q u i   o n t    t    e x  c u t  e s   a v e c   s u c c  s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 C _ N A M E = D e m a n d e s   d  p a s s  e s 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   q u i   o n t   d  p a s s    l e   d  l a i   d ' a t t e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 C _ N A M E = D e m a n d e s   t o t a l e s 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   d e m a n d e s   d e p u i s   l e   d  m a r r a g e   d e   l ' a p p l i c a t i o n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 C _ N A M E = D e m a n d e s / s 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 C _ H E L P = N o m b r e   d e   d e m a n d e s   e x  c u t  e s   p a r   s e c o n d e . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 C _ N A M E = N o m b r e   t o t a l   d e   c o n n e x i o n s      l a   s e s s i o n   S Q L   S e r v e r . 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   c o n n e x i o n s   a u   S Q L   S e r v e r   u t i l i s    p a r   l '  t a t   d e   s e s s i o n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 C _ N A M E = N o m b r e   t o t a l   d e   c o n n e x i o n s   a u   s e r v e u r   d '  t a t   d e   s e s s i o n 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   c o n n e x i o n s   a u   s e r v e u r   d '  t a t   u t i l i s    p a r   l '  t a t   d e   s e s s i o n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 C _ N A M E = S e s s i o n s   a b a n d o n n  e s 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   q u i   o n t    t    e x p l i c i t e m e n t   a b a n d o n n  e s . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 C _ N A M E = S e s s i o n s   a c t i v e s 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   a c t u e l l e m e n t   a c t i v e s . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 C _ N A M E = S e s s i o n s   d  p a s s  e s 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   d o n t   l e   d  l a i   d ' a t t e n t e   a    t    d  p a s s  . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 C _ N A M E = T o t a l   s e s s i o n s 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   s e s s i o n s   d e p u i s   l e   d  m a r r a g e   d e   l ' a p p l i c a t i o n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 C _ N A M E = S e s s i o n s   a b a n d o n n  e s   d u   s e r v e u r   d '  t a t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   q u i   o n t    t    e x p l i c i t e m e n t   a b a n d o n n  e s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 C _ N A M E = S e s s i o n s   a c t i v e s   d u   s e r v e u r   d '  t a t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   a c t u e l l e m e n t   a c t i v e s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 C _ N A M E = D  p a s s e m e n t   d u   d  l a i   d ' a t t e n t e   d u   s e r v e u r   d '  t a t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 C _ H E L P = N o m b r e   d e   s e s s i o n s   d o n t   l e   d  l a i   d ' a t t e n t e   a    t    d  p a s s  . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 C _ N A M E = T o t a l   s e s s i o n s   d u   s e r v e u r   d '  t a t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   s e s s i o n s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 C _ N A M E = T o t a l   e n t r  e s   d a n s   l e   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d ' e n t r  e s   d a n s   l e   c a c h e   ( i n t e r n e s   e t   a j o u t  e s   p a r   l ' u t i l i s a t e u r ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 C _ N A M E = T o t a l   a c c  s   a u   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d ' a c c  s   d a n s   l e   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 C _ N A M E = T o t a l   a c c  s   a u   c a c h e   s a n s   r  s u l t a t 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e s   a c c  s   a u   c a c h e   s a n s   r  s u l t a t . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 C _ N A M E = T o t a l   t a u x   d ' a c c  s   a u   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 C _ H E L P = T a u x   d ' a c c  s      p a r t i r   d e   t o u s   l e s   a p p e l s   d u   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ N A M E = B a s e   d u   t a u x   d ' a c c  s   a u   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 C _ H E L P = B a s e   d u   t a u x   d ' a c c  s   a u   c a c h e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ N A M E = T a u x   d e   r e n d e m e n t   t o t a l   d u   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 C _ H E L P = N o m b r e   t o t a l   d ' a j o u t s   e t   d e   s u p p r e s s i o n s   d a n s   l e   c a c h e   p a r   s e c o n d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 C _ N A M E = T r a n s a c t i o n s   i n t e r r o m p u e s 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 C _ H E L P = N o m b r e   d e   t r a n s a c t i o n s   i n t e r r o m p u e s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 C _ N A M E = T r a n s a c t i o n s   v a l i d  e s 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 C _ H E L P = N o m b r e   d e   t r a n s a c t i o n s   v a l i d  e s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 C _ N A M E = T r a n s a c t i o n s   e n   a t t e n t e 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 C _ H E L P = N o m b r e   d e   t r a n s a c t i o n s   e n   c o u r s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 C _ N A M E = T r a n s a c t i o n s / s 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 C _ H E L P = T r a n s a c t i o n s   d  m a r r  e s   p a r   s e c o n d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 C _ N A M E = T o t a l   t r a n s a c t i o n s 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 C _ H E L P = N o m b r e   t o t a l   d e   t r a n s a c t i o n s   d e p u i s   l e   d  m a r r a g e   d e   l ' a p p l i c a t i o n . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 C _ N A M E = R e d  m a r r a g e s   d u   p r o c e s s u s   d e   t r a i t e m e n t 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 C _ H E L P = N o m b r e   d e   f o i s   o    u n   p r o c e s s u s   d e   t r a i t e m e n t   a   r e d  m a r r    s u r   l ' o r d i n a t e u r . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 C _ N A M E = P r o c e s s u s   d e   t r a i t e m e n t   e n   c o u r s 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 C _ H E L P = N o m b r e   d e   p r o c e s s u s   d e   t r a i t e m e n t   e n   c o u r s   d ' e x  c u t i o n   s u r   l ' o r d i n a t e u r . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   H e b r e w 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 D _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 D _ H E L P =         A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 D _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 0 D _ H E L P =         A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 D _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 D _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 D _ H E L P =       / 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 D _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 D _ H E L P =             -   . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 D _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 D _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 D _ H E L P =         ,         . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 D _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ H E L P =           A P I   
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ H E L P =       A P I       . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 D _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 D _ H E L P =                   . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 D _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 D _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 D _ H E L P =         . a s a x ,   . a s c x ,   . a s h x ,   . a s m x ,     . a s p x         . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 D _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 D _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 D _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 D _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 D _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 D _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 D _ H E L P =     . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 D _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 D _ H E L P =             ,               . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 D _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 D _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 D _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 D _ H E L P =                     . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 D _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 D _ H E L P =                       . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 D _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 D _ H E L P =                       . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ H E L P =           
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 D _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 0 0 D _ H E L P =         P i p e l i n e . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 D _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 D _ H E L P =   ,   ,       . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 D _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 D _ H E L P =   ,   ,           .                   H T T P . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 D _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 D _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 D _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 D _ H E L P =                 -   . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 D _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 D _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 D _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 D _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 D _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 D _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 D _ H E L P =               . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 D _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 D _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 D _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 D _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 D _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 D _ H E L P =           S Q L         . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 D _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 D _ H E L P = T h e   t o t a l   n u m b e r   o f   c o n n e c t i o n s   t o   t h e   S t a t e   S e r v e r   u s e d   b y   s e s s i o n   s t a t e                 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 D _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 D _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 D _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 D _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 D _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 D _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 D _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 D _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 D _ H E L P =       . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 D _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 D _ H E L P =           (             -   ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 D _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 D _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 D _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 D _ H E L P =           . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 D _ H E L P =           
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 D _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 D _ H E L P =     . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 D _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 D _ H E L P =     . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 D _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 D _ H E L P =         . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 D _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 D _ H E L P =     . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 D _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 D _ H E L P =             . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 D _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 D _ H E L P =       W o r k e r       . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 D _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 D _ H E L P =     W o r k e r     . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   H u n g a r i a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 0 E _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 0 E _ H E L P = A S P . N E T   % A S P N E T _ V E R %   g l o b  l i s   t e l j e s  t m  n y s z  m l  l  k 
 
 O B J E C T _ 2 _ 0 0 E _ N A M E = A S P . N E T   % A S P N E T _ V E R % - s   v e r z i  j    a l k a l m a z  s o k 
 
 O B J E C T _ 2 _ 0 0 E _ H E L P = A S P . N E T   % A S P N E T _ V E R % - s   v e r z i  j    a l k a l m a z  s o k r a   v o n a t k o z    t e l j e s  t m  n y s z  m l  l  k 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 E _ N A M E = N  v t e l e n   k  r e l m e k   s z  m a 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 0 E _ H E L P = A   n  v t e l e n   h i t e l e s  t  s t   a l k a l m a z    k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 E _ N A M E = N  v t e l e n   k  r e l m e k   g y a k o r i s  g a   ( k  r e l e m / m p ) 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 0 E _ H E L P = A   n  v t e l e n   h i t e l e s  t  s q  k  r e l m e k   m  s o d p e r c e n k  n t i   s z  m a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r b e l i   b e j e g y z  s e k   s z  m a 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 0 E _ H E L P = A   g y o r s  t  t  r b a   a   f e l h a s z n  l     l t a l   h o z z  a d o t t   b e j e g y z  s e k    s s z e s  t e t t   s z  m a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r b e l i   t a l  l a t o k   s z  m a 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 0 E _ H E L P = A   f e l h a s z n  l  i   k  d b  l   k e z d e m  n y e z e t t    s   t a l  l a t o t   e r e d m  n y e z Q  g y o r s  t  t  r b e l i   k e r e s  s e k   s z  m a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r b e l i   s i k e r t e l e n   k e r e s  s e k   s z  m a 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 0 E _ H E L P = A   f e l h a s z n  l  i   k  d b  l   k e z d e m  n y e z e t t   s i k e r t e l e n   g y o r s  t  t  r b e l i   k e r e s  s e k   s z  m a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r   t a l  l a t i   a r  n y a 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 0 E _ H E L P = A   f e l h a s z n  l  i   k  d b  l   k e z d e m  n y e z e t t   g y o r s  t  t  r b e l i   k e r e s  s e k   t a l  l a t i   a r  n y a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ H E L P = A P I - g y o r s  t  t  r   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ N A M E = A P I - g y o r s  t  t  r   f o r g a l m i   s e b e s s  g e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ H E L P = A z   A P I - g y o r s  t  t  r b a n   v  g r e h a j t o t t   h o z z  a d  s i    s   e l t  v o l  t  s i   m qv e l e t e k   m  s o d p e r c e n k  n t i   s z  m a . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 E _ N A M E = A l k a l m a z  s -  j r a i n d  t  s o k   s z  m a 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 0 E _ H E L P = A z   a l k a l m a z  s    j r a i n d  t  s a i n a k   s z  m a   a   w e b k i s z o l g  l     l e t t a r t a m a   s o r  n . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 E _ N A M E = F u t    a l k a l m a z  s o k   s z  m a 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 0 E _ H E L P = A   j e l e n l e g   f u t    w e b e s   a l k a l m a z  s o k   s z  m a . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 E _ N A M E = F o r d  t  s o k   s z  m a    s s z e s e n 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 0 E _ H E L P = A   d i n a m i k u s a n   f o r d  t o t t   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   v a g y   . a s p x   f o r r  s f  j l o k   s z  m a . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 E _ N A M E = H i b a k e r e s  s i   k  r e l m e k   s z  m a 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 0 E _ H E L P = A   f e l d o l g o z o t t   h i b a k e r e s  s i   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 E _ N A M E = F o r d  t  s i   h i b  k   s z  m a 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 0 E _ H E L P = A   f o r d  t  s   s o r  n   b e k  v e t k e z e t t   h i b  k   s z  m a . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 E _ N A M E = V  g r e h a j t  s i   h i b  k   s z  m a 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 0 E _ H E L P = E g y   k  r e l e m   f e l d o l g o z  s a   s o r  n   b e k  v e t k e z e t t   h i b  k   s z  m a . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 E _ N A M E = E l Qf e l d o l g o z  s i   h i b  k   s z  m a 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 0 E _ H E L P = A z   e l e m z  s    s   a   k o n f i g u r  c i    s o r  n   b e k  v e t k e z e t t   h i b  k   s z  m a . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 E _ N A M E = H i b  k   s z  m a    s s z e s e n 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 0 E _ H E L P = A   b e k  v e t k e z e t t   h i b  k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 E _ N A M E = H i b  k   g y a k o r i s  g a   ( h i b a / m p ) 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 0 E _ H E L P = A   b e k  v e t k e z e t t   h i b  k   g y a k o r i s  g a . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 E _ N A M E = K e z e l e t l e n   f u t  s i d e j q  h i b  k   s z  m a 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 0 E _ H E L P = A   f e l h a s z n  l  i   k  d    l t a l   n e m ,   d e   a z   a l a p  r t e l m e z e t t   h i b a k e z e l Q   l t a l   k e z e l t   h i b  k   s z  m a . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 E _ N A M E = K e z e l e t l e n   f u t  s i d e j q  h i b  k   g y a k o r i s  g a   ( h i b a / m p ) 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 0 E _ H E L P = A   k e z e l e t l e n   h i b  k   g y a k o r i s  g a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r b e l i   b e j e g y z  s e k   s z  m a 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 0 E _ H E L P = A   k i m e n e t i   g y o r s  t  t  r b a n   l e v Q  b e j e g y z  s e k   p i l l a n a t n y i   s z  m a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r b e l i   t a l  l a t o k   s z  m a 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 0 E _ H E L P = A z    s s z e s   o l y a n ,   k i m e n e t i   g y o r s  t  t  r   h a s z n  l a t  v a l   t e l j e s  t h e t Q  k  r e l e m ,   a m e l y e t   s i k e r  l t   a   k i m e n e t i   g y o r s  t  t  r b  l   k i s z o l g  l n i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r b e l i   s i k e r t e l e n   k e r e s  s e k   s z  m a 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 0 E _ H E L P = A z    s s z e s   o l y a n ,   k i m e n e t i   g y o r s  t  t  r   h a s z n  l a t  v a l   t e l j e s  t h e t Q  k  r e l e m ,   a m e l y e t   n e m   s i k e r  l t   a   k i m e n e t i   g y o r s  t  t  r b  l   k i s z o l g  l n i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r   t a l  l a t i   a r  n y a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 0 E _ H E L P = A   t a l  l a t o k   s z  m a   a z    s s z e s   g y o r s  t  t  r a z h a t    k  r e l e m   s z  m  h o z   v i s z o n y  t v a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ H E L P = K i m e n e t i   g y o r s  t  t  r   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ N A M E = K i m e n e t i   g y o r s  t  t  r   f o r g a l m i   s e b e s s  g e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ H E L P = A   k i m e n e t i   g y o r s  t  t  r b a n   v  g r e h a j t o t t   h o z z  a d  s i    s   e l t  v o l  t  s i   m qv e l e t e k   m  s o d p e r c e n k  n t i   s z  m a . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 0 E _ N A M E = A d a t c s a t o r n a - p  l d  n y o k   s z  m a 
 
 A S P N E T _ P I P E L I N E S _ 0 0 E _ H E L P = A z   a k t  v   a d a t c s a t o r n a - p  l d  n y o k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 E _ N A M E = K  r e l m e k   m  r e t e    s s z e s e n   ( b  j t ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 0 E _ H E L P = A z    s s z e s   k  r e l e m    s s z e s  t e t t   m  r e t e   b  j t b a n . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 E _ N A M E = K  r e l m e k   e r e d m  n y  n e k   m  r e t e    s s z e s e n   ( b  j t ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 0 E _ H E L P = E g y    g y f  l n e k   k  l d  t t   v  l a s z o k    s s z e s  t e t t   m  r e t e   b  j t b a n .   N e m   t a r t a l m a z z a   a   s z a b v  n y o s   H T T P - v  l a s z f e j l  c e k   m  r e t  t . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 E _ N A M E = K  r e l e m   v  g r e h a j t  s i   i d e j e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 0 E _ H E L P = A   l e g u t  b b i   k  r e l e m   v  g r e h a j t  s  h o z   s z  k s  g e s   i d Qt a r t a m   m i l l i s z e k u n d u m b a n . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 E _ N A M E = K  r e l e m   v  r a k o z  s i   i d e j e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 0 E _ H E L P = A   l e g u t  b b i   k  r e l e m    l t a l   a   k  r e l e m s o r b a n   t  l t  t t   v  r a k o z  s   i d Qt a r t a m a   m i l l i s z e k u n d u m b a n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 E _ N A M E = M e g s z a k  t o t t   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 0 E _ H E L P = A   k o m m u n i k  c i  s   h i b  k   v a g y   f e l h a s z n  l  i   k  z b e l  p  s   m i a t t   m e g s z a k  t o t t   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 E _ N A M E = V  g r e h a j t  s   a l a t t    l l    k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 0 E _ H E L P = A   j e l e n l e g   v  g r e h a j t  s   a l a t t    l l    k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 E _ N A M E = S i k e r t e l e n   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 0 E _ H E L P = A   s i k e r t e l e n   k  r e l m e k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 E _ N A M E = I l l e t  k t e l e n   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 0 E _ H E L P = A   n e m   e n g e d  l y e z e t t   h o z z  f  r  s   m i a t t   s i k e r t e l e n   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 E _ N A M E = N e m   t a l  l h a t    e r Qf o r r  s   i r  n t i   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 0 E _ H E L P = A z o k n a k   a   k  r e l m e k n e k   a   s z  m a ,   a m e l y e k   n e m   t a l  l h a t    e r Qf o r r  s r a   v o n a t k o z t a k . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 E _ N A M E = S o r b a    l l  t o t t   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 0 E _ H E L P = A   f e l d o l g o z  s r a   v  r    k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 E _ N A M E = E l u t a s  t o t t   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 0 E _ H E L P = A   k  r e l e m s o r   m e g t e l  s e   m i a t t   e l u t a s  t o t t   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 E _ N A M E = S i k e r e s   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 0 E _ H E L P = A   s i k e r e s e n   v  g r e h a j t o t t   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 E _ N A M E = I d Qt  l l  p  s   m i a t t   m e g s z a k a d t   k  r e l m e k   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 0 E _ H E L P = A z   i d Qt  l l  p  s   m i a t t   m e g s z a k a d t   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 E _ N A M E = K  r e l m e k   s z  m a    s s z e s e n 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 0 E _ H E L P = A z   a l k a l m a z  s   e l i n d  t  s a    t a    r k e z e t t   k  r e l m e k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 E _ N A M E = K  r e l m e k   g y a k o r i s  g a   ( k  r e l e m / m p ) 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 0 E _ H E L P = A   m  s o d p e r c e n k  n t   v  g r e h a j t o t t   k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 E _ N A M E = A   m u n k a m e n e t   S Q L   S e r v e r   k a p c s o l a t a i n a k   s z  m a    s s z e s e n 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 0 E _ H E L P = A   m u n k a m e n e t    l l a p o t m e g h a t  r o z  s  h o z   h a s z n  l t   S Q L   S e r v e r   k a p c s o l a t o k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 E _ N A M E = A   m u n k a m e n e t    l l a p o t k i s z o l g  l  i   k a p c s o l a t a i n a k   s z  m a    s s z e s e n 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 0 E _ H E L P = A   m u n k a m e n e t    l l a p o t m e g h a t  r o z  s  h o z   h a s z n  l t    l l a p o t k i s z o l g  l  i   k a p c s o l a t o k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 E _ N A M E = F  l b e h a g y o t t   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 0 E _ H E L P = A   s z  n d  k o s a n   f  l b e h a g y o t t   m u n k a m e n e t e k   s z  m a . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 E _ N A M E = A k t  v   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 0 E _ H E L P = A   j e l e n l e g   f u t    m u n k a m e n e t e k   p i l l a n a t n y i   s z  m a . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 E _ N A M E = I d Qt  l l  p  s   m i a t t   m e g s z a k a d t   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 0 E _ H E L P = A z   i d Qt  l l  p  s   m i a t t   m e g s z a k a d t   m u n k a m e n e t e k   s z  m a . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 E _ N A M E = M u n k a m e n e t e k   s z  m a    s s z e s e n 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 0 E _ H E L P = A z   a l k a l m a z  s   e l i n d  t  s a    t a   k e z d e m  n y e z e t t   m u n k a m e n e t e k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 E _ N A M E = F  l b e h a g y o t t    l l a p o t k i s z o l g  l  i   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 0 E _ H E L P = A   s z  n d  k o s a n   f  l b e h a g y o t t   m u n k a m e n e t e k   s z  m a . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 E _ N A M E = A k t  v    l l a p o t k i s z o l g  l  i   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 0 E _ H E L P = A   j e l e n l e g   f u t    m u n k a m e n e t e k   p i l l a n a t n y i   s z  m a . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 E _ N A M E = I d Qt  l l  p  s   m i a t t   m e g s z a k a d t    l l a p o t k i s z o l g  l  i   m u n k a m e n e t e k   s z  m a 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 0 E _ H E L P = A z   i d Qt  l l  p  s   m i a t t   m e g s z a k a d t   m u n k a m e n e t e k   s z  m a . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 E _ N A M E =  l l a p o t k i s z o l g  l  i   m u n k a m e n e t e k   s z  m a    s s z e s e n 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 0 E _ H E L P = A   m u n k a m e n e t e k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 E _ N A M E = B e j e g y z  s e k   s z  m a   a   g y o r s  t  t  r b a n 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 0 E _ H E L P = A   g y o r s  t  t  r b a n   l e v Q   s s z e s   b e j e g y z  s   s z  m a   ( b e l e  r t v e   a   b e l s Ql e g    s   a   f e l h a s z n  l     l t a l   h o z z  a d o t t   b e j e g y z  s e k e t ) . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 E _ N A M E = G y o r s  t  t  r - t a l  l a t o k   s z  m a    s s z e s e n 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 0 E _ H E L P = A   g y o r s  t  t  r b e l i   t a l  l a t o k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 E _ N A M E = S i k e r t e l e n   g y o r s  t  t  r b e l i   k e r e s  s e k   s z  m a    s s z e s e n 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 0 E _ H E L P = A   g y o r s  t  t  r b e l i   s i k e r t e l e n   k e r e s  s e k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 E _ N A M E = G y o r s  t  t  r   t e l j e s   t a l  l a t i   a r  n y a 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 0 E _ H E L P = A   t a l  l a t o k   s z  m a   a z    s s z e s   g y o r s  t  t  r h  v  s   s z  m  h o z   v i s z o n y  t v a . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ N A M E = G y o r s  t  t  r   t e l j e s   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 0 E _ H E L P = G y o r s  t  t  r   t e l j e s   t a l  l a t i   a r  n y  n a k   a l a p j a 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ N A M E = G y o r s  t  t  r   t e l j e s   f o r g a l m i   s e b e s s  g e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 0 E _ H E L P = A   g y o r s  t  t  r b a n   v  g r e h a j t o t t   h o z z  a d  s i    s   e l t  v o l  t  s i   m qv e l e t e k   s z  m a   m  s o d p e r c e n k  n t . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 E _ N A M E = M e g s z a k  t o t t   t r a n z a k c i  k   s z  m a 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 0 E _ H E L P = A   m e g s z a k  t o t t   t r a n z a k c i  k   s z  m a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 E _ N A M E = V  g l e g e s  t e t t   t r a n z a k c i  k   s z  m a 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 0 E _ H E L P = A   v  g l e g e s  t e t t   t r a n z a k c i  k   s z  m a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 E _ N A M E = F  g g Qb e n   l e v Q  t r a n z a k c i  k   s z  m a 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 0 E _ H E L P = A   f e l d o l g o z  s   a l a t t    l l    t r a n z a k c i  k   s z  m a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 E _ N A M E = T r a n z a k c i  k   g y a k o r i s  g a   ( t r a n z a k c i  / m p ) 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 0 E _ H E L P = A   m  s o d p e r c e n k  n t   k e z d e m  n y e z e t t   t r a n z a k c i  k   s z  m a . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 E _ N A M E = T r a n z a k c i  k   s z  m a    s s z e s e n 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 0 E _ H E L P = A z   a l k a l m a z  s   e l i n d  t  s a    t a   k e z d e m  n y e z e t t   t r a n z a k c i  k   s z  m a    s s z e s e n . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 E _ N A M E = M u n k a f o l y a m a t -  j r a i n d  t  s o k   s z  m a 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 0 E _ H E L P = E g y   m u n k a f o l y a m a t    j r a i n d  t  s a i n a k   s z  m a   a z   a d o t t   s z  m  t  g  p e n . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 E _ N A M E = F u t    m u n k a f o l y a m a t o k   s z  m a 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 0 E _ H E L P = A   s z  m  t  g  p e n   f u t    m u n k a f o l y a m a t o k   s z  m a . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   I t a l i a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 0 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 0 _ H E L P = C o n t a t o r i   d i   p r e s t a z i o n i   g l o b a l i   A S P . N E T   v e r s i o n e   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 0 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 0 _ H E L P = C o n t a t o r i   d i   p r e s t a z i o n i   d e l l e   a p p l i c a z i o n i   A S P . N E T   v e r s i o n e   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 0 _ N A M E = R i c h i e s t e   a n o n i m e 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   c h e   u t i l i z z a n o   l ' a u t e n t i c a z i o n e   a n o n i m a . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 0 _ N A M E = R i c h i e s t e   a n o n i m e / s e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   ( a l   s e c o n d o )   c h e   u t i l i z z a n o   l ' a u t e n t i c a z i o n e   a n o n i m a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 0 _ N A M E = O g g e t t i   A P I   n e l l a   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   o g g e t t i   c o n t e n u t i   n e l l a   c a c h e   a g g i u n t i   d a l l ' u t e n t e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 0 _ N A M E = R i c h i e s t e   A P I   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   A P I   d e l   c o d i c e   u t e n t e   s o d d i s f a t t e   d a l l a   c a c h e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 0 _ N A M E = R i c h i e s t e   A P I   n o n   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   A P I   d e l   c o d i c e   u t e n t e   n o n   s o d d i s f a t t e   d a l l a   c a c h e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 0 _ N A M E = P e r c e n t u a l e   r i c h i e s t e   A P I   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 0 _ H E L P = P e r c e n t u a l e   d e l l e   r i c h i e s t e   A P I   d e l   c o d i c e   u t e n t e   s o d d i s f a t t e   d a l l a   c a c h e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ N A M E = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   A P I   a l l a   c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ H E L P = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   A P I   a l l a   c a c h e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ N A M E = T a s s o   d i   r i c a m b i o   d e g l i   o g g e t t i   A P I   n e l l a   c a c h e . 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   a g g i u n t e   e   d e l l e   r i m o z i o n i   e s e g u i t e   o g n i   s e c o n d o   n e l l a   c a c h e   A P I . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 0 _ N A M E = R i a v v i i   a p p l i c a z i o n e 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 0 _ H E L P = N u m e r o   d e i   r i a v v i i   s u b i t i   d a l l ' a p p l i c a z i o n e   d a l l ' a t t i v a z i o n e   d e l   s e r v e r   W e b . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 0 _ N A M E = A p p l i c a z i o n i   i n   e s e c u z i o n e 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 0 _ H E L P = N u m e r o   d e l l e   a p p l i c a z i o n i   W e b   a t t u a l m e n t e   i n   e s e c u z i o n e . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 0 _ N A M E = T o t a l e   c o m p i l a z i o n i 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 0 _ H E L P = N u m e r o   d i   f i l e   d i   o r i g i n e   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   o   . a s p x   c o m p i l a t i   d i n a m i c a m e n t e . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 0 _ N A M E = R i c h i e s t e   d i   d e b u g 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   d i   d e b u g   e l a b o r a t e . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 0 _ N A M E = E r r o r i   d i   c o m p i l a z i o n e 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 0 _ H E L P = N u m e r o   d e g l i   e r r o r i   i n c o n t r a t i   d u r a n t e   l a   c o m p i l a z i o n e . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 0 _ N A M E = E r r o r i   d i   e s e c u z i o n e . 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 0 _ H E L P = N u m e r o   d e g l i   e r r o r i   i n c o n t r a t i   d u r a n t e   l ' e l a b o r a z i o n e   d i   u n a   r i c h i e s t a . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 0 _ N A M E = E r r o r i   d i   p r e - e l a b o r a z i o n e 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 0 _ H E L P = N u m e r o   d e g l i   e r r o r i   i n c o n t r a t i   d u r a n t e   l e   f a s i   d i   a n a l i s i   e   c o n f i g u r a z i o n e . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 0 _ N A M E = T o t a l e   e r r o r i 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e g l i   e r r o r i   r i s c o n t r a t i . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 0 _ N A M E = T o t a l e   e r r o r i / s e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 0 _ H E L P = F r e q u e n z a   d e g l i   e r r o r i   r i s c o n t r a t i . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 0 _ N A M E = E r r o r i   n o n   g e s t i t i   d u r a n t e   l ' e s e c u z i o n e 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 0 _ H E L P = N u m e r o   d e g l i   e r r o r i   n o n   g e s t i t i   d a l   c o d i c e   u t e n t e   m a   d a l   g e s t o r e   d i   e r r o r i   p r e d e f i n i t o . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 0 _ N A M E = E r r o r i   n o n   g e s t i t i   d u r a n t e   l ' e s e c u z i o n e / s e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 0 _ H E L P = F r e q u e n z a   d e g l i   e r r o r i   n o n   g e s t i t i . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 0 _ N A M E = O g g e t t i   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 0 _ H E L P = N u m e r o   d i   o g g e t t i   a t t u a l m e n t e   p r e s e n t i   n e l l a   c a c h e   d i   o u t p u t . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 0 _ N A M E = R i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 0 _ N A M E = R i c h i e s t e   n o n   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   r i c h i e s t e   n o n   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 0 _ N A M E = P e r c e n t u a l e   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 0 _ H E L P = P e r c e n t u a l e   d i   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e   d i   o u t p u t . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ N A M E = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   a l l a   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ H E L P = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   a l l a   c a c h e   d i   o u t p u t 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ N A M E = T a s s o   d i   r i c a m b i o   d e l l a   c a c h e   d i   o u t p u t 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   a g g i u n t e   e   d e l l e   r i m o z i o n i   e s e g u i t e   o g n i   s e c o n d o   n e l l a   c a c h e   d i   o u t p u t . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 0 _ N A M E = I s t a n z e   p i p e l i n e 
 
 A S P N E T _ P I P E L I N E S _ 0 1 0 _ H E L P = N u m e r o   d i   i s t a n z e   p i p e l i n e   a t t i v e . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 0 _ N A M E = " T o t a l e   b y t e   r i c h i e s t e   " 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 0 _ H E L P = D i m e n s i o n e   c o m p l e s s i v a   d i   t u t t e   l e   r i c h i e s t e ,   i n   b y t e . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 0 _ N A M E = T o t a l e   b y t e   r i c h i e s t e   d i   o u t p u t 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 0 _ H E L P = D i m e n s i o n e   c o m p l e s s i v a ,   i n   b y t e ,   d i   t u t t e   l e   r i s p o s t e   i n v i a t e   a   u n   c l i e n t .   I l   v a l o r e   n o n   c o m p r e n d e   l e   i n t e s t a z i o n i   H T T P   d i   r i s p o s t a   s t a n d a r d . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 0 _ N A M E = T e m p o   d i   e s e c u z i o n e   d e l l a   r i c h i e s t a 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 0 _ H E L P = N u m e r o   d e i   m i l l i s e c o n d i   n e c e s s a r i   p e r   s o d d i s f a r e   l a   r i c h i e s t a   p i    r e c e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 0 _ N A M E = T e m p o   d i   a t t e s a   r i c h i e s t a 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 0 _ H E L P = N u m e r o   d i   m i l l i s e c o n d i   d u r a n t e   i   q u a l i   l a   r i c h i e s t a   p i    r e c e n t e      r i m a s t a   n e l l a   c o d a   d i   a t t e s a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 0 _ N A M E = R i c h i e s t e   d i s c o n n e s s e 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   d i s c o n n e s s e   a   c a u s a   d i   e r r o r i   d i   c o m u n i c a z i o n e   o   i n   s e g u i t o   a l l a   c h i u s u r a   d e l l a   s e s s i o n e   d a   p a r t e   d e l l ' u t e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 0 _ N A M E = R i c h i e s t e   i n   e s e c u z i o n e 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   a t t u a l m e n t e   i n   e s e c u z i o n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 0 _ N A M E = R i c h i e s t e   n o n   s o d d i s f a t t e 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e l l e   r i c h i e s t e   n o n   s o d d i s f a t t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 0 _ N A M E = R i c h i e s t e   n o n   a u t o r i z z a t e 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   n o n   r i u s c i t e   p e r   m a n c a n z a   d e l l e   a u t o r i z z a z i o n i   d i   a c c e s s o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 0 _ N A M E = R i c h i e s t e   n o n   t r o v a t e 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   r i f e r i t e   a   r i s o r s e   n o n   t r o v a t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 0 _ N A M E = R i c h i e s t e   i n   c o d a 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   i n   a t t e s a   d i   e l a b o r a z i o n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 0 _ N A M E = R i c h i e s t e   r e s p i n t e 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   r i f i u t a t e   p e r c h    l a   c o d a   d e l l e   r i c h i e s t e   e r a   p i e n a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 0 _ N A M E = R i c h i e s t e   s o d d i s f a t t e 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 0 _ H E L P = N u m e r o   d i   r i c h i e s t e   c o r r e t t a m e n t e   s o d d i s f a t t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 0 _ N A M E = R i c h i e s t e   n o n   s o d d i s f a t t e   p e r   t i m e o u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 0 _ H E L P = N u m e r o   d e l l e   r i c h i e s t e   n o n   s o d d i s f a t t e   p e r   t i m e o u t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 0 _ N A M E = T o t a l e   r i c h i e s t e 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   r i c h i e s t e   d a l l ' a v v i o   d e l l ' a p p l i c a z i o n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 0 _ N A M E = R i c h i e s t e / s e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d i   r i c h i e s t e   s o d d i s f a t t e   a l   s e c o n d o . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 0 _ N A M E = T o t a l e   c o n n e s s i o n i   S Q L   S e r v e r   d e l l a   s e s s i o n e 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   c o n n e s s i o n i   a   S Q L   S e r v e r   u t i l i z z a t e   d a l l o   s t a t o   d i   s e s s i o n e . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 0 _ N A M E = T o t a l e   c o n n e s s i o n i   s e r v e r   d e l l o   s t a t o   d e l l a   s e s s i o n e 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 0 _ H E L P = N u m e r o   t o t a l e   d i   c o n n e s s i o n i   a l   s e r v e r   d i   s t a t o   u t i l i z z a t e   d a l l o   s t a t o   d e l l a   s e s s i o n e . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 0 _ N A M E = S e s s i o n i   a b b a n d o n a t e 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   a b b a n d o n a t e   i n   m o d o   e s p l i c i t o . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 0 _ N A M E = S e s s i o n i   a t t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   c o r r e n t e m e n t e   a t t i v e . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 0 _ N A M E = S e s s i o n i   c h i u s e   p e r   t i m e o u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   c h i u s e   p e r   t i m e o u t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 0 _ N A M E = T o t a l e   s e s s i o n i 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   s e s s i o n i   d a l l ' a v v i o   d e l l ' a p p l i c a z i o n e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 0 _ N A M E = S e s s i o n i   s e r v e r   a b b a n d o n a t e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   a b b a n d o n a t e   i n   m o d o   e s p l i c i t o . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 0 _ N A M E = S e s s i o n i   s e r v e r   a t t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   c o r r e n t e m e n t e   a t t i v e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 0 _ N A M E = S e s s i o n i   s e r v e r   c h i u s e   p e r   t i m e o u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 0 _ H E L P = N u m e r o   d e l l e   s e s s i o n i   c h i u s e   p e r   t i m e o u t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 0 _ N A M E = T o t a l e   s e s s i o n i   s e r v e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e l l e   s e s s i o n i . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 0 _ N A M E = T o t a l e   o g g e t t i   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e g l i   o g g e t t i   c o n t e n u t i   n e l l a   c a c h e   ( s i a   i n t e r n i   s i a   a g g i u n t i   d a g l i   u t e n t i ) . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 0 _ N A M E = T o t a l e   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e l l e   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 0 _ N A M E = T o t a l e   r i c h i e s t e   n o n   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d e l l e   r i c h i e s t e   n o n   s o d d i s f a t t e   d a l l a   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 0 _ N A M E = P e r c e n t u a l e   c o m p l e s s i v a   r i c h i e s t e   s o d d i s f a t t e   d a l l a   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 0 _ H E L P = P e r c e n t u a l e   d e l l e   r i c h i e s t e   s o d d i s f a t t e   s u   t u t t e   l e   c h i a m a t e   a l l a   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ N A M E = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   t o t a l e   a l l a   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 0 _ H E L P = V a l o r e   b a s e   f r e q u e n z a   d i   a c c e s s o   t o t a l e   a l l a   c a c h e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ N A M E = T a s s o   d i   r i c a m b i o   c o m p l e s s i v o   d e l l a   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d e l l e   a g g i u n t e   e   d e l l e   r i m o z i o n i   e s e g u i t e   o g n i   s e c o n d o   n e l l a   c a c h e   t o t a l e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 0 _ N A M E = T r a n s a z i o n i   a n n u l l a t e 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 0 _ H E L P = N u m e r o   d i   t r a n s a z i o n i   a n n u l l a t e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 0 _ N A M E = T r a n s a z i o n i   c o m p l e t a t e 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 0 _ H E L P = N u m e r o   d i   t r a n s a z i o n i   c o m p l e t a t e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 0 _ N A M E = T r a n s a z i o n i   i n   s o s p e s o 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 0 _ H E L P = N u m e r o   d i   t r a n s a z i o n i   i n   s o s p e s o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 0 _ N A M E = T r a n s a z i o n i / s e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 0 _ H E L P = N u m e r o   d i   t r a n s a z i o n i   a v v i a t e   a l   s e c o n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 0 _ N A M E = T o t a l e   t r a n s a z i o n i 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 0 _ H E L P = N u m e r o   c o m p l e s s i v o   d i   t r a n s a z i o n i   d a l l ' a v v i o   d e l l ' a p p l i c a z i o n e . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 0 _ N A M E = R i a v v i i   p r o c e s s o   d i   l a v o r o 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 0 _ H E L P = N u m e r o   d e i   r i a v v i i   s u b i t i   d a   u n   p r o c e s s o   d i   l a v o r o   e s e g u i t o   n e l   s i s t e m a . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 0 _ N A M E = P r o c e s s i   d i   l a v o r o   i n   e s e c u z i o n e 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 0 _ H E L P = N u m e r o   d e i   p r o c e s s i   d i   l a v o r o   i n   e s e c u z i o n e   n e l   s i s t e m a . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   J a p a n e s e 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 1 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 1 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   00000  00000000  0000
 
 O B J E C T _ 2 _ 0 1 1 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 1 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   00000000  00000000  0000
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 1 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 1 _ H E L P = ?S
T<0O(uY00Bln0peg0Y00
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 1 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 1 _ H E L P = <?S
T!q
TBln0pe  ( yXSMO)   g0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 1 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 1 _ H E L P = 0000L0RW0_0000000Qn00000n0}peg0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 1 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 1 _ H E L P = 0000  000K00n000000  000n0peg0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 1 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 1 _ H E L P = 0000  000K00n000000  00n0peg0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 1 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 1 _ H E L P = 0000  000K00|Ts0QU0000000n0rRTg0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ H E L P = 00000  A P I   000s000g0Y00
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ H E L P = R/ JRdU00_0  A P I   00000pe  ( yXSMO)   g0Y00
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 1 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 1 _ H E L P = W e b   0000n0	gRg-Nk000000000L0QwRU00_0Vpeg0Y00
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 1 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 1 _ H E L P = s(W[L-Nn0  W e b   00000000n0peg0Y00
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 1 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 1 _ H E L P = Rvk000000U00_0  . a s a x 0. a s c x 0. a s h x 0. a s m x   ~0_0o0  . a s p x   000  0000n0peg0Y00
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 1 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 1 _ H E L P = QtW0_00000  00000n0peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 1 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 1 _ H E L P = 00000-Nk0zvuW0_0000n0peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 1 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 1 _ H E L P = Bln0Qt-Nk0zvuW0_0000n0peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 1 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 1 _ H E L P = ㉐gh0ib-Nk0zvuW0_0000n0peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 1 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 1 _ H E L P = zvuW0_0000n0}peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 1 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 1 _ H E L P = zvuW0_0000n0rRTg0Y00
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 1 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 1 _ H E L P = 0000  000g0j0O00e[n0000  0000k0000000U00_0000n0peg0Y00
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 1 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 1 _ H E L P = *gQtn0000n0rRTg0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 1 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 1 _ H E L P = QR00000n0s(Wn00000n0peg0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 1 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 1 _ H E L P = QR00000K00OU00_0QR00000Sj0Bln0Tpeg0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 1 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 1 _ H E L P = QR00000K00OU00j0K0c0_0QR00000Sj0Bln0Tpeg0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 1 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 1 _ H E L P = QRn000000SBlk0[Y00Bln0000sg0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ H E L P = QR00000  000s000g0Y00
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ H E L P = R/ JRdU00_0QR00000pe  ( yXSMO)   g0Y00
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 1 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 0 1 1 _ H E L P = 00000  000000  000000n0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 1 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 1 _ H E L P = Y0y0f0n0Bln0}000g0Y0  ( 000) 0
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 1 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 1 _ H E L P = 000000k0OU00_0_T{n0}000g0Y0  ( 000) 0S00k0o00H T T P   _T{0000o0+T~00f0D0~0[000
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 1 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 1 _ H E L P =  g_n0Bl0[LY00n0k00W0_000ypeg0Y00
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 1 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 1 _ H E L P =  g_n0BlL00000g0_c0f0D00Bf  ( 00y)   g0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 1 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 1 _ H E L P = O000~0_0o00000d\Ok00c0f0ReU00_0Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 1 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 1 _ H E L P = s(W[LW0f0D00Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 1 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 1 _ H E L P = 1YWeW0_0Bln0}peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 1 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 1 _ H E L P = <n0j0D000000Lc0_0_000Blk01YWeW0~0W0_00
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 1 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 1 _ H E L P = d0K00j0K0c0_000000BlW0_0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 1 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 1 _ H E L P = Qt_a0n0Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 1 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 1 _ H E L P = BlL0D0c0q0D0k0j0c0_0_00k0b&TU00_0Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 1 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 1 _ H E L P = [Lk0bRW0_0Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 1 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 1 _ H E L P = 000000W0_0Bln0peg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 1 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 1 _ H E L P = 00000000Y_n0Blpen0Tg0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 1 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 1 _ H E L P = 1   yT0h0k0[LW0_0Bln0peg0Y00
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 1 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 1 _ H E L P = 00000rKak00c0f0O(uU000  S Q L   0000x0n0c}n0}peg0Y00
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 1 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 1 _ H E L P = 00000rKak00c0f0O(uU000  S Q L   0000x0n0c}n0}peg0Y00
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 1 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 1 _ H E L P = f:yvk04xhU00_000000n0peg0Y00
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 1 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 1 _ H E L P = s(W00000j000000n0peg0Y00
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 1 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 1 _ H E L P = 000000W0_000000n0peg0Y00
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 1 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 1 _ H E L P = 00000000Y_n000000pen0Tg0Y00
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 1 _ H E L P = f:yvk04xhU00_000000n0peg0Y00
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 1 _ H E L P = s(W00000j000000n0peg0Y00
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 1 _ H E L P = 000000W0_000000n0peg0Y00
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 1 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 1 _ H E L P = 00000n0Tpeg0Y00
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 1 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 1 _ H E L P = 00000Qn00000n0}pe  ( QJ00s00000L0RW0_00n0) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 1 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 1 _ H E L P = 00000K00n0000n0}peg0Y00
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 1 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 1 _ H E L P = 00000  00n0}peg0Y00
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 1 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 1 _ H E L P = Y0y0f0n000000n0|Ts0QW0K00n0000n0rRTg0Y00
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 1 _ H E L P = 00000T000s000g0Y00
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 1 _ H E L P = R/ JRdU00_0T00000pe  ( yXSMO)   g0Y00
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 1 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 1 _ H E L P = -NbkU00_000000000n0peg0Y00
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 1 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 1 _ H E L P = 0000W0_000000000n0peg0Y00
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 1 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 1 _ H E L P = Qt-Nn000000000g0Y00
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 1 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 1 _ H E L P = 1   yk0YU00000000000g0Y00
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 1 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 1 _ H E L P = 00000000Y_n000000000pen0Tg0Y00
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 1 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 1 _ H E L P = 000000g00000  0000L0QwRU00_0Vpeg0Y00
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 1 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 1 _ H E L P = 000000g0[L-Nn00000  0000n0peg0Y00
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   K o r e a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 2 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 2 _ H E L P = A S P . N E T   % A S P N E T _ V E R %     1  tδ0
 
 O B J E C T _ 2 _ 0 1 2 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 2 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   Qǩ  \  1  tδ0
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 2 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 2 _ H E L P = uǅ  xǝD  XՔ  ƭ  Ȳ. 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 2 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 2 _ H E L P = xǝ  uǅ  ƭ  / ͅȲ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 2 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 2 _ H E L P = Ɛ        \    ŸҬ  Ȳ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 2 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 2 _ H E L P = Ɛ  TܴX      Ȳ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 2 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 2 _ H E L P = Ɛ  Tܴ  8֜    }  Ȳ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 2 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 2 _ H E L P = Ɛ  Tܴ  8֜    D(ǅȲ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ H E L P =   A P I   `  0 ɅȲ. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ H E L P =     A P I     p       Ȳ. 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 2 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 2 _ H E L P =   X  ٳ  0  ٳH  Qǩ  \t      Ȳ. 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 2 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 2 _ H E L P = ֬    x    Qǩ  \  Ȳ. 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 2 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 2 _ H E L P = ٳ<\  |  . a s a x ,   . a s c x ,   . a s h x ,   . a s m x     . a s p x     |  Ȳ. 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 2 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 2 _ H E L P = ̬  E  ƭ  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 2 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 2 _ H E L P = |XՔ  ٳH  \  $X  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 2 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 2 _ H E L P = ƭD  ̬XՔ  ٳH  \  $X  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 2 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 2 _ H E L P = l8      l1D  XՔ  ٳH  \  $X  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 2 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 2 _ H E L P = \    $X  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 2 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 2 _ H E L P = \  $X  D(ǅȲ. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 2 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 2 _ H E L P = Ɛ  Tܴ\  ̬  J  0  $X  ̬0\  ̬  $X  Ȳ. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 2 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 2 _ H E L P = ̬  J@  $X  D(ǅȲ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 2 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 2 _ H E L P = %  X  ֬  ŸҬ  Ȳ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 2 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 2 _ H E L P = %         \    %  ƭ  Ȳ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 2 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 2 _ H E L P = %      JŔ     \    %  ƭ  Ȳ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 2 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 2 _ H E L P =    \  %  ƭX  ƭ    D(ǅȲ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ H E L P = %    `  0 ɅȲ. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ H E L P =     %    p       Ȳ. 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 2 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 0 1 2 _ H E L P = \1  t|x  xǤ4Ѥ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 2 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 2 _ H E L P =   ƭX    l0( tǸ) Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 2 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 2 _ H E L P = t|tǸŸ\    QX    l0( tǸ) Ȳ.   \   H T T P   Q  T  h  JŵȲ. 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 2 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 2 _ H E L P =    \  ƭD  XՔ  p  x  (  ) Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 2 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 2 _ H E L P =  0  ǔ     \X  ƭt   0X  ǔ  (  ) Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 2 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 2 _ H E L P =   $X\  xt  Űt  JLp  Ɛ   ̸\  ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 2 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 2 _ H E L P = ֬    x  ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 2 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 2 _ H E L P = (\    ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 2 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 2 _ H E L P = 4  a8\  xt  (\  ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 2 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 2 _ H E L P = >D    Ŕ      ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 2 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 2 _ H E L P = ̬   0  x  ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 2 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 2 _ H E L P = ƭ   0t  I  (  p  ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 2 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 2 _ H E L P = 1<\    ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 2 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 2 _ H E L P =     ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 2 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 2 _ H E L P = Qǩ  \t    tX    ƭ  Ȳ. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 2 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 2 _ H E L P =       ƭ  Ȳ. 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 2 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 2 _ H E L P = 8X    XՔ  S Q L   S e r v e r \X  ȴ  Ű  
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 2 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 2 _ H E L P = 8X    XՔ  S t a t e   S e r v e r \X  ȴ  Ű  
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 2 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 2 _ H E L P = <\    8X  Ȳ. 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 2 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 2 _ H E L P = ֬  \1T  ǔ  8X  Ȳ. 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 2 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 2 _ H E L P =     8X  Ȳ. 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 2 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 2 _ H E L P = Qǩ  \t    tX    8X  Ȳ. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 2 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 2 _ H E L P = <\    8X  Ȳ. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 2 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 2 _ H E L P = ֬  \1T  ǔ  8X  Ȳ. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 2 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 2 _ H E L P =     8X  Ȳ. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 2 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 2 _ H E L P =   8X  Ȳ. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 2 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 2 _ H E L P =   X    ŸҬ  Ȳ(   ŸҬ@  Ɛ    \  ŸҬ  P  h) . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 2 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 2 _ H E L P = X      Ȳ. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 2 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 2 _ H E L P =     }  Ȳ. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 2 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 2 _ H E L P =     8֜X    D(ǅȲ. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 2 _ H E L P =     `  0 ɅȲ. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 2 _ H E L P =         p       Ȳ. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 2 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 2 _ H E L P =   ҜX  Ȳ. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 2 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 2 _ H E L P =   ҜX  Ȳ. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 2 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 2 _ H E L P = ɉ  x  ҜX  Ȳ. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 2 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 2 _ H E L P =       ҜX  Ȳ. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 2 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 2 _ H E L P = Qǩ  \t    tX    ҜX  Ȳ. 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 2 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 2 _ H E L P = 0  Ő  \8|    XՔ  Ȳ. 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 2 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 2 _ H E L P = 0    x  Ő  \8  Ȳ. 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   D u t c h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 3 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 3 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   -   a l g e m e n e   p r e s t a t i e m e t e r i t e m s 
 
 O B J E C T _ 2 _ 0 1 3 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 3 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   -   t o e p a s s i n g s p r e s t a t i e m e t e r s 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 3 _ N A M E = A n o n i e m e   a a n v r a g e n 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   m e t   a n o n i e m e   v e r i f i c a t i e . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 3 _ N A M E = A n o n i e m e   a a n v r a g e n / s e c . 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 3 _ H E L P = H e t   a a n t a l   a n o n i e m e   a a n v r a g e n   p e r   s e c o n d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 3 _ N A M E = I t e m s   i n   A P I - c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   i t e m s   i n   d e   d o o r   d e   g e b r u i k e r   t o e g e v o e g d e   c a c h e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 3 _ N A M E = T r e f f e r s   i n   A P I - c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 3 _ H E L P = H e t   a a n t a l   c a c h e - t r e f f e r s   a a n g e r o e p e n   u i t   d e   g e b r u i k e r s c o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 3 _ N A M E = M i s s e r s   i n   A P I - c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 3 _ H E L P = H e t   a a n t a l   c a c h e - m i s s e r s   a a n g e r o e p e n   u i t   d e   g e b r u i k e r s c o d e . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 3 _ N A M E = P e r c e n t a g e   t r e f f e r s   i n   A P I - c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 3 _ H E L P = P e r c e n t a g e   v a n   t r e f f e r s   d i e   v a n u i t   d e   g e b r u i k e r s c o d e   z i j n   a a n g e r o e p e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ N A M E = P e r c e n t a g e   v a n   t r e f f e r s   i n   A P I - c a c h e   ( b a s i s ) 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ H E L P = P e r c e n t a g e   v a n   t r e f f e r s   i n   A P I - c a c h e   ( b a s i s ) 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ N A M E = V e r w e r k i n g s f r e q u e n t i e   v a n   A P I - c a c h e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ H E L P = H e t   a a n t a l   t o e v o e g i n g e n   e n   v e r w i j d e r i n g e n   v a n   d e   A P I - c a c h e   p e r   s e c o n d e . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 3 _ N A M E = N i e u w e   s t a r t   v a n   t o e p a s s i n g 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 3 _ H E L P = A a n t a l   k e r e n   d a t   d e   t o e p a s s i n g   t i j d e n s   d e   l e v e n s d u u r   v a n   d e   w e b s e r v e r   o p n i e u w   i s   g e s t a r t . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 3 _ N A M E = M o m e n t e e l   u i t g e v o e r d e   t o e p a s s i n g e n 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 3 _ H E L P = A a n t a l   m o m e n t e e l   u i t g e v o e r d e   w e b t o e p a s s i n g e n . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   c o m p i l a t i e s 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 3 _ H E L P = H e t   a a n t a l   . a s a x - ,   . a s c x - ,   . a s h x - ,   . a s m x -   o f   . a s p x - b r o n b e s t a n d e n   d a t   d y n a m i s c h   i s   g e c o m p i l e e r d . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 3 _ N A M E = A a n v r a g e n   v o o r   f o u t o p s p o r i n g 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 3 _ H E L P = H e t   a a n t a l   v e r w e r k t e   a a n v r a g e n   v o o r   f o u t o p s p o r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 3 _ N A M E = F o u t e n   b i j   c o m p i l a t i e 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 3 _ H E L P = H e t   a a n t a l   f o u t e n   d a t   t i j d e n s   h e t   c o m p i l e r e n   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 3 _ N A M E = F o u t e n   b i j   u i t v o e r i n g 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 3 _ H E L P = H e t   a a n t a l   f o u t e n   d a t   t i j d e n s   d e   v e r w e r k i n g   v a n   e e n   a a n v r a a g   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 3 _ N A M E = F o u t e n   b i j   v o o r b e w e r k e n 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 3 _ H E L P = H e t   a a n t a l   f o u t e n   d a t   i s   t i j d e n s   h e t   p a r s e r e n   e n   c o m p i l e r e n   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   f o u t e n 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   o p g e t r e d e n   f o u t e n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   f o u t e n / s e c . 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 3 _ H E L P = F r e q u e n t i e   v a n   o p g e t r e d e n   f o u t e n . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 3 _ N A M E = O n a f g e h a n d e l d e   f o u t e n   t i j d e n s   u i t v o e r i n g 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 3 _ H E L P = H e t   a a n t a l   f o u t e n   d a t   n i e t   d o o r   d e   g e b r u i k e r s c o d e ,   m a a r   d o o r   d e   s t a n d a a r d - h a n d l e r   v o o r   f o u t e n   i s   a f g e h a n d e l d . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 3 _ N A M E = O n a f g e h a n d e l d e   f o u t e n   t i j d e n s   u i t v o e r i n g / s e c . 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 3 _ H E L P = F r e q u e n t i e   v a n   o n a f g e h a n d e l d e   f o u t e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 3 _ N A M E = I t e m s   i n   d e   u i t v o e r - c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 3 _ H E L P = H e t   h u i d i g e   a a n t a l   i t e m s   i n   d e   u i t v o e r - c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 3 _ N A M E = T r e f f e r s   i n   u i t v o e r - c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   a a n v r a g e n   d a t   i n   e e n   c a c h e   k a n   w o r d e n   o p g e s l a g e n   e n   v a n u i t   d e   u i t v o e r - c a c h e   k a n   w o r d e n   b e a n t w o o r d . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 3 _ N A M E = M i s s e r s   i n   u i t v o e r - c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   a a n v r a g e n   d a t   i n   e e n   c a c h e   k a n   w o r d e n   o p g e s l a g e n   e n   n i e t   v a n u i t   d e   u i t v o e r - c a c h e   k a n   w o r d e n   b e a n t w o o r d . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 3 _ N A M E = V e r w e r k i n g s f r e q u e n t i e   v a n   d e   u i t v o e r - c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 3 _ H E L P = P e r c e n t a g e   v a n   t r e f f e r s   v o o r   a a n v r a g e n   v o o r   u i t v o e r - c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ N A M E = P e r c e n t a g e   v a n   t r e f f e r s   i n   u i t v o e r - c a c h e   ( b a s i s ) 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ H E L P = P e r c e n t a g e   v a n   t r e f f e r s   i n   u i t v o e r - c a c h e   ( b a s i s ) 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ N A M E = V e r w e r k i n g s f r e q u e n t i e   v a n   d e   u i t v o e r - c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ H E L P = H e t   a a n t a l   t o e v o e g i n g e n   e n   v e r w i j d e r i n g e n   v a n   d e   u i t v o e r - c a c h e   p e r   s e c o n d e . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 3 _ N A M E = M e t e r   v o o r   p i p e l i n e - e x e m p l a r e n 
 
 A S P N E T _ P I P E L I N E S _ 0 1 3 _ H E L P = H e t   a a n t a l   a c t i e v e   p i p e l i n e - e x e m p l a r e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   b y t e s   v o o r   a a n v r a g e n   ( b i n n e n k o m e n d ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 3 _ H E L P = D e   t o t a l e   g r o o t t e   v a n   a l l e   a a n v r a g e n   i n   b y t e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   b y t e s   v o o r   a a n v r a g e n   ( u i t g a a n d ) 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 3 _ H E L P = D e   t o t a l e   g r o o t t e ,   i n   b y t e s ,   v a n   a n t w o o r d e n   d i e   n a a r   e e n   c l i e n t   z i j n   v e r z o n d e n .   D e   g r o o t t e   b e v a t   g e e n   H T T P - s t a n d a a r d a n t w o o r d k o p p e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 3 _ N A M E = U i t v o e r i n g s t i j d   v a n   a a n v r a a g 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 3 _ H E L P = H e t   a a n t a l   m i l l i s e c o n d e n   d a t   h e t   u i t v o e r e n   v a n   d e   m e e s t   r e c e n t e   a a n v r a a g   i n   b e s l a g   n a m . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 3 _ N A M E = W a c h t t i j d   v o o r   a a n v r a a g 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 3 _ H E L P = H e t   a a n t a l   m i l l i s e c o n d e n   d a t   d e   m e e s t   r e c e n t e   a a n v r a a g   i n   d e   w a c h t r i j   h e e f t   g e s t a a n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 3 _ N A M E = V e r b r o k e n   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   v a n w e g e   c o m m u n i c a t i e f o u t e n   i s   v e r b r o k e n   o f   d o o r   d e   g e b r u i k e r   i s   a f g e b r o k e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 3 _ N A M E = A a n v r a g e n   i n   u i t v o e r i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   m o m e n t e e l   w o r d t   u i t g e v o e r d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 3 _ N A M E = M i s l u k t e   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 3 _ H E L P = H e t   a a n t a l   m i s l u k t e   a a n v r a g e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 3 _ N A M E = O n b e v o e g d e   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   i s   m i s l u k t   v a n w e g e   o n v o l d o e n d e   b e v o e g d h e d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 3 _ N A M E = N i e t - g e v o n d e n   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   n a a r   b r o n n e n   d i e   n i e t   z i j n   g e v o n d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 3 _ N A M E = A a n v r a g e n   i n   w a c h t r i j 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   i n   d e   w a c h t r i j   d a t   w a c h t   o p   v e r w e r k i n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 3 _ N A M E = G e w e i g e r d e   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   i s   g e w e i g e r d   v a n w e g e   e e n   v o l l e   a a n v r a a g w a c h t r i j . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 3 _ N A M E = G e s l a a g d e   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   i s   u i t g e v o e r d . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 3 _ N A M E = T i m e - o u t s   v o o r   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   w a a r v o o r   e e n   t i m e - o u t   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 3 _ H E L P = H e t   t o t a a l   a a n t a l   a a n v r a g e n   s i n d s   d e   s t a r t   v a n   d e   t o e p a s s i n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 3 _ N A M E = A a n v r a g e n / s e c . 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 3 _ H E L P = H e t   a a n t a l   a a n v r a g e n   d a t   p e r   s e c o n d e   w o r d t   u i t g e v o e r d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   v e r b i n d i n g e n   m e t   d e   S Q L - s e r v e r   v a n   d e   s e s s i e 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   v e r b i n d i n g e n   m e t   d e   S Q L - s e r v e r   d a t   d o o r   d e   s e s s i e s t a t u s   w o r d t   g e b r u i k t . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   v e r b i n d i n g e n   m e t   d e   s e r v e r   v o o r   d e   s e s s i e s t a t u s   
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   v e r b i n d i n g e n   m e t   d e   s t a t u s s e r v e r   d a t   d o o r   d e   s e s s i e s t a t u s   w o r d t   g e b r u i k t . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 3 _ N A M E = A f g e b r o k e n   s e s s i e s 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   d a t   e x p l i c i e t   i s   a f g e b r o k e n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 3 _ N A M E = A c t i e v e   s e s s i e s 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   d a t   m o m e n t e e l   a c t i e f   i s . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 3 _ N A M E = T i m e - o u t s   v o o r   s e s s i e s 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   w a a r v o o r   e e n   t i m e - o u t   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   s e s s i e s 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   s e s s i e s   s i n d s   d e   s t a r t   v a n   d e   t o e p a s s i n g . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 3 _ N A M E = A f g e b r o k e n   s e r v e r s e s s i e s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   d a t   e x p l i c i e t   i s   a f g e b r o k e n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 3 _ N A M E = A c t i e v e   s e r v e r s e s s i e s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   d a t   m o m e n t e e l   a c t i e f   i s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 3 _ N A M E = T i m e - o u t s   v a n   s e r v e r s e s s i e s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 3 _ H E L P = H e t   a a n t a l   s e s s i e s   w a a r v o o r   e e n   t i m e - o u t   i s   o p g e t r e d e n . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   s e r v e r s e s s i e s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   s e s s i e s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   i t e m s   i n   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t e l   i t e m s   i n   d e   c a c h e   ( z o w e l   i n t e r n   a l s   d o o r   d e   g e b r u i k e r   t o e g e v o e g d ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   t r e f f e r s   i n   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   t r e f f e r s   u i t   d e   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   m i s s e r s   i n   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   m i s s e r s   i n   d e   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 3 _ N A M E = P e r c e n t a g e   v a n   t o t a a l   a a n t a l   t r e f f e r s   i n   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 3 _ H E L P = P e r c e n t a g e   t r e f f e r s   v a n   a l l e   c a c h e - a a n r o e p e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ N A M E = P e r c e n t a g e   v a n   t o t a a l   a a n t a l   t r e f f e r s   i n   c a c h e   ( b a s i s ) 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 3 _ H E L P = P e r c e n t a g e   v a n   t o t a a l   a a n t a l   t r e f f e r s   i n   c a c h e   ( b a s i s ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ N A M E = V e r w e r k i n g s f r e q u e n t i e   v a n   c a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 3 _ H E L P = H e t   a a n t a l   t o e v o e g i n g e n   e n   v e r w i j d e r i n g e n   v a n   d e   t o t a l e   c a c h e   p e r   s e c o n d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 3 _ N A M E = A f g e b r o k e n   t r a n s a c t i e s 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 3 _ H E L P = H e t   a a n t a l   a f g e b r o k e n   t r a n s a c t i e s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 3 _ N A M E = T o e g e k e n d e   t r a n s a c t i e s 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 3 _ H E L P = H e t   a a n t a l   t o e g e k e n d e   t r a n s a c t i e s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 3 _ N A M E = T r a n s a c t i e s   i n   b e h a n d e l i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 3 _ H E L P = H e t   a a n t a l   t r a n s a c t i e s   d a t   w o r d t   v e r w e r k t . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 3 _ N A M E = T r a n s a c t i e s / s e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 3 _ H E L P = G e s t a r t e   t r a n s a c t i e s   p e r   s e c o n d e . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 3 _ N A M E = T o t a a l   a a n t a l   t r a n s a c t i e s 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 3 _ H E L P = H e t   t o t a l e   a a n t a l   t r a n s a c t i e s   s i n d s   d e   s t a r t   v a n   d e   t o e p a s s i n g . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 3 _ N A M E = O p n i e u w   g e s t a r t e   w e r k p r o c e s s e n 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 3 _ H E L P = H e t   a a n t a l   k e r e n   d a t   e e n   w e r k p r o c e s   o p n i e u w   o p   d e   c o m p u t e r   i s   g e s t a r t . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 3 _ N A M E = U i t g e v o e r d e   w e r k p r o c e s s e n 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 3 _ H E L P = H e t   a a n t a l   w e r k p r o c e s s e n   d a t   o p   d e   c o m p u t e r   w o r d t   u i t g e v o e r d . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   N o r w e g i a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 4 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 4 _ H E L P = G l o b a l e   y t e l s e s t e l l e r e   f o r   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 4 _ N A M E = A S P . N E T   % A S P N E T _ V E R % - p r o g r a m m e r 
 
 O B J E C T _ 2 _ 0 1 4 _ H E L P = Y t e l s e s t e l l e r e   f o r   A S P . N E T   % A S P N E T _ V E R % - p r o g r a m m e r 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 4 _ N A M E = A n o n y m e   f o r e s p  r s l e r 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   b r u k t e   a n o n y m   g o d k j e n n i n g . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 4 _ N A M E = A n o n y m e   f o r e s p  r s l e r   /   s e k 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 4 _ H E L P = A n t a l l   a n o n y m e   f o r e s p  r s l e r   o m   g o d k j e n n i n g   /   s e k 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 4 _ N A M E = O p p f  r i n g e r   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   o p p f  r i n g e r   i   b u f f e r e n   s o m   e r   l a g t   t i l   a v   b r u k e r e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 4 _ N A M E = T r e f f   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 4 _ H E L P = A n t a l l   t r e f f   i   b u f f e r e n   f r a   b r u k e r k o d e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 4 _ N A M E = B o m   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 4 _ H E L P = A n t a l l   b o m   i   b u f f e r e n   f r a   b r u k e r k o d e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 4 _ N A M E = T r e f f p r o s e n t   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 4 _ H E L P = T r e f f p r o s e n t   f r a   b r u k e r k o d e n . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ N A M E = T r e f f p r o s e n t g r u n n l a g   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ H E L P = T r e f f p r o s e n t g r u n n l a g   i   A P I - b u f f e r 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ N A M E = G j e n n o m s t r  m m i n g   i   A P I - b u f f e r 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ H E L P = A n t a l l   t i l l e g g   o g   s l e t t i n g e r   i   A P I - b u f f e r e n   p e r   s e k u n d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 4 _ N A M E = G j e n s t a r t e r   a v   p r o g r a m m e t 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 4 _ H E L P = A n t a l l   g a n g e r   p r o g r a m m e t   e r   s t a r t e t   p    n y t t   u n d e r   w e b s e r v e r e n s   l e v e t i d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 4 _ N A M E = P r o g r a m m e r   s o m   k j  r e r 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 4 _ H E L P = A n t a l l   w e b p r o g r a m m e r   s o m   k j  r e r   i    y e b l i k k e t . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 4 _ N A M E = A n t a l l   k o m p i l e r i n g e r 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 4 _ H E L P = A n t a l l   A S A X - ,   A S C X - ,   A S H X - ,   A S M X -   e l l e r   A S P X - k i l d e f i l e r   s o m   b l e   d y n a m i s k   k o m p i l e r t . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 4 _ N A M E = F e i l s  k i n g s f o r e s p  r s l e r 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 4 _ H E L P = A n t a l l   f e i l s  k i n g s f o r e s p  r s l e r   s o m   b l e   b e h a n d l e t . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 4 _ N A M E = F e i l   u n d e r   k o m p i l e r i n g 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 4 _ H E L P = A n t a l l   f e i l   s o m   o p p s t o d   u n d e r   k o m p i l e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 4 _ N A M E = F e i l   u n d e r   k j  r i n g 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 4 _ H E L P = A n t a l l   f e i l   s o m   o p p s t o d   u n d e r   b e h a n d l i n g e n   a v   e n   f o r e s p  r s e l . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 4 _ N A M E = F e i l   u n d e r   f o r h  n d s b e h a n d l i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 4 _ H E L P = A n t a l l   f e i l   s o m   o p p s t o d   u n d e r   a n a l y s e r i n g   o g   k o n f i g u r a s j o n . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 4 _ N A M E = A n t a l l   f e i l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 4 _ H E L P = T o t a l   a n t a l l   f e i l   s o m   o p p s t o d . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 4 _ N A M E = A n t a l l   f e i l   /   s e k 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 4 _ H E L P = A n t a l l   f e i l   s o m   o p p s t o d . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 4 _ N A M E = F e i l   s o m   i k k e   b l e   b e h a n d l e t   u n d e r   k j  r i n g 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 4 _ H E L P = A n t a l l   f e i l   s o m   i k k e   b l e   b e h a n d l e t   a v   b r u k e r k o d e n ,   m e n   a v   s t a n d a r d   f e i l b e h a n d l i n g . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 4 _ N A M E = F e i l   s o m   i k k e   b l e   b e h a n d l e t   u n d e r   k j  r i n g   /   s e k 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 4 _ H E L P = A n t a l l   u b e h a n d l e d e   f e i l . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 4 _ N A M E = O p p f  r i n g e r   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 4 _ H E L P = G j e l d e n d e   a n t a l l   o p p f  r i n g e r   i   u t d a t a b u f f e r e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 4 _ N A M E = T r e f f   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   k a n   b u f r e s   i   u t d a t a b u f f e r e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 4 _ N A M E = B o m   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   i k k e   k a n   b u f r e s   i   u t d a t a b u f f e r e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 4 _ N A M E = T r e f f p r o s e n t   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 4 _ H E L P = T r e f f p r o s e n t   i   f o r e s p  r s l e r   i   u t d a t a b u f f e r e n . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ N A M E = T r e f f p r o s e n t g r u n n l a g   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ H E L P = T r e f f p r o s e n t g r u n n l a g   i   u t d a t a b u f f e r 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ N A M E = G j e n n o m s t r  m m i n g   i   u t d a t a b u f f e r 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ H E L P = A n t a l l   t i l l e g g   o g   s l e t t i n g e r   i   u t d a t a b u f f e r e n   p e r   s e k u n d . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 4 _ N A M E = T e l l e r   f o r   P i p e l i n e - f o r e k o m s t 
 
 A S P N E T _ P I P E L I N E S _ 0 1 4 _ H E L P = A n t a l l   a k t i v e   P i p e l i n e - f o r e k o m s t e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 4 _ N A M E = A n t a l l   f o r e s p  r s e l s b y t e   i n n 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 4 _ H E L P = T o t a l s t  r r e l s e n ,   i   b y t e ,   p    a l l e   f o r e s p  r s l e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 4 _ N A M E = A n t a l l   f o r e s p  r s e l s b y t e   u t 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 4 _ H E L P = T o t a l s t  r r e l s e n ,   i   b y t e ,   p    s v a r   s e n d t   t i l   e n   k l i e n t .   D e t t e   i n k l u d e r e r   i k k e   s t a n d a r d   H T T P - s v a r h o d e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 4 _ N A M E = B e   o m   k j  r i n g s t i d 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 4 _ H E L P = A n t a l l   m i l l i s e k u n d e r   d e t   t o k      k j  r e   d e n   s i s t e   f o r e s p  r s e l e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 4 _ N A M E = B e   o m   v e n t e t i d 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 4 _ H E L P = A n t a l l   m i l l i s e k u n d e r   s i s t e   f o r e s p  r s e l   m  t t e   v e n t e   i   k  e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 4 _ N A M E = F r a k o b l e d e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   e r   f r a k o b l e t   p    g r u n n   a v   k o m m u n i k a s j o n s f e i l   e l l e r   a t   b r u k e r e n   a v s l u t t e t    k t e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 4 _ N A M E = F o r e s p  r s l e r   s o m   k j  r e r 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   k j  r e r   i    y e b l i k k e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 4 _ N A M E = M i s l y k k e d e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 4 _ H E L P = A n t a l l   m i s l y k k e d e   f o r e s p  r s l e r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 4 _ N A M E = F o r e s p  r s l e r   s o m   i k k e   e r   g o d k j e n t 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   m i s l y k t e s   p    g r u n n   a v   m a n g l e n d e   g o d k j e n n i n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 4 _ N A M E = F o r e s p  r s l e r   s o m   i k k e   b l e   f u n n e t 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s e l s r e s s u r s e r   s o m   i k k e   b l e   f u n n e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 4 _ N A M E = F o r e s p  r s l e r   i   k  
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   v e n t e r   p       b l i   b e h a n d l e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 4 _ N A M E = F o r k a s t e d e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   b l e   f o r k a s t e t   f o r d i   f o r e s p  r s e l s k  e n   v a r   f u l l . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 4 _ N A M E = F u l l f  r t e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   b l e   f u l l f  r t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 4 _ N A M E = T i d s a v b r u t t e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   s o m   b l e   t i d s a v b r u t t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 4 _ N A M E = A n t a l l   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   f o r e s p  r s l e r   s i d e n   p r o g r a m m e t   b l e   s t a r t e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 4 _ N A M E = F o r e s p  r s l e r / s e k 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 4 _ H E L P = A n t a l l   f o r e s p  r s l e r   p e r   s e k u n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 4 _ N A M E = T o t a l t   a n t a l l   S Q L   S e r v e r - t i l k o b l i n g e r   f o r    k t e n 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   t i l k o b l i n g e r   t i l   S Q L   S e r v e r   s o m   b r u k e s   i    k t t i l s t a n d e n . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 4 _ N A M E = T o t a l t   a n t a l l   t i l k o b l i n g e r   t i l    k t s t a t u s s e r v e r e n 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   t i l k o b l i n g e r   t i l    k t s t a t u s s e r v e r e n   s o m   b r u k e s   i    k t s t a t u s e n . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 4 _ N A M E = I g n o r e r t e    k t e r 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   b l e   e k s p l i s i t t   i g n o r e r t . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 4 _ N A M E = A k t i v e    k t e r 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   i    y e b l i k k e t   e r   a k t i v e . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 4 _ N A M E = T i d s a v b r u t t e    k t e r 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   b l e   t i d s a v b r u t t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 4 _ N A M E = A n t a l l    k t e r 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 4 _ H E L P = A n t a l l    k t e r   s i d e n   p r o g r a m m e t   b l e   s t a r t e t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 4 _ N A M E = I g n o r e r t e   s e r v e r  k t e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   b l e   e k s p l i s i t t   i g n o r e r t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 4 _ N A M E = A k t i v e   s e r v e r  k t e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   i    y e b l i k k e t   e r   a k t i v e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 4 _ N A M E = T i d s a v b r u t t e   s e r v e r  k t e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 4 _ H E L P = A n t a l l    k t e r   s o m   b l e   t i d s a v b r u t t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 4 _ N A M E = A n t a l l   s e r v e r  k t e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   s e r v e r  k t e r . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 4 _ N A M E = A n t a l l   o p p f  r i n g e r   i   b u f f e r 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   o p p f  r i n g e r   i   b u f f e r e n   ( b  d e   i n t e r n e   o g   d e   s o m   e r   l a g t   t i l   a v   b r u k e r e n ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 4 _ N A M E = A n t a l l   t r e f f   i   b u f f e r 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   t r e f f   i   b u f f e r e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 4 _ N A M E = A n t a l l   b u f f e r b o m 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   b o m   i   b u f f e r e n . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 4 _ N A M E = T r e f f p r o s e n t   i   b u f f e r 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 4 _ H E L P = T r e f f p r o s e n t   f o r   a l l e   b u f f e r k a l l . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ N A M E = T r e f f p r o s e n t g r u n n l a g   i   b u f f e r 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 4 _ H E L P = T r e f f p r o s e n t g r u n n l a g   i   b u f f e r 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ N A M E = G j e n n o m s t r  m m i n g   i   b u f f e r 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 4 _ H E L P = A n t a l l   t i l l e g g   o g   s l e t t i n g e r   i   b u f f e r e n   p e r   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 4 _ N A M E = A v b r u t t e   t r a n s a k s j o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 4 _ H E L P = A n t a l l   a v b r u t t e   t r a n s a k s j o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 4 _ N A M E = T i l d e l t e   t r a n s a k s j o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 4 _ H E L P = A n t a l l   t i l d e l t e   t r a n s a k s j o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 4 _ N A M E = T r a n s a k s j o n e r   s o m   v e n t e r 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 4 _ H E L P = A n t a l l   t r a n s a k s j o n e r   s o m   v e n t e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 4 _ N A M E = T r a n s a k s j o n e r / s e k 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 4 _ H E L P = T r a n s a k s j o n e r   s t a r t e t   p e r   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 4 _ N A M E = A n t a l l   t r a n s a k s j o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 4 _ H E L P = T o t a l t   a n t a l l   t r a n s a k s j o n e r   s i d e n   p r o g r a m m e t   b l e   s t a r t e t . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 4 _ N A M E = G j e n s t a r t e r   a v   a r b e i d s p r o s e s s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 4 _ H E L P = A n t a l l   g a n g e r   e n   a r b e i d s p r o s e s s   e r   s t a r t e t   p    n y t t   p    d a t a m a s k i n e n . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 4 _ N A M E = A r b e i d s p r o s e s s e r   s o m   k j  r e r 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 4 _ H E L P = A n t a l l   a r b e i d s p r o s e s s e r   s o m   k j  r e r   p    d a t a m a s k i n e n . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   P o l i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 5 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 5 _ H E L P = G l o b a l n e   l i c z n i k i   w y d a j n o [c i   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 5 _ N A M E = A p l i k a c j e   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 5 _ H E L P = L i c z n i k i   w y d a j n o [c i   a p l i k a c j i   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 5 _ N A M E = {d a n i a   a n o n i m o w e 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 5 _ H E L P = L i c z b a   |d a D  k o r z y s t a j c y c h   z   u w i e r z y t e l n i e n i a   a n o n i m o w e g o . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 5 _ N A M E = {d a n i a   a n o n i m o w e   n a   s e k u n d 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 5 _ H E L P = L i c z b a   a n o n i m o w y c h   |d a D  u w i e r z y t e l n i e n i a   n a   s e k u n d . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 5 _ N A M E = W p i s y   i n t e r f e j s u   A P I   w   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   w p i s  w   w   p a m i c i   p o d r c z n e j   d o d a n y c h   p r z e z   u |y t k o w n i k a . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 5 _ N A M E = L i c z b a   o d w o Ba D  i n t e r f e j s u   A P I   d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 5 _ H E L P = L i c z b a   o d w o Ba D  k o d u   u |y t k o w n i k a   d o   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 5 _ N A M E = L i c z b a   n i e t r a f i e D  p r z y   o d w o Ba n i u   i n t e r f e j s u   A P I   d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 5 _ H E L P = L i c z b a   n i e t r a f i e D  p r z y   o d w o Ba n i u   k o d u   u |y t k o w n i k a   d o   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   o d w o Ba D  i n t e r f e j s u   A P I   d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 5 _ H E L P = W s p  Bc z y n n i k   o d w o Ba D  k o d u   u |y t k o w n i k a   d o   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ N A M E = P o d s t a w a   w s p  Bc z y n n i k a   o d w o Ba D  i n t e r f e j s u   A P I   d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ H E L P = P o d s t a w a   w s p  Bc z y n n i k a   o d w o Ba D  i n t e r f e j s u   A P I   d o   p a m i c i   p o d r c z n e j 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   o p e r a c j i   i n t e r f e j s u   A P I   w   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ H E L P = L i c z b a   o p e r a c j i   d o d a n i a   i   u s u n i c i a   p r z e z   i n t e r f e j s   A P I   e l e m e n t  w   z   p a m i c i   p o d r c z n e j   n a   s e k u n d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 5 _ N A M E = P o n o w n e   u r u c h o m i e n i a   a p l i k a c j i 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 5 _ H E L P = L i c z b a   p o n o w n y c h   u r u c h o m i e D  a p l i k a c j i   w   c z a s i e   d z i a Ba n i a   s e r w e r a   s i e c i   W e b . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 5 _ N A M E = A p l i k a c j e   u r u c h o m i o n e 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 5 _ H E L P = L i c z b a   a k t u a l n i e   d z i a Ba j c y c h   a p l i k a c j i   s i e c i   W e b . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 5 _ N A M E = S u m a   k o m p i l a c j i 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 5 _ H E L P = L i c z b a   d y n a m i c z n i e   s k o m p i l o w a n y c h   p l i k  w   zr  d Bo w y c h   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   l u b   . a s p x . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 5 _ N A M E = {d a n i a   d e b u g o w a n i a 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 5 _ H E L P = L i c z b a   p r z e t w o r z o n y c h   |d a D  d e b u g o w a n i a . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 5 _ N A M E = B Bd y   w   c z a s i e   k o m p i l a c j i 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 5 _ H E L P = L i c z b a   b Bd  w ,   k t  r e   w y s t p i By   w   c z a s i e   k o m p i l a c j i . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 5 _ N A M E = B Bd y   w   c z a s i e   w y k o n y w a n i a 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 5 _ H E L P = L i c z b a   b Bd  w ,   k t  r e   w y s t p i By   w   c z a s i e   p r z e t w a r z a n i a   |d a n i a . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 5 _ N A M E = B Bd y   w   c z a s i e   w s t p n e g o   p r z e t w a r z a n i a 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 5 _ H E L P = L i c z b a   b Bd  w ,   k t  r e   w y s t p i By   w   t r a k c i e   a n a l i z o w a n i a   i   k o n f i g u r o w a n i a . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 5 _ N A M E = S u m a   b Bd  w 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   n a p o t k a n y c h   b Bd  w . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 5 _ N A M E = L i c z b a   b Bd  w   n a   s e k u n d 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 5 _ H E L P = W s p  Bc z y n n i k   n a p o t k a n y c h   b Bd  w . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 5 _ N A M E = B Bd y   n i e o b s Bu |o n e   w   c z a s i e   w y k o n y w a n i a 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 5 _ H E L P = L i c z b a   b Bd  w   o b s Bu |o n y c h   n i e   p r z e z   k o d   u |y t k o w n i k a ,   l e c z   p r z e z   d o m y [l n y   k o d   o b s Bu g i   b Bd  w . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 5 _ N A M E = L i c z b a   b Bd  w   n i e o b s Bu |o n y c h   w   c z a s i e   w y k o n y w a n i a   n a   s e k u n d 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 5 _ H E L P = W s p  Bc z y n n i k   n i e o b s Bu |o n y c h   b Bd  w . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 5 _ N A M E = W p i s y   w   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 5 _ H E L P = B i e |c a   l i c z b a   w p i s  w   w   w y j [c i o w e j   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 5 _ N A M E = O d w o Ba n i a   d o   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   b u f o r o w a l n y c h   |d a D  w y j [c i o w y c h ,   k t  r e   z o s t a By   o b s Bu |o n e   w   w y j [c i o w e j   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 5 _ N A M E = N i e t r a f i e n i a   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   b u f o r o w a l n y c h   |d a D  w y j [c i o w y c h ,   k t  r e   n i e   z o s t a By   o b s Bu |o n e   w   w y j [c i o w e j   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   o d w o Ba D  d o   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 5 _ H E L P = W s p  Bc z y n n i k   o d w o Ba D  d o   |d a D  d l a   b u f o r o w a l n y c h   |d a D  w y j [c i o w y c h . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ N A M E = P o d s t a w a   w s p  Bc z y n n i k a   o d w o Ba D  d o   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ H E L P = P o d s t a w a   w s p  Bc z y n n i k a   o d w o Ba D  d o   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   o p e r a c j i   w   w y j [c i o w e j   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ H E L P = L i c z b a   o p e r a c j i   d o d a n i a   i   u s u n i c i a   e l e m e n t  w   z   w y j [c i o w e j   p a m i c i   p o d r c z n e j   n a   s e k u n d . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 5 _ N A M E = L i c z b a   w y s t p i e D  p o t o k o w y c h 
 
 A S P N E T _ P I P E L I N E S _ 0 1 5 _ H E L P = L i c z b a   a k t y w n y c h   w y s t p i e D  p o t o k o w y c h . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 5 _ N A M E = S u m a   |d a n y c h   b a j t  w 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 5 _ H E L P = W y r a |o n a   w   b a j t a c h   c a Bk o w i t a   w i e l k o [  w s z y s t k i c h   |d a D. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 5 _ N A M E = S u m a   b a j t  w   |d a D  w y j [c i o w y c h 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 5 _ H E L P = W y r a |o n a   w   b a j t a c h   c a Bk o w i t a   w i e l k o [  o d p o w i e d z i   w y s Ba n y c h   d o   k l i e n t a .   S t a n d a r d o w e   n a g B w k i   o d p o w i e d z i   p r o t o k o Bu   H T T P   n i e   s   u w z g l d n i a n e . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 5 _ N A M E = C z a s   w y k o n y w a n i a   |d a n i a 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 5 _ H E L P = W y r a |o n y   w   m i l i s e k u n d a c h   c z a s ,   j a k i   b y B  p o t r z e b n y   n a   w y k o n a n i e   o s t a t n i e g o   |d a n i a . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 5 _ N A M E = C z a s   o c z e k i w a n i a   |d a n i a 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 5 _ H E L P = W y r a |o n y   w   m i l i s e k u n d a c h   c z a s   o c z e k i w a n i a ,   j a k i   o s t a t n i e   |d a n i e   s p d z i Bo   w   k o l e j c e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 5 _ N A M E = R o z Bc z o n e   |d a n i a 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 5 _ H E L P = L i c z b a   |d a D  r o z Bc z o n y c h   p r z e z   u |y t k o w n i k  w   l u b   z   p o w o d u   b Bd  w   k o m u n i k a c j i . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 5 _ N A M E = W y k o n y w a n e   |d a n i a 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 5 _ H E L P = L i c z b a   w y k o n y w a n y c h   a k t u a l n i e   |d a D. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 5 _ N A M E = N i e u d a n e   |d a n i a 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   n i e u d a n y c h   |d a D. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 5 _ N A M E = {d a n i a   n i e u w i e r z y t e l n i o n e 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 5 _ H E L P = L i c z b a   |d a D  n i e u d a n y c h   z   p o w o d u   n i e a u t o r y z o w a n e g o   d o s t p u . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 5 _ N A M E = {d a n i a   n i e o d n a l e z i o n y c h   z a s o b  w 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 5 _ H E L P = L i c z b a   |d a D  z a s o b  w ,   k t  r e   n i e   z o s t a By   o d n a l e z i o n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 5 _ N A M E = {d a n i a   w   k o l e j c e 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 5 _ H E L P = L i c z b a   |d a D  o c z e k u j c y c h   n a   p r z e t w o r z e n i e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 5 _ N A M E = {d a n i a   o d r z u c o n e 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 5 _ H E L P = L i c z b a   |d a D  o d r z u c o n y c h   z   p o w o d u   z a p e Bn i e n i a   k o l e j k i   |d a D. 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 5 _ N A M E = {d a n i a   p o m y [l n e 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 5 _ H E L P = L i c z b a   |d a D  o b s Bu |o n y c h   p o m y [l n i e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 5 _ N A M E = {d a n i a   z   p r z e k r o c z o n y m   l i m i t e m   c z a s u 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 5 _ H E L P = L i c z b a   |d a D,   w   w y p a d k u   k t  r y c h   z o s t a B  p r z e k r o c z o n y   l i m i t   c z a s u . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 5 _ N A M E = S u m a   |d a D
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   |d a D  o d   c h w i l i   u r u c h o m i e n i a   a p l i k a c j i . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 5 _ N A M E = L i c z b a   |d a D  n a   s e k u n d 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 5 _ H E L P = L i c z b a   w y k o n a n y c h   |d a D  n a   s e k u n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 5 _ N A M E = Ac z n a   l i c z b a   p o Bc z e D  z   s e r w e r e m   S Q L   d l a   s e s j i 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 5 _ H E L P = Ac z n a   l i c z b a   p o Bc z e D  z   s e r w e r e m   S Q L   u |y w a n y c h   p r z e z   s t a n   s e s j i . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 5 _ N A M E = C a Bk o w i t a   l i c z b a   p o Bc z e D  z   s e r w e r e m   s t a n u   s e s j i 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   p o Bc z e D  z   s e r w e r e m   s t a n u   s e s j i   u |y t y c h   p r z e z   s t a n   s e s j i . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 5 _ N A M E = S e s j e   p o r z u c o n e 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 5 _ H E L P = L i c z b a   j a w n i e   p o r z u c o n y c h   s e s j i . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 5 _ N A M E = S e s j e   a k t y w n e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 5 _ H E L P = B i e |c a   l i c z b a   a k t y w n y c h   s e s j i . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 5 _ N A M E = L i c z b a   s e s j i   z   p r z e k r o c z o n y m   l i m i t e m   c z a s u 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 5 _ H E L P = L i c z b a   s e s j i ,   w   k t  r y c h   z o s t a B  p r z e k r o c z o n y   l i m i t   c z a s u . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 5 _ N A M E = S u m a   s e s j i 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   s e s j i   o d   c h w i l i   u r u c h o m i e n i a   a p l i k a c j i . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 5 _ N A M E = P o r z u c o n e   s e s j e   s e r w e r a   s t a n u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 5 _ H E L P = L i c z b a   j a w n i e   p o r z u c o n y c h   s e s j i . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 5 _ N A M E = A k t y w n e   s e s j e   s e r w e r a   s t a n u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 5 _ H E L P = B i e |c a   l i c z b a   a k t y w n y c h   s e s j i . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 5 _ N A M E = S e s j e   s e r w e r a   s t a n u   z   p r z e k r o c z o n y m   l i m i t e m   c z a s u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 5 _ H E L P = L i c z b a   s e s j i ,   w   k t  r y c h   z o s t a B  p r z e k r o c z o n y   l i m i t   c z a s u . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 5 _ N A M E = S u m a   s e s j i   s e r w e r a   s t a n u 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   s e s j i . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 5 _ N A M E = S u m a   w p i s  w   w   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   w p i s  w   w   p a m i c i   p o d r c z n e j   ( w e w n t r z n y c h   o r a z   d o d a n y c h   p r z e z   u |y t k o w n i k  w ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 5 _ N A M E = S u m a   o d w o Ba D  d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   o d w o Ba D  d o   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 5 _ N A M E = S u m a   n i e t r a f i e D  p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   n i e t r a f i e D  p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   w s z y s t k i c h   o d w o Ba D  d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 5 _ H E L P = W s p  Bc z y n n i k   w s z y s t k i c h   t r a f n y c h   o d w o Ba D  d o   p a m i c i   p o d r c z n e j . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ N A M E = P o d s t a w a   w s p  Bc z y n n i k a   w s z y s t k i c h   o d w o Ba D  d o   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 5 _ H E L P = P o d s t a w a   w s p  Bc z y n n i k a   w s z y s t k i c h   o d w o Ba D  d o   p a m i c i   p o d r c z n e j 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ N A M E = W s p  Bc z y n n i k   w s z y s t k i c h   o p e r a c j i   w   p a m i c i   p o d r c z n e j 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   o p e r a c j i   d o d a n i a   i   u s u n i c i a   e l e m e n t  w   z   p a m i c i   p o d r c z n e j   n a   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 5 _ N A M E = T r a n s a k c j e   p o r z u c o n e 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 5 _ H E L P = L i c z b a   z a n i e c h a n y c h   t r a n s a k c j i . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 5 _ N A M E = T r a n s a k c j e   z a t w i e r d z o n e 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 5 _ H E L P = L i c z b a   z a t w i e r d z o n y c h   t r a n s a k c j i . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 5 _ N A M E = T r a n s a k c j e   o c z e k u j c e 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 5 _ H E L P = L i c z b a   t r a n s a k c j i   w   t o k u . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 5 _ N A M E = L i c z b a   t r a n s a k c j i   n a   s e k u n d 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 5 _ H E L P = L i c z b a   r o z p o c z t y c h   t r a n s a k c j i   n a   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 5 _ N A M E = S u m a   t r a n s a k c j i 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 5 _ H E L P = C a Bk o w i t a   l i c z b a   t r a n s a k c j i   o d   c h w i l i   u r u c h o m i e n i a   a p l i k a c j i . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 5 _ N A M E = P o n o w n e   u r u c h o m i e n i a   p r o c e s u   r o b o c z e g o 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 5 _ H E L P = L i c z b a   p o n o w n y c h   u r u c h o m i e D  p r o c e s u   r o b o c z e g o   n a   d a n y m   k o m p u t e r z e . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 5 _ N A M E = U r u c h o m i o n e   p r o c e s y   r o b o c z e 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 5 _ H E L P = L i c z b a   u r u c h o m i o n y c h   n a   d a n y m   k o m p u t e r z e   p r o c e s  w   r o b o c z y c h . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   R u s s i a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 9 _ N A M E = A S P . N E T ,   25@A8O  % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 9 _ H E L P = !G5BG8:8  3;>10;L=KE  E0@0:B5@8AB8:  A S P . N E T ,   25@A8O  % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 9 _ N A M E = A S P . N E T   A p p s ,   25@A8O  % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 9 _ H E L P = !G5BG8:8  E0@0:B5@8AB8:  ?@8;>65=8O  A S P . N E T ,   25@A8O  % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 9 _ N A M E = =>=8<=KE  70?@>A>2
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   8A?>;L7CNI8E  ?@8  0CB5=B8D8:0F88  CG5B=CN  70?8AL  0=>=8<=>3>  ?>;L7>20B5;O. 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 9 _ N A M E = =>=8<=KE  70?@>A>2/ A5:
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   8A?>;L7CNI8E  ?@8  0CB5=B8D8:0F88  CG5B=CN  70?8AL  0=>=8<=>3>  ?>;L7>20B5;O,   2  A5:C=4C
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 9 _ N A M E = >@F89  40==KE  2  :MH5  A P I 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 9 _ H E L P = 1I55  G8A;>  ?>@F89  40==KE  2  MB><  :MH5,   4>102;5==KE  ?>;L7>20B5;5<. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 9 _ N A M E = >?040=89  2  :MH  A P I 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 9 _ H E L P = '8A;>  @57C;LB0B82=KE  >1@0I5=89  2  :MH  87  :>40  ?>;L7>20B5;O. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 9 _ N A M E = @><0E>2  :MH0  A P I 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 9 _ H E L P = '8A;>  =5@57C;LB0B82=KE  >1@0I5=89  2  :MH  ?@8  >1@0I5=8OE  87  :>40  ?>;L7>20B5;O. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 9 _ N A M E =  57C;LB0B82=>ABL  ?>8A:0  2  :MH5  A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 9 _ H E L P = >;O  @57C;LB0B82=KE  >1@0I5=89  87  :>40  ?>;L7>20B5;O. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ N A M E = A=>20=85  4;O  2KG8A;5=8O  @57C;LB0B82=>AB8  ?>8A:0  2  :MH5  A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ H E L P = A=>20=85  4;O  2KG8A;5=8O  @57C;LB0B82=>AB8  ?>8A:0  2  :MH5  A P I 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ N A M E = '0AB>B0  B5:CG5AB8  40==KE  2  :MH5  A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ H E L P = '8A;>  4>102;5=89  8  C40;5=89  2  :MH5  A P I   2  A5:C=4C. 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 9 _ N A M E = 5@570?CA:>2  ?@8;>65=8O
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 9 _ H E L P = '8A;>  ?5@570?CA:>2  40==>3>  ?@8;>65=8O  70  2@5<O  ACI5AB2>20=8O  251- A5@25@0. 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 9 _ N A M E = 0?CI5=>  ?@8;>65=89
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 9 _ H E L P = '8A;>  2K?>;=ONI8EAO  2  B5:CI89  <><5=B  251- ?@8;>65=89. 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 9 _ N A M E = 1I55  G8A;>  :><?8;OF89
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 9 _ H E L P = '8A;>  48=0<8G5A:8  A:><?8;8@>20==KE  8AE>4=KE  D09;>2  . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   8  . a s p x . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 9 _ N A M E = 0?@>A>2  >B;04:8
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 9 _ H E L P = '8A;>  >1@01>B0==KE  70?@>A>2  >B;04:8. 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 9 _ N A M E = H81>:  ?@8  :><?8;OF88
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 9 _ H E L P = '8A;>  >H81>:,   2>7=8:H8E  2>  2@5<O  :><?8;OF88. 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 9 _ N A M E = H81>:  ?@8  2K?>;=5=88
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 9 _ H E L P = '8A;>  >H81>:,   2>7=8:H8E  2>  2@5<O  >1@01>B:8  70?@>A0. 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 9 _ N A M E = H81>:  ?@8  >1@01>B:5
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 9 _ H E L P = '8A;>  >H81>:,   2>7=8:H8E  2>  2@5<O  A8=B0:A8G5A:>3>  @071>@0  8  :>=D83C@8@>20=8O. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 9 _ N A M E = 1I55  G8A;>  >H81>:
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 9 _ H E L P = 1I55  G8A;>  2>7=8:H8E  >H81>:. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 9 _ N A M E = 1I55  G8A;>  >H81>:/ A5:
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 9 _ H E L P = '0AB>B0  2>7=8:=>25=8O  >H81>:. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 9 _ N A M E = 5>1@01>B0==KE  >H81>:  ?@8  2K?>;=5=88
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 9 _ H E L P = '8A;>  >H81>:,   >1@01>B0==KE  =5  :>4><  ?>;L7>20B5;O,   0  >1@01>BG8:><  >H81>:  ?>  C<>;G0=8N. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 9 _ N A M E = 5>1@01>B0==KE  >H81>:  ?@8  2K?>;=5=88/ A5:
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 9 _ H E L P = '0AB>B0  =5>1@01>B0==KE  >H81>:. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 9 _ N A M E = >@F89  40==KE  2  2KE>4=><  :MH5
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 9 _ H E L P = "5:CI55  G8A;>  ?>@F89  40==KE  2  2KE>4=><  :MH5. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 9 _ N A M E = >?040=89  2  2KE>4=>9  :MH
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 9 _ H E L P = 1I55  G8A;>  :MH8@>20==KE  2KE>4=KE  70?@>A>2,   >1A;C65==KE  2  2KE>4=><  :MH5. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 9 _ N A M E = @><0E>2  2KE>4=>3>  :MH0
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 9 _ H E L P = 1I55  G8A;>  :MH8@>20==KE  2KE>4=KE  70?@>A>2,   =5  >1A;C65==KE  2  2KE>4=><  :MH5. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 9 _ N A M E =  57C;LB0B82=>ABL  ?>8A:0  2  2KE>4=><  :MH5
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 9 _ H E L P = >;O  @57C;LB0B82=KE  >1@0I5=89  4;O  :MH8@C5<KE  2KE>4=KE  70?@>A>2. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ N A M E = A=>20=85  4;O  2KG8A;5=8O  @57C;LB0B82=>AB8  2  2KE>4=><  :MH5
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ H E L P = A=>20=85  4;O  2KG8A;5=8O  @57C;LB0B82=>AB8  ?>8A:0  2  2KE>4=><  :MH5
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ N A M E = '0AB>B0  B5:CG5AB8  40==KE  2  2KE>4=><  :MH5
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ H E L P = '8A;>  4>102;5=89  8  C40;5=89  2  2KE>4=><  :MH5  2  A5:C=4C. 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 9 _ N A M E = '8A;>  M:75<?;O@>2  :>=2595@>2
 
 A S P N E T _ P I P E L I N E S _ 0 1 9 _ H E L P = '8A;>  0:B82=KE  M:75<?;O@>2  :>=2595@>2. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 9 _ N A M E = A53>  109B>2  70?@>A>2
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 9 _ H E L P = 1I89  @07<5@  ( 2  109B0E)   2A5E  70?@>A>2. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 9 _ N A M E = A53>  109B>2  >B25B>2
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 9 _ H E L P = 1I89  @07<5@  ( 2  109B0E)   >B25B>2,   ?5@540==KE  :;85=BC.     !N40  =5  2:;NG5=K  AB0=40@B=K5  703>;>2:8  >B25B>2  H T T P . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 9 _ N A M E = @5<O  2K?>;=5=8O  70?@>A0
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 9 _ H E L P = @5<O  ( <A5:) ,   70B@0G5==>5  =0  2K?>;=5=85  ?>A;54=53>  70?@>A0. 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 9 _ N A M E = @5<O  >6840=8O  4;O  70?@>A0
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 9 _ H E L P = @5<O  ( <A5:)   2  B5G5=85  :>B>@>3>  =0E>48;AO  2  >G5@548  ?>A;54=89  70?@>A. 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 9 _ N A M E = @5@20=>  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   ?@5@20==KE  2A;54AB285  >H81>:  A2O78  8;8  ?@5@20==KE  ?>;L7>20B5;5<. 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 9 _ N A M E = K?>;=O5BAO  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   2K?>;=ONI8EAO  =0  B5:CI89  <><5=B. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 9 _ N A M E = 5C40G=KE  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 9 _ H E L P = 1I55  G8A;>  =5C40G=KE  70?@>A>2. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 9 _ N A M E = 0?@>A>2,   =5  ?@>H54H8E  02B>@870F8N
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   =5  >1@01>B0==KE  ?>  ?@8G8=5  70?@5B0  4>ABC?0. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 9 _ N A M E = 0?@>A>2  >BACBAB2CNI8E  @5AC@A>2
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 9 _ H E L P = '8A;>  70?@>A>2  @5AC@A>2,   :>B>@K5  =5  1K;8  =0945=K. 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 9 _ N A M E = 0?@>A>2  2  >G5@548
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   >6840NI8E  >1@01>B:8. 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 9 _ N A M E = B:;>=5=>  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 9 _ H E L P = '8A;>  70?@>A>2,   >B:;>=5==KE  87- 70  ?5@5?>;=5=8O  >G5@548  70?@>A>2. 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 9 _ N A M E = #A?5H=KE  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 9 _ H E L P = '8A;>  CA?5H=>  2K?>;=5==KE  70?@>A>2. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 9 _ N A M E = 0?@>A>2  A  8AB5:H8<  2@5<5=5<  >6840=8O
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 9 _ H E L P = '8A;>  70?@>A>2  A  8AB5:H8<  2@5<5=5<  >6840=8O. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 9 _ N A M E = 1I55  G8A;>  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 9 _ H E L P = 1I55  G8A;>  70?@>A>2  A  <><5=B0  70?CA:0  40==>3>  ?@8;>65=8O. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 9 _ N A M E = 0?@>A>2/ A5:
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 9 _ H E L P = '8A;>  2K?>;=O5<KE  70?@>A>2  2  A5:C=4C. 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 9 _ N A M E = A53>  A>548=5=89  A  A5@25@><  S Q L 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 9 _ H E L P = 1I55  8A?>;L7>20==>5  G8A;>  A>548=5=89  A  A5@25@><  S Q L   ?>  A>AB>O=8N  A50=A0. 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 9 _ N A M E = A53>  A>548=5=89  A  A5@25@><  A>AB>O=89
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 9 _ H E L P = I55  8A?>;L7C5<>5  G8A;>  A>548=5=89  A  A5@25@><  A>AB>O=89  ?>  A>AB>O=8O<  A50=A0. 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 9 _ N A M E = 8:2848@>20==KE  A50=A>2
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 9 _ H E L P = '8A;>  A50=A>2,   :>B>@K5  1K;8  ;8:2848@>20=K  O2=>. 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 9 _ N A M E = :B82=KE  A50=A>2
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 9 _ H E L P = "5:CI55  G8A;>  0:B82=KE  2  40==K9  <><5=B  A50=A>2. 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 9 _ N A M E = !50=A>2  A  8AB5:H8<  2@5<5=5<  >6840=8O
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 9 _ H E L P = '8A;>  A50=A>2  A  8AB5:H8<  2@5<5=5<  >6840=8O. 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 9 _ N A M E = 1I55  G8A;>  A50=A>2
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 9 _ H E L P = 1I55  G8A;>  A50=A>2  A  <><5=B0  70?CA:0  40==>3>  ?@8;>65=8O. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 9 _ N A M E = 8:2848@>20=>  A50=A>2  A5@25@0
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 9 _ H E L P = '8A;>  A50=A>2,   :>B>@K5  1K;8  ;8:2848@>20=K  O2=>. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 9 _ N A M E = :B82=>  A50=A>2  A5@25@0
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 9 _ H E L P = '8A;>  0:B82=KE  =0  40==K9  <><5=B  A50=A>2. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 9 _ N A M E = !50=A>2  A5@25@0  A  8AB5:H8<  2@5<5=5<  >6840=8O
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 9 _ H E L P = '8A;>  A50=A>2  A  8AB5:H8<  2@5<5=5<  >6840=8O. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 9 _ N A M E = 1I55  G8A;>  A50=A>2  A5@25@0
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 9 _ H E L P = 1I55  G8A;>  A50=A>2. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 9 _ N A M E = A53>  ?>@F89  40==KE  2  :MH5
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 9 _ H E L P = 1I55  G8A;>  ?>@F89  40==KE  2  :MH5  ( :0:  2=CB@5==8E,   B0:  8  4>102;5==KE  ?>;L7>20B5;5<) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 9 _ N A M E = A53>  ?>?040=89  2  :MH
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 9 _ H E L P = 1I55  G8A;>  @57C;LB0B82=KE  >1@0I5=89  2  :MH. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 9 _ N A M E = A53>  ?@><0E>2  :MH0
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 9 _ H E L P = 1I55  G8A;>  =5@57C;LB0B82=KE  >1@0I5=89  2  :MH. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 9 _ N A M E = 1I0O  @57C;LB0B82=>ABL  ?>8A:0  2  :MH5
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 9 _ H E L P = >;O  @57C;LB0B82=KE  >1@0I5=89  2  >1I5<  G8A;5  >1@0I5=89  2  :MH. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ N A M E = A=>20=85  4;O  2KG8A;5=8O  >1I59  @57C;LB0B82=>AB8  ?>8A:0  2  :MH5
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 9 _ H E L P = A=>20=85  4;O  2KG8A;5=8O  >1I59  @57C;LB0B82=>AB8  ?>8A:0  2  :MH5
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ N A M E = '0AB>B0  B5:CG5AB8  40==KE  2  >1I5<  :MH5
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 9 _ H E L P = '8A;>  4>102;5=89  8  C40;5=89  2  >1I5<  :MH5  2  A5:C=4C. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 9 _ N A M E = @5@20==KE  B@0=70:F89
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 9 _ H E L P = '8A;>  ?@5@20==KE  B@0=70:F89. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 9 _ N A M E = 0D8:A8@>20=>  B@0=70:F89
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 9 _ H E L P = '8A;>  B@0=70:F89,   :>B>@K5  1K;8  70D8:A8@>20=K. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 9 _ N A M E = 57025@H5==KE  B@0=70:F89
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 9 _ H E L P = '8A;>  2K?>;=ONI8EAO  B@0=70:F89. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 9 _ N A M E = "@0=70:F89/ A5:
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 9 _ H E L P = '8A;>  =0G0BKE  B@0=70:F89  2  A5:C=4C. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 9 _ N A M E = 1I55  G8A;>  B@0=70:F89
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 9 _ H E L P = 1I55  G8A;>  B@0=70:F89  A  <><5=B0  70?CA:0  40==>3>  ?@8;>65=8O. 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 9 _ N A M E = 5@570?CA:>2  @01>G53>  ?@>F5AA0
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 9 _ H E L P = >;8G5AB2>  ?5@570?CA:>2  @01>G53>  ?@>F5AA0  =0  40==>9  <0H8=5. 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 9 _ N A M E = 0?CI5=>  @01>G8E  ?@>F5AA>2
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 9 _ H E L P = '8A;>  @01>G8E  ?@>F5AA>2,   2K?>;=ONI8EAO  =0  40==>9  <0H8=5. 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   S w e d i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 D _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 D _ H E L P = G l o b a l a   p r e s t a n d a r  k n a r e   f  r   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 D _ N A M E = A S P . N E T - t i l l  m p n i n g a r   ( % A S P N E T _ V E R % ) 
 
 O B J E C T _ 2 _ 0 1 D _ H E L P = P r e s t a n d a r  k n a r e   f  r   A S P . N E T - t i l l  m p n i n g a r   ( % A S P N E T _ V E R % ) 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 D _ N A M E = A n o n y m a   b e g  r a n d e n 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   a n v  n d e r   a n o n y m   a u t e n t i s e r i n g . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 D _ N A M E = A n o n y m a   b e g  r a n d e n / s e k u n d 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   a n v  n d e r   a n o n y m   a u t e n t i s e r i n g   p e r   s e k u n d 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 D _ N A M E = P o s t e r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 D _ H E L P = T o t a l t   a n t a l   p o s t e r   s o m   l a g t s   t i l l   a v   a n v  n d a r e n   i   c a c h e m i n n e t . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 D _ N A M E = T r  f f a r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 D _ H E L P = A n t a l e t   c a c h e t r  f f a r   f r  n   a n v  n d a r k o d . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 D _ N A M E = M i s s a r   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 D _ H E L P = A n t a l e t   c a c h e m i s s a r   f r  n   a n v  n d a r k o d s a n r o p . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 D _ N A M E = T r  f f r e k v e n s   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 D _ H E L P = T r  f f r e k v e n s   i   c a c h e - A P I   f r  n   a n v  n d a r k o d s a n r o p . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ N A M E = T r  f f r e k v e n s   i   c a c h e - A P I   ( b a s ) 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ H E L P = T r  f f r e k v e n s   i   c a c h e - A P I   ( b a s ) 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ N A M E = O m s  t t n i n g s f r e k v e n s   i   c a c h e - A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ H E L P = A n t a l e t   t i l l a g d a   o c h   b o r t t a g n a   p o s t e r   i   c a c h e - A P I   p e r   s e k u n d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 D _ N A M E = T i l l  m p n i n g s o m s t a r t e r 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 D _ H E L P = A n t a l e t   g  n g e r   s o m   t i l l  m p n i n g s p r o g r a m m e t   h a r   s t a r t a t s   o m   u n d e r   w e b b s e r v e r n s   g i l t i g h e t s t i d . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 D _ N A M E = T i l l  m p n i n g s p r o g r a m   s o m   k  r s 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 D _ H E L P = A n t a l   w e b b t i l l  m p n i n g a r   s o m   k  r s . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 D _ N A M E = T o t a l t   a n t a l   k o m p i l e r i n g a r 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 D _ H E L P = A n t a l e t   k  l l f i l e r   a v   t y p e n   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   e l l e r   . a s p x   s o m   k o m p i l e r a t s   d y n a m i s k t . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 D _ N A M E = F e l s  k n i n g s b e g  r a n d e n 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 D _ H E L P = A n t a l e t   b e h a n d l a d e   f e l s  k n i n g s b e g  r a n d e n . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 D _ N A M E = F e l   u n d e r   k o m p i l e r i n g 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 D _ H E L P = A n t a l   f e l   s o m   h a r   u p p s t  t t   u n d e r   k o m p i l e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 D _ N A M E = F e l   u n d e r   k  r n i n g 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 D _ H E L P = A n t a l   f e l   s o m   h a r   u p p s t  t t   u n d e r   b e h a n d l i n g   a v   e n   b e g  r a n . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 D _ N A M E = F e l   u n d e r   f  r b e h a n d l i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 D _ H E L P = A n t a l   f e l   s o m   h a r   u p p s t  t t   u n d e r   t o l k n i n g   o c h   k o n f i g u r e r i n g . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 D _ N A M E = T o t a l t   a n t a l   f e l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 D _ H E L P = T o t a l t   a n t a l   f e l   s o m   h a r   u p p s t  t t . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 D _ N A M E = T o t a l t   a n t a l   f e l / s e k u n d 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 D _ H E L P = F r e k v e n s   f  r   f e l   s o m   u p p s t  t t . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 D _ N A M E = F e l   s o m   i n t e   h a n t e r a t s   u n d e r   k  r n i n g 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 D _ H E L P = A n t a l   f e l   s o m   i n t e   h a n t e r a t s   a v   a n v  n d a r k o d   u t a n   a v   s t a n d a r d f e l h a n t e r a r e n . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 D _ N A M E = A n t a l   f e l   s o m   i n t e   h a n t e r a t s   u n d e r   k  r n i n g / s e k u n d 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 D _ H E L P = F r e k v e n s   f  r   o h a n t e r a d e   f e l . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 D _ N A M E = P o s t e r   i   u t d a t a c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 D _ H E L P = A k t u e l l t   a n t a l   p o s t e r   i   u t d a t a c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 D _ N A M E = T r  f f a r   i   u t d a t a c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 D _ H E L P = T o t a l t   a n t a l   b e g  r a n d e n   o m   l a g r i n g   i   u t d a t a c a c h e   s o m   g o d k  n t s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 D _ N A M E = M i s s a r   i   u t d a t a c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 D _ H E L P = T o t a l t   a n t a l   b e g  r a n d e n   o m   l a g r i n g   i   u t d a t a c a c h e   s o m   n e k a t s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 D _ N A M E = T r  f f r e k v e n s   i   u t d a t a c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 D _ H E L P = T r  f f r e k v e n s   f  r   b e g  r a n d e n   o m   l a g r i n g   i   u t d a t a c a c h e . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ N A M E = T r  f f r e k v e n s   i   u t d a t a c a c h e   ( b a s ) 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ H E L P = T r  f f r e k v e n s   i   u t d a t a c a c h e   ( b a s ) 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ N A M E = O m s  t t n i n g s f r e k v e n s   i   u t d a t a c a c h e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ H E L P = A n t a l e t   t i l l a g d a   o c h   b o r t t a g n a   p o s t e r   i   u t d a t a c a c h e   p e r   s e k u n d . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 D _ N A M E = A n t a l   p i p e l i n e - i n s t a n s e r 
 
 A S P N E T _ P I P E L I N E S _ 0 1 D _ H E L P = A n t a l   a k t i v a   p i p e l i n e - i n s t a n s e r . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 D _ N A M E = B y t e   i n   f  r   b e g  r a n 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 D _ H E L P = D e n   s a m m a n l a g d a   s t o r l e k e n ,   i   b y t e ,   f  r   b e g  r a n d e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 D _ N A M E = B y t e   u t   f  r   b e g  r a n 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 D _ H E L P = D e n   s a m m a n l a g d a   s t o r l e k e n ,   i   b y t e ,   a v   s v a r   s o m   s k i c k a t s   t i l l   k l i e n t e r .   D e t t a   i n k l u d e r a r   i n t e   H T T P - s v a r s h u v u d e n . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 D _ N A M E = K  r n i n g s t i d   f  r   b e g  r a n 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 D _ H E L P = A n t a l e t   m i l l i s e k u n d e r   s o m   d e t   t o g   a t t   u t f  r a   d e n   s e n a s t e   b e g  r a n . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 D _ N A M E = V  n t e t i d   f  r   b e g  r a n 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 D _ H E L P = A n t a l   m i l l i s e k u n d e r   s o m   d e n   s e n a s t e   b e g  r a n   f i c k   v  n t a   i   k  n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 D _ N A M E = F r  n k o p p l a d e   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   k o p p l a t s   f r  n   p    g r u n d   a v   k o m m u n i k a t i o n s f e l   e l l e r   a t t   a n v  n d a r e n   a v b r u t i t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 D _ N A M E = B e g  r a n d e n   s o m   u t f  r s 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   u t f  r s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 D _ N A M E = M i s s l y c k a d e   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 D _ H E L P = T o t a l t   a n t a l   m i s s l y c k a d e   b e g  r a n d e n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 D _ N A M E = B e g  r a n d e n   s o m   i n t e   h a r   a u t e n t i s e r a t s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   m i s s l y c k a t s   p    g r u n d   a v   o t i l l  t e n    t k o m s t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 D _ N A M E = B e g  r a n d e n   s o m   i n t e   h i t t a t s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   a v   r e s u r s e r   s o m   i n t e   h i t t a t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 D _ N A M E = B e g  r a n d e n   i   k  
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   v  n t a r   p    a t t   b e h a n d l a s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 D _ N A M E = N e k a d e   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   n e k a t s   p    g r u n d   a v   a t t   k  n   m e d   b e g  r a n d e n    r   f u l l . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 D _ N A M E = L y c k a d e   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   l y c k a t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 D _ N A M E = T i m e o u t   f  r   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 D _ H E L P = A n t a l e t   b e g  r a n d e n   s o m   g j o r t   t i m e o u t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 D _ N A M E = T o t a l t   a n t a l   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 D _ H E L P = T o t a l t   a n t a l   b e g  r a n d e n   s e d a n   t i l l  m p n i n g s p r o g r a m m e t   s t a r t a d e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 D _ N A M E = B e g  r a n d e n / s e k u n d 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 D _ H E L P = A n t a l e t   u t f  r d a   b e g  r a n d e n / s e k u n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 D _ N A M E = T o t a l t   a n t a l   S Q L - s e r v e r a n s l u t n i n g a r   i   s e s s i o n 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 D _ H E L P = T o t a l t   a n t a l   S Q L - s e r v e r a n s l u t n i n g a r   s o m   a n v  n d s   i   s e s s i o n s t i l l s t  n d . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 D _ N A M E = T o t a l t   a n t a l   a n s l u t n i n g a r   t i l l   s e s s i o n s t i l l s t  n d s s e r v e r 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 D _ H E L P = T o t a l t   a n t a l   a n s l u t n i n g a r   t i l l   s e s s i o n s t i l l s t  n d s s e r v e r   s o m   a n v  n d s   i   s e s s i o n s t i l l s t  n d . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 D _ N A M E = A v b r u t n a   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 D _ H E L P = A n t a l e t   a v b r u t n a   s e s s i o n e r . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 D _ N A M E = A k t i v a   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 D _ H E L P = A n t a l e t   a k t i v a   s e s s i o n e r . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 D _ N A M E = S e s s i o n e r   a v b r u t n a   p g a   t i m e o u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 D _ H E L P = A n t a l e t   s e s s i o n e r   s o m   o r s a k a t   t i m e o u t . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 D _ N A M E = T o t a l t   a n t a l   s e s s i o n e r 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 D _ H E L P = T o t a l t   a n t a l   s e s s i o n e r   s e d a n   t i l l  m p n i n g s p r o g r a m m e t   s t a r t a d e s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 D _ N A M E = A v b r u t n a   s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 D _ H E L P = A n t a l e t   a v b r u t n a   s e s s i o n e r . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 D _ N A M E = A k t i v a   s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 D _ H E L P = A n t a l e t   a k t i v a   s e s s i o n e r . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 D _ N A M E = T i m e o u t   f  r   s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 D _ H E L P = A n t a l e t   s e s s i o n e r   s o m   o r s a k a t   t i m e o u t . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 D _ N A M E = T o t a l t   a n t a l   s e r v e r s e s s i o n e r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 D _ H E L P = D e t   t o t a l a   a n t a l e t   s e s s i o n e r . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 D _ N A M E = T o t a l t   a n t a l   c a c h e p o s t e r 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 D _ H E L P = T o t a l t   a n t a l   p o s t e r   i   c a c h e m i n n e t   ( b  d e   i n t e r n a   p o s t e r   o c h   p o s t e r   s o m   l a g t s   t i l l   a v   a n v  n d a r e n ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 D _ N A M E = T o t a l t   a n t a l   t r  f f a r   i   c a c h e m i n n e t 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 D _ H E L P = T o t a l t   a n t a l   t r  f f a r   i   c a c h e m i n n e t . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 D _ N A M E = T o t a l t   a n t a l   m i s s a r   i   c a c h e m i n n e t 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 D _ H E L P = T o t a l t   a n t a l   m i s s a r   i   c a c h e m i n n e t . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 D _ N A M E = T o t a l   t r  f f r e k v e n s   i   c a c h e m i n n e t 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 D _ H E L P = T r  f f r e k v e n s   f r  n   a l l a   c a c h e a n r o p . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ N A M E = T o t a l   t r  f f r e k v e n s   i   c a c h e m i n n e t   ( b a s ) 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 D _ H E L P = T o t a l   t r  f f r e k v e n s   i   c a c h e m i n n e t   ( b a s ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ N A M E = O m s  t t n i n g s f r e k v e n s   i   c a c h e m i n n e t 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 D _ H E L P = A n t a l e t   t i l l a g d a   o c h   b o r t t a g n a   p o s t e r   i   c a c h e m i n n e t   p e r   s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 D _ N A M E = A v b r u t n a   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 D _ H E L P = A n t a l   a v b r u t n a   t r a n s a k t i o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 D _ N A M E = S l u t f  r d a   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 D _ H E L P = A n t a l   s l u t f  r d a   t r a n s a k t i o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 D _ N A M E = V  n t a n d e   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 D _ H E L P = A n t a l   p  g  e n d e   t r a n s a k t i o n e r . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 D _ N A M E = T r a n s a k t i o n e r / s e k u n d 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 D _ H E L P = A n t a l   s t a r t a d e   t r a n s a k t i o n e r / s e k u n d . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 D _ N A M E = T o t a l t   a n t a l   t r a n s a k t i o n e r 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 D _ H E L P = T o t a l t   a n t a l   t r a n s a k t i o n e r   s e d a n   t i l l  m p n i n g s p r o g r a m m e t   s t a r t a d e s . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 D _ N A M E = A r b e t s p r o c e s s o m s t a r t e r 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 D _ H E L P = A n t a l e t   g  n g e r   s o m   e n   a r b e t s p r o c e s s   h a r   s t a r t a t s   o m   p    d a t o r n . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 D _ N A M E = A r b e t s p r o c e s s e r   s o m   k  r s 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 D _ H E L P = A n t a l e t   a r b e t s p r o c e s s e r   s o m   k  r s   p    d a t o r n . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   T u r k i s h 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 0 1 F _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 0 1 F _ H E L P = A S P . N E T   % A S P N E T _ V E R %   g e n e l   p e r f o r m a n s   s a y a  l a r 1
 
 O B J E C T _ 2 _ 0 1 F _ N A M E = A S P . N E T   U y g u l a m a l a r 1  % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 0 1 F _ H E L P = A S P . N E T   % A S P N E T _ V E R %   u y g u l a m a   p e r f o r m a n s   s a y a  l a r 1
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 F _ N A M E = A d s 1z   0s t e k   S a y 1s 1
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 0 1 F _ H E L P = A d s 1z   k i m l i k   d o r u l a m a s 1n d a n   y a r a r l a n a n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 F _ N A M E = A d s 1z   0s t e k   S a y 1s 1/ S n 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 0 1 F _ H E L P = A d s 1z   K i m l i k   D o r u l a m a s 1  0s t e i   S a y 1s 1/ S n 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 F _ N A M E =  n b e l l e k   A P I   G i r d i s i   S a y 1s 1
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 0 1 F _ H E L P =  n b e l l e k   i  i n d e   k u l l a n 1c 1  t a r a f 1n d a n   e k l e n e n   t o p l a m   g i r d i   s a y 1s 1. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 F _ N A M E =  n b e l l e k   A P I   0s a b e t   S a y 1s 1
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 0 1 F _ H E L P = K u l l a n 1c 1  k o d u n d a n   g e l e n    n b e l l e k   i s a b e t   s a y 1s 1. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 F _ N A M E =  n b e l l e k   A P I   B a _a r 1s 1z l 1k   S a y 1s 1
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 0 1 F _ H E L P = K u l l a n 1c 1  k o d u n d a n   a r a n a n    n b e l l e k   b a _a r 1s 1z l 1k l a r 1  s a y 1s 1. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 F _ N A M E =  n b e l l e k   A P I   0s a b e t   O r a n 1
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 0 1 F _ H E L P = K u l l a n 1c 1  k o d u n d a n    a r 1l a n   i s a b e t l e r i n   o r a n 1. 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ N A M E =  n b e l l e k   A P I   0s a b e t   O r a n 1  T a b a n 1
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ H E L P =  n b e l l e k   A P I   0s a b e t   O r a n 1  T a b a n 1
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ N A M E =  n b e l l e k   A P I   D e v i r   H 1z 1
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ H E L P = A P I    n b e l l e i n e   s a n i y e d e   y a p 1l a n   e k l e m e   v e y a   k a l d 1r m a   s a y 1s 1. 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 F _ N A M E = U y g u l a m a   Y e n i d e n   B a _l a t m a   S a y 1s 1
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 0 1 F _ H E L P = W e b   s u n u c u s u n u n   y a _a m   s  r e s i   s 1r a s 1n d a   u y g u l a m a n 1n   y e n i d e n   b a _l a t 1l m a   s a y 1s 1. 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 F _ N A M E =  a l 1_a n   U y g u l a m a   S a y 1s 1
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 0 1 F _ H E L P = ^u   a n d a    a l 1_m a k t a   o l a n   w e b   u y g u l a m a s 1  s a y 1s 1. 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 F _ N A M E = T o p l a m   D e r l e m e   S a y 1s 1
 
 A S P N E T _ C O M P I L A T I O N S _ 0 1 F _ H E L P = D i n a m i k   o l a r a k   d e r l e n e n   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   v e y a   . a s p x   k a y n a k   d o s y a s 1  s a y 1s 1. 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 F _ N A M E = H a t a   A y 1k l a m a   0s t e i   S a y 1s 1
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 0 1 F _ H E L P = 0_l e n e n   h a t a   a y 1k l a m a   i s t e i   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 F _ N A M E = D e r l e m e   H a t a s 1  S a y 1s 1
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 0 1 F _ H E L P = D e r l e m e   s 1r a s 1n d a   o l u _a n   h a t a   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 F _ N A M E =  a l 1_t 1r m a   H a t a s 1  S a y 1s 1
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 0 1 F _ H E L P = 0s t e i n   i _l e n m e s i   s 1r a s 1n d a   o l u _a n   h a t a   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 F _ N A M E =  n i _l e m e   H a t a s 1  S a y 1s 1
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 0 1 F _ H E L P = A y r 1_t 1r m a   v e   y a p 1l a n d 1r m a   s 1r a s 1n d a   o l u _a n   h a t a   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 F _ N A M E = T o p l a m   H a t a   S a y 1s 1
 
 A S P N E T _ E R R O R S _ T O T A L _ 0 1 F _ H E L P = O l u _a n   t o p l a m   h a t a   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 F _ N A M E = T o p l a m   H a t a   S a y 1s 1/ S n 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 0 1 F _ H E L P = O l u _a n   h a t a l a r 1n   h 1z 1. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 F _ N A M E =  a l 1_t 1r m a   S 1r a s 1n d a   0_l e n m e y e n   H a t a   S a y 1s 1
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 0 1 F _ H E L P = K u l l a n 1c 1  k o d u   t a r a f 1n d a n   i _l e n m e y e n   a n c a k   v a r s a y 1l a n   h a t a   i _l e y i c i s i   t a r a f 1n d a n   i _l e n e n   h a t a   s a y 1s 1. 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 F _ N A M E =  a l 1_t 1r m a   S 1r a s 1n d a   0_l e n m e y e n   H a t a   S a y 1s 1/ S n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 0 1 F _ H E L P = 0_l e n m e m i _  h a t a l a r 1n   h 1z 1. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   G i r d i s i   S a y 1s 1
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 0 1 F _ H E L P =  1k 1_   n b e l l e i n d e k i   g e  e r l i   g i r d i   s a y 1s 1. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   0s a b e t   S a y 1s 1
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 0 1 F _ H E L P =  1k t 1   n b e l l e i n d e n   s u n u l a n   t o p l a m    1k t 1   n b e l l e i n e   a l 1n a b i l i r   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   B a _a r 1s 1z l 1k   S a y 1s 1
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 0 1 F _ H E L P =  1k t 1   n b e l l e i n d e n   s u n u l m a y a n   t o p l a m    1k t 1   n b e l l e i n e   a l 1n a b i l i r   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   0s a b e t   O r a n 1
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 0 1 F _ H E L P =  1k t 1   n b e l l e e   a l 1n a b i l i r   i s t e k l e r   i  i n   i s a b e t l e r i n   i s t e k l e r e   o r a n 1. 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   0s a b e t   O r a n 1  T a b a n 1
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ H E L P =  1k t 1   n b e l l e i   0s a b e t   O r a n 1  T a b a n 1
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ N A M E =  1k t 1   n b e l l e i   D e v i r   H 1z 1
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ H E L P =  1k 1_   n b e l l e i n e   s a n i y e d e   y a p 1l a n   e k l e m e   v e y a   k a l d 1r m a   s a y 1s 1. 
 
 
 
 A S P N E T _ P I P E L I N E S _ 0 1 F _ N A M E = A r d 1_1k   D  z e n    r n e i   S a y 1m 1
 
 A S P N E T _ P I P E L I N E S _ 0 1 F _ H E L P = E t k i n   a r d 1_1k   d  z e n    r n e i   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 F _ N A M E = T o p l a m   G e l e n   0s t e k   B a y t   M i k t a r 1
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 0 1 F _ H E L P = T  m   i s t e k l e r i n   b a y t   c i n s i n d e n   t o p l a m   b o y u t u . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 F _ N A M E = T o p l a m   G i d e n   0s t e k   B a y t   M i k t a r 1
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 0 1 F _ H E L P = 0s t e m c i y e   g  n d e r i l e n   y a n 1t l a r 1n   b a y t   c i n s i n d e n   t o p l a m   b o y u t u .     B u   b o y u t   s t a n d a r t   H T T P   y a n 1t    s t b i l g i l e r i n i   i  e r m e z . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 F _ N A M E = 0s t e i   Y e r i n e   G e t i r m e   S  r e s i 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 0 1 F _ H E L P = E n   s o n   i s t e i n   y e r i n e   g e t i r i l m e s i   s 1r a s 1n d a   g e  e n   m i l i s a n i y e   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 F _ N A M E = 0s t e i   B e k l e t m e   S  r e s i 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 0 1 F _ H E L P = E n   s o n   i s t e i n   s 1r a d a   b e k l e d i i   s 1r a s 1n d a   g e  e n   m i l i s a n i y e   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 F _ N A M E = B a l a n t 1s 1  K e s i l e n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 0 1 F _ H E L P = B a l a n t 1  h a t a s 1  v e y a   k u l l a n 1c 1  b a l a n t 1s 1n 1n   s o n l a n d 1r 1l m a s 1  n e d e n i y l e   b a l a n t 1s 1  k e s i l e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 F _ N A M E = Y  r  t  l e n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 0 1 F _ H E L P = ^u   a n d a   y  r  t  l m e k t e   o l a n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 F _ N A M E = B a _a r 1s 1z   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 0 1 F _ H E L P = B a _a r 1s 1z   o l a n   t o p l a m   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 F _ N A M E = 0z i n   V e r i l m e y e n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 0 1 F _ H E L P = Y e t k i s i z   e r i _i m   s o n u c u   b a _a r 1s 1z   o l a n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 F _ N A M E = B u l u n a m a y a n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 0 1 F _ H E L P = B u l u n a m a y a n   k a y n a k l a r   i  i n   g  n d e r i l e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 F _ N A M E = S 1r a y a   A l 1n a n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 0 1 F _ H E L P = 0_l e n m e k   i  i n   b e k l e y e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 F _ N A M E = R e d d e d i l e n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 0 1 F _ H E L P = 0s t e k   s 1r a s 1n 1n   d o l u   o l m a s 1  n e d e n i y l e   r e d d e d i l e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 F _ N A M E = B a _a r 1l 1  O l a n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 0 1 F _ H E L P = B a _a r 1y l a   y e r i n e   g e t i r i l e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 F _ N A M E = S  r e s i   D o l a n   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 0 1 F _ H E L P = S  r e s i   d o l a n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 F _ N A M E = T o p l a m   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 0 1 F _ H E L P = U y g u l a m a   b a _l a n g 1c 1n d a n   b e r i   g e l e n   t o p l a m   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 F _ N A M E = 0s t e k   S a y 1s 1/ S n 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 0 1 F _ H E L P = S a n i y e d e   y  r  t  l e n   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 F _ N A M E = O t u r u m u n   t o p l a m   S Q L   S e r v e r   b a l a n t 1s 1
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 0 1 F _ H E L P = O t u r u m   d u r u m u   t a r a f 1n d a n   k u l l a n 1l a n   t o p l a m   S Q L   S e r v e r   b a l a n t 1s 1  s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 F _ N A M E = T o p l a m   O t u r u m   D u r u m u   S u n u c u s u   b a l a n t 1l a r 1
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 0 1 F _ H E L P = O t u r u m   d u r u m u   t a r a f 1n d a n   k u l l a n 1l a n   t o p l a m   D u r u m   S u n u c u s u   b a l a n t 1s 1  s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 F _ N A M E = Y a r 1d a   B 1r a k 1l m 1_  O t u r u m   S a y 1s 1
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 0 1 F _ H E L P = B e l i r g i n   b i r   _e k i l d e   y a r 1d a   b 1r a k 1l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 F _ N A M E = E t k i n   O t u r u m   S a y 1s 1
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 0 1 F _ H E L P = ^u   a n d a   e t k i n   o l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 F _ N A M E = S  r e s i   D o l a n   O t u r u m   S a y 1s 1
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 0 1 F _ H E L P = S  r e s i   d o l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 F _ N A M E = T o p l a m   O t u r u m   S a y 1s 1
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 0 1 F _ H E L P = U y g u l a m a   b a _l a d 11n d a n   b e r i   g e r  e k l e _t i r i l e n   t o p l a m   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 F _ N A M E = D u r u m   S u n u c u s u   Y a r 1d a   B 1r a k 1l a n   O t u r u m   S a y 1s 1
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 0 1 F _ H E L P = B e l i r g i n   b i r   _e k i l d e   y a r 1d a   b 1r a k 1l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 F _ N A M E = D u r u m   S u n u c u s u   E t k i n   O t u r u m   S a y 1s 1
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 0 1 F _ H E L P = ^u   a n d a   e t k i n   o l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 F _ N A M E = D u r u m   S u n u c u s u   S  r e s i   D o l a n   O t u r u m   S a y 1s 1
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 0 1 F _ H E L P = S  r e s i   d o l a n   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 F _ N A M E = D u r u m   S u n u c u s u   T o p l a m   O t u r u m   S a y 1s 1
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 0 1 F _ H E L P = T o p l a m   o t u r u m   s a y 1s 1. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   G i r d i s i   S a y 1s 1
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 0 1 F _ H E L P =  n b e l l e k   i  i n d e k i   t o p l a m   g i r d i   s a y 1s 1  ( i    v e   k u l l a n 1c 1  t a r a f 1n d a n   e k l e n e n l e r ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   0s a b e t   S a y 1s 1
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 0 1 F _ H E L P =  n b e l l e k t e n   g e l e n   t o p l a m   i s a b e t   s a y 1s 1. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   B a _a r 1s 1z l 1k   S a y 1s 1
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 0 1 F _ H E L P = T o p l a m    n b e l l e k   b a _a r 1s 1z l 11  s a y 1s 1. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   0s a b e t   O r a n 1
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 0 1 F _ H E L P = T  m    n b e l l e k    a r 1l a r 1n d a n   g e l e n   i s a b e t l e r i n   o r a n 1. 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   0s a b e t   O r a n 1  T a b a n 1
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 0 1 F _ H E L P = T o p l a m    n b e l l e k   0s a b e t   O r a n 1  T a b a n 1
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ N A M E = T o p l a m    n b e l l e k   D e v i r   H 1z 1
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 0 1 F _ H E L P = T o p l a m    n b e l l e e   s a n i y e d e   y a p 1l a n   e k l e m e   v e y a   k a l d 1r m a   s a y 1s 1. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 F _ N A M E = D u r d u r u l a n   0_l e m   S a y 1s 1
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 0 1 F _ H E L P = D u r d u r u l a n   i _l e m   s a y 1s 1. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 F _ N A M E = T a m a m l a n a n   0_l e m   S a y 1s 1
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 0 1 F _ H E L P = T a m a m l a n a n   i _l e m   s a y 1s 1. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 F _ N A M E = B e k l e y e n   0_l e m   S a y 1s 1
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 0 1 F _ H E L P = G e r  e k l e _t i r i l m e k t e   o l a n   i _l e m   s a y 1s 1. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 F _ N A M E = 0_l e m   S a y 1s 1/ S n 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 0 1 F _ H E L P = S a n i y e d e   b a _l a t 1l a n   i _l e m   s a y 1s 1. 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 F _ N A M E = T o p l a m   0_l e m   S a y 1s 1
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 0 1 F _ H E L P = U y g u l a m a   b a _l a n g 1c 1n d a n   b e r i   g e r  e k l e _e n   t o p l a m   i _l e m   s a y 1s 1. 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 F _ N A M E = Y e n i d e n   B a _l a y a n    a l 1_a n   0_l e m i   S a y 1s 1
 
 A S P N E T _ W P S _ R E S T A R T S _ 0 1 F _ H E L P =  a l 1_a n   i _l e m i n i n   m a k i n e d e   y e n i d e n   b a _l a m a   s a y 1s 1. 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 F _ N A M E =  a l 1_m a k t a   O l a n    a l 1_a n   0_l e m i   S a y 1s 1
 
 A S P N E T _ W P S _ R U N N I N G _ 0 1 F _ H E L P = M a k i n e d e    a l 1_m a k t a   o l a n    a l 1_a n   i _l e m i   s a y 1s 1. 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   C h i n e s e 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 4 0 4 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 4 0 4 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   hQWHexehV
 
 O B J E C T _ 2 _ 4 0 4 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 4 0 4 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   a(uz_HexehV
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 4 0 4 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 4 0 4 _ H E L P = )R(u?S
TWIvBlxe0
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 4 0 4 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 4 0 4 _ H E L P = WI?S
TBlvxeϑ/ y
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 4 0 4 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 4 0 4 _ H E L P = O(uReQ_S@SgQvv=~xe0
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 4 0 4 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 4 0 4 _ H E L P = OO(uz_xv_S@Sxeϑ0
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 4 0 4 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 4 0 4 _ H E L P = _O(uz_x|TSv_S@Szoxe0
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 4 0 4 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 4 0 4 _ H E L P = _O(uz_x|TSv}T-NkO0
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ H E L P = _S@S  A P I   }T-NkOWxe
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ H E L P = kyReQyd  A P I   _S@Svxeϑ0
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 4 0 4 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 4 0 4 _ H E L P = (W  W e b   :O
ghVvX[Yug]}͑e_URa(uz_v!kxe0
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 4 0 4 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 4 0 4 _ H E L P = vMRWLv  W e b   a(uz_xe0
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 4 0 4 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 4 0 4 _ H E L P = RKa}oNv  . a s a x 0. a s c x 0. a s h x 0. a s m x   b  . a s p x   SYjxe0
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 4 0 4 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 4 0 4 _ H E L P = ]UtvuP/Blxe0
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 4 0 4 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 4 0 4 _ H E L P = }og]}|vuv/xeϑ0
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 4 0 4 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 4 0 4 _ H E L P = BlUtg@b|vuv/xeϑ0
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 4 0 4 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 4 0 4 _ H E L P = VRgD}Kag]}|vuv/xe0
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 4 0 4 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 4 0 4 _ H E L P = ]|vuv/=~xe0
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 4 0 4 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 4 0 4 _ H E L P = ]|vuv/s0
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 4 0 4 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 4 0 4 _ H E L P = O(uz_x*gUtv/xeO-1u/Ut8^_Ut0
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 4 0 4 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 4 0 4 _ H E L P = *gUtv/s0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 4 0 4 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 4 0 4 _ H E L P = 8Q_S@S-NvvvMRxeϑ0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 4 0 4 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 4 0 4 _ H E L P = (W8Q_S@S-Nv8QS_SBl=~xe0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 4 0 4 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 4 0 4 _ H E L P = 
N(W8Q_S@S-Nv8QS_SBl=~xe0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 4 0 4 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 4 0 4 _ H E L P = 8QS_SBlvBl}T-NkO0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ H E L P = 8Q_S@S}T-NkOWxe
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ H E L P = kyReQyd8Q_S@Svxeϑ0
 
 
 
 A S P N E T _ P I P E L I N E S _ 4 0 4 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 4 0 4 _ H E L P = \O(u-Nv{}WLPԚxe0
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 4 0 4 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 4 0 4 _ H E L P = @b	gBlv=~'Y\NMOCQD}pUMO0
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 4 0 4 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 4 0 4 _ H E L P = @b	gP(u6bzBlv=~'Y\NMOCQD}pUMO0
NSbjnv  H T T P   Vaj-0
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 4 0 4 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 4 0 4 _ H E L P = WL gя N!kBl@b(uvky  ( M i l l i s e c o n d )   xe0
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 4 0 4 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 4 0 4 _ H E L P =  gяBl(WGOR-NI{Pvkyxe0
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 4 0 4 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 4 0 4 _ H E L P = V
/bO(u-Ne@b bBl-Ne#}vxeϑ0
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 4 0 4 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 4 0 4 _ H E L P = vMRWL-NvBlxe0
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 4 0 4 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 4 0 4 _ H E L P = ]1YWevBl=~xe0
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 4 0 4 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 4 0 4 _ H E L P = 1ue*gc
kX[S\􁁉Bl1YWevxeϑ0
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 4 0 4 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 4 0 4 _ H E L P = ~b
N0RǌnvBlxe0
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 4 0 4 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 4 0 4 _ H E L P = I{PUtvBlxeϑ0
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 4 0 4 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 4 0 4 _ H E L P = VpBlGOR]nBlvxeϑmb0
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 4 0 4 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 4 0 4 _ H E L P = ]bRWLvBlxe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 4 0 4 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 4 0 4 _ H E L P = ]>BfvBlxe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 4 0 4 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 4 0 4 _ H E L P = a(uz__UR_vBl=~xe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 4 0 4 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 4 0 4 _ H E L P = kyWLvBlxe0
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 4 0 4 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 4 0 4 _ H E L P =   ]\OkrKav#c  S Q L   S e r v e r   =~xe0
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 4 0 4 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 4 0 4 _ H E L P = ]\OkO(uvrKa:O
ghV#c=~xe0
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 4 0 4 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 4 0 4 _ H E L P = ]}f:y>ehv]\Okxe0
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 4 0 4 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 4 0 4 _ H E L P = ]\OkvMR\O(u-Nvxeϑ0
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 4 0 4 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 4 0 4 _ H E L P = ]}>Bfv]\Okxe0
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 4 0 4 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 4 0 4 _ H E L P = a(uz__UR_v]\Ok=~xe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 4 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 4 0 4 _ H E L P = ]}f:y>ehv]\Okxe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 4 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 4 0 4 _ H E L P = ]\OkvMR\O(u-Nvxeϑ0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 4 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 4 0 4 _ H E L P = ]}>Bfv]\Okxe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 4 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 4 0 4 _ H E L P = ]\Okv=~xe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 4 0 4 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 4 0 4 _ H E L P = _S@SgQvv=~xe  ( gQO(uReQ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 4 0 4 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 4 0 4 _ H E L P = O_S@Sv}T-N=~xe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 4 0 4 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 4 0 4 _ H E L P = _S@Szov=~xe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 4 0 4 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 4 0 4 _ H E L P = O@b	g_S@S|TSv}T-NkO0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 4 0 4 _ H E L P = _S@S=~}T-NkOWxe
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 4 0 4 _ H E L P = kyReQbyd_S@Svxeϑ0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 4 0 4 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 4 0 4 _ H E L P = -NbkvNfxeϑ0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 4 0 4 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 4 0 4 _ H E L P = SvNfxeϑ0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 4 0 4 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 4 0 4 _ H E L P = Ut-NvNfxeϑ0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 4 0 4 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 4 0 4 _ H E L P = ky_URvNf0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 4 0 4 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 4 0 4 _ H E L P = a(uz__UR_vNf=~xe0
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 4 0 4 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 4 0 4 _ H E L P = (Wf
N͑e_UR̀of]\OUt^v!kxe0
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 4 0 4 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 4 0 4 _ H E L P = (Wf
NWL̀of]\OUt^vxeϑ0
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   P o r t u g u e s e   B r a z i l i a n 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 4 1 6 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 4 1 6 _ H E L P = C o n t a d o r e s   d e   d e s e m p e n h o   g l o b a l   d e   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 4 1 6 _ N A M E = A p l i c .   d e   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 4 1 6 _ H E L P = C o n t a d o r e s   d e   d e s e m p e n h o   d e   a p l i c a t i v o   d e   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 4 1 6 _ N A M E = S o l i c i t a   e s   A n  n i m a s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   u t i l i z a n d o   a u t e n t i c a   o   a n  n i m a . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 4 1 6 _ N A M E = S o l i c i t a   e s   A n  n i m a s / s e g u n d o 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 4 1 6 _ H E L P = N    d e   S o l i c i t a   e s   c o m   A u t e n t i c a   o   A n  n i m a / s e g u n d o 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 4 1 6 _ N A M E = E n t r a d a s   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   n o   c a c h e   a d i c i o n a d a s   p e l o   u s u  r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 4 1 6 _ N A M E = A c e r t o s   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 4 1 6 _ H E L P = N  m e r o   d e   a c e r t o s   d o   c a c h e   d o   c  d i g o   d o   u s u  r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 4 1 6 _ N A M E = F a l h a s   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 4 1 6 _ H E L P = N  m e r o   d e   f a l h a s   d o   c a c h e   c h a m a d a s   d o   c  d i g o   d o   u s u  r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 4 1 6 _ N A M E = T a x a   d e   A c e r t o s   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 4 1 6 _ H E L P = T a x a   d e   a c e r t o s   c h a m a d o s   d o   c  d i g o   d o   u s u  r i o . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ N A M E = B a s e   d a   T a x a   d e   A c e r t o s   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ H E L P = B a s e   d a   T a x a   d e   A c e r t o s   d a   A P I   d o   C a c h e 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ N A M E = T a x a   d e   R e n o v a   o   d a   A P I   d o   C a c h e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d a   A P I   d o   c a c h e   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 4 1 6 _ N A M E = R e i n  c i o s   d o   A p l i c a t i v o 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 4 1 6 _ H E L P = N  m e r o   d e   v e z e s   q u e   o   a p l i c a t i v o   f o i   r e i n i c i a d o   d e s d e   q u e   o   s e r v i d o r   W e b   f o i   i n s t a l a d o . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 4 1 6 _ N A M E = A p l i c a t i v o s   e m   E x e c u   o 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 4 1 6 _ H E L P = N  m e r o   d e   a p l i c a t i v o s   d a   W e b   e m   e x e c u   o   a t u a l m e n t e . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 4 1 6 _ N A M E = N    T o t a l   d e   C o m p i l a   e s 
 
 A S P N E T _ C O M P I L A T I O N S _ 4 1 6 _ H E L P = N  m e r o   d e   a r q u i v o s   d e   o r i g e m   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   o u   . a s p x   c o m p i l a d o s   d i n a m i c a m e n t e . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 4 1 6 _ N A M E = D e p u r a n d o   S o l i c i t a   e s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   d e   d e p u r a   o     p r o c e s s a d a s . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 4 1 6 _ N A M E = E r r o s   d u r a n t e   a   C o m p i l a   o 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 4 1 6 _ H E L P = N  m e r o   d e   e r r o s   q u e   o c o r r e r a m   d u r a n t e   a   c o m p i l a   o . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 4 1 6 _ N A M E = E r r o s   d u r a n t e   a   E x e c u   o 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 4 1 6 _ H E L P = N  m e r o   d e   e r r o s   q u e   o c o r r e r a m   d u r a n t e   o   p r o c e s s a m e n t o   d e   u m a   s o l i c i t a   o . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 4 1 6 _ N A M E = E r r o s   d u r a n t e   o   P r  - p r o c e s s a m e n t o 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 4 1 6 _ H E L P = N  m e r o   d e   e r r o s   q u e   o c o r r e r a m   d u r a n t e   a   a n  l i s e   e   a   c o n f i g u r a   o . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 4 1 6 _ N A M E = N    T o t a l   d e   E r r o s 
 
 A S P N E T _ E R R O R S _ T O T A L _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   e r r o s   o c o r r i d o s . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 4 1 6 _ N A M E = N    T o t a l   d e   E r r o s / s e g u n d o 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 4 1 6 _ H E L P = T a x a   d e   e r r o s   o c o r r i d o s . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 4 1 6 _ N A M E = E r r o s   N  o   T r a t a d o s   d u r a n t e   a   E x e c u   o 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 4 1 6 _ H E L P = N  m e r o   d e   e r r o s   n  o   t r a t a d o s   p e l o   c  d i g o   d o   u s u  r i o ,   m a s   p e l o   m a n i p u l a d o r   d e   e r r o s   p a d r  o . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 4 1 6 _ N A M E = E r r o s   N  o   T r a t a d o s   d u r a n t e   a   E x e c u   o / s e g u n d o 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 4 1 6 _ H E L P = T a x a   d e   e r r o s   n  o   t r a t a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 4 1 6 _ N A M E = E n t r a d a s   n o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 4 1 6 _ H E L P = N  m e r o   a t u a l   d e   e n t r a d a s   n o   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 4 1 6 _ N A M E = A c e r t o s   d o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   a r m a z e n  v e i s   e m   c a c h e   d e   s a  d a   s e r v i d a s   d o   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 4 1 6 _ N A M E = F a l h a s   d o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   a r m a z e n  v e i s   e m   c a c h e   d e   s a  d a   n  o   s e r v i d a s   d o   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 4 1 6 _ N A M E = T a x a   d e   A c e r t o s   d o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 4 1 6 _ H E L P = T a x a   d e   a c e r t o s   d a s   s o l i c i t a   e s   p a r a   s o l i c i t a   e s   a r m a z e n  v e i s   e m   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ N A M E = B a s e   d a   T a x a   d e   A c e r t o s   d o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ H E L P = B a s e   d a   T a x a   d e   A c e r t o s   d o   C a c h e   d e   S a  d a 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ N A M E = T a x a   d e   R e n o v a   o   d o   C a c h e   d e   S a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d o   c a c h e   d e   s a  d a   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 4 1 6 _ N A M E = C o n t a g e m   d e   I n s t  n c i a s   d o   C a n a l 
 
 A S P N E T _ P I P E L I N E S _ 4 1 6 _ H E L P = N  m e r o   d e   i n s t  n c i a s   d e   c a n a l   a t i v a s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 4 1 6 _ N A M E = N    T o t a l   d e   B y t e s   d a s   S o l i c i t a   e s 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 4 1 6 _ H E L P = O   t a m a n h o   t o t a l   e m   b y t e s   d e   t o d a s   a s   s o l i c i t a   e s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 4 1 6 _ N A M E = N    T o t a l   d e   B y t e s   d a s   R e s p o s t a s   E n v i a d a s 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 4 1 6 _ H E L P = O   t a m a n h o   t o t a l   e m   b y t e s   d a s   r e s p o s t a s   e n v i a d a s   p a r a   u m   c l i e n t e .   N  o   e s t  o   i n c l u  d o s   o s   c a b e  a l h o s   d e   r e s p o s t a   H T T P   p a d r  o . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 4 1 6 _ N A M E = T e m p o   d e   E x e c u   o   d a   S o l i c i t a   o 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 4 1 6 _ H E L P = O   p e r  o d o   d e   t e m p o   e m   m i l i s s e g u n d o s   g a s t o   p a r a   e x e c u t a r   a   s o l i c i t a   o   m a i s   r e c e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 4 1 6 _ N A M E = T e m p o   d e   E s p e r a   d a   S o l i c i t a   o 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 4 1 6 _ H E L P = O   p e r  o d o   d e   t e m p o   e m   m i l i s s e g u n d o s   q u e   a   s o l i c i t a   o   m a i s   r e c e n t e   a g u a r d o u   n a   f i l a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   D e s c o n e c t a d a s 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   d e s c o n e c t a d a s   d e v i d o   a   e r r o s   d e   c o m u n i c a   o   o u   e n c e r r a m e n t o   d o   u s u  r i o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 4 1 6 _ N A M E = S o l i c i t a   e s   e m   E x e c u   o 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   e m   e x e c u   o   a t u a l m e n t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   c o m   F a l h a 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   c o m   f a l h a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   n  o   A u t o r i z a d a s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   q u e   f a l h a r a m   d e v i d o   a   a c e s s o   n  o   a u t o r i z a d o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 4 1 6 _ N A M E = S o l i c i t a   e s   n  o   E n c o n t r a d a s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   p a r a   r e c u r s o s   q u e   n  o   f o r a m   e n c o n t r a d o s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   E n f i l e i r a d a s 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   a g u a r d a n d o   p r o c e s s a m e n t o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   R e j e i t a d a s 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   r e j e i t a d a s   p o r q u e   a   f i l a   d e   s o l i c i t a   e s   e s t a v a   c h e i a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 4 1 6 _ N A M E = S o l i c i t a   e s   c o m    x i t o 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   q u e   f o r a m   e x e c u t a d a s   c o m    x i t o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 4 1 6 _ N A M E = S o l i c i t a   e s   q u e   A t i n g i r a m   o   T e m p o   L i m i t e 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   q u e   a t i n g i r a m   o   t e m p o   l i m i t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 4 1 6 _ N A M E = N    T o t a l   d e   S o l i c i t a   e s 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s o l i c i t a   e s   d e s d e   q u e   o   a p l i c a t i v o   f o i   i n i c i a d o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 4 1 6 _ N A M E = S o l i c i t a   e s / s e g u n d o 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 4 1 6 _ H E L P = N  m e r o   d e   s o l i c i t a   e s   e x e c u t a d a s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 4 1 6 _ N A M E = T o t a l   d e   c o n e x  e s   d o   S Q L   S e r v e r   e m   s e s s  o 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   c o n e x  e s   d o   S Q L   S e r v e r   u s a d a s   p o r   e s t a d o   d e   s e s s  o . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 4 1 6 _ N A M E = T o t a l   d e   c o n e x  e s   d o   S e r v i d o r   d e   E s t a d o 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   c o n e x  e s   d o   S e r v i d o r   d e   E s t a d o   u s a d a s   p o r   e s t a d o   d e   s e s s  o 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 4 1 6 _ N A M E = S e s s  e s   A b a n d o n a d a s 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 4 1 6 _ H E L P = N  m e r o   d e   s e s s  e s   q u e   f o r a m   e x p l i c i t a m e n t e   a b a n d o n a d a s . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 4 1 6 _ N A M E = S e s s  e s   A t i v a s 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 4 1 6 _ H E L P = N  m e r o   a t u a l   d e   s e s s  e s   a t i v a s   a t u a l m e n t e . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 4 1 6 _ N A M E = S e s s  e s   q u e   A t i n g i r a m   o   T e m p o   L i m i t e 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 4 1 6 _ H E L P = N  m e r o   d e   s e s s  e s   q u e   a t i n g i r a m   o   t e m p o   l i m i t e . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 4 1 6 _ N A M E = N    T o t a l   d e   S e s s  e s 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s e s s  e s   d e s d e   q u e   o   a p l i c a t i v o   f o i   i n i c i a d o . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 4 1 6 _ N A M E = S e s s  e s   d o   S e r v i d o r   e m   E s t a d o   A b a n d o n a d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 4 1 6 _ H E L P = N  m e r o   d e   s e s s  e s   q u e   f o r a m   e x p l i c i t a m e n t e   a b a n d o n a d a s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 4 1 6 _ N A M E = S e s s  e s   d o   S e r v i d o r   e m   E s t a d o   A t i v o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 4 1 6 _ H E L P = N  m e r o   a t u a l   d e   s e s s  e s   a t i v a s   a t u a l m e n t e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 4 1 6 _ N A M E = S e s s  e s   d o   S e r v i d o r   c o m   E s t a d o   d e   T e m p o   L i m i t e   A t i n g i d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 4 1 6 _ H E L P = N  m e r o   d e   s e s s  e s   q u e   a t i n g i r a m   o   t e m p o   l i m i t e . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 4 1 6 _ N A M E = T o t a l   d e   S e s s  e s   d o   S e r v i d o r 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   s e s s  e s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 4 1 6 _ N A M E = T o t a l   d e   E n t r a d a s   n o   C a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   n o   c a c h e   ( i n t e r n a s   e   a d i c i o n a d a s   p e l o   u s u  r i o ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 4 1 6 _ N A M E = N    T o t a l   d e   A c e r t o s   d o   C a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   a c e r t o s   d o   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 4 1 6 _ N A M E = N    T o t a l   d e   F a l h a s   d o   C a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   f a l h a s   d o   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 4 1 6 _ N A M E = T a x a   d e   T o t a l   d e   A c e r t o s   d o   C a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 4 1 6 _ H E L P = T a x a   d e   a c e r t o s   d a s   c h a m a d a s   d o   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ N A M E = B a s e   d a   T a x a   d e   T o t a l   d e   A c e r t o s   d o   C a c h e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 4 1 6 _ H E L P = B a s e   d a   T a x a   d e   T o t a l   d e   A c e r t o s   d o   C a c h e 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ N A M E = T a x a   d e   R e n o v a   o   d o   C a c h e   T o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 4 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d o   c a c h e   t o t a l   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 4 1 6 _ N A M E = T r a n s a   e s   A n u l a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 4 1 6 _ H E L P = N  m e r o   d e   t r a n s a   e s   a n u l a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 4 1 6 _ N A M E = T r a n s a   e s   C o n f i r m a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 4 1 6 _ H E L P = N  m e r o   d e   t r a n s a   e s   c o n f i r m a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 4 1 6 _ N A M E = T r a n s a   e s   P e n d e n t e s 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 4 1 6 _ H E L P = N  m e r o   d e   t r a n s a   e s   e m   a n d a m e n t o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 4 1 6 _ N A M E = T r a n s a   e s / s e g u n d o 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 4 1 6 _ H E L P = N  m e r o   d e   t r a n s a   e s   i n i c i a d a s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 4 1 6 _ N A M E = N    T o t a l   d e   T r a n s a   e s 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 4 1 6 _ H E L P = N  m e r o   t o t a l   d e   t r a n s a   e s   d e s d e   q u e   o   a p l i c a t i v o   f o i   i n i c i a d o . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 4 1 6 _ N A M E = R e i n  c i o s   d o   P r o c e s s o   d e   T r a b a l h o 
 
 A S P N E T _ W P S _ R E S T A R T S _ 4 1 6 _ H E L P = N  m e r o   d e   v e z e s   q u e   u m   p r o c e s s o   d e   t r a b a l h o   f o i   r e i n i c i a d o   n a   m  q u i n a . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 4 1 6 _ N A M E = P r o c e s s o s   d e   T r a b a l h o   e m   E x e c u   o 
 
 A S P N E T _ W P S _ R U N N I N G _ 4 1 6 _ H E L P = N  m e r o   d e   p r o c e s s o s   d e   t r a b a l h o   e m   e x e c u   o   n a   m  q u i n a . 
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   C h i n e s e 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 8 0 4 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 8 0 4 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   hQ@\'`pehV
 
 O B J E C T _ 2 _ 8 0 4 _ N A M E = A S P . N E T   A p p s   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 8 0 4 _ H E L P = A S P . N E T   % A S P N E T _ V E R %   ^(uz^'`pehV
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 8 0 4 _ N A M E = A n o n y m o u s   R e q u e s t s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 8 0 4 _ H E L P = O(u?S
TNvBlpe0
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 8 0 4 _ N A M E = A n o n y m o u s   R e q u e s t s / S e c 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 8 0 4 _ H E L P = kyvN?S
TBlpe
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 8 0 4 _ N A M E = C a c h e   A P I   E n t r i e s 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 8 0 4 _ H E L P = (u7bmRvX[Qv;`ype0
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 8 0 4 _ N A M E = C a c h e   A P I   H i t s 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 8 0 4 _ H E L P = (u7bNxvX[}T-Npe0
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 8 0 4 _ N A M E = C a c h e   A P I   M i s s e s 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 8 0 4 _ H E L P = N(u7bNx(uvX[*g}T-Npe0
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 8 0 4 _ N A M E = C a c h e   A P I   H i t   R a t i o 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 8 0 4 _ H E L P = N(u7bNx(uv}T-Ns0
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ N A M E = C a c h e   A P I   H i t   R a t i o   B a s e 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ H E L P = X[  A P I   }T-NsWpe
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ N A M E = C a c h e   A P I   T u r n o v e r   R a t e 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ H E L P = ky[  A P I   X[vmRpeTydpe0
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 8 0 4 _ N A M E = A p p l i c a t i o n   R e s t a r t s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 8 0 4 _ H E L P = ^(uz^(W  W e b   
gRhVvuX[gQ͑e/TRv!kpe0
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 8 0 4 _ N A M E = A p p l i c a t i o n s   R u n n i n g 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 8 0 4 _ H E L P = S_MRck(WЏLv  W e b   ^(uz^vpev0
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 8 0 4 _ N A M E = C o m p i l a t i o n s   T o t a l 
 
 A S P N E T _ C O M P I L A T I O N S _ 8 0 4 _ H E L P = R`ыv  . a s a x 0. a s c x 0. a s h x 0. a s m x   b  . a s p x   neNvpev0
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 8 0 4 _ N A M E = D e b u g g i n g   R e q u e s t s 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 8 0 4 _ H E L P = YtvՋBlpe0
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 8 0 4 _ N A M E = E r r o r s   D u r i n g   C o m p i l a t i o n 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 8 0 4 _ H E L P = ыǏz-NSuvpe0
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 8 0 4 _ N A M E = E r r o r s   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 8 0 4 _ H E L P = YtBlgSuvpe0
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 8 0 4 _ N A M E = E r r o r s   D u r i n g   P r e p r o c e s s i n g 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 8 0 4 _ H E L P = RgTMngSuvpe0
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 8 0 4 _ N A M E = E r r o r s   T o t a l 
 
 A S P N E T _ E R R O R S _ T O T A L _ 8 0 4 _ H E L P = Suv;`pe0
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 8 0 4 _ N A M E = E r r o r s   T o t a l / S e c 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 8 0 4 _ H E L P = Suvs0
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 8 0 4 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 8 0 4 _ H E L P = 1u؞Ytz^^(u7bNxYtvpe0
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 8 0 4 _ N A M E = E r r o r s   U n h a n d l e d   D u r i n g   E x e c u t i o n / S e c 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 8 0 4 _ H E L P = *gYtvs0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 8 0 4 _ N A M E = O u t p u t   C a c h e   E n t r i e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 8 0 4 _ H E L P = QX[-NvS_MRype0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 8 0 4 _ N A M E = O u t p u t   C a c h e   H i t s 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 8 0 4 _ H E L P = 1uQX[
gRvQSX[Blv;`pe0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 8 0 4 _ N A M E = O u t p u t   C a c h e   M i s s e s 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 8 0 4 _ H E L P = 
N/f1uQX[
gRvQSX[Blv;`pe0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 8 0 4 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 8 0 4 _ H E L P = [QSX[BlvBl}T-Ns0
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ N A M E = O u t p u t   C a c h e   H i t   R a t i o   B a s e 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ H E L P = QX[}T-NsWpe
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ N A M E = O u t p u t   C a c h e   T u r n o v e r   R a t e 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ H E L P = ky[QX[vmRpeTydpe0
 
 
 
 A S P N E T _ P I P E L I N E S _ 8 0 4 _ N A M E = P i p e l i n e   I n s t a n c e   C o u n t 
 
 A S P N E T _ P I P E L I N E S _ 8 0 4 _ H E L P = ;mR{~[Ovpev0
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 8 0 4 _ N A M E = R e q u e s t   B y t e s   I n   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 8 0 4 _ H E L P = @b	gBlv;`'Y\NW[:NUSMO	0
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 8 0 4 _ N A M E = R e q u e s t   B y t e s   O u t   T o t a l 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 8 0 4 _ H E L P = S0R[7bzvT^v;`'Y\NW[:NUSMO	0ُ
NSbhQ  H T T P   T^4Y0
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 8 0 4 _ N A M E = R e q u e s t   E x e c u t i o n   T i m e 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 8 0 4 _ H E L P = gbL gяvBl@b(uvkype0
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 8 0 4 _ N A M E = R e q u e s t   W a i t   T i m e 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 8 0 4 _ H E L P =  gяvBl(WR-NI{_vkype0
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 8 0 4 _ N A M E = R e q u e s t s   D i s c o n n e c t e d 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 8 0 4 _ H E L P = 1uNb(u7b~bke _ޏcvBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 8 0 4 _ N A M E = R e q u e s t s   E x e c u t i n g 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 8 0 4 _ H E L P = S_MRgbLvBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 8 0 4 _ N A M E = R e q u e s t s   F a i l e d 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 8 0 4 _ H E L P = 1Y%vBl;`pe0
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 8 0 4 _ N A M E = R e q u e s t s   N o t   A u t h o r i z e d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 8 0 4 _ H E L P = 1uN*g~cCgv1Y%vBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 8 0 4 _ N A M E = R e q u e s t s   N o t   F o u n d 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 8 0 4 _ H E L P = [*g~b0RvDnvBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 8 0 4 _ N A M E = R e q u e s t s   Q u e u e d 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 8 0 4 _ H E L P = I{PYtvBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 8 0 4 _ N A M E = R e q u e s t s   R e j e c t e d 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 8 0 4 _ H E L P = 1uNBlR]nb~vBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 8 0 4 _ N A M E = R e q u e s t s   S u c c e e d e d 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 8 0 4 _ H E L P = bRgbLvBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 8 0 4 _ N A M E = R e q u e s t s   T i m e d   O u t 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 8 0 4 _ H E L P = evBlpe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 8 0 4 _ N A M E = R e q u e s t s   T o t a l 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 8 0 4 _ H E L P = ꁔ^(uz^/TRTvBl;`pe0
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 8 0 4 _ N A M E = R e q u e s t s / S e c 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 8 0 4 _ H E L P = kygbLvBlpe0
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 8 0 4 _ N A M E = S e s s i o n   S Q L   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 8 0 4 _ H E L P = O݋O(uv  S Q L   S e r v e r   ޏc;`pe0
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 8 0 4 _ N A M E = S e s s i o n   S t a t e   S e r v e r   c o n n e c t i o n s   t o t a l 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 8 0 4 _ H E L P = O݋r`O(uvr`
gRhVޏc;`pe0
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 8 0 4 _ N A M E = S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 8 0 4 _ H E L P = ]fnx>e_vO݋pe0
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 8 0 4 _ N A M E = S e s s i o n s   A c t i v e 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 8 0 4 _ H E L P = S_MR;mRvO݋pe0
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 8 0 4 _ N A M E = S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 8 0 4 _ H E L P = evO݋pe0
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 8 0 4 _ N A M E = S e s s i o n s   T o t a l 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 8 0 4 _ H E L P = ꁔ^(uz^/TRTvO݋;`pe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 8 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A b a n d o n e d 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 8 0 4 _ H E L P = ]fnx>e_vO݋pe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 8 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   A c t i v e 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 8 0 4 _ H E L P = S_MR;mRvO݋pe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 8 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T i m e d   O u t 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 8 0 4 _ H E L P = evO݋pe0
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 8 0 4 _ N A M E = S t a t e   S e r v e r   S e s s i o n s   T o t a l 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 8 0 4 _ H E L P = O݋;`pe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 8 0 4 _ N A M E = C a c h e   T o t a l   E n t r i e s 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 8 0 4 _ H E L P = X[-Nv;`ypeQ萄vyT(u7bmRvy	
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 8 0 4 _ N A M E = C a c h e   T o t a l   H i t s 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 8 0 4 _ H E L P = X[v}T-N;`pe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 8 0 4 _ N A M E = C a c h e   T o t a l   M i s s e s 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 8 0 4 _ H E L P = X[*g}T-N;`pe0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 8 0 4 _ N A M E = C a c h e   T o t a l   H i t   R a t i o 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 8 0 4 _ H E L P = @b	gX[(uv}T-Ns0
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ N A M E = C a c h e   T o t a l   H i t   R a t i o   B a s e 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 8 0 4 _ H E L P = X[;`}T-NsWpe
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ N A M E = C a c h e   T o t a l   T u r n o v e r   R a t e 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 8 0 4 _ H E L P = ky[;`X[vmRpeTydpe0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 8 0 4 _ N A M E = T r a n s a c t i o n s   A b o r t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 8 0 4 _ H E L P = -NbkvNRpe0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 8 0 4 _ N A M E = T r a n s a c t i o n s   C o m m i t t e d 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 8 0 4 _ H E L P = cNvNRpe0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 8 0 4 _ N A M E = T r a n s a c t i o n s   P e n d i n g 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 8 0 4 _ H E L P = ۏL-NvNRpe0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 8 0 4 _ N A M E = T r a n s a c t i o n s / S e c 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 8 0 4 _ H E L P = ky/TRvNRpe0
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 8 0 4 _ N A M E = T r a n s a c t i o n s   T o t a l 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 8 0 4 _ H E L P = ꁔ^(uz^/TRTvNR;`pe0
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 8 0 4 _ N A M E = W o r k e r   P r o c e s s   R e s t a r t s 
 
 A S P N E T _ W P S _ R E S T A R T S _ 8 0 4 _ H E L P = Rۏz(W{:g
N͑e/TRv!kpe0
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 8 0 4 _ N A M E = W o r k e r   P r o c e s s e s   R u n n i n g 
 
 A S P N E T _ W P S _ R U N N I N G _ 8 0 4 _ H E L P = (W{:g
NЏLvRۏzpe0
 
 
 
 
 
 ; ; 
 
 ; ;     A S P . N E T   -   P o r t u g u e s e   S t a n d a r d 
 
 ; ; 
 
 
 
 O B J E C T _ 1 _ 8 1 6 _ N A M E = A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 1 _ 8 1 6 _ H E L P = C o n t a d o r e s   d e   d e s e m p e n h o   g l o b a i s   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 8 1 6 _ N A M E = A p l i c s .   A S P . N E T   % A S P N E T _ V E R % 
 
 O B J E C T _ 2 _ 8 1 6 _ H E L P = C o n t a d o r e s   d e   d e s e m p e n h o   d e   a p l i c a   e s   A S P . N E T   % A S P N E T _ V E R % 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 8 1 6 _ N A M E = P e d i d o s   a n  n i m o s 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ 8 1 6 _ H E L P = N  m e r o   d e   p e d i d o s   q u e   u t i l i z a m   a u t e n t i c a   o   a n  n i m a . 
 
 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 8 1 6 _ N A M E = P e d i d o s   a n  n i m o s / s e g 
 
 A S P N E T _ A N O N Y M O U S _ R E Q U E S T S _ R A T E _ 8 1 6 _ H E L P = N  m e r o   d e   p e d i d o s   a n  n i m o s   d e   a u t e n t i c a   o / s e g 
 
 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 8 1 6 _ N A M E = E n t r a d a s   n a   c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ E N T R I E S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   n a   c a c h e   a d i c i o n a d a s   p e l o   u t i l i z a d o r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 8 1 6 _ N A M E = A c e r t o s   n a   c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ H I T S _ 8 1 6 _ H E L P = N  m e r o   d e   a c e r t o s   n a   c a c h e   d o   c  d i g o   d e   u t i l i z a d o r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 8 1 6 _ N A M E = P e d i d o s   s e m    x i t o      c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ M I S S E S _ 8 1 6 _ H E L P = N  m e r o   d e   p e d i d o s   s e m    x i t o   n a   c a c h e   d o   c  d i g o   d e   u t i l i z a d o r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 8 1 6 _ N A M E = T a x a   d e   a c e r t o s   n a   c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ 8 1 6 _ H E L P = T a x a   d e   a c e r t o s   c h a m a d o s   a   p a r t i r   d o   c  d i g o   d e   u t i l i z a d o r . 
 
 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ N A M E = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ H E L P = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   A P I 
 
 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ N A M E = T a x a   d e   r e n o v a   o   d a   c a c h e   A P I 
 
 A S P N E T _ A P I _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d a   c a c h e   A P I   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 8 1 6 _ N A M E = R e i n  c i o s   d e   a p l i c a   e s 
 
 A S P N E T _ A P P L I C A T I O N _ R E S T A R T S _ 8 1 6 _ H E L P = N  m e r o   d e   v e z e s   q u e   a   a p l i c a   o   f o i   r e i n i c i a d a   d e s d e   q u e   o   s e r v i d o r   W e b   f o i   i n s t a l a d o . 
 
 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 8 1 6 _ N A M E = A p l i c a   e s   e m   e x e c u   o 
 
 A S P N E T _ A P P L I C A T I O N S _ R U N N I N G _ 8 1 6 _ H E L P = N  m e r o   d e   a p l i c a   e s   W e b   e m   e x e c u   o . 
 
 
 
 A S P N E T _ C O M P I L A T I O N S _ 8 1 6 _ N A M E = T o t a l   d e   c o m p i l a   e s 
 
 A S P N E T _ C O M P I L A T I O N S _ 8 1 6 _ H E L P = N  m e r o   d e   f i c h e i r o s   d e   o r i g e m   . a s a x ,   . a s c x ,   . a s h x ,   . a s m x   o u   . a s p x   c o m p i l a d o s   d e   m o d o   d i n  m i c o . 
 
 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 8 1 6 _ N A M E = P e d i d o s   d e   d e p u r a   o 
 
 A S P N E T _ D E B U G G I N G _ R E Q U E S T S _ 8 1 6 _ H E L P = N  m e r o   d e   p e d i d o s   d e   p r o c e s s a m e n t o   p r o c e s s a d o s . 
 
 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 8 1 6 _ N A M E = E r r o s   d u r a n t e   a   c o m p i l a   o 
 
 A S P N E T _ E R R O R S _ C O M P I L I N G _ 8 1 6 _ H E L P = N  m e r o   d e   e r r o s   o c o r r i d o s   d u r a n t e   a   c o m p i l a   o . 
 
 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 8 1 6 _ N A M E = E r r o s   d u r a n t e   a   e x e c u   o 
 
 A S P N E T _ E R R O R S _ D U R I N G _ R E Q U E S T _ 8 1 6 _ H E L P = N  m e r o   d e   e r r o s   o c o r r i d o s   d u r a n t e   o   p r o c e s s a m e n t o   d e   u m   p e d i d o . 
 
 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 8 1 6 _ N A M E = E r r o s   d u r a n t e   o   p r  - p r o c e s s a m e n t o 
 
 A S P N E T _ E R R O R S _ P R E _ P R O C E S S I N G _ 8 1 6 _ H E L P = N  m e r o   d e   e r r o s   o c o r r i d o s   d u r a n t e   a   a n  l i s e   e   a   c o n f i g u r a   o . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ 8 1 6 _ N A M E = T o t a l   d e   e r r o s 
 
 A S P N E T _ E R R O R S _ T O T A L _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   e r r o s   o c o r r i d o s . 
 
 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 8 1 6 _ N A M E = T o t a l   d e   e r r o s / s e g 
 
 A S P N E T _ E R R O R S _ T O T A L _ R A T E _ 8 1 6 _ H E L P = T a x a   d e   e r r o s   o c o r r i d o s . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 8 1 6 _ N A M E = E r r o s   n  o   p r o c e s s a d o s   d u r a n t e   a   e x e c u   o 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ 8 1 6 _ H E L P = N  m e r o   d e   e r r o s   n  o   p r o c e s s a d o s   p e l o   c  d i g o   d e   u t i l i z a d o r ,   m a s   p e l o   p r o c e s s a d o r   d e   e r r o s   p r e d e f i n i d o . 
 
 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 8 1 6 _ N A M E = E r r o s   n  o   p r o c e s s a d o s   d u r a n t e   a   e x e c u   o / s e g 
 
 A S P N E T _ E R R O R S _ U N H A N D L E D _ R A T E _ 8 1 6 _ H E L P = T a x a   d e   e r r o s   n  o   p r o c e s s a d o s . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 8 1 6 _ N A M E = E n t r a d a s   n a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ E N T R I E S _ 8 1 6 _ H E L P = N  m e r o   a c t u a l   d e   e n t r a d a s   n a   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 8 1 6 _ N A M E = A c e r t o s   n a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ H I T S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   p e d i d o s   c o m   c o l o c a   o   n a   c a c h e   d e   s a  d a   s e r v i d o s   a   p a r t i r   d a   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 8 1 6 _ N A M E = P e d i d o s   s e m    x i t o   n a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ M I S S E S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   p e d i d o s   c o m   c o l o c a   o   n a   c a c h e   d e   s a  d a   n  o   s e r v i d o s   a   p a r t i r   d a   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 8 1 6 _ N A M E = T a x a   d e   a c e r t o s   n a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ 8 1 6 _ H E L P = T a x a   d e   a c e r t o s   d e   p e d i d o s   p a r a   p e d i d o s   c o m   c o l o c a   o   n a   c a c h e   d e   s a  d a . 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ N A M E = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ H E L P = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   d e   s a  d a 
 
 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ N A M E = T a x a   d e   r e n o v a   o   d a   c a c h e   d e   s a  d a 
 
 A S P N E T _ O U T P U T _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d a   c a c h e   d e   s a  d a   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ P I P E L I N E S _ 8 1 6 _ N A M E = C o n t a g e m   d e   i n s t  n c i a s   d e   p i p e l i n e 
 
 A S P N E T _ P I P E L I N E S _ 8 1 6 _ H E L P = N  m e r o   d e   i n s t  n c i a s   d e   p i p e l i n e   a c t i v a s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 8 1 6 _ N A M E = T o t a l   d e   b y t e s   d e   e n t r a d a   d o   p e d i d o 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ I N _ 8 1 6 _ H E L P = O   t a m a n h o   t o t a l ,   e m   b y t e s ,   d e   t o d o s   o s   p e d i d o s . 
 
 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 8 1 6 _ N A M E = T o t a l   d e   b y t e s   d e   s a  d a   d o   p e d i d o 
 
 A S P N E T _ R E Q U E S T _ B Y T E S _ O U T _ 8 1 6 _ H E L P = O   t a m a n h o   t o t a l ,   e m   b y t e s ,   d a s   r e s p o s t a s   e n v i a d a s   a   u m   c l i e n t e .   N  o   i n c l u i   o s   c a b e  a l h o s   d e   r e s p o s t a   d e   H T T P   p a d r  o . 
 
 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 8 1 6 _ N A M E = T e m p o   d e   e x e c u   o   d o   p e d i d o 
 
 A S P N E T _ R E Q U E S T _ E X E C U T I O N _ T I M E _ 8 1 6 _ H E L P = O   n  m e r o   d e   m i l i s s e g u n d o s   q u e   o   p e d i d o   m a i s   r e c e n t e   d e m o r o u   a   s e r   e x e c u t a d o . 
 
 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 8 1 6 _ N A M E = T e m p o   d e   e s p e r a   d o   p e d i d o 
 
 A S P N E T _ R E Q U E S T _ W A I T _ T I M E _ 8 1 6 _ H E L P = O   n  m e r o   d e   m i l i s s e g u n d o s   q u e   o   p e d i d o   m a i s   r e c e n t e   e s t e v e      e s p e r a   n a   f i l a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 8 1 6 _ N A M E = P e d i d o s   d e s l i g a d o s 
 
 A S P N E T _ R E Q U E S T S _ D I S C O N N E C T E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   d e s l i g a d o s   d e v i d o   a   e r r o s   d e   c o m u n i c a   e s   o u   t e r m i n a d o s   p e l o   u t i l i z a d o r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 8 1 6 _ N A M E = P e d i d o s   e m   e x e c u   o 
 
 A S P N E T _ R E Q U E S T S _ E X E C U T I N G _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   e m   e x e c u   o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 8 1 6 _ N A M E = P e d i d o s   f a l h a d o s 
 
 A S P N E T _ R E Q U E S T S _ F A I L E D _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   p e d i d o s   f a l h a d o s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 8 1 6 _ N A M E = P e d i d o s   n  o   a u t o r i z a d o s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ A U T H O R I Z E D _ 8 1 6 _ H E L P = N  m e r o   d e   p e d i d o s   f a l h a d o s   d e v i d o   a   a c e s s o   n  o   a u t o r i z a d o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 8 1 6 _ N A M E = P e d i d o s   n  o   e n c o n t r a d o s 
 
 A S P N E T _ R E Q U E S T S _ N O T _ F O U N D _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   p a r a   o s   r e c u r s o s   q u e   n  o   f o r a m   e n c o n t r a d o s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 8 1 6 _ N A M E = P e d i d o s   e m   f i l a 
 
 A S P N E T _ R E Q U E S T S _ Q U E U E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   q u e   a g u a r d a m   p r o c e s s a m e n t o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 8 1 6 _ N A M E = P e d i d o s   r e j e i t a d o s 
 
 A S P N E T _ R E Q U E S T S _ R E J E C T E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   r e j e i t a d o s   p o r q u e   a   f i l a   d e   p e d i d o s   e s t a v a   c h e i a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 8 1 6 _ N A M E = P e d i d o s   e f e c t u a d o s 
 
 A S P N E T _ R E Q U E S T S _ S U C C E D E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   e x e c u t a d o s   c o m    x i t o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 8 1 6 _ N A M E = T e m p o   l i m i t e   d o s   p e d i d o s   e x c e d i d o 
 
 A S P N E T _ R E Q U E S T S _ T I M E D _ O U T _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   c o m   t e m p o   l i m i t e   e x c e d i d o . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 8 1 6 _ N A M E = T o t a l   d e   p e d i d o s 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   d e   p e d i d o s   d e s d e   q u e   a   a p l i c a   o   f o i   i n i c i a d a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 8 1 6 _ N A M E = P e d i d o s / s e g 
 
 A S P N E T _ R E Q U E S T S _ T O T A L _ R A T E _ 8 1 6 _ H E L P = O   n  m e r o   d e   p e d i d o s   e x e c u t a d o s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 8 1 6 _ N A M E = T o t a l   d e   l i g a   e s   a o   S Q L   S e r v e r   p o r   s e s s  o 
 
 A S P N E T _ S E S S I O N _ S Q L _ S E R V E R _ C O N N E C T I O N S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   l i g a   e s   a o   S Q L   S e r v e r   u t i l i z a d o ,   p o r   e s t a d o   d e   s e s s  o . 
 
 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 8 1 6 _ N A M E = T o t a l   d e   l i g a   e s   a o   s e r v i d o r   d e   e s t a d o   d e   s e s s  o 
 
 A S P N E T _ S E S S I O N _ S T A T E _ S E R V E R _ C O N N E C T I O N S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   l i g a   e s   a o   s e r v i d o r   d e   e s t a d o   u t i l i z a d o ,   p o r   e s t a d o   d e   s e s s  o . 
 
 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 8 1 6 _ N A M E = S e s s  e s   a b a n d o n a d a s 
 
 A S P N E T _ S E S S I O N S _ A B A N D O N E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   s e s s  e s   e x p l i c i t a m e n t e   a b a n d o n a d a s . 
 
 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 8 1 6 _ N A M E = S e s s  e s   a c t i v a s 
 
 A S P N E T _ S E S S I O N S _ A C T I V E _ 8 1 6 _ H E L P = O   n  m e r o   a c t u a l   d e   s e s s  e s   p r e s e n t e m e n t e   a c t i v a s . 
 
 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 8 1 6 _ N A M E = T e m p o   l i m i t e   d a s   s e s s  e s   e x c e d i d o 
 
 A S P N E T _ S E S S I O N S _ T I M E D _ O U T _ 8 1 6 _ H E L P = O   n  m e r o   d e   s e s s  e s   c o m   t e m p o   l i m i t e   e x c e d i d o . 
 
 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 8 1 6 _ N A M E = T o t a l   d e   s e s s  e s 
 
 A S P N E T _ S E S S I O N S _ T O T A L _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   s e s s  e s   d e s d e   q u e   a   a p l i c a   o   f o i   i n i c i a d a . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 8 1 6 _ N A M E = S e s s  e s   d o   s e r v i d o r   d e   e s t a d o   a b a n d o n a d a s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A B A N D O N E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   s e s s  e s   e x p l i c i t a m e n t e   a b a n d o n a d a s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 8 1 6 _ N A M E = S e s s  e s   d o   s e r v i d o r   d e   e s t a d o   a c t i v a s 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ A C T I V E _ 8 1 6 _ H E L P = O   n  m e r o   a c t u a l   d e   s e s s  e s   p r e s e n t e m e n t e   a c t i v a s . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 8 1 6 _ N A M E = T e m p o   l i m i t e   d a s   s e s s  e s   d o   s e r v i d o r   d e   e s t a d o   e x c e d i d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T I M E D _ O U T _ 8 1 6 _ H E L P = O   n  m e r o   d e   s e s s  e s   c o m   t e m p o   l i m i t e   e x c e d i d o . 
 
 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 8 1 6 _ N A M E = T o t a l   d e   s e s s  e s   d o   s e r v i d o r   d e   e s t a d o 
 
 A S P N E T _ S T A T E _ S E R V E R _ S E S S I O N S _ T O T A L _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   d e   s e s s  e s . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 8 1 6 _ N A M E = E n t r a d a s   n a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ E N T R I E S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   e n t r a d a s   n a   c a c h e   ( i n t e r n a s   e   a d i c i o n a d a s   p e l o   u t i l i z a d o r ) 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 8 1 6 _ N A M E = A c e r t o s   n a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ H I T S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   a c e r t o s   a   p a r t i r   d a   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 8 1 6 _ N A M E = P e d i d o s   s e m    x i t o   n a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ M I S S E S _ 8 1 6 _ H E L P = N  m e r o   t o t a l   d e   p e d i d o s   s e m    x i t o   n a   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 8 1 6 _ N A M E = T a x a   d e   a c e r t o s   n a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ 8 1 6 _ H E L P = T a x a   d e   a c e r t o s   a   p a r t i r   d e   t o d a s   a s   c h a m a d a s   d e   c a c h e . 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ N A M E = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ R A T I O _ B A S E _ 8 1 6 _ H E L P = B a s e   d e   t a x a   d e   a c e r t o s   n a   c a c h e   t o t a l 
 
 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ N A M E = T a x a   d e   r e n o v a   o   d a   c a c h e   t o t a l 
 
 A S P N E T _ T O T A L _ C A C H E _ T U R N O V E R _ R A T E _ 8 1 6 _ H E L P = N  m e r o   d e   a d i   e s   e   r e m o   e s   d a   c a c h e   t o t a l   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 8 1 6 _ N A M E = T r a n s a c   e s   c a n c e l a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ A B O R T E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   t r a n s a c   e s   c a n c e l a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 8 1 6 _ N A M E = T r a n s a c   e s   c o n f i r m a d a s 
 
 A S P N E T _ T R A N S A C T I O N S _ C O M M I T T E D _ 8 1 6 _ H E L P = O   n  m e r o   d e   t r a n s a c   e s   c o n f i r m a d a s . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 8 1 6 _ N A M E = T r a n s a c   e s   p e n d e n t e s 
 
 A S P N E T _ T R A N S A C T I O N S _ P E N D I N G _ 8 1 6 _ H E L P = N  m e r o   d e   t r a n s a c   e s   e m   c u r s o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 8 1 6 _ N A M E = T r a n s a c   e s / s e g 
 
 A S P N E T _ T R A N S A C T I O N S _ R A T E _ 8 1 6 _ H E L P = T r a n s a c   e s   i n i c i a d a s   p o r   s e g u n d o . 
 
 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 8 1 6 _ N A M E = T o t a l   d e   t r a n s a c   e s 
 
 A S P N E T _ T R A N S A C T I O N S _ T O T A L _ 8 1 6 _ H E L P = O   n  m e r o   t o t a l   d e   t r a n s a c   e s   d e s d e   q u e   a   a p l i c a   o   f o i   i n i c i a d a . 
 
 
 
 A S P N E T _ W P S _ R E S T A R T S _ 8 1 6 _ N A M E = R e i n  c i o s   d o   p r o c e s s o   d e   t r a b a l h o 
 
 A S P N E T _ W P S _ R E S T A R T S _ 8 1 6 _ H E L P = N  m e r o   d e   v e z e s   q u e   u m   p r o c e s s o   d e   t r a b a l h o   f o i   r e i n i c i a d o   n o   c o m p u t a d o r . 
 
 
 
 A S P N E T _ W P S _ R U N N I N G _ 8 1 6 _ N A M E = P r o c e s s o s   d e   t r a b a l h o   e m   e x e c u   o 
 
 A S P N E T _ W P S _ R U N N I N G _ 8 1 6 _ H E L P = N  m e r o   d e   p r o c e s s o s   d e   t r a b a l h o   e m   e x e c u   o   n o   c o m p u t a d o r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 1 _ N A M E = R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 1 _ H E L P = T h e   c u r r e n t   n u m b e r   o f   r e q u e s t s ,   i n c l u d i n g   t h o s e   t h a t   a r e   q u e u e d ,   c u r r e n t l y   e x e c u t i n g ,   o r   w a i t i n g   t o   b e   w r i t t e n   t o   t h e   c l i e n t .     U n d e r   t h e   A S P . N E T   p r o c e s s   m o d e l ,   w h e n   t h i s   c o u n t e r   e x c e e d s   t h e   r e q u e s t Q u e u e L i m i t   d e f i n e d   i n   t h e   p r o c e s s M o d e l   c o n f i g u r a t i o n   s e c t i o n ,   A S P . N E T   w i l l   b e g i n   r e j e c t i n g   r e q u e s t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 D _ N A M E = R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 D _ H E L P = T h e   c u r r e n t   n u m b e r   o f   r e q u e s t s ,   i n c l u d i n g   t h o s e   t h a t   a r e   q u e u e d ,   c u r r e n t l y   e x e c u t i n g ,   o r   w a i t i n g   t o   b e   w r i t t e n   t o   t h e   c l i e n t .     U n d e r   t h e   A S P . N E T   p r o c e s s   m o d e l ,   w h e n   t h i s   c o u n t e r   e x c e e d s   t h e   r e q u e s t Q u e u e L i m i t   d e f i n e d   i n   t h e   p r o c e s s M o d e l   c o n f i g u r a t i o n   s e c t i o n ,   A S P . N E T   w i l l   b e g i n   r e j e c t i n g   r e q u e s t s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 1 _ N A M E = R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 1 _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   i n   t h e   a p p l i c a t i o n   r e q u e s t   q u e u e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 D _ N A M E = R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 D _ H E L P = T h e   n u m b e r   o f   r e q u e s t s   i n   t h e   a p p l i c a t i o n   r e q u e s t   q u e u e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 5 _ N A M E =   A k t u  l n    p o ~a d a v k y 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 5 _ H E L P =   A k t u  l n    p o 
e t   p o ~a d a v k o,   v 
e t n   p o ~a d a v k o  z a Ya z e n  c h   v e   f r o n t ,   p r  v   z p r a c o v  v a n  c h   n e b o   
e k a j  c  c h   n a   z  p i s   d o   k l i e n t a .   P o k u d   v   m o d e l u   z p r a c o v  n    A S P . N E T   p Ye s  h n e   t e n t o   
 t a 
  h o d n o t u   r e q u e s t Q u e u e L i m i t   d e f i n o v a n o u   v   k o n f i g u r a 
n  m   o d d  l u   p r o c e s s M o d e l ,   z a 
n e   s y s t  m   A S P . N E T   p o ~a d a v k y   o d m  t a t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 5 _ N A M E =   P o ~a d a v k y   v e   f r o n t   a p l i k a c e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 5 _ H E L P =   P o 
e t   p o ~a d a v k o  v e   f r o n t   p o ~a d a v k o  a p l i k a c e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 6 _ N A M E =   A k t u e l l e   a n m o d n i n g e r 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 6 _ H E L P =   D e t   a k t u e l l e   a n t a l   a n m o d n i n g e r ,   h e r u n d e r   a n m o d n i n g e r ,   d e r   e r   i   k  ,   b l i v e r   k  r t   e l l e r   v e n t e r   p    a t   b l i v e   s k r e v e t   t i l   k l i e n t e n .   N  r   d e n n e   t  l l e r   o v e r s k r i d e r   d e n   r e q u e s t Q u e u e L i m i t ,   d e r   e r   d e f i n e r e t   i   k o n f i g u r a t i o n s a f s n i t t e t   p r o c e s s M o d e l ,   b e g y n d e r   A S P . N E T   a t   a f v i s e   a n m o d n i n g e r   u n d e r   p r o c e s m o d e l l e n   i   A S P . N E T .   
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 6 _ N A M E =   A n m o d n i n g e r   i   p r o g r a m k  e n 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 6 _ H E L P =   A n t a l l e t   a f   a n m o d n i n g e r   i   p r o g r a m m e t s   a n m o d n i n g s k  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 7 _ N A M E =   A k t u e l l e   A n f o r d e r u n g e n 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 7 _ H E L P =   D i e   a k t u e l l e   A n z a h l   d e r   A n f o r d e r u n g e n   e i n s c h l i e  l i c h   d e r e r ,   d i e   s i c h   i n   d e r   W a r t e s c h l a n g e   b e f i n d e n ,   d e r z e i t   a u s g e f  h r t   w e r d e n   o d e r   d a r a u f   w a r t e n ,   a n   d e n   C l i e n t    b e r g e b e n   z u   w e r d e n .   D a s   A S P . N E T - P r o z e s s m o d e l l   w e i s t   d i e   A n f r a g e n   z u r  c k ,   w e n n   d i e s e r   L e i s t u n g s i n d i k a t o r   d e n   W e r t   " r e q u e s t Q u e u e L i m i t "    b e r s t e i g t ,   d e r   i m   K o n f i g u r a t i o n s a b s c h n i t t   " p r o c e s s M o d e l "   f e s t g e l e g t   i s t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 7 _ N A M E =   A n f r a g e n   i n   d e r   A n w e n d u n g s w a r t e s c h l a n g e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 7 _ H E L P =   A n z a h l   d e r   A n f o r d e r u n g e n   d e r   W a r t e s c h l a n g e   d e r   A n w e n d u n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 8 _ N A M E =     
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 8 _ H E L P =         ,           ,                               -   .             A S P . N E T ,               r e q u e s t Q u e u e L i m i t             p r o c e s s M o d e l ,       A S P . N E T           . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 8 _ N A M E =           
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 8 _ H E L P =                       . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 A _ N A M E =   S o l i c i t u d e s   a c t u a l e s 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 A _ H E L P =   N  m e r o   a c t u a l   d e   s o l i c i t u d e s ,   i n c l u i d a s   l a s   q u e   e s t  n   e n   l a   c o l a ,   l a s   q u e   s e   e s t  n   e j e c u t a n d o   a c t u a l m e n t e   o   l a s   q u e   e s t  n   e n   e s p e r a   p a r a   e s c r i b i r s e   e n   e l   c l i e n t e .   E n   e l   m o d e l o   d e   p r o c e s o   d e   A S P . N E T ,   c u a n d o   e s t e   c o n t a d o r   s u p e r a   e l   v a l o r   d e f i n i d o   p o r   r e q u e s t Q u e u e L i m i t   e n   l a   s e c c i  n   d e   c o n f i g u r a c i  n   p r o c e s s M o d e l ,   A S P . N E T   c o m e n z a r    a   r e c h a z a r   s o l i c i t u d e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 A _ N A M E =   S o l i c i t u d e s   e n   l a   c o l a   d e   l a   a p l i c a c i  n 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 A _ H E L P =   N  m e r o   d e   s o l i c i t u d e s   q u e   s e   e n c u e n t r a n   e n   l a   c o l a   d e   s o l i c i t u d e s   d e   l a   a p l i c a c i  n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 B _ N A M E =   P y y n t  j    s u o r i t e t t a v a n a 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 B _ H E L P =   P y y n t  j e n   m   r  ,   j o h o n   l a s k e t a a n   j o n o s s a   o l e v a t ,   s u o r i t e t t a v a n a   o l e v a t   j a   a s i a k k a a l l e   k i r j o i t t a m i s t a   o d o t t a v a t   p y y n n  t .   A S P . N E T i n   p r o s e s s i m a l l i n   m u k a a n   A S P . N E T   a l k a a   h y l  t    p y y n t  j  ,   k u n   t  m    l a s k u r i   y l i t t     p r o c e s s M o d e l - o s i o s s a   m   r i t e t y n   r e q u e s t Q u e u e L i m i t - a r v o n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 B _ N A M E =   P y y n t  j    s o v e l l u s j o n o s s a 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 B _ H E L P =   S o v e l l u s p y y n t  j o n o s s a   o l e v i e n   p y y n t  j e n   m   r  . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 C _ N A M E =   D e m a n d e s   a c t u e l l e s 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 C _ H E L P =   L e   n o m b r e   d e   d e m a n d e s   a c t u e l l e s ,   y   c o m p r i s   c e l l e s   e n   f i l e   d ' a t t e n t e ,   c e l l e s   e n   c o u r s   d ' e x  c u t i o n   o u   c e l l e s   e n   a t t e n t e   d '  c r i t u r e   s u r   l e   c l i e n t .     D a n s   l e   m o d  l e   d e   p r o c e s s u s   A S P . N E T ,   l o r s q u e   c e   c o m p t e u r   d  p a s s e   l a   v a l e u r   d e   r e q u e s t Q u e u e L i m i t   d  f i n i e   d a n s   l a   s e c t i o n   d e   c o n f i g u r a t i o n   p r o c e s s M o d e l ,   A S P . N E T   c o m m e n c e      r e j e t e r   l e s   d e m a n d e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 C _ N A M E =   D e m a n d e s   d a n s   l a   f i l e   d ' a t t e n t e   d ' a p p l i c a t i o n 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 C _ H E L P =   L e   n o m b r e   d e   d e m a n d e s   c o n t e n u e s   d a n s   l a   f i l e   d ' a t t e n t e   d ' a p p l i c a t i o n . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 E _ N A M E =   K  r e l m e k   p i l l a n a t n y i   s z  m a 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 0 E _ H E L P =   A   k  r e l m e k   p i l l a n a t n y i   s z  m a ,   a m e l y b e   b e l e t a r t o z i k   a   s o r b a    l l  t o t t ,   a   j e l e n l e g   v  g r e h a j t  s   a l a t t    l l  ,   i l l e t v e   a z   e r e d m  n y    g y f  l n e k   v a l    e l k  l d  s  r e   v  r    k  r e l m e k   s z  m a .   A z   A S P . N E T   f o l y a m a t m o d e l l   a l a p j  n ,   a m i k o r   e   s z  m l  l     r t  k e   m e g h a l a d j a   a   p r o c e s s M o d e l   k o n f i g u r  c i  s   s z a k a s z b a n   d e f i n i  l t   r e q u e s t Q u e u e L i m i t   k o r l  t o t ,   a z   A S P . N E T   r e n d s z e r   e l k e z d i   e l u t a s  t a n i   a   k  r e l m e k e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 E _ N A M E =   K  r e l m e k   s z  m a   a z   a l k a l m a z  s   s o r  b a n 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 0 E _ H E L P =   A z   a l k a l m a z  s   k  r e l e m s o r  b a n   l e v Q  k  r e l m e k   s z  m a . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 0 _ N A M E =   R i c h i e s t e   c o r r e n t i 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 0 _ H E L P =   N u m e r o   c o r r e n t e   d i   r i c h i e s t e ,   i n c l u s e   l e   r i c h i e s t e   i n   c o d a ,   q u e l l e   i n   f a s e   d i   e l a b o r a z i o n e   e   q u e l l e   i n   a t t e s a   d i   e s s e r e   p a s s a t e   a l   c l i e n t .   C o n   i l   m o d e l l o   d i   p r o c e s s o   A S P . N E T ,   q u a n d o   v i e n e   s u p e r a t o   i l   l i m i t e   r e q u e s t Q u e u e L i m i t ,   d e f i n i t o   n e l l a   s e z i o n e   d i   c o n f i g u r a z i o n e   p r o c e s s M o d e l ,   l e   r i c h i e s t e   v e n g o n o   r i f i u t a t e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 0 _ N A M E =   R i c h i e s t e   n e l l a   c o d a   d e l l ' a p p l i c a z i o n e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 0 _ H E L P =   N u m e r o   d i   r i c h i e s t e   n e l l a   c o d a   d i   r i c h i e s t e   d e l l ' a p p l i c a z i o n e . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 3 _ N A M E =   H u i d i g e   a a n v r a g e n 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 3 _ H E L P =   H e t   h u i d i g e   a a n t a l   a a n v r a g e n ,   i n c l u s i e f   d e   a a n v r a g e n   d i e   i n   d e   w a c h t r i j   s t a a n ,   d e   a a n v r a g e n   d i e   m o m e n t e e l   w o r d e n   u i t g e v o e r d   e n   d e   a a n v r a g e n   d i e   n o g   n a a r   d e   c l i e n t   m o e t e n   w o r d e n   g e s c h r e v e n .     V o l g e n s   h e t   A S P . N E T - p r o c e s m o d e l   b e g i n t   A S P . N E T   a a n v r a g e n   a f   t e   w i j z e n   z o d r a   d e z e   t e l l e r   d e   i n   d e   c o n f i g u r a t i e   v a n   h e t   p r o c e s m o d e l   v a s t g e l e g d e   l i m i e t   v o o r   d e   a a n v r a a g w a c h t r i j   o v e r s c h r i j d t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 3 _ N A M E =   A a n v r a g e n   i n   d e   w a c h t r i j   v a n   d e   t o e p a s s i n g 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 3 _ H E L P =   H e t   a a n t a l   a a n v r a g e n   i n   d e   a a n v r a a g w a c h t r i j   v a n   d e   t o e p a s s i n g . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 4 _ N A M E =   G j e l d e n d e   f o r e s p  r s l e r 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 4 _ H E L P =   G j e l d e n d e   a n t a l l   f o r e s p  r s l e r ,   i n k l u d e r t   f o r e s p  r s l e r   s o m   s t  r   i   k  ,   k j  r e s   e l l e r   v e n t e r   p       b l i   s k r e v e t   t i l   k l i e n t e n .   I   A S P . N E T - p r o s e s s m o d e l l e n   b e g y n n e r   A S P . N E T      f o r k a s t e   f o r e s p  r s l e r   n  r   d e n n e   t e l l e r e n   o v e r s t i g e r   v e r d i e n   f o r   " r e q u e s t Q u e u e L i m i t "   s o m   e r   a n g i t t   i   k o n f i g u r a s j o n s d e l e n   " p r o c e s s M o d e l " . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 4 _ N A M E =   F o r e s p  r s l e r   i   p r o g r a m k  
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 4 _ H E L P =   A n t a l l e t   f o r e s p  r s l e r   i   f o r e s p  r s e l s k  e n   f o r   p r o g r a m m e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 5 _ N A M E =   B i e |c e   |d a n i a 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 5 _ H E L P =   L i c z b a   b i e |c y c h   |d a D  o c z e k u j c y c h   w   k o l e j c e ,   a k t u a l n i e   w y k o n y w a n y c h   l u b   o c z e k u j c y c h   n a   z a p i s a n i e   n a   k l i e n c i e .   W   m o d e l u   A S P . N E T   p r z e k r o c z e n i e   p r z e z   t e n   l i c z n i k   l i m i t u   r e q u e s t Q u e u e L i m i t   z d e f i n i o w a n e g o   w   s e k c j i   k o n f i g u r a c j i   m o d e l u   p r o c e s s M o d e l   s p o w o d u j e   o d r z u c a n i e   |d a D  p r z e z   p l a t f o r m   A S P . N E T . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 5 _ N A M E =   {d a n i a   w   k o l e j c e   a p l i k a c j i 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 5 _ H E L P =   L i c z b a   |d a D  w   k o l e j c e   |d a D  a p l i k a c j i . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 4 1 6 _ N A M E =   N    d e   S o l i c i t a   e s   A t u a i s 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 4 1 6 _ H E L P =   O   n  m e r o   d e   s o l i c i t a   e s   a t u a i s ,   i n c l u i n d o   a q u e l a s   q u e   e s t  o   e m   f i l a ,   e m   e x e c u   o   o u   a g u a r d a n d o   p a r a   s e r e m   g r a v a d a s   n o   c l i e n t e .   N o   m o d e l o   d e   p r o c e s s o   d o   A S P . N E T ,   q u a n d o   e s s e   c o n t a d o r   u l t r a p a s s a   o   l i m i t e   d e   f i l a s   d e   s o l i c i t a   e s   n a   s e s s  o   d e   c o n f i g u r a   o   d o   m o d e l o   d e   p r o c e s s o ,   o   A S P . N E T   i n i c i a   o   p r o c e d i m e n t o   d e   r e j e i   o   d a s   s o l i c i t a   e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 4 1 6 _ N A M E =   N    d e   S o l i c i t a   e s   n a   F i l a   d e   A p l i c a t i v o s 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 4 1 6 _ H E L P =   O   n  m e r o   d e   s o l i c i t a   e s   n a   f i l a   d e   s o l i c i t a   e s   d e   a p l i c a t i v o s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 8 1 6 _ N A M E =   P e d i d o s   a c t u a i s 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 8 1 6 _ H E L P =   N  m e r o   a c t u a l   d e   p e d i d o s ,   i n c l u i n d o   o s   q u e   e s t  o   e m   f i l a   d e   e s p e r a ,   e m   e x e c u   o   o u      e s p e r a   d e   s e r e m   e s c r i t o s   p a r a   o   c l i e n t e .     S e g u n d o   o   m o d e l o   d e   p r o c e s s o   d o   A S P . N E T ,   q u a n d o   e s t e   c o n t a d o r   e x c e d e r   o   ' r e q u e s t Q u e u e L i m i t '   d e f i n i d o   n a   s e c   o   d e   c o n f i g u r a   o   ' p r o c e s s M o d e l ' ,   o   A S P . N E T   c o m e  a r    a   r e j e i t a r   p e d i d o s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 8 1 6 _ N A M E =   P e d i d o s   n a   f i l a   d e   e s p e r a   d e   p e d i d o s   d e   a p l i c a   e s 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 8 1 6 _ H E L P =   N  m e r o   d e   p e d i d o s   n a   f i l a   d e   e s p e r a   d e   p e d i d o s   d e   a p l i c a   e s . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 8 0 4 _ N A M E =   R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 8 0 4 _ H E L P =   S_MRvBlpevSb(WR-Nv0ck(WgbLbI{_QeQ[7bzvBl0(W  A S P . N E T   ۏz!jW-NS_勡pehVǏ[IN(Wۏz!jWMnRv  r e q u e s t Q u e u e L i m i t   eA S P . N E T   \ _Yb~Bl0
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 8 0 4 _ N A M E =   R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 8 0 4 _ H E L P =   (W^(uz^BlR-NvBlpev0
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 4 0 4 _ N A M E =   R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 4 0 4 _ H E L P =   vMRvBlPxeS+T(WGOR-Nv0ck(WWLbI{P[eQ(u6bzvBl0(W  A S P . N E T   Ut!jWNvurxehVN  p r o c e s s M o d e l   D}Ka@Sk[v  r e q u e s t Q u e u e L i m i t   BfA S P . N E T   \bU}Bl0
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 4 0 4 _ N A M E =   R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 4 0 4 _ H E L P =   a(uz_GORBlvBlxeϑ0
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 2 _ N A M E =   R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 2 _ H E L P =   P   0  x  ,   ֬    x  ,   t|tǸŸ  0|  0䲬  ǔ  D  P  h\  ƭX  .   A S P . N E T   \8  x  t  tδ0   p r o c e s s M o d e l   $  9X  X  r e q u e s t Q u e u e L i m i t X  D  `  ,     ƭD  piȲ.   
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 2 _ N A M E =   R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 2 _ H E L P =   Qǩ  \  ƭ  P  ǔ  ƭX  
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 9 _ N A M E =   "5:CI8E  70?@>A>2
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 9 _ H E L P =   >;8G5AB2>  B5:CI8E  70?@>A>2,   2:;NG0O  =0E>4OI85AO  2  >G5@548,   2K?>;=O5<K5  2  =0AB>OI55  2@5<O  8  >6840NI85  70?8A8  :;85=BC.     <>45;8  ?@>F5AA0  A S P . N E T   ?@8  ?@52KH5=88  40==K<  AG5BG8:><  7=0G5=8O  ?0@0<5B@0  e q u e s t Q u e u e L i m i t ,   7040==>3>  2  @0745;5  :@=D83C@0F88  p r o c e s s M o d e l ,   A S P . N E T   ?5@5AB05B  ?@8=8<0BL  70?@>AK. 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 9 _ N A M E =   0?@>A>2  2  >G5@548  ?@8;>65=89
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 9 _ H E L P =   >;8G5AB2>  70?@>A>2  2  >G5@548  70?@>A>2  ?@8;>65=89. 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 D _ N A M E =   A k t u e l l a   b e g  r a n d e n 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 D _ H E L P =   A n t a l   a k t u e l l a   b e g  r a n d e n   i n k l u s i v e   b e g  r a n d e n   i   k    o c h   b e g  r a n d e n   s o m   f  r   t i l l f  l l e t   u t f  r s   e l l e r   v  n t a r   p    a t t   s k r i v a s   t i l l   k l i e n t e n .   N  r   d e n   h  r   r  k n a r e n    v e r s k r i d e r   r e q u e s t Q u e u e L i m i t   s o m   h a r   d e f i n i e r a t s   i   k o n f i g u r a t i o n s a v s n i t t e t   p r o c e s s M o d e l   g o d k  n n s   i n t e   b e g  r a n d e n   i   p r o c e s s m o d e l l e n   i   A S P . N E T . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 D _ N A M E =   B e g  r a n d e n   i   t i l l  m p n i n g s k  
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 D _ H E L P =   A n t a l   b e g  r a n d e n   i   k    i   t i l l  m p n i n g s p r o g r a m m e t . 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 F _ N A M E =   G e  e r l i   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 F _ H E L P =   S 1r a y a   a l 1n a n l a r ,   _u   a n d a   y  r  t  l m e k t e   o l a n l a r   v e   i s t e m c i y e   y a z 1l m a y 1  b e k l e y e n l e r   d e   d a h i l ,   g e  e r l i   i s t e k l e r i n   s a y 1s 1.   A S P . N E T   i _l e m   m o d e l i n d e ,   b u   s a y a    p r o c e s s M o d e l   y a p 1l a n d 1r m a   b  l  m  n d e   t a n 1m l a n a n   r e q u e s t Q u e u e L i m i t   d e e r i n i   a _t 11n d a ,   A S P . N E T   i s t e k l e r i   r e d d e t m e y e   b a _l a r . 
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 F _ N A M E =   U y g u l a m a   S 1r a s 1n d a k i   0s t e k   S a y 1s 1
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 F _ H E L P =   U y g u l a m a   i s t e k l e r i   s 1r a s 1n d a k i   i s t e k   s a y 1s 1. 
 
 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 1 _ N A M E =   R e q u e s t s   C u r r e n t 
 
 A S P N E T _ R E Q U E S T S _ C U R R E N T _ 0 1 1 _ H E L P =   s(Wn0Blpe0  000k0B000n0s(W[L-Nn00n0000000x0n0fM00_a0n00n00+T0~0Y00    A S P . N E T   0000000g00S0n000000L00000000-[00000g0[U00_0r e q u e s t Q u e u e L i m i t 0H0_04XT0A S P . N E T   o0Bl0b&TW0~0Y00
 
 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 1 _ N A M E =   R e q u e s t s   I n   A p p l i c a t i o n   Q u e u e 
 
 A S P N E T _ R E Q U E S T S _ I N _ A P P L I C A T I O N _ Q U E U E _ 0 1 1 _ H E L P =   00000000 0Bl 0000k0B00Blpe0
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\netfx\src\framework\xsp\system\web\system.web.txt ===
;
; ASP.NET managed resource file
;
; Copyright (c) 2000 Microsoft Corporation
;
; (After each comment there is a bogus entry to work around RESGEN bug)
;

;
; NOTE: UE now diffs the files to verify changes.  No special procedure 
; is necessary to notify UE when changing these strings.
; Direct questions to DavidEbb.
;

[strings]

;
; HTML template for standard ASP.NET error
;


;
; Exceptions' messages
;

; Browser Caps

_sep01_=sep
Unrecognized_construct_in_pattern=Server cannot recognize construct '{0}' in pattern '{1}'.
Caps_cannot_be_inited_twice=Capabilities object cannot be initialized twice.

; Config related

_sep02_=sep
Invalid_string_from_browser_caps=The HttpBrowserCapabilities string '{1}' evaluated to '{2}'.  {0}  Check the browserCaps section of machine.config or web.config to correct the error.
Config_Process_model_time_invalid=Process model times must be in the form [[hh:]mm:]ss
Cannot_read_machine_level_config_file=Server cannot read the machine-level configuration file '{0}'.
Config_location_paths_must_be_unique=<location> section path attributes must be unique per config file.
Cannot_clear_sections_within_group=Server cannot clear configuration sections from within section groups.  <clear/> must be a child of <configSections>.
Config_sections_must_be_unique=Sections must only appear once per config file.  See the help topic <location> for exceptions.
Config_section_cannot_be_used_in_location=This section is not allowed in <location> elements.  This section has been marked allowLocation="false".
Config_allow_definition_error_machine=It is an error to use a section registered as allowDefinition='MachineOnly' beyond machine.config.
Config_allow_definition_error_application=It is an error to use a section registered as allowDefinition='MachineToApplication' beyond application level.  This error can be caused by a virtual directory not being configured as an application in IIS.
Config_section_cannot_clear_locked_section=Cannot clear section handlers.  Section '{0}' is locked.
Config_section_allow_definition_attribute_invalid=The 'allowDefinition' attribute must be one of the following values: Everywhere, MachineOnly, MachineToApplication.
Config_unable_to_set_configuration_system=Unable to set configuration system.
Location_path_invalid_first_character=<location> path attribute must be a relative virtual path.  It cannot start with any of '.' '/' or '\\'.
Location_path_invalid_character=<location> path attribute must be a relative virtual path.  It cannot contain any of ';' '?' ':' '@' '&' '=' '+' '$' ',' '\\' '*' '"' '<' '>' or '|'.
Config_site_name_too_long=Site name too long for instance meta path '{0}'.
Config_base_unrecognized_element=Unrecognized element
Config_base_required_attribute_missing=The required attribute '{0}' was not found.
Config_base_required_attribute_empty=The required attribute '{0}' cannot be empty.
Config_base_unrecognized_attribute=Unrecognized attribute '{0}'.
Config_base_duplicate_line=This config section already contains an identical line, which is not allowed.
Config_base_elements_only=Only XML elements are allowed.
Config_base_no_child_nodes=Child nodes are not allowed.
Location_location_not_allowed=<location> sections are allowed only within <configuration> sections.
Client_config_too_many_configsections_elements=Only one <configSections> element allowed.  It must be the first child element of the root <configuration> element.
Exception_in_config_section_handler=Exception in configuration section handler.
Exception_creating_section_handler=Exception creating section handler.
Tag_name_cannot_begin_with_config=Section names beginning with 'config' are reserved.
Tag_name_cannot_be_location=The section name 'location' is reserved.
Tag_name_already_defined=Section or group name '{0}' has already been defined.
Could_not_create_type_instance=Server could not create {0}.
Could_not_remove_section_handler_not_found=Server could not remove the section handler.  Section not found.
Could_not_remove_section_handler_group=Server could not remove the section handler.  Groups cannot be removed.
Could_not_remove_section_handler_locked=Server could not remove the section handler.  Locked sections cannot be removed.
Config_section_locked=This configuration section cannot be used at this path.  This happens when the site administrator has locked access to this section using <location allowOverride="false"> from an inherited configuration file.
Error_loading_XML_file=The XML file {0} could not be loaded.  {1}
Config_file_doesnt_have_root_configuration=Configuration file '{0}' does not contain a root <configuration> tag.
Unknown_tag_in_caps_config=Server found the unknown tag <{0}> in capabilities configuration.
Cannot_specify_test_without_match=Cannot specify test without match.
Result_must_be_at_the_top_browser_section=<result> must be at the top of the <browsercaps> section
Type_doesnt_inherit_from_type=Type '{0}' does not inherit from '{1}'.
Cant_count_lines_backwards=Cannot count lines backward.
Problem_reading_caps_config=Server cannot read capabilities configuration {0}.
Cannot_get_config_dir=Cannot get configuration directory without a worker request.
Missing_modules_config=Missing <httpModules> configuration
No_mapping_to_remove=No mapping {0}/{1} to remove.
Phase_attribute_out_of_range=Phase attribute is out of range
Special_module_cannot_be_added_manually=Special module of type '{0}' cannot be added manually.
Module_already_in_app=The module '{0}' is already in the application and cannot be added again
Special_module_cannot_be_removed_manually=Special module of type '{0}' cannot be removed manually.
Module_not_in_app=There is no '{0}' module in the application to remove.
Auth_unrecognized_tag=Unrecognized tag '{0}' in the config file
Invalid_credentials=Invalid user credentials are specified in the config file.
Auth_Invalid_Login_Url=The login URL specified for authentication is not valid.
Unrecognized_configuration_section=Unrecognized configuration section '{0}'
Unknown_globalization_attr= The <globalization> tag contains unknown attribute '{0}'.
Invalid_value_for_globalization_attr=The <globalization> tag contains an invalid value for the '{0}' attribute.
Invalid_credentials_2=Could not create Windows user token from the credentials specified in the config file. Error from the operating system '{0}'
Invalid_credentials_pass=Error reading the password from the registry.
Invalid_credentials_name=Error reading the username from the registry.
cannot_use_Triple_DES=Could not initialize the Triple-DES cryptography package. Make sure you have the 128-bit encryption package installed.
Invalid_Passport_Redirect_URL=Redirect URL specified for Passport Authentication is invalid.
Passport_Call_IsValid_Failed=Function IsValid failed with HRESULT '{0}'.
Config_section_not_present=The application's configuration files must contain '{0}' section.
Missing_clientScriptsLocation=Configuration files must contain a 'webControls' section with a 'clientScriptsLocation' attribute.
ConfigParentLookupWithNoParent=Attempt to lookup configuration record parent when there is no parent for this record.
Local_free_threads_cannot_exceed_free_threads=The value for 'minLocalRequestFreeThreads' cannot exceed the value for 'minFreeThreads'.
Min_free_threads_must_be_under_thread_pool_limits=The value for 'minFreeThreads' must be less than the thread pool limit of {0} threads.
Config_section_attribute_locked=The attribute '{0}' cannot be used at this path.  This happens when the site administrator has locked access to this attribute from an inherited configuration file.
Invalid_lockAttributes=The attribute '{0}' cannot be locked for this section.  The following attributes of this section can be locked: {1}.  Multiple attributes may be listed seperated by commas.
Capability_file_root_element=The root element of a capabilities file must be '{0}'.
File_element_only_valid_in_config=File elements are not allowed in external capability files.

; File changes monitor

_sep03_=sep
Failed_to_start_monitoring=Failed to start monitoring changes to '{0}'.
Invalid_file_name_for_monitoring=Invalid file name for monitoring: '{0}'. File names for monitoring must have absolute paths, and no wildcards.
Access_denied_for_monitoring=Access denied to '{0}'. Failed to start monitoring file changes.
Directory_does_not_exist_for_monitoring=Directory '{0}' does not exist. Failed to start monitoring file changes.


; Misc handlers

_sep04_=sep
Path_not_found=Path '{0}' was not found.
Path_forbidden=Path '{0}' is forbidden.
Method_for_path_not_implemented={0} {1} is not implemented.
Access_Denied=Access to '{0}' is denied.

; Debug Auto-attach

Debugging_forbidden={0} application debugging not enabled.
Debug_Access_Denied=Debug access denied to '{0}'.
Invalid_Debug_Request=DEBUG request is not valid.
Invalid_Debug_ID=DebugSessionID corrupted or not provided.
Error_Attaching_with_MDM=HRESULT={0};ErrorString=Unable to do an AutoAttach.

; Caching

_sep05_=sep
VaryByCustom_already_set=VaryByCustom is already set.
Etag_already_set=Etag is already set.
Cant_both_set_and_generate_Etag=Cannot set ETag and also generate it from files.
Cacheability_for_field_must_be_private_or_nocache=Cacheability for a field must either be Private or NoCache.
Cache_dependency_used_more_that_once=An attempt was made to reference a CacheDependency object from more than one Cache entry.
Invalid_expiration_combination=absoluteExpiration must be DateTime.MaxValue or slidingExpiration must be timeSpan.Zero.

; Application

_sep06_=sep
Cache_not_available=Cache is not available
Http_handler_not_found_for_request_type=No http handler was found for request type '{0}'
Request_not_available=Request is not available in this context
Response_not_available=Response is not available in this context.
Session_not_available=Session state is not available in this context.
Server_not_available=Server operation is not available in this context.
User_not_available=User is not available in this context.
Sync_not_supported=Synchronous request processing is not supported.
Type_not_factory_or_handler={0} does not implement IHttpHandlerFactory or IHttpHandler.
Type_from_untrusted_assembly=Type '{0}' cannot be instantiated under a partially trusted security policy (AllowPartiallyTrustedCallersAttribute is not present).
Type_not_module={0} does not implement IHttpModule.
Request_timed_out=Request timed out.
Invalid_Viewstate=The viewstate is invalid for this page and might be corrupted.
Too_late_for_ViewStateUserKey=The ViewStateUserKey property needs to be set during Page_Init.
Object_Must_Be_Serializable=The type '{0}' must be marked as Serializable or have a TypeConverter other than ReferenceConverter to be put in viewstate.

; Request

_sep07_=sep
Invalid_urlencoded_form_data=The URL-encoded form data is not valid.
Invalid_request_filter=The request filter is not valid.
Cannot_map_path_without_context=Server cannot map the path without the full request context.
Cross_app_not_allowed=The virtual path '{0}' maps to another application, which is not allowed.
Max_request_length_exceeded=Maximum request length exceeded.
Dangerous_input_detected=A potentially dangerous {0} value was detected from the client ({1}).
Dangerous_input_detected_descr=Request Validation has detected a potentially dangerous client input value, and processing of the request has been aborted.  This value may indicate an attempt to compromise the security of your application, such as a cross-site scripting attack.  You can disable request validation by setting validateRequest=false in the Page directive or in the <pages> configuration section.  However, it is strongly recommended that your application explicitly check all inputs in this case.

; Response

_sep08_=sep
Cannot_get_snapshot_if_not_buffered=Server cannot get response snapshot if responses are not buffered.
Cannot_use_snapshot_after_headers_sent=Server cannot use snapshot after HTTP headers have been sent.
Cannot_use_snapshot_for_TextWriter=Server cannot use snapshot for TextWriter responses.
Cannot_set_status_after_headers_sent=Server cannot set status after HTTP headers have been sent.
Cannot_set_content_type_after_headers_sent=Server cannot set content type after HTTP headers have been sent.
Filtering_not_allowed=Filtering is not allowed.
Cannot_append_header_after_headers_sent=Server cannot append header after HTTP headers have been sent.
Cannot_append_cookie_after_headers_sent=Server cannot append cookies after HTTP headers have been sent.
Cannot_modify_cookies_after_headers_sent=Server cannot modify cookies after HTTP headers have been sent.
Cannot_clear_headers_after_headers_sent=Server cannot clear headers after HTTP headers have been sent.
Cannot_flush_completed_response=Server cannot flush a completed response.
Cannot_redirect_after_headers_sent=Cannot redirect after HTTP headers have been sent.
Cannot_redirect_to_newline=Redirect URI cannot contain newline characters.
Invalid_status_string= HTTP status string is not valid.
Invalid_value_for_CacheControl=Property value for CacheControl is not valid. Value={0}.
OutputStream_NotAvail=OutputStream is not available when a custom TextWriter is used.

; Runtime

_sep09_=sep
Access_denied_to_app_dir=Server cannot access application directory '{0}'. The directory does not exist or is not accessible because of security settings.
Access_denied_to_path=Access to path '{0}' was denied.
Access_denied_to_vpath=Access to virtual path '{0}' was denied. The location does not exist or is not accessible because of security settings.
Insufficient_trust_for_attribute=The current trust level does not allow use of the '{0}' attribute
XSP_init_error=ASP.NET Initialization Error
Unable_create_app_object=Could not create application object.
Could_not_create_type=Could not create type '{0}'.
Type_not_found_in_src=The page compiled successfully, but does not contain a type named '{0}'.
Could_not_load_assembly=Could not load assembly '{0}' ({1}).
Path_not_allowed_in_assembly=An assembly name cannot contain path information.
ControlRenderedOutsideServerForm=Control '{0}' of type '{1}' must be placed inside a form tag with runat=server.
RequiresNT=This operation requires Windows NT, Windows 2000, or Windows XP.
ListEnumVersionMismatch=The list that this enumerator is bound to has been modified. An enumerator can only be used if the list doesn't change.
ListEnumCurrentOutOfRange=The enumerator's current position is out of bounds of the list.
HTMLTextWriterUnbalancedPop=A PopEndTag was called without a corresponding PushEndTag.
Server_too_busy=Server Too Busy
InvalidArgumentValue=Invalid value for '{0}' parameter.
CompilationMutex_Create=Mutex could not be created.
CompilationMutex_Null=Mutex state is invalid.
CompilationMutex_Drained=Application is restarting.
CompilationMutex_Failed=Failed to acquire mutex lock.
Failed_to_create_temp_dir=Failed to create temporary files directory '{0}'. Access denied.
Cannot_impersonate=Impersonation failure.
Transaction_not_supported_in_low_trust=Transactions are not supported under current trust level settings.
Debugging_not_supported_in_low_trust=Debugging is not supported under current trust level settings.
Session_state_need_higher_trust=Access to session state is not supported under current trust level settings.

; Server vars collection

_sep10_=sep
Cannot_modify_server_vars=Cannot directly modify server variables.

; URL

_sep11_=sep

; HTTP Writer

_sep12_=sep
Invalid_range=Specified range is not valid.
Invalid_use_of_response_filter=Invalid use of response filter
Invalid_response_filter=Response filter is not valid.

; Process model

_sep13_=sep
Process_information_not_available=Process information is available only when the ASP.NET process model is enabled.

; UNUSED

_sep14_=sep

; Static files handler

_sep15_=sep
Error_trying_to_enumerate_files=Server encountered an error while enumerating files.
File_enumerator_access_denied=File enumerator access was denied.
File_does_not_exist=File does not exist.
File_is_hidden=File is hidden.
Missing_star_mapping=Missing */ handler mapping.  The server cannot handle the directory.
Resource_access_forbidden=Access to resource is forbidden.

; UNSUSED

_sep16_=sep

; Server Utility

_sep17_=sep
Could_not_create_object_of_type=Could not create an object of type '{0}'.
Could_not_create_object_from_clsid=Could not create an object with CLASSID '{0}'.
Error_executing_child_request_for_path=Error executing child request for {0}.
Invalid_path_for_child_request=Invalid path for child request '{0}'. A virtual path is expected.
Transacted_page_calls_aspcompat=All pages that invoke other pages with aspcompat enabled must also have a <%@ page aspcompat=true %> directive.
Invalid_path_for_mappath=Invalid path for MapPath '{0}'. A virtual path is expected.
Invalid_path_for_remove=Invalid path for HttpResponse.RemoveOutputCacheItem '{0}'. An absolute virtual path is expected.

; Cache

_sep18_=sep

; Hosting

_sep19_=sep
Cannot_map_path=Failed to map the path '{0}'.
Cannot_retrieve_request_string=Failed to retrieve the request string '{0}'.
Cannot_retrieve_request_data=Cannot retrieve the basic request data.
Cannot_read_posted_data=Cannot read the posted data.
Cannot_get_query_string=Cannot get the query string.
Cannot_get_query_string_bytes=Cannot get query string bytes.
Not_supported=The operation is not supported.

; Security

_sep20_=sep
Security_policy_level_already_defined=Security level already defined for '{0}'.
No_MachineKey_Config_In_subdir=MachineKey configuration can only occur in RootConfig or in application root.
Could_not_create_passport_identity=Could not create a passport identity.
Passport_method_failed=Passport method call failed.
Auth_rule_must_have_allow_or_deny=Authorization rule must have an <allow> or <deny> tag.
Auth_rule_names_cant_contain_char=Authorization rule names cannot contain the '{0}' character.
Auth_rule_must_specify_users_andor_roles=Authorization rule must specify a list of users and/or roles.
Could_not_set_passport_profile=Could not set the passport profile '{0}'.
Unable_to_get_cookie_authentication_decryption_key=Machine decryption key is invalid. It is '{0}' chars long. It should be either "AutoGenerate", or 16 (for DES) Hex chars long, or 48 (for Triple-DES) Hex chars long, and may be followed by ",IsolateApps".
PassportAuthFailed=<html><head><title>Passport Signin Required</title></head><body>\r\n<h1>Access Denied</h1><p><h3>You must sign in with valid or different Microsoft <sup>&reg;</sup> .NET Passport credentials to access this page.</h3><p> {0} </body></html>\r\n
Cannot_specify_below_app_level='{0}' section cannot be defined for directories below the application root.
Unable_to_encrypt_cookie_ticket=Unable to encrypt the authentication ticket. Try changing the decryption key configured for this application.
Unable_to_get_cookie_authentication_validation_key=Machine validation key is invalid. It is '{0}' chars long. It should be either "AutoGenerate" or between 40 and 128 Hex chars long, and may be followed by ",IsolateApps".
Unable_to_validate_data=Unable to validate data.
Unable_to_get_policy_file=Unable to read the security policy file for trust level '{0}'.
Unable_to_get_policy_file_2=Unable to read the security policy file.
Trust_level_requires_different_OS=Setting security trust level is not supported in this version of the OS.
Assess_Denied_Title=Access is denied.
Assess_Denied_Description2=An error occurred while accessing the resources required to serve this request. The server may not be configured for access to the requested URL.
Assess_Denied_Section_Title2=Error message 401.2.
Assess_Denied_Misc_Content2=You do not have permission to view this directory or page using the credentials you supplied. Contact the Web server's administrator for help.
Assess_Denied_Description1=An error occurred while accessing the resources required to serve this request. This may have been caused by an incorrect user name and/or password.
Assess_Denied_MiscTitle1=Error message 401.1
Assess_Denied_MiscContent1=Logon credentials were not recognized. Make sure you are providing the correct user name and password. Otherwise, contact the Web server's administrator for help.
Assess_Denied_Description3=An error occurred while accessing the resources required to serve this request. You might not have permission to view the requested resources.
Assess_Denied_Section_Title3=Error message 401.3
Assess_Denied_Misc_Content3=You do not have permission to view this directory or page using the credentials you supplied (access denied due to ACLs). Ask the Web server's administrator to give you access to '{0}'.
Assess_Denied_Misc_Content3_2=You do not have permission to view this directory or page using the credentials you supplied (access denied due to ACLs). Ask the Web server's administrator to give you access.
User_Already_Specified=A different password for the username '{0}', has already been specified in a configuration file.
Auth_bad_url=The URL specified in the config file is invalid.
Invalid_decryption_key=Decryption key specified has invalid hex characters.
Invalid_validation_key=Validation key specified has invalid hex characters.
Passport_not_installed=The PassportManager object could not be initialized. Check to make sure that the Microsoft Passport sdk is correctly installed on the server.
PassportGetLoginChallenge_failed=PassportManager::GetLoginChallenge failed with HRESULT '{0}'.


; State

_sep21_=sep
No_Session_Config_In_subdir=SessionState configuration can be set only in RootConfig or in the application root.
Invalid_value_for_sessionstate_stateConnectionString=The <sessionstate> stateConnectionString is invalid. It must have the format tcpip=<server>:<port>. Non-ASCII characters in the server name are not supported.
No_database_allowed_in_sqlConnectionString=The sqlConnectionString attribute cannot contain the connection options 'Database' or 'Initial Catalog'.
Timeout_must_be_positive=The argument to SetTimeout must be greater than 0.
Cant_connect_to_session_service=Unable to connect to the session state service.
Cant_make_session_request=Unable to make the session state request to the session state server. Please ensure that the ASP.NET State service is started and that the client and server ports are the same.  If the server is on a remote machine, please ensure that it accepts remote requests by checking the value of HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\aspnet_state\\Parameters\\AllowRemoteConnection.
Cant_connect_sql_session_database=Unable to connect to SQL Server session database.
OOP_Session_Requires_Different_Version=Out-of-process and SQL session state are not supported in this version of the OS.
Cant_write_session_id_in_cookie_because_response_was_flushed=Session state has created a session id, but cannot write it to the cookie because the response was already flushed by the application.
Session_key_null=An attempt was made to insert a value into session state using a key with a null value.
Cant_serialize_session_state=Unable to serialize the session state. Please note that non-serializable objects or MarshalByRef objects are not permitted when session state mode is 'StateServer' or 'SQLServer'.

; Custom errors

_sep211_=sep
Customerrors_invalid_statuscode=Custom Errors configuration has invalid 'statusCode' attribute in <error>

; Util

_sep22_=sep
Spinlock_timed_out=ReadWriteSpinLock timed out at {0} seconds. A deadlock was detected.
Could_not_create_object=Could not create '{0}' object.
Could_not_access_object=Could not access '{0}' object.
Empty_path_has_no_directory=Empty path has no directory.
Path_must_be_rooted=Path must be rooted.
Cannot_exit_up_top_directory=Cannot use a leading .. to exit above the top directory.
Physical_path_not_allowed='{0}' is a physical path.
Cannot_access_AspCompat=Cannot access ASP compatibility mode.
Apartment_component_not_allowed=The component '{0}' cannot be created.  Apartment threaded components can only be created on pages with an <%@ Page aspcompat=true %> page directive.
Error_onpagestart=An error was encountered while calling OnStartPage in ASP compatibility mode.
Cannot_execute_transacted_code=Cannot execute transacted code.
Cannot_nest_transactions=Nested transacted pages are not supported on this platform.
Cannot_post_workitem=Cannot post work item to thread pool.
Cannot_call_ISAPI_functions=Hosting platform does not support ISAPI functions.
Bad_attachment=Invalid mail attachment '{0}'.
Wrong_SimpleWorkerRequest=Invalid use of SimpleWorkerRequest constructor. Application path cannot be overridden in this context. Please use SimpleWorkerRequest constructor that does not override the application path.
Atio2BadString=Unable to convert two characters in the string '{0}' to a number starting at offset {1}.
MakeMonthBadString=Unable to convert characters in the string '{0}' to a month starting at offset {1}.
UtilParseDateTimeBad='{0}' was not of the correct format. Expected a string to be of the form 'Thursday, 10-Jun-93 01:29:59 GMT', 'Thu, 10 Jan 1993 01:29:59 GMT', or 'Wed Jun 09 01:29:59 1993 GMT'.

; Web Forms

_sep23_=sep
Children_not_supported_on_not_controls=Child objects are not supported for objects that are not controls.
Code_not_supported_on_not_controls=Code blocks are not supported in this context.
Code_not_supported_on_non_compiled_page=Code blocks are not supported in this page, because it is not compiled.
Literal_content_not_allowed=Literal content ('{1}') is not allowed within a '{0}'.
Invalid_type=Could not load type '{0}'.
Assembly_not_compiled=Could not load the assembly '{0}'. Make sure that it is compiled before accessing the page.
Cannot_convert_from_to=Cannot convert from '{0}' to '{1}'.
Object_tag_must_have_id=An object tag must have an ID.
Invalid_scope='{0}' is not a valid object scope.
Invalid_progid=Cannot load type with ProgID '{0}'.
Invalid_clsid=Cannot load type with CLASSID '{0}'.
Object_tag_must_have_class_classid_or_progid=An object tag must contain a Class, ClassID or ProgID attribute.
Session_not_enabled=Session state can only be used when enableSessionState is set to true, either in a configuration file or in the Page directive
Property_readonly=The '{0}' property is read-only and cannot be set.
Collection_readonly_Codeblocks=The Controls collection cannot be modified because the control contains code blocks (i.e. <% ... %>).
Parent_collections_readonly=A control cannot modify its parents' control collections.
Property_Not_Persistable=The '{0}' property is set only by the runtime. It cannot be declared.
Property_Not_ClsCompliant=The '{0}' property of '{1}' has type '{2}', which is not CLS-compliant.
Invalid_enum_value='{0}' is not a valid value for attribute '{1}'. It must be of enum type '{2}'.
Type_not_creatable_from_string=Cannot create an object of type '{0}' from its string representation '{1}' for the '{2}' property.
Invalid_collection_item_type={0} must have items of type '{1}'. '{2}' is of type '{3}'.
Invalid_template_container=Template property '{0}' has a TemplateContainer attribute set to '{1}', but that type does not implement INamingContainer.
Event_handler_cant_be_empty=The {0} event handler cannot be an empty string.
Templates_cannot_have_properties=Templates cannot have properties.
Type_doesnt_have_property=Type '{0}' does not have a property named '{1}'.
Cannot_add_value_not_collection='{0}' could not be added to the collection.
Cannot_set_property='{0}' could not be set on property '{1}'.
Cannot_init='{0}' could not be initialized.
Unexpected_Directory='{0}' is a directory, not a file.
Circular_include=Circular file references are not allowed.
Unexpected_eof_looking_for_tag=Unexpected end of file looking for </{0}> tag.
Bad_usercontrol_ext=User control source files must have a .ascx file extension.
Invalid_app_file_content=The content in the application file is not valid.
Page_scope_in_global_asax=The Page scope is not valid in global.asax.
App_session_only_valid_in_global_asax=The Application and Session scopes are valid only in the global.asax file.
Multiple_forms_not_allowed=A page can have only one server-side Form tag.
Postback_ctrl_not_found=An error has occurred because a control with auto-generated id '{0}' could not be located to raise a postback event. To avoid this error, explicitly set the ID property of controls that raise postback events.
Script_tag_without_src_must_have_content=A script tag without an src attribute must have content.
Unknown_server_tag=Unknown server tag '{0}'.
Invalid_type_for_input_tag='{0}' is not a valid type for an input tag.
Id_already_used=The ID '{0}' is already used by another control.
Duplicate_id_used=Multiple controls with the same ID '{0}' were found. {1} requires that controls have unique IDs.
Only_one_directive_allowed=There can be only one '{0}' directive.
Duplicate_prefix_map=The '{0}' prefix has already been mapped to the namespace '{1}'.
Duplicate_registered_tag=The '{0}' tag has already been registered.
Empty_attribute=The '{0}' attribute cannot be an empty string.
Space_attribute=The '{0}' attribute cannot contain spaces.
Empty_expression=The expression in a <%= %> or <%# %> block cannot be an empty string.
Invalid_attribute_value='{0}' is not a valid value for attribute '{1}'.
Invalid_boolean_attribute=The '{0}' attribute is case sensitive and must be set to 'true' or 'false'.
Invalid_integer_attribute=The '{0}' attribute must be an integer value.
Invalid_nonnegative_integer_attribute=The '{0}' attribute must be a non-negative integer.
Invalid_positive_integer_attribute=The '{0}' attribute must be set to a positive integer value
Invalid_enum_attribute=The '{0}' attribute is case sensitive and must be one of the following values: {1}.
Invalid_type_attribute=The '{0}' attribute must be set to a valid Type name (format: <typename>,<assemblyname>)
Invalid_culture_attribute=The 'Culture' attribute must be set to a non-neutral culture.  Try one of the following: {0}.
Invalid_temp_directory=The 'tempDirectory' attribute must be set to an absolute path.
Invalid_reference_directive=The Reference directive must have exactly one attribute: Page or Control
Missing_required_attribute=The '{0}' attribute must be specified on the '{1}' tag.
Attr_not_supported_in_directive=The '{0}' attribute is not supported by the '{1}' directive.
Missing_attr=The directive is missing a '{0}' attribute.
Missing_varybyparam_attr=The directive is missing a 'VaryByParam' attribute, which should be set to "none", "*", or a list of name/value pairs.
Missing_directive=The page must have a <%@ {0} class="MyNamespace.MyClass" ... %> directive.
Unknown_directive=The directive '{0}' is unknown.
Malformed_server_tag=The server tag is not well formed.
Malformed_server_block=The server block is not well formed.
Server_tags_cant_contain_percent_constructs=Server tags cannot contain <% ... %> constructs.
Unexpected_attr='{0}' is an unexpected attribute.
Include_not_allowed_in_server_script_tag=Server includes are not allowed in server script tags.
Only_file_virtual_supported_on_server_include=Only file and virtual are valid attributes in server-side include tags.
Runat_can_only_be_server=The Runat attribute must have the value Server.
Invalid_identifier='{0}' is not a valid identifier.
Duplicate_attr_in_directive=The directive contains duplicate '{0}' attributes.
Duplicate_attr_in_tag=The tag contains duplicate '{0}' attributes.
Non_existent_base_type=The base type '{0}' does not exist in the source file '{1}'.
Invalid_type_to_inherit_from='{0}' is not a valid base class because it does not extend class '{1}'.
Invalid_type_to_implement='{0}' exists but is not an interface.
Error_page_not_supported_when_buffering_off=Error page is not supported when buffering is disabled.
Enablesessionstate_must_be_true_false_or_readonly=enableSessionState must be set to true, false or ReadOnly
Attributes_mutually_exclusive=The '{0}' and '{1}' attributes are mutually exclusive.
Mixed_lang_not_supported=Cannot use '{0}' because another language has been specified earlier in this page.
Invalid_lang='{0}' is not a supported language.
Invalid_lang_extension='{0}' is not a valid language extension.
Empty_extension=The file '{0}' must have an extension in order to be compiled.
Base_class_field_with_type_different_from_type_of_control=The base class includes the field '{0}', but its type ({1}) is not compatible with the type of control ({2}).
Inner_Content_not_literal=Cannot get inner content of {0} because the contents are not literal.
Invalid_client_target=ClientTarget is set to an invalid alias '{0}'.  The <clientTarget> configuration section is used to define ClientTarget aliases.
Empty_file_name=The file name cannot be an empty string.
AdRotator_cant_open_file=The AdRotator {0} was unable to open the AdvertisementFile '{1}'.
AdRotator_parse_error=The AdRotator {0} was unable to parse the XML in the AdvertisementFile. {1}
AdRotator_no_advertisements=The AdRotator {0} found no valid advertisements in the file '{1}'.
Validator_missing_script=Unable to find script library '{0}'. Try placing this file manually, or reinstall by running 'aspnet_regiis -c'.
Validator_wrong_script=This page uses an incorrect version of {0}. The page expects version {1}. The script library is {2}.
Validator_control_blank=The ControlToValidate property of '{0}' cannot be blank.
Validator_control_not_found=Unable to find control id '{0}' referenced by the '{1}' property of '{2}'.
Validator_bad_compare_control=Control '{0}' cannot have the same value '{1}' for both ControlToValidate and ControlToCompare.
Validator_bad_control_type=Control '{0}' referenced by the {1} property of '{2}' cannot be validated.
Validator_value_bad_type=The value '{0}' of the {1} property of '{2}' cannot be converted to type '{3}'.
Validator_range_overalap=The MaximumValue {0} cannot be less than the MinimumValue {1} of {2}.
Validator_bad_regex={0} is not a valid regular expression.
ValSummary_error_message_1=Error message 1.
ValSummary_error_message_2=Error message 2.
Control_does_not_allow_children='{0}' does not allow child controls.
DataBinder_Prop_Not_Found=DataBinder.Eval: '{0}' does not contain a property with the name {1}.
DataBinder_Invalid_Indexed_Expr=DataBinder.Eval: '{0}' is not a valid indexed expression.
DataBinder_No_Indexed_Accessor=DataBinder.Eval: '{0}' does not allow indexed access.
Field_Not_Found=A field or property with the name '{0}' was not found on the selected datasource.
DataGrid_Missing_VirtualItemCount=AllowCustomPaging must be true and VirtualItemCount must be set for a DataGrid with ID {0} when AllowPaging is set to true and the selected datasource does not implement ICollection.
DataGrid_NoAutoGenColumns=DataGrid with id '{0}' could not automatically generate any columns from the selected data source.
PagedDataSource_Cannot_Get_Count=Cannot compute Count for a data source that does not implement ICollection.
Cannot_Have_Children_Of_Type='{0}' cannot have children of type '{1}'.
Control_Cannot_Databind='{0}' cannot contain a databinding expression.
InnerHtml_not_supported='{0}' does not support the InnerHtml property.
InnerText_not_supported='{0}' does not support the InnerText property.
Failed_to_create_page_of_type=Failed to create page of type '{0}'.
Invalid_DataSource_Type=An invalid data source is being used for {0}. A valid data source must implement either IListSource or IEnumerable.
Invalid_CurrentPageIndex=Invalid CurrentPageIndex value. It must be >= 0 and < the PageCount.
ListSource_Without_DataMembers=The IListSource does not contain any data sources.
ListSource_Missing_DataMember=The IListSource does not contain a data source named '{0}'.
Enumerator_MoveNext_Not_Called=You must call MoveNext on IEnumerator before accessing the Current property.
Sample_Databound_Text=Databound
Resource_problem=An error occurred while try to load the string resources ({0} failed with error {1}).
Property_Had_Malformed_Url=The '{0}' property had a malformed URL: {1}.
Key_Cannot_Be_Null=Key cannot be null or empty.
TypeResService_Needed=The supplied IDesignerHost must provide an implementation of ITypeResolutionService.
DataList_TemplateTableNotFound= A Table control was not found in the template for '{0}' for an item of type 'ListItemType.{1}'.
EnumAttributeInvalidString='{0}' is not a valid value for the '{2}' attribute. '{2}' must be a single text (not numeric) value from the '{3}' enumeration.
UnitParseNumericPart=The numeric part ('{1}') of '{0}' cannot be parsed as a numeric part of a {2} unit.
UnitParseNoDigits='{0}' can not be parsed as a unit as there are no numeric values in it. Examples of valid unit strings are '1px' and '.5in'.
IsValid_Cant_Be_Called=Page.IsValid cannot be called before validation has taken place. It should be queried in the event handler for a control with CausesValidation=True or after a call to Page.Validate.
Invalid_HtmlTextWriter=An instance of '{0}' could not be used as an HtmlTextWriter. Make sure the specified class is can be instantiated, extends System.Web.UI.HtmlTextWriter, and implements a constructor with a single parameter of type System.IO.TextWriter.
Form_Needs_Page=HtmlForm cannot render without a reference to the Page instance.  Make sure your form has been added to the control tree. 
Cant_Multiselect_In_Single_Mode=A ListBox cannot have multiple items selected when the SelectionMode is Single.
Cant_Multiselect_In_DropDownList=A DropDownList cannot have multiple items selected.
HtmlSelect_Cant_Multiselect_In_Single_Mode=An HtmlSelect cannot have multiple items selected when Multiple is false.
Controls_Cant_Change_Between_Posts=Failed to load viewstate.  The control tree into which viewstate is being loaded must match the control tree that was used to save viewstate during the previous request.  For example, when adding controls dynamically, the controls added during a post-back must match the type and position of the controls added during the initial request.
Value_Set_Not_Supported=The value property on {0} is not settable.

; Metadata Descriptions
Control_Controls=The collection of child controls owned by the control.
Control_ID=Programmatic name of the control.
Control_MaintainState=Whether the control automatically saves its state for use in round-trips.
Control_Visible=Indicates whether the control is visible and rendered.
Control_OnDisposed=The control has been disposed.
Control_OnInit=Fires when the page has been initialized.
Control_OnLoad=Fires when the page has been loaded.
Control_OnUnload=Fires when the page is unloaded.
Control_OnPreRender=Fires before the page is rendered.
Control_OnDataBind=Fires when the control's databinding expressions are to be evaluated.
Control_NamingContainer=The containing control or page within which ID is unique.
Control_Page=The page containing the control.
Control_Parent=The control containing this control.
Control_TemplateSourceDirectory=The virtual directory of the Page or UserControl that contains this control.
Control_Site=Site of the control.
Control_State=Current viewstate of the control.
Control_UniqueID=The unique ID of the control within the page.
Control_ClientID=The ID of the control that is rendered for the client.
Page_ClientTarget=Allows you to override automatic detection of browser capabilities and force specific rendering.
Page_ErrorPage=URL of the associated error page.
Page_Error=Occurs when an uncaught exception is thrown.
Page_OnCommitTransaction=Occurs when a user initiates a transaction.
Page_OnAbortTransaction=Occurs when a user aborts a transaction.

HtmlAnchor_OnServerClick=Fires when the control is clicked.
HtmlButton_OnServerClick=Fires when the control is clicked.
HtmlInputButton_OnServerClick=Fires when the control is clicked.
HtmlInputCheck_OnServerChange=Fires when the checked state of the control changes.
HtmlInputHidden_OnServerChange=Fires when the value of the control changes.
HtmlInputImage_OnServerClick=Fires when the image is clicked.
HtmlInputRadioButton_OnServerChange=Fires when the checked state of the control changes.
HtmlInputText=Fires when the text within the control changes.
HtmlSelect_DataSource=The datasource used to populate the list with items.
HtmlSelect_DataTextField=The field in the datasource that provides the item text.
HtmlSelect_DataValueField=The field in the datasource that provides the item value.
HtmlSelect_OnServerChange=Fires when the selection changes.
HtmlSelect_DataMember=The data member of the select.
HtmlTextArea_OnServerChange=Fires when the text within the control changes.

AdRotator_AdvertisementFile=XML file containing advertisements.
AdRotator_KeywordFilter=Keyword for limiting selection of advertisements.
AdRotator_Target=The target frame for the NavigateUrl of the advertisement.
AdRotator_OnAdCreated=Fired after an advertisement is retrieved from the AdvertisementFile.
BaseDataList_CellPadding=The padding within cells.
BaseDataList_CellSpacing=The spacing between cells.
BaseDataList_DataKeyField=The field in the data source used to populate the DataKeys collection.
BaseDataList_DataKeys=The collection of data keys.
BaseDataList_DataMember=The table used for binding when a DataSet is used as a data source.
BaseDataList_DataSource=The datasource that is used to populate the items in the list.
BaseDataList_GridLines=Settings for grid lines between cells.
BaseDataList_HorizontalAlign=The horizontal alignment of the control.
BaseDataList_OnSelectedIndexChanged=Fires when the current selection changes.
BaseValidator_ControlToValidate=ID of the control to validate.
BaseValidator_ErrorMessage=Message to display when control is in error.
BaseValidator_IsValid=Indicates whether the validated control is in error.
BaseValidator_Display=How the validator is displayed.
BaseValidator_EnableClientScript=Indicates whether to perform validation on the client in up-level browsers.
BoundColumn_DataField=The field to which this column is bound.
BoundColumn_DataFormatString=The formatting that is applied to the bound value.
BoundColumn_ReadOnly=Whether the column does not permit editing of its bound field.
Button_Command=The command associated with the button.
Button_CommandArgument=The command argument associated with the button.
Button_Text=The text to be shown on the button.
Button_OnClick=Fires when the button is clicked.
Button_OnCommand=Fires when the button is clicked and an associated command is defined.
Button_CausesValidation=Whether the button causes validation to fire.
CheckBox_AutoPostBack=Automatically posts back to the server when the control is clicked.
CheckBox_Checked=The checked state of the control.
CheckBox_Text=The text label shown with the check box.
CheckBox_TextAlign=The alignment of the text label in respect to the check box.
CheckBox_OnCheckChanged=Fires when the checked state of the control changes.
CheckBoxList_CellPadding=The padding between each item.
CheckBoxList_CellSpacing=The spacing between each item.
CheckBoxList_RepeatColumns=The number of columns used to lay out the items.
CheckBoxList_RepeatDirection=The direction in which items are laid out.
CheckBoxList_RepeatLayout=Whether items are repeated in a table or in-flow.
CheckBoxList_TextAlign=The alignment of the text label with respect to each item.
CompareValidator_ControlToCompare=ID of the control to compare with.
CompareValidator_Operator=Comparison operation to apply to values.
CompareValidator_ValueToCompare=Value to compare against.
CustomValidator_ClientValidationFunction=Client script validation function.
CustomValidator_ServerValidate=Called to perform validation on the server.
DataGrid_AllowCustomPaging=Whether to turn on support for custom paging.
DataGrid_AllowPaging=Whether to turn on paging functionality in the DataGrid.
DataGrid_AllowSorting=Whether the column headers can be used to sort the associated datasource.
DataGrid_AlternatingItemStyle=The style applied to alternating items.
DataGrid_AutoGenerateColumns=Whether the columns are generated automatically at runtime based on the associated datasource.
DataGrid_BackImageUrl=The background image within the control.
DataGrid_Columns=The set of columns to be shown in the control.
DataGrid_CurrentPageIndex=The index of the current page.
DataGrid_EditItemIndex=The index of the item shown in edit mode.
DataGrid_EditItemStyle=The style applied to items in edit mode.
DataGrid_FooterStyle=Style applied to the footer.
DataGrid_HeaderStyle=Style applied to the header.
DataGrid_ItemStyle=The style applied to items.
DataGrid_Items=The collection of items.
DataGrid_PageCount=The current page count.
DataGrid_PagerStyle=Controls the paging UI associated with the control.
DataGrid_PageSize=The number of items from the datasource to display per page.
DataGrid_SelectedIndex=The index of the currently selected item
DataGrid_SelectedItem=The currently selected item.
DataGrid_SelectedItemStyle=The style applied to selected items.
DataGrid_ShowFooter=Whether to the show the control's footer.
DataGrid_ShowHeader=Whether to the show the control's header.
DataGrid_OnCancelCommand=Fires when a Cancel CommandEvent is generated within the DataGrid.
DataGrid_OnDeleteCommand=Fires when a Delete CommandEvent is generated within the DataGrid.
DataGrid_OnEditCommand=Fires when an Edit CommandEvent is generated within the DataGrid.
DataGrid_OnItemCommand=Fires when an event is generated within the DataGrid.
DataGrid_OnItemCreated=Fires when an item is created.
DataGrid_OnItemDataBound=Fires after an item has been databound.
DataGrid_OnPageIndexChanged=Fires when the current page index of the DataGrid has changed.
DataGrid_OnSortCommand=Fires when a Sort CommandEvent is generated within the DataGrid.
DataGrid_OnUpdateCommand=Fires when an Update CommandEvent is generated within the DataGrid.
DataGrid_VisibleItemCount=The count of visible items.
DataGridColumn_FooterStyle=The style applied to footer within this column.
DataGridColumn_FooterText=The text within the footer of this column.
DataGridColumn_HeaderImageUrl=The url of the image to be displayed in the header of this column.
DataGridColumn_HeaderStyle=The style applied to header within this column.
DataGridColumn_HeaderText=The text within the header of this column.
DataGridColumn_ItemStyle=The style applied to rows within this column.
DataGridColumn_SortExpression=The sort expression associated with the column.
DataGridColumn_Visible=Whether the column is visible or not.
DataGridPagerStyle_Mode=The type of paging UI to use.
DataGridPagerStyle_NextPageText=The text to be used on the next page button.
DataGridPagerStyle_PageButtonCount=Number of pages to show in the paging UI.
DataGridPagerStyle_Position=The position of the navigation bar.
DataGridPagerStyle_PrevPageText=The text to be used on the previous page button.
DataGridPagerStyle_Visible=Whether the paging UI is visible.
DataList_AlternatingItemStyle=The style applied to alternating items.
DataList_AlternatingItemTemplate=The template used for alternating items.
DataList_EditItemIndex=The index of the item shown in edit mode.
DataList_EditItemStyle=The style applied to items in edit mode.
DataList_EditItemTemplate=The template used for items in edit mode.
DataList_ExtractTemplateRows=Whether to extract the rows defined in the table within the template content.
DataList_FooterStyle=Style applied to the footer.
DataList_FooterTemplate=Template used for the footer.
DataList_HeaderStyle=Style applied to the header.
DataList_HeaderTemplate=Template used for the header.
DataList_ItemStyle=The style applied to items.
DataList_Items=The collection of items.
DataList_ItemTemplate=The template used for items.
DataList_RepeatColumns=The number of columns to be used for the layout.
DataList_RepeatDirection=The direction in which items are laid out.
DataList_RepeatLayout=Whether items are repeated in a table or in-flow.
DataList_SelectedIndex=The index of the currently selected item
DataList_SelectedItemStyle=The style applied to selected items.
DataList_SelectedItem=The currently selected item.
DataList_SelectedItemTemplate=The template used for the currently selected item.
DataList_SeparatorStyle=The style applied to separator items.
DataList_SeparatorTemplate=The template used for separator items.
DataList_ShowFooter=Whether to the show the control's footer.
DataList_ShowHeader=Whether to the show the control's header.
DataList_OnCancelCommand=Fires when a Cancel CommandEvent is generated within the DataList.
DataList_OnDeleteCommand=Fires when a Delete CommandEvent is generated within the DataList.
DataList_OnEditCommand=Fires when an Edit CommandEvent is generated within the DataList.
DataList_OnItemCommand=Fires when a CommandEvent is generated within the DataList.
DataList_OnItemCreated=Fires when an item is created.
DataList_OnItemDataBound=Fires after an item has been databound.
DataList_OnUpdateCommand=Fires when an Update CommandEvent is generated within the DataList.
DropDownList_SelectedIndex=The index of the currently selected item.
FontInfo_Name=The preferred font to be used to render the control.
FontInfo_Names=Sequence of fonts that can be used to render the control.
FontInfo_Size=The size of the font.
FontInfo_Bold=Whether the font is bold.
FontInfo_Italic=Whether the font is italic.
FontInfo_Underline=Whether the font is underlined.
FontInfo_Strikeout=Whether the font has a strike through it.
FontInfo_Overline=Whether the font contains an overline.
HyperLink_ImageUrl=The Url of an image to be displayed.
HyperLink_NavigateUrl=The Url to navigate to.
HyperLink_Target=The target frame for the NavigateUrl.
HyperLink_Text=The text to be shown for the link.
HyperLinkColumn_DataNavigateUrlField=The field bound to the NavigateURL property of the hyperlink.
HyperLinkColumn_DataTextField=The field bound to the text property of the hyperlink.
HyperLinkColumn_NavigateUrl=The URL navigated to by the hyperlink.
HyperLinkColumn_Target=The target frame that the navigation should take place in.
HyperLinkColumn_Text=The text used for the hyperlink.
Image_AlternateText=The alternate text displayed when the image cannot be shown.
Image_ImageAlign=The alignment of the image.
Image_ImageUrl=The Url of the image to be shown.
ImageButton_Command=The command associated with the button.
ImageButton_CommandArgument=The command argument associated with the button.
ImageButton_OnClick=Fires when the image is clicked.
ImageButton_OnCommand=Fires when the image is clicked and an associated command is defined.
ImageButton_CausesValidation=Whether the button causes validation to fire.
Label_Text=The text to be shown for the label.
Literal_Text=The text to be shown for the literal.
LinkButton_Command=The command associated with the button.
LinkButton_CommandArgument=The command argument associated with the button.
LinkButton_Text=The text to be shown for the link.
LinkButton_OnClick=Fires when the button is clicked.
LinkButton_OnCommand=Fires when the button is clicked and an associated command is defined.
LinkButton_CausesValidation=Whether the button causes validation to fire.
ListBox_Rows=The number of visible rows to display.
ListBox_SelectionMode=The selection mode for the list.
ListControl_AutoPostBack=Automatically postback to the server after selection is changed.
ListControl_DataMember=The table used for binding when a DataSet is used a data source.
ListControl_DataSource=The datasource used to populate the list with items.
ListControl_DataTextField=The field in the datasource which provides the item text.
ListControl_DataTextFormatString=The formatting applied to the text field.
ListControl_DataValueField=The field in the datasource which provides the item value.
ListControl_Items=The collection of items in the list.
ListControl_SelectedIndex=The index of the currently selected item.
ListControl_SelectedItem=The currently selected item.
ListControl_SelectedValue=The value of the currently selected item.
ListControl_OnSelectedIndexChanged=Fires when the selected index has been changed.
Panel_BackImageUrl=The background image of the panel.
Panel_HorizontalAlign=The horizontal alignment of the content.
Panel_Wrap=Whether the content should wrap or not.
RadioButton_GroupName=Group that this radio button belongs to.
RadioButtonList_CellPadding=The padding between each item.
RadioButtonList_CellSpacing=The spacing between each item.
RadioButtonList_RepeatColumns=The number of columns to use to lay out the items.
RadioButtonList_RepeatDirection=The direction in which items are laid out.
RadioButtonList_RepeatLayout=Whether items are repeated in a table or in-flow.
RadioButtonList_TextAlign=The alignment of the text label with respect to each item.
RangeValidator_MaximumValue=Maximum value for the control being validated.
RangeValidator_MinmumValue=Minimum value for the control being validated.
RangeValidator_Type=Data type of values for comparison.
RegularExpressionValidator_ValidationExpression=Regular expression to determine validity.
Repeater_AlternatingItemTemplate=The template used for alternating items.
Repeater_DataSource=The datasource with which to populate the control's list.
Repeater_DataMember=The table used for binding when a DataSet is used a data source.
Repeater_FooterTemplate=The template used for the footer.
Repeater_HeaderTemplate=The template used for the header.
Repeater_Items=The collection of items.
Repeater_ItemTemplate=The template used for the items.
Repeater_OnItemCommand=Fires when an event is generated within the DataList.
Repeater_OnItemCreated=Fires when an item is created.
Repeater_OnItemDataBound=Fires after an item has been databound.
Repeater_SeparatorTemplate=The template used for the separators.
RequiredFieldValidator_InitialValue=Initial value of the field to validate
Style_BackColor=Background color of the controls applied with this style.
Style_BorderColor=Border color of the controls applied with this style.
Style_BorderWidth=Thickness of the border around the controls applied with this style.
Style_BorderStyle=Style of the border of controls applied with this style.
Style_CSSClass=CSS class name applied to the user of this style.
Style_Font=The font used for text in controls applied with this style.
Style_ForeColor=Foreground color of the controls applied with this style.
Style_Height=The height of the controls applied with this style.
Style_Width=The width of the controls applied with this style.
Table_BackImageUrl=The background image of the table.
Table_CellSpacing=The spacing between the table cells.
Table_CellPadding=The padding within the table cells.
Table_GridLines=Which grid lines to display between the table cells.
Table_HorizontalAlign=The horizontal alignment of the table.
Table_Rows=The collection of rows within the table.
TableCell_ColumnSpan=The number of columns this cell spans.
TableCell_HorizontalAlign=The horizontal alignment of the cell content.
TableCell_RowSpan=The number of rows this cell spans.
TableCell_Text=The text to be rendered within the cell.
TableCell_VerticalAlign=The vertical alignment of the cell content.
TableCell_Wrap=Whether the cell content should wrap or not.
TableItemStyle_HorizontalAlign=The horizontal alignment of the cell content.
TableItemStyle_VerticalAlign=The vertical alignment of the cell content.
TableItemStyle_Wrap=Whether the cell content should wrap or not.
TableRow_Cells=The collection of cells within the table row.
TableRow_HorizonalAlign=The horizontal alignment of the cell content.
TableRow_VerticalAlign=The vertical alignment of the cell content.
TableStyle_BackImageUrl=The background image within the table.
TableStyle_CellPadding=The spacing within cells of the table.
TableStyle_CellSpacing=The spacing between cells of the table.
TableStyle_GridLines=The type of grid to be shown within the table.
TableStyle_HorizontalAlign=The horizontal alignment of the table.
TemplateColumn_EditItemTemplate=The template to use for rows in edit mode in this column.
TemplateColumn_FooterTemplate=The template to use for the footer in this column.
TemplateColumn_HeaderTemplate=The template to use for the header in this column.
TemplateColumn_ItemTemplate=The template to use for rows in this column.
TextBox_AutoPostBack=Automatically postback to the server after the text is modified.
TextBox_Columns=The width of the textbox in characters.
TextBox_MaxLength=The maximum number of characters that can be entered.
TextBox_TextMode=The behavior mode of the textbox.
TextBox_ReadOnly=Whether the text in the control can be changed or not.
TextBox_Rows=The number of lines to display for a multiline textbox.
TextBox_Text=The text value.
TextBox_Wrap=Whether the text should wrap or not.
TextBox_OnTextChanged=Fires when the text property has been changed.
ValidationSummary_DisplayMode=Format for error summary display.
ValidationSummary_HeaderText=Header text to display in the summary.
ValidationSummary_ShowMessageBox=Whether to display a message box on error in up-level browsers.
ValidationSummary_ShowSummary=Whether to display the summary text on the page.
ValidationSummary_EnableClientScript=Whether to update the summary on the client in up-level browsers.
Calendar_CellPadding=The padding within cells.
Calendar_CellSpacing=The spacing between cells.
Calendar_DayHeaderStyle=The style applied to the day header row.
Calendar_DayNameFormat=Format for day header text.
Calendar_DayStyle=The style applied to days.
Calendar_FirstDayOfWeek=Which day of the week is displayed first.
Calendar_NextMonthText=Text for the next month button.
Calendar_NextPrevFormat=Format for month navigation buttons.
Calendar_NextPrevStyle=The style applied to month navigation buttons.
Calendar_OtherMonthDayStyle=The style applied to days from adjacent months
Calendar_PrevMonthText=Text for the previous month button
Calendar_SelectedDate=The currently selected date.
Calendar_SelectedDates=The set of selected dates for use when range selection is enabled.
Calendar_SelectedDayStyle=The style of currently selected days.
Calendar_SelectionMode=Determines whether days, weeks and months are selectable.
Calendar_SelectMonthText=Text for the select month button.
Calendar_SelectorStyle=The style applied to the week and month selector column.
Calendar_SelectWeekText=Text for select week button.
Calendar_ShowDayHeader=True if showing days of week header.
Calendar_ShowGridLines=True if showing grid lines.
Calendar_ShowNextPrevMonth=True if showing the next/prev month buttons.
Calendar_ShowTitle=True if showing the title.
Calendar_TitleFormat=Format for month title in header.
Calendar_TitleStyle=The style applied to the title.
Calendar_TodayDayStyle=The style applied to today's date.
Calendar_TodaysDate=The current date as displayed by the Calendar.
Calendar_VisibleDate=The month to be displayed.
Calendar_WeekendDayStyle=The style applied to weekend days.
Calendar_OnDayRender=Fires as a day is being rendered.
Calendar_OnSelectionChanged=Fires when selection is changed by the user.
Calendar_OnVisibleMonthChanged=Fires when visible month is changed by the user.
WebControl_AccessKey=Keyboard shortcut used by the control.
WebControl_Attributes=Tag attributes of the control.
WebControl_BackColor=Color of the background of the control.
WebControl_BorderColor=Color of the border around the control.
WebControl_BorderWidth=Width of the border around the control.
WebControl_BorderStyle=Style of the border around the control.
WebControl_CSSClassName=CSS Class name applied to the control.
WebControl_ControlStyle=The style associated with the control.
WebControl_ControlStyleCreated=Whether the style associated with the control has been created.
WebControl_Enabled=Enabled state of the control.
WebControl_Font=The font used for text within the control.
WebControl_ForeColor=Color of the text within the control.
WebControl_Height=The height of the control.
WebControl_Style=Low-level access to control styles.
WebControl_TabIndex=The tab order of the control.
WebControl_Tooltip=The tooltip displayed when the mouse is over the control.
WebControl_Width=The width of the control.
Xml_DocumentContent=The XML string that the transform is applied to.
Xml_DocumentSource=The XML file that the transform is applied to.
Xml_TransformSource=The XSL file used to transform the XML data.
Xml_Document=The XML document that the transform is applied to.
Xml_Transform=The XSL transform used on the XML data.
Xml_TransformArgumentList=The argument list used by the XSL stylesheet.

; Web category attributes
Category_Style=Style
Category_Navigation=Navigation
Category_Paging=Paging

; Error Formatter text, generic to error pages
Error_Formatter_ASPNET_Error=Server Error in '{0}' Application.
Error_Formatter_Description=Description:
Error_Formatter_Solution=Solution:
Error_Formatter_Source_File=Source File:
Error_Formatter_No_Source_File=none
Error_Formatter_Version=Version Information:
Error_Formatter_CLR_Build=Microsoft .NET Framework Version:
Error_Formatter_ASPNET_Build=; ASP.NET Version:
Error_Formatter_Line=Line:
Error_Formatter_FusionLog=Assembly Load Trace
Error_Formatter_FusionLogDesc=The following information can be helpful to determine why the assembly '{0}' could not be loaded.
Unhandled_Err_Error=Unhandled Execution Error
Unhandled_Err_Desc=An unhandled exception occurred during the execution of the current web request. Please review the stack trace for more information about the error and where it originated in the code.\r\n
Unhandled_Err_Exception_Details=Exception Details
Unhandled_Err_Stack_Trace=Stack Trace
Unauthorized_Err_Desc1=ASP.NET is not authorized to access the requested resource. Consider granting access rights to the resource to the ASP.NET request identity. ASP.NET has a base process identity (typically {MACHINE}\\ASPNET on IIS 5 or Network Service on IIS 6) that is used if the application is not impersonating.  If the application is impersonating via <identity impersonate="true"/>, the identity will be the anonymous user (typically IUSR_MACHINENAME) or the authenticated request user.
Unauthorized_Err_Desc2=To grant ASP.NET write access to a file, right-click the file in Explorer, choose "Properties" and select the Security tab. Click "Add" to add the appropriate user or group. Highlight the ASP.NET account, and check the boxes for the desired access.
Security_Err_Error=Security Exception
Security_Err_Desc=The application attempted to perform an operation not allowed by the security policy.  To grant this application the required permission please contact your system administrator or change the application's trust level in the configuration file.\r\n
NotFound_Resource_Not_Found=The resource cannot be found.
NotFound_Http_404=HTTP 404. The resource you are looking for (or one of its dependencies) could have been removed, had its name changed, or is temporarily unavailable.  Please review the following URL and make sure that it is spelled correctly.
NotFound_Requested_Url=Requested Url
Forbidden_Type_Not_Served=This type of page is not served.
Forbidden_Extension_Incorrect=The extension '{0}' may be incorrect.
Forbidden_Extension_Desc=The type of page you have requested is not served because it has been explicitly forbidden.  {0}   Please review the URL below and make sure that it is spelled correctly.
Generic_Err_Title=Runtime Error
Generic_Err_Local_Desc=An application error occurred on the server. The current custom error settings for this application prevent the details of the application error from being viewed.
Generic_Err_Remote_Desc=An application error occurred on the server. The current custom error settings for this application prevent the details of the application error from being viewed remotely (for security reasons). It could, however, be viewed by browsers running on the local server machine.
Generic_Err_Details_Title=Details
Generic_Err_Local_Details_Desc=To enable the details of this specific error message to be viewable on the local server machine, please create a <customErrors> tag within a "web.config" configuration file located in the root directory of the current web application. This <customErrors> tag should then have its "mode" attribute set to "RemoteOnly". To enable the details to be viewable on remote machines, please set "mode" to "Off".
Generic_Err_Remote_Details_Desc=To enable the details of this specific error message to be viewable on remote machines, please create a <customErrors> tag within a "web.config" configuration file located in the root directory of the current web application. This <customErrors> tag should then have its "mode" attribute set to "Off".
Generic_Err_Local_Details_Sample=<!-- Web.Config Configuration File -->\r\n\r\n<configuration>\r\n    <system.web>\r\n        <customErrors mode="RemoteOnly"/>\r\n    </system.web>\r\n</configuration>
Generic_Err_Remote_Details_Sample=<!-- Web.Config Configuration File -->\r\n\r\n<configuration>\r\n    <system.web>\r\n        <customErrors mode="Off"/>\r\n    </system.web>\r\n</configuration>
Generic_Err_Notes_Title=Notes
Generic_Err_Notes_Desc=The current error page you are seeing can be replaced by a custom error page by modifying the "defaultRedirect" attribute of the application's <customErrors> configuration tag to point to a custom error page URL.
Generic_Err_Local_Notes_Sample=<!-- Web.Config Configuration File -->\r\n\r\n<configuration>\r\n    <system.web>\r\n        <customErrors mode="On" defaultRedirect="mycustompage.htm"/>\r\n    </system.web>\r\n</configuration>
Generic_Err_Remote_Notes_Sample=<!-- Web.Config Configuration File -->\r\n\r\n<configuration>\r\n    <system.web>\r\n        <customErrors mode="RemoteOnly" defaultRedirect="mycustompage.htm"/>\r\n    </system.web>\r\n</configuration>
WithFile_No_Relevant_Line=[No relevant source lines]
Src_not_available=The source code that generated this unhandled exception can only be shown when compiled in debug mode. To enable this, please follow one of the below steps, then request the URL:\r\n\r\n1. Add a "Debug=true" directive at the top of the file that generated the error. Example:\r\n\r\n   <%@ Page Language="C#" Debug="true" %>\r\n\r\nor:\r\n\r\n2) Add the following section to the configuration file of your application:\r\n\r\n<configuration>\r\n    <system.web>\r\n        <compilation debug="true"/>\r\n    </system.web>\r\n</configuration>\r\n\r\n Note that this second technique will cause all files within a given application to be compiled in debug mode. The first technique will cause only that particular file to be compiled in debug mode.\r\n\r\nImportant: Running applications in debug mode does incur a memory/performance overhead. You should make sure that an application has debugging disabled before deploying into production scenario.
Src_not_available_nodebug=An unhandled exception was generated during the execution of the current web request. Information regarding the origin and location of the exception can be identified using the exception stack trace below.
WithFile_Line_Num=Line {0}:
TmplCompilerErrorTitle=Compilation Error
TmplCompilerErrorDesc=An error occurred during the compilation of a resource required to service this request. Please review the following specific error details and modify your source code appropriately.
TmplCompilerCompleteOutput=Show Detailed Compiler Output
TmplCompilerGeneratedFile=Show Complete Compilation Source
TmplCompilerError=1 error
TmplCompilerWarning=1 warning
TmplCompilerErrorSecTitle=Compiler Error Message
TmplCompilerFatalError=The compiler failed with error code {0}.
TmplCompilerWarningBanner=Compiler Warning Messages
TmplCompilerWarningSecTitle=Warning
TmplCompilerSourceSecTitle=Source Error
TmplCompilerSourceFileTitle=Source File
TmplCompilerSourceFileLine=Line
TmplCompilerLineHeader=Line {0}:
CompilationUnhandledException=An unhandled exception occurred during compilation using the CodeDomProvider '{0}'. Please review the stack trace for more information about the error and where it originated in the code.
Parser_Error=Parser Error
Parser_Desc=An error occurred during the parsing of a resource required to service this request.   Please review the following specific parse error details and modify your source file appropriately.
Parser_Error_Message=Parser Error Message
Parser_Source_Error=Source Error
Config_Error=Configuration Error
Config_Desc=An error occurred during the processing of a configuration file required to service this request. Please review the specific error details below and modify your configuration file appropriately.

CantGenPropertySet=Unable to generate code for a value of type '{1}'. This error occurred while trying to generate the property value for {0}.

; Trace strings
Trace_Request=Request
Trace_Status_Code=Status Code
Trace_Trace_Information=Trace Information
Trace_Category=Category
Trace_From_First=From First(s)
Trace_Message=Message
Trace_Warning=Warning
Trace_From_Last=From Last(s)
Trace_Control_Tree=Control Tree
Trace_Control_Id=Control Id
Trace_Parent_Id=Parent Id
Trace_Type=Type
Trace_Viewstate_Size=Viewstate Size
Trace_Render_Size=Render Size
Trace_Session_State=Session state
Trace_Application_State=Application State
Trace_Cookies_Collection=Cookies Collection
Trace_Headers_Collection=Headers Collection
Trace_Form_Collection=Form Collection
Trace_Querystring_Collection=Querystring Collection
Trace_Server_Variables=Server Variables
Trace_Time_of_Request=Time of Request
Trace_Url=Url
Trace_Request_Type=Request Type
Trace_Request_Encoding=Request Encoding
Trace_Name=Name
Trace_Value=Value
Trace_Response_Encoding=Response Encoding
Trace_Session_Id=Session Id
Trace_No=No.
Trace_Application_Key=Application Key
Trace_Session_Key=Session Key
Trace_Size=Size
Trace_Request_Details=Request Details
Trace_Application_Trace=<h1>Application Trace</h1>
Trace_Clear_Current=clear current trace
Trace_Physical_Directory=Physical Directory:
Trace_Requests_This=Requests to this Application
Trace_Remaining=Remaining:
Trace_File=File
Trace_Verb=Verb
Trace_View_Details=View Details
Trace_Render_Size_children=Render Size Bytes (including children)
Trace_Viewstate_Size_Nochildren=Viewstate Size Bytes (excluding children)
Trace_Page=Page

Trace_Error_Title=Trace Error
Trace_Error_LocalOnly_Description=The current trace settings prevent trace.axd from being viewed remotely (for security reasons).  It could, however, be viewed by browsers running on the local server machine.
Trace_Error_LocalOnly_Details_Desc=To enable trace.axd to be viewable on remote machines, please create a <trace> tag within the configuration file located in the root directory of the current web application. This <trace> tag should then have its "localOnly" attribute set to "false".
Trace_Error_LocalOnly_Details_Sample=<configuration>\r\n    <system.web>\r\n        <trace localOnly="false"/>\r\n    </system.web>\r\n</configuration>
Trace_Error_Enabled_Description=Trace.axd is not enabled in the configuration file for this application.
Trace_Error_Enabled_Details_Desc=To enable trace.axd, please create a <trace> tag within the configuration file located in the root directory of the current web application.  This <trace> tag should then have its "enabled" attribute set to "true".
Trace_Error_Enabled_Details_Sample=<configuration>\r\n    <system.web>\r\n        <trace enabled="true"/>\r\n    </system.web>\r\n</configuration>
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\com\commap\readme.txt ===
The sources in this directory build a utility library called commap.lib.

This library contains routines for reading OIDs, IPIDs, and OXIDs from
processes, using debugger symbol information.  It is being used by some
security test folks to construct attacks against COM objects.

Also in this directory is the source for a test EXE called commap.exe,
which does the basic thing of using the DLL to read the information, and
then printing it out.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\com\verifier\comverifier.doc ===
Microsoft Word Document MSWordDoc Word.Document.8Joe Long Microsoft COM Verifier Specification Title _PID_HLINKS ComponentName Contributors COM Verifier  SajiA; JSimmonsCOM Verifier Specification COM Verifier John Doty Normal.dot John Doty Microsoft Word 10.0urn:schemas-microsoft-com:office:smarttags urn:schemas-microsoft-com:office:smarttags place urn:schemas-microsoft-com:office:smarttags MonthFunctional Specification Author:  AUTHOR  \* MERGEFORMAT  John Doty Contributors:  DOCPROPERTY "Contributors"  \* MERGEFORMAT   SajiA; JSimmons Document:  FILENAME \p \* MERGEFORMAT  Z:\Src\nt\com\ole32\com\verifier\COMVerifier.doc Last Saved:  SAVEDATE  \* MERGEFORMAT  4/30/2002 3:45 PM Last Saved By:  LASTSAVEDBY  \* MERGEFORMAT  John Doty  TOC \o "1-4" \h \z \u   HYPERLINK \l "_Toc7944841"  Abstract  PAGEREF _Toc7944841 \h   HYPERLINK \l "_Toc7944842"  Related Documents  PAGEREF _Toc7944842 \h   HYPERLINK \l "_Toc7944843"  Functional Specification  PAGEREF _Toc7944843 \h   HYPERLINK \l "_Toc7944844"  The Verifier Tests  PAGEREF _Toc7944844 \h   HYPERLINK \l "_Toc7944845"  3.1.1 Enabling Tests  PAGEREF _Toc7944845 \h   HYPERLINK \l "_Toc7944846"  3.1.1.1 Global Flag  PAGEREF _Toc7944846 \h   HYPERLINK \l "_Toc7944847"  3.1.1.2 Verifier Flag  PAGEREF _Toc7944847 \h   HYPERLINK \l "_Toc7944848"  3.1.1.3 Registry Keys  PAGEREF _Toc7944848 \h   HYPERLINK \l "_Toc7944849"  3.1.1.4 Verifier Tool  PAGEREF _Toc7944849 \h   HYPERLINK \l "_Toc7944850"  3.1.2 Test Descriptions  PAGEREF _Toc7944850 \h   HYPERLINK \l "_Toc7944851"  3.1.2.1 Calling COM APIs in DllMain  PAGEREF _Toc7944851 \h   HYPERLINK \l "_Toc7944852"  3.1.2.2 Exceptions during COM calls  PAGEREF _Toc7944852 \h   HYPERLINK \l "_Toc7944853"  3.1.2.3 Holding critical sections across remote calls  PAGEREF _Toc7944853 \h   HYPERLINK \l "_Toc7944854"  3.1.2.4 Catch Unbalanced CoInitialize/CoUninitialize calls  PAGEREF _Toc7944854 \h   HYPERLINK \l "_Toc7944855"  3.1.2.5 Catch unbalanced calls to CoEnterServiceDomain/CoLeaveServiceDomain  PAGEREF _Toc7944855 \h   HYPERLINK \l "_Toc7944856"  3.1.2.6 Break on Weak CoInitializeSecurity  PAGEREF _Toc7944856 \h   HYPERLINK \l "_Toc7944857"  3.1.2.7 Catch Smuggled Proxies  PAGEREF _Toc7944857 \h   HYPERLINK \l "_Toc7944858"  3.1.2.8 Break on bogus AddRef ()/Release () implementations  PAGEREF _Toc7944858 \h   HYPERLINK \l "_Toc7944859"  3.1.2.9 Make sure that marshaled COM objects are not free d or unloaded  PAGEREF _Toc7944859 \h   HYPERLINK \l "_Toc7944860"  3.1.2.10 Verify the return of IClassFactory::CreateInstance  PAGEREF _Toc7944860 \h   HYPERLINK \l "_Toc7944861"  3.1.3 Test Impact  PAGEREF _Toc7944861 \h   HYPERLINK \l "_Toc7944862"  3.1.4 Internationalization  PAGEREF _Toc7944862 \h   HYPERLINK \l "_Toc7944863"  3.1.5  PAGEREF _Toc7944863 \h   HYPERLINK \l "_Toc7944864"  External APIs  PAGEREF _Toc7944864 \h   HYPERLINK \l "_Toc7944865"  3.2.1 CoVrfGetThreadState, CoVrfCheckThreadState, and CoVrfReleaseThreadState  PAGEREF _Toc7944865 \h   HYPERLINK \l "_Toc7944866"  3.2.1.1 Functional Design  PAGEREF _Toc7944866 \h   HYPERLINK \l "_Toc7944867"  Revision History  PAGEREF _Toc7944867 \h  Abstract Windows XP shipped with an integrated tool, called the Application Verifier.  This tool is designed to catch common programmer errors, changing often difficult to diagnose problems into straightforward breakpoints. The application verifier included in Windows XP includes support for checking for various core OS components, such as the heap and critical sections, but no support for catching any problems with in the use of COM.  Given that COM is not the simplest technology in the world to use, it s pretty easy to see that such a tool would be very useful. This specification describes just such a tool.  Related Documents %SDXROOT%\base\win32\verifier\verifier_stop.doc  Application Verifier Stops Functional Specification The Verifier Tests Enabling Tests There are three switches that control whether a COM Verifier test gets run.  They are the global flag, the verifier flag, and registry keys. Global Flag The global flag is simply the flag that indicates whether the application verifier has been enabled for this process.  This flag can be checked by accessing the NtCurrentPeb->NtGlobalFlag field.  This is the  big switch  for the whole application verifier. If this flag is not set, all tests are disabled. Verifier Flag In addition to the global flag, there s a specific verifier flag (RTL_VRF_FLG_COM_CHECKS) that enables or disables all of the COM tests.  It can be checked by calling VerifierQueryRuntimeFlags.  This is the  big switch  for all of the COM related tests. If the global flag is not set, then this flag is not consulted, and all tests are disabled. Registry Keys In addition to the above two flags, each test can be explicitly enabled or disabled by a registry value residing in HKLM\Software\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\<program.exe>, where <program.exe> is the name of the program to have the test enabled for.  The values will all be string values.  A REG_SZ value with the first character  , or   will enable the test, and any other value will disable the test. If either the verifier flag or the global flag is off, then these values are not examined, and every test is disabled. Verifier Tool AVRF.EXE will be modified to support a /com switch.  This switch is used to enable/disable the  Verifier Flag  above. Are we going to expose these tests to the outside world (via AppVerif.exe)? Test Descriptions Calling COM APIs in DllMain A common problem people have with COM is calling COM APIs at inappropriate times.  Certain APIs, when called with the loader lock held, can cause deadlocks. Unfortunately, these deadlocks don t always occur, and we sometimes have significant application compatibility problems trying to fix applications that  got away with it  in the past. Functional Design When enabled, this test will cause a verifier stop if the loader lock is held at the beginning of any of these functions: CoInitialize CoUninitialize CoDisconnectObject CoCreateInstance CoCreateInstanceEx CoGetClassObject CoMarshalInterface CoMarshalInterthreadInterfaceInStream CoGetInterfaceAndReleaseStream CLSIDFromProgID CLSIDFromProgIDEx What other APIs do we need to instrument like this? It will also cause a verifier stop if a call is made on a proxy and the loader lock is held.  This is because proxy calls can require a thread switch (which is often problematic if the loader lock is held). UI Changes The registry key for this test will be  ComEnableDllMainChecks Implementation Notes Implementation of this test should be as simple as adding a call to a verifier function that checks to see if the loader lock is held at the beginning of every API we care about. Implementation Status Complete. Exceptions during COM calls The COM infrastructure does not normally catch all exceptions thrown by objects, and in some cases it catches and silences exceptions.  This can lead to corruption of internal COM state, since the code was not written with exceptions in mind. (This is similar to the BreakOnSilencedExceptions registry key that exists to get this behaviour on a machine-wide basis.) Functional Design When enabled, this test causes a verifier stop any time an exception is thrown while processing a COM call.  (Obviously, we can only detect exceptions thrown when they are thrown through a proxy or a stub.) UI Changes The registry key for this test will be  ComBreakOnAllExceptions Implementation Notes Generally, we have exception filters where we call into user code.  It s just that these filters don t always break on all exceptions.  This test causes the filters to break unconditionally. Holding critical sections across remote calls It is bad programming practice to hold a lock (that is, a Critical Section) across a remote call.  It often leads to deadlocks and other unintended side-effects.   This test will likely produce a lot of noise if run on a system-wide basis, since a lot of people probably do it and get away with it.  So it s probably not a good idea to enable this test by default. Functional Design When enabled, this test causes a verifier stop when a thread that owns a critical section makes an out-of-process COM call. UI Changes The registry key for this test will be  ComVerifyLocksOnCall Implementation Notes This should be as simple as putting a call to the  check for orphaned critical sections  code in the outbound call path.  SajiA notes: Note that the check for this should be done in the SendReceive call path. The GetBuffer call path holds an RPC lock always by design (their design). Implementation Status Complete. Catch Unbalanced CoInitialize/CoUninitialize calls One particularly hard thing to do with COM is to CoInitialize threads appropriately.  Users often write code intended to run on threads that they didn t create in this case, if you need COM, it s difficult to know when you should CoInitialize and when you should CoUninitialize.  This leads to many cases where you call CoInitialize too many times, and so fail to clean up, or call CoUninitialize too many times, causing headaches for your callers. Functional Design When enabled, this test will cause a verifier stop when: 1. A thread exits with a leaked CoInitialize. 2. A cache thread gets returned to the pool in a different CoInitialize state than when it started. 3. An STA host thread goes back into its blocking loop with a different CoInitialize state than when it started. different CoInitialize state  means either a different threading model or a different number of inits on the thread. UI Changes The registry key for this test will be  ComVerifyThreadState . (This is shared with the test for catching unbalanced calls to CoEnterServiceDomain.) Implementation Notes Part of these tests is already in existence.  Other bits of this test (specifically, items 2 and 3) are going to be implemented with the pseudo-public APIs described below. Implementation Status Complete. Catch unbalanced calls to CoEnterServiceDomain/CoLeaveServiceDomain While not as bad as having unbalanced calls to CoInitialize, leaking a CoEnterServiceDomain call should still be considered a bug.   Functional Design Whenever we detect that somebody has leaked CoEnterServiceDomain calls, we will issue a verifier stop.  We already detect that somebody has leaked CoEnterServiceDomain calls  this simply works with that code. UI Changes The registry key for this test will be  ComVerifyThreadState . (This is shared with the test for catching unbalanced calls to CoInit.) Implementation Status Complete. Break on Weak CoInitializeSecurity There are some sets of input to CoInitializeSecurity that are just plain bad.  First of all, there are weak security descriptors (for example, a security descriptor with a NULL DACL).  Secondly, some processes should not allow impersonation by default.  (If a system process allows impersonation by default, then it is very easy to trick the process into allowing you to gain LocalSystem privilege.) Functional Design Examine the incoming parameters to CoInitializeSecurity.  A verifier stop will be issued if: The security descriptor has a NULL DACL. The default impersonation level is set to IMPERSONATE or higher, and the process is running as SYSTEM. UI Changes The registry key for this test will be  ComVerifySecurity Implementation Status Complete. Catch Smuggled Proxies This test will attempt to catch smuggled proxies, that is, proxies used outside of the context they were unmarshalled in. Right now, there are a couple of cases where calls on a smuggled proxy are simply ignored (for example, AddRef () and Release () calls), which can lead to leaks and difficult to diagnose bugs.   Functional Design This test will cause a verifier stop when a call on a smuggled proxy is detected.  That is, in the standard case where RPC_E_WRONG_THREAD would be returned, and also in the special IUnknown implementation code (i.e., AddRef () and Release ()). UI Changes The registry key for this test will be  ComVerifyProxies Implementation Notes This ought to be very straightforward, since the code that checks for smuggling already exists s simply a matter of instrumenting said code. Implementation Status Completed Break on bogus AddRef ()/Release () implementations This test will attempt to catch buggy implementations of AddRef ()/Release ().  Although the return value of AddRef ()/Release () is supposed to be for debugging purposes only, some clients die horribly if you write a broken implementation.   Functional Design For the purposes of the test, a broken implementation is one that does not return a higher number on AddRef () than on Release ().  The test will check this property immediately upon the return of a class factory s CreateInstance () method, i.e., as soon as we get our hands on an interface.  It will also check this property when marshalling an interface pointer. UI Changes The registry key for this test will be  ComVerifyAddRef Implementation Status Not started Make sure that marshaled COM objects are not free d or unloaded This test will attempt to catch reference counting bugs and buggy DllCanUnloadNow implementations, by hooking into the page-heap memory notifications. Functional Design When somebody unloads a DLL that contains the implementation of a marshaled object, we will do a verifier stop.  Also, when somebody free s the memory for a marshaled COM object, we will do a verifier stop. UI Changes There will be two registry keys for this test.  The first is  ComEnableObjectTracking .  This controls tracking whether or not we detect that a given server object is free d or unloaded.  The second is  ComEnableVTBLTracking .  This controls whether or not we detect that the VTBL for an object is being free d or unloaded. Implementation Notes This is simple to implement just hook into the pageheap free notifications (via APIs exposed from verifier.dll). Implementation Status Completed Verify the return of IClassFactory::CreateInstance This test will attempt to catch broken implementations of IClassFactory.   Functional Design When a class factory returns S_OK, but a NULL for the interface pointer, we issue a verifier stop. UI Changes The registry key for this test will be  ComVerifyClassFactory Implementation Notes This ought to be really really easy. Implementation Status Completed Test Impact We need to have negative tests that do each of the wrong things listed above.  Of course, it s going to be nigh-impossible to write automated tests for this, since verifier stops are generally debug breakpoints. Internationalization The normal verifier code does not localize the error strings it spits into the debugger, so I guess we don t have to do it either.  So there s not much localization that needs to be done by us. If we are writing the tool that sets the flags, do we need to localize the tool? Either we need to document the tool that sets the flags, or we need to make sure that the team that writes the tool documents the flags.  I don t think we want to document the individual flags, since the tool is the thing that s supported. External APIs These are APIs that are callable by other teams that can be used to invoke the COM verifier from places other than inside ole32.dll. CoVrfGetThreadState, CoVrfCheckThreadState, and CoVrfReleaseThreadState These two functions are used to provide external groups with a simple way to verify that the COM state of a thread has not changed in between calls to other code.  For example, the shell can use these APIs to verify that a shell extention they call into does not CoInitialize the thread out from under them. Functional Design For any of these functions to do any work, the COM Verifier must be enabled.  Specifically, the tests to verify COM thread state must be enabled. HRESULT CoVrfGetThreadState(void **ppvThreadState) This function returns the current  thread state  in the ppvThreadState parameter.  This parameter can be used as input to the CoVrfCheckThreadState function, and must be freed with the CoVrfReleaseThreadState function.  If disabled, it returns S_OK but the out parameter is NULL.  Otherwise, it returns S_OK if successful, E_INVALIDARG if ppvThreadState is NULL, and E_OUTOFMEMORY if there is not enough memory available. HRESULT CoVrfCheckThreadState(void *pvThreadState) This function compares thread state retrieved with CoVrfGetThreadState to the current thread state.  If the COM verifier is not enabled, this function simply returns S_OK.  Specifically, the  Catch Unbalanced CoInit/CoUninit Test  described above must be enabled.   If everything is enabled, and if the state of the current thread is not equivalent to the provided state, a verifier stop is issued. This function returns S_FALSE if a verifier stop was issued.  Otherwise, it returns S_OK. void CoVrfReleaseThreadState(void *pvThreadState) This function frees the resources used by the pvThreadState parameter.  If pvThreadState is NULL, this function does nothing. Implementation Notes We will not take a complete copy of the thread state UI Changes There is no UI for these functions. Implementation Status In progress. Revision History Author Description 01/22/02 JohnDoty Created  Part 1 Part Head Enterprise Services Functional Specification Component -   DOCPROPERTY "ComponentName"  \* MERGEFORMAT  COM Verifier print \p page " /ndf{1 index where{pop pop pop}{dup xcheck{bind}if def} ifelse}bind def /ed{exch def}bind def /SetPageOffset{neg wp$y add/dTop ed/dLeft ed}ndf /SetPageSize {neg dTop add/dBot ed dLeft add/dRight ed}ndf /DoCropMarks{gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft 76 sub dTop moveto 72 0 rlineto dLeft 76 sub dBot moveto 72 0 rlineto   dRight 4 add dTop moveto 72 0 rlineto dRight 4 add dBot moveto 72 0 rlineto   dLeft dTop 76 add moveto 0 -72 rlineto dRight dTop 76 add moveto 0 -72 rlineto   dLeft dBot 4 sub moveto 0 -72 rlineto dRight dBot 4 sub moveto 0 -72 rlineto   stroke grestore}ndf /DoPageBox {gsave 0 setgray /dopaint true def 0.25 setlinewidth   dLeft dTop moveto dRight dTop lineto dRight dBot lineto dLeft dBot lineto   closepath stroke grestore}ndf 40.5 72 SetPageOffset 531 648 SetPageSize DoCropMarks DoPageBox" Filename:  filename  Spec Template.dot  Project:  title  Your Title Here Template:  template  Normal.dot  Author:  author  Your Name Here  Last Saved By:  lastsavedby  Steve Swartz Revision #:  revnum   Page:  page \* arabic numpages   Printed:  printdate \@ "MM/dd/yy hh:mm AM/PM" 08/02/01 11:00 AM print \p para " 0 setgray /dopaint true def 2 2 moveto /str 30 string def /Times-Roman findfont 5 scalefont setfont (Printed On: ) show statusdict begin product show end  (     Colorlayer: ) show /colorlayer where {pop colorlayer str cvs show}{(?) show}ifelse  (     Document Page: ) show wp$fpage show" !Unexpected End of Expression Page   PAGE   NUMPAGES  Microsoft Confidential Microsoft Corporation, 1995. All Rights Reserved. Printed:   DATE  \* MERGEFORMAT  4/30/2002 Page   PAGE  \* MERGEFORMAT   FILENAME  \* MERGEFORMAT  Spec Template.dot qmibib^iZ^ gdd\H gd?!U gdB>G gdB>G gds9, gdua( gdua( gd"cv gds9, gd*'n gd*'n
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\comcat\guids.txt ===
// 0002E0xx-0000-0000-C000-000000000046 Component Categories, ckindel 12/4/95

0002E000-0000-0000-C000-000000000046 IID_IEnumGUID
0002E001-0000-0000-C000-000000000046 OLD_IID_IEnumCATEGORYINFO
0002E002-0000-0000-C000-000000000046 OLD_IID_ICatRegister
0002E003-0000-0000-C000-000000000046 OLD_IID_ICatInformation
0002E004-0000-0000-C000-000000000046 Component Cat TypeLib
0002E005-0000-0000-C000-000000000046 CLSID_StdComponentCategoryMgr

0002E011-0000-0000-C000-000000000046 IID_IEnumCATEGORYINFO
0002E012-0000-0000-C000-000000000046 IID_ICatRegister
0002E013-0000-0000-C000-000000000046 IID_ICatInformation
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\ilib\readme.txt ===
The def file ole2w32.def can be found in ole2w32\ole2w32a.def

It is renamed so that win40.mk can merge it with the guids in
uuid.lib to build the final ole2w32.lib file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olecnv32\readme.txt ===
OLECNV32.DLL
March 28, 1994

This Pict to Metafile converter is shared technology.  Please see the OLE team
before modifying it.

We rely on _OLECNV32_ being defined when compiling these sources to build
OLECNV32.DLL.  This allows us to disable unused code.

This code has not been unit tested yet.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olethunk\bin16\ole2disp.txt ===
These versions of OLE Automation are the WOW-enabled versions (distinct
from the re-distributable win31/win32s versions).  This set of files was
taken from OLE Automation drop 102194.622 on \\blw\drop2 (kjashbcd)
\ole2auto\oa94.

DougF
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olethunk\ole16\tools\cl.err ===
/* error messages */

2001	"too many symbols predefined with /D"
2002    "memory-model conflict"
2003    "missing source filename"
2008	"limit of %s exceeded at '%s'"
2011	"only one floating-point option allowed"
2012	"too many linker arguments"
2013    "incomplete model specification"
2016    "%s and %s command-line options are incompatible"
2018	"cannot create linker response file"
2019	"cannot overwrite source or object file '%s'"
2020	"%s option requires extended keywords to be enabled (/Ze)"
2021	"invalid numeric argument '%s'"
2022	"cannot open '%s'"
2023    "invalid model specification - flat model only"
2027	"cannot execute '%s'"
2028    "too many open files; cannot redirect '%s'"
2030	"INTERNAL COMPILER ERROR in '%s'\n\t\tContact Microsoft Product Support Services"
2031    "too many command-line options"
2000	"UNKNOWN COMMAND-LINE ERROR\n\t\tContact Microsoft Product Support Services"

				/* warning messages */

4001	"listing overrides assembly output"
4002	"ignoring unknown option '%s'"
4003	"processor-option conflict"
4005	"cannot find '%s';\nPlease enter new filename (full path) or CTRL+C to quit: "
4007	"'%s' requires '%s'; option ignored"
4009	"threshold only for far or huge data; ignored"
4011	"preprocessing overrides source listing"
4012	"function declarations override source listing"
4013	"combined listing overrides object listing"
4014	"invalid value '%d' for '%s'; assuming '%d'"
4018	".DEF files supported for segmented executable files only"
4019	"string too long; truncated to %d characters"
4020    "'%s' : missing argument; option ignored"
4021    "no action performed"
4022	"option '%s' invalid for %d-bit target"
4023	"option '%s' forces use of optimizing compiler"
4000	"UNKNOWN COMMAND-LINE WARNING\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olethunk\ole16\tools\c23.err ===
1001    "INTERNAL COMPILER ERROR\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"
1002    "compiler is out of heap space in pass 2"
1003	"error count exceeds %d; stopping compilation"
1004    "unexpected end of file found"
1005	"string too big for buffer"
1006	"write error on compiler intermediate file"
1007	"unrecognized flag '%s' in '%s'"
1015	"compiler limit : too many segments"
1023	"cannot open source file '%s'"
1027	"DGROUP data allocation exceeds 64K"
1029	"there are > 512 bytes of arguments"
1030	"there are > 512 bytes of local variables"
1032    "cannot open object code listing file '%s'"
1033	"cannot open assembly language output file '%s'"
1035    "expression too complex; simplify expression"
1036	"cannot open source listing file '%s'"
1037	"cannot open object file '%s'"
1039    "unrecoverable heap overflow in pass 3"
1040    "unexpected end-of-file condition in source file '%s'"
1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1048    "unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1050    "'%s' : code segment too large"

1055	"compiler limit : out of keys"
1067    "intrinsic not implemented"
1073    "bad '%s' flag, would overwrite '%s' with '%s'"
1074    "too many '%s' flags, '%s'"

1090	"'%s' data allocation exceeds 64K"
1126	"'%s' : automatic allocation exceeds %s"
1127    "'%s' : segment redefinition"
1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Product Support Services"

						
	
2125	"'%s' : allocation exceeds 64K"
2127	"parameter allocation exceeds 32K"
2128	"'%s' : huge array cannot be aligned to segment boundary"
2129	"static function '%s' not found"
2220	"warning treated as error - no object file generated"
2418	"'%s' : not in a register"
2427	"'%s' : jump referencing label is out of range"
2000	"UNKNOWN ERROR\n\t\tContact Microsoft Product Support Services"

						
	
4700	"local variable '%s' used without having been initialized"
4701	"local variable '%s' may be used without having been initialized"
4702	"unreachable code"
4703	"'%s' : function too large for global optimizations"
4704    "'%s' : inline assembler precludes global optimizations"
4705	"statement has no effect"
4706	"assignment within conditional expression"
4707	"'%s' : function too large for global optimizations (%s)"  
4708    "ran out of heap at: %s"  
4709	"comma operator within array index expression"
4710    "function '%s' not expanded"
4711    "function '%s' selected for inline expansion"
4712    "'%s' : used as register - loss of debugging information"
4713    "%s: INTERNAL COMPILER ERROR; restarting\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"
4723	"potential divide by 0"
4724	"potential mod by 0"
4726    "'%c' : unknown memory-model command-line option"
4727	"conditional expression is constant"
4741    "/Oq option ignored for __fastcall or __saveregs function '%Fs'"
4746    "'%s' : unsized array treated as '%s'"
4756    "overflow in constant arithmetic"
4758    "address of automatic (local) variable taken; DS != SS"
4759    "segment lost in conversion"
4761    "integral size mismatch in argument; conversion supplied"
4762    "near/far mismatch in argument; conversion supplied"
4763    "'%s' : function too large for postoptimizer"
4765    "recoverable heap overflow in postoptimizer"
4766    "local symbol-table overflow"
4769	"conversion of near pointer to long integer"
4772	"'%s' : too many debug entry points, maximum %d"
4773    "scoping too deep; symbolic debugging information lost for this module."
4785	"near call to '%s' in different segment"
4786	"string too long - truncated to %d characters"
4787    "unprototyped function '%s' called in exception"   
4788	"'%Fs' : identifier was truncated to '%d' characters"
4790	"insufficient memory to process debugging information"
4791    "loss of debugging information caused by optimization"
4792    "long double type not supported by alternate math library"

4900	"Il mismatch between '%s' version '%ld' and '%s' version '%ld'"

4000	"UNKNOWN WARNING\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olethunk\ole16\tools\c1.err ===
4001	"nonstandard extension '%Fs' was used"
4002	"too many actual parameters for macro '%s'"
4003	"not enough actual parameters for macro '%s'"
4004	"incorrect construction after 'defined'"
4005	"'%Fs' : macro redefinition"
4006	"#undef expected an identifier"
4007	"'%Fs' : must be '%Fs'"
4008	"'%Fs' : '%Fs' attribute ignored"
4009	"string too big; trailing characters truncated"
4010	"single-line comment contains line-continuation character"
4011	"'%Fs' : identifier was truncated to '%d' characters"
4012	"float constant in a cross compilation" 
4013	"'%Fs' undefined; assuming extern returning int"
4014	"concatenating mismatched wide strings"
4015	"'%Fs' : type of bit field must be integral"
4016	"'%s' : no function return type; using 'int' as default" 
4017	"cast of 'int' expression to far pointer"
4018	"'%Fs' : signed/unsigned mismatch"
4019	"empty statement at global scope"
4020	"'%Fs' : too many actual parameters"
4021	"'%Fs' : too few actual parameters"
4022	"'%Fs' : pointer mismatch for actual parameter %d"
4023	"'%Fs' : based pointer passed to unprototyped function : parameter %d"
4024	"'%Fs' : different types for formal and actual parameter %d"
4025	"'%Fs' : based pointer passed to function with variable arguments: parameter %d"
4026	"function declared with formal parameter list"
4027	"function declared without formal parameter list"
4028	"formal parameter %d different from declaration"
4029	"declared formal parameter list different from definition"
4030	"first formal parameter list longer than the second list"
4031	"second formal parameter list longer than the first list"
4032	"formal parameter %d has different type when promoted"
4033	"'%Fs' must return a value"
4034	"sizeof returns 0"
4035	"'%Fs' : no return value"
4036	"unnamed %Fs as actual parameter"
4037	"conflicting ambient class modifiers"
4038	"'%Fs' : illegal ambient class modifier"
4039	"ambient class modifier on reference ignored"
4040	"memory attribute on '%Fs' ignored"
4041	"illegal modifier for 'this' pointer"
4042	"'%Fs' : has bad storage class"
4043	"function specifier used more than once"
4044	"specifier __huge on '%Fs' ignored; can only be applied to array"
4045	"'%Fs' : array bounds overflow"
4046	"'%Fs' : unsized array treated as %Fs"
4047	"'%Fs' : different levels of indirection"
4048	"different declared array subscripts"
4049	"'%Fs' : indirection to different types"
4050	"'%Fs' : different code attributes"
4051	"type conversion; possible loss of data"
4052	"function declarations different; one contains variable arguments"
4053	"one void operand for '?:'"
4054	"function pointer cast to a data pointer"
4055	"data pointer cast to a function pointer"
4056    "overflow in floating point constant arithmetic"
4057    "'%Fs' : indirection to slightly different base types"
4058	"unions are now aligned on alignment requirement, not size"

4067	"unexpected characters following '%Fs' directive - newline expected"
4068	"unknown pragma"

4070	"return of a 'void' expression"
4071	"'%Fs' : no function prototype given"
4072	"'%Fs' : no function prototype on __fastcall function"
4073	"initializers put in library initialization area"
4074	"initializers put in compiler reserved initialization area"
4075	"initializers put in unrecognized initialization area"
4076	"'%Fs' : may be used on integral types only"
4077	"unknown check_stack option"
4078	"case constant '%ld' too big for the type of the switch expression"
4079	"unexpected token '%Fs'"
4080	"expected identifier for segment name; found '%Fs'"
4081	"expected a comma; found '%Fs'"
4082	"expected an identifier; found '%Fs'"
4083	"expected '('; found '%Fs'"
4084	"expected a pragma directive; found '%Fs'"
4085	"expected 'on' or 'off'"
4086	"expected '1', '2', '4', or '8'"
4087	"'%Fs' : declared with 'void' parameter list"
4088	"'%Fs' : pointer mismatch in actual parameter %d, formal parameter %d"
4089	"'%Fs' : different types in actual parameter %d, formal parameter %d"
4090	"'%Fs' : different const or volatile qualifiers"
4091	"no symbols were declared"
4092	"sizeof returns 'unsigned long'"
4093	"unescaped newline in character constant in inactive code"
4094	"untagged '%Fs' declared no symbols"
4095	"expected ')'; found '%Fs'"
4096	"'%Fs' must be used with '%Fs'"
4097	"nonstandard extension : typedef-name '%Fs' used as synonym for class-name '%Fs'"
4098	"'%Fs' : 'void' function returning a value"
4099	"type declared with '%Fs' is defined with '%Fs'"
4100	"'%Fs' : unreferenced formal parameter"
4101	"'%Fs' : unreferenced local variable"
4102	"'%Fs' : unreferenced label"
4103	"'%Fs' : used #pragma pack to change alignment"
4104	"'%Fs' : near data in same_seg pragma; ignored"
4105	"'%Fs' : code modifiers only on function or pointer to function"
4106	"pragma requires an integer between 1 and 127"
4107	"pragma requires an integer between 15 and 255"
4108	"pragma requires an integer between 79 and 132"
4109	"unexpected identifier '%Fs'"
4110	"unexpected token 'number'"
4111	"unexpected token 'string'"
4112	"#line requires an integer between 1 and 32767"
4113	"function parameter lists differed"
4114	"same type qualifier used more than once"
4115	"'%Fs' : named type definition in parentheses"
4116	"unnamed type definition in parentheses"
4117	"macro name '%Fs' is reserved, '%Fs' ignored"
4118	"pragma not supported"
4119	"different bases '%Fs' and '%Fs' specified"
4120	"based/unbased mismatch"
4121	"'%Fs' : alignment of a member was sensitive to packing"
4122	"'%Fs' : alloc_text applicable only to functions with C linkage"
4123	"different base expressions specified"
4124	"__fastcall with stack checking is inefficient"
4125	"decimal digit terminates octal escape sequence"
4126	"'%c' : unknown memory-model command-line option"
4127	"conditional expression is constant"
4128	"storage-class specifier after type"
4129	"'%c' : unrecognized character escape sequence"
4130	"'%Fs' : logical operation on address of string constant"
4131	"'%Fs' : uses old-style declarator"
4132	"'%Fs' : const object should be initialized"
4133	"'%Fs' : incompatible types - 'void' pointer combined with non-'void' pointer"
4134	"conversion between pointers to members of same class"
4135	"conversion between different integral types"
4136	"conversion between different floating-point types"
4137	"'%Fs' : no return value from floating-point function"
4138	"'*/' found outside of comment"
4139	"'0x%lx' : hex escape sequence is out of range"
4140	"'%Fs' : redefined, preceding references may be invalid"  
4141	"'%Fs' : used more than once"
4142	"benign redefinition of type"
4143	"pragma 'same_seg' not supported; use __based allocation"
4144	"'%Fs' : relational expression as switch expression"
4145	"'%Fs' : relational expression as switch expression; possible confusion with '%Fs'"

4146	"unary minus operator applied to unsigned type, result still unsigned"
4147	"'%Fs' : '%Fs' ignored on pointer and reference declarations"
4148	"'%Fs' : DS != SS for '__near' '%Fs'"
4149	"'%Fs' : different ambient model than base class '%Fs'"
4150	"deletion of pointer to incomplete type '%Fs'; no destructor called"
4151	"'%Fs' : operator should be explicitly '%Fs'"
4152	"non standard extension, function/data ptr conversion in expression"
4153	"function/data ptr conversion in expression"
4154	"deletion of an array expression; conversion to pointer supplied"
4155	"deletion of an array expression without using the array form of 'delete'"
4156	"deletion of an array expression without using the array form of 'delete'; array form substituted"

4184	"near call to thunk for '%Fs' in a different segment"

4241	"'%Fs' : member access is restricted"

4245	"'friend' specified for nonexistent function '%Fs'"

4247	"'%Fs' not accessible because '%Fs' uses '%Fs' to inherit from '%Fs'"
4248	"'%Fs' : cannot access '%Fs' member declared in class '%Fs'"
4249	"'%Fs' : no path to '%Fs' member declared in virtual base '%Fs'"
4250	"'%Fs' : inherits '%Fs::%Fs' via dominance"
4251	"'%Fs' : base type '%Fs' should be exported to export %Fs '%Fs'"
4252	"'%Fs' is not defined; cannot specify CV information."

4260	"no override, '%Fs::%Fs' has %Fs 'this' memory model whereas '%Fs::%Fs' has %Fs 'this' memory model"
4261	"no override, '%Fs::%Fs' has %Fs calling convention whereas '%Fs::%Fs' has %Fs calling convention"

4300	"conversion of pointer to nonintegral type"
4301	"truncation during conversion of pointer to integral type"
4302	"truncation during conversion of pointer to function"
4303	"truncation during conversion of pointer to function to pointer to object"
4304	"truncation during pointer conversion"
4305	"truncation during conversion of integral type to pointer"
4306	"conversion of integral type to pointer of greater size"
4307	"'%Fs' : integral constant overflow; result truncated"
4308	"negative integral constant converted to unsigned type"
4309	"'%Fs' : truncation of constant value"

4341	"signed value out of range for enum constant"
4342	"precision lost in initialization of enum constant"

4354	"'%Fs' : initialization of reference to member requires a temporary variable"
4355	"'this' : used in base member initializer list"

4385	"%Fs the '%Fs' in base '%Fs'"
4386	"%Fs to the '%Fs' in base '%Fs'"

4401	"'%Fs' : member is bit field"
4402	"must use PTR operator"
4403	"illegal PTR operator"
4404	"period on directive ignored"
4405	"'%Fs' : identifier is reserved word"
4406	"operand on directive ignored"

4409	"illegal instruction size"
4410	"illegal size for operand"
4411	"'%Fs' : symbol resolves to displacement register"

4414	"'%Fs' : short jump to function converted to near"

4500	"'%Fs' : class has private/protected data members; user-defined constructor advised"
4501	"'%Fs' : use of '::' unnecessary here"
4502	"'linkage' requires use of keyword 'extern'"

4505	"'%Fs' : unreferenced local function has been removed"
4506	"no definition for inline function '%Fs'"
4507	"explicit linkage specified after default linkage was used"
4508	"'%Fs' : function should return a value; 'void' return type assumed"

4510	"'%Fs' : default constructor could not be generated"
4511	"'%Fs' : copy constructor could not be generated"
4512	"'%Fs' : assignment operator could not be generated"
4513	"'%Fs' : destructor could not be generated"

4520	"'%Fs' : multiple default constructors specified"
4521	"'%Fs' : multiple copy constructors specified"
4522	"'%Fs' : multiple assignment operators specified"
4523	"'%Fs' : multiple destructors specified"
4524	"'%Fs' : redundant use of 'friend' on destructor"
4525	"'%Fs' : redundant use of 'friend' on constructor"

4527	"instances of %Fs '%Fs' can never be destroyed - user-defined destructor required"
4528	"illegal 'pure' syntax, must be '= 0'"

4607	"'%Fs' : must be initialized in constructor base/member initializer list"

4610	"%Fs '%Fs' can never be instantiated - user defined constructor required"

4612	"bad #pragma syntax, pragma ignored"
4613	"'%Fs' : class of segment cannot be changed"
4614	"'%Fs' : varargs parameters with this type were promoted"	
4615	"#pragma warning : unknown user warning type"
4616	"#pragma warning : warning number '%d' out of range, must be between '%d' and '%d'"
4617	"#pragma warning : invalid warning number"

4620	"no postfix form of 'operator ++' found for type '%Fs', using prefix form"
4621	"no postfix form of 'operator --' found for type '%Fs', using prefix form"
4622	"Overwriting debug information formed during creation of the precompiled header in object file: '%s'"

4630	"'%Fs' : '%Fs' storage class specifier illegal on member definition"

4650	"debugging information not in precompiled header; only global symbols from the header will be available"
4651	"'/D%s' specified for precompiled header but not for current compile"
4652    "command-line option '%Fs' inconsistant with precompiled header; PCH option ignored"

4706	"assignment within conditional expression" 

4710	"'%Fs' : function not expanded" 

4726	"'%c' : unknown memory model command-line option"
4727	"conditional expression is constant"

4741	"/Oq option ignored for __fastcall function '%Fs'"

4746	"'%Fs' : unsized array given size %Fs"

4756	"overflow in constant arithmetic"	

4758	"address of automatic (local) variable taken, DS != SS" 
4759	"segment lost in conversion"	

4761	"integral size mismatch in argument : conversion supplied"	
4762	"near/far mismatch in argument : conversion supplied"	

4769	"conversion of near pointer to long integer"	

4785	"near call to '%Fs' in different segment" 

4788    "'%Fs' : identifier was truncated to '%d' characters"

4793    "native code generated for p-code function '%Fs' with inline assembly"

4900	"Il mismatch between '%s' version '%ld' and '%s' version '%ld'"






















4000	"UNKNOWN WARNING\n\t\tContact Microsoft Product Support Services"
						

2001	"newline in constant"
2002	"invalid wide-character constant"
2003	"expected 'defined id'"
2004	"expected 'defined(id)'"
2005	"#line expected a line number, found '%Fs'"
2006	"#include expected a file name, found '%Fs'"
2007	"#define syntax"
2008	"'%c' : unexpected in macro definition"
2009	"reuse of macro formal '%Fs'"
2010	"'%c' : unexpected in macro formal parameter list"
2011	"'%Fs' : '%Fs' type redefinition"
2012	"missing name following '<'"
2013	"missing '>'"
2014	"preprocessor command must start as first nonwhite space"
2015	"too many characters in constant"
2016	"no closing single quotation mark"
2017	"illegal escape sequence"
2018	"unknown character '0x%x'"
2019	"expected preprocessor directive, found '%c'"
2020	"'%Fs' : '%Fs' member redefinition"
2021	"expected exponent value, not '%c'"
2022	"'%ld' : too big for character"
2023	"divide by 0"
2024	"mod by 0"
2025	"'%s' : enum/struct/union type redefinition"		
2026	"string too big, trailing characters truncated"
2027	"use of undefined type '%Fs'"
2028	"struct/union member must be inside a struct/union"
2029	"left of '%s' specifies undefined class/struct/union '%Fs'"
2030	"'%Fs' : struct/union member redefinition"		
2031	"'%Fs' : function cannot be struct/union member"	
2032	"'%Fs' : function cannot be member of %Fs '%Fs'"
2033	"'%Fs' : bit field cannot have indirection"
2034	"'%Fs' : type of bit field too small for number of bits"
2035	"struct/union '%Fs' : unknown size"			
2036	"'%Fs' : unknown size"
2037	"left of '%s' specifies undefined struct/union '%Fs'"
2038	"'%s' : not struct/union member"			
2039	"'%Fs' : is not a member of '%Fs'"
2040	"'%Fs' : different levels of indirection"
2041	"illegal digit '%c' for base '%d'"
2042	"signed/unsigned keywords mutually exclusive"
2043	"illegal break"
2044	"illegal continue"
2045	"'%Fs' : label redefined"
2046	"illegal case"
2047	"illegal default"
2048	"more than one default"
2049	"case value '%ld' already used"
2050	"nonintegral switch expression"
2051	"case expression not constant"
2052	"case expression not integral"
2053	"'%Fs' : wide string mismatch"
2054	"expected '(' to follow '%Fs'"
2055	"expected formal parameter list, not a type list"
2056	"illegal expression"
2057	"expected constant expression"
2058	"constant expression is not integral"
2059	"syntax error : '%Fs'"
2060	"syntax error : end-of-file found"
2061	"syntax error : identifier '%Fs'"
2062	"type '%Fs' unexpected"
2063	"'%Fs' : not a function"
2064	"term does not evaluate to a function"
2065	"'%Fs' : undeclared identifier"
2066	"cast to function type is illegal"
2067	"cast to array type is illegal"
2068	"illegal cast"
2069	"cast of 'void' term to non-'void'"
2070	"illegal sizeof operand"
2071	"'%Fs' : illegal storage class"
2072	"'%Fs' : initialization of a function"
2073	"'%Fs' : partially initialized array requires a default constructor"
2074	"'%Fs' : '%Fs' initialization needs curly braces"
2075	"'%Fs' : array initialization needs curly braces"
2076	"'%Fs' : struct/union initialization needs curly braces" 
2077	"nonscalar field initializer '%Fs'"
2078	"too many initializers"
2079	"'%Fs' uses undefined class/struct/union '%Fs'"
2080	"illegal __far __fastcall function or __saveregs function"
2081	"'%Fs' : name in formal parameter list illegal"
2082	"redefinition of formal parameter '%Fs'"
2083	"%Fs comparison illegal"
2084	"function '%Fs' already has a body"
2085	"'%Fs' : not in formal parameter list"
2086	"'%Fs' : redefinition"
2087	"'%Fs' : missing subscript"
2088	"'%Fs' : illegal for %Fs"
2089	"'%Fs' : '%Fs' too large"
2090	"function returns array"
2091	"function returns function"
2092	"array element type cannot be function"
2093	"cannot use address of automatic variable as static initializer"
2094	"label '%Fs' was undefined"
2095	"'%Fs' : actual has type 'void' : parameter %d"
2096	"struct/union comparison illegal"		
2097	"illegal initialization"
2098	"nonaddress expression"
2099	"nonconstant initializer"
2100	"illegal indirection"
2101	"'%Fs' on constant"
2102	"'%Fs' requires lvalue"
2103	"'%Fs' on register variable"
2104	"'%Fs' on bit field ignored"
2105	"'%Fs' needs lvalue"
2106	"'%Fs' : left operand must be lvalue"
2107	"illegal index, indirection not allowed"
2108	"nonintegral index"
2109	"subscript on nonarray"
2110	"pointer + pointer"
2111	"pointer + nonintegral value"
2112	"illegal pointer subtraction"
2113	"pointer subtracted from nonpointer"
2114	"'%Fs' : pointer on left; needs integral value on right"
2115	"'%Fs' : incompatible types"
2116	"function parameter lists differed"
2117	"'%Fs' : array bounds overflow"
2118	"negative subscript"
2119	"typedef types both define indirection"
2120	"'void' illegal with all types"
2121	"'%Fs' : bad %Fs operand"
2122	"'%Fs' : prototype parameter in name list illegal"
2123	"'%Fs' : cannot call __fastcall function '%Fs' from p-code"
2124	"divide or mod by zero"
2125	"'%Fs' : allocation exceeds 64K"	
2126	"'%Fs' : incorrect operand"
2127	"parameter allocation exceeds 32K"	
2128	"'%Fs' : alloc_text/same_seg applicable only to functions with C linkage"
2129	"static function '%Fs' declared but not defined"
2130	"#line expected a string containing the file name, found '%Fs'"
2131	"more than one memory attribute"
2132	"syntax error : unexpected identifier"
2133	"'%Fs' : unknown size"
2134	"'%Fs' : struct/union too large"	
2135	"'%Fs' : illegal bit field operation"
2136	"'%Fs' : prototype must have parameter types"
2137    "empty character constant"
2138    "illegal to define an enumeration without any members"
2139	"type following '%s' is illegal"
2140	"parameter cannot be function type"
2141	"value out of range for enum constant"
2142	"function declarations differ, variable parameters specified only in one of them"
2143	"syntax error : missing '%Fs' before '%Fs'"
2144	"syntax error : missing '%Fs' before type '%Fs'"
2145	"syntax error : missing '%Fs' before identifier"
2146	"syntax error : missing '%Fs' before identifier '%Fs'"
2147	"'%Fs' : const array must be fully initialized"
2148	"array too large"
2149	"'%Fs' : named bit field cannot have zero width"
2150	"'%Fs' : bit field must have type 'int', 'signed int', or 'unsigned int'"
2151	"more than one language attribute"
2152	"'%Fs' : pointers to functions with different attributes"
2153	"hex constants must have at least one hex digit"
2154	"'%Fs' : does not refer to a segment name"

2156	"pragma must be outside function"
2157	"'%Fs' : must be declared before use in pragma list"
2158	"'%Fs' : is a function"
2159	"more than one storage class specified"
2160	"## cannot occur at the beginning of a macro definition"
2161	"## cannot occur at the end of a macro definition"
2162	"expected macro formal parameter"
2163	"'%Fs' : not available as an intrinsic function"
2164	"'%Fs' : intrinsic function not declared"
2165	"'%Fs' : cannot modify pointers to data"
2166	"lvalue specifies const object"
2167	"'%Fs' : too many actual parameters for intrinsic function"
2168	"'%Fs' : too few actual parameters for intrinsic function"
2169	"'%Fs' : intrinsic function, cannot be defined"
2170	"'%Fs' : not declared as a function, cannot be intrinsic"
2171	"'%Fs' : illegal operand"
2172	"'%Fs' : actual parameter is not a pointer : parameter %d"
2173	"'%Fs' : actual parameter is not a pointer : parameter %d, parameter list %d"
2174	"'%Fs' : actual parameter has type 'void' : parameter %d, parameter list %d"

2176	"static huge data not supported by '%Fs'"	 
2177	"constant too big"
2178	"'%Fs' : storage class for same_seg variables must be extern"
2179	"'%Fs' : was used in same_seg, but storage class is no longer extern"
2180	"controlling expression has type 'void'"

2182	"'%Fs' : has type 'void'"

2184	"illegal return of a 'void' value"
2185	"'%Fs' : illegal based allocation"
2186	"'%Fs' : illegal operand of type 'void'"
2187	"cast of near function pointer to far function pointer"
2188	"'%ld' : too big for wide character"
2189	"#error : %Fs"
2190	"first parameter list longer than second"
2191	"second parameter list longer than first"
2192	"parameter '%d' declaration different"
2193	"'%Fs' : already in a segment"
2194	"'%Fs' : is a text segment"
2195	"'%Fs' : is a data segment"
2197	"'%Fs' : too many actual parameters"
2198	"'%Fs' : too few actual parameters"
2199	"syntax error : found '%Fs (' at global scope. (was a declaration intended?)"
2200	"'%Fs' : function has already been defined"
2201	"'%Fs' : cannot export static declarations"
2202	"'%Fs' : not all control paths return a value"
2203	"delete operator cannot specify bounds for an array"
2204	"'%Fs' : parenthesized type definition"
2205	"'%Fs' : cannot initialize extern block scoped variables"
2206	"'%Fs' : typedef cannot be used for function definition"
2207	"'%Fs' in struct/union '%Fs' has a zero-sized array"	
2208	"'%Fs' : no members defined using this type"
2209	"type cast in __based construct must be (__segment)"
2210	"'%Fs' : must be near/far data pointer"
2211	"(__segment) applied to function identifier '%Fs'"
2212	"'%Fs' : __based not available for pointers to functions"
2213	"'%Fs' : illegal argument to __based"
2214	"pointers based on 'void' require the use of :>"
2215	":> operator only for objects based on 'void'"
2216	"'%Fs' cannot be used with '%Fs'"
2217	"'%Fs' must be used with '%Fs'"
2218	"type in __based construct must be 'void'"
2219	"syntax error : type qualifier must be after '*'"
2220	"warning treated as error - no object file generated"
2221	"'.' : left operand points to class/struct/union, use '->'" 
2222	"'->' : left operand has struct/union type, use '.'"	
2223	"left of '->%Fs' must point to class/struct/union"
2224	"left of '.%Fs' must have class/struct/union type"
2225    "'%Fs' : function allocation must be in a named segment"
2226	"syntax error : unexpected type '%Fs'"
2227	"left of '->%Fs' must point to class/struct/union"
2228	"left of '.%Fs' must have class/struct/union type"
2229	"%Fs '%Fs' has an illegal zero-sized array"
2230	"'%Fs' : indirection to different types"
2231	"'.' : left operand points to '%Fs', use '->'"
2232	"'->' : left operand has '%Fs' type, use '.'"

2234	"arrays of references are illegal"
2235	"';' in formal parameter list"
2236	"unexpected '%Fs' '%Fs'"
2237	"unexpected %Fs '%Fs'"
2238	"unexpected token[s] preceding '%s'"
2239	"unexpected token '%Fs' following declaration of '%Fs'"
2240	"unexpected '%Fs' following formal list. (only modifiers are allowed.)"
2241	"'%Fs' : member access is restricted"

2244	"'%Fs' : unable to resolve function overload"
2245	"nonexistent function '%Fs' specified as friend"
2246	"'%Fs' : illegal static data member in locally defined class"
2247	"'%Fs' not accessible because '%Fs' uses '%Fs' to inherit from '%Fs'"
2248	"'%Fs' : cannot access '%Fs' member declared in class '%Fs'"
2249	"'%Fs' : no accessible path to '%Fs' member declared in virtual base '%Fs'"
2250	"'%Fs' : ambiguous inheritance of '%Fs::%Fs'"

2252	"'%Fs' : pure specifier can only be specified for functions"
2253	"'%Fs' : pure specifier only applies to virtual function -- specifier ignored"
2254	"'%Fs' : pure specifier not allowed on friend functions"
2255	"'%Fs' : a friend function can only be declared in a class"
2256	"illegal use of friend specifier on '%Fs'"
2257	"p-code generation pragma not allowed without /Oq"
2258	"illegal pure syntax, must be '= 0'"
2259	"'%Fs' : illegal attempt to instantiate abstract class"
2260	"function pointer cast to a data pointer "
2261	"data pointer cast to a function pointer"
2262	"'%Fs' : cannot be destroyed"
2263	"function returns pointer based on __self"
2264	"'%Fs' : error in function definition or declaration; function not called"
2265	"'%Fs' : reference to a zero sized array is illegal"
2266	"'%Fs' : reference to a nonconstant bounded array is illegal"
2267	"'%Fs' : block scoped static functions are illegal"
2268	"'%Fs' : different const or volatile qualifiers"
2269	"'%Fs' : different ambient model than base class '%Fs'"
2270	"'%Fs' : modifiers not allowed on nonmember functions"
2271	"'%Fs' : new/delete cannot have formal list modifiers"
2272	"'%Fs' : modifiers not allowed on static member functions"
2273	"'%Fs' : illegal as right side of '->' operator"
2274	"'%Fs' : illegal as right side of '.' operator"
2275	"'%Fs' : illegal use of this type as an expression"
2276	"illegal address of bound member function expression"
2277	"'%Fs' : cannot take the address of a constructor"
2278	"'%Fs' : no function with C linkage found"
2279	"cannot use braces to initialize default arguments"
2280	"missing '{' before identifier '%Fs'?"
2281	"'%Fs' : is not a function, but contains <function returning>. '%Fs' is unexpected."
2282	"'%Fs' is followed by '%Fs'. (missing ','?)"
2283	"'%Fs' : pure specifier not allowed on un-named %Fs"

2290	"C++ '%Fs' syntax is reserved for future use"

2350	"'%Fs' is not a static member"
2351	"obsolete C++ constructor initialization syntax"
2352	"'%Fs::%Fs' : illegal call of non-static member function"
2353	"'%Fs' : improper use of constructor initializers"
2354	"'%Fs' : initialization of reference member requires a temporary variable"
2355	"'this' : can only be referenced inside non-static member functions"
2356	"initialization segment must not change during translation unit"

2360	"Initialization of '%Fs' is skipped by 'case' label"
2361	"Initialization of '%Fs' is skipped by 'default' label"
2362	"Initialization of '%Fs' is skipped by 'goto %Fs'"

2370	"'%Fs' : redefinition; different storage class"
2371	"'%Fs' : redefinition; different basic types"
2372	"'%Fs' : redefinition; different types of indirection"
2373	"'%Fs' : redefinition; different type modifiers"
2374	"'%Fs' : redefinition; multiple initialization"
2375	"'%Fs' : redefinition; different linkage"

2377	"'%Fs' : redefinition; typedef cannot be overloaded with any other symbol"
2378	"'%Fs' : redefinition; symbol cannot be overloaded with a typedef"
2379	"formal parameter %d has different type when promoted"
2380	"type[s] preceding '%Fs'. (constructor with return type, or illegal redefinition of current class-name?)"

2385	"'%Fs::%Fs' is ambiguous"
2386	"ambiguous conversion from '%Fs*' to '%Fs*'"
2387	"ambiguous conversion from '%Fs&' to '%Fs&'"

2390	"'%Fs' : incorrect storage class '%Fs'"

2400	"inline syntax error in '%Fs'; found '%Fs'"
2401	"'%Fs' : register must be base in '%Fs'"
2402	"'%Fs' : register must be index in '%Fs'"
2403	"'%Fs' : register must be base/index in '%Fs'"
2404	"'%Fs' : illegal register in '%Fs'"
2405	"illegal short forward reference with offset"
2406	"'%Fs' : name undefined in '%Fs'"
2407	"illegal 'float' register in '%Fs'"
2408	"illegal type on PTR operator in '%Fs'"
2409	"illegal type used as operator in '%s'"
2410	"'%Fs' : ambiguous member name in '%Fs'"
2411	"'%Fs' : illegal struct/union member in '%Fs'"
2412	"'%Fs' : case-insensitive label redefined"
2413	"'%Fs' : illegal align size"
2414	"illegal number of operands"
2415	"improper operand type"
2416	"'%Fs' : illegal opcode for processor"
2417	"divide by zero in '%Fs'"
2418	"'%Fs' : not in a register"
2419	"mod by zero in '%Fs'"
2420	"'%Fs' : illegal symbol in %Fs"
2421	"PTR operator used with register in '%Fs'"
2422	"illegal segment override in '%Fs'"
2423	"'%ld' : illegal scale"
2424	"'%Fs' : improper expression in '%Fs'"
2425	"'%Fs' : nonconstant expression in '%Fs'"
2426	"'%Fs' : illegal operator in '%Fs'"
2427	"'%Fs' : jump referencing label is out of range"	

2429	"'%Fs' : illegal far label reference"
2430	"more than one index register in '%Fs'"
2431	"illegal index register in '%Fs'"
2432	"illegal reference to 16-bit data in '%Fs'"
2433	"'%Fs' : '%Fs' not permitted on data declarations"
2434	"'%Fs' : cannot convert default argument from '%Fs' to '%Fs'"

2436	"'%Fs' : cannot initialize member functions"
2437	"'%Fs' : already initialized"
2438	"'%Fs' : cannot initialize static class data via constructor"
2439	"'%Fs' : member could not be initialized"
2440	"'%Fs' : cannot convert from '%Fs' to '%Fs'"

2442	"p-code expression too complex for setjmp or Catch"
2443	"operand size conflict"

2446	"'%Fs' : no conversion between '%Fs' and '%Fs'"
2447	"missing function header (old-style formal list?)"
2448	"'%Fs' : function-style initializer appears to be a function definition"

2450	"switch expression of type '%Fs' is illegal"
2451	"conditional expression of type '%Fs' is illegal"

2458	"'%Fs' : redefinition within definition"
2459	"'%Fs' : is being defined; cannot add as an anonymous member"
2460	"'%Fs' : uses '%Fs', which is being defined"
2461	"'%Fs' : constructor syntax missing formal parameters"
2462	"'%Fs' : cannot define a type in a 'new-expression'"
2463	"cannot define an anonymous type in a 'new-expression'"
2464	"'%Fs' : cannot use 'new' to allocate a reference"
2465	"cannot define an anonymous type inside parentheses"
2466	"cannot allocate an array of constant size 0"
2467	"illegal declaration of anonymous '%Fs'"

2500	"'%Fs' : '%Fs' is already a direct base class"
2501	"'%Fs' : missing decl-specifiers"
2502	"'%Fs' : too many access modifiers on the base class"
2503	"'%Fs' : base classes cannot contain zero-sized arrays"
2504	"'%Fs' : base class undefined"
2505	"'%Fs' : is not a legal base class"
2506	"'%Fs::%Fs' : ambiguous"
2507	"'%Fs' : too many virtual modifiers on the base class"
2508	"'%Fs' : access denied"
2509	"'%Fs' : member function not declared in '%Fs'"
2510	"'%Fs' : left of '::' must be a class/struct/union"
2511	"'%Fs' : overloaded member function not found in '%Fs'"
2512	"'%Fs' : no appropriate default constructor available"
2513	"'%Fs' : decl-specifier is missing a declarator before '='"
2514	"'%Fs' : class has no constructors"
2515	"'%Fs' : not in class '%Fs'"

2517	"'%Fs' : right of '::' is undefined"

2519	"cannot convert '%Fs *' to '%Fs *'"

2523	"'%Fs::~%Fs' : destructor tag mismatch"
2524	"'%Fs' : destructors must have a 'void' formal parameter list"

2527	"'%Fs' : array of references must be fully initialized"
2528	"illegal pointer to reference"
2529	"illegal reference to a reference"
2530	"'%Fs' : references must be initialized"
2531	"'%Fs' : reference to a bit field illegal"
2532	"'%s' : cannot modify references"
2533	"'%Fs' : constructors not allowed a return type"
2534	"'%Fs' : constructor cannot return a value"
2535	"'%Fs' : member function already defined or declared"
2536	"'%Fs::%Fs' : cannot specify explicit initializer for arrays"
2537	"'%Fs' : illegal linkage specification"
2538	"new : cannot specify initializer for arrays"
2539	"new : '%Fs' no default constructor to initialize arrays of objects"
2540	"nonconstant expression as array bound"
2541	"delete : cannot delete nonpointer objects"
2542	"'%Fs' : class object has no constructor for initialization"
2543	"expected ']' for operator '[]'"
2544	"expected ')' for operator '()'"
2545	"'%Fs' : unable to find overloaded operator"
2546	"'%Fs' : illegal mix of 'void' pointer with non-'void' pointer"
2547	"illegal cast of overloaded function"
2548	"'%Fs::%Fs' : missing default parameter for parameter %s"
2549	"user-defined conversion cannot specify a return type"

2551	"'void *' type needs explicit cast to non-'void' pointer type"
2552	"'%Fs' : non-aggregates cannot be initialized with initializer list"
2553	"no legal conversion of return value to return type '%Fs'"
2555	"'%Fs::%Fs' : overriding virtual function differs from '%Fs::%Fs' only by return type"
2556	"'%Fs' : overloaded functions only differ by return type"
2557	"'%Fs' : non-public members cannot be initialized without a constructor"
2558	"'%Fs' : no copy constructor available"
2559	"'%Fs' : no match for specified operator"
2560	"'%Fs' : overloaded function differs only by calling convention/memory model"
2561	"'%Fs' : function must return a value"
2562	"'%Fs' : 'void' function returning a value"
2563	"mismatch in formal parameter list"
2564	"formal/actual parameters mismatch in call through pointer to function"
2565	"'::%Fs' was previously declared as a global function"
2566	"overloaded function in conditional expression"

2568	"'%Fs' : unable to resolve function overload '%Fs'"
2569	"'%Fs' : union cannot be used as a base class"
2570	"'%Fs' : union cannot have base classes"
2571	"'%Fs' : union cannot have virtual function '%Fs'"
2572	"'%Fs::%Fs' : redefinition of default parameter : parameter %s"
2573	"'%Fs' : simple type cast must have exactly one expression"
2574	"'%Fs' : illegal static destructor declaration"
2575	"'%Fs' : only member functions and bases can be virtual"
2576	"'%Fs' : virtual used for static member function"
2577	"'%Fs' : destructor cannot return a value"

2579	"'%Fs::%Fs(%s)' : parameter list not sufficiently different to '%Fs::%Fs(%s)'"
2580	"redefinition of class name '%Fs'"
2581	"'%Fs' : static 'operator =' function is illegal"
2582	"'%Fs' : 'operator =' function is unavailable"
2583	"'%Fs' : illegal const/volatile 'this' pointer used for constructors/destructors"
2584	"'%Fs' : direct base '%Fs' is inaccessible; already a base of '%Fs'"
2585	"explicit conversion to '%Fs' is ambiguous"
2586	"incorrect user-defined conversion syntax : illegal indirections"
2587	"'%Fs' : illegal use of local variable as default parameter"
2588	"'::~%Fs' : illegal global destructor"
2589	"'%Fs' : illegal token on right side of '::'"
2590	"'%Fs' : ambiguous user-defined conversions in switch expression"
2591	"'%Fs' : ambiguous user-defined conversions in conditional expression"
2592	"no legal conversion of initialization expression to type '%Fs'"
2593	"'operator %Fs' is ambiguous"
2594	"'%Fs' : ambiguous conversions from '%Fs' to '%Fs'"
2595	"'%Fs' : qualified name already has a constructor"
2596	"'%Fs' : qualified name already has a destructor"
2597	"'%Fs' : does not specify an object"
2598	"linkage specification must be at global scope"
2599	"'%Fs' : local functions are not supported"
2601	"functions cannot be defined in local classes"
2602	"'%Fs::%Fs' is not a member of a base of '%Fs'"
2603	"illegal access declaration: '%Fs' is not a direct base of '%Fs'"
2604	"cannot declare %Fs access to %Fs member '%Fs::%Fs'"
2605	"overloaded functions '%Fs::%Fs' do not have same access"
2606	"'%Fs::%Fs': illegal private access declaration"
2607	"'%Fs' : cannot implicitly convert a '%Fs' to a non-const '%Fs'"
2608	"illegal reference cast - operand not an lvalue"

2610	"%Fs '%Fs' can never be instantiated; user defined constructor is required"
2611	"'%Fs' : illegal following '~' (expected identifier)"
2612	"trailing '%Fs' illegal in base/member initializer list"
2613	"trailing '%Fs' illegal in base class list"
2614	"'%Fs' : illegal member initialization: '%Fs' is not a base or member"
2615	"memory attribute must appear before class name in pointer to member"
2617	"'%Fs' : inconsistent return statement"
2618	"'%Fs' : inconsistent return statement"
2619	"union '%Fs' : can not have static member variable '%Fs'"
2620	"union '%Fs' : member '%Fs' has default constructor"
2621	"union '%Fs' : member '%Fs' has copy constructor"
2622	"union '%Fs' : member '%Fs' has assignment operator"
2623	"union '%Fs' : member '%Fs' has destructor"
2624	"'%Fs' : references to 'void' are illegal"
2625	"anonymous union did not declare any non-static data members"
2626	"anonymous union defines %Fs member '%Fs'"
2627	"member function defined in unnamed class"
2628	"'%Fs' followed by '%Fs' is illegal. (did you forget a ';'?)"
2629	"unexpected '%s ('"
2630	"'%Fs' found in what should be a comma separated list"
2631	"'%Fs' : destructors not allowed a return type"
2632	"'%Fs' followed by '%Fs' is illegal"
2633	"'%Fs' : 'inline' is the only legal storage class for constructors"
2634	"'&%Fs::%Fs' : pointer to reference member is illegal"
2635	"cannot convert a '%Fs*' to a '%Fs*'; conversion from a virtual base class is implied"
2636	"pointer to reference member is illegal"
2637	"'%s' : cannot modify pointers to data members"
2638	"'%Fs' : memory model modifier illegal on pointer to data member"
2639	"cannot use pointer to member expression &%Fs::%Fs - base '%Fs' is inherited as virtual"
2640	"cannot convert a pointer to member across a virtual inheritance path"
2641	"illegal pointer to member cast across virtual inheritance path"
2642	"cast to pointer to member must be from related pointer to member"
2643	"illegal cast from pointer to member"
2644	"basis class '%Fs' for pointer to member has not been defined"
2645	"no qualified name for pointer to member (found ':: *')"
2646	"global anonymous unions must be declared static"
2647	"'%Fs' : cannot dereference a '%Fs' on a '%Fs'"
2648	"'%Fs' : use of non-static member as default parameter"
2649	"'%Fs' : is not a '%Fs'"
2650	"'%Fs' : cannot be a virtual function"

2652	"'%Fs' : illegal copy constructor: first parameter must not be a '%Fs'"
2653	"'%Fs' : is not a class name"
2654	"'%Fs' : attempt to access member outside a member function"
2655	"'%Fs' : definition or redeclaration illegal in current scope"
2656	"'%Fs' : function not allowed as a bit field"
2657	"'%Fs::*' found a the start of a statement. (did you forget to specify a type?)"
2658	"multiple conversions : %Fs(%Fs) and %Fs::operator %Fs()"
2659	"'%Fs' : overloaded function as left operand"
2660	"'%Fs' : function does not take %d parameters"
2661	"'%Fs' : no overloaded function takes %d parameters"
2662	"'%Fs' : cannot convert 'this' pointer from '%Fs' to '%Fs'"
2663	"'%Fs' : %d overloads have no legal conversion for 'this' pointer"
2664	"'%Fs' : cannot convert parameter %d from '%Fs' to '%Fs'"
2665	"'%Fs' : %d overloads have no legal conversion for parameter %d"
2666	"'%Fs' : %d overloads have similar conversions"
2667	"'%Fs' : none of %d overload have a best conversion"
2668	"'%Fs' : ambiguous call to overloaded function"

2671	"'%Fs' : static member functions do not have 'this' pointers"
2672	"'%Fs' : new/delete member functions do not have 'this' pointers"
2673	"'%Fs' : global functions do not have 'this' pointers"
2674	"'%Fs' : no acceptable conversions from '%Fs' to '%Fs'"
2675	"unary '%Fs' : '%Fs' does not define this operator or a conversion to a type acceptable to the builtin operator"
2676	"binary '%Fs' : '%Fs' does not define this operator or a conversion to a type acceptable to the builtin operator"
2677	"binary '%Fs' : no global operator defined which takes type '%Fs' (or there is no acceptable conversion)"

2701	"'%Fs' : __oldcall function defined with varargs"	
2702	"'%Fs' : __try may not appear in termination block"	

2704	"'%Fs' : __va_start intrinsic only allowed in varargs"	
2705	"'%Fs' : illegal jump into __try scope"	

2707	"'%Fs' : bad context for intrinsic function"	

2710	"cannot delete a pointer to a const object"
2711	"cannot delete a pointer to a function"

2720	"'%Fs' : '%Fs' storage class specifier illegal on members"
2721	"'%Fs' : storage class specifier illegal between operator keyword and type"
2722	"'::%Fs' : illegal following operator command; use 'operator %Fs'"
2723	"'%Fs' : '%Fs' storage class specifier illegal on function definition"

2730	"'%Fs' : cannot be a base class of itself"

2732	"linkage specification contradicts earlier specification for %Fs"
2733	"second C linkage of overloaded function '%Fs' not allowed"
2734	"'%Fs' : non-extern const object must be initialized"
2735	"'%Fs' keyword is not permitted in formal parameter type specifier"
2736	"'%Fs' keyword is not permitted in cast"
2737	"'%Fs' : base class '%Fs' must be exported"

2750	"'%Fs' : 'const T' to 'T' : '%Fs' to '%Fs'"
2751	"'%Fs' : 'volatile T' to 'T' : '%Fs' to '%Fs'"
2752	"'%Fs' : 'const T *' to 'T *' : '%Fs' to '%Fs'"
2753	"'%Fs' : 'volatile T *' to 'T *' : '%Fs' to '%Fs'"
2754	"'%Fs' : 'const T **' to 'T **' : '%Fs' to '%Fs'"
2755	"'%Fs' : 'volatile T **' to 'T **' : '%Fs' to '%Fs'"
2756	"'%Fs' : 'memory model mismatch' : '%Fs' to '%Fs'"
2757	"'%Fs' : 'language modifier mismatch: '%Fs' to '%Fs'"
2758	"'%Fs' : must be initialized in constructor base/member initializer list"

2800	"'operator %Fs' cannot be overloaded"
2801	"'operator %Fs' must be a%Fs member"
2802	"static member 'operator %Fs' has no formal parameters"
2803	"'operator %Fs' must have at least one formal parameter of class type"
2804	"binary 'operator %Fs' has too many parameters"
2805	"binary 'operator %Fs' has too few parameters"
2806	"'operator %Fs' has too many formal parameters"
2807	"the second formal parameter to postfix 'operator %Fs' must be 'int'"
2808	"unary 'operator %Fs' has too many formal parameters"
2809	"'operator %Fs' has no formal parameters"
2810	"second formal parameter for 'operator delete' must be 'unsigned int'"
2811	"too many formal parameters for based form of 'operator delete'"
2812	"second formal parameter required for based form of 'operator delete'"
2813	"too many formal parameters for non-based 'operator delete'"
2814	"second actual parameter for based form of 'operator delete' must be '__based(void)*'"
2815	"first actual parameter for based form of 'operator delete' must be '__segment'"
2816	"alternative form of 'operator delete' must be a member"
2817	"return type for 'operator delete' must be 'void'"
2818	"incorrect return type for 'operator ->'"
2819	"recursive return type for 'operator ->'"
2820	"second formal parameter required for based form of 'operator new'"
2821	"first formal parameter to 'operator new' must be 'unsigned int'"
2822	"second formal parameter for __huge form of 'operator new' must be 'unsigned int'"
2823	"return type for based form of 'operator new' must be 'void __based(void)*'"
2824	"return type for 'operator new' must be 'void *'"
2825	"first formal parameter for huge form of 'operator new' must be 'unsigned long'"
2826	"second formal parameter required for __huge form of 'operator new'"
2827	"'operator %s' cannot be globally overridden with unary form"
2828	"'operator %s' cannot be globally overridden with binary form"
2829	"'operator %Fs' cannot have a variable parameter list"
2830	"only placement parameters to 'operator new' can have default values"
2831	"'operator %Fs' may not have default parameters"

2833	"'operator %Fs' is not a recognized operator or type"
2834	"'operator %Fs' must be globally qualified"
2835	"user-defined conversion '%Fs' takes no formal parameters"
2836	"cannot export '%Fs': a previous declaration did not export it"
2837	"'%Fs' : illegal local static variable in exported inline function"
2838	"illegal qualified name in member declaration"

2850	"#pragma hdrstop cannot be nested in a function or definition"
2851	"#pragma hdrstop required for /Yu command-line option without filename"
2852	"'%Fs' is not a valid precompiled header file"
2853	"'%Fs' is not a precompiled header file created with this compiler"
2854	"syntax error in #pragma hdrstop"
2855    "command-line option '%Fs' inconsistant with precompiled header"
2856	"#pragma hdrstop cannot be inside an #if block"
2857    "'#include' statement specified with the /Yc%Fs command-line option was not found in the source file"

2000	"UNKNOWN ERROR\n\t\tContact Microsoft Product Support Services"

		

1001	"INTERNAL COMPILER ERROR\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Product Support Services"

1003	"error count exceeds %d; stopping compilation"
1004	"unexpected end of file found"
1005	"string too big for buffer"
1006	"write error on compiler-generated file"
1007	"unrecognized flag '%Fs' in '%Fs'"
1008	"no input file specified"
1009	"compiler limit : macros nested too deeply"
1010	"unexpected end of file while looking for precompiled header directive"
1011	"compiler limit : '%Fs' : macro definition too big"
1012	"unmatched parenthesis : missing '%c'"
1013	"compiler limit : too many open parentheses"
1014    "too many include files : depth = %d"
1015	"compiler limit : too many segments"
1016	"#if[n]def expected an identifier"
1017	"invalid integer constant expression"
1018	"unexpected #elif"
1019	"unexpected #else"
1020	"unexpected #endif"
1021	"invalid preprocessor command '%Fs'"
1022	"expected #endif"
1023	"cannot open source file '%Fs'"
1024	"cannot open include file '%Fs'"
1025	"compiler terminated by user"	
1026	"parser stack overflow, program too complex"
1027	"DGROUP data allocation exceeds 64K"	
1028	"'%s' : segment allocation exceeds 64K" 
1029	"there are > 512 bytes of arguments"
1030	"there are > 512 bytes of local variables"
1031	"compiler limit : function calls nested too deeply"	
1032	"cannot open object code listing file '%s'"	

1035	"expression too complex; simplify expression"	

1037	"cannot open object file '%s'"	
1038	"compiler limit : '%Fs' : control flow state too complex; simplify function"

1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1045	"compiler limit : linkage specifications nested too deeply"
1046	"compiler limit : %Fs nested too deeply"
1047	"limit of %Fs exceeded at '%Fs'"
1048	"unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1050	"'%s' : code segment too large"

1052	"compiler limit : #if or #ifdef blocks nested too deeply"
1053	"compiler limit : struct/union nested too deeply"	
1054	"compiler limit : initializers nested too deeply"
1055	"compiler limit : out of keys"
1056	"compiler limit : out of macro expansion space"
1057	"unexpected end of file in macro expansion"
1058	"compiler limit : too many formal arguments"
1059	"compiler is out of near heap space"
1060	"compiler is out of far heap space"
1061	"compiler limit : blocks nested too deeply"	
1062	"error while writing to preprocessor output file"
1063	"compiler limit : compiler stack overflow"
1064	"compiler limit : token overflowed internal buffer"
1065	"compiler limit : out of tags"
1066	"compiler limit : decorated name length exceeded"

1068	"cannot open file '%Fs'"
1069	"write error on file '%s'"	
1070	"mismatched #if/#endif pair in file '%Fs'"
1071	"unexpected end of file found in comment"
1072	"'%Fs' : cannot read file"

1090	"data allocation exceeds 64K"		

1126	"'%Fs' : automatic allocation exceeds %s" 
1127	"'%Fs' : segment redefinition"

1500	"'%Fs' : cannot open inline function definition file"
1501	"compiler limit : too many temporary variables"
1502	"inline member-function definition missing '}'"
1503	"default parameter definition missing ',' or ')'"
1504	"type still ambiguous after parsing %d tokens"
1505	"unrecoverable parser lookahead error"
1506	"unrecoverable block scoping error"
1507	"previous user errors and subsequent error recovery halt further compilation"

1852	"'%Fs' is not a valid precompiled header file (C2852)"
1853	"'%Fs' is not a precompiled header file created with this compiler (C2853)"
1855	 "command-line option '%Fs' inconsistent with precompiled header (C2855)"

1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Product Support Services"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\olethunk\ole16\tools\rcqq.err ===
/* SCCSWHAT( "@(#)c1.err	2.29 88/02/25 18:18:00	" ) */
						/* fatals */

1001	"Internal Compiler Error\n\t\t(compiler file '%s', line %d)\n\t\tContact Microsoft Technical Support"
1002	"out of heap space"
1003	"error count exceeds %d; stopping compilation"
1004	"unexpected EOF"
1005	"string too big for buffer"
1006	"write error on compiler intermediate file"
1007	"unrecognized flag '%s' in '%s'"
1008	"no input file specified"
1009	"compiler limit : macros too deeply nested"
1010	"compiler limit : macro expansion too big"
1012	"bad parenthesis nesting - missing '%c'"
1013	"cannot open source file '%s'"
1014	"too many include files"
1015	"cannot open include file '%s'"
1016	"#if[n]def expected an identifier"
1017	"invalid integer constant expression"
1018	"unexpected '#elif'"
1019	"unexpected '#else'"
1020	"unexpected '#endif'"
1021	"bad preprocessor command '%s'"
1022	"expected '#endif'"
1023	"no int size specified"
1024	"no ptr size specified"
1025	"no function size specified"
1026	"parser stack overflow, please simplify your program"
1027	"DGROUP data allocation exceeds 64K"	/* QC, c23 */
1028	"%s segment allocation exceeds 64K"	/* QC */
1031	"compiler limit : function calls too deeply nested"	/* QC, c23 */
1032	"cannot open object listing file '%s'"			/* QC, c23 */
1035	"expression too complex, please simplify"		/* QC, c23 */
1037	"cannot open object file '%s'"					/* QC, c23 */
1041	"cannot open compiler intermediate file - no more files"
1042	"cannot open compiler intermediate file - no such file or directory"
1043	"cannot open compiler intermediate file"
1044	"out of disk space for compiler intermediate file"
1045	"floating point overflow"
1047	"too many %s flags, '%s'"
1048	"unknown option '%c' in '%s'"
1049	"invalid numerical argument '%s'"
1052	"too many #if/#ifdef's"
1053	"compiler limit : struct/union nesting"
1054	"compiler limit : initializers too deeply nested"
1055	"compiler limit : out of keys"
1056	"compiler limit : out of macro expansion space"
1057	"unexpected EOF in macro expansion (missing ')'?)"
1059	"out of near heap space"
1060	"out of far heap space"
1061	"compiler limit : blocks too deeply nested"	/* QC */
1062	"error writing to preprocessor output file"
1063	"compiler limit : compiler stack overflow"	/* QC */
1064	"compiler limit : identifier overflowed internal buffer"
1065	"compiler limit : declarator too complex"
1000	"UNKNOWN FATAL ERROR\n\t\tContact Microsoft Technical Support"

						/* errors */
	
2001	"newline in constant"
2002	"out of macro actual parameter space"
2003	"expected 'defined id'"
2004	"expected 'defined(id)'"
2005	"#line expected a line number, found '%s'"
2006	"#include expected a file name, found '%s'"
2007	"#define syntax"
2008	"'%c' : unexpected in macro definition"
2009	"reuse of macro formal '%s'"
2010	"'%c' : unexpected in formal list"
2011	"'%s' : definition too big"
2012	"missing name following '<'"
2013	"missing '>'"
2014	"preprocessor command must start as first non-whitespace"
2015	"too many chars in constant"
2016	"no closing single quote"
2017	"illegal escape sequence"
2018	"unknown character '0x%x'"
2019	"expected preprocessor command, found '%c'"
2020	"bad octal number '%c'"
2021	"expected exponent value, not '%c'"
2022	"'%ld' : too big for char"
2023	"divide by 0"
2024	"mod by 0"
2025	"'%s' : enum/struct/union type redefinition"
2026	"'%s' : member of enum redefinition"
2028	"struct/union member needs to be inside a struct/union"
2029	"'%Fs' : bit-fields only allowed in structs"
2030	"'%Fs' : struct/union member redefinition"
2031	"'%Fs' : function cannot be struct/union member"
2032	"'%Fs' : base type with near/far/huge not allowed"
2033	"'%Fs' : bit-field cannot have indirection"
2034	"'%Fs' : bit-field type too small for number of bits"
2035	"enum/struct/union '%Fs' : unknown size"
2036	"left of '%s%s' must have a struct/union type"
2037	"left of '%s' specifies undefined struct/union '%Fs'"
2038	"'%s' : not struct/union member"
2039	"'->' requires struct/union pointer"
2040	"'.' requires struct/union name"
2042	"signed/unsigned keywords mutually exclusive"
2043	"illegal break"
2044	"illegal continue"
2045	"'%s' : label redefined"
2046	"illegal case"
2047	"illegal default"
2048	"more than one default"
2050	"non-integral switch expression"
2051	"case expression not constant"
2052	"case expression not integral"
2053	"case value %d already used"
2054	"expected '(' to follow '%Fs'"
2055	"expected formal parameter list, not a type list"
2056	"illegal expression"
2057	"expected constant expression"
2058	"constant expression is not integral"
2059	"syntax error : '%s'"
2060	"syntax error : EOF"
2061	"syntax error : identifier '%s'"
2062	"type '%s' unexpected"
2063	"'%s' : not a function"
2064	"term does not evaluate to a function"
2065	"'%s' : undefined"
2066	"cast to function returning . . . is illegal"
2067	"cast to array type is illegal"
2068	"illegal cast"
2069	"cast of 'void' term to non-void"
2070	"illegal sizeof operand"
2071	"'%Fs' : bad storage class"
2072	"'%Fs' : initialization of a function"
2073	"'%Fs' : cannot initialize array in function"
2074	"'%Fs' : cannot initialize struct/union in function"
2075	"'%Fs' : array initialization needs curly braces"
2076	"'%Fs' : struct/union initialization needs curly braces"
2077	"non-integral field initializer '%Fs'"
2078	"too many initializers"
2079	"'%Fs' uses undefined struct/union '%Fs'"
2082	"redefinition of formal parameter '%Fs'"
2083	"array '%Fs' already has a size"
2084	"function '%Fs' already has a body"
2085	"'%Fs' : not in formal parameter list"
2086	"'%Fs' : redefinition"
2087	"'%Fs' : missing subscript"
2088	"use of undefined enum/struct/union '%s'"
2089	"typedef specifies a near/far function"
2090	"function returns array"
2091	"function returns function"
2092	"array element type cannot be function"
2093	"cannot initialize a static or struct with address of automatic vars"
2094	"label '%Fs' was undefined"
2095	"'%Fs' : actual has type void : parameter %d"
2096	"struct/union comparison illegal"
2097	"illegal initialization"
2098	"non-address expression"
2099	"non-constant offset"
2100	"illegal indirection"
2101	"'&' on constant"
2102	"'&' requires lvalue"
2103	"'&' on register variable"
2104	"'&' on bit-field ignored"
2105	"'%s' needs lvalue"
2106	"'%s' : left operand must be lvalue"
2107	"illegal index, indirection not allowed"
2108	"non-integral index"
2109	"subscript on non-array"
2110	"'+' : 2 pointers"
2111	"pointer + non-integral value"
2112	"illegal pointer subtraction"
2113	"'-' : right operand pointer"
2114	"'%s' : pointer on left; needs integral right"
2115	"'%s' : incompatible types"
2116	"'%s' : bad %s operand"
2117	"'%s' : illegal for struct/union"
2118	"negative subscript"
2119	"'typedefs' both define indirection"
2120	"'void' illegal with all types"
2121	"typedef specifies different enum"
2122	"typedef specifies different struct"
2123	"typedef specifies different union"
2125	"%Fs : allocation exceeds 64K"		/* QC, c23 */
2126	"%Fs : auto allocation exceeds %s"	/* QC, c23 */
2127	"parameter allocation exceeds 32K"	/* QC, c23 */
2130	"#line expected a string containing the file name, found '%s'"
2131	"attributes specify more than one near/far/huge"
2132	"syntax error : unexpected identifier"
2133	"array '%Fs' : unknown size"
2134	"'%Fs' : struct/union too large"
2135	"missing ')' in macro expansion"
2137	"empty character constant"
2138	"unmatched close comment '*/'"
2139	"type following '%s' is illegal"
2140	"argument type cannot be function returning . . ."
2141	"value out of range for enum constant"
2142	"ellipsis requires three periods"
2143	"syntax error : missing '%s' before '%s'"
2144	"syntax error : missing '%s' before type '%Fs'"
2145	"syntax error : missing '%s' before identifier"
2146	"syntax error : missing '%s' before identifier '%s'"
2147	"unknown size"
2148	"array too large"
2149	"'%Fs' : named bit-field cannot have 0 width"
2150	"'%Fs' : bit-field must have type int, signed int, or unsigned int"
2151	"more than one cdecl/fortran/pascal attribute specified"
2152	"'%s' : pointers to functions with different attributes"
2153	"hex constants must have at least 1 hex digit"
2154	"'%s' : does not refer to a segment"
2155	"'%s' : already in a segment"
2156	"pragma must be at outer level"
2157	"'%s' : must be declared before use in pragma list"
2158	"'%s' : is a function"
2159	"more than one storage class specified"
2160	"## cannot occur at the beginning of a macro definition"
2161	"## cannot occur at the end of a macro definition"
2162	"expected macro formal parameter"
2163	"'%s' : not available as an intrinsic"
2164	"'%s' : intrinsic was not declared"
2165	"'%s' : cannot modify pointers to data"
2166	"lval specifies 'const' object"
2167	"'%Fs' : too many actual parameters for intrinsic"
2168	"'%Fs' : too few actual parameters for intrinsic"
2169	"'%Fs' : is an intrinsic, it cannot be defined"
2170	"'%s' : intrinsic not declared as a function"
2171	"'%s' : bad operand"
2172	"'%Fs' : actual is not a pointer : parameter %d"
2173	"'%Fs' : actual is not a pointer : parameter %d, parameter list %d"
2174	"'%Fs' : actual has type void : parameter %d, parameter list %d"
2175	"'%Fs' : unresolved external"	/* QC */
2176	"static far data not supported"	/* QC */
2177	"constant too big"
2178	"'%s' : storage class for same_seg variables must be 'extern'"
2179	"'%Fs' : was used in same_seg, but storage class is no longer 'extern'"
2180	"controlling expression has type 'void'"
2181	"pragma requires command line option '%s'"	/* QC */
2182	"'%Fs' : 'void' on variable"
2183	"'%Fs' : 'interrupt' function must be 'far'"
2184	"'%Fs' : '%s' function cannot be 'pascal/fortran'"
2186	"'%Fs' : 'saveregs/interrupt' modifiers mutually exclusive"
2187	"cast of near function pointer to far function pointer"
2188	"#error : %s"
2190	"'%s' : is a text segment"
2191	"'%s' : is a data segment"
2192	"'%s' : function has already been defined"
2000	"UNKNOWN ERROR\n\t\tContact Microsoft Technical Support"

						/* warnings */
	
4001	"macro '%s' requires parameters"
4002	"too many actual parameters for macro '%s'"
4003	"not enough actual parameters for macro '%s'"
4004	"missing close parenthesis after 'defined'"
4005	"'%s' : redefinition"
4006	"#undef expected an identifier"
4009	"string too big, trailing chars truncated"
4011	"identifier truncated to '%s'"
4012	"float constant in a cross compilation"
4013	"constant too big"
4014	"'%Fs' : bit-field type must be unsigned"
4015	"'%Fs' : bit-field type must be integral"
4016	"'%s' : no function return type, using 'int' as default"
4017	"cast of int expression to far pointer"
4020	"'%Fs' : too many actual parameters"
4021	"'%Fs' : too few actual parameters"
4022	"'%Fs' : pointer mismatch : parameter %d"
4024	"'%Fs' : different types : parameter %d"
4025	"function declaration specified variable argument list"
4026	"function was declared with formal argument list"
4027	"function was declared without formal argument list"
4028	"parameter %d declaration different"
4029	"declared parameter list different from definition"
4030	"first parameter list is longer than the second"
4031	"second parameter list is longer than the first"
4032	"unnamed struct/union as parameter"
4033	"function must return a value"
4034	"sizeof returns 0"
4035	"'%Fs' : no return value"
4036	"unexpected formal parameter list"
4037	"'%Fs' : formal parameters ignored"
4038	"'%Fs' : formal parameter has bad storage class"
4039	"'%Fs' : function used as an argument"
4040	"near/far/huge on '%Fs' ignored"
4041	"formal parameter '%s' is redefined"
4042	"'%Fs' : has bad storage class"
4044	"huge on '%Fs' ignored, must be an array"
4045	"'%s' : array bounds overflow"
4046	"'&' on function/array, ignored"
4047	"'%s' : different levels of indirection"
4048	"array's declared subscripts different"
4049	"'%s' : indirection to different types"
4051	"data conversion"
4052	"different enum types"
4053	"at least one void operand"
4060	"conversion of long address to short address"	/* QC, c23 */
4061	"long/short mismatch in argument : conversion supplied"	/* QC, c23 */
4062	"near/far mismatch in argument : conversion supplied"	/* QC, c23 */
4067	"unexpected characters following '%s' directive - newline expected"
4068	"unknown pragma"
4071	"'%Fs' : no function prototype given"
4074	"non standard extension used - '%s'"
4075	"size of switch expression or case constant too large - converted to int"
4076	"'%s' : may be used on integral types only"
4077	"unknown check_stack option"
4079	"unexpected token '%s'"
4080	"expected 'identifier' for segment name, found '%s'"
4081	"expected a comma, found '%s'"
4082	"expected an identifier, found '%s'"
4083	"expected '(', found '%s'"
4084	"expected a pragma keyword, found '%s'"
4085	"expected [on | off]"
4086	"expected [1 | 2 | 4]"
4087	"'%Fs' : declared with 'void' parameter list"
4088	"'%Fs' : pointer mismatch : parameter %d, parameter list %d"
4089	"'%Fs' : different types : parameter %d, parameter list %d"
4090	"different 'const' attributes"
4091	"no symbols were declared"
4092	"untagged enum/struct/union declared no symbols"
4093	"unescaped newline in character constant in non-active code"
4094	"unexpected newline"
4095	"expected ')', found '%s'"
4096	"huge treated as far"		/* QC */
4098	"void function returning a value"
4099	"expected ')', (too many arguments?)"
4100	"'%Fs' : unreferenced formal parameter"
4101	"'%Fs' : unreferenced local variable"
4102	"'%Fs' : unreferenced label"
4103	"'%Fs' : function definition used as prototype"
4104	"'%s' : near data in same_seg pragma, ignored"
4105	"'%Fs' : code modifiers only on function or pointer to function"
4106	"pragma requires integer between 1 and 127"
4107	"pragma requires integer between 15 and 255"
4108	"pragma requires integer between 79 and 132"
4109	"unexpected identifier '%s'"
4110	"unexpected token 'int constant'"
4111	"unexpected token 'string'"
4112	"macro name '%s' is reserved, %s ignored"
4113	"function parameter lists differed"
4000	"UNKNOWN WARNING\n\t\tContact Microsoft Technical Support"
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\oleui\olecnfg.rtf ===
{\rtf1\ansi \deff4\deflang1033{\fonttbl{\f4\froman\fcharset0\fprq2 Times New Roman;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0; \red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar  \f4\fs20 \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\widctlpar \f4\fs20 \sbasedon0\snext15 footnote text;}{\*\cs16 \additive\super \sbasedon10 footnote reference;}}{\info{\author Bruce Mansfield}{\creatim\yr1996\mo5\dy8\hr10\min55} {\version1}{\edmins678}{\nofpages0}{\nofwords0}{\nofchars0}{\vern49221}}\widowctrl\ftnbj\aenddoc\formshade \fet0\sectd \linex0\endnhere {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain  \widctlpar \f4\fs20 {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PROPPAGE1}} This is the initial property page of the top property sheet. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PROPERTIESBUTTON}} The Properties... button invokes the property sheet for the currently selected application.  The property sheet may also be invo ked by double clicking on the selected application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASBROWSEBTN}} Rather than typing in the name of the user under whose identity this application is to run, this Browse...  button maybe used to browse for the approproate user.  It may be used to scan for users on this and all connected domains. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ATBITSCHECK}} This check box determines whether the application  is to be run where the data for the object being invoked is located.  This is commonly known as AtBits activation, because the application is launched on the machine where the bits of the data file are located. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNREMOTECK}} Use this check box to force the application to be run on a remote machine.  If this is checked then a valid m achine name must be entered into the associated edit box just below this check box.  This can be done either manually or via the browse button. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTACCESSSECURITY}} Default Access Permissions defines those groups and users who are permitted to access COM/DCOM applications runnning  on this machine.  Using the Edit Default... button invokes the Access Control List Editor through which the user may add/remove/modify those users and groups who may access or are denied access to  COM/DCOM applications running on this machine. \par \pard \widctlpar \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERLISTBOX}} This lists the COM servers registered on this machine.  A list entry is the title for that server, or its AppID if the title is blank. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNLOCALLYCK}} Check this if the application is to run locally. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNREMOTEEDIT}} Enter the name of the remote machine where the application is to run. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ENABLEDCOMCK}} In order for Distributed COM to be enabled on this machine this box must be checked.  If it is not checked then remote clients may not activate DCOM  servers on this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REFTRACKING}} Check this box if additional security for reference tracking in legacy applications is desired. .  This capability means DCOM will prevent malicous user s from releasing objects.  However, it is quite expensive.  The authentication level cannot be set to (None) if this is checked. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTAUTHLEVEL}} Use this combination box to select the default RPC authentication level for COM/DCOM calls. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTIMPERLEVEL}} Use this combination box to select the default RPC impersonation level for COM/DCOM calls. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_ACCESSPERMISSIONBTN}}  Use this button to edit the list of users and groups who are either granted access permission to this application or who are denied access permission. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_LAUNCHPERMISSIONBTN}} Use this button to edit the list of users and groups who are either granted launch permission to this application or who are denied launch  permission. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_CONFIGURATIONPERMISSIONBTN}} Use this button to edit the list of users and groups who are allowed to read/modify registry configuration information for this applcation.   The Security Descriptor built by this edit session will get written to the AppID key for this application as well as each CLSID key, as well as all of its subkeys, for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTACCESSRADIO}} Check this radio button if the list of users/groups allowed to access this application should be determined via the Default Access Permissions .  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to access or are denied access to this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTLAUNCHRADIO}} Check this radio button if the list of users/groups allowed to launch this application should be determined via the Default Launch Permissions .  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to launch or are denied launch of this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_DEFAULTCONFIGURATIONRADIO}} Check this radio button if the list of users/groups allowed to read/modify registry information for this application  should be determined by the Default Configuraton Permissions.  If this radio button is not checked, then the user may use the edit button to the right to edit the list of users/groups permitted to read/modify registry information for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_INTERACTIVEUSERRADIO}} Check this radio button if the application is to run as the interactive user. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_LAUNCHINGUSERRADIO}} Check this radio button if the application is to run with the identify of the client; that is,  with the security identity of the launching user. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASUSERRADIO}} Select this radio button if the application is to be launched with the identity of  the user specified below. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SYSTEMACCOUNTRADIO}} Check this radio button if the application service is to be run as LocalSystem.  This is only meaningful for a DCOM application which is  to be run as a Windows NT service.  If the application is not a service, this radio button is disabled.  Note that the application must already be registered in the Service Control Manager database. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASUSEREDIT}} Enter the domain and account name of the user under whose identity this application is to run.  This should be entered in the form <domain>\\ <user>.  The domain may be any valid domain or the name of this machine.  If <domain> is absent then it defaults to this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASPASSWORDEDIT}} Enter the password of the user under whose identity this application is to run.  It is permissible for the password to be blank; howeever, t his will work only if the domain account for the user also has a blank password. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNASCONFIRMEDIT}} Re-enter the password of the user under whose identity this application is to run.  This edit box is used simply to confirm  the password.  It is a safety feature. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTLAUNCHSECURITY}} Default Launch Permissions defines those groups and users who are permitted to launch  COM/DCOM applications supported on this machine.  Using the Edit Default... button invokes the Access Control List Editor through which the user may add/remove/modify those users and groups who may launch or are denied launch of  COM/DCOM applications on  this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITDEFAULTCONFIGURATIONSECURITY}} Default Configuration Permissions defines those groups and users who are permitted to read/modify registry configuraton  information for COM/DCM applications.  Using the Edit Default... button invokes the Access Control List Editor through which the user may define which users and groups have what access to COM/DCOM registry information.   The Security Descriptor returned by the ACL editor is written to HKEY_CLASSES_ROOT and all of its subkeys. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_TERMINATEBTN}} Use this button to terminate the selected application in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_STARTBTN}} Use this button to (re)start the selected service in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_PAUSEBTN}} Use this button to pause the selected service in the above list box. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REMOTEMACHINE}} If the application is to be run on a remote machine, this is the name of that remote machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERNAME}} The name of this application.  This is the same as the unnamed value in the registry on the AppID key for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERPATH}} This is the executable file path for this application. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_SERVERTYPE}} This is the type of this application.  This will be either \ldblquote local server, \ldblquote local service\rdblquote  or \ldblquote remote server \rdblquote . \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_RUNNINGINSTANCES}} This is a list of the instances of this application (server or service) currently running on this machine. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITACCESSRADIO}} Enable this radio button in order to edit the access permissions for this application.  Otherwise the Default Access Permissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITLAUNCHRADIO}} Enable this radio button in order to edit the launch permissions for this application.  Otherwise the Default Launch Permissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_EDITCONFIGURATIONRADIO}} Enable this radio button in order to edit the configuration permissions for this application.  Otherwise the Default Configuration P ermissions will be used. \par \page {\cs16\super #{\footnote \pard\plain \s15\widctlpar \f4\fs20 {\cs16\super #} IDH_REMOTEBROWSEBTN}} You may use this button to browse for the name of the desired remote machine rather than typing it in. \par }
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\oleui\version.txt ===
#ifndef _MAC
/////////////////////////////////////////////////////////////////////////////
//
// Version
//

//VS_VERSION_INFO VERSIONINFO
// FILEVERSION 1,0,0,1
// PRODUCTVERSION 1,0,0,1
// FILEFLAGSMASK 0x3fL
//#ifdef _DEBUG
// FILEFLAGS 0x1L
//#else
// FILEFLAGS 0x0L
//#endif
// FILEOS 0x4L
// FILETYPE 0x1L
// FILESUBTYPE 0x0L
//BEGIN
//    BLOCK "StringFileInfo"
//    BEGIN
//        BLOCK "040904b0"
//        BEGIN
//            VALUE "CompanyName", "\0"
//            VALUE "FileDescription", "OLE Configuration UI\0"
//            VALUE "FileVersion", "1, 0, 0, 1\0"
//            VALUE "InternalName", "OLEUI\0"
//            VALUE "LegalCopyright", "Copyright (c) 1996\0"
//            VALUE "OriginalFilename", "OLEUI.EXE\0"
//            VALUE "ProductName", "OLE Configuration Application\0"
//            VALUE "ProductVersion", "1, 0, 0, 1\0"
//        END
//    END
//    BLOCK "VarFileInfo"
//    BEGIN
//        VALUE "Translation", 0x409, 1200
//    END
//END

// The following conforms to Windows NT version resources
#include <winver.h>
#include <ntverp.h>
#define VER_FILETYPE                VFT_APP
#define VER_FILESUBTYPE             VFT2_UNKNOWN
#define VER_FILEDESCRIPTION_STR     "Distributed COM Configuration"
#define VER_INTERNALNAME_STR        "dcomcnfg.exe"
#define VER_ORIGINALFILENAME_STR    "dcomcnfg.exe"
#include <common.ver>

#endif    // !_MAC
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\async\layout\test\test.doc ===
Microsoft Word Document MSWordDoc Word.Document.6Microsoft Highlighter ToolHighlighter Tool Dean Hachamovitch Smarter than the average scrollbar Normal susia Microsoft Word for Windows 95Paintbrush Picture PBrush PBrush0 0 391 218Paintbrush Picture PBrush PBrush0 0 289 69Paintbrush Picture PBrush PBrush0 0 467 215 TITLE  Highlighter Tool Program Mgr  AUTHOR  Dean Hachamovitch Summary Word allows the user to  highlight  any selection in a document and quickly navigate between highlighted pieces of a document. This feature complements annotations, revision marking, and routing as a simple workgroup feature, and makes Word a nicer Mail editor as well.  EMBED PBrush   Word gets a highlighter Justification When a paper document is routed, marking parts of interest for other people is easy. People use a colored marker (highlighter) or something with the same effect (post-it notes pointing to text, folded page corners, etc.). When a document is shared electronically, marking interesting parts for recipients is much harder. Annotations and revision marking, while easy to navigate, are not friendly ways to mark a document s highlights. The callout tool requires Page Layout view and tedious, manual navigation.  Users will share more documents electronically with Word 95, especially if Word is their Mail editor. Rather than marking off important parts of forwarded email with *** and --->, users could just  highlight  parts of the message. A user could mark off parts of a document as  under construction  for quick navigation. Giving all users a quick, intuitive, and visually compelling way to mark important parts of a document and allowing readers a way to navigate quickly between marked off ranges is important. Description This feature is basically a nice UI onto Annotations that have no text and show no annoying annotation mark when viewed. Annotations already arbitrate nicely between multiple users so we get the workgroup aspect for free. (It also uses background shading of text already implemented in Word 6 for field shading and also used in Word 95 for spell checking.)  The user needs to be able to:  highlight and un-highlight text navigate from highlight to highlight adjust options (printing, color of highlight) Highlighting Text The command ToolsHighlight is a soft mode (like CopyFormat when it is double clicked; selection, scrolling and window manipulation are allowed, but other user actions exit the mode). When invoked, the menu command is checked and the toolbar button stays in the down state until the user exits the mode. While ToolsHighlight is active, the I-beam changes to show that selections will be highlighted:  EMBED PBrush   Note that all selection cursors should change, not just the I-beam (specifically, the NE-arrow that appears when the mouse pointer is in the selection bar on the left edge of the document.) We will work with a graphics designer on a real icon. Word s UI refers to this attribute as  highlighting. To un-highlight a selection, the user drags the highlighter tool over the selection again. We can change the I-beam over highlighted regions to imply this behavior, as well as phrase the tooltip as  Apply or remove highlighting.  (There s no terribly obvious way to un-highlight a selection. If this UI usability test poorly, an alternative might be to leave a small unnumbered annotation character in the main text that the user could delete in order to remove the highlight.)  By default, this command should appear on the Tools menu. (If we don t ship with this command on the toolbar or menu, no one will find it.) This command would be handy on the toolbar when Word is the Mail Editor (it could replace the two column text button, which will probably not be used frequently in email). We probably don t want to reopen default toolbar assignments for Office at this time.  Providing a simple UI for inserting an annotation along with the highlighting (e.g. double clicking the tool makes Word insert an annotation for each selection the user makes) is not difficult. Annotations are an underrated workgroup feature as it is; this marginal UI work could increase awareness so that users are more receptive to it in Office 96. This is not a high priority. An interesting case is multiple users highlighting the same text. Word should do whatever is cheapest (which is, based on preliminary discussions with development, letting the later highlighter win):   EMBED PBrush   If a reader wants to see only one user s highlighting, the reader would go to ViewAnnotations and choose to view only one reviewer s marks at a time. If the user has a black/white printer, different users  highlighting is indistinguishable. (We should do as much as revision marking does; on screen, the colors are different.)  Navigation Highlighted text is added to the Goto dialog; the details follow Annotations exactly. The preferred UI follows from the spec for Navigation Tools, specifically the Scroll by Object section. Basically, the page down/up controls that Word 6 places at the bottom of the scroll bar in Page Layout view are available in all views and can scroll the user to different  things  (e.g. headings) in the document. As soon as Word determines that a document has highlighting in it, this control would adjust to allow the user to move between Highlights. (The screen mock-up on the summary page shows this.)  Scenario: an executive gets a document in mail and is told that her minions have already highlighted it for her. The executive starts scrolling through to find the important pieces, notices the control on the scroll bar, and finds that Word has automatically adjusted its behavior for the task at hand. Downside: if the user prefers page scrolling, this behavior is annoying. At the very least, highlighted text, if it exists in a document, is another option in this navigation tool. Options ToolsOptionsRevisions would get another color dropdown representing the user s preference for the background (highlight) color. Because we treat highlighting as a special annotation, the print option already exists. (If it s important enough, we could add a separate checkbox for it.)  Issue Navigation fallback if  Scrolling by Object  is cut. Platform Other than scrollbars (see the Navigation Tools spec) there is nothing unique about Chicago v NT v Mac for this feature.  International Is highlighting a North American thing? Are there locales that would prefer some other formatting that could be suppressed as easily (e.g. a colored change bar by the paragraph, or a colored underline)?  Visual Basic ToolsHighlight looks like another action that can be applied to a selection (like Bold). For navigation, we should expose Highlighted text in the Goto dialog.   User Ed This belongs with workgroup, sharing documents, annotations, revision marking.  Q & A Why don t we just do character shading already if we do this?  The marginal development cost for implementing, testing, localizing, documenting, etc. a UI just isn t worth what it buys us with respect to our goals. Besides, highlighting is a more mainstream, user-focused application of the feature. Users who want character shading will work around this feature for it. Users who would take advantage of a highlighter would not invest in (probably) character shading to get it. Changes 24 Feb 94 First Spec dhach Word 7 Spec  SUBJECT   TITLE  Highlighter Tool M confidential  KEYWORDS   PAGE  Page  PAGE  ........()()() Normal Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Heading 7 Heading 8 Heading 9 Default Paragraph Font eraseme Page Number Body Text Picture Caption newpage ExecSummary answer Question Change Header Footer Footnote Reference Footnote Text bullet-spaced bullet-unspaced cross reference history instruct issue issueBody margin Normal Indent Wide Picture Annotation Reference Annotation Text Title Subtitle Message Header Body Text Indent Body Text 3 List 2 Pgm2" Dean Hachamovitch D:\DOCS\WORD\SPEC\HILIGHT.DOC Dean Hachamovitch D:\DOCS\WORD\SPEC\HILIGHT.DOC steve C:\PERF\HILIGHT.DOC Word Development C:\PERF\HILIGHT.DOC Word Development!\\STEVERA2\ROOTC\perf\hilight.doc Nat Brown'C:\perform\winword6\scripts\hilight.doc Markus Horstmann/C:\WINNT40\profiles\MarkusH\Desktop\hilight.doc Markus Horstmann1C:\WINNT40\profiles\MarkusH\Desktop\hilight95.doc Markus Horstmann1C:\WINNT40\profiles\MarkusH\Desktop\hilight95.doc susia7D:\nt\private\ole32\stg\async\layout\test\hilight95.doc @\\MSPRINT44\26N/3MC CORPG 157.55.80.246 Ne00: winspool \\MSPRINT44\26N/3MC CORPG 157.55.80.246 HP LaserJet 4Si/4Si MX PS Letter HP LaserJet 4Si/4Si MX PS Letter Times New Roman Symbol Arial Courier New Microsoft Logo Arial Rounded MT Bold BriemScript Highlighter Tool "Smarter than the average scrollbar Dean Hachamovitch susia
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\props\issues.txt ===
Migration to new interface
o deal with missing stuff in prop.idl :
   #define STG_E_PROPSETMISMATCHED 0x800300F0

Specification changes to reflect implementation
o threading issues

Unresolved implementation/design issues
o Returing STG_E_INVALIDPOINTER ?
o threading issues -- two ref counts : one for enumerations and one for regular refs
o Enumerating properties of VT_STREAM etc type - do we check that the stream exists ?  Or document
  that just because it is enumerated doesn't mean you can open it ?  How is VT_STREAM enumerated anyway ?
  As a stream or as a string ?

Test cases to consider:
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\props\utest\testdoc.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6Normal.dot Title of the document. Subject of the document. Keywords of the document. Comments of the document. Author of the document. Bill Morel Microsoft Word 6.0Foo Bar sdfkjhsdfkjhsdf  s djksafdljsafd sdflkhjsfadlhsfad sdfhsdfoihsdf Normal Default Paragraph Font Bill Morel C:\users\default\testdoc.doc @\\MSPRINT35\1/1049 CORPA 141B97 Ne00: winspool HP LaserJet IIISi PostScript v52.3 \\MSPRINT35\1/1049 CORPA 141B97 Letter PRIV   N N N \\MSPRINT35\1/1049 CORPA 141B97 Letter PRIV   N N N Times New Roman Symbol Arial Title of the document. Subject of the document. Keywords of the document. Comments of the document. Author of the document. Bill Morel
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\ref\readme.txt ===
-------------------------------------------------------------------------------                        
                        OLE STRUCTURED STORAGE

                      REFERERENCE IMPLEMENTATION

                            RELEASE NOTES

                            August, 2002



                          Microsoft Windows
               Copyright (C) 1992-2002, Microsoft Corporation.

-------------------------------------------------------------------------------

<add: license agreement?>

CONTENTS
--------
1) What is included in the distribution

2) Building the distribution

3) ANSI and Unicode API support

4) Documentation
 
5) Supported Interfaces and differences

6) Using the reference implementation

7) Reporting bugs

-------------------------------------------------------------------------------


1) What is included in the distribution

Included in the distribution are the source code for the interfaces IStorage,
ILockBytes, IStream, IEnumSTATSTG, IMalloc, IPropertySetStorage,
IPropertyStorage, IEnumSTATPROPSETSTG, and IEnumSTATPROPSTG. Note that not all
the functionality of these interfaces are supported, see (5) for more
information. 

Also, included are some test programs: 'stgdrt' and 'reftest' for the storage
interfaces, and 'proptest' for the property set interfaces. There is a
'readme.txt' in each of those directories that contains a short description of
the tests. For details, please read the source code files.


----------------------------
2) Building the distribution

The distributions comes with a "makefile" which includes the correct makefile
file:
        - makefile.<system>     the actual makefile
where <system> refers to the development system used to compile the
makefile. Therefore, to change the development system, edit the makefile to
include the correct files, or overwrite it with the correct one. Please note
that the files in the distribution are in the DOS format, and thus you will
need to use some utilities to remove the linefeeds before they can be compiled.

Files included in the distribution support these systems:
        -  "msc" which works with Microsoft Visual C++ compiler and 'nmake'.
           This has been tested on Windows.

        -  "gcc" which works with GNU C++ compiler aka 'gcc' and GNU's 'make',
           dependencies can be generated using 'makedepend'.
           Only tested on Solaris, HP-UX, and Linux (2.0.7). 
           However, using these files on other O.S. using the ported versions
           of the GNU tools should require minimum effort.

To compile the distribution, type 'make' or 'nmake' at the root of the src
tree. To do a clean build, do 'make clean' or 'nmake clean'. You might also
need to do a 'make depend' to update the dependencies since the standard
include paths tend to be different.

Note that in the common makefile, 'commk.<system>', in the main directory you
must specify the correct byte-order of the target machine. For Big Endian
machines, define the macro BIGENDIAN as 1. Otherwise, define LITTLEENDIAN as
1. These macros allow the byte-swapping code to work correctly.

The tests 'stgdrt', 'reftest' and 'proptest' can be built likewise.


----------------------------
3) ANSI and Unicode API support

For flexibility, the reference implementation can be compiled to support
either ANSI (i.e. char) or Unicode (i.e. WCHAR) API's. When the macro
'_UNICODE' is turned on, the APIs will be using Unicode, otherwise it uses
ANSI. 

Affected functions are those that contain 'STATSTG' parameters:
        - IEnumSTATSTG::Next
        - IStream::Stat
        - IStorage::Stat

those that contain "WCHAR" parameters:
        - StgCreateStorageEx
        - StgCreateDocfile
        - StgOpenStorage
        - StgIsStorageFile
        - IStorage::OpenStream
        - IStorage::CreateStorage
        - IStorage::OpenStorage
        - IStorage::DestroyElement
        - IStorage::RenameElement
        - IStorage::MoveElementTo
        - IStorage::SetElementTimes

and those that contain the "SNB" parameters:
        - IStorage::CopyTo
        - StgOpenStorageOnILockBytes

For property set related functions, BSTR is single char based for ANSI
API's and wide character based for UNICODE API's. This affect the following
functions :
        - SysAllocString
        - SysFreeString

Also PROPSPEC's lpwstr function is defined with LPOLESTR, which means it will
be either a 'WCHAR' array or 'char' array. This affects the following
functions: 
        - IPropertyStorage::ReadMultiple
        - IPropertyStorage::WriteMultiple
        - IPropertyStorage::DeleteMultiple

The change of names of properties to LPOLESTR affects these functions:
        - IPropertyStorage::ReadPropertyNames
        - IPropertyStorage::WritePropertyNames
        - IPropertyStorage::DeletePropertyNames

Remember to recompile the tests using the same precompiler flags before using
them on the new library!

----------------------------
4) Documentation

The documentation for the API's can be found in the MSDN library and Windows
 Platform  SDK. The property sets API's are new and their documentation can be
 found in MSDN library, or Windows Platform SDK. Another
source of documentation for the property set interfaces would be "Introducing
Distributed COM and the New OLE Features in Windows NT 4.0" in the May/96
Microsoft Systems Journal.

In addition, there is a file stgfmt2.doc which is a
Microsoft Word document describing the disk format of OLE docfiles.


----------------------------
5) Supported functions/Interfaces and differences

First of all, the reference implementation is not multi-thread safe, and it
has no marshaling support. Below are details of differences between the
reference implementation and that of the actual OLE API's.
o StgCreateDocFile
o StgCreateDocFileOnILockBytes
o StgCreateStorageEx
o StgOpenStorage
o StgOpenStorageOnILockBytes
o StgIsStorageFile
o StgIsStorageILockBytes

o IStorage        
o ILockBytes
o IStream
o IEnumSTATSTG

For the above interfaces and APIs,
- There is no transaction or simple mode in the storage interfaces, namely
  STGM_TRANSACTED/STGM_SIMPLE/STGM_PRIORITY/STGM_NOSCRATCH are not supported.
- IStorage::SetElementTime() with a NULL 'lpszName' is not supported also.
  For the same reason StgSetTimes() is not supported as well
- Access Times (part of STATSTG) for storage elements are not suported.
- ILockBytes::LockRegion(), ILockBytes::UnlockRegion(), IStream::LockRegion(),
  IStream::UnlockRegion() are not supported
- The STGOPTIONS parameter in StgCreateStorageEx can be used to create 4k sector structured storage files, which are supported in Windows 2000 and above.

o CoGetMalloc
o CoTaskMemAlloc
o CoTaskMemFree
o CoTaskRealloc

o IMalloc

These interfaces are mapped into the generic 'new' and 'delete' calls. They
are provided to ease conversion of existing code that might be dependent on
them to use the reference implementation.

o FreePropVariantArray
o PropVariantClear
o PropVariantCopy
o SysAllocString
o SysFreeString

o IPropertySetStorage
o IPropertyStorage
o IEnumSTATPROPSETSTG
o IEnumSTATPROPSTG

Code from these interfaces can be turned off by removing '-DNEWPROPS' from the
makefiles, or specifying 'nmake NOPROPS=1' when building. For these
interfaces, non-simple property sets are not supported. In fact, the reference
implementation of property sets treats non-simple propvariant types like
VT_STREAM as invalid types.


----------------------------
6) Using the reference implementation

On the Windows platform, the code will compile into a dynamic link library
(i.e. refstg.dll). To use the reference implementation, include 'storage.h'
(for the storage interfaces) and ('props.h') for the property set interfaces
to link up with the declarations. Note that only C++ headers are provided for
this distribution.

On UNIX, the code compiles into a library archive. i.e. "refstg.a". The
headers should be included as in the Windows Platform. Please note that on
certain UNIX machines, the standard headers declare 'wchar_t' as a 4-byte data
type, which is incompatible with OLE's 2-byte character type. The reference
implementation uses 'WCHAR' as the 2-byte character type, to avoid any
confusion. 

NOTE: We have experience some problems when the g++ library, namely the
fwrite() function on some versions of Linux overwrites memory in the wrong
places. This can be avoided by using 'gcc' instead of 'g++' as the compiler.

To turn off debugging code and do a 'retail' build, edit the makefiles (both
in the root and in props sub-directory) and specify the relevant flags and do 
a clean build (see the makefiles for details).



----------------------------
7) Bug reports

Please report any bugs found to :

        henrylee@microsoft.com
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\ref\stgfmt2.doc ===
{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial{\*\falt Helvetica};}{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f16\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}AvantGarde;}{\f17\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ITC Bookman;}{\f18\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica-Narrow;}{\f19\froman\fcharset0\fprq2{\*\panose 00000000000000000000}NewCenturySchlbk;}{\f20\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Palatino;}{\f21\froman\fcharset0\fprq2{\*\panose 00000000000000000000}ZapfChancery;}{\f22\fdecor\fcharset2\fprq2{\*\panose 00000000000000000000}ZapfDingbats;}{\f23\fnil\fcharset2\fprq2{\*\panose 00000000000000000000}Marlett;}{\f24\fmodern\fcharset0\fprq1{\*\panose 020b0609040504020204}Lucida Console;}{\f25\fswiss\fcharset0\fprq2{\*\panose 020b0602030504020204}Lucida Sans Unicode;}{\f26\fswiss\fcharset0\fprq2{\*\panose 020b0506020202030204}Arial Narrow;}{\f27\fswiss\fcharset0\fprq2{\*\panose 020b0a04020102020204}Arial Black;}{\f28\fswiss\fcharset0\fprq2{\*\panose 020f0704030504030204}Arial Rounded MT Bold;}{\f29\froman\fcharset0\fprq2{\*\panose 02040602050305030304}Book Antiqua;}{\f30\froman\fcharset0\fprq2{\*\panose 02050604050505020204}Bookman Old Style;}{\f31\fswiss\fcharset0\fprq2{\*\panose 020b0502020202020204}Century Gothic;}{\f32\froman\fcharset0\fprq2{\*\panose 02040604050505020304}Century Schoolbook;}{\f33\fnil\fcharset2\fprq2{\*\panose 01010601010101010101}Monotype Sorts;}{\f34\fswiss\fcharset0\fprq2{\*\panose 020b0706040902060204}Haettenschweiler;}{\f35\fdecor\fcharset0\fprq2{\*\panose 04020705040a02060702}Algerian;}{\f36\fdecor\fcharset0\fprq2{\*\panose 04030b070d0b02020403}Braggadocio;}{\f37\fswiss\fcharset0\fprq2{\*\panose 020b0903060703020204}Britannic Bold;}{\f38\fscript\fcharset0\fprq2{\*\panose 03060802040406070304}Brush Script MT;}{\f39\fdecor\fcharset0\fprq2{\*\panose 04020805060202030203}Colonna MT;}{\f40\fdecor\fcharset0\fprq2{\*\panose 04020505020e03040504}Desdemona;}{\f41\froman\fcharset0\fprq2{\*\panose 0204060206030a020304}Footlight MT Light;}{\f42\froman\fcharset0\fprq2{\*\panose 02020404030301010803}Garamond;}{\f43\fswiss\fcharset0\fprq2{\*\panose 020b0806030902050204}Impact;}{\f44\fdecor\fcharset0\fprq2{\*\panose 040307050d0c02020703}Kino MT;}{\f45\froman\fcharset0\fprq2{\*\panose 020a0a07050505020404}Wide Latin;}{\f46\fscript\fcharset0\fprq2{\*\panose 03020802060602070202}Matura MT Script Capitals;}{\f47\fdecor\fcharset0\fprq2{\*\panose 040506030a0602020202}Playbill;}{\f48\fswiss\fcharset0\fprq2{\*\panose 020b0506030101010103}Abadi MT Condensed;}{\f49\froman\fcharset2\fprq2{\*\panose 05020102010507070707}Wingdings 2;}{\f50\froman\fcharset2\fprq2{\*\panose 05040102010807070707}Wingdings 3;}{\f51\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}MS Outlook;}{\f52\fscript\fcharset0\fprq2{\*\panose 030f0702030302020204}Comic Sans MS;}{\f53\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Bookshelf Symbol 3;}{\f54\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Verdana;}{\f55\fnil\fcharset0\fprq1{\*\panose 00000000000000000000}Small Fonts;}{\f56\froman\fcharset238\fprq2 Times New Roman CE;}{\f57\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f59\froman\fcharset161\fprq2 Times New Roman Greek;}{\f60\froman\fcharset162\fprq2 Times New Roman Tur;}{\f61\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f68\fmodern\fcharset238\fprq1 Courier New CE;}{\f69\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f71\fmodern\fcharset161\fprq1 Courier New Greek;}{\f72\fmodern\fcharset162\fprq1 Courier New Tur;}{\f73\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f146\fswiss\fcharset238\fprq2 Tahoma CE;}{\f147\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f149\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f150\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f151\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f200\fmodern\fcharset238\fprq1 Lucida Console CE;}{\f201\fmodern\fcharset204\fprq1 Lucida Console Cyr;}{\f203\fmodern\fcharset161\fprq1 Lucida Console Greek;}{\f204\fmodern\fcharset162\fprq1 Lucida Console Tur;}{\f206\fswiss\fcharset238\fprq2 Lucida Sans Unicode CE;}{\f207\fswiss\fcharset204\fprq2 Lucida Sans Unicode Cyr;}{\f209\fswiss\fcharset161\fprq2 Lucida Sans Unicode Greek;}{\f210\fswiss\fcharset162\fprq2 Lucida Sans Unicode Tur;}{\f212\fswiss\fcharset238\fprq2 Arial Narrow CE;}{\f213\fswiss\fcharset204\fprq2 Arial Narrow Cyr;}{\f215\fswiss\fcharset161\fprq2 Arial Narrow Greek;}{\f216\fswiss\fcharset162\fprq2 Arial Narrow Tur;}{\f217\fswiss\fcharset186\fprq2 Arial Narrow Baltic;}{\f218\fswiss\fcharset238\fprq2 Arial Black CE;}{\f219\fswiss\fcharset204\fprq2 Arial Black Cyr;}{\f221\fswiss\fcharset161\fprq2 Arial Black Greek;}{\f222\fswiss\fcharset162\fprq2 Arial Black Tur;}{\f223\fswiss\fcharset186\fprq2 Arial Black Baltic;}{\f236\froman\fcharset238\fprq2 Bookman Old Style CE;}{\f237\froman\fcharset204\fprq2 Bookman Old Style Cyr;}{\f239\froman\fcharset161\fprq2 Bookman Old Style Greek;}{\f240\froman\fcharset162\fprq2 Bookman Old Style Tur;}{\f241\froman\fcharset186\fprq2 Bookman Old Style Baltic;}{\f308\froman\fcharset238\fprq2 Garamond CE;}{\f309\froman\fcharset204\fprq2 Garamond Cyr;}{\f311\froman\fcharset161\fprq2 Garamond Greek;}{\f312\froman\fcharset162\fprq2 Garamond Tur;}{\f313\froman\fcharset186\fprq2 Garamond Baltic;}{\f314\fswiss\fcharset238\fprq2 Impact CE;}{\f315\fswiss\fcharset204\fprq2 Impact Cyr;}{\f317\fswiss\fcharset161\fprq2 Impact Greek;}{\f318\fswiss\fcharset162\fprq2 Impact Tur;}{\f319\fswiss\fcharset186\fprq2 Impact Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \snext0 Normal;}{\s1\qj\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\outlinelevel0\adjustright \b\fs28\cf2\cgrid \sbasedon44 \snext44 heading 1;}{\s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\adjustright \fs28\cf2\cgrid \sbasedon1 \snext44 heading 2;}{\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\adjustright \cf2\cgrid \sbasedon2 \snext44 heading 3;}{\s4\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl3\outlinelevel3\adjustright \b\fs20\cf2\cgrid \sbasedon3 \snext44 heading 4;}{\s5\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl4\outlinelevel4\adjustright \fs20\cf2\cgrid \sbasedon4 \snext44 heading 5;}{\s6\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl5\outlinelevel5\adjustright \i\fs20\cf2\cgrid \sbasedon5 \snext44 heading 6;}{\s7\qj\ri720\sb240\sa86\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl6\outlinelevel6\adjustright \f4\fs20\cgrid \sbasedon47 \snext47 heading 7;}{\s8\qj\ri720\sb240\sa86\keepn\nowidctlpar\widctlpar\ls1\ilvl7\outlinelevel7\adjustright \f4\fs20\cgrid \sbasedon7 \snext44 heading 8;}{\s9\qj\ri720\sb240\sa86\keepn\nowidctlpar\widctlpar\jclisttab\tx360\ls1\ilvl8\outlinelevel8\adjustright \i\f4\fs20\cgrid \sbasedon8 \snext38 heading 9;}{\*\cs10 \additive Default Paragraph Font;}{\*\cs15 \additive \b\f5\fs16\lang1033 \sbasedon10 annotation reference;}{\s16\fi-630\li630\nowidctlpar\widctlpar\adjustright \f5\fs16\cgrid \snext16 annotation text;}{\s17\qj\li5040\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext17 toc 8;}{\s18\qj\li4320\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext18 toc 7;}{\s19\qj\li3600\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext19 toc 6;}{\s20\qj\li2880\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext20 toc 5;}{\s21\qj\li2160\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext21 toc 4;}{\s22\qj\li1440\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext22 toc 3;}{\s23\qj\li720\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon24 \snext23 toc 2;}{\s24\qj\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid \sbasedon44 \snext24 toc 1;}{\s25\li2160\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext25 index 7;}{\s26\li1800\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext26 index 6;}{\s27\li1440\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext27 index 5;}{\s28\li1080\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext28 index 4;}{\s29\li720\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext29 index 3;}{\s30\li360\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon31 \snext30 index 2;}{\s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon0 \snext31 index 1;}{\*\cs32 \additive \sbasedon10 line number;}{\s33\qj\sb240\sa58\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\f4\fs20\cgrid \sbasedon44 \snext31 index heading;}{\s34\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid \sbasedon35 \snext35 footer;}{\s35\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid \snext35 header;}{\*\cs36 \additive \fs16\up6 \sbasedon10 footnote reference;}{\s37\qj\fi-101\li86\nowidctlpar\widctlpar\adjustright \f4\fs16\cgrid \sbasedon44 \snext37 footnote text;}{\s38\li720\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon0 \snext38 Normal Indent;}{\*\cs39 \additive \f1\fs16\lang1024 \sbasedon10 CodeText;}{\*\cs40 \additive \sbasedon10 page number;}{\s41\nowidctlpar\widctlpar\adjustright \i\fs20\cgrid \sbasedon0 \snext43 Revision Date;}{\s42\li1440\ri1584\sa60\nowidctlpar\widctlpar\box\brdrs\brdrw15\brsp20 \adjustright \scaps\f1\fs16\cf6\cgrid \sbasedon0 \snext42 Legal Info;}{\s43\qj\sb720\sa480\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon44 \snext1 Abstract;}{\s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon0 \snext44 Body;}{\s45\qj\li1440\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon49 \snext45 Body Sub Sub Sub;}{\s46\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw30\brsp60 \brdrbtw\brdrs\brdrw30\brsp60 \adjustright \b\fs36\cf2\cgrid \sbasedon0 \snext43 Title;}{\s47\qj\li720\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon44 \snext47 Body Sub;}{\s48\qj\fi-360\li1080\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon44 \snext48 Body Sub-Hang;}{\s49\qj\li1080\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon47 \snext49 Body Sub Sub;}{\s50\li288\sa58\sl202\slmult0\keep\nowidctlpar\widctlpar\adjustright \f5\fs18\cgrid \sbasedon44 \snext44 Annotation;}{\s51\sa60\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \adjustright \f4\fs18\cgrid \sbasedon44 \snext51 Table Entry;}{\s52\sa60\keep\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \adjustright \b\f4\fs18\cgrid \sbasedon44 \snext52 Table Label;}{\s53\sb120\sa58\keepn\nowidctlpar\widctlpar\adjustright \b\f4\fs18\cgrid \sbasedon44 \snext53 Table Head;}{\s54\li288\sa58\sl202\slmult0\keep\nowidctlpar\widctlpar\box\brdrs\brdrw15\brsp20 \adjustright \f5\fs18\cgrid \sbasedon50 \snext44 Annotation Box;}{\s55\nowidctlpar\widctlpar\adjustright \i\f4\fs18\cgrid \sbasedon0 \snext43 Byline;}{\s56\qj\li720\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \i\f4\fs20\cgrid \sbasedon47 \snext44 Illustration;}{\s57\sa60\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \tx360\tx720\tx1080\tx1440\tx1800\tx2160\adjustright \f5\fs12\cgrid \sbasedon51 \snext57 Table Entry - Small;}{\s58\sb120\sa58\keepn\nowidctlpar\widctlpar\tx360\tx720\tx1080\tx1440\tx1800\tx2160\adjustright \b\f5\fs12\cgrid \sbasedon53 \snext58 Table Head - Small;}{\s59\qc\sb240\sa240\sl216\slmult0\keepn\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon44 \snext68 Figure;}{\s60\sa60\keep\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \adjustright \b\f5\fs12\cgrid \sbasedon52 \snext60 Table Label - Small;}{\s61\sb60\sa120\keep\nowidctlpar\widctlpar\adjustright \f6\fs20\cgrid \sbasedon0 \snext61 Pseudocode;}{\s62\li2160\sa120\nowidctlpar\widctlpar\brdrt\brdrs\brdrw30\brsp20 \brdrbtw\brdrs\brdrw30\brsp20 \phmrg\posyt\adjustright \b\f5\fs48\cgrid \sbasedon63 \snext63 Title Large;}{\s63\li2160\sa120\nowidctlpar\widctlpar\phmrg\posyt\adjustright \b\f5\fs28\cgrid \sbasedon0 \snext64 Title Medium;}{\s64\li2160\sa120\nowidctlpar\widctlpar\phmrg\posyt\adjustright \i\f5\fs20\cgrid \sbasedon0 \snext64 Title Small;}{\s65\li2160\sa120\nowidctlpar\widctlpar\phmrg\posyt\adjustright \v\f5\fs12\cgrid \sbasedon64 \snext65 Time Stamp;}{\s66\nowidctlpar\widctlpar\absw1800\dxfrtext187\dfrmtxtx187\dfrmtxty187\adjustright \f4\fs20\cgrid \sbasedon0 \snext62 Logo;}{\s67\qj\fi-360\li1440\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon48 \snext67 Body Sub Sub-Hang;}{\s68\qj\li1440\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs18\cgrid \sbasedon47 \snext44 caption;}{\s69\sa60\keep\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \adjustright \b\f4\fs18\cgrid \sbasedon44 \snext69 Table Lable;}{\s70\qj\fi-180\li900\ri720\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon47 \snext70 Term Definition;}{\s71\qc\sb240\sa240\sl216\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid \sbasedon44 \snext71 Picture Paragraph;}{\s72\sa60\keep\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15 \brdrbtw\brdrs\brdrw15 \adjustright \b\f5\fs12\cgrid \sbasedon69 \snext72 Table Lable -Small;}{\s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid \snext73 Code;}{\s74\fi-1440\li1800\sb58\nowidctlpar\widctlpar\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\adjustright \f4\fs20\cgrid \sbasedon44 \snext74 Method Clause;}{\s75\fi-720\li360\ri-720\sb360\keep\nowidctlpar\widctlpar\box\brdrsh\brdrs\brdrw15\brsp20 \tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid \sbasedon73 \snext74 Method Heading;}{\s76\qj\li720\ri720\sb240\sa240\sl216\slmult0\nowidctlpar\widctlpar\box\brdrs\brdrw15\brsp20 \adjustright \b\f5\fs16\cgrid \sbasedon47 \snext76 Annotation Public;}{\s77\nowidctlpar\widctlpar\adjustright \cbpat9 \f15\fs20\cgrid \sbasedon0 \snext77 Document Map;}}{\*\listtable{\list\listtemplateid-1{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\s1}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'03\'00.\'01;}{\levelnumbers\'01\'03;}\s2}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'05\'00.\'01.\'02;}{\levelnumbers\'01\'03\'05;}\s3}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'07\'00.\'01.\'02.\'03;}{\levelnumbers\'01\'03\'05\'07;}\s4}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'09\'00.\'01.\'02.\'03.\'04;}{\levelnumbers\'01\'03\'05\'07\'09;}\s5}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext
\'0b\'00.\'01.\'02.\'03.\'04.\'05;}{\levelnumbers\'01\'03\'05\'07\'09\'0b;}\s6}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'0d\'00.\'01.\'02.\'03.\'04.\'05.\'06;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d;}\s7}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext\'0f\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f;}\s8}{\listlevel\levelnfc0\leveljc0\levelfollow0\levelstartat1\levelold\levelspace144\levelindent0{\leveltext
\'11\'00.\'01.\'02.\'03.\'04.\'05.\'06.\'07.\'08;}{\levelnumbers\'01\'03\'05\'07\'09\'0b\'0d\'0f\'11;}\s9}{\listname ;}\listid-5}}{\*\listoverridetable{\listoverride\listid-5\listoverridecount0\ls1}}{\*\revtbl {Unknown;}{Markus Horstmann;}{Nat Brown;}}{\info{\title Compound File Binary Format}{\doccomm This document describes the on-disk format of the Compound File, used as the underpinnings of the structured storage support for OLE 2.0.}{\operator Markus Horstmann}{\creatim\yr1997\mo1\dy3\hr14\min26}{\revtim\yr1997\mo1\dy3\hr14\min27}{\version3}{\edmins2}{\nofpages10}{\nofwords3871}{\nofchars19621}{\*\company Microsoft Corporation}{\nofcharsws24394}{\vern71}}\widowctrl\ftnbj\aenddoc\revisions\noextrasprl\prcolbl\cvmme\sprsspbf\brkfrm\swpbdr\lytprtmet\hyphcaps0\fracwidth\viewkind4\viewscale111\viewzk2\pgbrdrhead\pgbrdrfoot \fet0{\*\template C:\\WINWORD\\CAIRO.DOT}\sectd \sbkodd\pgnrestart\pgnlcrm\linex0\endnhere\titlepg\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \ri-270\nowidctlpar\widctlpar\brdrt\brdrs\brdrw30\brsp20 \brdrbtw\brdrs\brdrw30\brsp20 \outlinelevel0\adjustright \f4\fs20\cgrid {\field{\*\fldinst {\b\fs36 title }}{\fldrslt {\b\fs36 Compound File Binary Format}}}{\b\fs36 
\par }\pard\plain \s41\nowidctlpar\widctlpar\adjustright \i\fs20\cgrid {\revised\revauth1\revdttm-1508828266 {\*\bkmkstart DraftDate}3 January}{\deleted\revauthdel1\revdttmdel-1508828266 15 March}{, 199}{\deleted\revauthdel1\revdttmdel-1508828266 {\*\bkmkend DraftDate}6}{\revised\revauth1\revdttm-1508828266 7}{
\par }\pard\plain \s43\qj\sb240\sa240\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\field{\*\fldinst { COMMENTS  \\* MERGEFORMAT }}{\fldrslt {This document describes the on-disk format of the Compound File, used as the underpinnings of the structured storage support for OLE 2.0.}}}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {
\par 
\par 
\par 
\par }\pard\plain \s24\qj\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid {\field\fldedit{\*\fldinst {TOC \\o "1-2"}}{\fldrslt {\lang1024 1. Overview\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782782  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782782 }}{\fldrslt {\lang1024 1}}}}}{\lang1024 
\par 2. Sector Types\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782783  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782783 }}{\fldrslt {\lang1024 1}}}}}{\lang1024 
\par }\pard\plain \s23\qj\li720\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid {\lang1024 2.1 Header\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782784  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782784 }}{\fldrslt {\lang1024 1}}}}}{\lang1024 
\par 2.2 Fat Sectors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782785  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782785 }}{\fldrslt {\lang1024 2}}}}}{\lang1024 
\par 2.3 MiniFat Sectors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782786  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782786 }}{\fldrslt {\lang1024 2}}}}}{\lang1024 
\par 2.4 DIF Sectors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782787  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782787 }}{\fldrslt {\lang1024 3}}}}}{\lang1024 
\par 2.5 Directory Sectors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782788  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782788 }}{\fldrslt {\lang1024 3}}}}}{\lang1024 
\par 2.6 Storage Sectors\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782789  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782789 }}{\fldrslt {\lang1024 5}}}}}{\lang1024 
\par }\pard\plain \s24\qj\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid {\lang1024 3. Examples\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782790  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782790 }}{\fldrslt {\lang1024 5}}}}}{\lang1024 
\par }\pard\plain \s23\qj\li720\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid {\lang1024 3.1 Sector 0: Header\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782791  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782791 }}{\fldrslt {\lang1024 5}}}}}{\lang1024 
\par 3.2 SECT 0: First (Only) FAT Sector\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782792  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782792 }}{\fldrslt {\lang1024 5}}}}}{\lang1024 
\par 3.3 SECT 1: First (Only) Directory Sector\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782793  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782793 }}{\fldrslt {\lang1024 5}}}}}{\lang1024 
\par 3.4 SECT 3: MiniFat Sector\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782794  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782794 }}{\fldrslt {\lang1024 7}}}}}{\lang1024 
\par 3.5 SECT 4: MiniStream (Data of \ldblquote Stream 1\rdblquote )\tab }{\field{\*\fldinst {\lang1024  GOTOBUTTON _Toc351782795  }{\field{\*\fldinst {\lang1024  PAGEREF _Toc351782795 }}{\fldrslt {\lang1024 7}}}}}{\lang1024 
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid }}\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {
\par }\pard\plain \s42\li1440\ri1584\sa60\nowidctlpar\widctlpar\box\brdrs\brdrw15\brsp20 \adjustright \scaps\f1\fs16\cf6\cgrid {\b Note:}{ This document is meant to accompany the Microsoft Structured Storage Reference Implementation, heretoafter referred to as the \ldblquote software\rdblquote . Some of the information in this documentation may be inaccurate or may not be an accurate representation of the actual func\-tionality of the software. When this document and the functionality of the software conflict, The actual functionality of the software represents the correct functionality. Microsoft assumes no responsibility for any damages that might occur either directly or indirectly from these discrepencies or inaccuracies. Microsoft may have trademarks, copyrights, patents or pending patent applications, or other intellectual property rights covering subject matter in this document and in the software. The furnishing of this document does not give you a license to these trademarks, copyrights, patents, or other intellectual property rights.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\sect }\sectd \marglsxn1440\margrsxn1440\binfsxn258\binsxn258\pgnrestart\pgnlcrm\linex0\endnhere\sectdefaultcl {\footer \pard\plain \s34\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx9360\adjustright \f5\fs16\cgrid {\i Copyright 1992-1995 Microsoft Corporation}{\tab page: }{\field{\*\fldinst {\cs40  PAGE }}{\fldrslt {\cs40\lang1024 i}}}{\cs40 \tab }{\cs40\i All Rights Reserved.}{
\par }\pard \s34\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright {
\par }}\pard\plain \s24\qj\ri720\nowidctlpar\widctlpar\tldot\tx8280\tqr\tx8640\adjustright \f4\fs20\cgrid {\sect }\sectd \marglsxn1440\margrsxn1440\binfsxn258\binsxn258\pgnrestart\linex0\endnhere\sectdefaultcl {\header \pard\plain \s35\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid {
\par }}{\*\bkmkstart INTERN_LINK2}{\*\bkmkstart INTERN_LINK1}{\*\bkmkstart _Toc345472308}{\*\bkmkstart _Toc345963637}{\*\bkmkstart _Toc351782782}{\listtext\pard\plain\s1 \b\fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 1.\tab}\pard\plain \s1\qj\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\outlinelevel0\ls1\outlinelevel0\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \b\fs28\cf2\cgrid {Overview{\*\bkmkend _Toc345472308}{\*\bkmkend _Toc345963637}{\*\bkmkend _Toc351782782}
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {A Compound File is made up of a number of }{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \v\f4\fs20\cgrid {\xe {virtual stream}}}{\b virtual streams}{.  These are collections of data that behave as a linear stream, although their on-disk format may be fragmented.  Virtual streams can be user data, or they can be control structures used to maintain the file.  Note that the file itself can also be considered a virtual stream.
\par All allocations of space within a Compound File are done in units called }{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \v\f4\fs20\cgrid {\xe {sector}}}{\b sectors}{.  The size of a sector is definable at creation time of a Compound File, but for the purposes of this document will be 512 bytes.  A virtual stream is made up of a sequence of sectors.
\par The Compound File uses several different types of sector:  }{\i Fat}{, }{\i Directory}{, }{\i Minifat}{, }{\i DIF}{, and }{\i Storage}{. A separate type of 'sector' is a }{\i Header}{, the primary difference being that a Header is always 512 bytes long (regardless of the sector size of the rest of the file) and is always located at offset zero (0).  With the exception of the header, sectors of any type can be placed anywhere within the file.  The function of the various sector types is discussed below.
\par In the discussion below, the term }{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \v\f4\fs20\cgrid {\xe {SECT}}}{\b SECT}{ is used to describe the location of a sector within a virtual stream (in most cases this virtual stream is the file itself).  Internally, a }{\cs39\f1\fs16\lang1024 SECT}{ is represented as a }{\cs39\f1\fs16\lang1024 ULONG}{.
\par {\*\bkmkstart _Toc345472309}{\*\bkmkstart _Toc345963638}{\*\bkmkstart _Toc351782783}{\listtext\pard\plain\s1 \b\fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard\plain \s1\qj\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\outlinelevel0\ls1\outlinelevel0\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \b\fs28\cf2\cgrid {Sector Types{\*\bkmkend _Toc345472309}{\*\bkmkend _Toc345963638}{\*\bkmkend _Toc351782783}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\cs39\lang1024 \tab }{\cs39\revised\lang1024\revauth2\revdttm637768397 [4 bytes]\tab \tab }{\cs39\lang1024 typedef unsigned long ULONG;
\par \tab }{\cs39\revised\lang1024\revauth2\revdttm637768397 [2 bytes]\tab \tab }{\cs39\lang1024 typedef unsigned short USHORT;
\par }{\tab }{\revised\revauth2\revdttm637768397 [2 bytes]\tab \tab }{typedef short }{\b OFFSET}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 OFFSET}}}{;
\par \tab }{\revised\revauth2\revdttm637768397 [4 bytes]\tab \tab }{typedef ULONG }{\b SECT}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 SECT}}}{;
\par \tab }{\revised\revauth2\revdttm637768397 [4 bytes]\tab \tab }{typedef ULONG }{\b FSINDEX}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 FSINDEX}}}{;
\par \tab }{\revised\revauth2\revdttm637768397 [2 bytes]\tab \tab }{typedef USHORT }{\b FSOFFSET}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 FSOFFSET}}}{;
\par \tab }{\revised\revauth2\revdttm637768397 [4 bytes]\tab \tab }{typedef ULONG }{\b DFSIGNATURE}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 DFSIGNATURE}}}{;}{\revised\revauth2\revdttm637768397 
\par \tab [1 byte]\tab \tab typedef unsigned char }{\revised\revauth2\revdttm637768398 BYTE;
\par \tab [2 bytes]\tab \tab typedef unsigned short WORD;
\par \tab [4 bytes]\tab \tab typedef unsigned long DWORD;
\par \tab [2 bytes]\tab \tab typedef WORD }{\b\revised\revauth2\revdttm637768398 DFPROPTYPE}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \v\fs12\revised\revauth2\revdttm637768399\cgrid {\xe {\f0\fs12\revised\revauth2\revdttm637768399 DFPROPTYPE}}}{\revised\revauth2\revdttm637768398 ;}{\revised\revauth2\revdttm637768399 
\par \tab [4 bytes]\tab \tab typedef ULONG }{\b\revised\revauth2\revdttm637768399 SID}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \v\fs12\revised\revauth2\revdttm637768399\cgrid {\xe {\f0\fs12\revised\revauth2\revdttm637768399 SID}}}{\revised\revauth2\revdttm637768399 ;
\par \tab [16 bytes]\tab \tab typedef CLSID GUID;
\par 
\par }{\cf6\revised\revauth2\revdttm637768399 \tab [8 bytes]\tab \tab typedef struct tagFILETIME}{\cf6\revised\revauth2\revdttm637768400  }{\cf6\revised\revauth2\revdttm637768399 \{
\par \tab \tab DWORD dwLowDateTime;
\par \tab \tab DWORD dwHighDateTime;
\par \tab }{\cf6\revised\revauth2\revdttm637768400 \tab }{\cf6\revised\revauth2\revdttm637768399 \} }{\b\cf6\revised\revauth2\revdttm637768399 FILETIME}{\revised\revauth2\revdttm637768400 , }{\b\revised\revauth2\revdttm637768400 TIME_T}{\revised\revauth2\revdttm637768400 ;}{\cf6\revised\revauth2\revdttm637768399 
\par }{
\par 
\par \tab }{\revised\revauth2\revdttm637768400 [4 bytes]\tab \tab }{const SECT }{\b DIFSECT}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 DIFSECT}}}{\tab \tab = 0xFFFFFFFC;
\par \tab }{\revised\revauth2\revdttm637768400 [4 bytes]\tab \tab }{const SECT }{\b FATSECT}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 FATSECT}}}{\tab \tab = 0xFFFFFFFD;
\par \tab }{\revised\revauth2\revdttm637768400 [4 bytes]\tab \tab }{const SECT }{\b ENDOFCHAIN}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 ENDOFCHAIN}}}{\tab = 0xFFFFFFFE;
\par \tab }{\revised\revauth2\revdttm637768400 [4 bytes]\tab \tab }{const SECT }{\b FREESECT}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 FREESECT}}}{\tab \tab = 0xFFFFFFFF;
\par {\*\bkmkstart _Toc345472310}{\*\bkmkstart _Toc345963639}{\*\bkmkstart _Toc351782784}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.1\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {Header{\*\bkmkend _Toc345472310}{\*\bkmkend _Toc345963639}{\*\bkmkend _Toc351782784}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\tab struct StructuredStorageHeader \{}{\revised\revauth2\revdttm637768401 \tab \tab }{\i\fs14\revised\revauth2\revdttm637768401 // [offset from start in bytes, length in bytes]}{
\par \tab \tab BYTE\tab \tab _abSig[8];\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768401 [0}{\i\fs14\revised\revauth2\revdttm637768402 00}{\i\fs14\revised\revauth2\revdttm637768401 H,}{\i\fs14\revised\revauth2\revdttm637768402 0}{\i\fs14\revised\revauth2\revdttm637768401 8] }{\i\fs14 \{0xd0, 0xcf, 0x11, 0xe0, 0xa1, 0xb1, 0x1a, 0xe1\} for current version,
\par }{\tab \tab \tab \tab \tab \tab \tab \tab \tab }{\i\fs14 // was \{0x0e, 0x11, 0xfc, 0x0d, 0xd0, 0xcf, 0x11, 0xe0\} on old, beta 2 files (late \rquote 92)
\par }{\tab \tab \tab \tab \tab \tab \tab \tab \tab }{\i\fs14 // which are also supported by the reference implementation}{
\par \tab \tab CLSID\tab \tab _clid;\tab \tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768402 [008H,16] }{\i\fs14 class id (set with WriteClassStg, retrieved with GetClassFile/ReadClassStg)}{
\par \tab \tab USHORT\tab \tab _uMinorVersion;\tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768402 [018H,02] }{\i\fs14 minor version of the format: 33 is written by reference implementation}{
\par \tab \tab USHORT\tab \tab _uDllVersion;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768402 [01AH,02] }{\i\fs14 major version of the dll/format: 3 is written by reference implementation}{
\par \tab \tab USHORT\tab \tab _uByteOrder;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768402 [01CH,02] }{\i\fs14 0xFFFE: indicates Intel byte-ordering}{
\par \tab \tab USHORT\tab \tab _uSectorShift;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [01EH,02] }{\i\fs14 size of sectors in power-of-two (typically 9, indicating 512-byte sectors)}{
\par \tab \tab USHORT\tab \tab _uMiniSectorShift;\tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [020H,02] }{\i\fs14 size of mini-sectors in power-of-two (typically 6, indicating 64-byte mini-sectors)}{
\par \tab \tab USHORT\tab \tab _usReserved;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [022H,02] }{\i\fs14 reserved, must be zero}{
\par \tab \tab ULONG\tab \tab _ulReserved1;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [024H,04] }{\i\fs14 reserved, must be zero}{
\par \tab \tab ULONG\tab \tab _ulReserved2;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [028H,04] }{\i\fs14 reserved, must be zero}{
\par \tab \tab FSINDEX\tab \tab _csectFat;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768403 [02CH,04] }{\i\fs14 number of SECTs in the FAT chain}{
\par \tab \tab SECT\tab \tab _sectDirStart;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [030H,04] }{\i\fs14 first SECT in the }{\i\deleted\fs14\revauthdel2\revdttmdel-1509873007 FAT }{\i\fs14\revised\revauth2\revdttm-1509873007 Directory }{\i\fs14 chain}{
\par \tab \tab DFSIGNATURE\tab _signature;\tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [034H,04] }{\i\fs14 signature used for transactionin: must be zero. The reference implementation}{
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab }{\i\fs14 // does not support transactioning}{
\par \tab \tab ULONG\tab \tab _ulMiniSectorCutoff;}{\i\fs14 \tab // }{\i\fs14\revised\revauth2\revdttm637768404 [038H,04] }{\i\fs14 maximum size for mini-streams: typically 4096 bytes}{
\par \tab \tab SECT\tab \tab _sectMiniFatStart;\tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [03CH,04] }{\i\fs14 first SECT in the mini-FAT chain}{
\par \tab \tab FSINDEX\tab \tab _csectMiniFat;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [040H,04] }{\i\fs14 number of SECTs in the mini-FAT chain}{
\par \tab \tab SECT\tab \tab _sectDifStart;\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [044H,04] }{\i\fs14 first SECT in the DIF chain}{
\par \tab \tab FSINDEX\tab \tab _csectDif;\tab \tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [048H,04] }{\i\fs14 number of SECTs in the DIF chain}{
\par \tab \tab SECT\tab \tab _sectFat[109];\tab \tab }{\i\fs14 // }{\i\fs14\revised\revauth2\revdttm637768404 [04CH,436] }{\i\fs14 the SECTs of the first 109 FAT sectors}{
\par \tab \tab \};
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\f0 
\par }{The }{\i Header}{ contains vital information for the instantiation of a Compound File.  Its total length is 512 bytes.  There is exactly one }{\i Header }{in any Compound File, and it is always located beginning at offset zero in the file.
\par {\*\bkmkstart _Toc345472311}{\*\bkmkstart _Toc345963640}{\*\bkmkstart _Toc351782785}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.2\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {Fat Sectors{\*\bkmkend _Toc345472311}{\*\bkmkend _Toc345963640}{\*\bkmkend _Toc351782785}
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {The }{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \v\f4\fs20\cgrid {\xe {Fat}}}{\b Fat}{ is the main allocator for space within a Compound File.  Every sector in the file is represented within the Fat in some fashion, including those sectors that are unallocated (free).  The Fat is a virtual stream made up of  one or more Fat Sectors.
\par Fat sectors are arrays of }{\cs39\f1\fs16\lang1024 SECT}{s that represent the allocation of space within the file.  Each stream is represented in the Fat by a }{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \v\f4\fs20\cgrid {\xe {chain}}}{\b chain}{, in much the same fashion as a }{\cs39\f1\fs16\lang1024 DOS}{ file-allocation-table (FAT).  To elaborate, the set of Fat Sectors can be considered together to be a single array -- each cell in that array contains the }{\cs39\f1\fs16\lang1024 SECT}{ of the next sector in the chain, and this SECT can be used as an index into the Fat array to continue along the chain.  Special values are reserved for chain terminators (}{\cs39\f1\fs16\lang1024 ENDOFCHAIN = 0xFFFFFFFE}{), free sectors (}{\cs39\f1\fs16\lang1024 FREESECT = 0xFFFFFFFF}{), and sectors that contain storage for Fat Sectors (}{\cs39\f1\fs16\lang1024 FATSECT = 0xFFFFFFFD}{)  or DIF Sectors (}{\cs39\f1\fs16\lang1024 DIFSECT = 0xFFFFFFC}{), which are not chained in the same way as the others.
\par }\pard \s44\qc\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright {\f0 {\pict\wmetafile8\picw9604\pich2963\picwgoal5445\pichgoal1680 \bin3776  	  [   /        &        8
   & 
         & $     TNPP Microsoft PowerPoint   &  TNPP     P 
   & 
         &  TNPP                /                                                      4     5    &       #Y !    &       _             -              -    _
   & 
         &       q                 Arial    -    .    
       	       	   2
q   3 ,     
   & 
         &       J                 Arial h   -        .    
       	       	   2
qu   5 ,     
   & 
         &                        Arial ۚ   -        .    
       	       	   2
q;   1 ,     
   & 
         &       @                 Arial    -        .    
       	       	   2
q   E 5     
   & 
         &                   -    -                  "System    -            s+             -    y   #   -    -        '
   & 
         &       |   -    -        $             -    y|   #|   -    -        '
   & 
         &       .6   -    -                     -    y.   #.   -    -        '
   & 
         &          -    -        ?             -    y   #   -    -        '
   & 
         &          -    -        9             -    y   #   -    -        '
   & 
         &       BJ   -    -                     -    yB   #B   -    -        '
   & 
         &          -    -        T             -    y   #   -    -        '
   & 
         &          -    -        M             -    y   #   -    -        '
   & 
         &       <a             -    @
ab
   & 
         &       #H   DDf#             -    - 
   $ '
~@
   & 
         &       #
   -    -    #_#
   & 
         &          Og]   -    - 
   $ 
S
   & 
         &       ;   -    -    7u
   & 
         &       4   8u~   -    - 
   $ 
   & 
         &       ^?   -    -    ?k ?^   -    - 
   $ b
|
   & 
         &                         Arial    -    .    
       	          2
^	
   Pointer in%                                Arial    -        .    
       	          2
	   from Directory   /  (             
   & 
         &       y9                 Arial    -        .    
       	          2

   Chaining: , -  ,  , -     
   & 
      
   & 
         &  TNPP            
   & 
         -    -            -          }}{
\par }\pard \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright {The locations of Fat Sectors are read from the DIF (Double-indirect Fat), which is described below.  The Fat is represented in itself, but not by a chain \endash  a special reserved }{\cs39\f1\fs16\lang1024 SECT}{ value (}{\cs39\f1\fs16\lang1024 FATSECT = 0xFFFFFFFD}{) is used to mark sectors allocated to the Fat.
\par A }{\cs39\f1\fs16\lang1024 SECT}{ can be converted into a byte offset into the file by using the following formula:  }{\cs39\f1\fs16\lang1024 SECT << ssheader._uSectorShift + sizeof(ssheader)}{.  This implies that sector 0 of the file begins at byte offset 512, not at 0.
\par {\*\bkmkstart _Toc345472312}{\*\bkmkstart _Toc345963641}{\*\bkmkstart _Toc351782786}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.3\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {MiniFat Sectors{\*\bkmkend _Toc345472312}{\*\bkmkend _Toc345963641}{\*\bkmkend _Toc351782786}
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {Since space for streams is always allocated in sector-sized blocks, there can be considerable waste when storing objects much smaller than sectors (typically 512 bytes).  As a solution to this problem, we introduced the concept of the }{\b MiniFat}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 MiniFat}}}{.  The MiniFat is structurally equivalent to the Fat, but is used in a different way.  The virtual sector size for objects represented in the Minifat is }{\cs39\f1\fs16\lang1024 1 << ssheader._uMiniSectorShift}{ (typically 64 bytes) instead of }{\cs39\f1\fs16\lang1024 1 << ssheader._uSectorShift}{ (typically 512 bytes).  The storage for these objects comes from a virtual stream within the Multistream (called the }{\b Ministream}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 Ministream}}}{).
\par The locations for MiniFat sectors are stored in a standard chain in the Fat, with the beginning of the chain stored in the header.
\par A Minifat sector number can be converted into a byte offset into the ministream by using the following formula:  }{\cs39\f1\fs16\lang1024 SECT << ssheader._uMiniSectorShift}{.  (This formula is different from the formula used to convert a SECT into a byte offset in the file, since no header is stored in the Ministream)
\par The Ministream is chained within the Fat in exactly the same fashion as any normal stream.  It is referenced by the first Directory Entry (}{\cs39\f1\fs16\lang1024 SID}{ 0).
\par {\*\bkmkstart _Toc345472313}{\*\bkmkstart _Toc345963642}{\*\bkmkstart _Toc351782787}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.4\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc4\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr4\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {DIF Sectors{\*\bkmkend _Toc345472313}{\*\bkmkend _Toc345963642}{\*\bkmkend _Toc351782787}
\par }\pard\plain \s44\qc\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\f0 {\pict\wmetafile8\picw6058\pich3862\picwgoal3435\pichgoal2190 \bin1600  	     1        &       N@ 
   & 
         & $     TNPP Microsoft PowerPoint   &  TNPP     P 
   & 
         &  TNPP             N   l^1                                                       4     5    &       {g C    &       A!                  Arial     -    .    
       	       .   2
   Pointer to next DIF sector                 #              
   & 
         &       g           -             -              -    g        
   & 
         &        g           -        -              -        g         
   & 
         &         C              -                  -      0 C                -        - 
   $ ?  H   
   & 
         &       iN&                 Arial ?   -        .    
       	          2

   DIF Sector4  ,  0 ( (  ,      
   & 
         &       z`                 Arial     -        .    
       	       *   2
8   Pointers to FAT sectors %            " & "             
   & 
      
   & 
         &  TNPP            
   & 
         -    -                      "System    -                }}{
\par }\pard \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright {The }{\b Double-Indirect Fat}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 Double-Indirect Fat}}}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 DIF}}}{ is used to represent storage of the Fat.  The DIF is also represented by an array of }{\cs39\f1\fs16\lang1024 SECT}{s, and is chained by the terminating cell in each sector array (see the diagram above).  As an optimization, the first 109 Fat Sectors are represented within the header itself, so no DIF sectors will be found in a small (< 7 MB) Compound File.
\par The DIF represents the Fat in a different manner than the Fat represents a chain.    A given index into the DIF will contain the }{\cs39\f1\fs16\lang1024 SECT }{of the Fat Sector found at that offset in the Fat virtual stream.  For instance, index 3 in the DIF would contain the }{\cs39\f1\fs16\lang1024 SECT }{for Sector #3 of the Fat.
\par The storage for DIF Sectors is reserved in the Fat, but is not chained there (space for it is reserved by a special }{\cs39\f1\fs16\lang1024 SECT}{ value , }{\cs39\f1\fs16\lang1024 DIFSECT=0xFFFFFFFC}{).  The location of the first DIF sector is stored in the header.
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {A value of }{\cs39\f1\fs16\lang1024 ENDOFCHAIN=0xFFFFFFFE}{ is stored in the pointer to the next DIF sector of the last DIF sector.
\par {\*\bkmkstart _Toc345472314}{\*\bkmkstart _Toc345963643}{\*\bkmkstart _Toc351782788}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.5\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc5\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr5\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {Directory Sectors{\*\bkmkend _Toc345472314}{\*\bkmkend _Toc345963643}{\*\bkmkend _Toc351782788}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\tab typedef enum tagSTGTY \{
\par \tab \tab STGTY_INVALID\tab \tab = 0,
\par \tab \tab STGTY_STORAGE\tab \tab = 1,
\par \tab \tab STGTY_STREAM\tab \tab = 2,
\par \tab \tab STGTY_LOCKBYTES\tab = 3,
\par \tab \tab STGTY_PROPERTY\tab = 4,
\par \tab \tab STGTY_ROOT\tab \tab = 5,
\par \tab \tab \} }{\b STGTY}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 STGTY}}}{;
\par 
\par \tab typedef enum tagDECOLOR \{
\par \tab \tab DE_RED\tab \tab \tab \tab = 0,
\par \tab \tab DE_BLACK\tab \tab \tab = 1,
\par \tab \tab \} }{\b DECOLOR}{\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 DECOLOR}}}{;
\par 
\par \tab struct StructuredStorageDirectoryEntry \{}{\revised\revauth2\revdttm637768405 \tab \tab \tab }{\i\fs14\revised\revauth2\revdttm637768405 // [offset from start in bytes, length in bytes]}{
\par \tab \tab BYTE\tab \tab _ab[32*sizeof(WCHAR)];\tab \tab // }{\i\fs14\revised\revauth2\revdttm637768405 [}{\i\fs14\revised\revauth2\revdttm637768406 000H,64}{\i\fs14\revised\revauth2\revdttm637768405 ] }{64 bytes. The Element name in Unicode, padded with zeros to
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab //  fill this byte array
\par \tab \tab WORD\tab \tab _cb;\tab \tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [040H,02] }{Length of the Element name in characters, not bytes
\par \tab \tab BYTE\tab \tab _mse;\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [042H,01] }{Type of object: value taken from the STGTY enumeration
\par \tab \tab BYTE\tab \tab _bflags;\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [043H,01] }{Value taken from DECOLOR enumeration.
\par \tab \tab SID\tab \tab \tab _sidLeftSib;\tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [044H,04] }{SID of the left-sibling of this entry in the directory tree
\par \tab \tab SID\tab \tab \tab _sidRightSib;\tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 048H,04}{\i\fs14\revised\revauth2\revdttm637768406 ] }{SID of the right-sibling of this entry in the directory tree
\par \tab \tab SID\tab \tab \tab _sidChild;\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 04CH,04}{\i\fs14\revised\revauth2\revdttm637768406 ] }{SID of the }{\deleted\revauthdel2\revdttmdel-1509872999 first }{child }{\revised\revauth2\revdttm-1509872998 acting as the root of all the children }{of this}{\revised\revauth2\revdttm-1509872998 
\par \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab \tab // }{ element (if _mse=STGTY_STORAGE)
\par \tab \tab GUID\tab \tab _clsId;\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 050H,16}{\i\fs14\revised\revauth2\revdttm637768406 ] }{CLSID of this storage (if _mse=STGTY_STORAGE)
\par \tab \tab DWORD\tab \tab _dwUserFlags;\tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 060H,04}{\i\fs14\revised\revauth2\revdttm637768406 ] }{User flags of this storage (if _mse=STGTY_STORAGE)
\par \tab \tab TIME_T\tab \tab _time[2];\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 064H,16}{\i\fs14\revised\revauth2\revdttm637768406 ] }{Create/Modify time-stamps (if _mse=STGTY_STORAGE)
\par \tab \tab SECT\tab \tab _sectStart;\tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 074H,04}{\i\fs14\revised\revauth2\revdttm637768406 ] }{starting SECT of the stream (if _mse=STGTY_STREAM)
\par \tab \tab ULONG\tab \tab _ulSize;\tab \tab \tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 078H,04}{\i\fs14\revised\revauth2\revdttm637768406 ] }{size of stream in bytes (if _mse=STGTY_STREAM)
\par \tab \tab DFPROPTYPE\tab _dptPropType;\tab \tab \tab // }{\i\fs14\revised\revauth2\revdttm637768406 [}{\i\fs14\revised\revauth2\revdttm637768407 07CH,02}{\i\fs14\revised\revauth2\revdttm637768406 ] }{Reserved for future use. Must be zero.
\par \tab \tab \};
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {
\par The }{\b Directory}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 Directory}}}{ is a structure used to contain per-stream information about the streams in a Compound File, as well as to maintain a tree-styled containment structure.  It is a virtual stream made up of one or more Directory Sectors.  The Directory is represented as a standard chain of sectors within the Fat. The first sector of the Directory chain (the Root Directory Entry) 
\par Each level of the containment hierarchy (i.e. each set of siblings) is represented as a red-black tree.  The parent of this set of sibilings will have a pointer to the top of this tree.  This red-black tree must maintain the following conditions in order for it to be valid:
\par }\pard \s44\qj\fi-360\li360\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright {\tab 1.\tab The root node must always be black.}{\revised\revauth1\revdttm-1508828265  Since the root }{\revised\revauth1\revdttm-1508828264 directory }{\revised\revauth1\revdttm-1508828263 (see below) }{\revised\revauth1\revdttm-1508828265 does not have siblings, it's color is irrelevant and may therefore be either red or black.}{
\par \tab 2.\tab No two consecutive nodes may both be red.
\par \tab 3.\tab The left child must always be less than the right child.  This relationship is defined as:
\par \tab \tab }{\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{  A node with a shorter name is less than a node with a longer name (i.e. compare length of the name)
\par \tab \tab }{\field\flddirty{\*\fldinst {SYMBOL 183 \\f "Symbol" \\s 10 \\h}}{\fldrslt }}{  For nodes with the same length names, compare the two names.
\par }\pard \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright {The simplest implementation of the above invariants would be to mark every node as black, in which case the tree is simply a binary tree.
\par A Directory Sector is an array of Directory Entries, a structure represented in the diagram below.  Each user stream within a Compound File is represented by a single Directory Entry.  The Directory is considered as a large array of Directory Entries.  It is useful to note that the Directory Entry for a stream remains at the same index in the Directory array for the life of the stream \endash  thus, this index (called an }{\b SID}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 SID}}}{) can be used to readily identify a given stream.
\par }{\f0 The directory entry is then padded out with zeros to make a total size of 128 bytes.
\par }{Directory entries are grouped into blocks of four to form Directory Sectors.
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.5.1\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc5\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr5\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {Root Directory Entry
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {The first sector of the Directory chain (also referred to as the first element of the Directory array, or }{\cs39\f1\fs16\lang1024 SID}{ 0) is known as the }{\b Root Directory Entry}{\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \b\v\fs12\cgrid {\xe {\b\f0\fs12 Root Directory Entry}}}{ and is reserved for two purposes:  First, it provides a root parent for all objects stationed at the root of the multi-stream.  Second, its function is overloaded to store the size and starting sector for the Mini-stream.
\par The Root Directory Entry behaves as both a stream and a storage.  All of the fields in the Directory Entry are valid for the root. The Root Directory Entry\rquote s Name field typically contains the string \ldblquote RootEntry\rdblquote  in Unicode, although some versions of structured storage (particularly the preliminary reference implementation and the Macintosh version) store only the first letter of this string, \ldblquote R\rdblquote  in the name. This string is always ignored, since the Root Directory Entry is known by its position at }{\cs39\f1\fs16\lang1024 SID}{ 0 rather than by its name, and its name is not otherwise used. New implementations should write \ldblquote RootEntry\rdblquote  properly in the Root Directory Entry for consistency and support manipulating files created with only the \ldblquote R\rdblquote  name.
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.5.2\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc5\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr5\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {Other Directory Entries
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {Non-root directory entries are marked as either stream (}{\cs39\f1\fs16\lang1024 STGTY_STREAM}{) or storage (}{\cs39\f1\fs16\lang1024 STGTY_STORAGE}{) elements. Storage elements have a }{\cs39\f1\fs16\lang1024 _clsid}{, }{\cs39\f1\fs16\lang1024 _time[]}{, and }{\cs39\f1\fs16\lang1024 _sidChild}{ values; stream elements may not. Stream elements have valid }{\cs39\f1\fs16\lang1024 _sectStart}{ and }{\cs39\f1\fs16\lang1024 _ulSize}{ members, whereas these fields are set to zero for storage elements (except as noted above for the Root Directory Entry).
\par To determine the physical file location of actual stream data from a stream directory entry, it is necessary to determine which FAT (normal or mini) the stream exists within. Streams whose }{\cs39\f1\fs16\lang1024 _ulSize}{ member is less than the }{\cs39\f1\fs16\lang1024 _ulMiniSectorCutoff}{ value for the file exist in the ministream, and so the }{\cs39\f1\fs16\lang1024 _startSect}{ is used as an index into the MiniFat (which starts at }{\cs39\f1\fs16\lang1024 _sectMiniFatStart}{) to track the chain of mini-sectors through the mini-stream (which is, as noted earlier, the standard (non-mini) stream referred to by the Root Directory Entry\rquote s }{\cs39\f1\fs16\lang1024 _sectStart}{ value). Streams whose }{\cs39\f1\fs16\lang1024 _ulSize}{ member is greater than the }{\cs39\f1\fs16\lang1024 _ulMiniSectorCutoff}{ value for the file exist as standard streams \endash  their }{\cs39\f1\fs16\lang1024 _sectStart}{ value is used as an index into the standard FAT which describes the chain of full sectors containing their data).
\par {\*\bkmkstart _Toc345472315}{\*\bkmkstart _Toc345963644}{\*\bkmkstart _Toc351782789}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 2.6\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc6\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr6\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {Storage Sectors{\*\bkmkend _Toc345472315}{\*\bkmkend _Toc345963644}{\*\bkmkend _Toc351782789}
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {Storage sectors are simply collections of arbitrary bytes.  They are the building blocks of user streams, and no restrictions are imposed on their contents.  Storage sectors are represented as chains in the Fat, and each storage chain (stream) will have a single Directory Entry associated with it.
\par {\*\bkmkstart _Toc345472316}{\*\bkmkstart _Toc345963645}{\*\bkmkstart _Toc351782790}{\listtext\pard\plain\s1 \b\fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard\plain \s1\qj\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\outlinelevel0\ls1\outlinelevel0\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst2\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrstop6\pnrstart1\pnrrgb1\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \b\fs28\cf2\cgrid {Examples{\*\bkmkend _Toc345472316}{\*\bkmkend _Toc345963645}{\*\bkmkend _Toc351782790}
\par }\pard\plain \s44\qj\sa60\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {This section contains a hexadecimal dump of an example structured storage file to clarify the binary file format.
\par {\*\bkmkstart _Toc345472317}{\*\bkmkstart _Toc345963646}{\*\bkmkstart _Toc351782791}{\*\bkmkend INTERN_LINK2}{\*\bkmkend INTERN_LINK1}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.1\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc1\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {Sector 0: Header{\*\bkmkend _Toc345472317}{\*\bkmkend _Toc345963646}{\*\bkmkend _Toc351782791}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2 \tab _abSig\tab \tab \tab \tab \tab = DOCF 11E0 A1B1 1AE1
\par         _clid\tab \tab \tab \tab \tab = 0000 0000 0000 0000 0000 0000 0000 0000
\par         _uMinorVersion\tab \tab \tab = 003B
\par         _uDllVersion\tab \tab \tab = 3
\par         _uByteOrder\tab \tab \tab = FFFE (Intel byte order)
\par         _uSectorShift\tab \tab \tab = 9 (512 bytes)
\par         _uMiniSectorShift\tab \tab = 6 (64 bytes)
\par         _usReserved\tab \tab \tab = 0000
\par         _ulReserved1\tab \tab \tab = 00000000
\par         _ulReserved2\tab \tab \tab = 00000000
\par         _csectFat\tab \tab \tab \tab = 00000001
\par         _sectDirStart\tab \tab \tab = 00000001
\par         _signature\tab \tab \tab \tab = 00000000
\par         _ulMiniSectorCutoff\tab = 00001000 (4096 bytes)
\par         _sectMiniFatStart\tab \tab = 00000002
\par         _csectMiniFat\tab \tab \tab = 00000001
\par         _sectDifStart\tab \tab \tab = FFFFFFFE (no DIF, file is < 7Mb)
\par         _csectDIF\tab \tab \tab \tab = 00000000
\par         _sectFat[]\tab \tab \tab \tab = 00000000 FFFFFFFF . . . (continues with FFFFFFFF)
\par 
\par     000000:  D0CF 11E0 A1B1 1AE1  0000 0000 0000 0000   ................
\par     000010:  0000 0000 0000 0000  3B00 0300 FEFF 0900   ........;.......
\par     000020:  0600 0000 0000 0000  0000 0000 0100 0000   ................
\par     000030:  0100 0000 0000 0000  0010 0000 0200 0000   ................
\par     000040:  0100 0000 FEFF FFFF  0000 0000 0000 0000   ................
\par     000050:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     . . .
\par     0001F0:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par {\*\bkmkstart _Toc345472318}{\*\bkmkstart _Toc345963647}{\*\bkmkstart _Toc351782792}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.2\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc2\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {SECT 0: First (Only) FAT Sector{\*\bkmkend _Toc345472318}{\*\bkmkend _Toc345963647}{\*\bkmkend _Toc351782792} 
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2 \tab SECT 0: FFFFFFFD = FATSECT: marks this sector as a FAT sector.
\par \tab \tab \tab \tab Referred to in header by _sectFat[0]
\par \tab SECT 1: FFFFFFFE = ENDOFCHAIN: marks the end of the directory chain,
\par \tab \tab \tab \tab referred to in header by _sectDirStart
\par \tab SECT 2: FFFFFFFE = ENDOFCHAIN: marks the end of the mini-fat, referred to
\par \tab \tab \tab \tab in header by _sectMiniFatStart
\par \tab SECT 3: 00000004 = pointer to the next sector in the \ldblquote Stream 1\rdblquote  data. This sector is
\par \tab \tab \tab \tab the first sector of \ldblquote Stream 1\rdblquote , it is referred to by the Directory Entry 
\par \tab SECT 4: ENDOFCHAIN (0xFFFFFFFE): marks the end of the \ldblquote Stream 1\rdblquote  stream data.
\par \tab Further Entries are empty (FREESECT = 0xFFFFFFFF)
\par 
\par     000200:  FDFF FFFF FEFF FFFF  FEFF FFFF 0400 0000   ................
\par     000210:  FEFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     . . .
\par     0003F0:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par {\*\bkmkstart _Toc345472319}{\*\bkmkstart _Toc345963648}{\*\bkmkstart _Toc351782793}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.3\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {SECT 1: First (Only) Directory Sector{\*\bkmkend _Toc345472319}{\*\bkmkend _Toc345963648}{\*\bkmkend _Toc351782793}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2         SID 0: Root SID: Root Name = "R"
\par         SID 1: Element 1 SID: Name = "Storage 1"
\par         SID 2: Element 2 SID: Name = "Stream 1"
\par         SID 3: Unused
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.3.1\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr1\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {SID 0: Root Directory Entry
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2           _ab          = ("R") (this should be \ldblquote Root Entry\rdblquote )
\par           _cb          = 000}{\f2\revised\revauth2\revdttm637768409 4}{\deleted\f2\revauthdel2\revdttmdel637768409 2}{\f2  (}{\f2\revised\revauth2\revdttm637768409 4}{\deleted\f2\revauthdel2\revdttmdel637768409 2}{\f2  bytes, }{\deleted\f2\revauthdel2\revdttmdel637768409 do}{\deleted\f2\revauthdel2\revdttmdel637768410 es not }{\f2 include}{\f2\revised\revauth2\revdttm637768410 s}{\f2  double-null terminator)
\par           _mse         = 05 (STGTY_ROOT)
\par           _bflags      = 00 (DE_RED)
\par           _sidLeftSib  = FFFFFFFF (none)
\par           _sidRightSib = FFFFFFFF (none)
\par           _sidChild    = 00000001 (SID 1: \ldblquote Storage 1\rdblquote )
\par           _clsid       = 0067 6156 54C1 CE11 8553 00AA 00A1 F95B
\par           _dwUserFlags = 00000000 (n/a for STGTY_ROOT)
\par           _time[0]     = CreateTime   = 0000 0000 0000 0000 (none set)
\par           _time[1]     = ModifyTime   = 801E 9213 4BB4 BA01 (??)
\par           _sectStart   = 00000003 (starting sector of MiniStream)
\par           _ulSize      = 00000240 (length of MiniStream in bytes)
\par           _dptPropType = 0000 (n/a)
\par 
\par     000400:  0052 0000 0000 0000  0000 0000 0000 0000   .R..............
\par     000410:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000420:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000430:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000440:  0}{\f2\revised\revauth2\revdttm637768410 4}{\deleted\f2\revauthdel2\revdttmdel637768410 2}{\f2 00 0500 FFFF FFFF  FFFF FFFF 0100 0000   ................
\par     000450:  0067 6156 54C1 CE11  8553 00AA 00A1 F95B   .gaVT....S.....[
\par     000460:  0000 0000 0000 0000  0000 0000 801E 9213   ................
\par     000470:  4BB4 BA01 0300 0000  4002 0000 0000 0000   K.......@.......    
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.3.2\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr2\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {SID 1: \ldblquote Storage 1\rdblquote 
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2           _ab          = ("Storage 1")
\par           _cb          = 0014 (20 bytes, including double-null terminator)
\par           _mse         = 01 (STGTY_STORAGE)
\par           _bflags      = 01 (DE_BLACK)
\par           _sidLeftSib  = FFFFFFFF (none)
\par           _sidRightSib = FFFFFFFF (none)
\par           _sidChild    = 00000002 (SID 2: \ldblquote Stream 1\rdblquote )
\par           _clsid       = 0000 0000 0000 0000 0000 0000 0000 0000 (none set)
\par           _dwUserFlags = 00000000 (none set)
\par           _time[0]     = CreateTime   = 00000000 00000000 (none set)
\par           _time[1]     = ModifyTime   = 00000000 00000000 (none set)
\par           _sectStart   = 00000000 (n/a)
\par           _ulSize      = 00000000 (n/a)
\par           _dptPropType = 0000 (n/a)
\par 
\par     000480:  5300 7400 6F00 7200  6100 6700 6500 2000   S.t.o.r.a.g.e. .
\par     000490:  3100 0000 0000 0000  0000 0000 0000 0000   1...............
\par     0004A0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0004B0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0004C0:  1400 0101 FFFF FFFF  FFFF FFFF 0200 0000   ................
\par     0004D0:  0061 6156 54C1 CE11  8553 00AA 00A1 F95B   .aaVT....S.....[
\par     0004E0:  0000 0000 0088 F912  4BB4 BA01 801E 9213   ........K.......
\par     0004F0:  4BB4 BA01 0000 0000  0000 0000 0000 0000   K...............
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.3.3\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {SID 2: \ldblquote Stream 1\rdblquote 
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2           _ab          = ("Stream 1")
\par           _cb          = 0012 (18 bytes, including double-null terminator)
\par           _mse         = 02 (STGTY_STREAM)
\par           _bflags      = 01 (DE_BLACK)
\par           _sidLeftSib  = FFFFFFFF (none)
\par           _sidRightSib = FFFFFFFF (none)
\par           _sidChild    = FFFFFFFF (n/a for STGTY_STREAM)
\par           _clsid       = 0000 0000 0000 0000 0000 0000 0000 0000 (n/a)
\par           _dwUserFlags = 00000000 (n/a)
\par           _time[0]     = CreateTime   = 00000000 00000000 (n/a)
\par           _time[1]     = ModifyTime   = 00000000 00000000 (n/a)
\par           _startSect   = 00000000 (SECT in mini-fat, since _ulSize is smaller than _ulMiniSectorCutoff)
\par           _ulSize      = 00000220 (< ssheader._ulMiniSectorCutoff, so _sectStart is in Mini)
\par           _dptPropType = 0000 (n/a)
\par 
\par     000500:  5300 7400 7200 6500  6100 6D00 2000 3100   S.t.r.e.a.m. .1.
\par     000510:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000520:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000530:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000540:  1200 0201 FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     000550:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000560:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     000570:  0000 0000 0000 0000  2002 0000 0000 0000   ........ .......
\par     000580:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par {\listtext\pard\plain\s3 \cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.3.4\tab}}\pard\plain \s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\s3\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\ls1\ilvl2\outlinelevel2\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst5\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrxst46\pnrxst0\pnrxst2\pnrxst0\pnrstop12\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb5\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr4\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \cf2\cgrid {SID 3: Unused
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2     000590:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0005A0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0005B0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0005C0:  0000 0000 FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     0005D0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0005E0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par     0005F0:  0000 0000 0000 0000  0000 0000 0000 0000   ................
\par {\*\bkmkstart _Toc345472320}{\*\bkmkstart _Toc345963649}{\*\bkmkstart _Toc351782794}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.4\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc4\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr4\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {SECT 3: MiniFat Sector{\*\bkmkend _Toc345472320}{\*\bkmkend _Toc345963649}{\*\bkmkend _Toc351782794}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\f2 \tab SECT 0: 00000001: pointer to the second sector in the \ldblquote Stream 1\rdblquote  data. This sector is
\par \tab \tab \tab \tab the first sector of \ldblquote Stream 1\rdblquote , it is referred to by _sectStart of SID 2
\par \tab SECT 1: 00000002: pointer to the third sector in the \ldblquote Stream 1\rdblquote  data. This sector is
\par \tab \tab \tab \tab the second sector of \ldblquote Stream 1\rdblquote , it is referred to in MiniFat SECT 0, above.
\par         . . .
\par }\pard \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\outlinelevel0\adjustright \shading500 {\f2         SECT 8: FFFFFFFE = ENDOFCHAIN: marks the end of the \ldblquote Stream 1\rdblquote  data.
\par }\pard \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 {\f2 
\par }\pard \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\outlinelevel0\adjustright \shading500 {\f2 \tab Further Entries are empty (FREESECT = 0xFFFFFFFF)
\par }\pard \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 {\f2 
\par     000600:  0100 0000 0200 0000  0300 0000 0400 0000   ................
\par     000610:  0500 0000 0600 0000  0700 0000 0800 0000   ................
\par     000620:  FEFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     . . .
\par     0007F0:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par {\*\bkmkstart _Toc345472321}{\*\bkmkstart _Toc345963650}{\*\bkmkstart _Toc351782795}{\listtext\pard\plain\s2 \fs28\cf2\cgrid \hich\af0\dbch\af0\loch\f0 3.5\tab}}\pard\plain \s2\qj\ri3600\sb240\sa86\keep\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \ls1\ilvl1\outlinelevel1\ls1\ilvl1\outlinelevel1\pnrauth1\pnrdate-1508828266\pnrstart0\pnrxst3\pnrxst0\pnrxst0\pnrxst0\pnrxst46\pnrxst0\pnrxst1\pnrxst0\pnrstop8\pnrstart1\pnrrgb1\pnrrgb3\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrrgb0\pnrstop9\pnrstart2\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc3\pnrnfc0\pnrnfc0\pnrnfc0\pnrnfc5\pnrnfc0\pnrnfc0\pnrstop18\pnrstart3\pnrpnbr3\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr5\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrpnbr0\pnrstop36\adjustright \fs28\cf2\cgrid {SECT 4: MiniStream (Data of \ldblquote Stream 1\rdblquote ){\*\bkmkend _Toc345472321}{\*\bkmkend _Toc345963650}{\*\bkmkend _Toc351782795}
\par }\pard\plain \s73\fi-720\li360\ri-720\nowidctlpar\widctlpar\tx720\tx1080\tx1440\tx1800\tx2160\tx2520\tx2880\tx3240\tx3600\tx3960\tx4320\tx4680\tx5040\tx5400\tx5760\tx6120\tx6480\tx6840\tx7200\tx7560\tx7920\tx8280\adjustright \shading500 \f1\fs16\cgrid {\i\f2\fs14     // referred to by SECTs in MiniFat of SECT 3, above
\par }{\f2 
\par     000800:  4461 7461 2066 6F72  2073 7472 6561 6D20   Data for stream
\par     000810:  3144 6174 6120 666F  7220 7374 7265 616D   1Data for stream
\par     000820:  2031 4461 7461 2066  6F72 2073 7472 6561    1Data for strea
\par     . . .
\par     000A00:  7461 2066 6F72 2073  7472 6561 6D20 3144   ta for stream 1D
\par     000A10:  6174 6120 666F 7220  7374 7265 616D 2031   ata for stream 1
\par 
\par }{\i\f2\fs14     // data ends at 000A1F, MiniSector is filled to the end with known data (a copy of the header or
\par     // FFFFFFF to prevent random disk or memory contents from contaminating the file on-disk.
\par }{\f2 
\par     000A20:  0000 0000 0000 0000  3B00 03FF FE00 0900   ........;.......
\par     000A30:  0600 0000 0000 0000  0000 0000 0000 0100   ................
\par     000A40:  D0CF 11E0 A1B1 1AE1  0000 0000 0000 0000   ................
\par     000A50:  0000 0000 0000 0000  003B 0003 FFFE 0009   .........;......
\par     000A60:  0006 0000 0000 0000  0000 0000 0000 0001   ................
\par     000A70:  0000 0001 0000 0000  0000 1000 0000 0002   ................
\par     000A80:  0000 0001 FFFF FFFE  0000 0000 0000 0000   ................
\par     000A90:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................
\par     . . .
\par     000BF0:  FFFF FFFF FFFF FFFF  FFFF FFFF FFFF FFFF   ................}{
\par }\pard\plain \nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\f0 \sect }\sectd \marglsxn1440\margrsxn1440\binfsxn258\binsxn258\pgnrestart\pgnlcrm\linex0\endnhere\sectdefaultcl {\header \pard\plain \s35\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid {
\par }}\pard\plain \s46\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw30\brsp60 \brdrbtw\brdrs\brdrw30\brsp60 \outlinelevel0\adjustright \b\fs36\cf2\cgrid {Index
\par }\pard\plain \s43\qj\sb720\sa480\sl220\slmult0\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\f0 \sect }\sectd \marglsxn1440\margrsxn1440\binfsxn258\binsxn258\sbknone\pgnrestart\pgnlcrm\linex0\cols2\endnhere\sectdefaultcl {\header \pard\plain \s35\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid {\field{\*\fldinst {ref ProjectName}}{\fldrslt {\b Error! Reference source not found.}}}{\tab }{\field{\*\fldinst {title }}{\fldrslt {Compound File Binary Format}}}{\tab Draft: }{\field{\*\fldinst {ref Version}}{\fldrslt {\b Error! Reference source not found.}}}{; }{\field{\*\fldinst {DATE}}{\fldrslt {\lang1024 01/03/97}}}{
\par }}{\footer \pard\plain \s34\keepn\nowidctlpar\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \f5\fs16\cgrid {\f3 \'d3}{\f1   Microsoft Corporation, 1992. All Rights Reserved.\tab }{\field{\*\fldinst {\f1 if }{\field{\*\fldinst {\f1 seq chapt \\c}}{\fldrslt {\f1\lang1024 0}}}{\f1  <> 0 "}{\field{\*\fldinst {\f1 info subject}}{\fldrslt }}{\f1  }{\field{\*\fldinst {\f1 seq chapt \\c}}{\fldrslt {\f1\lang1024 0}}}{\f1 -" ""}}}{\field\flddirty{\*\fldinst {\f1 PAGE}}{\fldrslt {\f1 i}}}{\f1 \tab Microsoft Confidential}{\v\f1  (printed }{\field{\*\fldinst {\v\f1 date \\@ "M/d/yy h:mm AM/PM"}}{\fldrslt {\v\f1\lang1024 1/3/97 2:20 PM}}}{\v\f1 )}{\f1 
\par }{
\par }}\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\field{\*\fldinst {\f0 INDEX \\h "A"}}{\fldrslt {\b0\f0\lang1024 C
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\lang1024 chain, 2
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 D
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\b\lang1024 DECOLOR}{\lang1024 , 3
\par }\pard \s31\nowidctlpar\widctlpar\outlinelevel0\adjustright {\lang1024 DFPROPTYPE, 1
\par }\pard \s31\nowidctlpar\widctlpar\adjustright {\b\lang1024 DFSIGNATURE}{\lang1024 , 1
\par }{\b\lang1024 DIF}{\lang1024 , 3
\par }{\b\lang1024 DIFSECT}{\lang1024 , 1
\par }{\b\lang1024 Directory}{\lang1024 , 3
\par }\pard \s31\nowidctlpar\widctlpar\outlinelevel0\adjustright {\b\lang1024 Double-Indirect Fat}{\lang1024 , 3
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 E
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\b\lang1024 ENDOFCHAIN}{\lang1024 , 1
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 F
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\lang1024 Fat, 2
\par }{\b\lang1024 FATSECT}{\lang1024 , 1
\par }{\b\lang1024 FREESECT}{\lang1024 , 1
\par }{\b\lang1024 FSINDEX}{\lang1024 , 1
\par }{\b\lang1024 FSOFFSET}{\lang1024 , 1
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 M
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\b\lang1024 MiniFat}{\lang1024 , 2
\par }{\b\lang1024 Ministream}{\lang1024 , 2
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 O
\par }\pard\plain \s31\nowidctlpar\widctlpar\outlinelevel0\adjustright \f4\fs20\cgrid {\b\lang1024 OFFSET}{\lang1024 , 1
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 R
\par }\pard\plain \s31\nowidctlpar\widctlpar\outlinelevel0\adjustright \f4\fs20\cgrid {\b\lang1024 Root Directory Entry}{\lang1024 , 4
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 S
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\lang1024 SECT, 1
\par sector, 1
\par SID, 1, 4
\par }{\b\lang1024 STGTY}{\lang1024 , 3
\par }\pard\plain \s33\qj\sb240\sa58\keepn\nowidctlpar\widctlpar\brdrt\brdrs\brdrw15\brsp20 \brdrbtw\brdrs\brdrw15\brsp20 \outlinelevel0\adjustright \b\f4\fs20\cgrid {\b0\f0\lang1024 V
\par }\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\lang1024 virtual stream, 1
\par }}}\pard\plain \s31\nowidctlpar\widctlpar\adjustright \f4\fs20\cgrid {\f0 
\par }}
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\ref\test\proptest\readme.txt ===
Proptest is a set of tests for the property sets Interfaces.
One interesting feature is that with the /d parameter, you
can dump any storage file with properties to look at it.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\ref\test\reftest\readme.txt ===
REFTEST -- reference implementation test

This test is a small subset of stgdrt, it also contains an optional
feature for interoperability testing. With 'reftest c' it creates
a small docfile 'drt.dfl'. With 'reftest r' it reads in the file
and verifies the data written with the 'c' option. This test will
be useful for example, when you use reftest to create a file on
one platform and use another platform's reftest to verify the file.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\ole32\stg\ref\test\stgdrt\readme.txt ===
STGDRT - storage interfaces runtime test

This test calls some of the interfaces of storage and verifies some of the
functionalities. It is (obviously) non-exhaustive.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\balls\coffbase.txt ===
;
; This file defines the base virtual address for Dynamic Link Libraries (DLL)
; that are part of the NT OS/2 System.  The first token on a line is the name
; of the DLL and the second token is the base virtual address, in hexidecimal.
; The third token is the maximum size of the DLL image file, including symbols.
;

usermode    0x00010000  0x60000000


;
; This section lists all the Cairo DLL's.  Until we merge with the NT
; group, limit yourself to the range 0x10000000 - 0x20000000.
;

cardf       0x10000000  0x00200000
eventsys    0x10200000  0x00200000
commnot     0x10400000  0x00200000
cryptdll    0x10600000  0x00200000
demoif      0x10800000  0x00200000
menuedt     0x10a00000  0x00200000
dfsm        0x10c00000  0x00200000
clockctl    0x10e00000  0x00200000
calendar    0x11000000  0x00200000
report      0x11200000  0x00200000
desk        0x11400000  0x00200000
filter      0x11600000  0x00200000
datetime    0x11800000  0x00200000
dtsrv       0x11a00000  0x00200000
iclass      0x11c00000  0x00200000
dfsinit     0x11e00000  0x00200000
cpshare     0x12000000  0x00200000
iprod       0x12200000  0x00200000
kerberos    0x12400000  0x00200000
kerbsupp    0x12600000  0x00200000
applet1     0x12800000  0x00200000
cairocpl    0x12a00000  0x00200000
cpo         0x12c00000  0x00200000
deskapp     0x12e00000  0x00200000
ntlm        0x13000000  0x00200000
objsrv      0x13200000  0x00200000
ole2        0x13400000  0x00200000
lnktrack    0x13600000  0x00200000
pocket      0x13800000  0x00200000
dsfsmsgs    0x13a00000  0x00200000
stemdll     0x13c00000  0x00200000
propset     0x13e00000  0x00200000
prsht       0x14000000  0x00200000
bmpctl      0x14200000  0x00200000
spintime    0x14400000  0x00200000
grpbox      0x14600000  0x00200000
security    0x14800000  0x00200000

; uofs needs two slots worth:
uofs        0x14a00000  0x00400000
;uofs       0x14c00000  0x00200000

; Query needs four slots worth:
query       0x14e00000  0x00800000
;query      0x15000000  0x00200000
;query      0x15200000  0x00200000
;query      0x15400000  0x00200000

;unused     0x15600000  0x00200000
dafs        0x15800000  0x00200000
dahard      0x15a00000  0x00200000
stdobj      0x15c00000  0x00200000
csumcat     0x15e00000  0x00200000
sysmgmt     0x16000000  0x00200000
cpdskadm    0x16200000  0x00200000
idfsvol     0x16400000  0x00200000
testdll     0x16600000  0x00400000
cap         0x16a00000  0x00200000
sysinf      0x16c00000  0x00200000
shtypes     0x16e00000  0x00200000
shexplor    0x17000000  0x00300000
popups      0x17300000  0x00100000
replsup     0x17400000  0x00200000
schema      0x17700000  0x00200000
useragnt    0x18000000  0x00200000
vpcont      0x18200000  0x00200000
uares       0x18400000  0x00200000
rndrevrp    0x18600000  0x00200000
pdfpage     0x18800000  0x00200000
pkgpage     0x18a00000  0x00200000
package     0x18e00000  0x00200000
pdf         0x19000000  0x00200000
dsys        0x19200000  0x00200000
dfssetup    0x19400000  0x00200000
dfsinstr    0x19600000  0x00200000
lprofile    0x19800000  0x00200000
ole232      0x19a00000  0x00400000
compob32    0x19e00000  0x00400000
docfile     0x1a200000  0x00400000
tlib34      0x1a600000  0x00200000
storage     0x1aa00000  0x00600000
ole2pr32    0x1b000000  0x00500000
piballs     0x1b500000  0x00100000
testext     0x1b600000  0x00200000
loghrs      0x1b800000  0x00100000
scstg       0x1b900000  0x00100000
smoke       0x1ba00000  0x00100000
shview      0x1bc00000  0x00200000
shtcmcli    0x1be00000  0x00200000
shdebug     0x1c000000  0x00200000
shell232    0x1c200000  0x00200000
shhdlr      0x1c400000  0x00200000
shprop      0x1c600000  0x00200000
shtcmsrv    0x1c800000  0x00200000
spincube    0x1ca00000  0x00200000

; Repl dlls
chglogdb    0x1cc00000  0x00100000
dumyrclr    0x1cd00000  0x00100000
flatrst     0x1ce00000  0x00100000
lastwins    0x1cf00000  0x00100000
ofsrs       0x1d000000  0x00100000
ora         0x1d100000  0x00100000
orarcnlr    0x1d200000  0x00100000
replui      0x1d300000  0x00100000
roschlog    0x1d400000  0x00100000
rsmgr       0x1d500000  0x00100000
dsobjs      0x1d600000  0x00200000
account     0x1d800000  0x00200000
rcon        0x1da00000  0x00100000
robj        0x1db00000  0x00100000
rset        0x1dc00000  0x00100000
chgp        0x1dd00000  0x00100000

; Old Forms DLLs

form        0x1e000000  0x00200000
formctls    0x1e200000  0x00200000
crstdctl    0x1e400000  0x00200000
formtoc     0x1e600000  0x00200000
proppage    0x1e800000  0x00100000
timing      0x1e900000  0x00100000

;RTO dlls
rtfdisp     0x1eA00000  0x00200000
rtfmle      0x1eC00000  0x00200000
webcore     0x1eE00000  0x00200000
rtfdoc      0x1f000000  0x00200000
ctlrto      0x1f200000  0x00200000

shctrls     0x1f400000  0x00600000
shfx        0x1fa00000  0x00100000
shcommon    0x1fb00000  0x00300000
shtaskhk    0x1fe00000  0x00100000

;
smss        0x20000000  0x40000000
dbgss       0x30000000  0x30000000
csrss       0x40000000  0x20000000
os2ss       0x40000000  0x20000000
psxss       0x40000000  0x20000000
cmd         0x50000000  0x10000000
ntdll       0x60100000  0x00100000
dbgdll      0x60200000  0x00100000
csr         0x60300000  0x00100000
csrrtl      0x60400000  0x00100000
csrsrv      0x60500000  0x00100000
kernel32    0x60600000  0x00100000
basertl     0x60700000  0x00100000
basesrv     0x60800000  0x00100000
consrv      0x60900000  0x00100000
console     0x60A00000  0x00100000
user32      0x60B00000  0x00200000
gdi32       0x60D00000  0x00100000
gdisrv      0x60E00000  0x00200000
jazz        0x61000000  0x00100000
gre         0x61100000  0x00200000
rasdd       0x61300000  0x00100000
sysmono     0x61400000  0x00100000
courier     0x61500000  0x00100000
helv        0x61600000  0x00100000
times       0x61700000  0x00100000
netapi32    0x61800000  0x00200000
winmgr      0x62100000  0x00100000
display     0x62200000  0x00100000
vga         0x62200000  0x00100000
bmfd        0x62300000  0x00100000
ttfd        0x62400000  0x00100000
vtfd        0x62500000  0x00100000
winspool    0x62600000  0x00100000
splsrv      0x62700000  0x00100000
ntprint     0x62800000  0x00100000
pscript     0x62900000  0x00100000
halftone    0x62A00000  0x00100000
lmspool     0x62B00000  0x00100000
os2dll      0x63000000  0x00100000
services    0x63100000  0x00100000
psxdll      0x63200000  0x00100000
userrtl     0x63300000  0x00100000
winnet      0x63400000  0x00100000
msv1_0      0x63500000  0x00100000
samlib      0x635A0000  0x00100000
lsaap       0x63600000  0x00100000
netrap      0x63700000  0x00100000
TEMPNAME2   0x63800000  0x00700000
usersrv     0x63f00000  0x00300000
media       0x65000000  0x00100000
mediasrv    0x66000000  0x00100000
canon330    0x66100000  0x00100000
cit24us     0x66200000  0x00100000
canon10e    0x66300000  0x00100000
canon130    0x66400000  0x00100000
qwiii       0x66500000  0x00100000
citoh       0x66600000  0x00100000
deskjet     0x66700000  0x00100000
epson24     0x66800000  0x00100000
epson9      0x66900000  0x00100000
fuji24      0x66A00000  0x00100000
fuji9       0x66B00000  0x00100000
fujimtrx    0x66C00000  0x00100000
hpdskjet    0x66D00000  0x00100000
hppcl       0x66E00000  0x00100000
ibmgrx      0x66F00000  0x00100000
lq2500      0x67000000  0x00100000
nec24pin    0x67100000  0x00100000
oki24       0x67200000  0x00100000
oki9        0x67300000  0x00100000
oki9ibm     0x67400000  0x00100000
paintjet    0x67500000  0x00100000
proprint    0x67600000  0x00100000
proprn24    0x67700000  0x00100000
thinkjet    0x67800000  0x00100000
ntsdexts    0x67900000  0x00100000
plotter     0x67A00000  0x00100000
rpcrt4      0x67B00000  0x00100000
winmm       0x67D00000  0x00100000
rpcssp      0x67E00000  0x00100000
mciwave     0x67F00000  0x00100000
rpclts1     0x68000000  0x00100000
rpcltc1     0x68100000  0x00100000
ldrdll      0x68200000  0x00100000
mcicda      0x68300000  0x00100000
plottrui    0x68400000  0x00100000
rasddui     0x68500000  0x00100000
pscrptui    0x68600000  0x00100000
mmio        0x68700000  0x00100000
rpcnts1     0x68800000  0x00100000
rpcntc1     0x68900000  0x00100000
nlsapi      0x68A00000  0x00100000
ibm5204     0x68B00000  0x00100000
ti850       0x68C00000  0x00100000
olesvr32    0x68D00000  0x00100000
olecli32    0x68E00000  0x00100000
diconix     0x68F00000  0x00100000
fscaler     0x69000000  0x00100000
sys003      0x69100000  0x00100000
cit9us      0x69200000  0x00100000
escp2       0x69300000  0x00100000
execjet     0x69400000  0x00100000
panson24    0x69500000  0x00100000
panson9     0x69600000  0x00100000
ps1         0x69700000  0x00100000
toshiba     0x69800000  0x00100000
thinkjet    0x69900000  0x00100000
svcctrl     0x69A00000  0x00100000
xactsrv     0x69B00000  0x00100000
winreg      0x69C00000  0x00100000
samsrv      0x69D00000  0x00100000
mmdrv       0x69F00000  0x00100000
dlcapi      0x6A000000  0x00100000
win32spl    0x6A100000  0x00100000
localspl    0x6A200000  0x00100000
rpclts5     0x6A300000  0x00100000
rpcltc5     0x6A400000  0x00100000
netlogon    0x6A500000  0x00200000
tmsre32     0x6A600000  0x00100000
lsaudll     0x6A700000  0x00100000
mciseq      0x6A800000  0x00100000
winprint    0x6A900000  0x00100000
localmon    0x6AA00000  0x00100000
msaudite    0x6AB00000  0x00100000
msauditt    0x6AC00000  0x00100000
hpmon       0x6AD00000  0x00100000
alrsvc      0x6AE00000  0x00100000
srvsvc      0x6AF00000  0x00100000
wkssvc      0x6B000000  0x00100000
xssvc       0x6B100000  0x00100000
rpclts3     0x6B200000  0x00100000
rpcltc3     0x6B300000  0x00100000
htui        0x6B400000  0x00100000
lsasrv      0x6B500000  0x00100000
mmsndsrv    0x6B600000  0x00100000
midi        0x6B700000  0x00100000
bowsvc      0x6B800000  0x00100000
drivers     0x6B900000  0x00100000
lmmon       0x6BA00000  0x00100000

; RTO Toolbar dlls

hyprgzmo    0x6BB00000  0x00100000
hyprbttn    0x6BC00000  0x00100000

;
; The following is an extension for NTSD which traces memory usage in the
; ULIB utilities...
;
memtrace        0x6BF00000      0x00100000

; shell

shamu       0x6C000000  0x00800000

; CD Forms

formkrnl    0x6C800000  0x00200000
cdform2c    0x6CA00000  0x00200000
cdproppg    0x6CC00000  0x00200000
basectrl    0x6CE00000  0x00200000
cdctrls     0x6D000000  0x00200000
cdbase      0x6D200000  0x00200000

; Win32 shell apps/dlls

control     0x70000000  0x00100000
color       0x70100000  0x00100000
sound       0x70200000  0x00100000
ports       0x70300000  0x00100000
intl        0x70400000  0x00100000
date        0x70500000  0x00100000
mouse       0x70600000  0x00100000
keybd       0x70700000  0x00100000
desktop     0x70800000  0x00100000
fonts       0x70900000  0x00100000
security    0x70A00000  0x00100000
main        0x70B00000  0x00100000
ups         0x70C00000  0x00100000

; Win32 National Keyboard Layers

kbdbe       0x72000000  0x00100000
kbdca       0x72100000  0x00100000
kbdda       0x72200000  0x00100000
kbddv       0x72300000  0x00100000
kbdes       0x72400000  0x00100000
kbdfc       0x72500000  0x00100000
kbdfr       0x72600000  0x00100000
kbdfs       0x72700000  0x00100000
kbdgr       0x72800000  0x00100000
kbdic       0x72900000  0x00100000
kbdit       0x72A00000  0x00100000
kbdla       0x72B00000  0x00100000
kbdne       0x72C00000  0x00100000
kbdno       0x72D00000  0x00100000
kbdpo       0x72E00000  0x00100000
kbdsf       0x72F00000  0x00100000
kbdsg       0x73000000  0x00100000
kbdsp       0x73100000  0x00100000
kbduk       0x73200000  0x00100000
kbdus       0x73300000  0x00100000
kbdusx      0x73400000  0x00100000

;
; The following is not currently used until we switch to the new image
; format with the new section headers.
;
executive   0xD0020000  0x18000000





;
;   The following are the Mep extensions
;
tglcase     0x09080000  0x00100000
pmatch      0x09090000  0x00100000
justify     0x090a0000  0x00100000
ulcase      0x090b0000  0x00100000
filter      0x090c0000  0x00100000
mhelp       0x090d0000  0x00100000
mepparty    0x090e0000  0x00100000
srmep       0x090f0000  0x00100000
mshelp      0x09100000  0x00100000
mbrowse     0x09110000  0x00100000



;
;  The following are for the utilities
;
ulib        0x09800000  0x00200000
uhpfs       0x09a10000  0x00100000
ufat        0x09b20000  0x00100000
untfs       0x09c30000  0x00100000
ifsutil     0x09d40000  0x00100000
cufat       0x09e50000  0x00100000
cuhpfs      0x09f60000  0x00100000
fmifs       0x0a070000  0x00100000
uspifs      0x0a180000  0x00100000

;
;  The following are for the net error messages
;
netmsg      0x09600000      0x00080000
neth        0x09680000      0x00080000
netevent    0x09700000      0x00080000

;
;  The following is the I/O error log messages.
;
iologmsg    0x09700000      0x00080000

;
; The following is for the 16-bit loader for the OS/2 subsystem
;
loader      0x20000000  0x01000000

;
; The following is for the Streams/Sockets dll's
;
winsock     0x75000000  0x00200000
winstrm     0x75200000  0x00100000
sockutil    0x75300000  0x00100000
resolver    0x75400000  0x00100000
inetmib1    0x75500000  0x00100000
lmmib2      0x75600000  0x00100000
tcpipsvc    0x75700000  0x00100000
nbtsvc      0x75800000  0x00100000

;
; The following are for the windowed debugger (windbg)
;

eecan       0x40000000  0x00200000
em          0x48000000  0x00200000
shcoff      0x50000000  0x00200000
shcv        0x58000000  0x00200000
tlloc       0x60000000  0x00200000

;
; The following are for the NetUI components.
;

acledit     0x76000000  0x00100000
mprmain     0x76100000  0x00100000
ntlanman    0x76200000  0x00100000
srvmgr      0x76300000  0x00100000
ncpa        0x76400000  0x00100000

;
; The following are for OFS Utilities (CONVERT and REPART)
;
ofsutil     0x76600000  0x00400000
fmtmnofs    0x77000000  0x00200000
cfrtulib    0x77200000  0x00100000

;
; User object property pages.
;

user_ui     0x73000000  0x00400000
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\balls\tmarshal.ini ===
;
; Run All the Marshal Tests
;

[Marshal Test]
; these first few are not run due to test bugs
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

; all the rest are run
GetStandardMarshal	    = 1
Format			    = 1
GetIIDFromMI		    = 1
MarshalSizeMax		    = 1
LocalInterfaceNormal	    = 1
UniqueQIPointer 	    = 1
LocalInterfaceTableStrong   = 1
LocalInterfaceTableWeak     = 1
UnmarshalGUIDNULL	    = 1
UnmarshalDifferentIID	    = 1
RemoteInterfaceNormal	    = 1
RemoteInterfaceTableStrong  = 1
CustomMarshalNormal	    = 1
CustomMarshalTable	    = 1
Echo			    = 1
MultiQINormal		    = 1
MultiQIHandler		    = 1
Handler 		    = 1
Loop			    = 1
LockObjectExternal	    = 1
DisconnectObject	    = 1
ReleaseMarshalData	    = 1
MiddleMan		    = 1
LocalDiffMachine	    = 1
RemoteDiffMachine	    = 1
ExpiredOXIDs		    = 1
NonNDRProxy		    = 1
MarshalStorage		    = 1
TIDAndLID		    = 1
CrossThread		    = 1
NoPing			    = 1
PSClsid 		    = 1
PSClsid2		    = 1


;
; Run Selected Marshal Tests
;

;[Marshal Test]
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

GetStandardMarshal	    = 0
Format			    = 0
GetIIDFromMI		    = 0
MarshalSizeMax		    = 0
LocalInterfaceNormal	    = 0
UniqueQIPointer 	    = 0
LocalInterfaceTableStrong   = 0
LocalInterfaceTableWeak     = 0
UnmarshalGUIDNULL	    = 0
UnmarshalDifferentIID	    = 0
RemoteInterfaceNormal	    = 0
RemoteInterfaceTableStrong  = 0
CustomMarshalNormal	    = 0
CustomMarshalTable	    = 0
Echo			    = 0
MultiQINormal		    = 0
MultiQIHandler		    = 0
Handler			    = 0
Loop			    = 0
LockObjectExternal	    = 0
DisconnectObject	    = 0
ReleaseMarshalData	    = 0
MiddleMan		    = 0
LocalDiffMachine	    = 0
RemoteDiffMachine	    = 0
ExpiredOXIDs		    = 1
NonNDRProxy		    = 0
MarshalStorage		    = 0
TIDAndLID		    = 0
CrossThread		    = 0
NoPing			    = 0
PSClsid 		    = 0
PSClsid2		    = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\balls\win.ini ===
;;  debug info levels set by default when an app starts up.
;;  a good value for cairole is 0x4ff for debug outs.

[Cairo Infolevels]
    cairole = 0x03
    ol = 0x03


;;  tmarshal test options.
;;  = 1 means run the test
;;  = 0 means dont run the test
;;

[Marshal Test]
    LocalInterfaceNormal = 1
    LocalInterfaceTableStrong = 1
    LocalInterfaceTableWeak = 1
    RemoteInterfaceNormal = 1
    RemoteInterfaceTableStrong = 1
    RemoteInterfaceTableWeak = 1
    Echo = 1
    Loop = 1
    MiddleMan = 1
    LockObjectExternal = 1
    DisconnectObject = 1
    GetStandardMarshal = 1
    CreateRemoteHandler = 1
    CustomMarshalNormal = 1
    CustomMarshalTable = 1
    MarshalStorage = 1
    Aggregate = 0
    LocalDiffMachine = 0
    RemoteDiffMachine = 0
    StorageDiffMachine = 0


;;  threading modes for the OLE servers
;;  these are used by all OLE servers generated in the com\utest\balls
;;

[TestSrv]
    ThreadMode = SingleThreaded
;;    ThreadMode = MultiThreaded


[OleSrv]
    ThreadMode = SingleThreaded
;;    ThreadMode = MultiThreaded
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\balls\client\tmarshal\tmarshal.ini ===
;
; Run All the Marshal Tests
;

[Marshal Test]
; these first few are not run due to test bugs
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

; all the rest are run
GetStandardMarshal	    = 1
Format			    = 1
GetIIDFromMI		    = 1
MarshalSizeMax		    = 1
LocalInterfaceNormal	    = 1
UniqueQIPointer 	    = 1
LocalInterfaceTableStrong   = 1
LocalInterfaceTableWeak     = 1
UnmarshalGUIDNULL	    = 1
UnmarshalDifferentIID	    = 1
RemoteInterfaceNormal	    = 1
RemoteInterfaceTableStrong  = 1
CustomMarshalNormal	    = 1
CustomMarshalTable	    = 1
Echo			    = 1
MultiQINormal		    = 1
MultiQIHandler		    = 1
Handler 		    = 1
Loop			    = 1
LockObjectExternal	    = 1
DisconnectObject	    = 1
ReleaseMarshalData	    = 1
MiddleMan		    = 1
LocalDiffMachine	    = 1
RemoteDiffMachine	    = 1
ExpiredOXIDs		    = 1
NonNDRProxy		    = 1
MarshalStorage		    = 1
TIDAndLID		    = 1
CrossThread		    = 1
NoPing			    = 1
PSClsid 		    = 1
PSClsid2		    = 1


;
; Run Selected Marshal Tests
;

;[Marshal Test]
Aggregate		    = 0
CreateRemoteHandler	    = 0
StorageDiffMachine	    = 0
Rundown 		    = 0
Async			    = 0

GetStandardMarshal	    = 0
Format			    = 0
GetIIDFromMI		    = 0
MarshalSizeMax		    = 0
LocalInterfaceNormal	    = 0
UniqueQIPointer 	    = 0
LocalInterfaceTableStrong   = 0
LocalInterfaceTableWeak     = 0
UnmarshalGUIDNULL	    = 0
UnmarshalDifferentIID	    = 0
RemoteInterfaceNormal	    = 0
RemoteInterfaceTableStrong  = 0
CustomMarshalNormal	    = 0
CustomMarshalTable	    = 0
Echo			    = 0
MultiQINormal		    = 0
MultiQIHandler		    = 0
Handler			    = 0
Loop			    = 0
LockObjectExternal	    = 0
DisconnectObject	    = 0
ReleaseMarshalData	    = 0
MiddleMan		    = 1
LocalDiffMachine	    = 0
RemoteDiffMachine	    = 0
ExpiredOXIDs		    = 0
NonNDRProxy		    = 0
MarshalStorage		    = 0
TIDAndLID		    = 0
CrossThread		    = 0
NoPing			    = 0
PSClsid 		    = 0
PSClsid2		    = 0
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\letest\readme.txt ===
Author: Kennethm
Date:   3-10-94

There are four applications made from this directory.  These four apps
are made from one common source base.  The master files are found in the
cntroutl subdirectory.  If you make any of the apps their source code
will be copied into the proper subdirectory.

Do not modify any source files other than those in the cntroutl directory!


=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\letest\bttncur\changes.txt ===
NOTE:  This DLL is the same as that shipped with the OLE 2.0 SDK
but is updated from that shipped with "The Windows Interface" book
from Microsoft Press.  It is now compatible with Windows NT.


----------


Changes in BTTNCUR.DLL Source Code and Documentation from Version 1.00b
to Version 1.1.  See also below for 1.00 to 1.00b changes.

BTTNCUR.DLL version 1.1 is now fully compatible and tested under Windows
3.0.  Previously the demo application crashed under Windows 3.0
on calls to the non-existent MoveToEx (Win32 compatible).  Version 1.1 only
uses MoveToEx for builds where the symbol WINVER < 0x030a.

Windows NT changes are surrounded by #ifdef WIN32.  The largest change
is the DLL entry point:  LibMain.  Both Win3.1 and Win32 versions
call FInitialize now.

The images have been updated slightly and are now provided for 72dpi
(ega), 96dpi (vga), and 120dpi (super vga)

Version 1.1 completely handles system color changes unlike version 1.00x.
This new version will dynamically convert black, light gray, dark gray,
and white pixels in the image bitmap into system colors set for the
button text, button shadow, button face, and button highlight, respectively.
If you have blue, red, yellow, and green button colors, BTTNCUR.DLL will
now work perfectly with all of them.

BTTNCUR.DLL Version 1.1 also supports color images better by allowing
you to control which colors in the image bitmap are converted to system
colors.  By default, any black, gray, or white colors are converted
into system button colors as decribed in the last paragraph.  BTTNCUR.H
defines new PRESERVE_* flags for each of the four colors that are liable
to be converted.  By specifing one or more flags you prevent BTTNCUR
from changing that color to a system color.  For example, if you
want to preserve all black pixels in your image, specify PRESERVE_BLACK
when calling UIToolButtonDraw.

Applications should obtain configuration data for the current display
through UIToolConfigureForDisplay.  With this data the application can
configure itself for the correct toolbar size and button sizes and load
the appropriate application supplied bitmaps.

Applications using UIToolConfigureForDisplay should now use
UIToolButtonDrawTDD instead of UIToolButtonDraw, passing one extra
parameter, a pointer to the TOOLDISPLAYDATA.  Applications that
still call UIToolButtonDraw will always use 96dpi.


------------------------
BTTNCUR.H changes
    Added PRESERVE_ flags to allow application to control color conversions
    from black, dark gray, light gray, and white into the
    file compatible with C++.

    Added prototype for UIToolConfigureForDisplay, TOOLDISPLAYDATA structure,
    and definitions for button and image sizes on 72dpi, 96dpi, and 120dpi.

------------------------
BTTNCUR.RCV version changes
    FILEVERSION and PRODUCTVERSION changed from 1,0,0,2 to 1,0,1,0

    VALUE "FileVersion" and VALUE "ProductVersion" changed from
        "1.00b\0","\0" to "1.1\0","\0"


------------------------
BTTNCURI.H changes
    Defined STDCOLOR_* values as indices into an array in BTTNCUR.C
    that holds hard-coded default button color that never change
    regardless of the system colors.  Also defined SYSCOLOR_*
    flags that matched STDCOLOR_* flags for uniform array indices.

    Removed NEAR, FAR, and PASCAL from any function that didn't need it
    so we can port to Windows NT cleanly.

------------------------
BTTNCUR.C source code changes.  There are significant modifications.

Overall:
    Updated header comment

    Removed NEAR, FAR, and PASCAL from any function that didn't need it
    so we can port to Windows NT cleanly.

Globals:
    Eliminated the COLORREFs prefixed with RGB.  Only a few are needed
    statically and were moved to HBrushDitherCreate.

    Also added an array of standard colors used in the standard images:

    static const
    COLORREF crStandard[4]={ RGB(0, 0, 0)         //STDCOLOR_BLACK
                           , RGB(128, 128, 128)   //STDCOLOR_DKGRAY
                           , RGB(192, 192, 192)   //STDCOLOR_LTGRAY
                           , RGB(255, 255, 255)}; //STDCOLOR_WHITE

    Added an array of standard images instead of just 96dpi versions.

UIToolConfigureForDisplay:
    Added function to return the resolution of the display and
    size information about button and image sizes.


ToolButtonInit():
    Call to CreatePatternBrush moved into HBrushDitherCreate.
    Conditionally sets the highlight color for HDitherBrushCreate
    depending on Windows 3.x or Windows 3.0 (3.0 did not support
    COLOR_BTNHIGHLIGHT).


ToolButtonFree():
    Removed some old debug output no longer useful.


HDitherBitmapCreate()
    Renamed to HBrushDitherCreate.
    Moved CreatePatterBrush code from ToolButtonInit into this
    function.

    To support changing system colors, this function maintains
    static variables for the face and highlight colors that we
    use to create the brush.  If the function is called and the
    current colors in the global hBrushDither are different than
    the system colors, we recreate the brush and update the global
    hBrushDither, deleting the old brush.  Otherwise we just return
    hBrushDither.

    Note that if we fail to create the new brush we just maintain
    the old.  We'll paint something, albeit not in the right colors,
    but something nontheless.


UIToolButtonDraw():
    Calls UIToolButtonDrawTDD with default display configuration.

UIToolButtonDrawTDD():
    This is the function that was overhauled the most, specifically
    to handle variable colors.

    First, we added several local variables of which two are important.
    crSys is an array of system colors for the text, shadow, face,
    highlight, and frame, declared as static to keep references to
    it off DS instead of SS; if it's in SS things will crash.  The second
    important variable is uColor, which receives the color preservation
    flags passed in the hibyte of the uState parameter to UIToolButtonDraw.

    All the code to draw a blank button outline was moved into a separate
    function DrawBlankButton.  Since this procedure needs all the system
    colors to do it's thing, I've set it up to take an array of five
    COLORREFs (exactly crSys) in which it stores those color (it also
    uses it as its color variables).  This way we only have to call
    GetSysColor once for each system color.

    Anything dealing with the dithered brush is moved to the
    BUTTONGROUP_LIGHTFACE case where we just get the current brush
    by calling HBrushDitherCreate, passing it the current face
    and highlight colors.  Remember that is these colors match those
    used in the currently held global hBrushDither, this function just
    returns that global, so it's quite fast.  We have to be very careful
    not to delete this brush where we're done with it since it is global.

    The largest amount of new code is under the line:

    if ((uState & BUTTONGROUP_ACTIVE) && !(uState & BUTTONGROUP_BLANK))

    This has changed from a single BitBlt call to a much more complex
    operation to handle specific color conversions and preservations.
    A little optimization was done to detect when the system colors
    for buttons match the defaults, that is, black, dark gray, light gray,
    and white for text, shadow, face, and highlight.  If these colors
    all match, or if the caller requested preservation of all colors,
    the we just do the single BitBlt of old.

    Otherwise we loop through each of the black/white/gray colors
    that need possible conversion.  For each one we create a mask
    that contains 1's where the converting color exists in the image
    and 0's everywhere else.  For each color then we BitBlt the
    mask, a brush matching the system color we're converting to,
    and the destination bitmap (which we initialize with the unmodified
    image itself) using ROP_DSPDxax.  This leaves any color but the
    one under conversion alone and replaces the converted color with
    the system color.

    If the caller set a specific flag to preserve one or more specific
    colors, then we replace the standard color with the standard color,
    resulting in a no-op.

    Finally, to reduce flicker for this four Blt operation we create
    and build the final image in a temporary bitmap, making it 6 total
    Blts to handle the color changes.  But since we optimized for the
    99% case where the system colors are the standard colors, this isn't
    too much of a consideration.

    color conversions.


DrawBlankButton():
    New internal function.  Moved code from UIToolButtonDraw here.




------------------------
CURSORS.C
    Updated header comment

    Removed PASCAL on both internal functions.


    CursorsFree
        Eliminated all the code inside this function as it was unnecessary.

    UICursorLoad
        Eliminated code to revalidate a cursor in the array.  Unnecessary.


------------------------
BCDEMO.C

    Tested for running under Windows 3.0 and avoided MoveToEx calls,
    using MoveTo instead.  Calling MoveToEx in a Windows 3.1 app
    marked as 3.0 compatible under 3.0 causes an unknown GP fault.

    Uses UIToolButtonConfigureForDisplay and UIToolButtonDrawTDD.


------------------------------------------------------------------------------

Changes in BTTNCUR.DLL Source Code and Documentation from Version 1.00
to Version 1.00b

------------------------
BTTNCUR.H changes
    Added #ifdef __cplusplus to include extern "C" making the
    file compatible with C++.


------------------------
BTTNCURI.H changes
    Added #ifdef __cplusplus to include extern "C" making the
    file compatible with C++.

    Removed code contained between a #ifdef NEVER that is unused.


------------------------
BTTNCUR.RCV version changes
    FILEVERSION and PRODUCTVERSION changed from 1,0,0,0 to 1,0,0,2

    VALUE "FileVersion" and VALUE "ProductVersion" changed from
        "1.00\0","\0" to "1.00b\0","\0"


------------------------
BTTNCUR.C source code changes.

    Added a global for the frame color
    static COLORREF rgbFrame   =RGB(0, 0, 0);

WEP():
    Added comment about resource cleanup messages in DEBUG mode.


ToolButtonInit():
    Added the line below just before the assignment of hDCGlyphs:

        rgbFrame=GetSysColor(COLOR_WINDOWFRAME);

    This insures that the frame color is properly shown on plasma
    displays.


ToolButtonFree():
    Added the following lines just before return:

        if (NULL!=hBmpStandardImages)
            DeleteObject(hBmpStandardImages);
        hBmpStandardImages=NULL;


UIToolButtonDraw():
    The image centering is one too high.  The line 

        yOffsetGlyph=((dy-bmy) >> 1)-1;

    now reads:
   
        yOffsetGlyph=(dy-bmy) >> 1;


    The declaration HBITMAP hBmp; now read HBITMAP hBmp=NULL;

    The line hBmpT=SelectObject(hDCGlyphs, hBmp); is now two:

        if (NULL!=hBmp)
            SelectObject(hDCGlyphs, hBmp);

    The line SelectObject(hDCGlyphs, hBmpT); is now two:

        if (NULL!=hBmpT)
            SelectObject(hDCGlyphs, hBmpT);



------------------------
BTTNCUR.BMP
    Fixed the images to be 16*15 (the standard) instead of 16*16
    as they originally were.  Changed the label "16x16" to "16x15".

    Copied an image of the disabled state of Context-Sensitive Help
    to this bitmap as it was previously missing.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\letest\ole2ui\defuimak.ini ===
#  This is the DEBUG UILibrary INI file
MSG=DEBUG Version ($(LANG))
DEBUG=1
LIBNAME=outlui
REL_DIR=c:\ole2samp\release
OLEREL_DIR=c:\ole2samp\release
OBJ=DEBUG
RESOURCE=RESOURCE
CFLAGS=-c -Od -Gw2cs -W3 -Zpei -AMw -D_DEBUG -D_WINDLL -Gi
AFLAGS=-mx -Zi -DDEBUG
RFLAGS=-D DEBUG
LFLAGS=/MAP /CO /L /NOD /NOE /SE:300
UILIBS=mdllcew libw ole2 storage shell commdlg toolhelp
CC=cl
AS=masm
RS=rc
LK=link
LANG=USA
DLLOBJS = $(UI_DLLOBJS:D^\=DEBUG^\)
LIBOBJS = $(UI_COBJS:D^\=DEBUG^\) $(UI_NOPCOBJS:D^\=DEBUG\NOPC^\)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\letest\ole2ui\uimake.ini ===
#  This is the DEBUG static .LIB UILibrary INI file
MSG=DEBUG Static LIB Version ($(LANG))
DEBUG=1
MODEL=M
# Make a static library called OLE2UI.LIB
LIBNAME=OLE2UI
REL_DIR=d:\cairo\cairole\h\export
OLEREL_DIR=d:\cairo\cairole\h\export
OBJ=DEBUGLIB
BUILD=LIB
RESOURCE=RESOURCE

# 16 bit CFLAGS=-c -Od -GA2s -W3 -Zpei -AM -D_DEBUG -DWIN32 -DUNICODE

CFLAGS=-c -Od -Gs -W3 -Zpei -D_DEBUG -DWIN32 -DUNICODE
RFLAGS=-D DEBUG
LFLAGS=/MAP:FULL /CO /LINE /NOD /NOE /SE:300 /NOPACKCODE
UILIBS=mlibcew libw ole2 storage shell commdlg toolhelp
CC=cl
AS=masm
RS=rc
LK=link
LANG=USA
LIBOBJS = $(UI_COBJS:D^\=DEBUGLIB^\) $(UI_NOPCOBJS:D^\=DEBUGLIB\NOPC^\)
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\perform\driver\bm.ini ===
;
;                   CairOLE BenchMark Testing Parameter File
;


;   Parameters in this section are header info and global test parameters
;   such as the log file and results file.
;
[Driver]
    Tester=Unknown
    Report=bm.res
    Log=bm.log
    InitFlag=COINIT_APARTMENTTHREADED
    PauseBetweenTests=100


;   Some of the config specifications are checked automatically but can
;   be overridden with these entries
;
[Config]
;    Mfg=Gateway 486DX/33
;    CPU=i486/33
;    RAM=16 Meg.
;    OS=Free Nt755
;    DISK=FAT


;   Test for raw performance/timer accuracy
;
[Noise Test]
    Comment=Basic raw performance/timer accuracy tests


;   Test calling OleInitialize/OleUninitialize repeatedly
;
[OleInitialize]
    Comment=First case is pairs of calls.
    Iterations=8


;   Tests CoRegisterClassObject & CoRevokeClassObject
;
[ObjRegistration]
    Comment=Internal Class is used
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Test CoGetClassObject, CreateInstance
;
[ObjActivation]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests FileMoniker BindToObject
;
[BindToObject]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests FileMoniker BindToStorage
;
[BindToStorage]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Test Running Object Table
;
[ROT]
    Comment= LocalServer = mdi.exe, InProcServer = dlltest.dll
    ClsId_InProc={99999999-0000-0008-C000-000000000052}
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Not Yet Working
;
[Properties]
    Comment=TBD


;   Tests CoMarshalInterface & CoUnmarshalInterface
;
[Marshalling]
    Comment=Unmarshalled into same process. LocalServer = qisrv.exe
    ClsId={00000140-0000-0008-C000-000000000046}
    ClsCtx=InProc
    Iterations=8


;   Tests various marshaling APIs
;
[Marshalling2]
    Comment=Unmarshalled into same process. LocalServer = qisrv.exe
    ClsId={00000140-0000-0008-C000-000000000046}
    ClsCtx=InProc
    Iterations=8


;   Tests Ole Object Method Calls over Rpc
;
[RpcTest]
    Comment=Ole Object Method Calls over Rpc. LocalServer = rpctst.exe
    Clsid_Local={0000013d-0001-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8
    Average=N


;   Tests Ole Object Method Calls over Rpc
;
[RpcTest2]
    Comment=Ole Object Method Calls over Rpc. LocalServer = rpctst.exe
    Clsid_Local={0000013d-0001-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8
    Average=N


;   Tests function calls over Raw Rpc
;
[RawRpc]
    Comment=Function calls over Raw Rpc
    Iterations=8
    Server=rawrpc.exe
    Debug=N
    Protseq=ncalrpc
    Average=N


;   Tests nested calls over Rpc
;
[Nested]
    Comment=Nested Rpc calls. LocalServer = loopsrv.exe
    Clsid_Local={0000013c-0001-0008-C000-000000000046}
    Iterations=8


;   Tests Ole QueryInterface Calls
;
[QueryInterface]
    Comment=QueryInterface calls over Rpc. LocalServer = qisrv.exe
    Clsid_Local={00000140-0000-0008-C000-000000000046}
    Clsid_Inproc={00000140-0000-0008-C000-000000000046}
    Iterations=8


;   Tests calling IsEqualGUID api vs memcmp
;
[GuidCompare]
    Comment=Compare timings of memcmp vs IsEqualGUID
    Iterations=8


;   Tests calling CoGetPSClsid
;
[CoGetPSClsidTest]
    Comment=call CoGetPSClsid
    Iterations=8


;   Tests Miscellaneous COM Apis
;
[ApiTest]
    Comment=Miscellaneous COM Apis
    ClsId_Local={99999999-0000-0008-C000-000000000051}
    Iterations=8


;   Tests default OLE IMalloc implementation
;
[IMalloc]
    Comment=OLE2 IMalloc
    Iterations=8

;
; Win32 File IO Api test
; AccessMode is either NORMAL, MAPPED or ASYNC
; ReadMode is either RANDOM or SEQUENTIAL
;
[FileIOTest]
    Commet=File IO Test
    Iterations=8
    FileName=stgtest.bm
    AccessMode=MAPPED
    ReadMode=SEQUENTIAL
    WriteThrough=OFF
    Flush=ON
    StartSize=512
    EndSize=4096
    RepeatFactor=1


;
; Simple Storage Test
; FileMode is either DIRECT or TRANSACTED
; ReadMode is either RANDOM or SEQUENTIAL
;
[StorageTest]
    Comment=Storage Test
    Iterations=8
    FileName=stgtest.bm
    FileMode=DIRECT
    ReadMode=SEQUENTIAL
    SetSize=ON
    StartSize=512
    EndSize=4096
    RepeatFactor=1


;
; Nested Storage Test
;
[NestedStorageTest]
    Comment=Nested Storage Test
    Iterations=1
    FileName=stgtest.bm
    FileMode=DIRECT
    DataSize=4096
    Branching=2
    Nesting=3
    Delete=ON

;
; Generic Storage test
; Executes commands from <ScriptName> file
;
[StorageParserTest]
    Comment=Storage parser test
    Iterations=1
    ScriptName=storage.scp

[CreateTest]
        Comment=Testing Ole Create Api
        Iterations=8

[CreateLinkTest]
        Comment=Testing Ole CreateLink Api
        Iterations=8

[ClipbrdTest]
        Comment=Testing Ole Clipboard Apis
        Iterations=8

[LoadTest]
        Comment=Testing OleLoad And OleSave
        Iterations=8

[IOLTest]
        Comment=Testing IOleLink methods
        Iterations=8

[CacheTest]
        Comment=Testing IOleCache methods
        Iterations=8

;   This sections lists each test and whether to execute it or not.  Setting
;   the value to OFF or FALSE turns execution off.
;
[Tests]
    Properties=OFF
    FileIOTest=off
    StorageTest=OFF
    NestedStorageTest=OFF
    StorageParserTest=off
    CreateTest=off
    CreateLinkTest=off
    ClipbrdTest=off
    LoadTest=OFF
    IOLTest=off
    CacheTest=off
    RpcTest2=off


    Noise Test=on
    RawRpc=on
    OleInitialize=on
    ObjRegistration=on
    ObjActivation=on
    BindToObject=on
    BindToStorage=on
    ROT=on
    Nested=on
    QueryInterface=on
    ApiTest=on
    IMalloc=on
    GuidCompare=on
    Marshalling2=on
    RpcTest=on
    Marshalling=on
    CoGetPSClsidTest=on
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\simpcntr\readme.txt ===
Simpcntr
--------
This sample is the simplest OLE 2.0 container that can be written and
still support the visual editing feature.  The sample has no native
file format, and can only support one OLE object at a time.  The
Insert Object command is used to create an object.

See the MAKEFILE for compilation instructions.


Simple Container Objects Overview :
-----------------------------------
Simple Container consists of three main objects. The top level is CSimpleApp,
under which is CSimpleDoc, and the innermost level is CSimpleSite. CSimpleApp
is used to hold the main window information. (eg. handle to the main window,
handle to the UI Active Object) CSimpleApp always exists as long as the
simple container application is alive. It demonstrates the implementation of
IOleInPlaceFrame, in its nested class COleInPlaceFrame.

The next level object is CSimpleDoc object. It is instantiated by CSimpleApp
when a new document is created. It is used to hold the handles to the main
menus and the submenus and manipulate changes to these menus.

The CSimpleDoc object instantiates CSimpleSite object as the user chooses to
insert a new object into the document. CSimpleSite demonstrates the
implementation of IAdviseSink, IOleInPlaceSite and IOleClientSite through
its nested classes. These interfaces are implemented as CAdviseSink,
COleInPlaceSite and COleClientSite accordingly. CSimpleSite acts as a client
site to communicate to a remote server.


=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\simpdnd\readme.txt ===
Simple Drag and Drop Sample
---------------------------

This sample demonstrates an implementation of OLE 2 drag and drop. It allows
drag and drop operations between two instances of the sample application.
For information on compiling and building the sample, see the makefile in
this directory.


Simple Drag and Drop Objects Overview :
---------------------------------------
Simple Drag and Drop consists of three main objects. The top level is
CSimpleApp, under which is CSimpleDoc, and the innermost level is CSimpleSite.
CSimpleApp is used to hold all the main window information. (eg. handle to
the main window, handles to the main, edit, and help menus and the application
instance) CSimpleApp always exists as long as the simple drag and drop
application is alive.

The next level object is CSimpleDoc object. It is instantiated when a new
document is created. It enables and disables the menu items in the main menu.
Since simple drag and drop is a single document interface application, the
user is only allowed to insert one object into the document. It is
necessary to disable certain items from the main menu to avoid incorrect
selection. It also registers the window for drag and drop and manipulates
the clipboard operations, such as copy to the clipboard, flush the clipboard.
It demonstrates the implementates of two OLE interfaces in its nested classes,
IDropSource and IDropTarget. These two interfaces are implemented as
CDropSource and CDropTarget respectively.

The CSimpleDoc object instantiates two different objects based on the user
selection from the main menu. The CSimpleSite object is instantiated if the
user chooses to insert a new object into the document. CSimpleSite
demonstrates the implementation of IAdviseSink and IOleClientSite through its
nested classes. These two interfaces are implemented as CAdviseSink and
COleClientSite accordingly. CSimpleSite manipulates the storage handling and
acts as a client site to communicate to a remote server. Such server can be
an executable server or a dll server. The CDataXferObj object is instantiated
when the user chooses to copy the existing object from the current document.
it is required to copy an object to the clipboard. CDataXferObj demonstrates
the IDataObject interface implementation and performs data transfer
operations.






=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\simpsvr\debug.log ===
NULL CLSID @ 135250 doesn't support debug dumping
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\simpsvr\readme.txt ===
Simpsvr
--------
This sample is the simplest OLE 2.0 object that can be written and
still support the visual editing feature.  The object that this server
supports is a colored square with a black border.

See the MAKEFILE for compilation instructions.


Simple Server Objects Overview
------------------------------
Simple server consists of three main objects. The top level is CSimpSvrApp,
under which is CSimpSvrDoc, and the innermost level is CSimpSvrObj.CSimpSvrApp
is used to hold all the main window information. (eg. handle to the main
window, handles to the main, color, and help menus and the application
instance) Therefore, CSimpSvrApp always exists as long as the simple server
application is alive. The CSimpSvrApp instantiates the Class Factory, if
simple server is started as embedding. (ie. started by OLE) The next level
object is CSimpSvrDoc object. It is instantiated by the time CSimpSvrApp is
created. It manipulates the document window and also the hatch window.
(See OLE2UI for detail on the hatch window) The CSimpSvrObj, the innermost
simple server object, shows six OLE interfaces implementations in its nested
classes. The six OLE interfaces demonstrated are IOleObject, IPersistStorage,
IDataObject,IOleInPlaceActiveObject,IOleInPlaceObject,and IExternalConnection.
These six interfaces are implemented as different classes namely: COleObject,
CPersistStorage, CDataObject, COleInPlaceActiveObject, COleInPlaceObject,
and CExternalConnection. The CSimpSvrObj handles the drawing of the object
and all the OLE connections between the container and the server.




=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\stgbvt\readme.txt ===
This directory contains a snapshot of directories needed to build stgbase
suite.  The enviornment variables needed to be set for the build are
CTCOMTOOLS=\nt\private\oleutest\stgbvt\comtools
CTOLERPC=\nt\private\oleutest\stgbvt\ctolerpc
CTOLESTG=\nt\private\oleutest\stgbvt\CTOLESTG
Build comtools dir, ctolerpc dir and ctolestg directory in that order, from
each directory.
stgbase.exe would be built in \nt\private\oleutest\stgbvt\CTOLESTG\bin\<daytona\chicago>\<i386\alpha> directory.
To run the entire suite, the batch file is in \nt\private\oleutest\stgbvt\CTOLES
TG\batch\basetsts.bat.  That can be run with differnt options for docfile/nss/cn
ss on different file systems. A part of this file would be run for bvt suite aft
er it is evaluated which tests need to be run for bvt suite.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\stgbvt\ctolestg\tests\stgbase\readme.txt ===
StgBase.exe
-----------
This suite of tests does very basic testing of ole storage.
All binaries are in the bin subtree, all batchfiles and 
other scripts are in the batch subdirectory.

To run the basic suite locally, use the basetsts.bat file.

Due to added features in ole32 and ntfs for WinNT50, stgbase
will run in different modes to test the different features now
available for storage.

By default only basic docfiles are used in WindowsNT50. But you can
change the default behaviour on NTFS5 drives to use the new Ntfs 
Structured Storage format by changing some values in the registry.

For docfile format:
HKLM\Software\Microsoft\Ole 
    EnableNtfsStructuredStorage = "NN"

For Ntfs Structured Storage format 
HKLM\Software\Microsoft\Ole 
    EnableNtfsStructuredStorage = "YY"
    EnableCNSS = "Y"

1. Basic docfile. Run this on a FAT or NTFS4 volume (or with the
   above registry settings for docfile on NTFS5 drive) with 
   basetsts.bat
2. Ntfs Structured Storage (nssfile). Run this suite on a local NTFS5 
   volume with basetsts.bat with the Ntfs Structured Storage settings
3. Conversion between Ntfs Structured Storage and Basic Docfile.  
   There are two methods to invoke this test mechanism. 
	1. Local machine. Set the following values in the registry
	   under HKLM\Software\Microsoft\Ole 
	       EnableNtfsStructuredStorage = "YN"
               EnableCNSS = "Y"
	   Then run the suite on a local NTFS5 volume with
	   basetsts.bat
	2. Distributed method, requiring two machines.

Distributed Run
---------------

This requires two machines, one is  the server and the other the
client. The server will be  creating nssfiles, the client will be
accessing these test files as docfiles - thus invoking conversion
over the redirector. This method requires the use of rundrive and
stgchk utilitys.

For a distributed run of the base tests, you will need to use the
rundrive utility, and also have stgchk available. To run:

On the server, run 'dstginst.bat s' to register the rundrive utils,
share a directory and prepare the distributed scripts.

On the client, run 'dstginst.bat c <servername>' to register
rundrive utils,  connect to the server via net use, and finish
preparing the distributed scripts.

On the client, run dstgrun.bat to run the tests.
All the logs should end up on the server machine.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\utests16\simpdnd\readme.txt ===
Simple Drag and Drop Sample

	This sample demonstrates an implementation of OLE 2 drag and drop.
For information on compiling and building the sample, see the makefile in
this directory.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\oleutest\utests16\simpsvr\readme.txt ===
Simpsvr
--------
This sample is the simplest OLE 2.0 object that can be written and
still support the visual editing feature.  The object that this server
supports is a colored square with a black border.

See the MAKEFILE for compilation instructions.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\published\mc\readme.txt ===
If you make a change to any of the MC files in this directory, then you
  need to rebuild allerror.mc.  This normally will be done automatically,
  but can also be done by invoking "nmake allerror.mc".  When you checkin
  your changes to the private .mc files, then you should also check in the
  updated allerror.mc.

  When allerror.mc is updated automatically, it will not be checked out.
  It will just be attrib -r'd.


  The whole reason for this messy requirement is that if _objects.mac does
  not exist, it will be generated incorrectly when allerror.mc is not
  present during the pass zero scan. This causes allerror.rc to not be built
  and breaks the types2\proxy\proxy build.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\rpc\locator\nsserver\inc\readme.txt ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\rpc\locator\nsserver\src\readme.txt ===
api.cxx       -- all the entry points
locator.cxx   -- locator class implementation
brodcast.cxx  -- only broadcast functionality
mailslot.cxx  --
nt4confg.cxx  --
objects.cxx   --
respond.cxx   --
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\rpc\midl\statistics\unioninfo.log ===
* 32 FileName: .\stub.h, Symbol: un_sl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _sl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _usl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _cl, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _union_char, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _union_boolean, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: .\stub.h, Symbol: _predef_union, Kind 2(Union_NonEncap_DCE), Arms: 20 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
17 
18 
19 
20 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: F:\nt\public\sdk\inc\objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: F:\nt\public\sdk\inc\propidl.h, Symbol: __MIDL___MIDL_itf_propidl_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_pbagex_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_pbagex_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0005, Kind 2(Union_NonEncap_DCE), Arms: 4 
26 
27 
28 
29 
DEFAULT
+

* 32 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0006, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
3 
1 
2 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0005, Kind 2(Union_NonEncap_DCE), Arms: 4 
26 
27 
28 
29 
DEFAULT
+

* 64 FileName: F:\nt\public\sdk\inc\oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0006, Kind 2(Union_NonEncap_DCE), Arms: 4 
0 
3 
1 
2 
+

* 32 FileName: accctrl.h, Symbol: __MIDL___MIDL_itf_iaccess_0009_0002, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
0 
3 
4 
+

* 64 FileName: accctrl.h, Symbol: __MIDL___MIDL_itf_iaccess_0009_0002, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
0 
3 
4 
+

* 32 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0016, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
1 
2 
3 
4 
6 
+

* 32 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0016, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
1 
2 
3 
4 
6 
+

* 64 FileName: trksvr.h, Symbol: __MIDL___MIDL_itf_trkwks_0006_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 32 FileName: .\.\trksvr.h, Symbol: __MIDL___MIDL_itf_trksvr_0000_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 64 FileName: .\.\trksvr.h, Symbol: __MIDL___MIDL_itf_trksvr_0000_0019, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: objidl.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0001, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0001, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: .\obj\dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtrans_0251_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtmsft_0254_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: dxtrans.h, Symbol: __MIDL___MIDL_itf_dxtmsft_0254_0002, Kind 1(Union_Encap), Arms: 4 
0 
1 
2 
3 
+

* 32 FileName: .\.\strmif.h, Symbol: __MIDL___MIDL_itf_strmif_0104_0007, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: .\.\strmif.h, Symbol: __MIDL___MIDL_itf_strmif_0104_0007, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: .\dssetup_c.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 64 FileName: .\dssetup_c.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 32 FileName: .\dssetrpc.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 64 FileName: .\dssetrpc.h, Symbol: _DSROLER_PRIMARY_DOMAIN_INFORMATION, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0003, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0004, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 32 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0003, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0004, Kind 2(Union_NonEncap_DCE), Arms: 15 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 64 FileName: ..\inc\NtmsSvc.h, Symbol: __MIDL___MIDL_itf_NtmsSvc_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 16 
5 
6 
9 
2 
3 
16 
7 
8 
15 
11 
14 
12 
13 
10 
17 
4 
DEFAULT
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\svcctl.h, Symbol: __MIDL_svcctl_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: app.h, Symbol: __MIDL_appmgmt_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: app.h, Symbol: __MIDL_appmgmt_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: wtypes.h, Symbol: __MIDL___MIDL_itf_cs_0005_0005, Kind 1(Union_Encap), Arms: 7 
0 
1 
2 
4 
3 
5 
6 
+

* 64 FileName: wtypes.h, Symbol: __MIDL___MIDL_itf_cs_0005_0005, Kind 1(Union_Encap), Arms: 7 
0 
1 
2 
4 
3 
5 
6 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 32 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0003, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0002, Kind 3(Union_NonEncap_MS), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0004, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
6 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0005, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0006, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0007, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0008, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_NOTIFY_INFO_DATA_DATA, Kind 3(Union_NonEncap_MS), Arms: 5 
2 
1 
4 
3 
5 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0001, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
-1 
+

* 64 FileName: winspl.h, Symbol: _RPC_V2_UREPLY_PRINTER, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: winspl.h, Symbol: __MIDL_winspool_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 32 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0001, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0004, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0005, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0006, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0008, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0002, Kind 1(Union_Encap), Arms: 2 
7 
5 
DEFAULT
+

* 64 FileName: .\obj\mega.h, Symbol: __MIDL_IAdviseSink_0003, Kind 1(Union_Encap), Arms: 8 
0 
32 
64 
16 
1 
2 
4 
8 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: .\obj\prop.h, Symbol: __MIDL___MIDL_itf_prop_0000_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 32 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEV_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CHARDEVQ_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
1002 
1003 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _CONNECT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _FILE_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SESSION_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
10 
502 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_INFO, Kind 3(Union_NonEncap_MS), Arms: 9 
0 
1 
2 
502 
1004 
1006 
1501 
DEFAULT
1005 
501 
+

* 64 FileName: srvsvc.h, Symbol: _SHARE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
502 
DEFAULT
501 
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_INFO, Kind 3(Union_NonEncap_MS), Arms: 59 
100 
101 
102 
402 
403 
502 
503 
599 
1005 
1107 
1010 
1016 
1017 
1018 
1501 
1502 
1503 
1506 
1509 
1510 
1511 
1512 
1513 
1514 
1515 
1516 
1518 
1520 
1521 
1522 
1523 
1524 
1525 
1528 
1529 
1530 
1533 
1534 
1535 
1536 
1537 
1538 
1539 
1540 
1541 
1542 
1543 
1544 
1545 
1546 
1547 
1548 
1549 
1550 
1552 
1553 
1554 
1555 
1556 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _SERVER_XPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: srvsvc.h, Symbol: _TRANSPORT_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 32 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_INFO, Kind 3(Union_NonEncap_MS), Arms: 33 
100 
101 
102 
1010 
1011 
1012 
1013 
1018 
1023 
1033 
1041 
1042 
1043 
1044 
1045 
1046 
1047 
1048 
1049 
1050 
1051 
1052 
1053 
1054 
1055 
1056 
1057 
1058 
1059 
1060 
1061 
1062 
502 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_USER_INFO, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
1101 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _WKSTA_TRANSPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_INFO, Kind 3(Union_NonEncap_MS), Arms: 4 
0 
1 
2 
3 
DEFAULT
+

* 64 FileName: .\wkssvc.h, Symbol: _USE_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: msgsvc.h, Symbol: _MSG_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _CONFIG_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1000 
1001 
1002 
1003 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 5 
0 
1 
2 
1000 
1001 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _EXPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_CONTAINER, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\repl.h, Symbol: _IMPORT_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _SERVER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 64 FileName: .\bowser.h, Symbol: _BROWSER_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 2 
100 
101 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_c.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_c.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\logon_s.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_LEVEL, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
5 
3 
7 
2 
6 
4 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_VALIDATION, Kind 3(Union_NonEncap_MS), Arms: 4 
2 
3 
4 
5 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_ID_UNION, Kind 3(Union_NonEncap_MS), Arms: 21 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
20 
21 
13 
14 
15 
16 
17 
18 
19 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DELTA_UNION, Kind 3(Union_NonEncap_MS), Arms: 16 
1 
2 
4 
5 
7 
8 
9 
11 
12 
13 
14 
16 
18 
20 
21 
22 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_QUERY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_CONTROL_DATA_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 5 
5 
6 
9 
65534 
8 
DEFAULT
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DUMMY1, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_WORKSTATION_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 64 FileName: .\logon_s.h, Symbol: _NETLOGON_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_c.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0001, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0002, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_PRODUCT_LICENSE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0011, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0012, Kind 3(Union_NonEncap_MS), Arms: 3 
0 
1 
2 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_USER_PRODUCT_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_MAPPING_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0015, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0016, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_SERVER_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0009, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0010, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0017, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0018, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_CERTIFICATE_CLAIM_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0024, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0023, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0025, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0026, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0027, Kind 3(Union_NonEncap_MS), Arms: 2 
0 
1 
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONW, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: _LLS_LOCAL_SERVICE_ENUM_UNIONA, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0029, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 64 FileName: .\llsrpc_s.h, Symbol: __MIDL_llsrpc_0030, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
+

* 32 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 32 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 64 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 64 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 32 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 32 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 64 FileName: netdfs.h, Symbol: _DFS_INFO_STRUCT, Kind 3(Union_NonEncap_MS), Arms: 7 
1 
2 
3 
4 
100 
101 
102 
DEFAULT
+

* 64 FileName: netdfs.h, Symbol: __MIDL_netdfs_0001, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
200 
+

* 32 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ncpsvc.h, Symbol: _VOLUME_INFO, Kind 3(Union_NonEncap_MS), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: .\scerpc_c.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 64 FileName: .\scerpc_c.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 32 FileName: .\scerpc_s.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 64 FileName: .\scerpc_s.h, Symbol: _SCEPR_UNION_OTHERINFO, Kind 3(Union_NonEncap_MS), Arms: 3 
300 
304 
301 
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V4, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_CLIENT_SEARCH_UNION, Kind 2(Union_NonEncap_DCE), Arms: 3 
0 
1 
2 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_ELEMENT_UNION, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
6 
7 
DEFAULT
+

* 64 FileName: imports.h, Symbol: _DHCP_OPTION_SCOPE_UNION, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 64 FileName: imports.h, Symbol: __MIDL_imports_0037, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: imports.h, Symbol: _DHCP_SUBNET_ELEMENT_UNION_V5, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
2 
3 
4 
DEFAULT
+

* 32 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 64 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 32 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 64 FileName: imports.h, Symbol: _DNS_RECORD_DATA_TYPES, Kind 2(Union_NonEncap_DCE), Arms: 18 
1 
6 
12 
2 
5 
7 
3 
4 
8 
9 
14 
17 
15 
18 
21 
28 
33 
34 
+

* 32 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 64 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 32 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 64 FileName: imports.h, Symbol: _DnssrvSrvRpcUnion, Kind 2(Union_NonEncap_DCE), Arms: 17 
0 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
15 
16 
+

* 32 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 32 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
DEFAULT
10 
+

* 64 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0001, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
DEFAULT
+

* 64 FileName: ..\..\include\Finder.h, Symbol: __MIDL___MIDL_itf_iremoteagent_0001_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
DEFAULT
10 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 32 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0001, Kind 2(Union_NonEncap_DCE), Arms: 97 
0 
1 
16 
17 
2 
18 
3 
19 
22 
23 
14 
20 
21 
4 
5 
11 
65535 
10 
6 
7 
64 
72 
71 
8 
4095 
65 
70 
30 
31 
13 
9 
66 
68 
67 
69 
73 
8208 
8209 
8194 
8210 
8195 
8211 
8214 
8215 
8196 
8197 
8198 
8199 
8200 
8203 
8206 
8201 
8205 
8202 
8204 
4112 
4113 
4098 
4114 
4099 
4115 
4116 
4117 
4100 
4101 
4107 
4106 
4102 
4103 
4160 
4168 
4167 
4104 
8191 
4126 
4127 
4108 
16400 
16401 
16386 
16402 
16387 
16403 
16406 
16407 
16388 
16389 
16395 
16398 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
+

* 64 FileName: propidl.h, Symbol: __MIDL___MIDL_itf_ptserver_0244_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: .\..\w3\server\wam.h, Symbol: _WAM_STATISTICS_INFO, Kind 2(Union_NonEncap_DCE), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\..\w3\server\wam.h, Symbol: _WAM_STATISTICS_INFO, Kind 2(Union_NonEncap_DCE), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\info_cli.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _INET_INFO_STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _W3_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _FTP_STATISTICS_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\info_srv.h, Symbol: _USER_ENUM_UNION, Kind 3(Union_NonEncap_MS), Arms: 1 
1 
DEFAULT
+

* 32 FileName: .\client\w3svci_c.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\client\w3svci_c.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\server\w3svci_s.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\server\w3svci_s.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\ftpsvc.h, Symbol: _STATISTICS_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 64 FileName: .\obj\i386\smtpsvc.h, Symbol: _STAT_INFO, Kind 3(Union_NonEncap_MS), Arms: 1 
0 
DEFAULT
+

* 32 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0001, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
6 
3 
4 
+

* 32 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0002, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
2 
3 
1 
4 
5 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0001, Kind 2(Union_NonEncap_DCE), Arms: 5 
0 
1 
6 
3 
4 
+

* 64 FileName: .\.\ldapdb.h, Symbol: __MIDL_DBStructureDefinitions_0002, Kind 2(Union_NonEncap_DCE), Arms: 6 
0 
2 
3 
1 
4 
5 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0003, Kind 1(Union_Encap), Arms: 3 
1215587415 
1383359575 
1349805143 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0003, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
1 
3 
4 
5 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0002, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0004, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0005, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0006, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0007, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0008, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0009, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0011, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0012, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0013, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0014, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0017, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0018, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0015, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0016, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0019, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0020, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0021, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0022, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0023, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0024, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0025, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0026, Kind 2(Union_NonEncap_DCE), Arms: 3 
1 
2 
-1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0027, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0028, Kind 2(Union_NonEncap_DCE), Arms: 2 
1 
2 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0029, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REQ, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: _DRS_MSG_GETREPLINFO_REPLY, Kind 2(Union_NonEncap_DCE), Arms: 8 
0 
1 
2 
3 
4 
5 
-2 
-4 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0030, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\drs.h, Symbol: __MIDL_drsuapi_0031, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 32 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 64 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 64 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 32 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 32 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 64 FileName: .\nspi.h, Symbol: _PV_r, Kind 2(Union_NonEncap_DCE), Arms: 18 
2 
3 
11 
30 
258 
31 
72 
64 
10 
4098 
4099 
4126 
4354 
4168 
4127 
4160 
1 
13 
+

* 64 FileName: abaux.h, Symbol: _RES_UNION_r, Kind 2(Union_NonEncap_DCE), Arms: 10 
0 
1 
2 
3 
4 
5 
6 
9 
7 
8 
+

* 32 FileName: .\rxds.h, Symbol: OMP_value_union, Kind 2(Union_NonEncap_DCE), Arms: 44 
1 
4097 
10 
4106 
2 
4098 
65 
4161 
127 
4223 
64 
4160 
3 
4099 
4 
4100 
6 
4102 
7 
4103 
8 
4104 
18 
4114 
19 
4115 
20 
4116 
21 
4117 
22 
4118 
23 
4119 
24 
4120 
25 
4121 
26 
4122 
27 
4123 
66 
4162 
DEFAULT
+

* 64 FileName: .\rxds.h, Symbol: OMP_value_union, Kind 2(Union_NonEncap_DCE), Arms: 44 
1 
4097 
10 
4106 
2 
4098 
65 
4161 
127 
4223 
64 
4160 
3 
4099 
4 
4100 
6 
4102 
7 
4103 
8 
4104 
18 
4114 
19 
4115 
20 
4116 
21 
4117 
22 
4118 
23 
4119 
24 
4120 
25 
4121 
26 
4122 
27 
4123 
66 
4162 
DEFAULT
+

* 32 FileName: .\ismip.h, Symbol: __MIDL_ismip_0001, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 64 FileName: .\ismip.h, Symbol: __MIDL_ismip_0001, Kind 2(Union_NonEncap_DCE), Arms: 1 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: mmc.h, Symbol: __MIDL___MIDL_itf_ndmgr_0133_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
4 
2 
3 
1 
DEFAULT
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0007, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: mmc.h, Symbol: __MIDL___MIDL_itf_ndmgr_0133_0001, Kind 2(Union_NonEncap_DCE), Arms: 4 
4 
2 
3 
1 
DEFAULT
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 64 FileName: wtypes.h, Symbol: __MIDL_IWinTypes_0009, Kind 1(Union_Encap), Arms: 2 
1215587415 
1383359575 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 32 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0001, Kind 1(Union_Encap), Arms: 10 
8 
13 
9 
12 
36 
32781 
16 
2 
3 
20 
+

* 64 FileName: oaidl.h, Symbol: __MIDL_IOleAutomationTypes_0004, Kind 2(Union_NonEncap_DCE), Arms: 43 
3 
17 
2 
4 
5 
11 
10 
6 
7 
8 
13 
9 
8192 
36 
16420 
16401 
16386 
16387 
16388 
16389 
16395 
16394 
16390 
16391 
16392 
16397 
16393 
24576 
16396 
16 
18 
19 
22 
23 
14 
16398 
16400 
16402 
16403 
16406 
16407 
0 
1 
+

* 32 FileName: iads.h, Symbol: __MIDL___MIDL_itf_dirsync_0105_0015, Kind 2(Union_NonEncap_DCE), Arms: 25 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
12 
11 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 
25 
+

* 64 FileName: iads.h, Symbol: __MIDL___MIDL_itf_dirsync_0105_0015, Kind 2(Union_NonEncap_DCE), Arms: 25 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
12 
11 
13 
14 
15 
16 
17 
18 
19 
20 
21 
22 
23 
24 
25 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 32 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 64 FileName: ..\uclient\lsarpc_c.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 32 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
5 
4 
6 
7 
8 
9 
10 
11 
12 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_TRUSTED_DOMAIN_INFO, Kind 3(Union_NonEncap_MS), Arms: 10 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
+

* 64 FileName: ..\server\lsarpc.h, Symbol: _LSAPR_POLICY_DOMAIN_INFORMATION, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 32 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 64 FileName: ..\client\samrpc_c.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 32 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DOMAIN_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 12 
1 
2 
3 
4 
5 
7 
6 
8 
9 
11 
12 
13 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_GROUP_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 4 
1 
2 
3 
4 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_ALIAS_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 3 
1 
2 
3 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_USER_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 23 
1 
2 
3 
4 
5 
6 
7 
8 
9 
10 
11 
12 
13 
14 
16 
17 
18 
19 
20 
21 
22 
23 
24 
+

* 64 FileName: ..\server\samrpc.h, Symbol: _SAMPR_DISPLAY_INFO_BUFFER, Kind 3(Union_NonEncap_MS), Arms: 5 
1 
2 
3 
4 
5 
+
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\rpc\ndrexts\placefil.txt ===
; This file is used to specify where every file built by the NT build lab is
; binplaced relative to the root of the distribution point.  If a file is not
; listed, it will end up in the dump directory.
;
; The format is like this:
;
; <imagename>    <class name>
;
; where <imagename> is the filename.ext and <class name> is the directory off
; the root of the distribution point (retail is a placeholder for the root).
; If there are multiple class names for a single image, use a colon to separate
; each.
;
; All bits that ship in the NT base product and are installed with winnt32,
; must have a class name of retail.
;
; If you add a new file to the list, please refrain from creating your own
; special section.  Doing so makes it difficult to detect duplicates.  If
; you're unable to add your image due to a collision with an existing name,
; work it out with the other developer.  Options include creating another
; placefil.txt for your project or using the ALT_PROJECT_TARGET macro in your
; sources file to change the base of the distribution point (doing so means
; your project will not install as part of base NT).
;
;     sort /+17 < placefil.txt > placefil.srt
;
; will generate a list sorted by class name if you want.
;
; IMPORTANT NOTE:
;
; If you add a file to the system, YOU MUST make sure layout.inf is updated
; before you start depending on it or else you will cause a BVT break. Do
; not attempt to modify layout.inf yourself, but follow instructions on:
;     http://ntbld/addtob.htm
;
;        PLEASE KEEP THIS LIST SORTED
;---------------------------------------------
;---------------------------------------------
ndrexts.dll      idw
jitdump.exe      idw
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\rpc\runtime\exts\rpcdbg.doc ===
Microsoft Word 6.0 Document MSWordDoc Word.Document.6D:\WINWORD\TEMPLATE\NORMAL.DOT RPC NTSD Extensions Scott Holden Scott Holden Microsoft Word 6.0RPC Debugger Extensions Author: Scott Holden Modification Date:   SAVEDATE \@ "MMMM d, yyyy" \* MERGEFORMAT  August 15, 1994 Print Date:   PRINTDATE \@ "MMMM d, yyyy  h:mm:ss AM/PM" \* MERGEFORMAT  August 15, 1994  1:00:00 PM Using the RPCDBG Debugger Extensions To call a debugger extension, the DLL must be loaded into the debugger. A DLL (and function) is loaded into the debugger by: debugger command line>  !<dll name>.<function name> <options> i.e. > !rpcdbg.dump_osfbh 0x104506 The following functions are provided in the RPCDBG DLL extension. Function name  Options Type of  Structure symbol (<address> | <symbol name>) dump_osfbh <address> OSF_BINDING_HANDLE dump_osfca <address> OSF_CASSOCIATION dump_osfcc <address> OSF_CCONNECTION dump_osfaddr <address> OSF_ADDRESS dump_osfsc <address> OSF_SCONNECTION dump_osfassoc <address> OSF_ASSOCIATION dump_dcebinding <address> DCE_BINDING dump_rpcsvr <address> RPC_SERVER dump_dg_act <address> DG_ACTIVE_CALL_TABLE dump_dg_addr <address> DG_ADDRESS dump_dg_scall <address> DG_SCALL dump_dg_ccall <address> DG_CCALL dump_dg_epmgr <address> DG_ENDPOINT_MANAGER dump_dg_bh <address> DG_BINDING_HANDLE dump_dg_ca <address> DG_CASSOCIATION dump_dg_pkt <address> DG_PACKET dump_lpc_addr <address> LRPC_ADDRESS dump_lpc_assoc <address> LRPC_ASSOCIATION dump_lpc_scall <address> LRPC_SCALL dump_lpc_ccall <address> LRPC_CCALL dump_lpc_bh <address> LRPC_BINDING_HANDLE dump_lpc_ca <address> LRPC_CASSOCIATION dd_rpc [-a <address>] [-d <num display>] RPC_MEMORY_BLOCK Creating a Debugger Extension Whenever a debugger extension function is called, the debugger automatically passes a certain number of parameters to the function. Currently,  NTSD passes a handle to the current process, a handle to the current thread, the contents of the program counter, an argument string, and a pointer to a structure of function pointers. A debugger extension declaration  looks as follows: function_name( HANDLE               hCurrentProcess, HANDLE               hCurrentThread, DWORD                dwCurrentPC, PNTSD_EXTENSION_APIS lpExtensionApis, LPSTR                lpArgumentString ); The NTSD_EXTENSION_APIS is a structure of useful function pointers: typedef struct _NTSD_EXTENSION_APIS {      DWORD nSize;      // a printf-like function for outputting to the debugger      PNTSD_OUTPUT_ROUTINE lpOutputRoutine;      // given a symbol name, this routine returns the address of       // the symbol. given an address in string format, it will       // convert the string to a DWORD address      PNTSD_GET_EXPRESSION lpGetExpressionRoutine;      // given an address to a symbol, it will return the symbol      // name and offset      PNTSD_GET_SYMBOL lpGetSymbolRoutine;      PNTSD_DISASM lpDisasmRoutine;      PNTSD_CHECK_CONTROL_C lpCheckControlCRoutine; } NTSD_EXTENSION_APIS, *PNTSD_EXTENSION_APIS; If the debugger extension needs to access memory in the debuggee process, then the extension must copy the memory from the debuggee s memory space. (The debugger memory space is different from the debuggee s memory space). The debugger can copy the debuggee s memory using the Win32 API - ReadProcessMemory. Once the memory has been copied, all structure members, etc. can be accessed normally. (Remember that pointers are addresses in the debugee s address space and not the debugger s address space). Debugger Extension Example #include <sysinc.h> #define dprintf         (ExtensionApis.lpOutputRoutine) #define GetExpression   (ExtensionApis.lpGetExpressionRoutine) #define GetSymbol       (ExtensionApis.lpGetSymbolRoutine) #define Disasm          (ExtensionApis.lpGetDisasmRoutine) #define CheckControlC   (ExtensionApis.lpCheckControlCRoutine) #define DECLARE_API(s)                              \         VOID                                        \         s(                                          \             HANDLE               hCurrentProcess,   \             HANDLE               hCurrentThread,    \             DWORD                dwCurrentPc,       \             PNTSD_EXTENSION_APIS lpExtensionApis,   \             LPSTR                lpArgumentString   \             ) NTSD_EXTENSION_APIS ExtensionApis; // this function will take either a symbol name or the address // of a symbol as an argument // it prints the symbol name, the displacement and the address DECLARE_API( symbol )     DWORD dwAddr;     CHAR Symbol[64];     DWORD Displacement;     ExtensionApis = *lpExtensionApis;     dwAddr = GetExpression(lpArgumentString);     if ( !dwAddr ) {         return;     }     GetSymbol( (LPVOID)dwAddr, (unsigned char*)Symbol, &Displacement     dprintf("%s+%lx at %lx\n", Symbol, Displacement, dwAddr); The symbol extension accepts either a symbol name and outputs the address of the symbol, or accept Normal Default Paragraph Font Title (title page) title page info table text tabletext title A title s the address of a symbol and outputs the symbol name. The dd_rpc extension outputs the linked list of memory blocks. If no address is specified, then the extension automatically starts from the first block of memory in the linked list. Also, the   option can be used to specify how many blocks to output. This number is bi-directional. (i.e. a negative number specifies to display  x blocks previous to the current address). The function will stop when it gets to either the beginning or end of the linked list. All other function extensions require the address of the structure.dump_rpcmsgRPC_MESSAGEAugust15199433000PM Scott Holden D:\USERS\SKHOLDEN\RPCDBG.DOC @\\NTPRINT\pscript1 Ne01: winspool \\NTPRINT\pscript1 Letter PRIV   N N N \\NTPRINT\pscript1 Letter PRIV   N N N Times New Roman Symbol Arial Courier New RPC NTSD Extensions Scott Holden Scott Holden
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\svcdlls\trksvcs\regdebug.ini ===
hkey_local_machine\System\CurrentControlSet\Services\TrkSvr\Parameters\Configuration
    TrkDebugFlags = REG_DWORD 0xff7fffff
hkey_local_machine\System\CurrentControlSet\Services\TrkWks\Parameters\Configuration
    TrkDebugFlags = REG_DWORD 0xff7fffff
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\svcdlls\trksvcs\regdef.ini ===
hkey_local_machine\System\CurrentControlSet\Services\TrkSvr\Parameters\Configuration
    TrkDebugFlags = DELETE
    DebugStoreFlags = DELETE
hkey_local_machine\System\CurrentControlSet\Services\TrkWks\Parameters\Configuration
    TrkDebugFlags = DELETE
    DebugStoreFlags = DELETE
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\com\svcdlls\trksvcs\trksvr\schema.ini ===
/*
[FileLinks]
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;AU)S:(A;CI;RPWPCCDCLCSW;;;AU)
Object-Class = File-Link-Tracking

[File-Link-Tracking]
Common-Name=File-Link-Tracking
Admin-Display-Name=File-Link-Tracking
Admin-Description=File-Link-Tracking
Object-Class=Class-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
; Generated LDAP name: fileLinkTracking
Default-Security-Descriptor=D:(A;;GA;;;SY)(A;;GA;;;CO)(A;;GA;;;DA)(A;;GR;;;WD)
Governs-ID=\x2A864886F714010534
Instance-Type=4
Object-Class-Category=1
RDN-Att-ID=Common-Name
Schema-ID-GUID=\xdd71222910e411d0a05f00aa006c33ed
Sub-Class-Of=Container
System-Only=FALSE

System-Poss-Superiors=Domain-DNS
System-Poss-Superiors=Domain-Organization
System-Poss-Superiors=Domain-Country
System-Poss-Superiors=Domain-Locality
System-Poss-Superiors=Domain-Organizational-Unit

[File-Link-Tracking-Entry]
Common-Name=File-Link-Tracking-Entry
Admin-Display-Name=File-Link-Tracking-Entry
Admin-Description=File-Link-Tracking-Entry
Object-Class=Class-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
; Generated LDAP name: fileLinkTrackingEntry
Default-Security-Descriptor=D:(A;;GA;;;SY)(A;;GA;;;CO)(A;;GA;;;DA)(A;;GR;;;WD)
Governs-ID=\x2A864886F71401053B
Instance-Type=4
Object-Class-Category=1
RDN-Att-ID=Common-Name
Schema-ID-GUID=\x8e4eb2ed471211d0a1a000c04fd930c9
Sub-Class-Of=Top
System-Only=FALSE

System-Poss-Superiors=File-Link-Tracking

System-May-Contain=Birth-Machine-Id
System-May-Contain=Birth-Replset-Id
System-May-Contain=Curr-Domain-Id
System-May-Contain=Curr-Domain-Name
System-May-Contain=Curr-Machine-Id
System-May-Contain=Curr-Machine-Name
System-May-Contain=Curr-Replset-Id
System-May-Contain=Flags
System-May-Contain=Link-Track-Secret
System-May-Contain=Obj-Id


[Birth-Machine-Id]
Common-Name=Birth-Machine-Id
Admin-Display-Name=Birth-Machine-Id
Admin-Description=Birth-Machine-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824C
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: birthMachineId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075f97e4011d0afd600c04fd930c9

[Birth-Replset-Id]
Common-Name=Birth-Replset-Id
Admin-Display-Name=Birth-Replset-Id
Admin-Description=Birth-Replset-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824D
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: birthReplsetId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fa7e4011d0afd600c04fd930c9

[Curr-Domain-Id]
Common-Name=Curr-Domain-Id
Admin-Display-Name=Curr-Domain-Id
Admin-Description=Curr-Domain-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048251
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currDomainId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fe7e4011d0afd600c04fd930c9

[Curr-Domain-Name]
Common-Name=Curr-Domain-Name
Admin-Display-Name=Curr-Domain-Name
Admin-Description=Curr-Domain-Name
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048252
OM-Syntax=64
Attribute-Syntax=\x55050C
; Generated LDAP Name: currDomainName
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Schema-ID-GUID=\x1f0075ff7e4011d0afd600c04fd930c9

[Curr-Machine-Id]
Common-Name=Curr-Machine-Id
Admin-Display-Name=Curr-Machine-Id
Admin-Description=Curr-Machine-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824F
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currMachineId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fc7e4011d0afd600c04fd930c9

[Curr-Machine-Name]
Common-Name=Curr-Machine-Name
Admin-Display-Name=Curr-Machine-Name
Admin-Description=Curr-Machine-Name
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824E
OM-Syntax=64
Attribute-Syntax=\x55050C
; Generated LDAP Name: currMachineName
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Schema-ID-GUID=\x1f0075fb7e4011d0afd600c04fd930c9

[Curr-Replset-Id]
Common-Name=Curr-Replset-Id
Admin-Display-Name=Curr-Replset-Id
Admin-Description=Curr-Replset-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F71401048250
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: currReplsetId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075fd7e4011d0afd600c04fd930c9

[Link-Track-Secret]
Common-Name=Link-Track-Secret
Admin-Display-Name=Link-Track-Secret
Admin-Description=Link-Track-Secret
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104820D
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: linkTrackSecret
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=0
System-Only=FALSE
Range-Lower= 0
Range-Upper= 8
Schema-ID-GUID=\x2ae80fe247b411d0a1a400c04fd930c9

[Obj-Id]
Common-Name=Obj-Id
Admin-Display-Name=Obj-Id
Admin-Description=Obj-Id
Object-Class=Attribute-Schema
NT-Security-Descriptor=O:DAG:DAD:(A;CI;RPWPCCDCLCSW;;;DA)S:(A;CI;RPWPCCDCLCSW;;;DA)
Attribute-ID=\x2A864886F7140104824B
OM-Syntax=4
Attribute-Syntax=\x55050A
; Generated LDAP Name: objId
Is-Single-Valued=TRUE
Instance-Type = 4
Search-Flags=1
System-Only=FALSE
Range-Lower= 16
Range-Upper= 16
Schema-ID-GUID=\x1f0075f87e4011d0afd600c04fd930c9

*/
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\drivers\archive.txt ===
Old driver code has been archived under //depot/private/driver_archive/...

To get at this code map it into your client spec.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\drivers\apm\ntapm\notes.txt ===
2 April 1998

1.  Q:  Why are there so many little include files?

    A:  Because they are defining various private entities
        that we don't want to redefine (build conflicts, etc),
        or because they are a copy of a symbol that really
        lives somewhere else but we cannot include due to some
        header ordering problem.
        (e.g. we can't have both ntddk.h and ntos.h, so ZwInitiatePowerAction
            has to be copied into a another header file...)

2.  Q:  Why doesn't the driver remote, unload, stop, or even fail init?

    A:  We call the hal with direct call vectors for use in response
        to the OS calling it (the hal) to go to S3 or S4.  Once we've
        set those vectors, we can't pull the code out from under the Hal.

        AND

        Without the PNP stuff batteries don't work, but other APM features do.

        Without the SuspendPoll thread machine initiated APM ops don't work,
        but UI initiated ops (the user did C-A-D, shutdown, Standby) WILL
        still work.

        So, we take what we can get.
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\drivers\ddk\ifs_drivers.ini ===
[TEXT: No readable text]
=== C:/Users/treeman/Desktop/windows nt source code\Source\Win2K3\NT\drivers\ddk\ddk_drivers.ini ===
; FORMAT : SourceDir, SourceFile, DestDir, DestFile, OPERATION
; All fields are required
; [subname]* is allowed for source, in which case * required for destination

input\inc                                 , kbdmou.h    , src\input\inc                                     , *           , HSPLIT
input\kbdclass                            , kbdclass.*  , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , kbdlog.mc   , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , makefile    , src\input\kbdclass                                , *           , HSPLIT
input\kbdclass                            , sources     , src\input\kbdclass                                , *           , HSPLIT
input\kbfiltr                             , *           , src\input\kbfiltr                                 , *           , HSPLIT
input\mouclass                            , makefile    , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , mouclass.*  , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , moulog.mc   , src\input\mouclass                                , *           , HSPLIT
input\mouclass                            , sources     , src\input\mouclass                                , *           , HSPLIT
input\moufiltr                            , *           , src\input\moufiltr                                , *           , HSPLIT
input\mouser                              , *           , src\input\mouser                                  , *           , HSPLIT
input\pnpi8042                            , *           , src\input\pnpi8042                                , *           , HSPLIT
input\pnpi8042\daytona                    , *           , src\input\pnpi8042\daytona                        , *           , HSPLIT

net\ms\e100bex                            , *           , src\network\ndis\e100bex                          , *           , COPY
net\ms\e100bex\sys                        , makefile    , src\network\ndis\e100bex\sys                      , *           , COPY
net\ms\e100bex\sys                        , makefile.inc, src\network\ndis\e100bex\sys                      , *           , COPY
net\ms\e100bex\sys                        , sources.ddk , src\network\ndis\e100bex\sys                      , sources     , COPY
net\ms\e100bex\kd                         , *           , src\network\ndis\e100bex\kd                       , *           , COPY
net\ms\e100bex\lib\amd64                  , MP_PM.lib   , src\network\ndis\e100bex\private\amd64            , *           , COPY
net\ms\e100bex\lib\i386                   , MP_PM.lib   , src\network\ndis\e100bex\private\i386             , *           , COPY
net\ms\e100bex\lib\ia64                   , MP_PM.lib   , src\network\ndis\e100bex\private\ia64             , *           , COPY
net\ms\e100bex\testwmi                    , *           , src\network\ndis\e100bex\testwmi                  , *           , COPY

net\netcard\toshiba\tbatm155\sys          , *           , src\network\ndis\tbatm155                         , *           , COPY

parallel\parport2                         , *           , src\kernel\parport                                , *           , HSPLIT
serial\serenum                            , *           , src\kernel\serenum                                , *           , HSPLIT
serial\serial                             , *           , src\kernel\serial                                 , *           , HSPLIT

smartcrd\bulltlp3                         , *           , src\smartcrd\bulltlp3                             , *           , HSPLIT
smartcrd\inc                              , *.h         , src\smartcrd\inc                                  , *           , HSPLIT
smartcrd\pscr                             , *           , src\smartcrd\pscr                                 , *           , HSPLIT

storage\addfilter                         , *           , src\storage\filters\addfilter                     , *           , HSPLIT
; RAID 542098 - CDAUDIO.SYS no longer supported in XP
; storage\cdaudio                           , *           , src\storage\filters\cdaudio                       , *           , HSPLIT
storage\cdrom                             , *           , src\storage\class\cdrom                           , *           , HSPLIT
storage\classpnp                          , *           , src\storage\class\classpnp                        , *           , HSPLIT
storage\disk                              , *           , src\storage\class\disk                            , *           , HSPLIT
storage\diskperf                          , *           , src\storage\filters\diskperf                      , *           , HSPLIT
storage\fdc\fdc                           , *           , src\storage\fdc\fdc                               , *           , HSPLIT
storage\fdc\flpydisk                      , *           , src\storage\fdc\flpydisk                          , *           , HSPLIT
storage\fdc\inc                           , *.h         , src\storage\fdc\inc                               , *           , HSPLIT
; RAID 438101 - 3mode floppy no longer supported in XP
; storage\fdc\mode3fdc\desk2fdc             , *           , src\storage\fdc\3mode\fdc.2                       , *           , HSPLIT
; storage\fdc\mode3fdc\deskfdc              , *           , src\storage\fdc\3mode\fdc                         , *           , HSPLIT
; storage\fdc\mode3fdc\flpydisk             , *           , src\storage\fdc\3mode\flpydisk                    , *           , HSPLIT
; Removed per RAID 391497 - storage\fpfilter                          , *           , src\storage\filters\fpfilter                      , *           , HSPLIT
storage\ide\inc                           , ide.h       , src\storage\inc                                   , *           , HSPLIT
storage\ide\inc                           , ideuser.h   , src\storage\inc                                   , *           , HSPLIT
storage\ide\inc                           , msg.mc      , src\storage\miniide\pciide                        , *           , HSPLIT
storage\ide\miniport\pciide               , *           , src\storage\miniide\pciide                        , *           , HSPLIT
storage\inc                               , *.h         , src\storage\inc                                   , *           , HSPLIT
storage\mcd\class                         , *           , src\storage\changers\class                        , *           , HSPLIT
storage\mcd\drivers\adicsc                , *           , src\storage\changers\drivers\adicsc               , *           , HSPLIT
storage\mcd\drivers\ddsmc                 , *           , src\storage\changers\drivers\ddsmc                , *           , HSPLIT
storage\mcd\drivers\elmsmc                , *           , src\storage\changers\drivers\elmsmc               , *           , HSPLIT
storage\mcd\drivers\exabyte               , *           , src\storage\changers\drivers\exabyte              , *           , HSPLIT
storage\mcd\drivers\hpmc                  , *           , src\storage\changers\drivers\hpmc                 , *           , HSPLIT
storage\mcd\drivers\nsmmc                 , *           , src\storage\changers\drivers\nsmmc                , *           , HSPLIT
storage\mcd\drivers\sonymc                , *           , src\storage\changers\drivers\sonymc               , *           , HSPLIT
storage\mcd\inc                           , *.h         , src\storage\changers\inc                          , *           , HSPLIT
storage\port\scsi\miniport\aha154x        , *           , src\storage\miniport\aha154x                      , *           , HSPLIT
storage\port\scsi\miniport\initio         , *           , src\storage\miniport\initio                       , *           , HSPLIT
storage\port\raid\miniport\i2o            , *.h         , src\storage\miniport\i2o                          , *           , HSPLIT
storage\port\raid\miniport\i2o            , i2omp.*     , src\storage\miniport\i2o                          , *           , HSPLIT
storage\port\raid\miniport\i2o            , txtsetup.oem , src\storage\miniport\i2o                         , *           , HSPLIT
storage\port\raid\miniport\i2o            , oemsetup.inf , src\storage\miniport\i2o                         , *           , HSPLIT
storage\port\raid\miniport\i2o            , i2omp.htm   , src\storage\miniport\i2o                          , *           , HSPLIT
storage\port\raid\miniport\i2o            , makefile*   , src\storage\miniport\i2o                          , *           , HSPLIT
storage\port\raid\miniport\i2o            , sources     , src\storage\miniport\i2o                          , *           , HSPLIT
storage\sfloppy                           , *           , src\storage\sfloppy                               , *           , HSPLIT
storage\tools\spti                        , *           , src\storage\tools\spti                            , *           , HSPLIT
storage\tape\class                        , *           , src\storage\class\tape                            , *           , HSPLIT
storage\tape\drivers\4mmdat               , *           , src\storage\tape\4mmdat                           , *           , HSPLIT
storage\tape\drivers\dlttape              , *           , src\storage\tape\dlttape                          , *           , HSPLIT
storage\tape\drivers\exabyte2             , *           , src\storage\tape\exabyte2                         , *           , HSPLIT
storage\tape\drivers\miniqic              , *           , src\storage\tape\miniqic                          , *           , HSPLIT
storage\tape\drivers\qic157               , *           , src\storage\tape\qic157                           , *           , HSPLIT
storage\tape\inc                          , physlogi.h  , src\storage\inc                                   , *           , HSPLIT
video\ms\3dlabs\perm2\disp                , *           , src\video\displays\3dlabs\perm2\disp              , *           , HSPLIT
video\ms\3dlabs\perm2\mini                , *           , src\video\displays\3dlabs\perm2\mini              , *           , HSPLIT
video\ms\3dlabs\perm3\disp                , *           , src\video\displays\3dlabs\perm3\disp              , *           , HSPLIT
video\ms\3dlabs\perm3\disp\dx             , *           , src\video\displays\3dlabs\perm3\disp\dx           , *           , HSPLIT
video\ms\3dlabs\perm3\disp\gdi            , *           , src\video\displays\3dlabs\perm3\disp\gdi          , *           , HSPLIT
video\ms\3dlabs\perm3\disp\inc            , *           , src\video\displays\3dlabs\perm3\disp\inc          , *           , HSPLIT
video\ms\3dlabs\perm3\mini                , *           , src\video\displays\3dlabs\perm3\mini              , *           , HSPLIT
video\monitors\samplinf                   , monsamp.inf , src\video\monitors\inf                            , *           , COPY
video\ms\framebuf\disp                    , *           , src\video\displays\framebuf\disp                  , *           , HSPLIT
video\ms\mirror\disp                      , *           , src\video\displays\mirror\disp                    , *           , HSPLIT
video\ms\mirror\mini                      , *           , src\video\displays\mirror\mini                    , *           , HSPLIT
video\ms\mirror\app                       , *           , src\video\displays\mirror\app                     , *           , HSPLIT

wdm\1394\tools\test\driver\1394diag       , *           , src\wdm\1394\driver\1394diag                      , *           , HSPLIT
wdm\1394\tools\test\driver\common         , *           , src\wdm\1394\driver\common                        , *           , HSPLIT
wdm\1394\tools\test\driver\1394vdev       , *           , src\wdm\1394\driver\1394vdev                      , *           , HSPLIT
wdm\1394\tools\test\inc                   , *.h         , src\wdm\1394\inc                                  , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394.htm    , src\wdm\1394                                      , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394.htm    , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394api.c   , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394api.def , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394api.rc  , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , 1394main.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , asyncapi.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , debug.c     , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , debug.h     , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , isochapi.c  , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , local.h     , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , makefile    , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , pch.h       , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , sources     , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , util.c      , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\dll\1394api           , util.h      , src\wdm\1394\dll\1394api                          , *           , HSPLIT
wdm\1394\tools\test\ui\win1394            , *           , src\wdm\1394\ui\win1394                           , *           , HSPLIT

wdm\audio\backpln\adapters\dmusic         , adapter.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , clist.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , clist.h     , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , common.h    , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , control.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , csynth.cpp  , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , csynth.h    , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , ddksynth.htm, src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , ddksynth.inf, src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , dmusic.rc   , src\wdm\audio\ddksynth                            , ddksynth.rc , HSPLIT
wdm\audio\backpln\adapters\dmusic         , instr.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , kernhelp.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , kernhelp.h  , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , makefile.ddk, src\wdm\audio\ddksynth                            , makefile    , COPY
wdm\audio\backpln\adapters\dmusic         , midi.cpp    , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , miniport.cpp, src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , mix.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , mmx.cpp     , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , muldiv32.h  , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , plclock.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , plclock.h   , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , private.h   , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , sources.ddk , src\wdm\audio\ddksynth                            , sources     , COPY
wdm\audio\backpln\adapters\dmusic         , synth.h     , src\wdm\audio\ddksynth                            , *           , COPY
wdm\audio\backpln\adapters\dmusic         , syslink.cpp , src\wdm\audio\ddksynth                            , *           , HSPLIT
wdm\audio\backpln\adapters\dmusic         , voice.cpp   , src\wdm\audio\ddksynth                            , *           , HSPLIT

wdm\audio\backpln\adapters\intel\ichaud   , ac97reg.h   , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , adapter.h   , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , common.h    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , debug.h     , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , guids.h     , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , ichreg.h    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , ichwave.h   , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , mintopo.h   , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , minwave.h   , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , shared.h    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.inf, src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , ac97smpl.rc , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , adapter.cpp , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , common.cpp  , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , ichwave.cpp , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , mintopo.cpp , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , minwave.cpp , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , prophnd.cpp , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , makefile    , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , readme.htm  , src\wdm\audio\ac97\driver                         , *           , HSPLIT
wdm\audio\backpln\adapters\intel\ichaud   , sources.ddk , src\wdm\audio\ac97\driver                         , sources     , HSPLIT
wdm\audio\backpln\adapters\intel          , prvprop.h   , src\wdm\audio\ac97                                , *           , HSPLIT
wdm\audio\backpln\adapters\intel          , readme.htm  , src\wdm\audio\ac97                                , *           , HSPLIT
wdm\audio\backpln\adapters\intel\proppage , *           , src\wdm\audio\ac97\proppage                       , *           , HSPLIT
wdm\audio\backpln\adapters\intel\cpl      , *           , src\wdm\audio\ac97\cpl                            , *           , HSPLIT
wdm\audio\backpln\adapters\intel\INFViewer, *           , src\wdm\audio\ac97\INFViewer                      , *           , HSPLIT
wdm\audio\backpln\adapters\intel\INFViewer\HTML, *      , src\wdm\audio\ac97\INFViewer\HTML                 , *           , HSPLIT

wdm\audio\filters\samples\gfxswap         , readme.htm  , src\wdm\audio\GFX\gfxswap                         , *           , HSPLIT
wdm\audio\filters\samples\gfxswap         , gfxswap.inf , src\wdm\audio\GFX\gfxswap                         , *           , HSPLIT
wdm\audio\filters\samples\gfxswap\driver  , *           , src\wdm\audio\GFX\gfxswap\driver                  , *           , HSPLIT
wdm\audio\filters\samples\gfxswap\GFXProp , *           , src\wdm\audio\GFX\gfxswap\GFXProp                 , *           , HSPLIT
wdm\audio\filters\samples\gfxswap\inc     , *           , src\wdm\audio\GFX\gfxswap\inc                     , *           , HSPLIT

wdm\audio\backpln\adapters\mpu401         , adapter.cpp , src\wdm\audio\mpu401                              , *           , COPY
wdm\audio\backpln\adapters\mpu401         , makefile    , src\wdm\audio\mpu401                              , *           , COPY
wdm\audio\backpln\adapters\mpu401         , mpu401.def  , src\wdm\audio\mpu401                              , *           , COPY
wdm\audio\backpln\adapters\mpu401         , mpu401.htm  , src\wdm\audio\mpu401                              , *           , COPY
wdm\audio\backpln\adapters\mpu401         , mpu401.rc   , src\wdm\audio\mpu401                              , *           , COPY
wdm\audio\backpln\adapters\mpu401         , sources.ddk , src\wdm\audio\mpu401                              , sources     , COPY

wdm\audio\backpln\adapters\msvad          , *.h         , src\wdm\audio\msvad                               , *           , HSPLIT
wdm\audio\backpln\adapters\msvad          , *.cpp       , src\wdm\audio\msvad                               , *           , HSPLIT
wdm\audio\backpln\adapters\msvad          , *.rc        , src\wdm\audio\msvad                               , *           , HSPLIT
wdm\audio\backpln\adapters\msvad          , *.inf       , src\wdm\audio\msvad                               , *           , HSPLIT
wdm\audio\backpln\adapters\msvad          , readme.htm  , src\wdm\audio\msvad                               , *           , COPY
wdm\audio\backpln\adapters\msvad          , sources.inc.ddk , src\wdm\audio\msvad                           , sources.inc , COPY
wdm\audio\backpln\adapters\msvad\ac3      , *.cpp       , src\wdm\audio\msvad\ac3                           , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\ac3      , *.h         , src\wdm\audio\msvad\ac3                           , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\ac3      , makefile    , src\wdm\audio\msvad\ac3                           , *           , COPY
wdm\audio\backpln\adapters\msvad\ac3      , readme.htm  , src\wdm\audio\msvad\ac3                           , *           , COPY
wdm\audio\backpln\adapters\msvad\ac3      , sources     , src\wdm\audio\msvad\ac3                           , *           , COPY
wdm\audio\backpln\adapters\msvad\drmmult  , *.cpp       , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\drmmult  , *.h         , src\wdm\audio\msvad\drmmult                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\drmmult  , makefile    , src\wdm\audio\msvad\drmmult                       , *           , COPY
wdm\audio\backpln\adapters\msvad\drmmult  , readme.htm  , src\wdm\audio\msvad\drmmult                       , *           , COPY
wdm\audio\backpln\adapters\msvad\drmmult  , sources     , src\wdm\audio\msvad\drmmult                       , *           , COPY
wdm\audio\backpln\adapters\msvad\drmsimp  , *.cpp       , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\drmsimp  , *.h         , src\wdm\audio\msvad\drmsimp                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\drmsimp  , makefile    , src\wdm\audio\msvad\drmsimp                       , *           , COPY
wdm\audio\backpln\adapters\msvad\drmsimp  , readme.htm  , src\wdm\audio\msvad\drmsimp                       , *           , COPY
wdm\audio\backpln\adapters\msvad\drmsimp  , sources     , src\wdm\audio\msvad\drmsimp                       , *           , COPY
wdm\audio\backpln\adapters\msvad\ds2dhw   , *.cpp       , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\ds2dhw   , *.h         , src\wdm\audio\msvad\ds2dhw                        , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\ds2dhw   , makefile    , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
wdm\audio\backpln\adapters\msvad\ds2dhw   , readme.htm  , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
wdm\audio\backpln\adapters\msvad\ds2dhw   , sources     , src\wdm\audio\msvad\ds2dhw                        , *           , COPY
wdm\audio\backpln\adapters\msvad\multstr  , *.cpp       , src\wdm\audio\msvad\multstr                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\multstr  , *.h         , src\wdm\audio\msvad\multstr                       , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\multstr  , makefile    , src\wdm\audio\msvad\multstr                       , *           , COPY
wdm\audio\backpln\adapters\msvad\multstr  , readme.htm  , src\wdm\audio\msvad\multstr                       , *           , COPY
wdm\audio\backpln\adapters\msvad\multstr  , sources     , src\wdm\audio\msvad\multstr                       , *           , COPY
wdm\audio\backpln\adapters\msvad\pcmex    , *.cpp       , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\pcmex    , *.h         , src\wdm\audio\msvad\pcmex                         , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\pcmex    , makefile    , src\wdm\audio\msvad\pcmex                         , *           , COPY
wdm\audio\backpln\adapters\msvad\pcmex    , readme.htm  , src\wdm\audio\msvad\pcmex                         , *           , COPY
wdm\audio\backpln\adapters\msvad\pcmex    , sources     , src\wdm\audio\msvad\pcmex                         , *           , COPY
wdm\audio\backpln\adapters\msvad\simple   , *.cpp       , src\wdm\audio\msvad\simple                        , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\simple   , *.h         , src\wdm\audio\msvad\simple                        , *           , HSPLIT
wdm\audio\backpln\adapters\msvad\simple   , makefile    , src\wdm\audio\msvad\simple                        , *           , COPY
wdm\audio\backpln\adapters\msvad\simple   , readme.htm  , src\wdm\audio\msvad\simple                        , *           , COPY
wdm\audio\backpln\adapters\msvad\simple   , sources     , src\wdm\audio\msvad\simple                        , *           , COPY


wdm\audio\backpln\adapters\sb16           , adapter.cpp , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , common.cpp  , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , common.h    , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , makefile    , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , mintopo.cpp , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , mintopo.h   , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , minwave.cpp , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , minwave.h   , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , mssb16.inf  , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , readme.htm  , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , sb16.def    , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , sb16.rc     , src\wdm\audio\sb16                                , *           , COPY
wdm\audio\backpln\adapters\sb16           , sources.ddk , src\wdm\audio\sb16                                , sources     , COPY
wdm\audio\backpln\adapters\sb16           , tables.h    , src\wdm\audio\sb16                                , *           , COPY

wdm\audio\backpln\portcls\miniport\dmusuart,dmusuart.htm, src\wdm\audio\dmusuart                            , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\dmusuart,makefile.ddk, src\wdm\audio\dmusuart                            , makefile    , HSPLIT
wdm\audio\backpln\portcls\miniport\dmusuart,miniport.cpp, src\wdm\audio\dmusuart                            , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\dmusuart,mpu.cpp     , src\wdm\audio\dmusuart                            , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\dmusuart,private.h   , src\wdm\audio\dmusuart                            , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\dmusuart,sources.ddk , src\wdm\audio\dmusuart                            , sources     , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, fmsynth.htm , src\wdm\audio\fmsynth                             , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, makefile.ddk, src\wdm\audio\fmsynth                             , makefile    , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, miniport.cpp, src\wdm\audio\fmsynth                             , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, miniport.h  , src\wdm\audio\fmsynth                             , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, patch.h     , src\wdm\audio\fmsynth                             , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, private.h   , src\wdm\audio\fmsynth                             , *           , HSPLIT
wdm\audio\backpln\portcls\miniport\fmsynth, sources.ddk , src\wdm\audio\fmsynth                             , sources     , HSPLIT

wdm\audio\backpln\stdunk                  , makefile    , src\wdm\audio\stdunk                              , *           , HSPLIT
wdm\audio\backpln\stdunk                  , sources.ddk , src\wdm\audio\stdunk                              , sources     , HSPLIT
wdm\audio\backpln\stdunk                  , stdunk.cpp  , src\wdm\audio\stdunk                              , *           , HSPLIT
wdm\audio\backpln\stdunk                  , stdunk.htm  , src\wdm\audio