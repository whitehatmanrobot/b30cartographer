.OracleDateTime" /> structure as a day.</summary>
      <returns>A day value between 1 and 31.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleDateTime" /> structures to determine whether they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Equals(System.Object)">
      <summary>Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> object.</summary>
      <returns>true if object is an instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> and the two are equal, otherwise false.</returns>
      <param name="value">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GetHashCode">
      <summary>Gets the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine whether the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine whether the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Hour">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure as an hour.</summary>
      <returns>An hour between 0 and 23.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.IsNull">
      <summary>Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure is null.</summary>
      <returns>true if <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> is null, otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine whether the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine whether the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MaxValue">
      <summary>Represents the maximum valid date value for an <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Millisecond">
      <summary>Gets the milliseconds component of the date represented by this instance.</summary>
      <returns>The millisecond, between 0 and 999.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Minute">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure as a minute.</summary>
      <returns>The minute, between 0 and 59.</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.MinValue">
      <summary>Represents the minimum valid date value for an <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Month">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure as a month.</summary>
      <returns>The month, between 1 and 12.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.NotEquals(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if they are not equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleDateTime.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Equality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleDateTime" /> structures to determine if they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.Data.OracleClient.OracleDateTime)~System.DateTime">
      <summary>Converts an <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure to a <see cref="T:System.DateTime" /> structure.</summary>
      <returns>A <see cref="T:System.DateTime" /> structure whose <see cref="P:System.DateTime.Date" /> and <see cref="P:System.DateTime.TimeOfDay" /> properties contain the same date and time values as the <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> property of the supplied <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Explicit(System.String)~System.Data.OracleClient.OracleDateTime">
      <summary>Converts a String to an <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure whose <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> is equal to the values contained in the String.</returns>
      <param name="x">A String to be converted to an <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_GreaterThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_Inequality(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThan(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.op_LessThanOrEqual(System.Data.OracleClient.OracleDateTime,System.Data.OracleClient.OracleDateTime)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleDateTime" /> to determine if the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleDateTime" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.Parse(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date and time to its <see cref="T:System.Data.OracleClient.OracleDateTime" /> equivalent.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure equal to the date and time represented by the specified String.</returns>
      <param name="s">The String to be parsed. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Second">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure as a second.</summary>
      <returns>A second between 0 and 59.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleDateTime.ToString">
      <summary>Converts this <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure to a <see cref="T:System.String" />.</summary>
      <returns>A String representing the <see cref="P:System.Data.OracleClient.OracleDateTime.Value" /> property of this <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Value">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</summary>
      <returns>The value of this <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleDateTime.Year">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleDateTime" /> structure as a year.</summary>
      <returns>A year between 1 and 4712.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleException">
      <summary>The exception that is generated when a warning or error is returned by an Oracle database or the .NET Framework Data Provider for Oracle. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleException.Code">
      <summary>Gets the code portion of the error as an integer.</summary>
      <returns>The code portion of the error as an integer.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.</summary>
      <param name="si">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Code">
      <summary>Gets the code portion of the message as an int.</summary>
      <returns>The code portion of the message as an int.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Message">
      <summary>Gets the full text of the message sent from the database.</summary>
      <returns>The text describing the message.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleInfoMessageEventArgs.Source">
      <summary>Gets the name of the object that generated the error.</summary>
      <returns>The name of the object that generated the error.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleInfoMessageEventArgs.ToString">
      <summary>Retrieves a string representation of the <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> event.</summary>
      <returns>A string representing the <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> event.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleInfoMessageEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.OracleClient.OracleConnection.InfoMessage" /> event of an <see cref="T:System.Data.OracleClient.OracleConnection" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.Data.OracleClient.OracleInfoMessageEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleLob">
      <summary>Represents a large object binary (LOB) data type stored on an Oracle server. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Append(System.Data.OracleClient.OracleLob)">
      <summary>Appends data from the specified LOB to the current LOB.</summary>
      <param name="source">The LOB from which to append data. </param>
      <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">The source <see cref="T:System.Data.OracleClient.OracleLob" /> is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The source <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch">
      <summary>Prevents server-side triggers from firing while performing multiple read operations.</summary>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)">
      <summary>Prevents server-side triggers from firing while performing multiple read and write operations in the specified access mode.</summary>
      <param name="mode">Mode (one of the <see cref="T:System.Data.OracleClient.OracleLobOpenMode" /> values) in which the LOB can be accessed between this <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch(System.Data.OracleClient.OracleLobOpenMode)" /> call and the corresponding <see cref="M:System.Data.OracleClient.OracleLob.EndBatch" /> call. </param>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanRead">
      <summary>Gets a value indicating whether the LOB stream can be read.</summary>
      <returns>true if the LOB stream supports reading, otherwise false if a LOB is closed or disposed.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanSeek">
      <summary>Gets a value indicating whether forward and backward seek operations can be performed.</summary>
      <returns>false if a LOB is closed or disposed, otherwise true. Always true for <see cref="F:System.Data.OracleClient.OracleLob.Null" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.CanWrite">
      <summary>Always returns true, regardless of whether the LOB supports writing or not.</summary>
      <returns>Always returns true, regardless of whether an opened or undisposed LOB supports writing or not, false if a LOB is closed or disposed.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.ChunkSize">
      <summary>Gets a value indicating the minimum number of bytes to retrieve from or send to the server during a read/write operation.</summary>
      <returns>The minimum number of bytes to retrieve or send.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Clone">
      <summary>Creates a new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle LOB as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleLob" /> object that references the same Oracle LOB as the original <see cref="T:System.Data.OracleClient.OracleLob" /> object.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Connection">
      <summary>Gets the <see cref="T:System.Data.OracleClient.OracleConnection" /> used by this instance of the <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      <returns>The connection to a data source.</returns>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob)">
      <summary>Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      <returns>The number of bytes copied. This excludes any padded bytes.</returns>
      <param name="destination">The destination <see cref="T:System.Data.OracleClient.OracleLob" />. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is null. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)">
      <summary>Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data.</summary>
      <returns>The number of bytes copied. This excludes any padded bytes.</returns>
      <param name="destination">The destination <see cref="T:System.Data.OracleClient.OracleLob" /></param>
      <param name="destinationOffset">The offset to which to copy. For CLOB and NCLOB data types, this must be an even number of bytes. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A value specified in the <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.-or- A value specified in the <paramref name="destinationOffset" /> parameter for a CLOB or NCLOB data type is not even. -or- You must specify CLOB and NCLOB data types as an even number of bytes. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)">
      <summary>Copies from this <see cref="T:System.Data.OracleClient.OracleLob" /> to a destination <see cref="T:System.Data.OracleClient.OracleLob" /> with the specified amount of data, and the source offset.</summary>
      <returns>The number of bytes copied. This excludes any padded bytes.</returns>
      <param name="sourceOffset">The offset from which to copy. For CLOB and NCLOB data types, this must be an even number. </param>
      <param name="destination">The destination OracleLob<see cref="N:System.Data.OracleClient" />. </param>
      <param name="destinationOffset">The destination offset to which to copy. For CLOB and NCLOB data types, this must be an even number. </param>
      <param name="amount">The quantity of data, in bytes, to copy. For CLOB and NCLOB data types, this must be an even number. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Data.OracleClient.OracleLob" /> specified in the <paramref name="destination" /> parameter is full. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter is less than zero or greater than 4 gigabytes.-or- A value specified in the <paramref name="amount" />, <paramref name="sourceOffset" />, or <paramref name="destinationOffset" /> parameter for a CLOB or NCLOB data type is not even. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.EndBatch">
      <summary>Allows server-side triggers to resume firing after performing multiple write operations.</summary>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase">
      <summary>Erases all data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      <returns>The number of bytes erased.</returns>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Erase(System.Int64,System.Int64)">
      <summary>Erases the specified amount of data from this <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      <returns>The number of bytes erased.</returns>
      <param name="offset">The offset from which to erase. For CLOB and NCLOB data types, this must be an even number. </param>
      <param name="amount">The quantity of data, in bytes, to erase. For CLOB and NCLOB data types, this must be an even number. </param>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Flush">
      <summary>Not currently supported.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsBatched">
      <summary>Gets a value indicating whether an application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method.</summary>
      <returns>true if application called the <see cref="M:System.Data.OracleClient.OracleLob.BeginBatch" /> method, otherwise false.</returns>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsNull">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream.</summary>
      <returns>true if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a <see cref="F:System.Data.OracleClient.OracleBFile.Null" /> stream, otherwise false.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.IsTemporary">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary LOB.</summary>
      <returns>true if the <see cref="T:System.Data.OracleClient.OracleLob" /> is a temporary LOB, otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Length">
      <summary>Gets a value that returns the size of the <see cref="T:System.Data.OracleClient.OracleLob" />.</summary>
      <returns>The size of the <see cref="T:System.Data.OracleClient.OracleLob" /> in bytes.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.LobType">
      <summary>Gets a value that returns the LOB data type.</summary>
      <returns>One of the <see cref="T:System.Data.OracleClient.OracleType" />LOB data types.</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleLob.Null">
      <summary>Represents a null <see cref="T:System.Data.OracleClient.OracleLob" /> object.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Position">
      <summary>Gets the current read position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</summary>
      <returns>The current position within the <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</returns>
      <exception cref="T:System.InvalidOperationException">The connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>Reads a sequence of bytes from the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream and advances the position within the stream by the number of bytes read.</summary>
      <returns>The total number of bytes read into the buffer. This may be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.</returns>
      <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" />) replaced by the bytes read from the current source. </param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream. For CLOB and NCLOB data types, this must be an even number. </param>
      <param name="count">The maximum number of bytes to be read from the current stream. For CLOB and NCLOB data types, this must be an even number. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.-or- The sum of the offset and count parameters is larger than the buffer length.-or- A value specified in the <paramref name="amount" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Seek(System.Int64,System.IO.SeekOrigin)">
      <summary>Sets the position on the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream.</summary>
      <returns>The new position within the current stream.</returns>
      <param name="offset">A byte offset relative to origin. If <paramref name="offset" /> is negative, the new position precedes the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />. If <paramref name="offset" /> is zero, the new position is the position specified by <paramref name="origin" />. If <paramref name="offset" /> is positive, the new position follows the position specified by <paramref name="origin" /> by the number of bytes specified by <paramref name="offset" />. </param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="origin" /> parameter does not contain a valid value. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The resulting position is beyond the length of the value. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Data.OracleClient.OracleLob" /> object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.SetLength(System.Int64)">
      <summary>Sets the length of the <see cref="T:System.Data.OracleClient.OracleLob" /> stream to a value less than the current length.</summary>
      <param name="value">The desired length of the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream in bytes. For CLOB and NCLOB data types, this must be an even number. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">A value specified in the <paramref name="value" /> parameter for a CLOB or NCLOB data type is not even.-or- A value specified in the <paramref name="value" /> parameter is less than zero or greater than 4 gigabytes. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleLob.Value">
      <summary>Gets the common language runtime stream value equivalent of the underlying value.</summary>
      <returns>For <see cref="F:System.Data.OracleClient.OracleType.Blob" />, an array of type Byte[]. For <see cref="F:System.Data.OracleClient.OracleType.Clob" /> and <see cref="F:System.Data.OracleClient.OracleType.NClob" />, a String. For null data, <see cref="T:System.DBNull" />.</returns>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>Writes a sequence of bytes to the current <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the current position within this stream by the number of bytes written.</summary>
      <param name="buffer">An array of bytes. This method copies the number of bytes specified in <paramref name="count" /> from <paramref name="buffer" /> to the current stream. </param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream. For CLOB and NCLOB data types, this must be an even number. </param>
      <param name="count">The number of bytes to be written to the current stream. For CLOB and NCLOB data types, this must be an even number. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="buffer" /> parameter is a null reference (Nothing in Visual Basic). </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">A value in the <paramref name="offset" /> or <paramref name="count" /> parameter is not positive.-or- The sum of the <paramref name="offset" /> and <paramref name="count" /> parameters is larger than the <paramref name="buffer" /> length.-or- A value specified in the <paramref name="count" /> or <paramref name="offset" /> parameter is less than zero or greater than 4 gigabytes.-or- You must specify CLOB and NCLOB data types as an even number of bytes. </exception>
      <exception cref="T:System.InvalidOperationException">The operation is not within a transaction, the <see cref="T:System.Data.OracleClient.OracleLob" /> object is null, or the connection is closed. </exception>
      <exception cref="T:System.ObjectDisposedException">The object was closed or disposed. </exception>
      <exception cref="T:System.Data.OracleClient.OracleException">An Oracle error has occurred. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleLob.WriteByte(System.Byte)">
      <summary>Writes a byte to the current position in the <see cref="T:System.Data.OracleClient.OracleLob" /> stream, and advances the position within the stream by one byte.</summary>
      <param name="value">The byte to write to the stream. </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleLobOpenMode">
      <summary>Specifies whether an <see cref="T:System.Data.OracleClient.OracleLob" /> should be opened in read-only or read/write mode.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadOnly">
      <summary>The <see cref="T:System.Data.OracleClient.OracleLob" /> is opened in read-only mode.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleLobOpenMode.ReadWrite">
      <summary>The <see cref="T:System.Data.OracleClient.OracleLob" /> is opened in read/write mode.</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleMonthSpan">
      <summary>Represents a time interval in months and corresponds to the Oracle 9i INTERVAL YEAR TO MONTH data type.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Data.OracleClient.OracleMonthSpan)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure from an existing one.</summary>
      <param name="from">An existing <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure from which to create the new structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to the specified number of months.</summary>
      <param name="months">Number of months. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to a specified number years and months.</summary>
      <param name="years">Number of years. </param>
      <param name="months">Number of months. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> value less than <see cref="F:System.Data.OracleClient.OracleMonthSpan.MinValue" /> or greater than <see cref="F:System.Data.OracleClient.OracleMonthSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.CompareTo(System.Object)">
      <summary>Compares this <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to the supplied object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object -or- The object is a null reference (Nothing). </returns>
      <param name="obj">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structures to determine if they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Equals(System.Object)">
      <summary>Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> object.</summary>
      <returns>true if object is an instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> and the two are equal; otherwise false.</returns>
      <param name="value">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GetHashCode">
      <summary>Gets the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.IsNull">
      <summary>Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure is null.</summary>
      <returns>true if <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> is null, otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MaxValue">
      <summary>Represents the maximum valid date value for an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.MinValue">
      <summary>Represents the minimum valid date value for an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.NotEquals(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if they are not equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleMonthSpan.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Equality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structures to determine if they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.Data.OracleClient.OracleMonthSpan)~System.Int32">
      <summary>Converts an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to an Int32.</summary>
      <returns>An Int32.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to convert to an Int32. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleMonthSpan">
      <summary>Converts a string to an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</returns>
      <param name="x">A string to convert to an <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_Inequality(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThan(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleMonthSpan,System.Data.OracleClient.OracleMonthSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> to determine if the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.Parse(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date and time to its <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> equivalent.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure equal to the date and time represented by the specified String.</returns>
      <param name="s">The String to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleMonthSpan.ToString">
      <summary>Converts this <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure to a <see cref="T:System.String" />.</summary>
      <returns>A String representing the <see cref="P:System.Data.OracleClient.OracleMonthSpan.Value" /> property of this <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleMonthSpan.Value">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</summary>
      <returns>The value of this <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> structure.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleNumber">
      <summary>Represents a fixed precision and scale numeric value between -10 27 -1 and 10 27 -1 to be stored in or retrieved from a database. </summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Data.OracleClient.OracleNumber)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure using the supplied <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <param name="from">The supplied <see cref="T:System.Data.OracleClient.OracleNumber" /> that will be used as the value of the new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Decimal)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure using the supplied <see cref="T:System.Decimal" /> value.</summary>
      <param name="decValue">The <see cref="T:System.Decimal" /> value to be stored as an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> using the supplied double precision value.</summary>
      <param name="dblValue">The supplied double precision value that will the used as the value of the new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure using the supplied integer value.</summary>
      <param name="intValue">The supplied integer value that will be used as the value of the new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure using the supplied long integer value.</summary>
      <param name="longValue">The supplied long integer value that will be used as the value of the new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Abs(System.Data.OracleClient.OracleNumber)">
      <summary>Gets the absolute value of the <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the unsigned number representing the absolute value of the <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter.</returns>
      <param name="n">An OracleNumber structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Acos(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the inverse hyperbolic cosine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>An angle, measured in radians.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Add(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the sum of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the sum.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Asin(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the inverse hyperbolic sine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>An angle, measured in radians.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the inverse hyperbolic tangent of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>An angle, measured in radians.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Atan2(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the inverse hyperbolic tangent of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures.</summary>
      <returns>An angle, measured in radians.</returns>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Ceiling(System.Data.OracleClient.OracleNumber)">
      <summary>Returns the smallest whole number greater than or equal to the specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> representing the smallest whole number greater than or equal to the specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="n">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure for which the ceiling value is to be calculated. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.CompareTo(System.Object)">
      <summary>Compares this instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to the supplied object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object, or the object is a null reference (Nothing in Visual Basic) </returns>
      <param name="obj">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cos(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the cosine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The cosine of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Cosh(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the hyperbolic cosine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The hyperbolic cosine of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Divide(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the results of dividing the first <see cref="T:System.Data.OracleClient.OracleNumber" /> structure by the second.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the results of the division.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.E">
      <summary>Returns the value e-2.718.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Equals(System.Object)">
      <summary>Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleNumber" /> object.</summary>
      <returns>true if the object is an instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> and the two are equal, otherwise false.</returns>
      <param name="value">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Exp(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates e raised to the power of an <see cref="T:System.Data.OracleClient.OracleNumber" />. The constant e equals 2.71828182845904, the base of the natural logarithm.</summary>
      <returns>A number raised to the power of <paramref name="p" />.</returns>
      <param name="p">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Floor(System.Data.OracleClient.OracleNumber)">
      <summary>Rounds a specified <see cref="T:System.Data.OracleClient.OracleNumber" /> number to the next lower whole number.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure containing the whole number portion of this <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="n">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure for which the floor value is to be calculated. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GetHashCode">
      <summary>Returns the hash code for this instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine whether the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.IsNull">
      <summary>Indicates whether or not the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> of this <see cref="T:System.Data.OracleClient.OracleNumber" /> structure is null.</summary>
      <returns>true if <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> is null, otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine whether the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates natural logarithm of an <see cref="T:System.Data.OracleClient.OracleNumber" />. Natural logarithms are based on the constant e (2.71828182845904).</summary>
      <returns>The natural logarithm of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates an <see cref="T:System.Data.OracleClient.OracleNumber" /> to the base you specify.</summary>
      <returns>The logarithm of a specified number in a specified base.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="newBase">A user-specified <see cref="T:System.Data.OracleClient.OracleNumber" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>Calculates an <see cref="T:System.Data.OracleClient.OracleNumber" /> to the base you specify.</summary>
      <returns>The logarithm of a specified number in a specified base.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="newBase">User-specified integer. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Log10(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the base 10 logarithm of a number.</summary>
      <returns>The base 10 logarithm of the specified number.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Max(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Returns the larger of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter values.</summary>
      <returns>The larger of <paramref name="x" /> or <paramref name="y" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxPrecision">
      <summary>A constant representing the largest possible value for precision comparison.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxScale">
      <summary>A constant representing the maximum value for scale comparison.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MaxValue">
      <summary>A constant representing the maximum value of an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Min(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Returns the smaller of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter values.</summary>
      <returns>The smaller of <paramref name="x" /> or <paramref name="y" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinScale">
      <summary>A constant representing the minimum value for scale comparison.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinusOne">
      <summary>Returns the value -1.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.MinValue">
      <summary>A constant representing the minimum value for an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Modulo(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the modulus from dividing the first <see cref="T:System.Data.OracleClient.OracleNumber" /> structure by the second.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the modulus from the results of the division operation.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the product of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the product of the multiplication.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Negate(System.Data.OracleClient.OracleNumber)">
      <summary>Negates the value of the <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> with the negative value of x , or zero, if <paramref name="x" /> is zero.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.NotEquals(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether they are not equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleNumber" /> class.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.One">
      <summary>Returns the value 1.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Addition(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the sum of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the sum.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Division(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the results of dividing the first <see cref="T:System.Data.OracleClient.OracleNumber" /> structure by the second.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the results of the division.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Equality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine whether they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int32">
      <summary>Converts the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to <see cref="T:System.Int32" />.</summary>
      <returns>A new Int32 structure whose value equals the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Int64">
      <summary>Converts the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to <see cref="T:System.Int64" />.</summary>
      <returns>A new Int64 structure whose value equals the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Decimal">
      <summary>Converts the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to <see cref="T:System.Decimal" />.</summary>
      <returns>A new Decimal structure whose value equals the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Data.OracleClient.OracleNumber)~System.Double">
      <summary>Converts the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to <see cref="T:System.Double" />.</summary>
      <returns>A new Double structure whose value equals the <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Decimal)~System.Data.OracleClient.OracleNumber">
      <summary>Converts the supplied Decimal structure to an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> is equal to the value of the Decimal structure.</returns>
      <param name="x">The Decimal structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Double)~System.Data.OracleClient.OracleNumber">
      <summary>Converts the supplied Double structure to an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property equals the value of the Double structure.</returns>
      <param name="x">The Double structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int32)~System.Data.OracleClient.OracleNumber">
      <summary>Converts the supplied Int32 structure to an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property equals the value of the Int32 structure.</returns>
      <param name="x">The integer structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.Int64)~System.Data.OracleClient.OracleNumber">
      <summary>Converts the supplied Int64 structure to an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property is equal to the value of the Int64 structure.</returns>
      <param name="x">The Int64 structure to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Explicit(System.String)~System.Data.OracleClient.OracleNumber">
      <summary>Converts the supplied String to an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> equals the value of the String structure.</returns>
      <param name="x">The String to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine whether the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_GreaterThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Inequality(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThan(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures to determine whether the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_LessThanOrEqual(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleNumber" /> parameters to determine whether the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleNumber" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Modulus(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the remainder left over from dividing an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure by a second <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the modulus of the division.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Multiply(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the product of two <see cref="T:System.Data.OracleClient.OracleNumber" /> structures.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the product of the multiplication.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_Subtraction(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the result of subtracting the second <see cref="T:System.Data.OracleClient.OracleNumber" /> structure from the first.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property contains the results of the subtraction.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.op_UnaryNegation(System.Data.OracleClient.OracleNumber)">
      <summary>Negates the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose value contains the results of the negation.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be negated. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Parse(System.String)">
      <summary>Converts the <see cref="T:System.String" /> representation of a number to its <see cref="T:System.Data.OracleClient.OracleNumber" /> equivalent.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> equivalent to the value contained in the specified <see cref="T:System.String" />.</returns>
      <param name="s">The String to be parsed. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.PI">
      <summary>Returns the value of pi-3.1415926535897932384626433832795028842.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the result of raising a specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to the power specified by a second <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</summary>
      <returns>The number <paramref name="x" /> raised to the power <paramref name="y" />.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> to be raised to a power. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> that specifies a power. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Pow(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>Calculates the result of raising a specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to the power specified by an Int32 structure.</summary>
      <returns>The number <paramref name="x" /> raised to the power <paramref name="y" />.</returns>
      <param name="x">The <see cref="T:System.Data.OracleClient.OracleNumber" /> to be raised to a power. </param>
      <param name="y">An Int32 structure that specifies a power. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Round(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>Gets the number nearest the specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure's value with the specified precision.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure containing the results of the rounding operation.</returns>
      <param name="n">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be rounded. </param>
      <param name="position">The number of significant fractional digits (precision) in the return value. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Shift(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>Shifts the specified number of digits to the left or right.</summary>
      <returns>The result of the operation.</returns>
      <param name="n">Number to operate on. </param>
      <param name="digits">The number of decimal places to shift. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sign(System.Data.OracleClient.OracleNumber)">
      <summary>Gets a value indicating the sign of an <see cref="T:System.Data.OracleClient.OracleNumber" /> structure's <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property.</summary>
      <returns>A number indicating the sign of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure.</returns>
      <param name="n">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose sign is to be evaluated. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sin(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the sine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The sine of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sinh(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the hyperbolic sine of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The hyperbolic sine of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Sqrt(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the square root of the <see cref="T:System.Data.OracleClient.OracleNumber" /> parameter.</summary>
      <returns>The square root of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Subtract(System.Data.OracleClient.OracleNumber,System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the result of subtracting the second <see cref="T:System.Data.OracleClient.OracleNumber" /> structure from the first.</summary>
      <returns>A new <see cref="T:System.Data.OracleClient.OracleNumber" /> structure whose Value property contains the results of the subtraction.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tan(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the tangent of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The tangent of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Tanh(System.Data.OracleClient.OracleNumber)">
      <summary>Calculates the hyperbolic tangent of an <see cref="T:System.Data.OracleClient.OracleNumber" />.</summary>
      <returns>The hyperbolic tangent of <paramref name="n" />.</returns>
      <param name="n">An <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.ToString">
      <summary>Converts this <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to <see cref="T:System.String" />.</summary>
      <returns>A new <see cref="T:System.String" /> object containing the string representation of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure's <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> property.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleNumber.Truncate(System.Data.OracleClient.OracleNumber,System.Int32)">
      <summary>Truncates the specified <see cref="T:System.Data.OracleClient.OracleNumber" /> structure's value to the desired position.</summary>
      <returns>A <see cref="T:System.Data.OracleClient.OracleNumber" /> structure with its <see cref="P:System.Data.OracleClient.OracleNumber.Value" /> truncated to the specified <paramref name="position" />.</returns>
      <param name="n">The <see cref="T:System.Data.OracleClient.OracleNumber" /> structure to be truncated. </param>
      <param name="position">The decimal position to which the number will be truncated. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleNumber.Value">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleNumber" /> structure. This property is read-only.</summary>
      <returns>A number in the range -79,228,162,514,264,337,593,543,950,335 through 79,228,162,514, 264,337,593,543,950,335.</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleNumber.Zero">
      <summary>Returns the value 0.</summary>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameter">
      <summary>Represents a parameter to an <see cref="T:System.Data.OracleClient.OracleCommand" /> and optionally its mapping to a <see cref="T:System.Data.DataColumn" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name and data type.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="oracleType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="oracleType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name, data type, and length.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="oracleType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="oracleType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name, data type, length, source column name, parameter direction, numeric precision, and other properties.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="oracleType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values. </param>
      <param name="isNullable">true if the value of the field can be null, otherwise, false. </param>
      <param name="precision">The total number of digits to the left and right of the decimal point to which <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> is resolved. </param>
      <param name="scale">The total number of decimal places to which <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> is resolved. </param>
      <param name="srcColumn">The name of the source column. </param>
      <param name="srcVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.OracleClient.OracleParameter" />. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="oracleType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.Data.ParameterDirection,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name, data type, size, direction, source column, source version, and other properties.</summary>
      <param name="name">The name of the parameter to map.</param>
      <param name="oracleType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values.</param>
      <param name="size">The length of the parameter.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
      <param name="sourceColumn">The name of the source column. </param>
      <param name="sourceVersion">One of the <see cref="T:System.Data.DataRowVersion" /> values. </param>
      <param name="sourceColumnNullMapping">true if the source column is nullable, otherwise false.</param>
      <param name="value">An <see cref="T:System.Object" /> that is the value of the <see cref="T:System.Data.OracleClient.OracleParameter" />.</param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="oracleType" /> parameter is an invalid back-end data type.</exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name, data type, length, and source column name.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="oracleType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <param name="size">The length of the parameter. </param>
      <param name="srcColumn">The name of the source column. </param>
      <exception cref="T:System.ArgumentException">The value supplied in the <paramref name="oracleType" /> parameter is an invalid back-end data type. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameter" /> class that uses the parameter name and an <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</summary>
      <param name="name">The name of the parameter. </param>
      <param name="value">An <see cref="T:System.Data.OracleClient.OracleParameter" /> object. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.DbType">
      <summary>Gets or sets the <see cref="T:System.Data.DbType" /> of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values. The default is <see cref="F:System.Data.DbType.AnsiString" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property was not set to a valid <see cref="T:System.Data.DbType" />. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Direction">
      <summary>Gets or sets a value that indicates whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values. The default is Input.</returns>
      <exception cref="T:System.ArgumentException">The property was not set to one of the valid <see cref="T:System.Data.ParameterDirection" /> values.</exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.IsNullable">
      <summary>Gets or sets a value that indicates whether the parameter accepts null values.</summary>
      <returns>true if null values are accepted, otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Offset">
      <summary>Gets or sets the offset to the <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> property.</summary>
      <returns>The offset to the <see cref="P:System.Data.OracleClient.OracleParameter.Value" />. The default is 0.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.OracleType">
      <summary>Gets or sets the <see cref="T:System.Data.OracleClient.OracleType" /> of the parameter.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleType" /> value that is the <see cref="T:System.Data.OracleClient.OracleType" /> of the parameter. The default is <see cref="F:System.Data.OracleClient.OracleType.VarChar" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.ParameterName">
      <summary>Gets or sets the name of the <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
      <returns>The name of the <see cref="T:System.Data.OracleClient.OracleParameter" />. The default is an empty string.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Precision">
      <summary>Gets or sets the maximum number of digits used to represent the <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> property.</summary>
      <returns>The maximum number of digits used to represent the <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> property. The default value is 0, which indicates that the data provider sets the precision for <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetDbType">
      <summary>Resets the type associated with this <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ResetOracleType">
      <summary>Resets the type associated with this <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Scale">
      <summary>Gets or sets the number of decimal places to which <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> is resolved.</summary>
      <returns>The number of decimal places to which <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> is resolved. The default is 0.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Size">
      <summary>Gets or sets the maximum size, in bytes, of the data within the column.</summary>
      <returns>The maximum size, in bytes, of the data within the column. The default value is 0 (to be used when you do not want to specify the maximum size of the value).</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumn">
      <summary>Gets or sets the name of the source column mapped to the <see cref="T:System.Data.DataSet" /> and used for loading or returning the <see cref="P:System.Data.OracleClient.OracleParameter.Value" /></summary>
      <returns>The name of the source column mapped to the <see cref="T:System.Data.DataSet" />. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceColumnNullMapping">
      <summary>Sets or gets a value which indicates whether the source column is nullable. This allows <see cref="T:System.Data.OracleClient.OracleCommandBuilder" /> to correctly generate Update statements for nullable columns.</summary>
      <returns>True if the source column is nullable, otherwise false.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.SourceVersion">
      <summary>Gets or sets the <see cref="T:System.Data.DataRowVersion" /> to use when you load <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
      <returns>One of the <see cref="T:System.Data.DataRowVersion" /> values. The default is Current.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.System#ICloneable#Clone">
      <summary>For a description of this member, see <see cref="M:System.ICloneable.Clone" />.</summary>
      <returns>A new object that is a copy of this instance.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameter.ToString">
      <summary>Gets a string that contains the <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />.</summary>
      <returns>A string that contains the <see cref="P:System.Data.OracleClient.OracleParameter.ParameterName" />.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameter.Value">
      <summary>Gets or sets the value of the parameter.</summary>
      <returns>An object that is the value of the parameter. The default value is null.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleParameterCollection">
      <summary>Represents a collection of parameters relevant to an <see cref="T:System.Data.OracleClient.OracleCommand" /> as well as their respective mappings to columns in a <see cref="T:System.Data.DataSet" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> class.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Data.OracleClient.OracleParameter)">
      <summary>Adds the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>A reference to the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="value">The <see cref="T:System.Data.OracleClient.OracleParameter" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The <see cref="T:System.Data.OracleClient.OracleParameter" /> specified in the <paramref name="value" /> parameter is already added to this or another <see cref="T:System.Data.OracleClient.OracleParameterCollection" />. </exception>
      <exception cref="T:System.ArgumentNullException">The <paramref name="value" /> parameter is null. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> object to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>The index of the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object in the collection.</returns>
      <param name="value">The <see cref="T:System.Data.OracleClient.OracleParameter" /> object to add to the collection.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType)">
      <summary>Adds an <see cref="T:System.Data.OracleClient.OracleParameter" /> to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> given the parameter name and data type.</summary>
      <returns>A reference to the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32)">
      <summary>Adds an <see cref="T:System.Data.OracleClient.OracleParameter" /> to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> given the parameter name, data type, and column length.</summary>
      <returns>A reference to the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <param name="size">The length of the column. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Data.OracleClient.OracleType,System.Int32,System.String)">
      <summary>Adds an <see cref="T:System.Data.OracleClient.OracleParameter" /> to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> given the parameter name, data type, column length, and source column name.</summary>
      <returns>A reference to the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="dataType">One of the <see cref="T:System.Data.OracleClient.OracleType" /> values. </param>
      <param name="size">The length of the column. </param>
      <param name="srcColumn">The name of the source column. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Add(System.String,System.Object)">
      <summary>Adds an <see cref="T:System.Data.OracleClient.OracleParameter" /> to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> given the parameter name and value.</summary>
      <returns>A reference to the new <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter. </param>
      <param name="value">The <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> of the <see cref="T:System.Data.OracleClient.OracleParameter" /> to add to the collection. </param>
      <exception cref="T:System.InvalidCastException">The <paramref name="value" /> parameter is not an <see cref="T:System.Data.OracleClient.OracleParameter" />. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Array)">
      <summary>Adds an array of values to the end of the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <param name="values">The <see cref="T:System.Array" /> values to add.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddRange(System.Data.OracleClient.OracleParameter[])">
      <summary>Adds an array of <see cref="T:System.Data.OracleClient.OracleParameter" /> values to the end of the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <param name="values">The <see cref="T:System.Data.OracleClient.OracleParameter" /> values to add.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.AddWithValue(System.String,System.Object)">
      <summary>Adds a value to the end of the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>A <see cref="T:System.Data.OracleClient.OracleParameter" /> object.</returns>
      <param name="parameterName">The name of the parameter.</param>
      <param name="value">The value to be added.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Clear">
      <summary>Removes all of the <see cref="T:System.Data.OracleClient.OracleParameter" /> objects from the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Data.OracleClient.OracleParameter)">
      <summary>Determines whether the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> is in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> contains the value, false otherwise.</returns>
      <param name="value">The <see cref="T:System.Data.OracleClient.OracleParameter" /> value.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.Object)">
      <summary>Determines whether the specified object is in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>true if the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> contains the value, false otherwise.</returns>
      <param name="value">The <see cref="T:System.Object" /> value.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Contains(System.String)">
      <summary>Indicates whether an <see cref="T:System.Data.OracleClient.OracleParameter" /> with the specified name is contained in the collection.</summary>
      <returns>true if the <see cref="T:System.Data.OracleClient.OracleParameter" /> is in the collection; otherwise, false.</returns>
      <param name="parameterName">The name of the <see cref="T:System.Data.OracleClient.OracleParameter" /> to look for in the collection.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> to the specified one-dimensional <see cref="T:System.Array" /> starting at the specified destination <see cref="T:System.Array" /> index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.CopyTo(System.Data.OracleClient.OracleParameter[],System.Int32)">
      <summary>Copies all the elements of the current <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> to the specified <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> starting at the specified destination index.</summary>
      <param name="array">The <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> that is the destination of the elements copied from the current <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</param>
      <param name="index">A 32-bit integer that represents the index in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> at which copying begins.</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Count">
      <summary>Returns an Integer containing the number of elements in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />. Read-only. </summary>
      <returns>The number of elements in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> as an Integer.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Data.OracleClient.OracleParameter)">
      <summary>Gets the location of the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> that is a <see cref="T:System.Data.OracleClient.OracleParameter" /> within the collection. </returns>
      <param name="value">The <see cref="T:System.Data.OracleClient.OracleParameter" /> to find.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.Object)">
      <summary>Gets the location of the specified <see cref="T:System.Object" /> within the collection.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Object" /> that is a <see cref="T:System.Data.OracleClient.OracleParameter" /> within the collection. </returns>
      <param name="value">The <see cref="T:System.Object" /> to find.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.IndexOf(System.String)">
      <summary>Gets the location of the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> with the specified name.</summary>
      <returns>The zero-based location of the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> that is a <see cref="T:System.Data.OracleClient.OracleParameter" /> within the collection. </returns>
      <param name="parameterName">The case-sensitive name of the <see cref="T:System.Data.OracleClient.OracleParameter" /> to find.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Data.OracleClient.OracleParameter)">
      <summary>Inserts a <see cref="T:System.Data.OracleClient.OracleParameter" /> object into the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">A <see cref="T:System.Data.OracleClient.OracleParameter" /> object to be inserted in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Insert(System.Int32,System.Object)">
      <summary>Inserts a <see cref="T:System.Object" /> into the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which value should be inserted.</param>
      <param name="value">A <see cref="T:System.Object" /> to be inserted in the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsFixedSize">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> has a fixed size. </summary>
      <returns>Returns true if the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> has a fixed size, false otherwise.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> is read-only. </summary>
      <returns>Returns true if the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> is read only, false otherwise.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.IsSynchronized">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> is synchronized.</summary>
      <returns>Returns true if the <see cref="T:System.Data.OracleClient.OracleParameterCollection" /> is synchronized, false otherwise.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Data.OracleClient.OracleParameter" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Data.OracleClient.OracleParameter" /> at the specified index.</returns>
      <param name="index">The zero-based index of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The index specified does not exist. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Data.OracleClient.OracleParameter" /> with the specified name.</summary>
      <returns>The <see cref="T:System.Data.OracleClient.OracleParameter" /> with the specified name.</returns>
      <param name="parameterName">The name of the parameter to retrieve. </param>
      <exception cref="T:System.IndexOutOfRangeException">The name specified does not exist. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Data.OracleClient.OracleParameter)">
      <summary>Removes the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> object from the collection.</summary>
      <param name="value">A <see cref="T:System.Data.OracleClient.OracleParameter" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.Remove(System.Object)">
      <summary>Removes the specified <see cref="T:System.Data.OracleClient.OracleParameter" /> object from the collection.</summary>
      <param name="value">A <see cref="T:System.Object" /> object to remove from the collection.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Data.OracleClient.OracleParameter" /> object at the specified index from the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Data.OracleClient.OracleParameter" /> object to remove.</param>
    </member>
    <member name="M:System.Data.OracleClient.OracleParameterCollection.RemoveAt(System.String)">
      <summary>Removes the <see cref="T:System.Data.OracleClient.OracleParameter" /> object with the specified name from the collection.</summary>
      <param name="parameterName">The name of the <see cref="T:System.Data.OracleClient.OracleParameter" /> object to remove.</param>
    </member>
    <member name="P:System.Data.OracleClient.OracleParameterCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Data.OracleClient.OracleParameterCollection" />.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermission">
      <summary>Enables the .NET Framework Data Provider for Oracle to help ensure that a user has a security level adequate to access an Oracle database. </summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.#ctor(System.Security.Permissions.PermissionState)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OraclePermission" /> class with one of the <see cref="T:System.Security.Permissions.PermissionState" /> values.</summary>
      <param name="state">One of the <see cref="T:System.Security.Permissions.PermissionState" /> values. </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Add(System.String,System.String,System.Data.KeyRestrictionBehavior)">
      <summary>Creates a new set of permissions.</summary>
      <param name="connectionString">The connection string.</param>
      <param name="restrictions">The key restrictions.</param>
      <param name="behavior">One of the <see cref="T:System.Data.KeyRestrictionBehavior" /> enumerations.</param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermission.AllowBlankPassword">
      <summary>Gets a value indicating whether a blank password is allowed.</summary>
      <returns>true if a blank password is allowed, otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Copy">
      <returns>A copy of the current permission object.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.FromXml(System.Security.SecurityElement)">
      <param name="securityElement">A <see cref="System.Security.SecurityElement" /> expression.</param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Intersect(System.Security.IPermission)">
      <returns>A new permission that represents the intersection of the current permission and the specified permission. This new permission is null if the intersection is empty.</returns>
      <param name="target">A permission to intersect with the current permission. It must be of the same type as the current permission. </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsSubsetOf(System.Security.IPermission)">
      <returns>true if the current permission is a subset of the specified permission; otherwise, false.</returns>
      <param name="target">A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission. </param>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.IsUnrestricted">
      <summary>Returns a value indicating whether the permission can be represented as unrestricted without any knowledge of the permission semantics.</summary>
      <returns>true if the permission can be represented as unrestricted.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.ToXml">
      <summary>Creates an XML encoding of the security object and its current state.</summary>
      <returns>An XML encoding of the security object, including any state information.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermission.Union(System.Security.IPermission)">
      <returns>A new permission that represents the union of the current permission and the specified permission.</returns>
      <param name="target">A <see cref="System.Security.IPermission" /> expression.</param>
    </member>
    <member name="T:System.Data.OracleClient.OraclePermissionAttribute">
      <summary>Associates a security action with a custom security attribute.  </summary>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OraclePermissionAttribute" /> class.</summary>
      <param name="action">One of the <see cref="T:System.Security.Permissions.SecurityAction" /> values representing an action that can be performed using declarative security. </param>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.AllowBlankPassword">
      <summary>Gets or sets a value indicating whether a blank password is allowed.</summary>
      <returns>true if a blank password is allowed, otherwise false.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.ConnectionString">
      <summary>Gets or sets a permitted connection string.</summary>
      <returns>A permitted connection string.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.CreatePermission">
      <summary>Returns an <see cref="T:System.Data.OracleClient.OraclePermission" /> object that is configured according to the attribute properties.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OraclePermission" /> object.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior">
      <summary>Identifies whether the list of connection string parameters identified by the <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions" /> property are the only connection string parameters allowed.</summary>
      <returns>One of the <see cref="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictionBehavior" /> values.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OraclePermissionAttribute.KeyRestrictions">
      <summary>Gets or sets connection string parameters that are allowed or disallowed.</summary>
      <returns>One or more connection string parameters that are allowed or disallowed.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeConnectionString">
      <summary>Identifies whether the attribute should serialize the connection string.</summary>
      <returns>true if the attribute should serialize the connection string; otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OraclePermissionAttribute.ShouldSerializeKeyRestrictions">
      <summary>Identifies whether the attribute should serialize the set of key restrictions.</summary>
      <returns>true if the attribute should serialize the set of key restrictions, otherwise false.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatedEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatedEventArgs.Command">
      <summary>Gets or sets the <see cref="T:System.Data.OracleClient.OracleCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</summary>
      <returns>The <see cref="T:System.Data.OracleClient.OracleCommand" /> executed when <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> is called.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdated" /> event of an <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.OracleClient.OracleRowUpdatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> event.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleRowUpdatingEventArgs.#ctor(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" /> class.</summary>
      <param name="row">The <see cref="T:System.Data.DataRow" /> to update. </param>
      <param name="command">The <see cref="T:System.Data.IDbCommand" /> to execute during update. </param>
      <param name="statementType">One of the <see cref="T:System.Data.StatementType" /> values that specifies the type of query executed. </param>
      <param name="tableMapping">The <see cref="T:System.Data.Common.DataTableMapping" /> sent through an update. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleRowUpdatingEventArgs.Command">
      <summary>Gets or sets the <see cref="T:System.Data.OracleClient.OracleCommand" /> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</summary>
      <returns>The <see cref="T:System.Data.OracleClient.OracleCommand" /> to execute when performing the <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" />.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleRowUpdatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Data.OracleClient.OracleDataAdapter.RowUpdating" /> event of an <see cref="T:System.Data.OracleClient.OracleDataAdapter" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.Data.OracleClient.OracleRowUpdatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Data.OracleClient.OracleString">
      <summary>Represents a variable-length stream of characters to be stored in or retrieved from the database.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleString" /> class and specifies the string to store.</summary>
      <param name="s">The string to store. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.CompareTo(System.Object)">
      <summary>Compares this instance of <see cref="T:System.Data.OracleClient.OracleString" /> to the supplied object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of the instance and the object.Return Value Condition Less than zero This instance is less than object. Zero This instance is the same as object. Greater than zero This instance is greater than object -or- object is a null reference (Nothing) </returns>
      <param name="obj">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Concat(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Concatenates the two specified <see cref="T:System.Data.OracleClient.OracleString" /> structures.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleString" /> containing the newly concatenated value representing the contents of the two <see cref="T:System.Data.OracleClient.OracleString" /> parameters.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Empty">
      <summary>Represents an empty string that can be assigned to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.Equals(System.Object)">
      <summary>Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleString" /> object.</summary>
      <returns>Equals will return true if the object is an instance of <see cref="T:System.Data.OracleClient.OracleString" /> and the two are equal; otherwise false.</returns>
      <param name="value">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GetHashCode">
      <summary>Gets the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.IsNull">
      <summary>Indicates whether the <see cref="P:System.Data.OracleClient.OracleString.Value" /> of the <see cref="T:System.Data.OracleClient.OracleString" /> is <see cref="F:System.Data.OracleClient.OracleString.Null" />.</summary>
      <returns>true if <see cref="P:System.Data.OracleClient.OracleString.Value" /> is <see cref="F:System.Data.OracleClient.OracleString.Null" />, otherwise false.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Item(System.Int32)">
      <summary>Gets the single byte from the Value property located at the position indicated by the integer parameter, <paramref name="index" />.</summary>
      <returns>The byte located at the position indicated by the integer parameter.</returns>
      <param name="index">The position of the byte to be retrieved. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Length">
      <summary>Gets the length of the string that is stored in this <see cref="T:System.Data.OracleClient.OracleString" /> structure.</summary>
      <returns>The length of the string that is stored.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.NotEquals(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are not equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleString.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Addition(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Concatenates the two specified <see cref="T:System.Data.OracleClient.OracleString" /> structures.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleString" /> containing the newly concatenated value representing the contents of the two <see cref="T:System.Data.OracleClient.OracleString" /> parameters.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Equality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are not equal. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Explicit(System.Data.OracleClient.OracleString)~System.String">
      <summary>Converts an <see cref="T:System.Data.OracleClient.OracleString" /> to a <see cref="T:System.String" />.</summary>
      <returns>A String, whose contents are the same as the <see cref="P:System.Data.OracleClient.OracleString.Value" /> property of the OracleString parameter.</returns>
      <param name="x">The OracleString to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_GreaterThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Implicit(System.String)~System.Data.OracleClient.OracleString">
      <summary>Converts the <see cref="T:System.String" /> parameter to an <see cref="T:System.Data.OracleClient.OracleString" />.</summary>
      <returns>An OracleString containing the value of the specified String.</returns>
      <param name="s">The <see cref="T:System.String" /> to be converted. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_Inequality(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThan(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.op_LessThanOrEqual(System.Data.OracleClient.OracleString,System.Data.OracleClient.OracleString)">
      <summary>Performs a logical comparison of the two <see cref="T:System.Data.OracleClient.OracleString" /> operands to determine if the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleString" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleString" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleString.ToString">
      <summary>Converts an OracleString object to a String.</summary>
      <returns>A String with the same value as this OracleString structure.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleString.Value">
      <summary>Gets the string that is stored in the <see cref="T:System.Data.OracleClient.OracleString" /> structure.</summary>
      <returns>The string that is stored.This property is read-only.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleTimeSpan">
      <summary>Represents a time interval and corresponds to the Oracle 9i INTERVAL DAY TO SECOND data type.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Data.OracleClient.OracleTimeSpan)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure from an existing one.</summary>
      <param name="from">An existing <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure from which to create the new structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to a specified number of hours, minutes, and seconds.</summary>
      <param name="hours">Number of hours. </param>
      <param name="minutes">Number of minutes. </param>
      <param name="seconds">Number of seconds. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> value less than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> or greater than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to a specified number of days, hours, minutes, and seconds.</summary>
      <param name="days">Number of days. </param>
      <param name="hours">Number of hours. </param>
      <param name="minutes">Number of minutes. </param>
      <param name="seconds">Number of seconds. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> value less than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> or greater than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to a specified number of days, hours, minutes, seconds, and milliseconds.</summary>
      <param name="days">Number of days. </param>
      <param name="hours">Number of hours. </param>
      <param name="minutes">Number of minutes. </param>
      <param name="seconds">Number of seconds. </param>
      <param name="milliseconds">Number of milliseconds. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The parameters specify an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> value less than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MinValue" /> or greater than <see cref="F:System.Data.OracleClient.OracleTimeSpan.MaxValue" />. </exception>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.Int64)">
      <summary>Initializes a new <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to the specified number of ticks.</summary>
      <param name="ticks">A time period expressed in 100-nanosecond units. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.#ctor(System.TimeSpan)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure with the specified <see cref="T:System.TimeSpan" />.</summary>
      <param name="ts">The specified <see cref="T:System.TimeSpan" />. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.CompareTo(System.Object)">
      <summary>Compares this <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to the supplied object and returns an indication of their relative values.</summary>
      <returns>A signed number indicating the relative values of the instance of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure and the object.Return Value Condition Less than zero This instance is less than the object. Zero This instance is the same as the object. Greater than zero This instance is greater than the object, or the object is a null reference (Nothing in Visual Basic). </returns>
      <param name="obj">The object to be compared. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Days">
      <summary>Gets the number of whole days represented by this instance.</summary>
      <returns>The day component of this instance.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structures to determine whether they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Equals(System.Object)">
      <summary>Compares the supplied object parameter to the <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> object.</summary>
      <returns>true if the object is an instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> and the two are equal, otherwise false.</returns>
      <param name="value">The object to be compared. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GetHashCode">
      <summary>Gets the hash code for this instance.</summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> will be <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Hours">
      <summary>Gets the number of whole hours represented by this instance.</summary>
      <returns>The hour component of this instance between 0 and 23.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.IsNull">
      <summary>Gets a value indicating whether the <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> property of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure is null.</summary>
      <returns>true if <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> is null, otherwise false.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MaxValue">
      <summary>Represents the maximum valid date value for an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</summary>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Milliseconds">
      <summary>Gets the number of whole milliseconds represented by this instance.</summary>
      <returns>The millisecond component of this instance between 0 and 999.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Minutes">
      <summary>Gets the number of whole minutes represented by this instance.</summary>
      <returns>The minute component of this instance between 0 and 59.</returns>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.MinValue">
      <summary>Represents the minimum valid date value for an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.NotEquals(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether they are not equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="F:System.Data.OracleClient.OracleTimeSpan.Null">
      <summary>Represents a null value that can be assigned to the <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> property of an instance of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Equality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Performs a logical comparison of two <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structures to determine whether they are equal.</summary>
      <returns>true if the two values are equal, otherwise false.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.Data.OracleClient.OracleTimeSpan)~System.TimeSpan">
      <summary>Converts an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to a <see cref="T:System.TimeSpan" /> structure.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> structure.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to convert to a <see cref="T:System.TimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Explicit(System.String)~System.Data.OracleClient.OracleTimeSpan">
      <summary>Converts a string to an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</returns>
      <param name="x">A string to convert to an <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is greater than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_GreaterThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is greater than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is greater than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_Inequality(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Performs a logical comparison of two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether they are equal.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the two instances are not equal or <see cref="F:System.Data.OracleClient.OracleBoolean.False" /> if the two instances are equal. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThan(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is less than the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.op_LessThanOrEqual(System.Data.OracleClient.OracleTimeSpan,System.Data.OracleClient.OracleTimeSpan)">
      <summary>Compares two instances of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> to determine whether the first is less than or equal to the second.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleBoolean" /> that is <see cref="F:System.Data.OracleClient.OracleBoolean.True" /> if the first instance is less than or equal to the second instance, otherwise <see cref="F:System.Data.OracleClient.OracleBoolean.False" />. If either instance of <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> is null, the <see cref="P:System.Data.OracleClient.OracleBoolean.Value" /> of the <see cref="T:System.Data.OracleClient.OracleBoolean" /> is <see cref="F:System.Data.OracleClient.OracleBoolean.Null" />.</returns>
      <param name="x">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
      <param name="y">An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure. </param>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.Parse(System.String)">
      <summary>Converts the specified <see cref="T:System.String" /> representation of a date and time to its <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> equivalent.</summary>
      <returns>An <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure equal to the date and time represented by the specified String.</returns>
      <param name="s">The String to be parsed. </param>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Seconds">
      <summary>Gets the number of whole seconds represented by this instance.</summary>
      <returns>The second component of this instance between 0 and 59.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTimeSpan.ToString">
      <summary>Converts this <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure to a <see cref="T:System.String" />.</summary>
      <returns>A String representing the <see cref="P:System.Data.OracleClient.OracleTimeSpan.Value" /> property of this <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTimeSpan.Value">
      <summary>Gets the value of the <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</summary>
      <returns>The value of this <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> structure.</returns>
    </member>
    <member name="T:System.Data.OracleClient.OracleTransaction">
      <summary>Represents a transaction to be made in the database.</summary>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Commit">
      <summary>Commits the SQL database transaction.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.Connection">
      <summary>Specifies the <see cref="T:System.Data.OracleClient.OracleConnection" /> object associated with the transaction.</summary>
      <returns>The <see cref="T:System.Data.OracleClient.OracleConnection" /> object associated with the transaction.</returns>
    </member>
    <member name="P:System.Data.OracleClient.OracleTransaction.IsolationLevel">
      <summary>Specifies the <see cref="T:System.Data.IsolationLevel" /> for this transaction.</summary>
      <returns>The <see cref="T:System.Data.IsolationLevel" /> for this transaction. The default is ReadCommitted.</returns>
    </member>
    <member name="M:System.Data.OracleClient.OracleTransaction.Rollback">
      <summary>Rolls back a transaction from a pending state.</summary>
      <exception cref="T:System.Exception">An error occurred while trying to commit the transaction. </exception>
      <exception cref="T:System.InvalidOperationException">The transaction has already been committed or rolled back.-or- The connection is broken. </exception>
    </member>
    <member name="T:System.Data.OracleClient.OracleType">
      <summary>Specifies the data type of a field or property for use in an <see cref="T:System.Data.OracleClient.OracleParameter" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.BFile">
      <summary>An Oracle BFILE data type that contains a reference to binary data with a maximum size of 4 gigabytes that is stored in an external file. Use the OracleClient <see cref="T:System.Data.OracleClient.OracleBFile" /> data type with the <see cref="P:System.Data.OracleClient.OracleParameter.Value" /> property.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Blob">
      <summary>An Oracle BLOB data type that contains binary data with a maximum size of 4 gigabytes. Use the OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Char">
      <summary>An Oracle CHAR data type that contains a fixed-length character string with a maximum size of 2,000 bytes. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Clob">
      <summary>An Oracle CLOB data type that contains character data, based on the default character set on the server, with a maximum size of 4 gigabytes. Use the OracleClient <see cref="T:System.Data.OracleClient.OracleLob" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Cursor">
      <summary>An Oracle REF CURSOR. The <see cref="T:System.Data.OracleClient.OracleDataReader" /> object is not available.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.DateTime">
      <summary>An Oracle DATE data type that contains a fixed-length representation of a date and time, ranging from January 1, 4712 B.C. to December 31, A.D. 4712, with the default format dd-mmm-yy. For A.D. dates, DATE maps to <see cref="T:System.DateTime" />. To bind B.C. dates, use a String parameter and the Oracle TO_DATE or TO_CHAR conversion functions for input and output parameters respectively. Use the .NET Framework <see cref="T:System.DateTime" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalDayToSecond">
      <summary>An Oracle INTERVAL DAY TO SECOND data type (Oracle 9i or later) that contains an interval of time in days, hours, minutes, and seconds, and has a fixed size of 11 bytes. Use the .NET Framework <see cref="T:System.TimeSpan" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleTimeSpan" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.IntervalYearToMonth">
      <summary>An Oracle INTERVAL YEAR TO MONTH data type (Oracle 9i or later) that contains an interval of time in years and months, and has a fixed size of 5 bytes. Use the .NET Framework <see cref="T:System.Int32" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleMonthSpan" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongRaw">
      <summary>An Oracle LONGRAW data type that contains variable-length binary data with a maximum size of 2 gigabytes. Use the .NET Framework Byte[] or OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.LongVarChar">
      <summary>An Oracle LONG data type that contains a variable-length character string with a maximum size of 2 gigabytes. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NChar">
      <summary>An Oracle NCHAR data type that contains fixed-length character string to be stored in the national character set of the database, with a maximum size of 2,000 bytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NClob">
      <summary>An Oracle NCLOB data type that contains character data to be stored in the national character set of the database, with a maximum size of 4 gigabytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Number">
      <summary>An Oracle NUMBER data type that contains variable-length numeric data with a maximum precision and scale of 38. This maps to <see cref="T:System.Decimal" />. To bind an Oracle NUMBER that exceeds what <see cref="F:System.Decimal.MaxValue" /> can contain, either use an <see cref="T:System.Data.OracleClient.OracleNumber" /> data type, or use a String parameter and the Oracle TO_NUMBER or TO_CHAR conversion functions for input and output parameters respectively. Use the .NET Framework <see cref="T:System.Decimal" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.NVarChar">
      <summary>An Oracle NVARCHAR2 data type that contains a variable-length character string stored in the national character set of the database, with a maximum size of 4,000 bytes (not characters) when stored in the database. The size of the value depends on the national character set of the database. See your Oracle documentation for more information. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Raw">
      <summary>An Oracle RAW data type that contains variable-length binary data with a maximum size of 2,000 bytes. Use the .NET Framework Byte[] or OracleClient <see cref="T:System.Data.OracleClient.OracleBinary" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.RowId">
      <summary>The base64 string representation of an Oracle ROWID data type. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Timestamp">
      <summary>An Oracle TIMESTAMP (Oracle 9i or later) that contains date and time (including seconds), and ranges in size from 7 to 11 bytes. Use the .NET Framework <see cref="T:System.DateTime" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampLocal">
      <summary>An Oracle TIMESTAMP WITH LOCAL TIMEZONE (Oracle 9i or later) that contains date, time, and a reference to the original time zone, and ranges in size from 7 to 11 bytes. Use the .NET Framework <see cref="T:System.DateTime" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.TimestampWithTZ">
      <summary>An Oracle TIMESTAMP WITH TIMEZONE (Oracle 9i or later) that contains date, time, and a specified time zone, and has a fixed size of 13 bytes. Use the .NET Framework <see cref="T:System.DateTime" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleDateTime" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.VarChar">
      <summary>An Oracle VARCHAR2 data type that contains a variable-length character string with a maximum size of 4,000 bytes. Use the .NET Framework <see cref="T:System.String" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleString" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Byte">
      <summary>An integral type representing unsigned 8-bit integers with values between 0 and 255. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. Use the .NET Framework <see cref="T:System.Byte" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt16">
      <summary>An integral type representing unsigned 16-bit integers with values between 0 and 65535. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.UInt16" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.UInt32">
      <summary>An integral type representing unsigned 32-bit integers with values between 0 and 4294967295. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.UInt32" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.SByte">
      <summary>An integral type representing signed 8 bit integers with values between -128 and 127. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. Use the .NET Framework <see cref="T:System.SByte" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int16">
      <summary>An integral type representing signed 16-bit integers with values between -32768 and 32767. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.Int16" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Int32">
      <summary>An integral type representing signed 32-bit integers with values between -2147483648 and 2147483647. This is not a native Oracle data type, but is provided for performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.Int32" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Float">
      <summary>A single-precision floating-point value. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.Single" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
    <member name="F:System.Data.OracleClient.OracleType.Double">
      <summary>A double-precision floating-point value. This is not a native Oracle data type, but is provided to improve performance when binding input parameters. For information about conversion of Oracle numeric values to common language runtime (CLR) data types, see <see cref="T:System.Data.OracleClient.OracleNumber" />. Use the .NET Framework <see cref="T:System.Double" /> or OracleClient <see cref="T:System.Data.OracleClient.OracleNumber" /> data type in <see cref="P:System.Data.OracleClient.OracleParameter.Value" />.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.Services.Client.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Services.Client</name>
  </assembly>
  <members>
    <member name="T:System.Data.Services.Client.ChangeOperationResponse">
      <summary>Results returned after a call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> when enumerating operation responses returned by the <see cref="T:System.Data.Services.Client.DataServiceResponse" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.ChangeOperationResponse.Descriptor">
      <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> or <see cref="T:System.Data.Services.Client.LinkDescriptor" /> modified by a change operation.</summary>
      <returns>An <see cref="T:System.Data.Services.Client.EntityDescriptor" /> or <see cref="T:System.Data.Services.Client.LinkDescriptor" /> modified by a change operation. </returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceClientException">
      <summary>Represents errors that occur during execution of WCF Data Services client applications.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class with a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class with a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="innerException">The System.Exception object that contains the inner exception.</param>
      <param name="statusCode">The integer value that contains status code.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="statusCode">The integer value that contains status code.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceClientException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceClientException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceClientException.StatusCode">
      <summary>Gets the HTTP error status code returned after <see cref="T:System.Data.Services.Client.DataServiceClientException" />.</summary>
      <returns>An integer value that represents the exception.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceCollection`1">
      <summary>Represents a dynamic entity collection that provides notifications when items get added, removed, or when the list is refreshed.</summary>
      <typeparam name="T">An entity type.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class based on query execution.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that  returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class based on query execution and with the specified tracking mode.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class a based on query execution and with the supplied change method delegates.</summary>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class that uses the specified <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track changes to objects in the collection.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.Collections.Generic.IEnumerable{`0},System.Data.Services.Client.TrackingMode,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class a based on query execution, with the supplied change method delegates, and that uses the supplied <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track items in the collection.</param>
      <param name="items">A <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> or LINQ query that returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of objects that are used to initialize the collection.</param>
      <param name="trackingMode">A <see cref="T:System.Data.Services.Client.TrackingMode" /> value that indicated whether or not changes made to items in the collection are automatically tracked.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.#ctor(System.Data.Services.Client.DataServiceContext,System.String,System.Func{System.Data.Services.Client.EntityChangedParams,System.Boolean},System.Func{System.Data.Services.Client.EntityCollectionChangedParams,System.Boolean})">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> class with the supplied change method delegates and that uses the specified <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="context">The <see cref="T:System.Data.Services.Client.DataServiceContext" /> used to track items in the collection.</param>
      <param name="entitySetName">The entity set of the objects in the collection.</param>
      <param name="entityChangedCallback">A delegate that encapsulates a method that is called when an entity changes.</param>
      <param name="collectionChangedCallback">A delegate that encapsulates a method that is called when the collection of entities changes.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Clear(System.Boolean)">
      <summary>Removes all items from the collection, and optionally detaches all the items from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="stopTracking">When true, detaches all items from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceCollection`1.Continuation">
      <summary>Gets a continuation object that is used to return the next set of paged results.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI to return the next set of paged results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Detach">
      <summary>Disables <see cref="T:System.Data.Services.Client.DataServiceContext" /> tracking of all items in the collection. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.InsertItem(System.Int32,`0)">
      <summary>Adds a specified item to the collection at the specified index. </summary>
      <param name="index">Index at which to add the item.</param>
      <param name="item">The item to add.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Load(System.Collections.Generic.IEnumerable{`0})">
      <summary>Loads a collection of entity objects into the collection.</summary>
      <param name="items">Collection of entity objects to be added to the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" />.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceCollection`1.Load(`0)">
      <summary>Loads a single entity object into the collection.</summary>
      <param name="item">Entity object to be added.</param>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceContext">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> represents the runtime context of the data service. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceContext" /> class with the specified <paramref name="serviceRoot" />.</summary>
      <param name="serviceRoot">An absolute URI that identifies the root of a data service.</param>
      <exception cref="T:System.ArgumentNullException">When the <paramref name="serviceRoot" /> is null.</exception>
      <exception cref="T:System.ArgumentException">If the <paramref name="serviceRoot" /> is not an absolute URI -or-If the <paramref name="serviceRoot" /> is a well formed URI without a query or query fragment.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddLink(System.Object,System.String,System.Object)">
      <summary>Adds the specified link to the set of objects the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <param name="source">The source object for the new link.</param>
      <param name="sourceProperty">The name of the navigation property on the source object that returns the related object.</param>
      <param name="target">The object related to the source object by the new link. </param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">If a link already exists.-or-If either the <paramref name="source" /> or <paramref name="target" /> objects are in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.-or-If <paramref name="sourceProperty" /> is not a collection.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddObject(System.String,System.Object)">
      <summary>Adds the specified object to the set of objects that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <param name="entitySetName">The name of the entity set to which the resource will be added.</param>
      <param name="entity">The object to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> or <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is empty.-or-When <paramref name="entity" /> does not have a key property defined.</exception>
      <exception cref="T:System.InvalidOperationException">When the entity is already being tracked by the context.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AddRelatedObject(System.Object,System.String,System.Object)">
      <summary>Adds a related object to the context and creates the link that defines the relationship between the two objects in a single request.</summary>
      <param name="source">The parent object that is being tracked by the context.</param>
      <param name="sourceProperty">The name of the navigation property that returns the related object based on an association between the two entities.</param>
      <param name="target">The related object that is being added.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ApplyingChanges">
      <summary>Gets a value that indicates whether the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is currently applying changes to tracked objects.</summary>
      <returns>Returns true when changes are currently being applied; otherwise returns false.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachLink(System.Object,System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified link that defines a relationship between entity objects.</summary>
      <param name="source">The source object in the new link.</param>
      <param name="sourceProperty">The name of the property on the source object that represents the link between the source and target object.</param>
      <param name="target">The target object in the link that is bound to the source object specified in this call. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">When the link between the two entities already exists.-or-When <paramref name="source" /> or <paramref name="target" /> is in an <see cref="F:System.Data.Services.Client.EntityStates.Added" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource within the specified resource set.</summary>
      <param name="entitySetName">The name of the set that contains the resource.</param>
      <param name="entity">The resource to be tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. The resource is attached in the Unchanged state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="entitySetName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.-or-When the <paramref name="entity" /> does not have a key property defined.</exception>
      <exception cref="T:System.InvalidOperationException">When the <paramref name="entity" /> is already being tracked by the context.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.AttachTo(System.String,System.Object,System.String)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to start tracking the specified resource and supplies the location of the resource in the specified resource set.</summary>
      <param name="entitySetName">The string value that contains the name of the entity set to which to the entity is attached.</param>
      <param name="entity">The entity to add.</param>
      <param name="etag">An etag value that represents the state of the entity the last time it was retrieved from the data service. This value is treated as an opaque string; no validation is performed on it by the client library.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entitySetName" /> is null.-or-When <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entitySetName" /> is an empty string.-or-When the supplied object does not have a key property.</exception>
      <exception cref="T:System.InvalidOperationException">When the supplied object is already being tracked by the context</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.BaseUri">
      <summary>Gets the absolute URI identifying the root of the target data service. </summary>
      <returns>An absolute URI that identifies the root of a T data service.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0},System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
      <typeparam name="T">The type returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends the request so that this call does not block processing while waiting for the results from the service.</summary>
      <returns>An object that is used to track the status of the asynchronous operation. </returns>
      <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI; it can contain $ query parameters.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
      <typeparam name="TElement">The type returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])">
      <summary>Asynchronously submits a group of queries as a batch to the data service.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation. </returns>
      <param name="callback">The delegate that is called when a response to the batch request is received.</param>
      <param name="state">User-defined state object that is used to pass context data to the callback method.</param>
      <param name="queries">The array of query requests to include in the batch request.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)">
      <summary>Asynchronously gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation. </returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <param name="args">Instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)">
      <summary>Asynchronously loads the value of the specified property from the data service.</summary>
      <returns>An IAsyncResult that represents the status of the asynchronous operation.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property on the specified entity to load.</param>
      <param name="callback">The delegate called when a response to the request is received.</param>
      <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation,System.AsyncCallback,System.Object)">
      <summary>Asynchronously loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the operation.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entity data to return from the data service.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.Uri,System.AsyncCallback,System.Object)">
      <summary>Asynchronously loads a page of related entities from the data service by using the supplied next link URI.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation. </returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="nextLinkUri">The URI used to load the next results page.</param>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)">
      <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      <returns>An IAsyncResult that represents the status of the asynchronous operation.</returns>
      <param name="callback">The delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.Data.Services.Client.SaveChangesOptions,System.AsyncCallback,System.Object)">
      <summary>Asynchronously submits the pending changes to the data service collected by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> since the last time changes were saved.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
      <param name="options">The options for how the client can save the pending set of changes.</param>
      <param name="callback">The delegate to call when the operation is completed.</param>
      <param name="state">The user-defined state object that is used to pass context data to the callback method.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.CancelRequest(System.IAsyncResult)">
      <summary>Attempts to cancel the operation that is associated with the supplied <see cref="T:System.IAsyncResult" /> object.</summary>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> object from the operation being canceled.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.CreateQuery``1(System.String)">
      <summary>Creates a data service query for data of a specified generic type.</summary>
      <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance that represents a data service query.</returns>
      <param name="entitySetName">A string that resolves to a URI.</param>
      <typeparam name="T">The type returned by the query</typeparam>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Credentials">
      <summary>Gets or sets the authentication information that is used by each query created by using the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
      <returns>The base authentication interface for retrieving credentials for Web client authentication.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.DataNamespace">
      <summary>Gets or sets the XML namespace for data items, not metadata items, of an Atom payload.</summary>
      <returns>A string representing the XML namespace for data items of a payload in the ATOM format.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DeleteLink(System.Object,System.String,System.Object)">
      <summary>Changes the state of the link to deleted in the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="source">The source object in the link to be marked for deletion.</param>
      <param name="sourceProperty">The name of the navigation property on the source object that is used to access the target object.</param>
      <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" />, or <paramref name="target" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">When <paramref name="source" /> or <paramref name="target" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-When <paramref name="sourceProperty" /> is not a collection.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DeleteObject(System.Object)">
      <summary>Changes the state of the specified object to be deleted in the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <param name="entity">The tracked entity to be changed to the deleted state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">When the object is not being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.Detach(System.Object)">
      <summary>Removes the entity from the list of entities that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking.</summary>
      <returns>Returns true if the specified entity was detached; otherwise false.</returns>
      <param name="entity">The tracked entity to be detached from the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.DetachLink(System.Object,System.String,System.Object)">
      <summary>Removes the specified link from the list of links being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <returns>Returns true if the specified entity was detached; otherwise false.</returns>
      <param name="source">The source object participating in the link to be marked for deletion.</param>
      <param name="sourceProperty">The name of the property on the source object that represents the source in the link between the source and the target.</param>
      <param name="target">The target object involved in the link that is bound to the source object. The target object must be of the type identified by the source property or a subtype.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" /> or <paramref name="sourceProperty" /> are null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="sourceProperty" /> is an empty string.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecute``1(System.Uri,System.AsyncCallback,System.Object)" />.</summary>
      <returns>The results returned by the query operation.</returns>
      <param name="asyncResult">
        <see cref="T:System.IAsyncResult" /> object.</param>
      <typeparam name="TElement">The type returned by the query.</typeparam>
      <exception cref="T:System.ArgumentNullException">When<paramref name=" asyncResult" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When<paramref name=" asyncResult" /> did not originate from this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance. -or- When the <see cref="M:System.Data.Services.Client.DataServiceContext.EndExecute``1(System.IAsyncResult)" /> method was previously called.</exception>
      <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndExecuteBatch(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginExecuteBatch(System.AsyncCallback,System.Object,System.Data.Services.Client.DataServiceRequest[])" />.</summary>
      <returns>The DataServiceResult object that indicates the result of the batch operation.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndGetReadStream(System.IAsyncResult)">
      <summary>Called to complete the asynchronous operation of retrieving a binary property as a stream.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> which contains the response stream along with its metadata.</returns>
      <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginGetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs,System.AsyncCallback,System.Object)" /> operation that contains the binary data stream.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndLoadProperty(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginLoadProperty(System.Object,System.String,System.AsyncCallback,System.Object)" /> operation.</summary>
      <returns>The response to the load operation.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.EndSaveChanges(System.IAsyncResult)">
      <summary>Called to complete the <see cref="M:System.Data.Services.Client.DataServiceContext.BeginSaveChanges(System.AsyncCallback,System.Object)" /> operation.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object that indicates the result of the batch operation.</returns>
      <param name="asyncResult">An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Entities">
      <summary>Gets a list of all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</summary>
      <returns>A list of <see cref="T:System.Data.Services.Client.EntityDescriptor" /> objects that represent all the resources currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />. </returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Data.Services.Client.DataServiceQueryContinuation{``0})">
      <summary>Sends a request to the data service to retrieve the next page of data in a paged query result.</summary>
      <returns>The response that contains the next page of data in the query result.</returns>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of data to return from the data service.</param>
      <typeparam name="T">The type returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.Execute``1(System.Uri)">
      <summary>Sends a request to the data service to execute a specific URI.</summary>
      <returns>The results of the query operation.</returns>
      <param name="requestUri">The URI to which the query request will be sent. The URI may be any valid data service URI. Can contain $ query parameters.</param>
      <typeparam name="TElement">The type that the query returns.</typeparam>
      <exception cref="T:System.Net.WebException">When a response is not received from a request to the <paramref name="requestUri" />.</exception>
      <exception cref="T:System.ArgumentNullException">When <paramref name="requestUri" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="requestUri" /> is not a valid URI for the data service.</exception>
      <exception cref="T:System.InvalidOperationException">When an error is raised either during execution of the request or when it converts the contents of the response message into objects.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.ExecuteBatch(System.Data.Services.Client.DataServiceRequest[])">
      <summary>Submits a group of queries as a batch to the data service.</summary>
      <returns>The response to the batch operation.</returns>
      <param name="queries">Array of <see cref="T:System.Data.Services.Client.DataServiceRequest[]" /> objects that make up the queries.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetEntityDescriptor(System.Object)">
      <summary>Gets the <see cref="T:System.Data.Services.Client.EntityDescriptor" /> for the supplied entity object.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.EntityDescriptor" /> instance for the <paramref name="entity" />, or null if an <see cref="T:System.Data.Services.Client.EntityDescriptor" /> does not exist for the object.</returns>
      <param name="entity">The object for which to return the entity descriptor.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetLinkDescriptor(System.Object,System.String,System.Object)">
      <summary>Gets the <see cref="T:System.Data.Services.Client.LinkDescriptor" /> for a specific link that defines the relationship between two entities.</summary>
      <returns>The <see cref="T:System.Data.Services.Client.LinkDescriptor" /> instance for the specified relationship, or null if a <see cref="T:System.Data.Services.Client.LinkDescriptor" /> does not exist for the relationship.</returns>
      <param name="source">Source object in the link</param>
      <param name="sourceProperty">The name of the navigation property on the <paramref name="source" /> object that returns the related object.</param>
      <param name="target">The related entity.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetMetadataUri">
      <summary>Gets a URI of the location of .edmx metadata.</summary>
      <returns>A URI that identifies the location of the metadata description, in .edmx format, for the data service identified by the base URI that is passed to the constructor.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object)">
      <summary>Gets binary property data for the specified entity as a data stream.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">The<paramref name=" entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.Data.Services.Client.DataServiceRequestArgs)">
      <summary>Gets binary property data for the specified entity as a data stream along with the specified message headers.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <param name="args">Instance of <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entity" /> is null.-or- <paramref name="args" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetReadStream(System.Object,System.String)">
      <summary>Gets binary property data for the specified entity as a data stream, with the specified Accept message header.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> that represents the response.</returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <param name="acceptContentType">The content type of the data requested from the data service, specified in the Accept header.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="entity" /> is null.-or- <paramref name="acceptContentType" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.-or-The <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.-or-The <paramref name="entity" /> is not a Media Link Entry and does not have a binary property.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.GetReadStreamUri(System.Object)">
      <summary>Gets the URI that is used to return binary property data as a data stream.</summary>
      <returns>The read URI of the binary data stream.</returns>
      <param name="entity">The entity that has the binary property to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">If the entity specified is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" />.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.IgnoreMissingProperties">
      <summary>Gets or sets whether the properties read from the type must be mapped to properties on the client-side type.</summary>
      <returns>A Boolean value that indicates whether the properties read from the type must be mapped to properties on the client-side type.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.IgnoreResourceNotFoundException">
      <summary>Gets or sets whether an exception is raised when a 404 error (resource not found) is returned by the data service. </summary>
      <returns>When set to true, the client library returns an empty set instead of raising a <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> when the data service returns an HTTP 404: Resource Not Found error.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Links">
      <summary>Gets the collection of all associations or links currently being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</summary>
      <returns>A collection of <see cref="T:System.Data.Services.Client.LinkDescriptor" /> objects that represent all associations or links current being tracked by the current being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> object.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String)">
      <summary>Loads deferred content for a specified property from the data service.</summary>
      <returns>The response to the load operation.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation)">
      <summary>Loads the next page of related entities from the data service by using the supplied query continuation object.</summary>
      <returns>The response that contains the next page of related entity data.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.LoadProperty``1(System.Object,System.String,System.Data.Services.Client.DataServiceQueryContinuation{``0})">
      <summary>Loads the next page of related entities from the data service by using the supplied generic query continuation object.</summary>
      <returns>The response that contains the next page of related entity data.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="continuation">A <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that represents the next page of related entities to load from the data service.</param>
      <typeparam name="T">Element type of collection to load.</typeparam>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.LoadProperty(System.Object,System.String,System.Uri)">
      <summary>Loads a page of related entities by using the supplied next link URI.</summary>
      <returns>An instance of <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> that contains the results of the request.</returns>
      <param name="entity">The entity that contains the property to load.</param>
      <param name="propertyName">The name of the property of the specified entity to load.</param>
      <param name="nextLinkUri">The URI that is used to load the next results page.</param>
      <exception cref="T:System.InvalidOperationException">When <paramref name="entity" /> is in a <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Added" /> state.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.MergeOption">
      <summary>Gets or sets the synchronization option for receiving entities from a data service.</summary>
      <returns>One of the members of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.ReadingEntity">
      <summary>Occurs after entity data has been completely read into the entity object.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ResolveName">
      <summary>Gets or sets a function to override the default type resolution strategy used by the client library when you send entities to a data service.</summary>
      <returns>Returns a string that contains the name of the <see cref="T:System.Data.Services.Client.DataServiceContext" />.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.ResolveType">
      <summary>Gets or sets a function that is used to override the default type resolution option that is used by the client library when receiving entities from a data service.</summary>
      <returns>A function delegate that identifies an override function that is used to override the default type resolution option that is used by the client library.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SaveChanges">
      <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges.Remarks" />.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SaveChanges(System.Data.Services.Client.SaveChangesOptions)">
      <summary>Saves the changes that the <see cref="T:System.Data.Services.Client.DataServiceContext" /> is tracking to storage.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> that contains status, headers, and errors that result from the call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</returns>
      <param name="options">A member of the <see cref="T:System.Data.Services.Client.MergeOption" /> enumeration that specifies the materialization option.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.SaveChangesDefaultOptions">
      <summary>Gets or sets the <see cref="T:System.Data.Services.Client.SaveChangesOptions" /> values that are used by the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method.</summary>
      <returns>The current options for the save changes operation.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.SendingRequest">
      <summary>Occurs when a new <see cref="T:System.Net.HttpWebRequest" /> has been created.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetLink(System.Object,System.String,System.Object)">
      <summary>Notifies the <see cref="T:System.Data.Services.Client.DataServiceContext" /> that a new link exists between the objects specified and that the link is represented by the property specified by the <paramref name="sourceProperty" /> parameter.</summary>
      <param name="source">The source object for the new link.</param>
      <param name="sourceProperty">The property on the source object that identifies the target object of the new link.</param>
      <param name="target">The child object involved in the new link that is to be initialized by calling this method. The target object must be a subtype of the type identified by the <paramref name="sourceProperty" /> parameter. If <paramref name="target" /> is set to null, the call represents a delete link operation.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="source" />, <paramref name="sourceProperty" /> or <paramref name="target" /> are null.</exception>
      <exception cref="T:System.InvalidOperationException">When the specified link already exists.-or-When the objects supplied as <paramref name="source" /> or <paramref name="target" /> are in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> or <see cref="F:System.Data.Services.Client.EntityStates.Deleted" /> state.-or-When <paramref name="sourceProperty" /> is not a navigation property that defines a reference to a single related object.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.Data.Services.Client.DataServiceRequestArgs)">
      <summary>Sets a new data stream as the binary property of an entity, with the specified settings in the request message.</summary>
      <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data. </param>
      <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed. </param>
      <param name="args">An instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class that contains settings for the HTTP request message.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance. -or-The <paramref name="entity" /> has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied. </exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.SetSaveStream(System.Object,System.IO.Stream,System.Boolean,System.String,System.String)">
      <summary>Sets a new data stream as the binary property of an entity. The specified Content-Type and Slug headers are included in the request message.</summary>
      <param name="entity">The entity that has a binary property to which to assign the data stream.</param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the binary data. </param>
      <param name="closeStream">A <see cref="T:System.Boolean" /> value that determines whether the data stream is closed when the <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> method is completed. </param>
      <param name="contentType">The Content-Type header value for the request message.</param>
      <param name="slug">The Slug header value for the request message.</param>
      <exception cref="T:System.ArgumentNullException">Any of the parameters supplied to the method are null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="entity" /> is not being tracked by this <see cref="T:System.Data.Services.Client.DataServiceContext" /> instance. -or-The entity has the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" /> applied. </exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.Timeout">
      <summary>Gets or sets the time-out option that is used for the underlying HTTP request to the data service.</summary>
      <returns>An integer that indicates the time interval before time-out of a service request.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.TryGetEntity``1(System.Uri,``0@)">
      <summary>Test retrieval of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> by reference to the URI of the entity.</summary>
      <returns>If an entity is found at <paramref name="resourceUri" />, the entity is returned in the out parameter <paramref name="entity" /> and true is returned. If no entity is found, false is returned.</returns>
      <param name="identity">The URI of the tracked entity to be retrieved.</param>
      <param name="entity">The entity to be retrieved.</param>
      <typeparam name="TEntity">The type of the entity.</typeparam>
      <exception cref="T:System.ArgumentNullException">When <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.TryGetUri(System.Object,System.Uri@)">
      <summary>Retrieves the canonical URI associated with the specified entity, if available.</summary>
      <returns>Returns true if the canonical URI is returned in the out parameter. If the specified entity is not tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" /> or is in the added state, no URI is available and false is returned.</returns>
      <param name="entity">The entity identified by the <paramref name="identity" />.</param>
      <param name="identity">The URI of the entity.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.TypeScheme">
      <summary>Gets or sets the URI used to indicate what type scheme is used by the service.</summary>
      <returns>A <see cref="T:System.Uri" /> object that contains the type scheme.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceContext.UpdateObject(System.Object)">
      <summary>Changes the state of the specified object in the <see cref="T:System.Data.Services.Client.DataServiceContext" /> to <see cref="F:System.Data.Services.Client.EntityStates.Modified" />.</summary>
      <param name="entity">The tracked entity to be assigned to the <see cref="F:System.Data.Services.Client.EntityStates.Modified" /> state.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is in the <see cref="F:System.Data.Services.Client.EntityStates.Detached" /> state.</exception>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceContext.UsePostTunneling">
      <summary>Gets or sets a Boolean value that indicates whether to use post tunneling.</summary>
      <returns>A Boolean value that indicates whether to use post tunneling.</returns>
    </member>
    <member name="E:System.Data.Services.Client.DataServiceContext.WritingEntity">
      <summary>Occurs after an entity has been fully serialized into XML in a request message.</summary>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQuery">
      <summary>An abstract class that represents a single query request to WCF Data Services. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.BeginExecute(System.AsyncCallback,System.Object)">
      <summary>Asynchronously sends a request to execute the data service query.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> object that is used to track the status of the asynchronous operation.</returns>
      <param name="callback">Delegate to invoke when results are available for client consumption.</param>
      <param name="state">User-defined state object passed to the callback.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.EndExecute(System.IAsyncResult)">
      <summary>Called to complete the asynchronous operation of executing a data service query.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the results of the query operation.</returns>
      <param name="asyncResult">The result from the <see cref="M:System.Data.Services.Client.DataServiceQuery.BeginExecute(System.AsyncCallback,System.Object)" /> operation that contains the query results.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.Execute">
      <summary>Executes the query against the data service.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains the results of the query operation.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery.Expression">
      <summary>Represents an expression that contains the query to the data service.</summary>
      <returns>An <see cref="T:System.Linq.Expressions.Expression" /> object that represents the query.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery.Provider">
      <summary>Represents the query provider instance.</summary>
      <returns>An <see cref="T:System.Linq.IQueryProvider" /> representing the data source provider.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets the <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection returned by the query.</summary>
      <returns>An enumerator over the query results.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQuery`1">
      <summary>Represents a single query request to a data service.</summary>
      <typeparam name="TElement">Type of results returned by the query.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.AddQueryOption(System.String,System.Object)">
      <summary>Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> with the query option set in the URI generated by the returned query.</summary>
      <returns>A new query that includes the requested query option appended to the URI of the supplied query</returns>
      <param name="name">The string value that contains the name of the query string option to add.</param>
      <param name="value">The object that contains the value of the query string option.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.BeginExecute(System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous network operation that executes the query represented by this object instance.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that represents the status of the asynchronous operation.</returns>
      <param name="callback">The delegate to invoke when the operation completes.</param>
      <param name="state">User defined object used to transfer state between the start of the operation and the callback defined by <paramref name="callback" />.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.ElementType">
      <summary>Returns the type of the object used in the template to create the <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance.</summary>
      <returns>Returns <see cref="T:System.Type" /> representing the type used in the template when the query is created.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.EndExecute(System.IAsyncResult)">
      <summary>Ends an asynchronous query request to a data service.</summary>
      <returns>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" />  that contains the results of the query operation.</returns>
      <param name="asyncResult">The pending asynchronous query request.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.Execute">
      <summary>Executes the query and returns the results as a collection that implements IEnumerable.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> in which <paramref name="T" /> represents the type of the query results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.Expand(System.String)">
      <summary>Creates a new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> with the expand option set in the URI generated by the returned query.</summary>
      <returns>A new query that includes the requested $expand query option appended to the URI of the supplied query.</returns>
      <param name="path">A string value that contains the requesting URI.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.Expression">
      <summary>Represents an expression containing the query to the data service.</summary>
      <returns>A <see cref="T:System.Linq.Expressions.Expression" /> object representing the query.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.GetEnumerator">
      <summary>Executes the query and returns the results as a collection.</summary>
      <returns>A typed enumerator over the results in which <paramref name="TEntity" /> represents the type of the query results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.IncludeTotalCount">
      <summary>Requests that the count of all entities in the entity set be returned inline with the query results.</summary>
      <returns>A new <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> object that has the inline count option set.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.Provider">
      <summary>Represents the query provider instance.</summary>
      <returns>A <see cref="T:System.Linq.IQueryProvider" /> representing the data source provider.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQuery`1.RequestUri">
      <summary>Get the URI for the query.</summary>
      <returns>The URI of the request.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Executes the query and returns the results as a collection.</summary>
      <returns>An enumerator over the query results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQuery`1.ToString">
      <summary>Represents the URI of the query to the data service.</summary>
      <returns>A URI as string that represents the query to the data service for this <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> instance.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryContinuation">
      <summary>Encapsulates a URI that returns the next page of a paged WCF Data Services query result.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQueryContinuation.NextLinkUri">
      <summary>Gets the URI that is used to return the next page of data from a paged query result.</summary>
      <returns>A URI that returns the next page of data.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryContinuation.ToString">
      <summary>Returns the next link URI as a string.</summary>
      <returns>A string representation of the next link URI.  </returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryContinuation`1">
      <summary>Encapsulates a URI that returns the next page of a paged WCF Data Services query result. </summary>
      <typeparam name="T">The type of continuation token.</typeparam>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceQueryException">
      <summary>Exception that indicates an error occurred loading the property value from the data service. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class with a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class with a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.The string value that the contains error message.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. The string value that contains the error message.</param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. The inner exception object.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceQueryException.#ctor(System.String,System.Exception,System.Data.Services.Client.QueryOperationResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceQueryException" /> class. </summary>
      <param name="message">The string value that contains the error message.</param>
      <param name="innerException">The inner exception object.</param>
      <param name="response">The <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> object.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceQueryException.Response">
      <summary>Gets the <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> that indicates the exception results.</summary>
      <returns>A <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> object that indicates the exception results.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequest">
      <summary>Represents request objects submitted as a batch to WCF Data Services.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest.ElementType">
      <summary>Gets the type of object submitted as a batch to the data service.</summary>
      <returns>Type object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest.RequestUri">
      <summary>Gets the URI of the request object submitted to a data service.</summary>
      <returns>URI of the request object.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequest.ToString">
      <summary>Represents the URI of the query to the data service. </summary>
      <returns>The requested URI as a <see cref="T:System.String" /> value.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequest`1">
      <summary>Represents request objects submitted as a batch to the data service.</summary>
      <typeparam name="TElement"></typeparam>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequest`1.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequest`1" /> class. </summary>
      <param name="requestUri">The URI object that contains the request string.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest`1.ElementType">
      <summary>Gets the type of the object used to create the <see cref="T:System.Data.Services.Client.DataServiceRequest`1" /> instance.</summary>
      <returns>A <see cref="System.Type" /> value that indicates the type of data returned.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequest`1.RequestUri">
      <summary>Gets the URI object that contains the request string. </summary>
      <returns>A <see cref="System.Uri" /> object that contains the request string.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequestArgs">
      <summary>Represents additional metadata that is included in a request message to WCF Data Services.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestArgs.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestArgs" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.AcceptContentType">
      <summary>Gets or sets the Accept header of the request message.</summary>
      <returns>The value of the Accept header.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.ContentType">
      <summary>Gets or sets the Content-Type header of the request message.</summary>
      <returns>The value of the Content-Type header.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.Headers">
      <summary>Gets the headers in the request message.</summary>
      <returns>The headers in the request message.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestArgs.Slug">
      <summary>Gets or sets the value of the Slug header of the request message.</summary>
      <returns>A value that is the Slug header of the request. </returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceRequestException">
      <summary>Represents the error thrown if the data service returns a response code less than 200 or greater than 299, or the top-level element in the response is &lt;error&gt;. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class with a system-supplied message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class with a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.The error message text.</param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceRequestException.#ctor(System.String,System.Exception,System.Data.Services.Client.DataServiceResponse)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Client.DataServiceRequestException" /> class. </summary>
      <param name="message">Error message text.</param>
      <param name="innerException">Exception object that contains the inner exception.</param>
      <param name="response">
        <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object.</param>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceRequestException.Response">
      <summary>Gets the response as a <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object. </summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceResponse" /> object.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceResponse">
      <summary>Represents the response to operations sent to the data service as a result of calling <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />. </summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.BatchHeaders">
      <summary>The headers from an HTTP response associated with a batch request.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object containing the name-value pairs of an HTTP response.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.BatchStatusCode">
      <summary>The status code from an HTTP response associated with a batch request.</summary>
      <returns>An integer based on status codes defined in Hypertext Transfer Protocol.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceResponse.GetEnumerator">
      <summary>Gets an enumerator that enables retrieval of responses to operations being tracked by <see cref="T:System.Data.Services.Client.OperationResponse" /> objects within the <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>An enumerator over the response received from the service.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceResponse.IsBatchResponse">
      <summary>Gets a Boolean value that indicates whether the response contains multiple results.</summary>
      <returns>A Boolean value that indicates whether the response contains multiple results.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceResponse.System#Collections#IEnumerable#GetEnumerator">
      <summary>Gets an enumerator that enables retrieval of responses to operations being tracked by <see cref="T:System.Data.Services.Client.OperationResponse" /> objects within the <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>An enumerator over the response received from the service.</returns>
    </member>
    <member name="T:System.Data.Services.Client.DataServiceStreamResponse">
      <summary>Represents a response from WCF Data Services that contains binary data as a stream.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.ContentDisposition">
      <summary>Gets the Content-Disposition header field for the response stream.</summary>
      <returns>The contents of the Content-Disposition header field.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.ContentType">
      <summary>Gets the content type of the response stream.</summary>
      <returns>The content type of the response stream.</returns>
    </member>
    <member name="M:System.Data.Services.Client.DataServiceStreamResponse.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.Headers">
      <summary>Gets the collection of headers from the response.</summary>
      <returns>The headers collection from the response message as a <see cref="T:System.Collections.Generic.Dictionary`2" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.DataServiceStreamResponse.Stream">
      <summary>Gets the binary property data from the data service as a binary stream. </summary>
      <returns>The stream that contains the binary property data.</returns>
      <exception cref="T:System.ObjectExposedException">When the <see cref="T:System.Data.Services.Client.DataServiceStreamResponse" /> is already disposed.</exception>
    </member>
    <member name="T:System.Data.Services.Client.Descriptor">
      <summary>Abstract class from which <see cref="T:System.Data.Services.Client.EntityDescriptor" /> is derived.</summary>
    </member>
    <member name="P:System.Data.Services.Client.Descriptor.State">
      <summary>When overridden in a derived class, gets the state of the object at the time this instance was constructed.</summary>
      <returns>An <see cref="T:System.Data.Services.Client.EntityStates" /> of the object returned at the time this instance was constructed.  </returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityChangedParams">
      <summary>Encapsulates the arguments of a <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> delegate</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.Context">
      <summary>The context that is associated with the entity object that has changed.</summary>
      <returns>The context that is tracking the changed object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.Entity">
      <summary>The entity object that has changed.</summary>
      <returns>The changed object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.PropertyName">
      <summary>The name of the property on the entity object that references the target object.</summary>
      <returns>The name of the changed property.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.PropertyValue">
      <summary>The object that is currently referenced by the changed property on the entity object.</summary>
      <returns>The current value that references a target entity. </returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.SourceEntitySet">
      <summary>The entity set of the source object.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityChangedParams.TargetEntitySet">
      <summary>The entity set to which the target entity object belongs</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityCollectionChangedParams">
      <summary>Encapsulates the arguments of a <see cref="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" /> delegate.</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Action">
      <summary>A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedAction" /> value that indicates how the collection was changed. </summary>
      <returns>A value that indicates how the collection was changed.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Collection">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> that has changed.</summary>
      <returns>A reference to the collection that has changed.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.Context">
      <summary>The <see cref="T:System.Data.Services.Client.DataServiceContext" /> associated with the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> that has changed.</summary>
      <returns>The context associated with the collection that has changed</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.PropertyName">
      <summary>The navigation property on the source object that references the collection that has changed.</summary>
      <returns>The navigation property name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.SourceEntity">
      <summary>The source object that references the target object in the collection by using a navigation property. </summary>
      <returns>The source object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.SourceEntitySet">
      <summary>The entity set of the source object.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.TargetEntity">
      <summary>The entity object in the collection that has changed.</summary>
      <returns>The changed entity object in the collection.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityCollectionChangedParams.TargetEntitySet">
      <summary>The entity set name of the object in the collection.</summary>
      <returns>An entity set name.</returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityDescriptor">
      <summary>Description of modifications done to entities by operations returned in a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.EditLink">
      <summary>Gets or sets the URI that modifies the entity.</summary>
      <returns>The edit link URI for the entity resource.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.EditStreamUri">
      <summary>Gets or sets the URI that modifies the binary property data of the entity.</summary>
      <returns>The <see cref="P:System.Data.Services.Client.EntityDescriptor.EditStreamUri" /> property contains the edit-media link URI for the Media Resource that is associated with the entity, which is a Media Link Entry.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.Entity">
      <summary>Gets the entity that contains the update data.</summary>
      <returns>An object that contains update data.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ETag">
      <summary>Gets an eTag value that indicates the state of data targeted for update since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
      <returns>A string value that indicates the state of data.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.Identity">
      <summary>Gets or sets the URI that is the identity value of the entity.</summary>
      <returns>The <see cref="P:System.Data.Services.Client.EntityDescriptor.Identity" /> property corresponds to the identity element of the entry that represents the entity in the Atom response.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ParentForInsert">
      <summary>Gets the parent entity that is related to the entity.</summary>
      <returns>An object that is the parent entity in the relationship link.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ParentPropertyForInsert">
      <summary>Gets the name of the property of the entity that is a navigation property and links to the parent entity.</summary>
      <returns>The name of the parent property.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ReadStreamUri">
      <summary>Gets or sets the URI that accesses the binary property data of the entity.</summary>
      <returns>A URI that accesses the binary property as a stream.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.SelfLink">
      <summary>Gets or sets the URI that is used to return the entity resource.</summary>
      <returns>A URI that returns the entity.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.ServerTypeName">
      <summary>Gets or sets the name of the type in the data source to which the entity is mapped.</summary>
      <returns>A string that is the name of the data type.</returns>
    </member>
    <member name="P:System.Data.Services.Client.EntityDescriptor.StreamETag">
      <summary>Gets an eTag value that indicates the state of the Media Resource targeted for update since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> when the entity is a Media Link Entry.</summary>
      <returns>A string value that indicates the state of data. </returns>
    </member>
    <member name="T:System.Data.Services.Client.EntityStates">
      <summary>Represents the enumeration that identifies the state of an entity being tracked by the <see cref="T:System.Data.Services.Client.DataServiceContext" />.  </summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Detached">
      <summary>The entity was detached since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Unchanged">
      <summary>The entity is unchanged since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Added">
      <summary>The entity was added since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Deleted">
      <summary>The entity was deleted since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
    </member>
    <member name="F:System.Data.Services.Client.EntityStates.Modified">
      <summary>The entity was modified since the last call to <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" />.</summary>
    </member>
    <member name="T:System.Data.Services.Client.LinkDescriptor">
      <summary>Provides a description of modifications done to entities by operations returned in a <see cref="T:System.Data.Services.Client.DataServiceResponse" />. </summary>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.Source">
      <summary>A source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.SourceProperty">
      <summary>The identifier property of the source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />.</summary>
      <returns>The string identifier of an identity property in a source entity. </returns>
    </member>
    <member name="P:System.Data.Services.Client.LinkDescriptor.Target">
      <summary>The source entity in a link returned by a <see cref="T:System.Data.Services.Client.DataServiceResponse" />. </summary>
      <returns>
        <see cref="T:System.Object" />.</returns>
    </member>
    <member name="T:System.Data.Services.Client.MediaEntryAttribute">
      <summary>Signifies that the specified class is to be treated as a media link entry. </summary>
    </member>
    <member name="M:System.Data.Services.Client.MediaEntryAttribute.#ctor(System.String)">
      <summary>Creates a new instance of <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />.</summary>
      <param name="mediaMemberName">A string value that identifies the property that holds media data.</param>
    </member>
    <member name="P:System.Data.Services.Client.MediaEntryAttribute.MediaMemberName">
      <summary>The name of the property on the class that holds the media, usually binary data.</summary>
      <returns>A string value that identifies the property that holds media data.</returns>
    </member>
    <member name="T:System.Data.Services.Client.MergeOption">
      <summary>Determines the synchronization option for sending or receiving entities to or from WCF Data Services. </summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.AppendOnly">
      <summary>Append new entities only. Existing entities or their original values will not be modified. No client-side changes are lost in this merge. This is the default behavior.</summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.OverwriteChanges">
      <summary>All current values on the client are overwritten with current values from the data service regardless of whether they have been changed on the client. </summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.PreserveChanges">
      <summary>Current values that have been changed on the client are not modified, but any unchanged values are updated with current values from the data service. No client-side changes are lost in this merge.</summary>
    </member>
    <member name="F:System.Data.Services.Client.MergeOption.NoTracking">
      <summary>Objects are always loaded from persisted storage. Any property changes made to objects in the object context are overwritten by the data source values.</summary>
    </member>
    <member name="T:System.Data.Services.Client.MimeTypePropertyAttribute">
      <summary>Annotates a property on a class that has been annotated with the <see cref="T:System.Data.Services.Client.MediaEntryAttribute" />. </summary>
    </member>
    <member name="M:System.Data.Services.Client.MimeTypePropertyAttribute.#ctor(System.String,System.String)">
      <summary>Creates a new instance of the MimeTypePropertyAttribute.</summary>
      <param name="dataPropertyName">A string that contains the name of the new property attribute.</param>
      <param name="mimeTypePropertyName">A string that contains the Mime type of the new property attribute.</param>
    </member>
    <member name="P:System.Data.Services.Client.MimeTypePropertyAttribute.DataPropertyName">
      <summary>Gets the name of the MimeTypePropertyAttribute.</summary>
      <returns>A string that contains the name of the property attribute. </returns>
    </member>
    <member name="P:System.Data.Services.Client.MimeTypePropertyAttribute.MimeTypePropertyName">
      <summary>Gets the Mime type of the MimeTypePropertyAttribute</summary>
      <returns>A string that contains the Mime type of the property attribute. </returns>
    </member>
    <member name="T:System.Data.Services.Client.OperationResponse">
      <summary>Abstract class that represents the response of a single query or create, update, or delete operation.  </summary>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.Error">
      <summary>Gets error thrown by the operation.</summary>
      <returns>An <see cref="T:System.Exception" /> object that contains the error.</returns>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.Headers">
      <summary>When overridden in a derived class, contains the HTTP response headers associated with a single operation.</summary>
      <returns>
        <see cref="T:System.Collections.IDictionary" /> object that contains name value pairs of headers and values.</returns>
    </member>
    <member name="P:System.Data.Services.Client.OperationResponse.StatusCode">
      <summary>When overridden in a derived class, gets or sets the HTTP response code associated with a single operation.</summary>
      <returns>Integer value that contains response code.</returns>
    </member>
    <member name="T:System.Data.Services.Client.QueryOperationResponse">
      <summary>Represents the responses to a <see cref="T:System.Data.Services.Client.DataServiceQuery" />. </summary>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation" /> object containing the URI that is used to retrieve the next results page.</summary>
      <returns>An object containing the URI that is used to return the next results page.</returns>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation``1(System.Collections.Generic.IEnumerable{``0})">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI that is used to retrieve the next page of related entities in the specified collection.</summary>
      <returns>A continuation object that points to the next page for the collection.</returns>
      <param name="collection">The collection of related objects being loaded.</param>
      <typeparam name="T">The type of the items in the collection.</typeparam>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetContinuation(System.Collections.IEnumerable)">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation" /> object containing the URI that is used to retrieve the next page of related entities in the specified collection.</summary>
      <returns>A continuation object that points to the next page for the collection.</returns>
      <param name="collection">The collection of related objects being loaded.</param>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse.GetEnumerator">
      <summary>Executes the <see cref="T:System.Data.Services.Client.DataServiceQuery" /> and returns <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items. </summary>
      <returns>The enumerator to a collection of <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse.Query">
      <summary>Gets the <see cref="T:System.Data.Services.Client.DataServiceQuery" /> that generates the <see cref="T:System.Data.Services.Client.QueryOperationResponse" /> items. </summary>
      <returns>A <see cref="T:System.Data.Services.Client.DataServiceQuery" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse.TotalCount">
      <summary>The server result set count value from a query, if the query has requested the value.</summary>
      <returns>The return value can be either a zero or positive value equal to the number of entities in the set on the server.</returns>
      <exception cref="T:System.InvalidOperationException">Thrown when the count tag is not found in the response stream.</exception>
    </member>
    <member name="T:System.Data.Services.Client.QueryOperationResponse`1">
      <summary>Represents the responses to a <see cref="T:System.Data.Services.Client.DataServiceQuery`1" />.  </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse`1.GetContinuation">
      <summary>Gets a <see cref="T:System.Data.Services.Client.DataServiceQueryContinuation`1" /> object that contains the URI that is used to retrieve the next results page.</summary>
      <returns>An object that contains the URI that is used to return the next results page.</returns>
    </member>
    <member name="M:System.Data.Services.Client.QueryOperationResponse`1.GetEnumerator">
      <summary>Executes the <see cref="T:System.Data.Services.Client.DataServiceQuery`1" /> and gets <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> items.</summary>
      <returns>An enumerator to a collection of <see cref="T:System.Data.Services.Client.QueryOperationResponse`1" /> items.</returns>
    </member>
    <member name="P:System.Data.Services.Client.QueryOperationResponse`1.TotalCount">
      <summary>The server result set count value from a query, if the query has requested the value.</summary>
      <returns>The return value can be either zero or a positive value equal to the number of entities in the set on the server.</returns>
    </member>
    <member name="T:System.Data.Services.Client.ReadingWritingEntityEventArgs">
      <summary>Gives access to the entity and an XLinq object that represents an Atom entry. <see cref="T:System.Data.Services.Client.ReadingWritingEntityEventArgs" /> is used with the <see cref="E:System.Data.Services.Client.DataServiceContext.ReadingEntity" /> and <see cref="E:System.Data.Services.Client.DataServiceContext.WritingEntity" /> events.  </summary>
    </member>
    <member name="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data">
      <summary>Gets an XML Atom entry or feed data represented as <see cref="T:System.Xml.Linq.XElement" />.</summary>
      <returns>
        <see cref="T:System.Xml.Linq.XElement" />
      </returns>
    </member>
    <member name="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Entity">
      <summary>Gets the object representation of data returned from the <see cref="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data" /> property. </summary>
      <returns>
        <see cref="T:System.Object" /> representation of the <see cref="P:System.Data.Services.Client.ReadingWritingEntityEventArgs.Data" /> property.</returns>
    </member>
    <member name="T:System.Data.Services.Client.SaveChangesOptions">
      <summary>Indicates change options when <see cref="M:System.Data.Services.Client.DataServiceContext.SaveChanges" /> is called.  </summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.None">
      <summary>Pending changes are saved by using multiple requests to the server, but the operation stops on the first failure (default).</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.Batch">
      <summary>All pending changes are saved in a single batch request.</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.ContinueOnError">
      <summary>Pending changes are saved by using multiple requests to the server, and the operation continues after an error occurs.</summary>
    </member>
    <member name="F:System.Data.Services.Client.SaveChangesOptions.ReplaceOnUpdate">
      <summary>Pending updates are made by replacing all values of the entity in the data source with values from the updated entity. </summary>
    </member>
    <member name="T:System.Data.Services.Client.SendingRequestEventArgs">
      <summary>Used with the <see cref="E:System.Data.Services.Client.DataServiceContext.SendingRequest" /> event to provide access to the <see cref="T:System.Net.HttpWebRequest" /> instance that the client is about to send to the target data service. </summary>
    </member>
    <member name="P:System.Data.Services.Client.SendingRequestEventArgs.Request">
      <summary>Gets or sets the <see cref="T:System.Net.HttpWebRequest" /> instance about to be sent by the client library to the data service.</summary>
      <returns>
        <see cref="T:System.Net.HttpWebRequest" />.</returns>
    </member>
    <member name="P:System.Data.Services.Client.SendingRequestEventArgs.RequestHeaders">
      <summary>Gets the collection protocol headers that are associated with the request to the data service.</summary>
      <returns>A collection of protocol headers that are associated with the request.</returns>
    </member>
    <member name="T:System.Data.Services.Client.TrackingMode">
      <summary>Determines whether changes that are made to a <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are tracked.</summary>
    </member>
    <member name="F:System.Data.Services.Client.TrackingMode.None">
      <summary>Changes made to items in the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are not tracked automatically by the client. </summary>
    </member>
    <member name="F:System.Data.Services.Client.TrackingMode.AutoChangeTracking">
      <summary>Changes to items in the <see cref="T:System.Data.Services.Client.DataServiceCollection`1" /> are automatically tracked by the client.</summary>
    </member>
    <member name="T:System.Data.Services.Common.DataServiceEntityAttribute">
      <summary>Marks a class as an entity type in WCF Data Services.</summary>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceEntityAttribute.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.DataServiceEntityAttribute" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Common.DataServiceKeyAttribute">
      <summary>Denotes the key property or properties of an entity. </summary>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceKeyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Common.DataServiceKeyAttribute" /> class. </summary>
      <param name="keyName">The string that contains name of the key attribute.</param>
    </member>
    <member name="M:System.Data.Services.Common.DataServiceKeyAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.Common.DataServiceKeyAttribute" /> class. </summary>
      <param name="keyNames">An array of string values that contain key attribute names.</param>
    </member>
    <member name="P:System.Data.Services.Common.DataServiceKeyAttribute.KeyNames">
      <summary>Gets the names of key attributes.</summary>
      <returns>String value that contains names of key attributes. </returns>
    </member>
    <member name="T:System.Data.Services.Common.DataServiceProtocolVersion">
      <summary>Represents the versions of the Atom Publishing (AtomPub) protocol that the data service may support. </summary>
    </member>
    <member name="F:System.Data.Services.Common.DataServiceProtocolVersion.V1">
      <summary>Version 1 of the AtomPub protocol.</summary>
    </member>
    <member name="F:System.Data.Services.Common.DataServiceProtocolVersion.V2">
      <summary>Version 2 of the AtomPub protocol.</summary>
    </member>
    <member name="T:System.Data.Services.Common.EntityPropertyMappingAttribute">
      <summary>Attribute that specifies a custom mapping between properties of an entity type and elements of an entry in a feed returned by WCF Data Services. </summary>
    </member>
    <member name="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.Data.Services.Common.SyndicationItemProperty,System.Data.Services.Common.SyndicationTextContentKind,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</summary>
      <param name="sourcePath">The name of the property, as string, of the entity type that is mapped to the specified property of the feed item.</param>
      <param name="targetSyndicationItem">A <see cref="T:System.Data.Services.Common.SyndicationItemProperty" /> value that represents the element in the feed to which to map the property. This value must be set to None if the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> is not null.</param>
      <param name="targetTextContentKind">A <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind" /> value that identifies the format of the content to display in the feed.</param>
      <param name="keepInContent">Boolean value that is true when the property being mapped should appear both in its mapped-to location and in the content section of the feed. </param>
    </member>
    <member name="M:System.Data.Services.Common.EntityPropertyMappingAttribute.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to map a property to a custom feed element.</summary>
      <param name="sourcePath">The name of the property of the entity type, as string, that is mapped to the specified property in the feed.</param>
      <param name="targetPath">The name of the target, as string, in the resulting feed to which the property is mapped.</param>
      <param name="targetNamespacePrefix">This parameter, together with <paramref name="targetNamespaceUri" />, specifies the namespace in which the <paramref name="targetPath " />element exists.</param>
      <param name="targetNamespaceUri">Specifies the namespace URI of the element, as string, specified by the <paramref name="targetName" /> property. </param>
      <param name="keepInContent">Boolean value that is true when the property being mapped should appear both in its mapped-to location and in the content section of the feed. </param>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.KeepInContent">
      <summary>Gets a Boolean value that indicates whether a property value should be repeated both in the content section of the feed and in the mapped location.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true when the property is mapped into both locations in the feed; otherwise, false.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.SourcePath">
      <summary>Gets the name of the property of the syndication item that will be mapped to the specified element of the feed.</summary>
      <returns>String value that contains property name.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespacePrefix">
      <summary>Gets a string value that, together with <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri" />, specifies the namespace in which the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" />element exists.</summary>
      <returns>String value that contains the target namespace prefix.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetNamespaceUri">
      <summary>Gets a string value that specifies the namespace URI of the element specified by the <see cref="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath" /> property.</summary>
      <returns>String that contains the namespace URI.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetPath">
      <summary>Gets the name of the custom target in the feed to which the property is mapped.</summary>
      <returns>String value with target XML element or attribute.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetSyndicationItem">
      <summary>Gets a property on the <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> class.</summary>
      <returns>A <see cref="T:System.ServiceModel.Syndication.SyndicationItem" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Common.EntityPropertyMappingAttribute.TargetTextContentKind">
      <summary>Gets the type of content of the property mapped by <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" />.</summary>
      <returns>A string that identifies the type of content in the feed element.</returns>
    </member>
    <member name="T:System.Data.Services.Common.EntitySetAttribute">
      <summary>Indicates the entity set to which a client data service class belongs.</summary>
    </member>
    <member name="M:System.Data.Services.Common.EntitySetAttribute.#ctor(System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.EntitySetAttribute" />.</summary>
      <param name="entitySet">The entity set to which the class belongs.</param>
    </member>
    <member name="P:System.Data.Services.Common.EntitySetAttribute.EntitySet">
      <summary>Gets the entity set to which the class belongs.</summary>
      <returns>The entity set as string value. </returns>
    </member>
    <member name="T:System.Data.Services.Common.HasStreamAttribute">
      <summary>Indicates that a class that is an entity type has a default binary property to stream. </summary>
    </member>
    <member name="M:System.Data.Services.Common.HasStreamAttribute.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Common.HasStreamAttribute" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Common.SyndicationItemProperty">
      <summary>Enumeration type used to identify the syndication item element. </summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.CustomProperty">
      <summary>Custom property element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorEmail">
      <summary>Author email element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorName">
      <summary>Author name element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.AuthorUri">
      <summary>Author URI element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorEmail">
      <summary>Contributor email element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorName">
      <summary>Contributor name element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.ContributorUri">
      <summary>Contributor URI element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Updated">
      <summary>Updated element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Published">
      <summary>Published resource element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Rights">
      <summary>Rights protected resource element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Summary">
      <summary>Summary element.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationItemProperty.Title">
      <summary>Title element.</summary>
    </member>
    <member name="T:System.Data.Services.Common.SyndicationTextContentKind">
      <summary>Enumeration used to identify text content of syndication item. </summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Plaintext">
      <summary>Plain text content.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Html">
      <summary>HTML content.</summary>
    </member>
    <member name="F:System.Data.Services.Common.SyndicationTextContentKind.Xhtml">
      <summary>XHTML content.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Deployment.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Deployment</name>
  </assembly>
  <members>
    <member name="T:System.Deployment.Application.ApplicationDeployment">
      <summary>Supports updates of the current deployment programmatically, and handles on-demand downloading of files. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.ActivationUri">
      <summary>Gets the URL used to launch the deployment manifest of the application. </summary>
      <returns>A zero-length string if the TrustUrlParameters property in the deployment manifest is false, or if the user has supplied a UNC to open the deployment or has opened it locally. Otherwise, the return value is the full URL used to launch the application, including any parameters.</returns>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate">
      <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
      <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
      <exception cref="T:System.InvalidOperationException">The current application is either not configured to support updates, or there is another update check operation already in progress.</exception>
      <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. Regenerate the application's manifest before you attempt to deploy this application to users. This exception will appear in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)">
      <summary>Performs the same operation as <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />, but returns extended information about the available update.</summary>
      <returns>An <see cref="T:System.Deployment.Application.UpdateCheckInfo" /> for the available update.</returns>
      <param name="persistUpdateCheckResult">If false, the update will be applied silently and no dialog box will be displayed.</param>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate">
      <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
      <returns>true if a new update is available; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">
                ClickOnce throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate" />  method while an update is already in progress.</exception>
      <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. </exception>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem. </exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)">
      <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> to determine whether a new update is available.</summary>
      <returns>true if a new update is available; otherwise, false.</returns>
      <param name="persistUpdateCheckResult">If false, the update will be applied silently and no dialog box will be displayed.</param>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync">
      <summary>Checks <see cref="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation" /> asynchronously to determine whether a new update is available.</summary>
      <exception cref="T:System.InvalidOperationException">
                ClickOnce throws this exception immediately if you call the <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />  method while an update is already in progress.</exception>
      <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The deployment manifest cannot be downloaded. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">The deployment manifest is corrupted. You will likely need to redeploy the application to fix this problem. This exception appears in the <see cref="P:System.ComponentModel.AsyncCompletedEventArgs.Error" /> property of the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel">
      <summary>Cancels the asynchronous update check.</summary>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted">
      <summary>Occurs when <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> has completed.</summary>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged">
      <summary>Occurs when a progress update is available on a <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" /> call.</summary>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.CurrentDeployment">
      <summary>Returns the current <see cref="T:System.Deployment.Application.ApplicationDeployment" /> for this deployment.</summary>
      <returns>The current deployment.</returns>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">You attempted to call this static property from a non-ClickOnce application. </exception>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.CurrentVersion">
      <summary>Gets the version of the deployment for the current running instance of the application.</summary>
      <returns>The current deployment version.</returns>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.DataDirectory">
      <summary>Gets the path to the ClickOnce data directory.</summary>
      <returns>A string containing the path to the application's data directory on the local disk.</returns>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)">
      <summary>Downloads a set of optional files on demand.</summary>
      <param name="groupName">The named group of files to download. All files marked "optional" in a ClickOnce application require a group name.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)">
      <summary>Downloads, on demand, a set of optional files in the background.</summary>
      <param name="groupName">The named group of files to download. All files marked "optional" in a ClickOnce application require a group name.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
      <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)">
      <summary>Downloads, on demand, a set of optional files in the background, and passes a piece of application state to the event callbacks.</summary>
      <param name="groupName">The named group of files to download. All files marked "optional" in a ClickOnce application require a group name.</param>
      <param name="userState">An arbitrary object containing state information for the asynchronous operation.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="groupName" /> parameter is null or zero-length.</exception>
      <exception cref="T:System.InvalidOperationException">You cannot initiate more than one download of <paramref name="groupName" /> at a time.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)">
      <summary>Cancels an asynchronous file download.</summary>
      <param name="groupName">The named group of files to download. All files marked "optional" in a ClickOnce application require a group name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groupName" /> cannot be null.</exception>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted">
      <summary>Occurs on the main application thread when a file download is complete.</summary>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged">
      <summary>Occurs when status information is available on a file download operation initiated by a call to <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />.</summary>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)">
      <summary>Checks whether the named file group has already been downloaded to the client computer.</summary>
      <returns>true if the file group has already been downloaded for the current version of this application; otherwise, false. If a new version of the application has been installed, and the new version has not added, removed, or altered files in the file group, <see cref="M:System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)" /> returns true.</returns>
      <param name="groupName">The named group of files to download. All files marked "optional" in a ClickOnce application require a group name.</param>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">
        <paramref name="groupName" /> is not a file group defined in the application manifest.</exception>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.IsFirstRun">
      <summary>Gets a value indicating whether this is the first time this application has run on the client computer. </summary>
      <returns>true if this version of the application has never run on the client computer before; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed">
      <summary>Gets a value indicating whether the current application is a ClickOnce application.</summary>
      <returns>true if this is a ClickOnce application; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck">
      <summary>Gets the date and the time ClickOnce last checked for an application update.</summary>
      <returns>The <see cref="T:System.DateTime" /> of the last update check.</returns>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.Update">
      <summary>Starts a synchronous download and installation of the latest version of this application. </summary>
      <returns>true if an application has been updated; otherwise, false.</returns>
      <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant the application the permission level it requested to execute.</exception>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your ClickOnce deployment is corrupted. For tips on how to diagnose and correct the problem, see Troubleshooting ClickOnce Deployments.</exception>
      <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
      <exception cref="T:System.InvalidOperationException">The application is currently being updated.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync">
      <summary>Starts an asynchronous download and installation of the latest version of this application.</summary>
      <exception cref="T:System.Deployment.Application.TrustNotGrantedException">The local computer did not grant this application the permission level it requested to execute.</exception>
      <exception cref="T:System.Deployment.Application.InvalidDeploymentException">Your ClickOnce deployment is corrupted. For tips on how to diagnose and correct the problem, see Troubleshooting ClickOnce Deployments.</exception>
      <exception cref="T:System.Deployment.Application.DeploymentDownloadException">The new deployment could not be downloaded from its location on the network.</exception>
    </member>
    <member name="M:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel">
      <summary>Cancels an asynchronous update initiated by <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.UpdateCompleted">
      <summary>Occurs when ClickOnce has finished upgrading the application as the result of a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" />.</summary>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName">
      <summary>Gets the full name of the application after it has been updated.</summary>
      <returns>A <see cref="T:System.String" /> that contains the full name of the application.</returns>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.UpdatedVersion">
      <summary>Gets the version of the update that was recently downloaded.</summary>
      <returns>The <see cref="T:System.Version" /> describing the version of the update.</returns>
    </member>
    <member name="P:System.Deployment.Application.ApplicationDeployment.UpdateLocation">
      <summary>Gets the Web site or file share from which this application updates itself.</summary>
      <returns>The update path, expressed as an HTTP, HTTPS, or file URL; or as a Windows network file path (UNC).</returns>
    </member>
    <member name="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged">
      <summary>Occurs when ClickOnce has new status information for an update operation initiated by calling the <see cref="M:System.Deployment.Application.ApplicationDeployment.UpdateAsync" /> method.</summary>
    </member>
    <member name="T:System.Deployment.Application.CheckForUpdateCompletedEventArgs">
      <summary>Represents detailed update information obtained through a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync" />.</summary>
    </member>
    <member name="P:System.Deployment.Application.CheckForUpdateCompletedEventArgs.AvailableVersion">
      <summary>Gets the version number of the latest uninstalled version.</summary>
      <returns>The <see cref="T:System.Version" /> expressing the major, minor, build and revision numbers of the latest version.</returns>
    </member>
    <member name="P:System.Deployment.Application.CheckForUpdateCompletedEventArgs.IsUpdateRequired">
      <summary>Gets a value indicating whether the update must be installed. </summary>
      <returns>true if the update is required; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.CheckForUpdateCompletedEventArgs.MinimumRequiredVersion">
      <summary>Gets the minimum version that the user must have installed on the computer. </summary>
      <returns>A <see cref="T:System.Version" /> object expressing the earliest version that all users must install.</returns>
    </member>
    <member name="P:System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateAvailable">
      <summary>Gets whether an uninstalled update is available.</summary>
      <returns>true if new version of the application is available; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.CheckForUpdateCompletedEventArgs.UpdateSizeBytes">
      <summary>Gets the size of the available update.</summary>
      <returns>An <see cref="T:System.Int64" /> describing the size, in bytes, of the available update. If no update is available, returns 0. </returns>
    </member>
    <member name="T:System.Deployment.Application.CheckForUpdateCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted" /> event of an <see cref="T:System.Deployment.Application.ApplicationDeployment" />. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Deployment.Application.CheckForUpdateCompletedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.Deployment.Application.CompatibleFramework">
      <summary>Represents a version of the .NET Framework where an application can install and run.</summary>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFramework.Profile">
      <summary>Specifies the profile of the .NET Framework version where an application can install and run.</summary>
      <returns>A string that represents the profile.</returns>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFramework.SupportedRuntime">
      <summary>Specifies the runtime version number of the .NET Framework where an application can install and run.</summary>
      <returns>A string that represents the runtime version.</returns>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFramework.TargetVersion">
      <summary>Specifies the version of the .NET Framework where an application can install and run.</summary>
      <returns>A string that represents the version.</returns>
    </member>
    <member name="T:System.Deployment.Application.CompatibleFrameworkMissingException">
      <summary>This exception is thrown when a version of the .NET Framework that is compatible with this application cannot be found.</summary>
    </member>
    <member name="M:System.Deployment.Application.CompatibleFrameworkMissingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.CompatibleFrameworkMissingException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Deployment.Application.CompatibleFrameworkMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.CompatibleFrameworkMissingException" /> class with serialized data.</summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.CompatibleFrameworkMissingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.CompatibleFrameworkMissingException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.CompatibleFrameworkMissingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.CompatibleFrameworkMissingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFrameworkMissingException.CompatibleFrameworks">
      <summary>Gets a list of .NET Framework versions where this application can install and run.</summary>
      <returns>A list of .NET Framework versions where this application can install and run.</returns>
    </member>
    <member name="M:System.Deployment.Application.CompatibleFrameworkMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.CompatibleFrameworkMissingException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="T:System.Deployment.Application.CompatibleFrameworks">
      <summary>Provides details about versions of the .NET Framework on which this application can install and run.</summary>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFrameworks.Frameworks">
      <summary>Gets a list of .NET Framework versions on which this application can install and run.</summary>
      <returns>A list of <see cref="T:System.Deployment.Application.CompatibleFramework" /> objects that specify the .NET Framework versions on which this application can install and run.</returns>
    </member>
    <member name="P:System.Deployment.Application.CompatibleFrameworks.SupportUrl">
      <summary>Gets a <see cref="T:System.Uri" /> that provides the user with instructions for installing a version of the .NET Framework on which this application can install and run.</summary>
      <returns>A <see cref="T:System.Uri" /> that provides the user with instructions for installing a version of the .NET Framework on which this application can install and run.</returns>
    </member>
    <member name="T:System.Deployment.Application.DependentPlatformMissingException">
      <summary>The exception that is thrown when the platform dependency is not found during activation of the ClickOnce deployment and the deployment will not run.</summary>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DependentPlatformMissingException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DependentPlatformMissingException" /> class. </summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DependentPlatformMissingException" /> class with a specified message that describes the error. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DependentPlatformMissingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.#ctor(System.String,System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DependentPlatformMissingException" /> class. </summary>
      <param name="message">The exception message.</param>
      <param name="supportUrl">The URL to visit for product support information.</param>
    </member>
    <member name="M:System.Deployment.Application.DependentPlatformMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets the object data.</summary>
      <param name="info">The object that holds the serialized object data.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="P:System.Deployment.Application.DependentPlatformMissingException.SupportUrl">
      <summary>Gets a URI that indicates where support can be found for the problem encountered.</summary>
      <returns>A URI that indicates where support can be found for the problem encountered.</returns>
    </member>
    <member name="T:System.Deployment.Application.DeploymentDownloadException">
      <summary>Indicates that there was an error downloading either the ClickOnce manifests or the deployment's files to the client computer. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentDownloadException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentDownloadException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentDownloadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentDownloadException" /> class. </summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentDownloadException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentDownloadException" /> class with a message that describes the exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentDownloadException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentDownloadException" /> class. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Deployment.Application.DeploymentException">
      <summary>Defines a base class for all deployment-related exceptions.</summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.DeploymentException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <param name="info"></param>
      <param name="context"></param>
    </member>
    <member name="T:System.Deployment.Application.DeploymentProgressChangedEventArgs">
      <summary>Represents progress data reported in an asynchronous operation.</summary>
    </member>
    <member name="P:System.Deployment.Application.DeploymentProgressChangedEventArgs.BytesCompleted">
      <summary>Gets the number of bytes already downloaded by this operation.</summary>
      <returns>An <see cref="T:System.Int64" /> representing the data already transferred, in bytes. </returns>
    </member>
    <member name="P:System.Deployment.Application.DeploymentProgressChangedEventArgs.BytesTotal">
      <summary>Gets the total number of bytes in the download operation.</summary>
      <returns>An <see cref="T:System.Int64" /> representing the total size of the download, in bytes.</returns>
    </member>
    <member name="P:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group">
      <summary>Gets the name of the file group being downloaded.</summary>
      <returns>A <see cref="T:System.String" /> containing the name of the file group, if the event occurred as the result of a call to <see cref="Overload:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync" />; otherwise, a zero-length string. </returns>
    </member>
    <member name="P:System.Deployment.Application.DeploymentProgressChangedEventArgs.State">
      <summary>Gets the action that the process is currently executing.</summary>
      <returns>A <see cref="T:System.Deployment.Application.DeploymentProgressState" /> value, stating what element or elements the operation is currently downloading. </returns>
    </member>
    <member name="T:System.Deployment.Application.DeploymentProgressChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged" /> event, <see cref="E:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged" /> event, or <see cref="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged" /> event of an <see cref="T:System.Deployment.Application.ApplicationDeployment" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Deployment.Application.DeploymentProgressChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Deployment.Application.DeploymentProgressState">
      <summary>Specifies the current stage of a ClickOnce download operation.</summary>
    </member>
    <member name="F:System.Deployment.Application.DeploymentProgressState.DownloadingDeploymentInformation">
      <summary>
            ClickOnce is downloading the deployment manifest.</summary>
    </member>
    <member name="F:System.Deployment.Application.DeploymentProgressState.DownloadingApplicationInformation">
      <summary>
            ClickOnce is downloading the application manifest.</summary>
    </member>
    <member name="F:System.Deployment.Application.DeploymentProgressState.DownloadingApplicationFiles">
      <summary>
            ClickOnce is downloading the DLLs and data files that comprised the application.</summary>
    </member>
    <member name="T:System.Deployment.Application.DeploymentServiceCom">
      <summary>Provides internal services for the ClickOnce deployment API. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.#ctor">
      <summary>Creates a new instance of <see cref="T:System.Deployment.Application.DeploymentServiceCom" />.</summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.ActivateApplicationExtension(System.String,System.String,System.String)">
      <summary>Activates an application extension.</summary>
      <param name="textualSubId">The internal ID of the deployment.</param>
      <param name="deploymentProviderUrl">The URL of the deployment.</param>
      <param name="targetAssociatedFile">The target file.</param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.ActivateDeployment(System.String,System.Boolean)">
      <summary>Starts the deployment on the client computer. </summary>
      <param name="deploymentLocation">The location of the deployment manifest on disk.</param>
      <param name="isShortcut">Whether <paramref name="deploymentLocation" /> is a shortcut, or the actual file.</param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.ActivateDeploymentEx(System.String,System.Int32,System.Int32)">
      <summary>Starts the deployment on the client computer.</summary>
      <param name="deploymentLocation">The location of the deployment manifest.</param>
      <param name="unsignedPolicy">The policy to use for unsigned applications.</param>
      <param name="signedPolicy">The policy to use for signed applications.</param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.CheckForDeploymentUpdate(System.String)">
      <summary>Checks the update location to determine whether an updated version of this deployment exists.</summary>
      <param name="textualSubId">An internal identifier for the deployment.</param>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.CleanOnlineAppCache">
      <summary>Removes all online-only ClickOnce applications that are installed on a computer.</summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.EndServiceRightNow">
      <summary>Stops a deployment update immediately. </summary>
    </member>
    <member name="M:System.Deployment.Application.DeploymentServiceCom.MaintainSubscription(System.String)">
      <summary>Maintains the update subscription. </summary>
      <param name="textualSubId">The internal ID of the deployment.</param>
    </member>
    <member name="T:System.Deployment.Application.DownloadApplicationCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted" /> event. </summary>
    </member>
    <member name="P:System.Deployment.Application.DownloadApplicationCompletedEventArgs.LogFilePath">
      <summary>Gets the path of the ClickOnce log file. </summary>
      <returns>The path of the ClickOnce log file.</returns>
    </member>
    <member name="P:System.Deployment.Application.DownloadApplicationCompletedEventArgs.ShortcutAppId">
      <summary>Gets the contents of an .appref-ms file that can launch this ClickOnce application.</summary>
      <returns>The contents of an .appref-ms file.</returns>
    </member>
    <member name="T:System.Deployment.Application.DownloadFileGroupCompletedEventArgs">
      <summary>Describes a file download that has recently completed. </summary>
    </member>
    <member name="P:System.Deployment.Application.DownloadFileGroupCompletedEventArgs.Group">
      <summary>Gets the name of the file group being downloaded.</summary>
      <returns>A <see cref="T:System.String" /> representing the name of the file group.</returns>
    </member>
    <member name="T:System.Deployment.Application.DownloadFileGroupCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted" /> event of an <see cref="T:System.Deployment.Application.ApplicationDeployment" />. </summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Deployment.Application.DownloadFileGroupCompletedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Deployment.Application.DownloadProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged" /> event. </summary>
    </member>
    <member name="P:System.Deployment.Application.DownloadProgressChangedEventArgs.BytesDownloaded">
      <summary>Gets the number of bytes downloaded to the local computer.</summary>
      <returns>An <see cref="T:System.Int64" /> representing the number of downloaded bytes. </returns>
    </member>
    <member name="P:System.Deployment.Application.DownloadProgressChangedEventArgs.State">
      <summary>Gets the progress state of the download.</summary>
      <returns>A <see cref="T:System.Deployment.Application.DeploymentProgressState" /> value describing which portion of the ClickOnce application is being downloaded.</returns>
    </member>
    <member name="P:System.Deployment.Application.DownloadProgressChangedEventArgs.TotalBytesToDownload">
      <summary>Gets the total number of bytes for the download operation. </summary>
      <returns>An <see cref="T:System.Int64" /> representing the total size of the download, in bytes.</returns>
    </member>
    <member name="T:System.Deployment.Application.GetManifestCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted" /> event of <see cref="T:System.Deployment.Application.InPlaceHostingManager" />.</summary>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.ActivationContext">
      <summary>Gets the context for the current ClickOnce application.</summary>
      <returns>An <see cref="T:System.ActivationContext" /> object representing the context for the current application.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationIdentity">
      <summary>Gets a description of the ClickOnce application. </summary>
      <returns>An <see cref="T:System.ApplicationIdentity" /> object.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.ApplicationManifest">
      <summary>Gets the ClickOnce application manifest for this deployment.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> representing the application manifest.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.DeploymentManifest">
      <summary>Gets the ClickOnce deployment manifest for this deployment.</summary>
      <returns>An <see cref="T:System.Xml.XmlReader" /> representing the deployment manifest.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.IsCached">
      <summary>Gets a value indicating whether this ClickOnce application is cached.</summary>
      <returns>true if the application is cached; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.LogFilePath">
      <summary>Gets the location of the ClickOnce error log.</summary>
      <returns>A <see cref="T:System.String" /> containing the location of the ClickOnce error log.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.ProductName">
      <summary>Gets the name of the ClickOnce application.</summary>
      <returns>A <see cref="T:System.String" /> representing the product name of the ClickOnce application, as stored in the assembly metadata of the application's main executable file.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.SubscriptionIdentity">
      <summary>Gets a string identifying the subscription.</summary>
      <returns>A string with information identifying the subscription.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.SupportUri">
      <summary>Gets the location of a Web page users can visit to obtain product support for the ClickOnce application.</summary>
      <returns>A <see cref="T:System.Uri" /> containing the value found in the supportUrl attribute of the deployment manifest's &lt;description&gt; tag. For more information, see ClickOnce Deployment Manifest.</returns>
    </member>
    <member name="P:System.Deployment.Application.GetManifestCompletedEventArgs.Version">
      <summary>Gets the version of the update for the ClickOnce application.</summary>
      <returns>A <see cref="T:System.Version" /> representing the version number contained within the downloaded manifest.</returns>
    </member>
    <member name="T:System.Deployment.Application.InPlaceHostingManager">
      <summary>Install or update a ClickOnce deployment on a computer.</summary>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri)">
      <summary>Creates a new instance of <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> to download and install the specified browser-hosted application.</summary>
      <param name="deploymentManifest">A Uniform Resource Identifier (<see cref="T:System.Uri" />) to a ClickOnce application's deployment manifest.</param>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> can be used only in Windows XP or in later versions of the Windows operating system.</exception>
      <exception cref="T:System.ArgumentNullException">Cannot pass null for the <paramref name="deploymentManifest" /> argument.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="deploymentManifest" /> uses a URI scheme that is not supported by ClickOnce.</exception>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.#ctor(System.Uri,System.Boolean)">
      <summary>Creates a new instance of <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> to download and install the specified application, which can be either a stand-alone Windows Forms-based application or an application hosted in a Web browser.</summary>
      <param name="deploymentManifest">The Uniform Resource Identifier (URI) to the deployment manifest of the application that will be installed.</param>
      <param name="launchInHostProcess">Whether this application will be run in a host, such as a Web browser. For a stand-alone application, set this value to false.</param>
      <exception cref="T:System.PlatformNotSupportedException">
        <see cref="T:System.Deployment.Application.InPlaceHostingManager" /> can be used only in Windows XP or in later versions of the Windows operating system.</exception>
      <exception cref="T:System.ArgumentNullException">Cannot pass null for the <paramref name="deploymentManifest" /> argument.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="deploymentManifest" /> uses a URI scheme that is not supported by ClickOnce.</exception>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements">
      <summary>Determines whether the ClickOnce application has the appropriate permissions and platform dependencies to run on the local computer.</summary>
      <exception cref="T:System.InvalidOperationException">Raised if this method is called before the <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> method.</exception>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements(System.Boolean)">
      <summary>Determines whether the ClickOnce application has the appropriate permissions and platform dependencies to run on the local computer.</summary>
      <param name="grantApplicationTrust">If true, the application will attempt to elevate its permissions to the required level.</param>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.CancelAsync">
      <summary>Cancels an asynchronous download operation.</summary>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Deployment.Application.InPlaceHostingManager" />. </summary>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationAsync">
      <summary>Downloads an application update in the background.</summary>
      <exception cref="T:System.InvalidOperationException">Raised if this method is called before the <see cref="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync" /> and <see cref="M:System.Deployment.Application.InPlaceHostingManager.AssertApplicationRequirements" /> methods.</exception>
    </member>
    <member name="E:System.Deployment.Application.InPlaceHostingManager.DownloadApplicationCompleted">
      <summary>Occurs when the application has finished downloading to the local computer.</summary>
    </member>
    <member name="E:System.Deployment.Application.InPlaceHostingManager.DownloadProgressChanged">
      <summary>Occurs when there is a change in the status of an application or manifest download.</summary>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.Execute">
      <summary>Launches the ClickOnce application, if and only if it is a Windows Presentation Foundation-based application running in a Web browser.</summary>
      <returns>An <see cref="T:System.Runtime.Remoting.ObjectHandle" /> corresponding to the launched application.</returns>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.GetManifestAsync">
      <summary>Downloads the deployment manifest of the ClickOnce application in the background, and raises an event when the operation has either completed or encountered an error.</summary>
    </member>
    <member name="E:System.Deployment.Application.InPlaceHostingManager.GetManifestCompleted">
      <summary>Occurs when the deployment manifest has been downloaded to the local computer.</summary>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomAddIn(System.String)">
      <summary>Removes a previously installed user-defined component of an application.</summary>
      <param name="subscriptionId">A string that contains a subscription identifier, which indicates the add-in to remove.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="subscriptionId" /> is not a valid subscription identity, or does not include a name, public key token, processor architecture, and version number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subscriptionId" /> is null.</exception>
    </member>
    <member name="M:System.Deployment.Application.InPlaceHostingManager.UninstallCustomUXApplication(System.String)">
      <summary>Removes a ClickOnce application that includes the &lt;customUX&gt; element.</summary>
      <param name="subscriptionId">A string that contains a subscription identifier, which indicates the ClickOnce application to remove.</param>
    </member>
    <member name="T:System.Deployment.Application.InvalidDeploymentException">
      <summary>Indicates that ClickOnce could not read either the deployment or application manifests.</summary>
    </member>
    <member name="M:System.Deployment.Application.InvalidDeploymentException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.InvalidDeploymentException" /> class. </summary>
    </member>
    <member name="M:System.Deployment.Application.InvalidDeploymentException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.InvalidDeploymentException" /> class. </summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.InvalidDeploymentException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.InvalidDeploymentException" /> class with the specified message that describes the exception. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.InvalidDeploymentException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.InvalidDeploymentException" /> class. </summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Deployment.Application.SupportedRuntimeMissingException">
      <summary>This exception is thrown when a runtime version that is compatible with this application cannot be found.</summary>
    </member>
    <member name="M:System.Deployment.Application.SupportedRuntimeMissingException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.SupportedRuntimeMissingException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Deployment.Application.SupportedRuntimeMissingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.SupportedRuntimeMissingException" /> class with serialized data.</summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.SupportedRuntimeMissingException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.SupportedRuntimeMissingException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.SupportedRuntimeMissingException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.SupportedRuntimeMissingException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="M:System.Deployment.Application.SupportedRuntimeMissingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.SupportedRuntimeMissingException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="P:System.Deployment.Application.SupportedRuntimeMissingException.SupportedRuntimeVersion">
      <summary>Gets the version of the runtime where this application can install and run.</summary>
      <returns>A string that contains the runtime version number.</returns>
    </member>
    <member name="T:System.Deployment.Application.TrustNotGrantedException">
      <summary>Indicates that the application does not have the appropriate level of trust to run on the local computer.</summary>
    </member>
    <member name="M:System.Deployment.Application.TrustNotGrantedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.TrustNotGrantedException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Deployment.Application.TrustNotGrantedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.TrustNotGrantedException" /> class with serialized data.</summary>
      <param name="serializationInfo">The object that holds the serialized object data. </param>
      <param name="streamingContext">The contextual information about the source or destination. </param>
    </member>
    <member name="M:System.Deployment.Application.TrustNotGrantedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.TrustNotGrantedException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Deployment.Application.TrustNotGrantedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Deployment.Application.TrustNotGrantedException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="T:System.Deployment.Application.UpdateCheckInfo">
      <summary>Represents detailed update information obtained through a call to <see cref="M:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate" />.</summary>
    </member>
    <member name="P:System.Deployment.Application.UpdateCheckInfo.AvailableVersion">
      <summary>Gets the version number of the latest uninstalled version.</summary>
      <returns>The <see cref="T:System.Version" /> expressing the major and minor build and revision numbers of the latest version.</returns>
    </member>
    <member name="P:System.Deployment.Application.UpdateCheckInfo.IsUpdateRequired">
      <summary>Gets a value indicating whether the update must be installed. </summary>
      <returns>true if the update is required; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.UpdateCheckInfo.MinimumRequiredVersion">
      <summary>Gets the minimum version that the user must have installed on the computer.</summary>
      <returns>A <see cref="T:System.Version" /> expressing the least version that the user must install.</returns>
      <exception cref="T:System.InvalidOperationException">There is no new version available to install.</exception>
    </member>
    <member name="P:System.Deployment.Application.UpdateCheckInfo.UpdateAvailable">
      <summary>Gets whether an uninstalled update is available.</summary>
      <returns>true if new version of the application is available; otherwise, false.</returns>
    </member>
    <member name="P:System.Deployment.Application.UpdateCheckInfo.UpdateSizeBytes">
      <summary>Gets the size of the available update.</summary>
      <returns>An <see cref="T:System.Int64" /> describing the size, in bytes, of the available update. If no update is available, returns 0. </returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.SqlXml.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.SqlXml</name>
  </assembly>
  <members>
    <member name="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator">
      <summary>Iterates over all ancestor nodes according to the <see cref="N:System.Xml.XPath" /> ancestor axis rules, and returns the nodes in document order without duplicates.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />.</summary>
      <param name="context">The node from which you start traversing ancestors.</param>
      <param name="filter">Enables you to filter nodes based on the name.  </param>
      <param name="orSelf">true if you want the <paramref name="context" /> node to be returned as a part of the iteration, instead of being filtered out.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.MoveNext">
      <summary>Positions the iterator on the next ancestor node in document order.</summary>
      <returns>true if the iterator was set to the next ancestor node in document order; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.AncestorIterator">
      <summary>Iterates over all ancestor nodes according to the <see cref="N:System.Xml.XPath" /> ancestor axis rules, and returns the nodes in reverse document order.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AncestorIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.AncestorIterator" />.</summary>
      <param name="context">The node from which you start traversing ancestors.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.  </param>
      <param name="orSelf">true if you want the <paramref name="context" /> node to be returned as a part of the iteration and not filtered out.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.AncestorIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AncestorIterator.MoveNext">
      <summary>Positions the iterator on the next ancestor node.  </summary>
      <returns>true if the next ancestor node exists; otherwise, false. </returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.AttributeContentIterator">
      <summary>Iterates over all attributes and child content nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AttributeContentIterator.Create(System.Xml.XPath.XPathNavigator)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />.</summary>
      <param name="context">The node from which you start traversing attribute and child content nodes.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.AttributeContentIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AttributeContentIterator.MoveNext">
      <summary>Positions the iterator on the next attribute or child content node.  </summary>
      <returns>true if the next attribute or child content node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.AttributeIterator">
      <summary>Iterates over all the attributes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AttributeIterator.Create(System.Xml.XPath.XPathNavigator)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.AttributeIterator" />.</summary>
      <param name="context">The node from which you start traversing the attribute nodes.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.AttributeIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.AttributeIterator.MoveNext">
      <summary>Positions the iterator on the next attribute node.  </summary>
      <returns>true if the next attribute node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.ContentIterator">
      <summary>Iterates over all child content nodes of the current node.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ContentIterator.Create(System.Xml.XPath.XPathNavigator)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.ContentIterator" />.</summary>
      <param name="context">The node from which you start traversing the child content nodes.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.ContentIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ContentIterator.MoveNext">
      <summary>Positions the iterator on the next child content node.  </summary>
      <returns>true if the next child content node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.ContentMergeIterator">
      <summary>Iterates over child content nodes or following sibling nodes. Maintains the nodes in document order. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ContentMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />. Merges multiple sets of content nodes in document order and removes duplicates.</summary>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.ContentMergeIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ContentMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Positions the iterator on the next content or sibling node.  </summary>
      <returns>Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" /> if there are no more content or sibling nodes. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" /> if the next input node must be fetched first. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" /> if the <see cref="P:System.Xml.Xsl.Runtime.ContentMergeIterator.Current" /> property was set to the next node while iterating through the nodes.</returns>
      <param name="input">The input nodes. </param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DecimalAggregator">
      <summary>Computes aggregates over a sequence of Decimal values.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DecimalAggregator.Average(System.Decimal)">
      <summary>Averages Decimal values.  </summary>
      <param name="value">The Decimal value.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DecimalAggregator.AverageResult">
      <summary>Gets an average of the sequence of Decimal values.</summary>
      <returns>The average of the sequence of Decimal values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DecimalAggregator.Create">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.DecimalAggregator" />. </summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DecimalAggregator.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.Xml.Xsl.Runtime.DecimalAggregator" /> contains a result.</summary>
      <returns>true if the <see cref="T:System.Xml.Xsl.Runtime.DecimalAggregator" /> contains a result; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DecimalAggregator.Maximum(System.Decimal)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is greater than the existing result.  </summary>
      <param name="value">The Decimal value.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DecimalAggregator.MaximumResult">
      <summary>Gets the largest value among the sequence of Decimal values.</summary>
      <returns>The largest value among the sequence of Decimal values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DecimalAggregator.Minimum(System.Decimal)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is less than the existing result. </summary>
      <param name="value">The Decimal value.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DecimalAggregator.MinimumResult">
      <summary>Gets the smallest value among the sequence of Decimal values.</summary>
      <returns>The smallest value among the sequence of Decimal values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DecimalAggregator.Sum(System.Decimal)">
      <summary>Adds a Decimal value to the existing result.  </summary>
      <param name="value">The Decimal value.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DecimalAggregator.SumResult">
      <summary>Gets the sum of the sequence of Decimal values.</summary>
      <returns>The sum of the sequence of Decimal values.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DescendantIterator">
      <summary>Iterates over all descendant nodes according to the <see cref="N:System.Xml.XPath" /> descendant axis rules.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DescendantIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.DescendantIterator" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> that identifies the node from which you start traversing descendants.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.</param>
      <param name="orSelf">
        <see cref="T:System.Boolean" /> that indicates whether the current node is returned as part of the iteration or filtered out.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DescendantIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DescendantIterator.MoveNext">
      <summary>Positions the iterator on the next descendant node.</summary>
      <returns>true if the next descendant node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DescendantMergeIterator">
      <summary>Iterate over all descendant content nodes according to XPath descendant axis rules. Eliminates duplicates by not querying over nodes that are contained in the subtree of the previous node.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />. Merges multiple sets of descendant nodes in document order and removes duplicates.</summary>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class that enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.  </param>
      <param name="orSelf">
        <see cref="T:System.Boolean" /> that indicates whether the current node is returned as part of the iteration or filtered out.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DescendantMergeIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.  </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Position this iterator to the next descendant node.  </summary>
      <returns>Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" /> if there are no more descendant nodes. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" /> if the next input node needs to be fetched first. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" /> if while iterating through the nodes the <see cref="P:System.Xml.Xsl.Runtime.DescendantMergeIterator.Current" /> property was set to the next node.</returns>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object that identifies the input node.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DifferenceIterator">
      <summary>Positions the iterator to the next node in the difference between two sets of nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DifferenceIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.DifferenceIterator" />.</summary>
      <param name="runtime">The <see cref="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DifferenceIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator. </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DifferenceIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Positions this iterator to the next node in the union.</summary>
      <returns>The <see cref="T:System.Xml.Xsl.Runtime.SetIteratorResult" />.</returns>
      <param name="nestedNavigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object that identifies the current node.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DodSequenceMerge">
      <summary>Merges several doc-order-distinct sequences into a single doc-order-distinct sequence.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.AddSequence(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <summary>Adds a new sequence to the list of sequences to merge.</summary>
      <param name="sequence">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Initializes this instance of <see cref="T:System.Xml.Xsl.Runtime.DodSequenceMerge" /> .</summary>
      <param name="runtime">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class, which provides methods and properties to support the XSLT processor.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DodSequenceMerge.MergeSequences">
      <summary>Returns the fully-merged sequence.</summary>
      <returns>The fully-merged sequence.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.DoubleAggregator">
      <summary>Computes aggregates over a sequence of double values.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DoubleAggregator.Average(System.Double)">
      <summary>Returns the average of a sequence of double values.</summary>
      <param name="value">A value of type double.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DoubleAggregator.AverageResult">
      <summary>Computes the average value over a sequence of double values.</summary>
      <returns>The average result.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DoubleAggregator.Create">
      <summary>Initializes a sequence of double values.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DoubleAggregator.IsEmpty">
      <summary>Determines whether a sequence of double values is empty.</summary>
      <returns>true if the result is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DoubleAggregator.Maximum(System.Double)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is greater than the existing result. </summary>
      <param name="value">A value of type double.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DoubleAggregator.MaximumResult">
      <summary>Returns the maximum value of a sequence of double values.</summary>
      <returns>The maximum result.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DoubleAggregator.Minimum(System.Double)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is less than the existing result. </summary>
      <param name="value">A value of type double.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DoubleAggregator.MinimumResult">
      <summary>Returns the minimum value of a sequence of double values.</summary>
      <returns>The minimum result.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.DoubleAggregator.Sum(System.Double)">
      <summary>Adds a Double value to the existing result..</summary>
      <param name="value">A value of type double.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.DoubleAggregator.SumResult">
      <summary>Returns the sum of a sequence of double values.</summary>
      <returns>The sum of all results.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.ElementContentIterator">
      <summary>Iterates over all child elements with a matching name.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ElementContentIterator.Create(System.Xml.XPath.XPathNavigator,System.String,System.String)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.ElementContentIterator" />.</summary>
      <param name="context">The node from which you start traversing child elements.</param>
      <param name="localName">The local name.</param>
      <param name="ns">The namespace.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.ElementContentIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ElementContentIterator.MoveNext">
      <summary>Positions the iterator on the next child element with a matching name.</summary>
      <returns>true if the iterator was set to the next child element with the matching name; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator">
      <summary>Iterates over all following sibling content nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />.</summary>
      <param name="context">The node from which you start traversing the child content nodes.</param>
      <param name="filter">Enables you to filter nodes based on the name.  </param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.MoveNext">
      <summary>Positions the iterator on the next sibling content node.  </summary>
      <returns>true if the next sibling content node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator">
      <summary>Iterates over child nodes byfollowing the sibling nodes.  </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />.</summary>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.  </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Position this iterator to the next content or sibling node.  </summary>
      <returns>Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" /> if there are no more content or sibling nodes. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" /> if the next input node needs to be fetched first. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" /> if, while iterating through the nodes, the <see cref="P:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Current" /> property was set to the next node.</returns>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.IdIterator">
      <summary>Tokenizes a string that contains IDREF values and dereferences the values in order to get a list of ID elements.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.IdIterator.Create(System.Xml.XPath.XPathNavigator,System.String)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.IdIterator" />.</summary>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains context.</param>
      <param name="value">String to contain the value of the iterator.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.IdIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.IdIterator.MoveNext">
      <summary>Positions the iterator on the next ID element.  </summary>
      <returns>true if the next node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.Int32Aggregator">
      <summary>Computes aggregates over a sequence of Int32 values.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int32Aggregator.Average(System.Int32)">
      <summary>Finds the average of a sequence of Int32 values.</summary>
      <param name="value">A value of type Int32 that identifies a group of items to average, such as a column in a table.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int32Aggregator.AverageResult">
      <summary>Returns the average result of a sequence of Int32 values.</summary>
      <returns>An Int32 value that contains the average result of a sequence of Int32 values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int32Aggregator.Create">
      <summary>Initializes a sequence of Int32 values.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int32Aggregator.IsEmpty">
      <summary>Returns a Boolean value that indicates if the sequence is empty.</summary>
      <returns>true if the sequence is empty, otherwise returns false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int32Aggregator.Maximum(System.Int32)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is greater than the existing result.</summary>
      <param name="value">A value of type Int32.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int32Aggregator.MaximumResult">
      <summary>Returns the largest value in a sequence of Int32 values.</summary>
      <returns>An Int32 value that contains the maximum value in a sequence of Int32 values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int32Aggregator.Minimum(System.Int32)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is less than the existing result.</summary>
      <param name="value">A value of type Int32</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int32Aggregator.MinimumResult">
      <summary>Returns the smallest value in a sequence of Int32 values.</summary>
      <returns>An Int32 value that contains the minimum value in a sequence of Int32 values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int32Aggregator.Sum(System.Int32)">
      <summary>Adds an Int32  value to the existing result.</summary>
      <param name="value">A value of type Int32.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int32Aggregator.SumResult">
      <summary>Returns the sum of a sequence of Int32 values.</summary>
      <returns>An Int32 value that contains the sum of a sequence of Int32 values.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.Int64Aggregator">
      <summary>Computes aggregates over a sequence of Int64 values.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)">
      <summary>Finds an average of a sequence of Int64 values.</summary>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult">
      <summary>Returns an Int64 value that contains the average of a sequence of Int64 values.</summary>
      <returns>An Int64 value that contains the average of a sequence of Int64 values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int64Aggregator.Create">
      <summary>Initializes a sequence of Int64 values.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty">
      <summary>Returns a Boolean value that indicates whether the sequence of Int64 values is empty.</summary>
      <returns>true if the sequence of Int64 values is empty; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is greater than the existing result. </summary>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult">
      <summary>Gets the largest Int64 value.</summary>
      <returns>The largest Int64 value.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)">
      <summary>Assigns the <paramref name="value" /> parameter to the existing result if the <paramref name="value" /> parameter is less than the existing result. </summary>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult">
      <summary>Gest the smallest Int64 value.</summary>
      <returns>The smallest Int64 value.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)">
      <summary>Adds an Int64 value to the existing result.</summary>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult">
      <summary>Returns an Int64 value that contains the sum of a sequence of Int64 values.</summary>
      <returns>An Int64 value that contains the sum of a sequence of Int64 values.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.IntersectIterator">
      <summary>Positions the iterator to the next node in the intersection of two sets of nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.IntersectIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.IntersectIterator" />.</summary>
      <param name="runtime">
        <see cref="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.IntersectIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator. </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.IntersectIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Positions this iterator to the next node in the union.</summary>
      <returns>The <see cref="T:System.Xml.Xsl.Runtime.SetIteratorResult" />.</returns>
      <param name="nestedNavigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.IteratorResult">
      <summary>Iterators that use containment to control a nested iterator return one of the values in this enumeration.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes">
      <summary>Iteration is complete; there are no more nodes</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode">
      <summary>The next node must be fetched from the contained iterator before iteration can continue.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode">
      <summary>Iteration is complete; there are no more nodes.</summary>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.NamespaceIterator">
      <summary>Iterate over all namespace nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NamespaceIterator.Create(System.Xml.XPath.XPathNavigator)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.NamespaceIterator" />.</summary>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> that identifies the <see cref="T:System.Xml.Xsl.XsltContext" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.NamespaceIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NamespaceIterator.MoveNext">
      <summary>Positions the iterator on the next namespace node.  </summary>
      <returns>true if the next namespace node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.NodeKindContentIterator">
      <summary>Iterates over all child content nodes with a matching node kind.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNodeType)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />.</summary>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
      <param name="nodeType">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.NodeKindContentIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.MoveNext">
      <summary>Positions the iterator on the next child content node with a matching node kind.  </summary>
      <returns>true if the next child content node with a matching node kind exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.NodeRangeIterator">
      <summary>Iterates over the singleton node if the starting node is the same node as the ending node. Iterates to the end of the document if the starting node is after the ending node or is in a different document.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />. </summary>
      <param name="start">Node at which iteration begins.</param>
      <param name="filter">Test expression that determines whether a node is to be filtered out.</param>
      <param name="end">Node at which iteration ends.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current">
      <summary>Returns the current result navigator.</summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext">
      <summary>Positions the iterator on the next node.  </summary>
      <returns>true if the next node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.ParentIterator">
      <summary>Iterates over the matching parent node according to the <see cref="N:System.Xml.XPath" />, parent axis rules.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ParentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.ParentIterator" />.</summary>
      <param name="context">The node from which you start traversing the nodes.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.ParentIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.ParentIterator.MoveNext">
      <summary>Positions the iterator on the next matching parent node.  </summary>
      <returns>true if the next matching parent node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.PrecedingIterator">
      <summary>Iterates over all the content-typed nodes which precede the starting node in document order. Returns nodes in reverse document order.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.PrecedingIterator" />. The <see cref="T:System.Xml.Xsl.Runtime.PrecedingIterator" /> does not contain duplicates.</summary>
      <param name="context">The node from which you start traversing the nodes.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.PrecedingIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingIterator.MoveNext">
      <summary>Positions the iterator on the next preceding node in reverse document order.  </summary>
      <returns>true if the next preceding node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator">
      <summary>Iterates over all preceding sibling content nodes in document order.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />.</summary>
      <param name="context">The node from which you start traversing the nodes.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.MoveNext">
      <summary>Positions the iterator on the next preceding sibling node.  </summary>
      <returns>true if the next preceding sibling node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
      <summary>Iterates over all preceding sibling nodes according to the <see cref="N:System.Xml.XPath" /> preceding sibling axis rules and returns nodes in reverse document order.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />.</summary>
      <param name="context">The node from which you start traversing the nodes.</param>
      <param name="filter">Enables you to filter nodes based on the name. </param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext">
      <summary>Positions the iterator on the next preceding sibling node in the reverse document order. </summary>
      <returns>true if the next preceding sibling node exists; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.SetIteratorResult">
      <summary>Sets iterators for combinations of elements by Union, Intersection, or Difference, which use containment to control two nested iterators. This will return one of the enumeration values from <see cref="M:System.Xml.Xsl.Runtime.IdIterator.MoveNext" />.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.SetIteratorResult.NoMoreNodes">
      <summary>Iteration is complete; there are no more nodes.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.SetIteratorResult.InitRightIterator">
      <summary>Initialize right-nested iterator.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedLeftNode">
      <summary>The next node needs to be fetched from the left-nested iterator.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedRightNode">
      <summary>The next node needs to be fetched from the right-nested iterator.</summary>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.SetIteratorResult.HaveCurrentNode">
      <summary>This iterator's <see cref="P:System.Xml.XPath.XPathNodeIterator.Current" /> property is set to the next node in the iteration.</summary>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.StringConcat">
      <summary>Concatenates strings when the number of strings is not known beforehand.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.StringConcat.Clear">
      <summary>Clears the result string.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.StringConcat.Concat(System.String)">
      <summary>Concatenates a new string to the result.</summary>
      <param name="value">A string value to be concatenated to the result.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.StringConcat.Delimiter">
      <summary>Gets or sets the string that delimits concatenated strings.</summary>
      <returns>Returns the <see cref="T:System.String" /> delimiter.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.StringConcat.GetResult">
      <summary>Gets the result string.</summary>
      <returns>A string value that contains the result.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.UnionIterator">
      <summary>Manages two sets of nodes that are already in document order with no duplicates, and returns the union of these sets in document order with no duplicates.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.UnionIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.UnionIterator" />.</summary>
      <param name="runtime">
        <see cref="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.UnionIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator. </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.UnionIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Positions this iterator to the next node in the union.</summary>
      <returns>The <see cref="T:System.Xml.Xsl.Runtime.SetIteratorResult" />.</returns>
      <param name="nestedNavigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlCollation">
      <summary>Constructs a collation that uses the specified culture and compare options.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlCollation.Equals(System.Object)">
      <summary>Returns true if this XML extension function has the same values as another XML extension function.</summary>
      <returns>Returns true if this XML extension function has the same values as another XML extension function, otherwise false.</returns>
      <param name="obj">
        <see cref="T:System.Object" /> with which to determine equality..</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlCollation.GetHashCode">
      <summary>Returns the object's hash code.</summary>
      <returns>Returns the object's hash code.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlILIndex">
      <summary>Manages nodes from an input document, indexed by key value(s). This class is used as a cache of nodes indexed by xsl:key instructions and allows fast access to these nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILIndex.Add(System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Adds a node that is indexed by the specified key value.</summary>
      <param name="key">The specified key.</param>
      <param name="navigator">An instance of <see cref="T:System.Xml.XPath.XPathNavigator" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILIndex.Lookup(System.String)">
      <summary>Looks up a sequence of nodes that are indexed by the specified key value.</summary>
      <returns>A sequence of nodes that are indexed by the specified key value.</returns>
      <param name="key">The specified key.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlILStorageConverter">
      <summary>This internal class contains static helper methods that get a value converter from <see cref="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" /> to convert among several physical common language runtime (CLR) representations for the same logical XML type.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BooleanToAtomicValue(System.Boolean,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a Boolean value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">The Boolean value to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BytesToAtomicValue(System.Byte[],System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts an array of bytes to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">An array of bytes to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DateTimeToAtomicValue(System.DateTime,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a DateTime value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type DateTime to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DecimalToAtomicValue(System.Decimal,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a decimal value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type decimal to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DoubleToAtomicValue(System.Double,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a double value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type double to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int32ToAtomicValue(System.Int32,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts an Int32 value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type Int32 to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int64ToAtomicValue(System.Int64,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts an Int64 value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type Int64 to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.ItemsToNavigators(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts a list or sequence of <see cref="T:System.Xml.XPath.XPathItem" /> objects to a sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects or values.</summary>
      <returns>Returns a generic list of type <see cref="T:System.Xml.XPath.XPathNavigator" />.</returns>
      <param name="listItems">A sequence of <see cref="System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.NavigatorsToItems(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <summary>Converts a sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects or values to a list or sequence of <see cref="T:System.Xml.XPath.XPathItem" /> objects.</summary>
      <returns>Returns a generic list of type <see cref="T:System.Xml.XPath.XPathItem" />.</returns>
      <param name="listNavigators">A sequence of <see cref="System.Xml.XPath.XPathNavigator" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.SingleToAtomicValue(System.Single,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a single value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type single to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.StringToAtomicValue(System.String,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a string value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type string to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.TimeSpanToAtomicValue(System.TimeSpan,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts a <see cref="T:System.TimeSpan" /> value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">A value of type <see cref="T:System.TimeSpan" /> to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.XmlQualifiedNameToAtomicValue(System.Xml.XmlQualifiedName,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <summary>Converts an <see cref="T:System.Xml.XmlQualifiedName" /> value to an <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</summary>
      <returns>Returns a <see cref="T:System.Xml.Schema.XmlAtomicValue" />.</returns>
      <param name="value">An instance of the <see cref="System.Xml.XmlQualifiedName" /> class to convert.</param>
      <param name="index">A value of type Int32 that provides the index of the item to convert.</param>
      <param name="runtime">An instance of the <see cref="System.Xml.Xsl.Runtime.XmlQueryRuntime" /> class.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter">
      <summary>XmlNavigatorFilter provides a flexible filtering abstraction over <see cref="T:System.Xml.XPath.XPathNavigator" />. Callers do not know what type of filtering will occur; they simply call <see cref="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)" /> or <see cref="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)" />. The filter implementation invokes the appropriate operation on the <see cref="T:System.Xml.XPath.XPathNavigator" /> in order to skip over filtered nodes.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.#ctor">
      <summary>Provides a flexible filtering abstraction over <see cref="T:System.Xml.XPath.XPathNavigator" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.IsFiltered(System.Xml.XPath.XPathNavigator)">
      <summary>Return true if the navigator's current node matches the filter condition.</summary>
      <returns>true if the current node matches the condition, otherwise returns false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)">
      <summary>Repositions the navigator to the first matching content node or attribute and skips over filtered nodes. If there are no matching nodes, the navigator does not move and the method returns false.</summary>
      <returns>true if the navigator is repositioned on a child element with a matching name, otherwise false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowing(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <summary>Repositions the navigator to the following matching content node or attribute and skips over filtered nodes. If there are no matching nodes, the navigator does not move and the method returns false.</summary>
      <returns>true if the navigator is repositioned on the next element with a matching name, otherwise false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class that identifies the beginning of the range over which navigation can move.</param>
      <param name="navigatorEnd">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class that identifies the end of the range over which navigation can move.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)">
      <summary>Repositions the navigator to the sibling matching content node or descendent and skips over filtered nodes. If there are no matching nodes, the navigator does not move and the method returns false.</summary>
      <returns>true if the navigator is repositioned on the next element sibling with a matching name, otherwise false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToNextContent(System.Xml.XPath.XPathNavigator)">
      <summary>Repositions the navigator to the next matching content node or attribute and skips over filtered nodes. If there are no matching nodes, the navigator does not move and the method returns false.</summary>
      <returns>true if the navigator is repositioned on the next element child with a matching name, otherwise false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToPreviousSibling(System.Xml.XPath.XPathNavigator)">
      <summary>Repositions the navigator to the previous matching sibling node and skips over filtered nodes. If there are no matching nodes, the navigator does not move and the method returns false.</summary>
      <returns>true if the navigator is repositioned on the previous element sibling with a matching name, otherwise false.</returns>
      <param name="navigator">An instance of the <see cref="System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQueryContext">
      <summary>The context of a query consists of all user-provided information that influences the operation of the query.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultDataSource">
      <summary>Returns the document that is queried by default if no data source is explicitly selected in the query.</summary>
      <returns>An instance of the <see cref="System.Xml.Xpath.XPathNavigator" /> class.</returns>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultNameTable">
      <summary>Returns the name table used by the default data source, or null if there is no default data source.</summary>
      <returns>An instance of the <see cref="System.Xml.XmlNameTable" /> class.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetDataSource(System.String,System.String)">
      <summary>Gets the data source specified by the <paramref name="uriRelative" /> and <paramref name="uriBase" /> from the T:System.Xml.XmlResolver that the user provided.</summary>
      <returns>An instance of the T:<see cref="System.Xml.Xpath.XPathNavigator" /> class.</returns>
      <param name="uriRelative">A value of type string.</param>
      <param name="uriBase">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetLateBoundObject(System.String)">
      <summary>Returns the extension object that is mapped to the specified namespace, or null if no object is mapped.</summary>
      <returns>An extension object.</returns>
      <param name="namespaceUri">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetParameter(System.String,System.String)">
      <summary>Gets a named parameter from the external argument list.</summary>
      <returns>null if no argument list was provided, or if there is no parameter by that name; otherwise, a named parameter from the external argument list.</returns>
      <param name="localName">A value of type string.</param>
      <param name="namespaceUri">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.InvokeXsltLateBoundFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.XPath.XPathItem}[])">
      <summary>Gets a late-bound extension object from the external argument list.</summary>
      <returns>Returns a generic list of type <see cref="T:System.Xml.XPath.XPathItem" />.</returns>
      <param name="name">A value of type string.</param>
      <param name="namespaceUri">A value of type string.</param>
      <param name="args">A sequence of <see cref="System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.LateBoundFunctionExists(System.String,System.String)">
      <summary>Returns true if the late-bound object identified by <paramref name="namespaceUri" /> contains a method that matches <paramref name="name" />.</summary>
      <returns>true if the late bound object matches name; otherwise false.</returns>
      <param name="name">A value of type string.</param>
      <param name="namespaceUri">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryContext.OnXsltMessageEncountered(System.String)">
      <summary>Raises an <see cref="E:System.Xml.Xsl.XsltArgumentList.XsltMessageEncountered" /> event.</summary>
      <param name="message">A value of type string.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryContext.QueryNameTable">
      <summary>Gets the <see cref="T:System.Xml.XmlNameTable" /> instance.</summary>
      <returns>Returns an instance of the <see cref="T:System.Xml.XmlNameTable" />.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <summary>A sequence of XML items that dynamically expands and allows random access to items.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class. </summary>
      <param name="capacity">A value of type Int32.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Xml.XPath.XPathItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class. </summary>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.AddClone(System.Xml.XPath.XPathItem)">
      <summary>Adds an item to the sequence. If the item is a navigator, this method clones it before adding it to the sequence.</summary>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)">
      <summary>Clears and reuses an <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> object if it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class.</returns>
      <param name="seq">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)">
      <summary>Clears and reuses an <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> object if it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />. This method then adds a new item to reused or new sequence.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class.</returns>
      <param name="seq">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" /> class.</param>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.XmlQueryItemSequence.Empty">
      <summary>Returns a properly initialized, empty <see cref="T:XmlQueryItemSequence" />.</summary>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <summary>A sequence of XML nodes that dynamically expands and allows random access to items.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class. </summary>
      <param name="list">A sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class. </summary>
      <param name="capacity">A value of type Int32.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class. </summary>
      <param name="navigator">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class. </summary>
      <param name="array">An array of instances of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
      <param name="size">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)">
      <summary>Clone the navigator and then adds a node to the sequence.</summary>
      <param name="navigator">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)">
      <summary>Clears and reuses the specified <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> if it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class.</returns>
      <param name="seq">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)">
      <summary>Clears and reuses the specified <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> if it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> and adds <paramref name="navigator" /> to the sequence.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class.</returns>
      <param name="seq">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class.</param>
      <param name="navigator">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})">
      <summary>Returns a sequence that contains all the distinct nodes in this cache, sorted in document order.</summary>
      <returns>A sequence of <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> class instances.</returns>
      <param name="comparer">A sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> instances.</param>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty">
      <summary>Gets an empty <see cref="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" /> that is properly initialized.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct">
      <summary>If this property is true, the nodes in this cache are in document order with no duplicates.</summary>
      <returns>true if the nodes are distinct, otherwise return false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#Add(System.Xml.XPath.XPathItem)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <param name="value">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#Contains(System.Xml.XPath.XPathItem)">
      <summary>Returns true if the specified value is in the sequence.</summary>
      <returns>true if the value is in the sequence; otherwise, false.</returns>
      <param name="value">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)">
      <summary>Copies the contents of this sequence to the specified array, starting at the specified index in the target array.</summary>
      <param name="array">An array of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
      <param name="index">A value of type int.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Specifies that items cannot be added, removed, or modified through the <see cref="T:System.Collections.Generic.ICollection`1" /> interface.</summary>
      <returns>true if the collection is read only; otherwise, false.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{T}#Remove(System.Xml.XPath.XPathItem)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <returns>true if the item is removed; otherwise, false.</returns>
      <param name="value">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns the <see cref="T:System.Collections.Generic.IEnumerator" /> of <see cref="T:System.Xml.XPathItem" /> implementation.</summary>
      <returns>The IEnumerator&lt;XPathItem&gt; implementation.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{T}#IndexOf(System.Xml.XPath.XPathItem)">
      <summary>Returns the index of the specified value in the sequence.</summary>
      <returns>The index of the specified value in the sequence.</returns>
      <param name="value">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{T}#Insert(System.Int32,System.Xml.XPath.XPathItem)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <param name="index">A value of type int.</param>
      <param name="value">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <summary>Returns the item at the specified index.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</returns>
      <param name="index">A value of type Int32.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <param name="index">A value of type int.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQueryOutput">
      <summary>Represents an <see cref="T:System.Xml.XmlWriter" /> that provides additional functionality that is required for outputting the results of XSLT transformations. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Close">
      <summary>This method is implemented as empty and does nothing.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator)">
      <summary>Ends the shallow copy of the navigator's current node. This method should only be called for element and document nodes.</summary>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndTree">
      <summary>Writes the end of the tree.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Flush">
      <summary>This method is implemented as empty and does nothing.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.LookupPrefix(System.String)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>A string that contains the prefix.</returns>
      <param name="ns">String that contains namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator)">
      <summary>Begins the shallow copy of the navigator's current node to output. </summary>
      <returns>true if EndCopy should be called to complete the copy operation; otherwise, false.</returns>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartElementContentUnchecked">
      <summary>Called after an element's attributes have been enumerated, but before any children have been enumerated. Well-formedness is assumed, so no additional checks are performed.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartTree(System.Xml.XPath.XPathNodeType)">
      <summary>Starts the construction of a new tree.</summary>
      <param name="rootType">
        <see cref="T:System.Xml.XPath.XPathNodeType" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="buffer">
        <see cref="T:System.Byte" /> buffer object that contains data to write.</param>
      <param name="index">
        <see cref="T:System.Int32" /> that contains start index.</param>
      <param name="count">
        <see cref="T:System.Int32" /> that contains count bytes.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCData(System.String)">
      <summary> Empty implementation that does nothing.</summary>
      <param name="text">String that contains data to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCharEntity(System.Char)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="ch">
        <see cref="T:System.Char" /> that contains a character to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="buffer">
        <see cref="T:System.Char" /> array of buffer that contains data to write.</param>
      <param name="index">
        <see cref="T:System.Int32" /> that contains start index.</param>
      <param name="count">
        <see cref="T:System.Int32" /> that contains count of characters to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteComment(System.String)">
      <summary>Writes the comment. The method does not verify well-formedness. Other methods called by this one do the necessary checks.</summary>
      <param name="text">String that contains the comment to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCommentString(System.String)">
      <summary>Cache the comment's string.</summary>
      <param name="text">String that contains the comment to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteDocType(System.String,System.String,System.String,System.String)">
      <summary>Throws <see cref="T:System.NotSupportedException" />. Should never be called.</summary>
      <param name="name">String that contains document name.</param>
      <param name="pubid">String that contains publication id.</param>
      <param name="sysid">String that contains system id.</param>
      <param name="subset">String that contains subset name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttribute">
      <summary>Checks the attribute for well-formedness and writes the end of the attribute.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttributeUnchecked">
      <summary>Writes the end of the attribute. There is an assumption of well-formedness, so no additional checks are performed.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndComment">
      <summary>Checks the comment for well-formedness and writes the end of the comment.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndDocument">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElement">
      <summary>Checks the element for well-formedness and writes the end of the element.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)">
      <summary>Writes the end of the element with local name. Well-formedness is assumed, so no additional checks are performed.</summary>
      <param name="localName">String that contains local name of element.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)">
      <summary>Writes the end of the element with prefix, local name, and namespace. No checks are performed.</summary>
      <param name="prefix">String that contains element prefix.</param>
      <param name="localName">String that contains local name of element.</param>
      <param name="ns">String that contains namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndNamespace">
      <summary>Checks the namespace for well-formedness and writes the namespace.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndProcessingInstruction">
      <summary>Checks the processing instruction for well-formedness and writes the processing instruction.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndRoot">
      <summary>Writes the end of the root of the tree and resets the state.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEntityRef(System.String)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="name">String that contains name of entity.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteFullEndElement">
      <summary>Checks the element for well-formedness before writing the end of the element.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteItem(System.Xml.XPath.XPathItem)">
      <summary>Write an item to output.  If currently constructing an Xml tree, then the item is always copied. At the top-level, the item's identity is preserved unless it is an atomic value.</summary>
      <param name="item">
        <see cref="T:System.Xml.XPath.XPathItem" /> object to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclaration(System.String,System.String)">
      <summary>Checks the namespace declaration for well-formedness and writes the namespace declaration.</summary>
      <param name="prefix">String that contains namespace prefix.</param>
      <param name="ns">String that contains namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclarationUnchecked(System.String,System.String)">
      <summary>Adds a new namespace declaration - xmlns:prefix="ns" - to the set of in-scope declarations. This method does not perform any additional checks.</summary>
      <param name="prefix">String that contains namespace prefix.</param>
      <param name="ns">String that contains namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceString(System.String)">
      <summary>Caches the namespace's text.</summary>
      <param name="text">String that contains fully qualified namespace.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstruction(System.String,System.String)">
      <summary>Writes the processing instruction. No checks for well-formedness are done by this method; the called methods do checks if needed.</summary>
      <param name="target">String that contains target of instruction.</param>
      <param name="text">String that contains text of instruction.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstructionString(System.String)">
      <summary>Caches the processing instruction's text.</summary>
      <param name="text">String that contains instruction.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="buffer">
        <see cref="T:System.Char" /> buffer array to be written.</param>
      <param name="index">
        <see cref="T:System.Int32" /> that contains start index.</param>
      <param name="count">
        <see cref="T:System.Int32" /> that contains count characters to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.String)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="data">String that contains raw data.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawUnchecked(System.String)">
      <summary>Writes a text block without escaping special characters.</summary>
      <param name="text">String that contains text to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute(System.String,System.String,System.String)">
      <summary>Checks the attribute for well-formedness before writing the start of the attribute.</summary>
      <param name="prefix">String that contains prefix of attribute.</param>
      <param name="localName">String that contains local name of attribute.</param>
      <param name="ns">String that contains namespace of attribute.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)">
      <summary>Writes an attribute with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="tagName">String that contains tag name.</param>
      <param name="prefixMappingsIndex">
        <see cref="T:System.Int32" /> that contains prefix mapping index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)">
      <summary>Writes an attribute with a name that is computed from a "prefix:localName" tag name and a set of prefix mappings.</summary>
      <param name="tagName">String that contains tag name of attribute.</param>
      <param name="ns">String that contains namespace of attribute.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)">
      <summary>Writes an attribute with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="name">String that contains name of attribute.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)">
      <summary>Writes an attribute with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeLocalName(System.String)">
      <summary>Writes the start of the attribute with an empty prefix, namespace, and null schema type.</summary>
      <param name="localName">String that contains local name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)">
      <summary>Writes the start of the attribute with local name.</summary>
      <param name="localName">String that contains the local name of the attribute.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)">
      <summary>Writes the start of the attribute with prefix, local name and ns without checks for well-formedness.</summary>
      <param name="prefix">String that contains the prefix of the namespace.</param>
      <param name="localName">String that contains the local name of the attribute.</param>
      <param name="ns">String that contains the namespace.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComment">
      <summary>Checks the start of the comment for well-formedness and writes the start of the comment.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument(System.Boolean)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="standalone">Boolean that indicates whether to write the XML declaration with the version number that appears at the beginning of the document.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement(System.String,System.String,System.String)">
      <summary>Writes start element after checks that ensure well-formedness.</summary>
      <param name="prefix">String that contains the namespace prefix.</param>
      <param name="localName">String that contains the local name of the element.</param>
      <param name="ns">String that contains the namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)">
      <summary>Writes an element with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="tagName">String that contains the tag name.</param>
      <param name="prefixMappingsIndex">
        <see cref="T:System.Int32" /> that contains the index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)">
      <summary>Writes an element with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="tagName">String that contains the tag name.</param>
      <param name="ns">String that contains the namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)">
      <summary>Writes an element with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> that contains the name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)">
      <summary>Writes an element with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementLocalName(System.String)">
      <summary>Writes the local name with an empty prefix and namespace.</summary>
      <param name="localName">String that contains the local name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)">
      <summary>Writes the start of an element. There is an assumption of well-formedness, so no additional checks are performed.</summary>
      <param name="localName">String that contains the local name of the start element.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)">
      <summary>Writes an element with a name that is computed from a prefix:localName tag name and a set of prefix mappings.</summary>
      <param name="prefix">String that contains the namespace prefix.</param>
      <param name="localName">String that contains the local name of the start element.</param>
      <param name="ns">String that contains the namespace name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartNamespace(System.String)">
      <summary>Checks for well-formedness and writes the start of the namespace.</summary>
      <param name="prefix">String that contains the namespace prefix.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartProcessingInstruction(System.String)">
      <summary>Checks the comment for well-formedness and writes the start of the processing instruction.</summary>
      <param name="target">String that contains the name of the target of the processing instruction.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartRoot">
      <summary>Checks the root of the tree for well-formedness and writes the root of the tree.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteState">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>A <see cref="T:System.Xml.WriteState" /> object.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteString(System.String)">
      <summary>Checks the string for well-formedness and writes text.</summary>
      <param name="text">String that contains text to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStringUnchecked(System.String)">
      <summary>Writes text. Well-formedness is assumed, so no checks are performed.</summary>
      <param name="text">String that contains text to write.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteSurrogateCharEntity(System.Char,System.Char)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="lowChar">
        <see cref="T:System.Char" /> of the low character.</param>
      <param name="highChar">
        <see cref="T:System.Char" /> of the high character.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteWhitespace(System.String)">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <param name="ws">String that contains the whitespace to write.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlLang">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>A string that contains the language identifier.</returns>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlSpace">
      <summary>Throws <see cref="T:System.NotSupportedException" />.</summary>
      <returns>The <see cref="T:System.Xml.XmlSpace" /> object.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryOutput.XsltCopyOf(System.Xml.XPath.XPathNavigator)">
      <summary>Copies a node by value to output according to the following Xslt rules: identity is never preserved, if the item is an Rtf, preserve serialization hints when copying, and if the item is a root node, copy the children of the root.</summary>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQueryRuntime">
      <summary>Provides methods and properties to support the XSLT processor.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)">
      <summary>Adds a newly built index over the specified context document to the existing collection of indexes.</summary>
      <param name="context">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
      <param name="indexId">A value of type int.</param>
      <param name="index">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlILIndex" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)">
      <summary>Converts a value from the CLR type of the <paramref name="value" /> parameter to CLR <paramref name="destinationType" /> by using V1 XSLT rules. Converts any result tree fragment values to nodes.</summary>
      <returns>A value of type object.</returns>
      <param name="indexType">A value of type Int32.</param>
      <param name="value">A value of type object.</param>
      <param name="destinationType">A value of type Type.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)">
      <summary>Converts from the CLR type of the <paramref name="value" /> parameter to the default CLR type by which intermediate language generation represents the XML type, based on the conversion rules of the XML type.</summary>
      <returns>A value of type object.</returns>
      <param name="indexType">A value of type int.</param>
      <param name="value">A value of type object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <summary>Compares the relative positions of two navigators.</summary>
      <returns>-1 if <paramref name="navigatorThis" /> is before <paramref name="navigatorThat" />; 1 if <paramref name="navigatorThis" /> is after <paramref name="navigatorThat" />; 0 if both navigators are positioned at the same node.</returns>
      <param name="navigatorThis">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
      <param name="navigatorThat">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)">
      <summary>Creates a collation from a string.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</returns>
      <param name="collation">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalNames">
      <summary>Returns an array containing the names of all the global variables and parameters used in this query.</summary>
      <returns>An array of string values.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalValue(System.String)">
      <summary>Gets the value of a global value that has the specified name.</summary>
      <returns>A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances, or null if there is no global value that has the specified name.</returns>
      <param name="name">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetXsltValue(System.Collections.IList)">
      <summary>Converts a sequence to its appropriate XSLT type.</summary>
      <returns>A value of type object.</returns>
      <param name="seq">An instance of the <see cref="T:System.Collections.IList" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)">
      <summary>Sets the value of a global value that has the specified name.</summary>
      <param name="name">A value of type string.</param>
      <param name="value">A value of type object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <summary>Gets distinct sorted nodes from the specified sequence. </summary>
      <returns>An <see cref="T:System.Collections.IList" /> of <see cref="T:System.Xml.XPath.XPathNavigator" /> objects.</returns>
      <param name="seq">A sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)">
      <summary>Determines whether the specified early-bound object contains a method with the specified name.</summary>
      <returns>true if the early-bound object identified by <paramref name="namespaceUri" /> contains a method that matches <paramref name="name" />; otherwise, false.</returns>
      <param name="name">The method name to look for.</param>
      <param name="namespaceUri">Identifies the early-bound object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <summary>Finishes constructing an RTF.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</returns>
      <param name="output">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <summary>Finishes constructing a nested sequence of items.</summary>
      <returns>A sequence of instances of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</returns>
      <param name="output">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> class.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.ExternalContext">
      <summary>Returns the object that manages external user context information, such as data sources, parameters, extension objects, and so on.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.XmlQueryContext" /> class.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)">
      <summary>Returns the index with the specified ID if it has already been created over the specified document, and returns true. Otherwise, creates a new, empty index and returns false.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlILIndex" /> class.</returns>
      <param name="context">The context document.</param>
      <param name="indexId">The index ID to look for.</param>
      <param name="index">The returned index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)">
      <summary>Generate a unique string identifier for the specified node.</summary>
      <returns>A value of type string.</returns>
      <param name="navigator">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName(System.Int32)">
      <summary>Gets the atomized name at the specified index in the array of names.</summary>
      <returns>A value of type string.</returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetCollation(System.Int32)">
      <summary>Gets a collation that was statically created.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetEarlyBoundObject(System.Int32)">
      <summary>Gets the specifiied early-bound extension object. If this object does not yet exist, creates an instance using the corresponding <see cref="T:System.Reflection.ConstructorInfo" />.</summary>
      <returns>A value of type object.</returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetGlobalValue(System.Int32)">
      <summary>Returns the value that is bound to the specified global variable. If the value has not yet been computed, computes it and stores it in the global variable.</summary>
      <returns>The value that is bound to the specified global variable. </returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetNameFilter(System.Int32)">
      <summary>Gets the name filter at the specified index in the array of filters.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class.</returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetTypeFilter(System.Xml.XPath.XPathNodeType)">
      <summary>Gets a filter that filters nodes of the specified type.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class.</returns>
      <param name="nodeType">An instance of the <see cref="T:System.Xml.XPath.XPathNodeType" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsGlobalComputed(System.Int32)">
      <summary>Returns true if the specified global value has already been computed.</summary>
      <returns>true if the value has been computed; otherwise, false.</returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)">
      <summary>Determines whether the <see cref="P:System.Xml.Xpath.LocalName" /> and <see cref="P:System.Xml.Xpath.NamespaceURI" /> properties of the specified <see cref="T:System.Xml.XPath.XPathNavigator" /> are equal to the names specified in the parameters.</summary>
      <returns>true if the names are equal; otherwise, false.</returns>
      <param name="navigator">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
      <param name="indexLocalName">A value of type int.</param>
      <param name="indexNamespaceUri">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <summary>Compares the <see cref="P:System.Xml.Xpath.LocalName" /> and <see cref="P:System.Xml.Xpath.NamespaceURI" /> properties of two <see cref="T:System.Xml.XPath.XPathNavigator" /> instances to check if they are equal.</summary>
      <returns>true if the names are equal; otherwise, false.</returns>
      <param name="n1">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
      <param name="n2">An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)">
      <summary>Returns true if the type of every item in the specified sequence matches the XML type that the specified index identifies.</summary>
      <returns>true if the type of <paramref name="seq" /> is a subtype of the <paramref name="indexType" />; otherwise, false.</returns>
      <param name="seq">An <see cref="T:System.Collections.Generic.IList" /> of <see cref="T:System.Xml.XPath.XPathItem" />objects.</param>
      <param name="indexType">The index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)">
      <summary>Determines whether the type of the specified sequence is a subtype of the specified singleton type.</summary>
      <returns>true if the type of <paramref name="seq" /> is a subtype the type specified by <paramref name="code" />; otherwise, false.</returns>
      <param name="seq">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
      <param name="code">A singleton type.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)">
      <summary>Returns true if the type of the specified <see cref="T:System.Xml.XPath.XPathItem" /> object matches the specified XML type.</summary>
      <returns>true if the type of the specified <see cref="T:System.Xml.XPathItem" /> matches the specified XML type; otherwise, false.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
      <param name="indexType">The index in the array of XML types..</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)">
      <summary>Returns true if the type of the <see cref="T:System.Xml.XPath.XPathItem" /> object is a subtype of a type identified by the specified <see cref="T:System.Xml.Schema.XmlTypeCode" />.</summary>
      <returns>Returns true if the type of the <see cref="T:System.Xml.XPath.XPathItem" /> object is a subtype of a type identified by the specified <see cref="T:System.Xml.Schema.XmlTypeCode" />, otherwise, false.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
      <param name="code">An instance of the <see cref="T:System.Xml.Schema.XmlTypeCode" /> class.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.NameTable">
      <summary>Returns the name table used to atomize all names used by the query.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XmlNameTable" /> class.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.OnCurrentNodeChanged(System.Xml.XPath.XPathNavigator)">
      <summary>Used for debugging in Visual Studio. Called after the current node has changed.</summary>
      <returns>An integer that indicates the status of the change. Used for internal testing only.</returns>
      <param name="currentNode">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object that identifies the node.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.Output">
      <summary>Gets the output writer object.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> class.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)">
      <summary>Parses the specified tag name and resolves the resulting prefix. If the prefix cannot be resolved, an error is thrown. </summary>
      <returns>An instance of the <see cref="T:System.Xml.XmlQualifiedName" /> class.</returns>
      <param name="tagName">The tag name.</param>
      <param name="indexPrefixMappings">The index. </param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)">
      <summary>Parses the specified tag name. Returns an <see cref="T:System.Xml.XmlQualifiedName" /> that consists of the parsed local name and the specified namespace.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XmlQualifiedName" /> class.</returns>
      <param name="tagName">The tag name.</param>
      <param name="ns">The namespace.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)">
      <summary>Reports query execution information to the event handler.</summary>
      <param name="message">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SetGlobalValue(System.Int32,System.Object)">
      <summary>Returns the value that is bound to the specified global variable or parameter.</summary>
      <param name="index">A value of type int.</param>
      <param name="value">A value of type object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartRtfConstruction(System.String,System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <summary>Starts constructing an RTF and returns a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> object that will be used to construct this RTF.</summary>
      <param name="baseUri">A value of type string.</param>
      <param name="output">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <summary>Starts constructing a nested sequence of items. Returns a new <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> that will be used to construct this new sequence.</summary>
      <param name="output">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQueryOutput" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)">
      <summary>Constructs a new <see cref="T:System.Xml.XPath.XPathNavigator" /> from the specified text.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</returns>
      <param name="text">A value of type string.</param>
      <param name="baseUri">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)">
      <summary>Throws an XML exception that has the specified message text.</summary>
      <param name="text">A value of type string.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions">
      <summary>Returns the object that manages the state. The state object is required to implement various XSLT functions.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XsltLibrary" /> class.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <summary>A sequence of XML values that dynamically expands and allows random access to items.</summary>
      <typeparam name="T">The type of this <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />.</typeparam>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> class. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> class. </summary>
      <param name="capacity">The size of this collection.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)">
      <summary>Constructs a singleton <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> that has <paramref name="value" /> as its only element.</summary>
      <param name="value">The only value in this <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> class. </summary>
      <param name="array">An array of <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence" /> instances.</param>
      <param name="size">The size of the array.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <param name="value">An object to add to the collection.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)">
      <summary>Returns true if the specified value is in the sequence.</summary>
      <returns>true if the specified value is in the sequence; otherwise, false.</returns>
      <param name="value">The value to find in the <see cref="T:System.Collections.Generic.ICollection`1" />. </param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the contents of this sequence to the specified array, starting at the specified index in the array.</summary>
      <param name="array">The array to copy the content of the <see cref="T:System.Collections.Generic.ICollection`1collection" /> to. </param>
      <param name="index">A value of type int.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count">
      <summary>Returns the number of items in the sequence.</summary>
      <returns>A value of type int.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})">
      <summary>Clears and reuses the specified <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> if it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence" /> class.</returns>
      <param name="seq">An <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> instance to be reused.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)">
      <summary>Clears and reuses the specified <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> it is available. If the <paramref name="seq" /> parameter is null, creates a new <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> and adds <paramref name="item" /> to the collection.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> class.</returns>
      <param name="seq">An <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> instance to be reused.</param>
      <param name="item">An item to add. </param>
    </member>
    <member name="F:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty">
      <summary>Creates a new instance of <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator">
      <summary>Returns <see cref="T:System.Collections.Generic.IEnumerator`1" />.</summary>
      <returns>An instance of the <see cref="T:System.Collections.Generic.IEnumerator`1" /> class.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)">
      <summary>Returns the index of the specified value in the sequence.</summary>
      <returns>The index.</returns>
      <param name="value">The value for which to get the index.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)">
      <summary>Returns the item at the specified index.</summary>
      <returns>The item at the specified index. </returns>
      <param name="index">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged">
      <summary>Called when one or more items in the cache have been added or removed. This method can also be called from the <see cref="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" /> method.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)">
      <summary>Sort the items in the cache using the keys contained in the specified array.</summary>
      <param name="keys">A value of type array.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="value">The sequence value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)"></member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="index">The sequence index.</param>
      <param name="value">The sequence value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="index">The sequence index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of this sequence to the specified array, starting at the specified index in the target array.</summary>
      <param name="array">The specified array.</param>
      <param name="index">The specified index.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized">
      <summary>Returns false. The <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> is not thread-safe.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot">
      <summary>Returns this instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> class. This instance can be used to synchronize access.</summary>
      <returns>This instance of <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns the <see cref="T:System.Collections.IEnumerator" />.</summary>
      <returns>Returns the <see cref="T:System.Collections.IEnumerator" /> of the query sequence collection.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="value">The sequence value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)">
      <summary>Returns true if the specified value is in the sequence.</summary>
      <returns>true if the specified value is in the sequence; otherwise, false.</returns>
      <param name="value">The specified value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Returns the index of the specified value in the sequence.</summary>
      <returns>The index of the specified value in the sequence.</returns>
      <param name="value">The specified value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="index">The specified index.</param>
      <param name="value">The specified value.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize">
      <summary>Returns true. The items cannot be added, removed, or modified.</summary>
      <returns>Returns true.</returns>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly">
      <summary>If the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> is read-only, this property returns true.</summary>
      <returns>Returns true if the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" /> is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)">
      <summary>Returns the item at the specified index.</summary>
      <returns>An item at the specified index.</returns>
      <param name="index">The specified index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)">
      <summary>Not implemented. Throws the <see cref="T:System.NotSupportedException" /> exception. </summary>
      <param name="value">The specified value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Throws the <see cref="T:System.NotSupportedException" /> exception.</summary>
      <param name="index">The specified index.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator">
      <summary>Accumulates a list of sort keys and stores them in an array.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDateTimeSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.DateTime)">
      <summary>Creates a new <see cref="T:System.DateTime" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A DateTime value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDecimalSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Decimal)">
      <summary>Creates a new <see cref="T:System.Decimal" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A decimal value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDoubleSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Double)">
      <summary>Creates a new <see cref="T:System.Double" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A double value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddEmptySortKey(System.Xml.Xsl.Runtime.XmlCollation)">
      <summary>Creates a new empty sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntegerSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int64)">
      <summary>Creates a new <see cref="T:System.Int64" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int32)">
      <summary>Creates a new <see cref="T:System.Int32" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A value of type Int32.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddStringSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.String)">
      <summary>Creates a new <see cref="T:System.String" /> sort key and appends it to the current run of sort keys.</summary>
      <param name="collation">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlCollation" /> class.</param>
      <param name="value">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Create">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.FinishSortKeys">
      <summary>Finishes creating the current run of sort keys and begins a new run.</summary>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Keys">
      <summary>Gets an array of sort keys that was constructed by the internal <see cref="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" /> class.</summary>
      <returns>An array of sort keys.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XPathFollowingIterator">
      <summary>Iterates over all following nodes according to the XPath following-axis rules.  </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />. The <see cref="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" /> does not contain duplicates.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
      <param name="filter">
        <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XPathFollowingIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.MoveNext">
      <summary>Positions the iterator to the next following node.</summary>
      <returns>true if the iterator was set to the next following node; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator">
      <summary>Iterates over all following nodes according to the XPath following axis rules. </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />.</summary>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.  </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Moves the iterator to the next following node.  </summary>
      <returns>Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" /> if there are no more following nodes. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" /> if the next input node must be fetched first. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" /> if the <see cref="P:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Current" /> property was set to the next node while iterating through the nodes.</returns>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator">
      <summary>Iterates over all preceding nodes according to the XPath preceding axis rules, and returns nodes in document order without duplicates.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />.</summary>
      <param name="input">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object.</param>
      <param name="filter">
        <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> object.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.MoveNext">
      <summary>Positions the iterator on the next preceding node.</summary>
      <returns>true if the iterator was set to the next preceding node; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator">
      <summary>Iterates over all preceding nodes according to the XPath preceding axis rules, and returns nodes in reverse document order without duplicates.  </summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />.</summary>
      <param name="context">The node from which you start traversing ancestors.</param>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name. For more information, see <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />.  </param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Current">
      <summary>Returns the current result navigator. </summary>
      <returns>The current result navigator.</returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.MoveNext">
      <summary>Positions the iterator on the next preceding node in reverse document order.</summary>
      <returns>true if the iterator was set to the next preceding node; otherwise, false.</returns>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator">
      <summary>Iterates over all preceding nodes according to the XPath preceding axis rules, except that nodes are always returned in document order. Merges multiple sets of preceding nodes in document order and removes duplicates.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <summary>Initializes the <see cref="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />.</summary>
      <param name="filter">An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" /> class, which enables you to filter nodes based on the name.</param>
    </member>
    <member name="P:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Current">
      <summary>Returns the current result navigator.  </summary>
      <returns>The current result navigator.  </returns>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <summary>Positions this iterator to the next preceding node in document order.  </summary>
      <returns>Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" /> if there are no more preceding nodes. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" /> if the next input node must be fetched first. Returns <see cref="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" /> if the <see cref="P:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Current" /> property was set to the next node while iterating through the nodes.</returns>
      <param name="input">The input node. </param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XsltConvert">
      <summary>Contains conversion routines used by XSLT.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.EnsureNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Ensures that the specified sequence of objects is not a result tree fragment and that it can be converted to a node set.</summary>
      <returns>A sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> instances.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts a specified value to Boolean.</summary>
      <returns>A value of type bool.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)">
      <summary>Converts the specified value to Boolean.</summary>
      <returns>A value of type bool.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDateTime(System.String)">
      <summary>Converts a specified value to a DateTime value.</summary>
      <returns>A value of type DateTime.</returns>
      <param name="value">A string value.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDecimal(System.Double)">
      <summary>Converts a specified value to decimal.</summary>
      <returns>A value of type decimal.</returns>
      <param name="value">A value of type double.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts a specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Decimal)">
      <summary>Converts the specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="value">A value of type decimal.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int32)">
      <summary>Converts the specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="value">A value of type int.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int64)">
      <summary>Converts the specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="value">A value of type Int64.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)">
      <summary>Converts a specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="value">A value of type string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)">
      <summary>Converts a specified value to double.</summary>
      <returns>A value of type double.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToInt(System.Double)">
      <summary>Converts the specified value to int.</summary>
      <returns>A value of type int.</returns>
      <param name="value">A value of type double.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToLong(System.Double)">
      <summary>Converts the specified value to long.</summary>
      <returns>A value of type long.</returns>
      <param name="value">A value of type double.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts a specified value to a node.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)">
      <summary>Converts the specified value to a node.</summary>
      <returns>An instance of the <see cref="T:System.Xml.XPath.XPathNavigator" /> class.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts the items to a sequence of nodes.</summary>
      <returns>A sequence of <see cref="T:System.Xml.XPath.XPathNavigator" /> instances.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)">
      <summary>Converts the specified value to a node.</summary>
      <returns>An instance of the <see cref="T:System.Xml.Xsl.Runtime.XmlQuerySequence" /> class.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Converts the items to a string.</summary>
      <returns>A value of type string.</returns>
      <param name="listItems">A sequence of <see cref="T:System.Xml.XPath.XPathItem" /> instances.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)">
      <summary>Converts the specified value to a string.</summary>
      <returns>A value of type string.</returns>
      <param name="value">A value of type DateTime.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)">
      <summary>Converts the specified value to a string.</summary>
      <returns>A value of type string.</returns>
      <param name="value">A value of type double.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)">
      <summary>Converts the specified value to a string.</summary>
      <returns>A value of type string.</returns>
      <param name="item">An instance of the <see cref="T:System.Xml.XPath.XPathItem" /> class.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XsltFunctions">
      <summary>XSLT and XPath functions.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.BaseUri(System.Xml.XPath.XPathNavigator)">
      <summary>Returns the value of the base URI of the node of the node passed in by the <paramref name="navigator" /> parameter. Implements baseUri XPath function according to the W3C specification.</summary>
      <returns>The base URI as <see cref="T:System.String" />.</returns>
      <param name="navigator">The <see cref="T:System.Xml.XPath.XPathNavigator" /> instance that contains the node to be identified by URI.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Contains(System.String,System.String)">
      <summary>Implements contains XPath function according to the W3C specification.</summary>
      <returns>true if the first argument string contains the second argument string; otherwise, false.</returns>
      <param name="s1">The string in which to locate <paramref name="s2" />.</param>
      <param name="s2">The string to locate in s1. </param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.EXslObjectType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Implements exsl:object-type.</summary>
      <returns>Object type as <see cref="T:System.String" />.</returns>
      <param name="value">The <see cref="T:System.Xml.XPath.XPathItem" /> of which to determine type.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Lang(System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Implements the lang function according to the W3C XPath specification.</summary>
      <returns>
        <see cref="T:System.Boolean" />.</returns>
      <param name="value">The specified string.</param>
      <param name="context">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object that contains context.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSFormatDateTime(System.String,System.String,System.String,System.Boolean)">
      <summary>Implements the ms:format-date and ms-format-timeMicrosoft XPath extension functions.</summary>
      <returns>String that contains formatted date and time.</returns>
      <param name="dateTime">String that contains date/time data.</param>
      <param name="format">String that contains format.</param>
      <param name="lang">String that contains language.</param>
      <param name="isDate">Boolean value that indicates whether date/time contains a date.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSLocalName(System.String)">
      <summary>Implements the ms:local-nameMicrosoft XPath extension function. </summary>
      <returns>Name as <see cref="T:System.String" />.</returns>
      <param name="name">The name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNamespaceUri(System.String,System.Xml.XPath.XPathNavigator)">
      <summary>Implements the ms:namespace-uriMicrosoft XPath extension function. </summary>
      <returns>Namespace URI as <see cref="T:System.String" />.</returns>
      <param name="name">The name.</param>
      <param name="currentNode">The <see cref="T:System.Xml.XPath.XPathNavigator" /> instance.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNumber(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Implements ms:numberMicrosoft XPath extension function.</summary>
      <returns>
        <see cref="T:System.Double" />.</returns>
      <param name="value">
        <see cref="T:System.Collections.Generic.List`1" /> of <see cref="T:System.Xml.XPath.XPathItem" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSStringCompare(System.String,System.String,System.String,System.String)">
      <summary>Implements ms:string-compareMicrosoft XPath extension function. </summary>
      <returns>If <paramref name="s1" /> &lt; <paramref name="s2" /> the method returns -1. If <paramref name="s1" /> == <paramref name="s2" /> the method returns 0. If <paramref name="s1" /> &gt; <paramref name="s2" /> the method returns 1.</returns>
      <param name="s1">The first string to compare.</param>
      <param name="s2">The second string to compare.</param>
      <param name="lang">The language. Optional</param>
      <param name="options">Specifies whether the comparison is case-sensitive.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.MSUtc(System.String)">
      <summary>Implements the ms:utcMicrosoft XPath extension function.</summary>
      <returns>A string that contains date/time information. If a string cannot be interpreted as a valid XSD date/time-related format, it returns an empty string.</returns>
      <param name="dateTime">String that contains date/time data.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.NormalizeSpace(System.String)">
      <summary>Removes leading and trailing spaces from the specified string and returns the result. Implements normalize-space function from the W3C XPath standard.</summary>
      <returns>A normalized string. </returns>
      <param name="value">The specified string.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.OuterXml(System.Xml.XPath.XPathNavigator)">
      <summary>Gets the markup representing the opening and closing tags of the node and all child nodes of the node identified by the <see cref="T:System.Xml.XPath.XPathNavigator" /> argument.</summary>
      <returns>A string that contains the opening and closing tags of the node and all child nodes of the node that is identified by the <paramref name="navigator" /> parameter.</returns>
      <param name="navigator">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> that identifies the node.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Round(System.Double)">
      <summary>Rounds value by using XPath rounding rules. Rounds towards positive infinity. Values between -0.5 and -0.0 are rounded to -0.0 (negative zero).</summary>
      <returns>The rounded number as <see cref="T:System.Double" />.</returns>
      <param name="value">
        <see cref="T:System.Double" /> number to round.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.StartsWith(System.String,System.String)">
      <summary>Implements starts-with XPath function according to the W3C specification. </summary>
      <returns>true if the first argument string starts with the second argument string; otherwise, false.</returns>
      <param name="s1">A string, the beginning of which is compared to <paramref name="s2" />.</param>
      <param name="s2">The string to compare to the beginning of <paramref name="s1" />. </param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)">
      <summary>Implements substring XPath function according to the W3C specification.</summary>
      <returns>The substring of the first argument starting at the position specified in the second argument</returns>
      <param name="value">The string from which to retrieve the substring.</param>
      <param name="startIndex">The starting character position of a substring in <paramref name="s" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)">
      <summary>Implements substring XPath function according to the W3C specification.</summary>
      <returns>The substring of the first argument, starting at the position specified in the second argument, with the length specified in the third argument.</returns>
      <param name="value">The string from which to retrieve the substring.</param>
      <param name="startIndex">The starting character position of a substring in <paramref name="s" />.</param>
      <param name="length">The number of characters in the substring.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringAfter(System.String,System.String)">
      <summary>Implements substring-after XPath function according to the W3C specification.</summary>
      <returns>The characters in s1 that occur after s2, or the empty string if s1 does not contain s2.</returns>
      <param name="s1">The string in which to locate s2. </param>
      <param name="s2">The string to locate in <paramref name="s1" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringBefore(System.String,System.String)">
      <summary>Implements substring-before XPath function according to the W3C specification.</summary>
      <returns>The characters in s1 that occur before s2, or the empty string if s1 does not contain s2.</returns>
      <param name="s1">The string in which to locate s2. </param>
      <param name="s2">The string to locate in <paramref name="s1" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.SystemProperty(System.Xml.XmlQualifiedName)">
      <summary>Implements system-property XSLT function according to the W3C specification.</summary>
      <returns>The value of the system property specified by the <paramref name="name" />.</returns>
      <param name="name">The name of the system property.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltFunctions.Translate(System.String,System.String,System.String)">
      <summary>Implements translate XPath function according to the W3C specification.</summary>
      <returns>The translated value as <see cref="T:System.String" />.</returns>
      <param name="arg">The original string.</param>
      <param name="mapString">The substring in <paramref name="arg" /> that should be replaced with <paramref name="transString" />.</param>
      <param name="transString">The string to replace <paramref name="mapString" /> with.</param>
    </member>
    <member name="T:System.Xml.Xsl.Runtime.XsltLibrary">
      <summary>Implements different XPath and XSLT functions.</summary>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)">
      <summary>Checks that the extension and script namespaces do not clash.</summary>
      <returns>An integer used for internal infrastructure only.</returns>
      <param name="nsUri">The namespace URI.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)">
      <summary>Evaluates the argument to a string that is an XML qualified name. This method implements the element-available function specified by W3C XSL Transformations (XSLT).</summary>
      <returns>true if the expanded name is the name of an instruction. If the expanded name has a namespace URI equal to the XSLT namespace URI, then it refers to an element defined by XSLT. Otherwise, the expanded-name refers to an extension element. If the expanded name has a null namespace URI, the element-available function will return false.</returns>
      <param name="name">The XML qualified name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Determines equality between collections of type <see cref="T:System.Xml.XPath.XPathItem" />.</summary>
      <returns>Returns true if the collections are equal, otherwise false.</returns>
      <param name="opCode">
        <see cref="T:System.Double" /> that specifies the operation to be performed</param>
      <param name="left">
        <see cref="T:System.Collections.Generic.IList" /> of type <see cref="T:System.Xml.XPath.XPathItem" />.</param>
      <param name="right">
        <see cref="T:System.Collections.Generic.IList" /> of type <see cref="T:System.Xml.XPath.XPathItem" />.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})">
      <summary>Formats an exception message composed of a format string supplied by the <paramref name="res" /> parameter and arguments contained by the <paramref name="args" /> parameter.</summary>
      <returns>A string that contains the formatted exception message.</returns>
      <param name="res">A string that contains the message resource.</param>
      <param name="args">A list of strings that represent arguments to the method.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)">
      <summary>Implements the format-number() XSLT function. For more information, see the number formatting section in the W3C Recommendation. </summary>
      <returns>Returns a string that indicates the number format. For more information, see the number formatting section in the W3C Recommendation.</returns>
      <param name="value">
        <see cref="T:System.Double" /> that contains the value to format.</param>
      <param name="formatPicture">String that contains the format picture.</param>
      <param name="decimalFormatName">
        <see cref="T:System.Xml.XmlQualifiedName" /> that contains the format name.</param>
      <param name="errorMessageName">String that contains the error message name.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic(System.Double,System.Double)">
      <summary>Implements the format-number() XSLT function. For more information, see the number formatting section in the W3C Recommendation. </summary>
      <returns>A string that indicates the format. For more information, see the number formatting section in the W3C Recommendation.</returns>
      <param name="value">
        <see cref="T:System.Double" /> that contains value to format.</param>
      <param name="decimalFormatterIndex">
        <see cref="T:System.Double" /> that contains the formatter index.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)">
      <summary>Implements the function-available() XSLT function. </summary>
      <returns>A Boolean value that is true if the function identified by <paramref name="name" /> is available.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> name object.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <summary>Determines whether two nodes have the same node type and, if nodes of that node type have expanded-names, the same expanded names.</summary>
      <returns>A Boolean value that is true if two nodes have the same node type and, if nodes of that node type have expanded names, the same expanded names.</returns>
      <param name="nav1">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object to compare.</param>
      <param name="nav2">
        <see cref="T:System.Xml.XPath.XPathNavigator" /> object to compare.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.LangToLcid(System.String,System.Boolean)">
      <summary>Converts the language identifier (as specified in the xml:lang attribute) to the culture identifier (LCID).</summary>
      <returns>A string that contains the culture identifier.</returns>
      <param name="lang">String that indicates language.</param>
      <param name="forwardCompatibility">Boolean value that is true if language is forward compatible.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)">
      <summary>Gets a string that indicates the number format.</summary>
      <returns>A string that indicates the number format. Used for internal infrastructure only.</returns>
      <param name="value">
        <see cref="T:System.Collections.Generic.IList" /> of strings that represent arguments to the method.</param>
      <param name="formatString">
        <see cref="T:System.Double" /> that indicates the format string.</param>
      <param name="lang">
        <see cref="T:System.Double" /> that indicates the language.</param>
      <param name="letterValue">String that contains the letter value.</param>
      <param name="groupingSeparator">String that contains the grouping separator.</param>
      <param name="groupingSize">
        <see cref="T:System.Double" /> that contains the grouping size.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)">
      <summary>Registers a decimal-format with the given expanded name. For more information, see the number formatting section in the W3C Recommendation. </summary>
      <returns>In the current implementation the return value is always 0.</returns>
      <param name="name">
        <see cref="T:System.Xml.XmlQualifiedName" /> object that contains name.</param>
      <param name="infinitySymbol">String containing infinity symbol.</param>
      <param name="nanSymbol">String containing NaN symbol.</param>
      <param name="characters">String containing characters to format.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)">
      <summary>Registers a decimal formatter object and returns a unique index assigned to it. The decimal formatter object is used by the format-number() XSLT function. For more information, see the number formatting section in the W3C Recommendation.</summary>
      <returns>Returns a unique index of type <see cref="T:System.Double" /> assigned to a decimal formatter object.</returns>
      <param name="formatPicture">String that contains the format picture.</param>
      <param name="infinitySymbol">String that contains the infinity symbol.</param>
      <param name="nanSymbol">String that contains the NaN symbol.</param>
      <param name="characters">String that contains characters to format.</param>
    </member>
    <member name="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <summary>Evaluates whether the <paramref name="left" /> expression is greater than or equal to, or less than or equal to, the <paramref name="right" /> expression based on the <paramref name="opCode" /> passed.</summary>
      <returns>A Boolean value that is true if the left expression is greater than or equal to the right expression.</returns>
      <param name="opCode">Specifies how to perform the evaluation of two expressions:</param>
      <param name="left">Expression to evaluate.</param>
      <param name="right">Expression to evaluate.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Data.Services.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Data.Services</name>
  </assembly>
  <members>
    <member name="T:System.Data.Services.ChangeInterceptorAttribute">
      <summary>The <see cref="T:System.Data.Services.ChangeInterceptorAttribute" /> on a method is used to process updates on the specified entity set name.</summary>
    </member>
    <member name="M:System.Data.Services.ChangeInterceptorAttribute.#ctor(System.String)">
      <summary>Creates a new change interceptor for an entity set specified by the parameter <paramref name="entitySetName" />.</summary>
      <param name="entitySetName">The name of the entity set that contains the entity to which the interceptor applies.</param>
    </member>
    <member name="P:System.Data.Services.ChangeInterceptorAttribute.EntitySetName">
      <summary>Gets the name of the entity set to which the interceptor applies.</summary>
      <returns>The string value that represents entity set name.</returns>
    </member>
    <member name="T:System.Data.Services.DataService`1">
      <summary>The main entry point for developing an ADO.NET Data Service. </summary>
      <typeparam name="T">Type that defines the data service.</typeparam>
    </member>
    <member name="M:System.Data.Services.DataService`1.#ctor">
      <summary>Creates a new data service that deploys data of the type indicated by the template class.</summary>
    </member>
    <member name="M:System.Data.Services.DataService`1.AttachHost(System.Data.Services.IDataServiceHost2)">
      <summary>Attaches the data service host to the data service identified by the parameter <paramref name="host" />.</summary>
      <param name="host">An instance of <see cref="T:System.Data.Services.IDataServiceHost2" />.</param>
    </member>
    <member name="M:System.Data.Services.DataService`1.CreateDataSource">
      <summary>Creates a data source of the template class that will be used by the data service.</summary>
      <returns>An instance of the data source.</returns>
    </member>
    <member name="P:System.Data.Services.DataService`1.CurrentDataSource">
      <summary>Gets the data source instance currently being used to process the request.</summary>
      <returns>The data source instance for the service.</returns>
    </member>
    <member name="M:System.Data.Services.DataService`1.HandleException(System.Data.Services.HandleExceptionArgs)">
      <summary>Called when an exception is raised while processing a request.</summary>
      <param name="args">Exception arguments.</param>
    </member>
    <member name="M:System.Data.Services.DataService`1.OnStartProcessingRequest(System.Data.Services.ProcessRequestArgs)">
      <summary>Called before processing each request. For batch requests, it is called one time for the top batch request and one time for each operation in the batch.</summary>
      <param name="args">
        <see cref="T:System.Data.Services.ProcessRequestArgs" /> that contains information about the request.</param>
    </member>
    <member name="P:System.Data.Services.DataService`1.ProcessingPipeline">
      <summary>Gets an object that defines the events for the data service processing pipeline.</summary>
      <returns>A <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> object that is used to define events for the data service processing pipeline.</returns>
    </member>
    <member name="M:System.Data.Services.DataService`1.ProcessRequest">
      <summary>Processes an HTTP request.</summary>
    </member>
    <member name="M:System.Data.Services.DataService`1.ProcessRequestForMessage(System.IO.Stream)">
      <summary>Processes an HTTP request.</summary>
      <returns>Response message.</returns>
      <param name="messageBody">The body of the HTTP request.</param>
    </member>
    <member name="T:System.Data.Services.DataServiceBehavior">
      <summary>Adds settings that define behavior to a custom data service.</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.AcceptCountRequests">
      <summary>Gets or sets whether requests with the $count path segment or the $inlinecount query options are accepted.</summary>
      <returns>true if count requests are supported; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.AcceptProjectionRequests">
      <summary>Gets or sets whether projection requests should be accepted.</summary>
      <returns>true if projection requests are supported; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.InvokeInterceptorsOnLinkDelete">
      <summary>Gets or sets whether to invoke change interceptors when a link is deleted.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true when interceptors should be invoked; otherwise false. </returns>
    </member>
    <member name="P:System.Data.Services.DataServiceBehavior.MaxProtocolVersion">
      <summary>Gets or sets the maximum protocol version that is supported by the response sent by the data service.</summary>
      <returns>A <see cref="T:System.Data.Services.Common.DataServiceProtocolVersion" /> that is the maximum version allowed in the response.</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceConfiguration">
      <summary>Manages the configuration of WCF Data Services.</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.DataServiceBehavior">
      <summary>Gets a <see cref="T:System.Data.Services.DataServiceBehavior" /> object that defines additional behaviors of the data service.</summary>
      <returns>A <see cref="T:System.Data.Services.DataServiceBehavior" /> object.</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.EnableTypeAccess(System.String)">
      <summary>Registers a data type with the data service runtime so that it can be used by a custom data service provider.</summary>
      <param name="typeName">The namespace-qualified name of the type that is enabled for use with the custom data service provider.</param>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.EnableTypeConversion">
      <summary>Gets or sets whether the data service runtime should convert the type that is contained in the payload to the actual property type that is specified in the request.</summary>
      <returns>A Boolean value that indicates whether to perform the conversion.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxBatchCount">
      <summary>Gets or sets the maximum number of change sets and query operations that are allowed in a single batch.</summary>
      <returns>A value that is the maximum number of change sets.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxChangesetCount">
      <summary>Gets or set the maximum number of changes that can be included in a single change set.</summary>
      <returns>The maximum number of changes allowed.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandCount">
      <summary>Gets or sets the maximum number of related entities that can be included in a single request by using the $expand operator.</summary>
      <returns>The maximum number of related entities.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxExpandDepth">
      <summary>Get or sets the maximum number of related entities that can be included in an $expand path in a single request.</summary>
      <returns>The maximum depth of an $expand path.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxObjectCountOnInsert">
      <summary>Get or sets the maximum number of objects to insert that can be contained in a single POST request.</summary>
      <returns>The maximum number of objects.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.MaxResultsPerCollection">
      <summary>Get or sets the maximum number of items in each returned collection.</summary>
      <returns>The maximum number of items.</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.RegisterKnownType(System.Type)">
      <summary>Adds a type to the list of types that are recognized by the data service. </summary>
      <param name="type">Type to add to the collection of known types.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <summary>Sets the permissions for the specified entity set resource.</summary>
      <param name="name">Name of the entity set for which to set permissions.</param>
      <param name="rights">Access rights to be granted to this resource, passed as an <see cref="T:System.Data.Services.EntitySetRights" /> value.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetEntitySetPageSize(System.String,System.Int32)">
      <summary>Sets the maximum page size for an entity set resource.</summary>
      <param name="name">Name of entity set resource for which to set the page size.</param>
      <param name="size">Page size for the entity set resource that is specified in <paramref name="name" />.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <summary>Sets the permissions for the specified service operation.</summary>
      <param name="name">Name of the service operation for which to set permissions.</param>
      <param name="rights">Access rights to be granted to this resource, passed as a <see cref="T:System.Data.Services.ServiceOperationRights" /> value.</param>
    </member>
    <member name="P:System.Data.Services.DataServiceConfiguration.UseVerboseErrors">
      <summary>Gets or sets whether verbose errors should be returned by the data service.</summary>
      <returns>Whether verbose errors are returned.</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceException">
      <summary>Represents an instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a specified message that describes the error. </summary>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class. </summary>
      <param name="statusCode">The HTTP status code returned by the exception.</param>
      <param name="message">The error message for the exception.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.Int32,System.String,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class. </summary>
      <param name="statusCode">The HTTP status code of the exception.</param>
      <param name="errorCode">The string value that contains the error code.</param>
      <param name="message">The string value that contains the error message.</param>
      <param name="messageXmlLang">The string value that indicates the language of the error message.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Services.DataServiceException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.DataServiceException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="P:System.Data.Services.DataServiceException.ErrorCode">
      <summary>Gets the error code.</summary>
      <returns>The integer value that represents the error code.</returns>
    </member>
    <member name="M:System.Data.Services.DataServiceException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets data on the object that caused the exception.</summary>
      <param name="info">
        <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
      <param name="context">
        <see cref="T:System.Runtime.Serialization.StreamingContext" />.</param>
    </member>
    <member name="P:System.Data.Services.DataServiceException.MessageLanguage">
      <summary>Gets the error message language.</summary>
      <returns>The string value that represents the message language.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceException.StatusCode">
      <summary>Gets the HTTP status code returned by the exception.</summary>
      <returns>HTTP status code for the exception.</returns>
    </member>
    <member name="T:System.Data.Services.DataServiceHost">
      <summary>The WCF Data Services class derived from <see cref="T:System.ServiceModel.Web.WebServiceHost" /> used to instantiate data services.</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Instantiates <see cref="T:System.Data.Services.DataServiceHost" /> for ADOWCF Data Services.</summary>
      <param name="serviceType">Identifies the WCF Data Services to the host.</param>
      <param name="baseAddresses">The URI of the host.</param>
    </member>
    <member name="T:System.Data.Services.DataServiceHostFactory">
      <summary>The class used by the infrastructure of WCF Data Services to connect to Windows Communication Foundation (WCF). </summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHostFactory.#ctor">
      <summary>Creates a new instance of DataServiceHostFactory.</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates a new <see cref="T:System.Data.Services.DataServiceHost" /> from the URI.</summary>
      <returns>New <see cref="T:System.Data.Services.DataServiceHost" />.</returns>
      <param name="serviceType">Specifies the type of WCF service to host.</param>
      <param name="baseAddresses">An array of base addresses for the service. </param>
    </member>
    <member name="T:System.Data.Services.DataServiceOperationContext">
      <summary>Represents the current operation being processed.</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteRequestUri">
      <summary>Get the request URI for the current operation.</summary>
      <returns>The <see cref="T:System.Uri" /> of the operation.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.AbsoluteServiceUri">
      <summary>Gets the base service URI for the request.</summary>
      <returns>The base <see cref="T:System.Uri" /> of the operation.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.IsBatchRequest">
      <summary>Gets a value that indicates whether the current operation is part of a batch request.</summary>
      <returns>true when the operation is part of a batch request; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.RequestHeaders">
      <summary>Gets the request headers for the current operation.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> object that contains the request headers.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.RequestMethod">
      <summary>Gets the HTTP request method for the operation</summary>
      <returns>The HTTP request method.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.ResponseHeaders">
      <summary>Gets the response headers for the current operation.</summary>
      <returns>A <see cref="T:System.Net.WebHeaderCollection" /> object that contains the response headers.</returns>
    </member>
    <member name="P:System.Data.Services.DataServiceOperationContext.ResponseStatusCode">
      <summary>Gets or sets the status code of the response.</summary>
      <returns>The status code of the operation response. </returns>
    </member>
    <member name="T:System.Data.Services.DataServiceProcessingPipeline">
      <summary>Defines the events for the data service processing pipeline.</summary>
    </member>
    <member name="M:System.Data.Services.DataServiceProcessingPipeline.#ctor">
      <summary>Creates a new <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> instance. </summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedChangeset">
      <summary>Occurs after the change set has been processed.</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessedRequest">
      <summary>Occurs after the request has been processed.</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingChangeset">
      <summary>Occurs before the change set is processed.</summary>
    </member>
    <member name="E:System.Data.Services.DataServiceProcessingPipeline.ProcessingRequest">
      <summary>Occurs before the request is processed. </summary>
    </member>
    <member name="T:System.Data.Services.DataServiceProcessingPipelineEventArgs">
      <summary>Event argument class for <see cref="T:System.Data.Services.DataServiceProcessingPipeline" /> events.</summary>
    </member>
    <member name="P:System.Data.Services.DataServiceProcessingPipelineEventArgs.OperationContext">
      <summary>Gets the context of the operation that raised the event.</summary>
      <returns>A <see cref="T:System.Data.Services.DataServiceOperationContext" /> that is the operation context. </returns>
    </member>
    <member name="T:System.Data.Services.EntitySetRights">
      <summary>An enumeration used to define access rights to data that is deployed by WCF Data Services.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.None">
      <summary>Denies all rights to access data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.ReadSingle">
      <summary>Authorization to read single data items.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.ReadMultiple">
      <summary>Authorization to read sets of data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteAppend">
      <summary>Authorization to create new data items in data sets.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteReplace">
      <summary>Authorization to replace data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteDelete">
      <summary>Authorization to delete data items from data sets.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.WriteMerge">
      <summary>Authorization to merge data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.AllRead">
      <summary>Authorization to read data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.AllWrite">
      <summary>Authorization to write data.</summary>
    </member>
    <member name="F:System.Data.Services.EntitySetRights.All">
      <summary>Authorization to create, read, update, and delete data.</summary>
    </member>
    <member name="T:System.Data.Services.ETagAttribute">
      <summary>This attribute on an entity type is used to specify the properties that determine changes in content.</summary>
    </member>
    <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.ETagAttribute" /> class. </summary>
      <param name="propertyName">The string value containing properties used in eTag value.</param>
    </member>
    <member name="M:System.Data.Services.ETagAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.ETagAttribute" /> class.</summary>
      <param name="propertyNames">String value containing properties used in eTag value.</param>
    </member>
    <member name="P:System.Data.Services.ETagAttribute.PropertyNames">
      <summary>Gets the names of properties used in the <see cref="T:System.Data.Services.ETagAttribute" />.</summary>
      <returns>String value containing property names.</returns>
    </member>
    <member name="T:System.Data.Services.ExpandSegment">
      <summary>The segment of a query that indicates whether data should be returned inline instead of as deferred content.</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)">
      <summary>Initializes an <see cref="T:System.Data.Services.ExpandSegment" /> object with the specified property name and a filtering expression, possibly null.</summary>
      <param name="name">The name of the property to be expanded.</param>
      <param name="filter">The filter option in the query to which the expand segment applies.</param>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.ExpandedProperty">
      <summary>Gets the property to be expanded.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.Filter">
      <summary>The filter option in the query to which the expand segment applies.</summary>
      <returns>An expression that specifies the filter on target data.</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.HasFilter">
      <summary>A Boolean value that indicates whether the expand statement is used with a filter expression.</summary>
      <returns>True or false.</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.MaxResultsExpected">
      <summary>Gets the maximum number of results expected.</summary>
      <returns>The integer value that indicates maximum number of results.</returns>
    </member>
    <member name="P:System.Data.Services.ExpandSegment.Name">
      <summary>The name of the property to be expanded.</summary>
      <returns>A string value containing the name of the property.</returns>
    </member>
    <member name="M:System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})">
      <summary>A Boolean value that indicates whether the path includes a filter option on target data.</summary>
      <returns>True if any of the segments in the path has a filter; false otherwise.</returns>
      <param name="path">The enumeration of segments to check for filters.</param>
    </member>
    <member name="T:System.Data.Services.ExpandSegmentCollection">
      <summary>The segments of a query that can be expanded by the $expand clause that follows a query.</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor">
      <summary>Creates a collection of expand segments for a query.</summary>
    </member>
    <member name="M:System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)">
      <summary>Initializes a new collection of expand segments that is empty and has the specified initial capacity.</summary>
      <param name="capacity">The number of expand segments that the new collection can initially store.</param>
    </member>
    <member name="P:System.Data.Services.ExpandSegmentCollection.HasFilter">
      <summary>Boolean value that indicates whether segments to be expanded include a filter clause.</summary>
      <returns>Boolean value that indicates whether segments to be expanded include a filter clause. </returns>
    </member>
    <member name="T:System.Data.Services.HandleExceptionArgs">
      <summary>Specifies details of an exception that has occurred and the details of the associated HTTP response.</summary>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.Exception">
      <summary>Gets or sets the exception that will be processed and returned in the response.</summary>
      <returns>The exception that will be processed and returned in the response.</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseContentType">
      <summary>Gets the response content type.</summary>
      <returns>The string value that indicates the response format.</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseStatusCode">
      <summary>Gets the status code that will be sent back in the HTTP header section of the response when an error occurs on the data service.</summary>
      <returns>An integer value of the HTTP response status code. </returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.ResponseWritten">
      <summary>Gets a value indicating whether the response has been written. </summary>
      <returns>Boolean value that indicates whether response has been written.</returns>
    </member>
    <member name="P:System.Data.Services.HandleExceptionArgs.UseVerboseErrors">
      <summary>Gets or sets a Boolean value that indicates whether verbose errors will be returned.</summary>
      <returns>The Boolean value that indicates whether verbose errors will be returned.</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceConfiguration">
      <summary>The <see cref="T:System.Data.Services.IDataServiceConfiguration" /> is used by WCF Data Services to set up the behavior of the service, including rights on entity sets and service operations, limits on the allowed requests, registering types not discoverable by default, and the default verbosity on error handling.</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxBatchCount">
      <summary>Gets the maximum number of requests that can be handled in a batch.</summary>
      <returns>Integer value that indicates the maximum number of requests that can be handled in a batch.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxChangesetCount">
      <summary>Gets the maximum number of change sets that can be handled in a batch.</summary>
      <returns>Integer value that indicates the maximum number of change sets that can be handled in a batch.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandCount">
      <summary>Gets or sets the maximum number of segments that can be expanded by the $expand query option for all requests to the data service.  </summary>
      <returns>The maximum number of segments to expand.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxExpandDepth">
      <summary>Gets or sets a maximum number of segments supported in a single $expand path for all requests to the data service.</summary>
      <returns>Integer representing the maximum number of supported segments in $expand path.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxObjectCountOnInsert">
      <summary>Gets or sets the maximum number of objects that can be inserted in a single request. </summary>
      <returns>The integer value that contains the maximum number of objects that can be inserted in a single request.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.MaxResultsPerCollection">
      <summary>Gets the maximum number of results per collection.</summary>
      <returns>The integer value that indicates the maximum number of results per collection.</returns>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.RegisterKnownType(System.Type)">
      <summary>Registers a resource type for use by the data service.</summary>
      <param name="type">The resource type to register.</param>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.SetEntitySetAccessRule(System.String,System.Data.Services.EntitySetRights)">
      <summary>Sets the access rules for the specified entity set.</summary>
      <param name="name">The name of the entity set for configured access.</param>
      <param name="rights">The rights allowed for the entity set.</param>
    </member>
    <member name="M:System.Data.Services.IDataServiceConfiguration.SetServiceOperationAccessRule(System.String,System.Data.Services.ServiceOperationRights)">
      <summary>Sets the access rules for the specified service operation.</summary>
      <param name="name">The name of the service operation on which to set access rights.</param>
      <param name="rights">The rights allowed according to <see cref="T:System.Data.Services.ServiceOperationRights" /> enumeration. </param>
    </member>
    <member name="P:System.Data.Services.IDataServiceConfiguration.UseVerboseErrors">
      <summary>Gets or sets whether verbose errors are used by default for all responses from the data service.  </summary>
      <returns>A Boolean value that indicates whether verbose errors are returned.</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceHost">
      <summary>Interface that specifies interactions between WCF Data Services and its hosting environment.</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.AbsoluteRequestUri">
      <summary>Gets an absolute URI that is the URI as sent by the client.</summary>
      <returns>A string that is the absolute URI of the request.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.AbsoluteServiceUri">
      <summary>Gets an absolute URI that is the root URI of the data service.</summary>
      <returns>A string that is the absolute root URI of the data service.</returns>
    </member>
    <member name="M:System.Data.Services.IDataServiceHost.GetQueryStringItem(System.String)">
      <summary>Gets a data item identified by the identity key contained by the parameter of the method.</summary>
      <returns>The data item requested by the query serialized as a string.</returns>
      <param name="item">String value containing identity key of item requested.</param>
    </member>
    <member name="M:System.Data.Services.IDataServiceHost.ProcessException(System.Data.Services.HandleExceptionArgs)">
      <summary>Handles a data service exception using information in  the <paramref name="args" /> parameter.</summary>
      <param name="args">
        <see cref="T:System.Data.Services.HandleExceptionArgs" />  that contains information on the exception object.</param>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestAccept">
      <summary>The transport protocol specified by the request accept header.</summary>
      <returns>String that indicates the transport protocol required by the request.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestAcceptCharSet">
      <summary>Gets a string representing the value of the Accept-Charset HTTP header.</summary>
      <returns>String representing the value of the Accept-Charset HTTP header.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestContentType">
      <summary>Gets the transport protocol specified by the content type header.</summary>
      <returns>String value that indicates content type.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestHttpMethod">
      <summary>Gets the request method of GET, PUT, POST, or DELETE.</summary>
      <returns>String value that indicates request method.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestIfMatch">
      <summary>Gets the value for the If-Match header on the current request.</summary>
      <returns>String value for the If-Match header on the current request.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestIfNoneMatch">
      <summary>Gets the value for the If-None-Match header on the current request.</summary>
      <returns>String value for the If-None-Match header on the current request.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestMaxVersion">
      <summary>Gets the value that identifies the highest version that the request client is able to process.</summary>
      <returns>A string that contains the highest version that the request client is able to process, possibly null.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestStream">
      <summary>Gets the stream that contains the HTTP request body.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> object that contains the request body.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.RequestVersion">
      <summary>Gets the value that identifies the version of the request that the client submitted, possibly null.</summary>
      <returns>A string that identifies the version of the request that the client submitted, possibly null.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseCacheControl">
      <summary>Gets a string value that represents cache control information.</summary>
      <returns>A string value that represents cache control information.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseContentType">
      <summary>Gets the transport protocol of the response.</summary>
      <returns>String value containing the content type.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseETag">
      <summary>Gets an eTag value that represents the state of data in response.</summary>
      <returns>A string value that represents the eTag state value.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseLocation">
      <summary>Gets or sets the service location.</summary>
      <returns>String that contains the service location.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseStatusCode">
      <summary>Gets or sets the response code that indicates results of query.</summary>
      <returns>Integer value that contains the response code.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseStream">
      <summary>Gets the response stream to which the HTTP response body will be written.</summary>
      <returns>
        <see cref="T:System.IO.Stream" /> object to which the response body will be written.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost.ResponseVersion">
      <summary>Gets the version used by the host in the response.</summary>
      <returns>A string value that contains the host version.</returns>
    </member>
    <member name="T:System.Data.Services.IDataServiceHost2">
      <summary>Defines extensions to <see cref="T:System.Data.Services.IDataServiceHost" /> needed for request and response headers in HTTP.</summary>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost2.RequestHeaders">
      <summary>Request header for an HTTP request.</summary>
      <returns>String value of header.</returns>
    </member>
    <member name="P:System.Data.Services.IDataServiceHost2.ResponseHeaders">
      <summary>Response header for an HTTP response. </summary>
      <returns>String value of header.</returns>
    </member>
    <member name="T:System.Data.Services.IExpandedResult">
      <summary>Declares the members required to support enumerators for results and associated segments on an WCF Data Services $expand query option.  </summary>
    </member>
    <member name="P:System.Data.Services.IExpandedResult.ExpandedElement">
      <summary>Gets the element with expanded properties.</summary>
      <returns>The object in a property expanded by <see cref="T:System.Data.Services.IExpandedResult" />.</returns>
    </member>
    <member name="M:System.Data.Services.IExpandedResult.GetExpandedPropertyValue(System.String)">
      <summary>Gets the value for a named property of the result.</summary>
      <returns>The value of the property.</returns>
      <param name="name">The name of the property for which to get enumerable results.</param>
    </member>
    <member name="T:System.Data.Services.IExpandProvider">
      <summary>This interface declares the methods required to support the $expand query option for an WCF Data Services.</summary>
    </member>
    <member name="M:System.Data.Services.IExpandProvider.ApplyExpansions(System.Linq.IQueryable,System.Collections.Generic.ICollection{System.Data.Services.ExpandSegmentCollection})">
      <summary>Applies expansions to the specified <paramref name="queryable" /> parameter.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object of the same type as the supplied <paramref name="queryable" /> object that includes the specified <paramref name="expandPaths" />.</returns>
      <param name="queryable">The <see cref="T:System.Linq.IQueryable`1" /> object to expand.</param>
      <param name="expandPaths">A collection of <see cref="T:System.Data.Services.ExpandSegmentCollection" /> paths to expand. </param>
    </member>
    <member name="T:System.Data.Services.IgnorePropertiesAttribute">
      <summary>Controls the visibility of a property or properties by WCF Data Services.</summary>
    </member>
    <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> class. </summary>
      <param name="propertyName">A string value that contains the property or properties to be attributed.</param>
    </member>
    <member name="M:System.Data.Services.IgnorePropertiesAttribute.#ctor(System.String[])">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> class. </summary>
      <param name="propertyNames">A string value that contains the property or properties to be attributed.</param>
    </member>
    <member name="P:System.Data.Services.IgnorePropertiesAttribute.PropertyNames">
      <summary>Gets or sets the property name or names to controlled by the <see cref="T:System.Data.Services.IgnorePropertiesAttribute" /> attribute.</summary>
    </member>
    <member name="T:System.Data.Services.IRequestHandler">
      <summary>Provides access to members that control handing of request messages. </summary>
    </member>
    <member name="M:System.Data.Services.IRequestHandler.ProcessRequestForMessage(System.IO.Stream)">
      <summary>Provides an entry point for the request. </summary>
      <returns>The resulting message for the supplied request.</returns>
      <param name="messageBody">The <see cref="T:System.IO.Stream" /> object that contains the request.</param>
    </member>
    <member name="T:System.Data.Services.IUpdatable">
      <summary>An interface used to insert or update a resource by the HTTP POST method.</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.AddReferenceToCollection(System.Object,System.String,System.Object)">
      <summary>Adds the specified value to the collection.</summary>
      <param name="targetResource">Target object that defines the property.</param>
      <param name="propertyName">The name of the collection property to which the resource should be added..</param>
      <param name="resourceToBeAdded">The opaque object representing the resource to be added.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ClearChanges">
      <summary>Cancels a change to the data.</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.CreateResource(System.String,System.String)">
      <summary>Creates the resource of the specified type and that belongs to the specified container.</summary>
      <returns>The object representing a resource of specified type and belonging to the specified container.</returns>
      <param name="containerName">The name of the entity set to which the resource belongs.</param>
      <param name="fullTypeName">The full namespace-qualified type name of the resource.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.DeleteResource(System.Object)">
      <summary>Deletes the specified resource.</summary>
      <param name="targetResource">The resource to be deleted.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.GetResource(System.Linq.IQueryable,System.String)">
      <summary>Gets the resource of the specified type identified by a query and type name. </summary>
      <returns>An opaque object representing a resource of the specified type, referenced by the specified query.</returns>
      <param name="query">Language integrated query (LINQ) pointing to a particular resource.</param>
      <param name="fullTypeName">The fully qualified type name of resource.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.GetValue(System.Object,System.String)">
      <summary>Gets the value of the specified property on the target object.</summary>
      <returns>The value of the object.</returns>
      <param name="targetResource">An opaque object that represents a resource.</param>
      <param name="propertyName">The name of the property whose value needs to be retrieved.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.RemoveReferenceFromCollection(System.Object,System.String,System.Object)">
      <summary>Removes the specified value from the collection.</summary>
      <param name="targetResource">The target object that defines the property.</param>
      <param name="propertyName">The name of the property whose value needs to be updated.</param>
      <param name="resourceToBeRemoved">The property value that needs to be removed.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ResetResource(System.Object)">
      <summary>Resets the resource identified by the parameter <paramref name="resource " />to its default value.</summary>
      <returns>The resource with its value reset to the default value.</returns>
      <param name="resource">The resource to be updated.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.ResolveResource(System.Object)">
      <summary>Returns the instance of the resource represented by the specified resource object.</summary>
      <returns>Returns the instance of the resource represented by the specified resource object.</returns>
      <param name="resource">The object representing the resource whose instance needs to be retrieved.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SaveChanges">
      <summary>Saves all the changes that have been made by using the <see cref="T:System.Data.Services.IUpdatable" /> APIs.</summary>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SetReference(System.Object,System.String,System.Object)">
      <summary>Sets the value of the specified reference property on the target object.</summary>
      <param name="targetResource">The target object that defines the property.</param>
      <param name="propertyName">The name of the property whose value needs to be updated.</param>
      <param name="propertyValue">The property value to be updated.</param>
    </member>
    <member name="M:System.Data.Services.IUpdatable.SetValue(System.Object,System.String,System.Object)">
      <summary>Sets the value of the property with the specified name on the target resource to the specified property value.</summary>
      <param name="targetResource">The target object that defines the property.</param>
      <param name="propertyName">The name of the property whose value needs to be updated.</param>
      <param name="propertyValue">The property value for update.</param>
    </member>
    <member name="T:System.Data.Services.MimeTypeAttribute">
      <summary>Indicates the MIME type of HTTP request.</summary>
    </member>
    <member name="M:System.Data.Services.MimeTypeAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.MimeTypeAttribute" /> class. </summary>
      <param name="memberName">The name of the attribute.</param>
      <param name="mimeType">The MIME type of the attribute.</param>
    </member>
    <member name="P:System.Data.Services.MimeTypeAttribute.MemberName">
      <summary>Gets the name of the attribute.</summary>
      <returns>A string value that contains the name of the attribute. </returns>
    </member>
    <member name="P:System.Data.Services.MimeTypeAttribute.MimeType">
      <summary>Gets the MIME type of a request.</summary>
      <returns>A string that contains the MIME type.</returns>
    </member>
    <member name="T:System.Data.Services.ProcessRequestArgs">
      <summary>Represents arguments used by an HTTP request to the data service. </summary>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.IsBatchOperation">
      <summary>Gets a Boolean value that indicates whether the HTTP request to the data service is a batch operation.</summary>
      <returns>The Boolean value that indicates whether the HTTP request to the data service is a batch operation. </returns>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.OperationContext">
      <summary>Gets the context that contains information about the current operation being processed.</summary>
      <returns>An <see cref="T:System.Data.Services.DataServiceOperationContext" /> object that contains information about the current operation. </returns>
    </member>
    <member name="P:System.Data.Services.ProcessRequestArgs.RequestUri">
      <summary>Gets the URI of an HTTP request to be process.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the URI of the request to be processed.</returns>
    </member>
    <member name="T:System.Data.Services.QueryInterceptorAttribute">
      <summary>The <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> on a method annotates it as a query interceptor on the specified entity set.</summary>
    </member>
    <member name="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> class for the entity set specified by the <paramref name="entitySetName" /> parameter.</summary>
      <param name="entitySetName">The name of the entity set that contains the entity to which the interceptor applies.</param>
    </member>
    <member name="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName">
      <summary>Gets the name of the entity set that contains the entity to which the interceptor applies.</summary>
      <returns>A string that indicates the name of the entity set that contains the entity to which the interceptor applies.</returns>
    </member>
    <member name="T:System.Data.Services.ServiceOperationRights">
      <summary>An enumeration used to define access rights to service operations deployed by WCF Data Services.</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.None">
      <summary>No authorization to access the service operation.</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.ReadSingle">
      <summary>Authorization to read a single data item by using the service operation.</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.ReadMultiple">
      <summary>Authorization to read multiple data items by using the service operation.</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.AllRead">
      <summary>Authorization to read single or multiple data items deployed by the service operation.</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.All">
      <summary>All rights assigned to the service operation..</summary>
    </member>
    <member name="F:System.Data.Services.ServiceOperationRights.OverrideEntitySetRights">
      <summary>Overrides entity set rights that are explicitly defined in the data service with the service operation rights.</summary>
    </member>
    <member name="T:System.Data.Services.SingleResultAttribute">
      <summary>Attribute used on service operations to specify that they return a single instance of their return element. </summary>
    </member>
    <member name="M:System.Data.Services.SingleResultAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Services.SingleResultAttribute" /> class. </summary>
    </member>
    <member name="T:System.Data.Services.UpdateOperations">
      <summary>An enumeration used to specify the update operations that were performed on an entity. </summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.None">
      <summary>No operations were performed on the resource.</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Add">
      <summary>The entity was added.</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Change">
      <summary>The entity was modified.</summary>
    </member>
    <member name="F:System.Data.Services.UpdateOperations.Delete">
      <summary>The entity was deleted.</summary>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`1">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">Type of the expanded element.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.Description">
      <summary>Gets or sets the description for the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" />.</summary>
      <returns>The description of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`1" />.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.ExpandedElement">
      <summary>Gets or sets the element with expanded properties.</summary>
      <returns>The object in a property expanded by <see cref="T:System.Data.Services.IExpandedResult" />.</returns>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.GetExpandedPropertyValue(System.String)">
      <summary>Returns the value of the expanded property.</summary>
      <returns>The value of the property.</returns>
      <param name="name">The name of the property. </param>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`1.InternalGetExpandedPropertyValue(System.Int32)">
      <summary>Returns a property object of the expanded property.</summary>
      <returns>The property value.</returns>
      <param name="nameIndex">The index of the property. </param>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`1.System#Data#Services#IExpandedResult#ExpandedElement">
      <summary>Gets or sets the element with expanded properties.</summary>
      <returns>The object in a property expanded by <see cref="T:System.Data.Services.IExpandedResult" />.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`10">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
      <typeparam name="TProperty7">The type of the property to expand.</typeparam>
      <typeparam name="TProperty8">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`10.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`10" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty7">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`10.ProjectedProperty8">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`11">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
      <typeparam name="TProperty7">The type of the property to expand.</typeparam>
      <typeparam name="TProperty8">The type of the property to expand.</typeparam>
      <typeparam name="TProperty9">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`11.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`11" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty7">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty8">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`11.ProjectedProperty9">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`12">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
      <typeparam name="TProperty7">The type of the property to expand.</typeparam>
      <typeparam name="TProperty8">The type of the property to expand.</typeparam>
      <typeparam name="TProperty9">The type of the property to expand.</typeparam>
      <typeparam name="TProperty10">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`12.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`12" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty10">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty7">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty8">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`12.ProjectedProperty9">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`13">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
      <typeparam name="TProperty7">The type of the property to expand.</typeparam>
      <typeparam name="TProperty8">The type of the property to expand.</typeparam>
      <typeparam name="TProperty9">The type of the property to expand.</typeparam>
      <typeparam name="TProperty10">The type of the property to expand.</typeparam>
      <typeparam name="TProperty11">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`13.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`13" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty10">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty11">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty7">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty8">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`13.ProjectedProperty9">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`2">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`2.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`2" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`2.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`3">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`3.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`3" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`3.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`4">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`4.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`4" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`4.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`5">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`5.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`4" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`5.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`6">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`6.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`6" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`6.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`7">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`7.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`7" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`7.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`8">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`8.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`8" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`8.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ExpandedWrapper`9">
      <summary>This class is used internally by the system to implement support for queries with eager loading of related entities.</summary>
      <typeparam name="TExpandedElement">The type of the expanded element.</typeparam>
      <typeparam name="TProperty0">The type of the property to expand.</typeparam>
      <typeparam name="TProperty1">The type of the property to expand.</typeparam>
      <typeparam name="TProperty2">The type of the property to expand.</typeparam>
      <typeparam name="TProperty3">The type of the property to expand.</typeparam>
      <typeparam name="TProperty4">The type of the property to expand.</typeparam>
      <typeparam name="TProperty5">The type of the property to expand.</typeparam>
      <typeparam name="TProperty6">The type of the property to expand.</typeparam>
      <typeparam name="TProperty7">The type of the property to expand.</typeparam>
    </member>
    <member name="M:System.Data.Services.Internal.ExpandedWrapper`9.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Data.Services.Internal.ExpandedWrapper`9" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty0">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty1">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty2">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty3">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty4">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty5">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty6">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ExpandedWrapper`9.ProjectedProperty7">
      <summary>Get or sets the property to expand.</summary>
      <returns>The property to expand.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper">
      <summary>Provides a wrapper over the result element with the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper" /> class.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.GetProjectedPropertyValue(System.String)">
      <summary>Gets the value of the named property for the result.</summary>
      <returns>The value for the named property of the result.</returns>
      <param name="propertyName">Name of property for which to get the value.</param>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper.InternalGetProjectedPropertyValue(System.Int32)">
      <summary>Gets the value for the specified property by its index.</summary>
      <returns>The value for the property.</returns>
      <param name="propertyIndex">Index of the property for which to get the value.</param>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper.PropertyNameList">
      <summary>Gets a list of property names as text in a comma-separated format.</summary>
      <returns>List of comma-separated names.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper.ResourceTypeName">
      <summary>Gets the full name of the <see cref="T:System.Data.Services.Providers.ResourceType" /> that represents the type of this result.</summary>
      <returns>The full name of the type.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper0">
      <summary>Provides a wrapper over the result element with the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper0.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper0" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper1">
      <summary>Provides a wrapper over the result element with the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper1.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper1" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper1.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper2">
      <summary>Provides a wrapper over the result element with the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper2.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper2" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper2.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper3">
      <summary>Provides a wrapper over the result element and provides the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper3.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper3" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper3.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper4">
      <summary>Provides a wrapper over the result element with the ability to project a subset of properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper4.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper4" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper4.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper5">
      <summary>Provides a wrapper over the result elements and provides the ability to project a subset of the properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper5.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper5" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper5.ProjectedProperty4">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper6">
      <summary>Provides a wrapper over the result elements with the ability to project a subset of the properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper6.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper6" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty4">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper6.ProjectedProperty5">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper7">
      <summary>Provides a wrapper over the result elements with the ability to project a subset of the properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper7.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper7" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty4">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty5">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper7.ProjectedProperty6">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapper8">
      <summary>Provides a wrapper over the result elements with the ability to project a subset of the properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapper8.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapper8" /> class.</summary>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty4">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty5">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty6">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapper8.ProjectedProperty7">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapperMany">
      <summary>Provides a wrapper over the result elements with the ability to project a subset of the properties.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperMany.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany" /> class.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperMany.InternalGetProjectedPropertyValue(System.Int32)">
      <summary>Gets the value for the specified property by its index.</summary>
      <returns>The value for the property.</returns>
      <param name="propertyIndex">Index of the property for which to get the value.</param>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.Next">
      <summary>Gets or sets another instance of <see cref="T:System.Data.Services.Internal.ProjectedWrapperMany" /> which contains the set of the next eight projected properties, and possibly another link.</summary>
      <returns>The next set of properties.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty0">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty1">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty2">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty3">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty4">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty5">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty6">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="P:System.Data.Services.Internal.ProjectedWrapperMany.ProjectedProperty7">
      <summary>Gets or sets the property to project.</summary>
      <returns>The property to project.</returns>
    </member>
    <member name="T:System.Data.Services.Internal.ProjectedWrapperManyEnd">
      <summary>an instance of this class is assigned to the last <see cref="P:System.Data.Services.Internal.ProjectedWrapperMany.Next" /> in the list.</summary>
    </member>
    <member name="M:System.Data.Services.Internal.ProjectedWrapperManyEnd.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Internal.ProjectedWrapperManyEnd" /> class.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.DataServiceProviderMethods">
      <summary>Performs late-bound operations on resource sets with a custom data service provider.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>Casts a value to a specified type.</summary>
      <returns>The <paramref name="value" /> cast to the requested <paramref name="type" />.</returns>
      <param name="value"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetSequenceValue``1(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>Gets a named value from the specified object as a sequence.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> instance that contains the requested value as a sequence.</returns>
      <param name="value">Object that contains the value.</param>
      <param name="property">
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> that is the property the value of which must be returned.</param>
      <typeparam name="T">Type of the resulting sequence.</typeparam>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.GetValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>Gets a named value from the specified object.</summary>
      <returns>An object that is the requested value.</returns>
      <param name="value">Object that contains the value.</param>
      <param name="property">
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> that is the property the value of which must be returned.</param>
    </member>
    <member name="M:System.Data.Services.Providers.DataServiceProviderMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>Determines if the value is of a specified type.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true if the value is of the specified type; otherwise false.</returns>
      <param name="value">The value to check.</param>
      <param name="type">
        <see cref="T:System.Data.Services.Providers.ResourceType" /> to compare with.</param>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceMetadataProvider">
      <summary>Maintains metadata about a custom data service provider. </summary>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerName">
      <summary>Container name for the data source.</summary>
      <returns>String that contains the name of the container.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ContainerNamespace">
      <summary>Namespace name for the data source.</summary>
      <returns>String that contains the namespace name.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetDerivedTypes(System.Data.Services.Providers.ResourceType)">
      <summary>Attempts to return all types that derive from the specified resource type.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of derived <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</returns>
      <param name="resourceType">The base <see cref="T:System.Data.Services.Providers.ResourceType" />.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.GetResourceAssociationSet(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
      <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance when given the source association end.</summary>
      <returns>A <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> instance.</returns>
      <param name="resourceSet">Resource set of the source association end.</param>
      <param name="resourceType">Resource type of the source association end.</param>
      <param name="resourceProperty">Resource property of the source association end.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.HasDerivedTypes(System.Data.Services.Providers.ResourceType)">
      <summary>Determines whether a resource type has derived types.</summary>
      <returns>true when <paramref name="resourceType" /> represents an entity that has derived types; otherwise false.</returns>
      <param name="resourceType">A <see cref="T:System.Data.Services.Providers.ResourceType" /> object to evaluate.</param>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ResourceSets">
      <summary>Gets all available containers.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceSet" /> objects.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.ServiceOperations">
      <summary>Returns all the service operations in this data source.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ServiceOperation" /> objects.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceSet(System.String,System.Data.Services.Providers.ResourceSet@)">
      <summary>Tries to get a resource set based on the specified name.</summary>
      <returns>true when resource set with the given <paramref name="name" /> is found; otherwise false.</returns>
      <param name="name">Name of the <see cref="T:System.Data.Services.Providers.ResourceSet" /> to resolve.</param>
      <param name="resourceSet">Returns the resource set or a null value if a resource set with the given <paramref name="name" /> is not found.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveResourceType(System.String,System.Data.Services.Providers.ResourceType@)">
      <summary>Tries to get a resource type based on the specified name.</summary>
      <returns>true when resource type with the given <paramref name="name" /> is found; otherwise false.</returns>
      <param name="name">Name of the type to resolve.</param>
      <param name="resourceType">Returns the resource type or a null value if a resource type with the given <paramref name="name" /> is not found.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceMetadataProvider.TryResolveServiceOperation(System.String,System.Data.Services.Providers.ServiceOperation@)">
      <summary>Tries to get a service operation based on the specified name.</summary>
      <returns>true when service operation with the given <paramref name="name" /> is found; otherwise false.</returns>
      <param name="name">Name of the service operation to resolve.</param>
      <param name="serviceOperation">Returns the service operation or a null value if a service operation with the given <paramref name="name" /> is not found.</param>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceMetadataProvider.Types">
      <summary>Returns all the types in this data source.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of <see cref="T:System.Data.Services.Providers.ResourceType" /> objects.</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServicePagingProvider">
      <summary>Provides paging support for the clients of a custom data service provider.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.GetContinuationToken(System.Collections.IEnumerator)">
      <summary>Returns the next-page token to put in the $skiptoken query option.</summary>
      <returns>The next-page token as a collection of primitive types.</returns>
      <param name="enumerator">Enumerator for which the continuation token is being requested.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServicePagingProvider.SetContinuationToken(System.Linq.IQueryable,System.Data.Services.Providers.ResourceType,System.Object[])">
      <summary>Gets the next-page token from the $skiptoken query option in the request URI.</summary>
      <param name="query">Query for which the continuation token is being provided.</param>
      <param name="resourceType">Resource type of the result on which the $skip token is to be applied.</param>
      <param name="continuationToken">Continuation token parsed into primitive type values.</param>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceQueryProvider">
      <summary>Defines a metadata and query source implementation for a custom data service provider.</summary>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.CurrentDataSource">
      <summary>The data source object from which data is provided.</summary>
      <returns>The data source.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValue(System.Object,System.String)">
      <summary>Gets the value of the open property.</summary>
      <returns>The value of the open property.</returns>
      <param name="target">Instance of the type that declares the open property.</param>
      <param name="propertyName">Name of the open property.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetOpenPropertyValues(System.Object)">
      <summary>Gets the name and values of all the properties that are defined in the given instance of an open type.</summary>
      <returns>A collection of name and values of all the open properties.</returns>
      <param name="target">Instance of the type that declares the open property.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetPropertyValue(System.Object,System.Data.Services.Providers.ResourceProperty)">
      <summary>Gets the value of the open property.</summary>
      <returns>Value for the property.</returns>
      <param name="target">Instance of the type that declares the open property.</param>
      <param name="resourceProperty">Value for the open property.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetQueryRootForResourceSet(System.Data.Services.Providers.ResourceSet)">
      <summary>Gets the <see cref="T:System.Linq.IQueryable`1" /> that represents the container. </summary>
      <returns>An <see cref="T:System.Linq.IQueryable`1" /> that represents the resource set, or a null value if there is no resource set for the specified <paramref name="resourceSet" />.</returns>
      <param name="resourceSet">The resource set.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.GetResourceType(System.Object)">
      <summary>Gets the resource type for the instance that is specified by the parameter.</summary>
      <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the supplied object. </returns>
      <param name="target">Instance to extract a resource type from.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceQueryProvider.InvokeServiceOperation(System.Data.Services.Providers.ServiceOperation,System.Object[])">
      <summary>Invokes the given service operation and returns the results.</summary>
      <returns>The result of the service operation, or a null value for a service operation that returns void.</returns>
      <param name="serviceOperation">Service operation to invoke.</param>
      <param name="parameters">Values of parameters to pass to the service operation.</param>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceQueryProvider.IsNullPropagationRequired">
      <summary>Gets a value that indicates whether null propagation is required in expression trees.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that indicates whether null propagation is required.</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceStreamProvider">
      <summary>Defines the contract between the data server component and the stream implementation of a data source.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.DeleteStream(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>This method is invoked by the data services framework to obtain metadata about the stream associated with the specified <paramref name="entity" />. </summary>
      <param name="entity">The entity for which the descriptor object should be returned.</param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance  that processes the request.</param>
      <exception cref="T:System.ArgumentNullException">When <paramref name="entity" /> or <paramref name="operationContext" /> are null.</exception>
      <exception cref="T:System.ArgumentException">When <paramref name="entity" /> is not an entity that has a binary property to stream.</exception>
      <exception cref="T:System.Data.Services.DataServiceException">When the stream associated with the <paramref name="entity" /> cannot be deleted.</exception>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
      <summary>Returns the default stream that is associated with an entity that has a binary property.</summary>
      <returns>The data <see cref="T:System.IO.Stream" /> that contains the binary property data of the <paramref name="entity" />.</returns>
      <param name="entity">The entity that has the associated binary stream.</param>
      <param name="etag">The eTag value sent as part of the HTTP request that is sent to the data service.</param>
      <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines the type of eTag that is used. </param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetReadStreamUri(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>Returns the URI that is used to request the data stream that is associated with the binary property of an entity.</summary>
      <returns>A <see cref="T:System.Uri" /> value that is used to request the binary data stream.</returns>
      <param name="entity">The entity that has the associated binary data stream.</param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamContentType(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>Returns the content type of the stream that is associated with the specified entity.</summary>
      <returns>A valid Content-Type of the binary data.</returns>
      <param name="entity">The entity that has the associated binary data stream.</param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetStreamETag(System.Object,System.Data.Services.DataServiceOperationContext)">
      <summary>Returns the eTag of the data stream that is associated with the specified entity.</summary>
      <returns>eTag of the stream associated with the <paramref name="entity" />.</returns>
      <param name="entity">The entity that has the associated binary data stream.</param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance used by the data service to process the request.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.GetWriteStream(System.Object,System.String,System.Nullable{System.Boolean},System.Data.Services.DataServiceOperationContext)">
      <summary>Returns the stream that the data service uses to write the contents of a binary property that is associated with an entity.</summary>
      <returns>A valid <see cref="T:System.Stream" /> the data service uses to write the contents of a binary property that is associated with the <paramref name="entity" />.</returns>
      <param name="entity">The entity that has the associated binary stream.</param>
      <param name="etag">The eTag value that is sent as part of the HTTP request that is sent to the data service.</param>
      <param name="checkETagForEquality">A nullable <see cref="T:System.Boolean" /> value that determines the type of eTag is used. </param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance that is used by the data service to process the request.</param>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceStreamProvider.ResolveType(System.String,System.Data.Services.DataServiceOperationContext)">
      <summary>Returns a namespace-qualified type name that represents the type that the data service runtime must create for the Media Link Entry that is associated with the data stream for the Media Resource that is being inserted.</summary>
      <returns>A namespace-qualified type name.</returns>
      <param name="entitySetName">Fully-qualified entity set name.</param>
      <param name="operationContext">The <see cref="T:System.Data.Services.DataServiceOperationContext" /> instance that is used by the data service to process the request.</param>
    </member>
    <member name="P:System.Data.Services.Providers.IDataServiceStreamProvider.StreamBufferSize">
      <summary>Gets the size of the stream buffer.</summary>
      <returns>Integer that represents the size of buffer.</returns>
    </member>
    <member name="T:System.Data.Services.Providers.IDataServiceUpdateProvider">
      <summary>Defines the methods that must be implemented to supply eTag values to a custom data service provider.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.IDataServiceUpdateProvider.SetConcurrencyValues(System.Object,System.Nullable{System.Boolean},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
      <summary>Supplies the eTag value for the given entity resource.</summary>
      <param name="resourceCookie">Cookie that represents the resource.</param>
      <param name="checkForEquality">A <see cref="T:System.Boolean" /> that is true when property values must be compared for equality; false when property values must be compared for inequality.</param>
      <param name="concurrencyValues">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> list of the eTag property names and corresponding values.</param>
    </member>
    <member name="T:System.Data.Services.Providers.OpenTypeMethods">
      <summary>Used to perform late-bound operations on open properties.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Add(System.Object,System.Object)">
      <summary>Adds two values.</summary>
      <returns>The result of the arithmetic operation.</returns>
      <param name="left">First value to add.</param>
      <param name="right">Second value to add.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.AndAlso(System.Object,System.Object)">
      <summary>Performs a logical and operation between two expressions.</summary>
      <returns>The result of the logical and operation.</returns>
      <param name="left">Left value.</param>
      <param name="right">Right value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Ceiling(System.Object)">
      <summary>Returns the ceiling of the given value.</summary>
      <returns>The ceiling value for the given value.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Concat(System.Object,System.Object)">
      <summary>Concatenates two string values.</summary>
      <returns>A new instance that is the concatenated string.</returns>
      <param name="first">The first string.</param>
      <param name="second">The second string.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Convert(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>Converts a value to the specified type.</summary>
      <returns>The converted value.</returns>
      <param name="value"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Day(System.Object)">
      <summary>Returns the day value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The day value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Divide(System.Object,System.Object)">
      <summary>Divides two values.</summary>
      <returns>The divided value.</returns>
      <param name="left">The first value (dividend).</param>
      <param name="right">The second value (divisor).</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.EndsWith(System.Object,System.Object)">
      <summary>Determines whether the end of one string matches another string.</summary>
      <returns>Returns true when <paramref name="targetString" /> ends with <paramref name="substring" />; otherwise returns false.</returns>
      <param name="targetString">The string being compared.</param>
      <param name="substring">The string to compare to.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Equal(System.Object,System.Object)">
      <summary>Determines whether the specified objects are considered equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> value of true when both objects are equal; otherwise false.</returns>
      <param name="left">The first object to compare.</param>
      <param name="right">The second object to compare.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Floor(System.Object)">
      <summary>Returns the floor of the given value.</summary>
      <returns>Returns the floor value for the given object.</returns>
      <param name="value">The <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> object to evaluate.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GetValue(System.Object,System.String)">
      <summary>Gets a value from the specified property of a specified object.</summary>
      <returns>The requested value; null if the value cannot be determined.</returns>
      <param name="value">Object from which to get the property value.</param>
      <param name="propertyName">Name of property from which to get the value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThan(System.Object,System.Object)">
      <summary>Determines whether the value of one object is greater than another object.</summary>
      <returns>Returns true when the value of the first object is greater than that of the second object; otherwise returns false.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.GreaterThanOrEqual(System.Object,System.Object)">
      <summary>Determines whether the value of one object is greater than or equal to another object.</summary>
      <returns>Returns true when the value of the first object is greater than or equal to that of the second object; otherwise returns false.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Hour(System.Object)">
      <summary>Returns the hour value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The hour value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.IndexOf(System.Object,System.Object)">
      <summary>Returns the index of a substring in the target string.</summary>
      <returns>Returns the index of the location of <paramref name="substring" /> in the <paramref name="targetString" />.</returns>
      <param name="targetString">The target string.</param>
      <param name="substring">The substring to find.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Length(System.Object)">
      <summary>Gets the number of characters in the supplied string object. </summary>
      <returns>The length of the string value.</returns>
      <param name="value">The string to be checked.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThan(System.Object,System.Object)">
      <summary>Determines whether the value of one object is less than another object.</summary>
      <returns>Returns true when the value of the first object is less than that of the second object; otherwise returns false.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.LessThanOrEqual(System.Object,System.Object)">
      <summary>Determines whether the value of one object is less than or equal to another object.</summary>
      <returns>Returns true when the value of the first object is less than or equal to that of the second object; otherwise returns false.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Minute(System.Object)">
      <summary>Returns the minute value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The minute value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Modulo(System.Object,System.Object)">
      <summary>Calculates the arithmetic remainder of dividing one value by a second value. </summary>
      <returns>The remainder value.</returns>
      <param name="left">The first value (dividend).</param>
      <param name="right">The second value (divisor).</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Month(System.Object)">
      <summary>Returns the month value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The month value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Multiply(System.Object,System.Object)">
      <summary>Multiplies two values.</summary>
      <returns>The product of the two values.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Negate(System.Object)">
      <summary>Returns the result of multiplying the specified value by negative one.</summary>
      <returns>The product of <paramref name="value" /> multiplied by negative one.</returns>
      <param name="value">The value to negate.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Not(System.Object)">
      <summary>Performs a bitwise (logical) complement operation on the supplied value.</summary>
      <returns>A bitwise complement of the supplied value.</returns>
      <param name="value">Value to logically complement.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.NotEqual(System.Object,System.Object)">
      <summary>Performs a logical comparison of the two values to determine if they are not equal.</summary>
      <returns>A <see cref="T:System.Boolean" /> value of true when both objects are not equal; otherwise returns false.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.OrElse(System.Object,System.Object)">
      <summary>Performs a logical OR operation on two values.</summary>
      <returns>The result of the logical OR operation.</returns>
      <param name="left">The first value.</param>
      <param name="right">The second value.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Replace(System.Object,System.Object,System.Object)">
      <summary>Replaces one substring with a second substring in a target string.</summary>
      <returns>A new string with the substring replaced with the new substring.</returns>
      <param name="targetString">The string with the substring to replace.</param>
      <param name="substring">The substring to be replaced.</param>
      <param name="newString">The new substring.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Round(System.Object)">
      <summary>Rounds the supplied value.</summary>
      <returns>The rounded value.</returns>
      <param name="value">A <see cref="T:System.Decimal" /> or <see cref="T:System.Double" /> to round.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Second(System.Object)">
      <summary>Returns the second value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The second value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.StartsWith(System.Object,System.Object)">
      <summary>Checks whether the target string starts with the substring.</summary>
      <returns>Returns true if the target string starts with the given substring, otherwise returns false.</returns>
      <param name="targetString">The string being compared.</param>
      <param name="substring">The substring that the <paramref name="targetString" /> might start with.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object)">
      <summary>Returns the substring after the specified starting index location.</summary>
      <returns>The substring.</returns>
      <param name="targetString">The string from which to return the substring.</param>
      <param name="startIndex">The starting index for the substring.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Substring(System.Object,System.Object,System.Object)">
      <summary>Returns the substring of a specific length after the specified starting index location.</summary>
      <returns>The substring.</returns>
      <param name="targetString">The string from which to return the substring.</param>
      <param name="startIndex">The starting index for the substring.</param>
      <param name="length">The length of the substring.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.SubstringOf(System.Object,System.Object)">
      <summary>Determines whether a substring occurs in another string.</summary>
      <returns>true when <paramref name="substring" /> occurs in <paramref name="targetString" />, otherwise false.</returns>
      <param name="substring">The substring to locate.</param>
      <param name="targetString">The string to search.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Subtract(System.Object,System.Object)">
      <summary>Subtracts two values.</summary>
      <returns>The result of the arithmetic operation.</returns>
      <param name="left">First value in the subtraction.</param>
      <param name="right">Second value in the subtraction.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToLower(System.Object)">
      <summary>Returns a copy of a string converted to lowercase.</summary>
      <returns>A new string value with only lowercase.</returns>
      <param name="targetString">The string to convert.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.ToUpper(System.Object)">
      <summary>Returns a copy of a string converted to uppercase.</summary>
      <returns>A new string value with only uppercase characters.</returns>
      <param name="targetString">The string to convert.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Trim(System.Object)">
      <summary>Removes all leading and trailing white-space characters from a string.</summary>
      <returns>The trimmed string.</returns>
      <param name="targetString">The string to trim.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.TypeIs(System.Object,System.Data.Services.Providers.ResourceType)">
      <summary>Checks the type of a specified value.</summary>
      <returns>A <see cref="T:System.Boolean" /> value that is true when the value is of the specified resource type; otherwise false.</returns>
      <param name="value">The value to check.</param>
      <param name="type">Resource type for which to check.</param>
    </member>
    <member name="M:System.Data.Services.Providers.OpenTypeMethods.Year(System.Object)">
      <summary>Returns the year value of the given <see cref="T:System.DateTime" /> instance.</summary>
      <returns>The year value of the given <see cref="T:System.DateTime" /> instance.</returns>
      <param name="dateTime">A <see cref="T:System.DateTime" /> object.</param>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceAssociationSet">
      <summary>Describes an association between two resource sets.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceAssociationSet.#ctor(System.String,System.Data.Services.Providers.ResourceAssociationSetEnd,System.Data.Services.Providers.ResourceAssociationSetEnd)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Providers.ResourceAssociationSet" /> class.</summary>
      <param name="name">Name of the association set.</param>
      <param name="end1">
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the source end of the association set.</param>
      <param name="end2">
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the target end of the association set.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End1">
      <summary>Gets the source end of the association set.</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the source end of the association set.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.End2">
      <summary>Gets the target end of the association set.</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> that is at the target end of the association set.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSet.Name">
      <summary>Gets the name of the association set.</summary>
      <returns>The name of the association set.</returns>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceAssociationSetEnd">
      <summary>Describes an end point of a resource association set.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceAssociationSetEnd.#ctor(System.Data.Services.Providers.ResourceSet,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceProperty)">
      <summary>Creates a new instance of the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> class.</summary>
      <param name="resourceSet">Resource set to which the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end belongs.</param>
      <param name="resourceType">Resource type to which the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end belongs.</param>
      <param name="resourceProperty">Resource property that returns the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" /> end.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceProperty">
      <summary>Gets the resource property that returns the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
      <returns>The resource property.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceSet">
      <summary>Gets the resource set for the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
      <returns>The resource set.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceAssociationSetEnd.ResourceType">
      <summary>Gets the resource type for the <see cref="T:System.Data.Services.Providers.ResourceAssociationSetEnd" />.</summary>
      <returns>The resource type.</returns>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceProperty">
      <summary>Provides a type to describe a property on a resource.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceProperty.#ctor(System.String,System.Data.Services.Providers.ResourcePropertyKind,System.Data.Services.Providers.ResourceType)">
      <summary>Initializes a new <see cref="T:System.Data.Services.Providers.ResourceProperty" /> for an open property.</summary>
      <param name="name">Property name for the property as string.</param>
      <param name="kind">
        <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" />.</param>
      <param name="propertyResourceType">The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the resource to which the property refers.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.CanReflectOnInstanceTypeProperty">
      <summary>Gets a value that indicates whether this property can be accessed through reflection on the declaring resource instance type.</summary>
      <returns>true when the property can be accessed through reflection; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.CustomState">
      <summary>Gets or sets custom state information about a resource property that is defined by the developer.</summary>
      <returns>State information.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.IsReadOnly">
      <summary>Gets a Boolean value that indicates whether the property is read-only.</summary>
      <returns>True if the property is read-only.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.Kind">
      <summary>Gets the kind of the resource property with regard to the resource.</summary>
      <returns>A <see cref="T:System.Data.Services.Providers.ResourcePropertyKind" /> value.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.MimeType">
      <summary>Gets or sets MIME type for the property.</summary>
      <returns>String value that indicates MIME type.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.Name">
      <summary>Gets the name of the resource property.</summary>
      <returns>The name of the resource property as string.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceProperty.ResourceType">
      <summary>Gets the type of the resource property.</summary>
      <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the resource property.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceProperty.SetReadOnly">
      <summary>Sets the resource property to read-only.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourcePropertyKind">
      <summary>Enumeration for the kinds of properties that a resource can have.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Primitive">
      <summary>A primitive type property.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.Key">
      <summary>A property that is part of the key.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ComplexType">
      <summary>Complex or compound property.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceReference">
      <summary>A reference to another resource.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ResourceSetReference">
      <summary>A reference to a resource set.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourcePropertyKind.ETag">
      <summary>An ETag property.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceSet">
      <summary>Represents a collection of data service primitive, complex, or entity types.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceSet.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
      <summary>Creates a new collection of data service primitive, complex, or entity types.</summary>
      <param name="name">The name of the set of items as string.</param>
      <param name="elementType">The <see cref="T:System.Data.Services.Providers.ResourceType" /> of the items in the set.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.CustomState">
      <summary>Custom state information that is defined by the developer.</summary>
      <returns>State information defined by the developer.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.IsReadOnly">
      <summary>Gets a Boolean value that indicates whether the set is read-only.</summary>
      <returns>Boolean value that indicates whether resource set is read-only.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.Name">
      <summary>Gets the name of the collection.</summary>
      <returns>String value that contains the name of the resource set.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceSet.ResourceType">
      <summary>Gets the type of the collection.</summary>
      <returns>The <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceSet.SetReadOnly">
      <summary>Gets or sets the read-only status of the collection.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceType">
      <summary>Represents a data service primitive, complex, or entity type.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.#ctor(System.Type,System.Data.Services.Providers.ResourceTypeKind,System.Data.Services.Providers.ResourceType,System.String,System.String,System.Boolean)">
      <summary>Creates an instance of a data service <see cref="T:System.Data.Services.Providers.ResourceType" />.</summary>
      <param name="instanceType">CLR type that represents the format inside the WCF Data Services runtime.</param>
      <param name="resourceTypeKind">
        <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> of the resource type.</param>
      <param name="baseType">Base type of the resource type as string.</param>
      <param name="namespaceName">Namespace name of the resource type as string.</param>
      <param name="name">Name of the given resource type as string.</param>
      <param name="isAbstract">Boolean value that indicates whether the resource type is an abstract type.</param>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.AddEntityPropertyMappingAttribute(System.Data.Services.Common.EntityPropertyMappingAttribute)">
      <summary>Adds an <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> for the resource type.</summary>
      <param name="attribute">The <see cref="T:System.Data.Services.Common.EntityPropertyMappingAttribute" /> to add.</param>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.AddProperty(System.Data.Services.Providers.ResourceProperty)">
      <summary>Adds the property supplied by the <paramref name="resourceProperty" /> parameter to the type.</summary>
      <param name="property">
        <see cref="T:System.Data.Services.Providers.ResourceProperty" /> property to be added.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.BaseType">
      <summary>Gets a reference to base resource type, if any.</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceType" /> of the base type.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.CanReflectOnInstanceType">
      <summary>Get whether the corresponding instance type represents the CLR type of this entity.</summary>
      <returns>true if the instance type represents a CLR type; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.CustomState">
      <summary>Gets or sets a placeholder to hold custom state information about a resource type that is defined by the developer.</summary>
      <returns>Custom state information defined by the developer.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.ETagProperties">
      <summary>Gets the list of properties for this type.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.FullName">
      <summary>Gets the full name of the resource.</summary>
      <returns>The full name of the resource type as string.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.GetPrimitiveResourceType(System.Type)">
      <summary>Gets a resource type that represent a primitive type when given a <see cref="T:System.Type" /> object.</summary>
      <returns>The resource type.</returns>
      <param name="type">
        <see cref="T:System.Type" /> type from which to get the primitive type.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.InstanceType">
      <summary>Reference to the CLR type that this resource represents.</summary>
      <returns>The instance type as a <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsAbstract">
      <summary>Gets a Boolean value that indicates whether this is an abstract type.</summary>
      <returns>True if <see cref="T:System.Data.Services.Providers.ResourceType" /> is abstract.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsMediaLinkEntry">
      <summary>Gets or sets a Boolean value that is true if the resource type includes a default stream.</summary>
      <returns>A Boolean value that is true if the resource type includes a default stream.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsOpenType">
      <summary>Gets whether the resource type has open properties.</summary>
      <returns>true if the resource type has open properties defined; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.IsReadOnly">
      <summary>Gets a Boolean value that is true if this resource type has been set to read-only.</summary>
      <returns>True if this resource type has been set to read-only; otherwise false.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.KeyProperties">
      <summary>Gets a list of key properties for this type</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.LoadPropertiesDeclaredOnThisType">
      <summary>Returns a list of properties declared by this resource type. </summary>
      <returns>The list of properties declared on this type.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Name">
      <summary>Gets the name of the resource type.</summary>
      <returns>Name of the resource type as string.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Namespace">
      <summary>Gets the namespace of the resource type.</summary>
      <returns>Namespace of the resource type as string.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.Properties">
      <summary>Gets a list of properties declared of this type that includes only properties defined on the type, not in the base type.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.PropertiesDeclaredOnThisType">
      <summary>List of properties declared on this type.</summary>
      <returns>
        <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ResourceProperty" />.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ResourceType.ResourceTypeKind">
      <summary>Gets the <see cref="T:System.Data.Services.Providers.ResourceTypeKind" /> for the type.</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ResourceTypeKind" />.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ResourceType.SetReadOnly">
      <summary>Sets the resource type to read-only.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ResourceTypeKind">
      <summary>Enumeration for the kind of resource key.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.EntityType">
      <summary>Entity type resource.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.ComplexType">
      <summary>Complex type resource.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ResourceTypeKind.Primitive">
      <summary>Primitive type resource.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperation">
      <summary>Represents a custom service operation.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperation.#ctor(System.String,System.Data.Services.Providers.ServiceOperationResultKind,System.Data.Services.Providers.ResourceType,System.Data.Services.Providers.ResourceSet,System.String,System.Collections.Generic.IEnumerable{System.Data.Services.Providers.ServiceOperationParameter})">
      <summary>Creates a new instance of the service operation.</summary>
      <param name="name">Name of the service operation.</param>
      <param name="resultKind">
        <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" /> that is the kind of result expected from this operation.</param>
      <param name="resultType">
        <see cref="T:System.Data.Services.Providers.ResourceType" /> that is the result of the operation.</param>
      <param name="resultSet">
        <see cref="T:System.Data.Services.Providers.ResourceSet" /> that is the result of the operation.</param>
      <param name="method">Protocol method to which the service operation responds.</param>
      <param name="parameters">Ordered collection of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> objects that are parameters for the operation.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.CustomState">
      <summary>Gets or sets custom state information about service operation.</summary>
      <returns>State information.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.IsReadOnly">
      <summary>Indicates whether the service operation is read-only.</summary>
      <returns>Boolean value that indicates whether the service operation is read-only.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Method">
      <summary>Gets the method of the HTTP protocol to which the service operation responds.</summary>
      <returns>The HTTP method name.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.MimeType">
      <summary>MIME-type specified on primitive results, possibly null.</summary>
      <returns>MIME-type value.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Name">
      <summary>Name of service operation.</summary>
      <returns>String name.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.Parameters">
      <summary>Collection of in-order parameters for the service operation.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" /> objects.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResourceSet">
      <summary>Gets the entity set from which entities are read.</summary>
      <returns>The entity set as a <see cref="T:System.Data.Services.Providers.ResourceSet" /> object.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResultKind">
      <summary>The kind of result that is expected by this service operation.</summary>
      <returns>
        <see cref="T:System.Data.Services.Providers.ServiceOperationResultKind" /> that is the kind of result expected from this operation.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperation.ResultType">
      <summary>Type of results returned by this service operation.</summary>
      <returns>Type of the results as a <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperation.SetReadOnly">
      <summary>Sets whether the service operation is read-only.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperationParameter">
      <summary>Represents parameter information for service operations.</summary>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperationParameter.#ctor(System.String,System.Data.Services.Providers.ResourceType)">
      <summary>Creates a new instance of <see cref="T:System.Data.Services.Providers.ServiceOperationParameter" />.</summary>
      <param name="name">Name of parameter.</param>
      <param name="parameterType">Data type of parameter.</param>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.CustomState">
      <summary>Custom state information  defined by the developer about a service operation parameter.</summary>
      <returns>Custom state information defined by the developer.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.IsReadOnly">
      <summary>Gets a Boolean value that defines whether the parameter is read-only.</summary>
      <returns>Boolean value that defines whether the parameter is read-only.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.Name">
      <summary>Gets the name of the service operation parameter.</summary>
      <returns>A string that specifies the name of the service operation parameter.</returns>
    </member>
    <member name="P:System.Data.Services.Providers.ServiceOperationParameter.ParameterType">
      <summary>Gets the data type of the service operation parameter.</summary>
      <returns>The data type of the service operation parameter as <see cref="T:System.Data.Services.Providers.ResourceType" />.</returns>
    </member>
    <member name="M:System.Data.Services.Providers.ServiceOperationParameter.SetReadOnly">
      <summary>Sets the service operation parameter to read-only.</summary>
    </member>
    <member name="T:System.Data.Services.Providers.ServiceOperationResultKind">
      <summary>An enumeration that describes the kind of results that a service operation provides.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.DirectValue">
      <summary>A single value that cannot be further composed.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Enumeration">
      <summary>An enumeration of values that cannot be further composed.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithMultipleResults">
      <summary>A queryable object that returns multiple elements.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.QueryWithSingleResult">
      <summary>A query that returns a single item.</summary>
    </member>
    <member name="F:System.Data.Services.Providers.ServiceOperationResultKind.Void">
      <summary>No results.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Device.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Device</name>
  </assembly>
  <members>
    <member name="T:System.Device.Location.CivicAddress">
      <summary>Represents a civic address. A civic address can include fields such as street address, postal code, state/province, and country/region.</summary>
    </member>
    <member name="M:System.Device.Location.CivicAddress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddress" /> class.</summary>
    </member>
    <member name="M:System.Device.Location.CivicAddress.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddress" /> class with address information.</summary>
      <param name="addressLine1">A string containing the first line of the street address.</param>
      <param name="addressLine2">A string containing the second line of the street address.</param>
      <param name="building">A string containing the building name or number.</param>
      <param name="city">A string containing the city.</param>
      <param name="countryRegion">A string containing the country or region. </param>
      <param name="floorLevel">A string containing the floor number.</param>
      <param name="postalCode">A string containing the postal code.</param>
      <param name="stateProvince">A string containing the state or province.</param>
      <exception cref="T:System.ArgumentException">At least one parameter must be a non-empty string.</exception>
    </member>
    <member name="P:System.Device.Location.CivicAddress.AddressLine1">
      <summary>Gets or sets the first line of the address.</summary>
      <returns>Returns the first line of the address. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.AddressLine2">
      <summary>Gets or sets the second line of the address.</summary>
      <returns>Returns the second line of the address. If the data is not provided, returns <see cref="F:System.String.Empty." /></returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.Building">
      <summary>Gets or sets the building name or number.</summary>
      <returns>Returns the building name or number. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.City">
      <summary>Gets or sets the name of the city.</summary>
      <returns>Returns the name of the city. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.CountryRegion">
      <summary>Gets or sets the country/region of the location.</summary>
      <returns>Returns the country/region code. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.FloorLevel">
      <summary>Gets or sets the floor level of the location.</summary>
      <returns>Returns a string containing the floor level. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.IsUnknown">
      <summary>Gets a value that indicates whether the <see cref="T:System.Device.Location.CivicAddress" /> contains data.</summary>
      <returns>true if the <see cref="T:System.Device.Location.CivicAddress" /> is unknown. false if the address contains data.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.PostalCode">
      <summary>Gets or sets the postal code of the location.</summary>
      <returns>Returns the postal code of the location. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Device.Location.CivicAddress.StateProvince">
      <summary>Gets or sets the state or province of the location.</summary>
      <returns>Returns the state or province of the location. If the data is not provided, returns <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Device.Location.CivicAddress.Unknown">
      <summary>Represents a <see cref="T:System.Device.Location.CivicAddress" /> that contains no data. </summary>
    </member>
    <member name="T:System.Device.Location.CivicAddressResolver">
      <summary>Provides functionality for resolving a coordinate-based location to a civic address.</summary>
    </member>
    <member name="M:System.Device.Location.CivicAddressResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.CivicAddressResolver" /> class.</summary>
    </member>
    <member name="M:System.Device.Location.CivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)">
      <summary>Synchronously resolves a civic address from a location based on latitude and longitude. This call will block while the address is being resolved.</summary>
      <returns>The civic address resolved from the <paramref name="coordinate" /> parameter. <see cref="F:System.Device.Location.CivicAddress.Unknown" /> is returned if the address cannot be resolved.</returns>
      <param name="coordinate">The <see cref="T:System.Device.Location.GeoCoordinate" /> containing the location to resolve to a civic address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="coordinate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinate" /> does not contain a valid latitude and longitude.</exception>
    </member>
    <member name="M:System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)">
      <summary>Asynchronously resolves an address from a location based on latitude and longitude. The call will not block while the address is being resolved.</summary>
      <param name="coordinate">The <see cref="T:System.Device.Location.GeoCoordinate" /> containing the location to resolve to a civic address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="coordinate" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="coordinate" /> does not contain a valid latitude and longitude.</exception>
    </member>
    <member name="E:System.Device.Location.CivicAddressResolver.ResolveAddressCompleted">
      <summary>Occurs when the address resolution initiated by a call to <see cref="M:System.Device.Location.CivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)" /> completes.</summary>
    </member>
    <member name="T:System.Device.Location.GeoCoordinate">
      <summary>Represents a geographical location determined by latitude and longitude coordinates. May also include altitude, accuracy, speed and course information.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Device.Location.GeoCoordinate" /> with no data fields set.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoCoordinate" /> class from latitude and longitude data.</summary>
      <param name="latitude">The latitude of the location. May range from -90.0 to 90.0. </param>
      <param name="longitude">The longitude of the location. May range from -180.0 to 180.0.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Latitude or longitude is out of range.</exception>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoCoordinate" /> class from latitude, longitude and altitude data.</summary>
      <param name="latitude">Latitude. May range from -90.0 to 90.0.</param>
      <param name="longitude">Longitude. May range from -180.0 to 180.0</param>
      <param name="altitude">The altitude in meters. May be negative, 0, positive, or <see cref="F:System.Double.NaN" />, if unknown.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="latitude" />, <paramref name="longitude" />, or <paramref name="altitude" /> is out of range.</exception>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoCoordinate" /> class from latitude, longitude, altitude, horizontal accuracy, vertical accuracy, speed and course.</summary>
      <param name="latitude">The latitude of the location. May range from -90.0 to 90.0.</param>
      <param name="longitude">The longitude of the location. May range from -180.0 to 180.0.</param>
      <param name="altitude">The altitude in meters. May be negative, 0, positive, or <see cref="F:System.Double.NaN" />, if unknown.</param>
      <param name="horizontalAccuracy">The accuracy of the latitude/longitude coordinates, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <see cref="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy" /> property will be set to <see cref="F:System.Double.NaN" />.</param>
      <param name="verticalAccuracy">The accuracy of the altitude, in meters. Must be greater than or equal to 0. If a value of 0 is supplied to this constructor, the <see cref="P:System.Device.Location.GeoCoordinate.VerticalAccuracy" /> property will be set to <see cref="F:System.Double.NaN" />.</param>
      <param name="speed">The speed measured in meters per second. May be negative, 0, positive, or <see cref="F:System.Double.NaN" />, if unknown.  A negative speed can indicate moving in reverse.</param>
      <param name="course">The direction of travel, rather than orientation. This parameter is measured in degrees relative to true north. Must range from 0 to 360.0, or be <see cref="F:System.Double.NaN" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="latitude" />, <paramref name="longitude" />, <paramref name="horizontalAccuracy" />, <paramref name="verticalAccuracy" /> or <paramref name="course" /> is out of range.</exception>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.Altitude">
      <summary>Gets the altitude of the <see cref="T:System.Device.Location.GeoCoordinate" />, in meters.</summary>
      <returns>The altitude, in meters.</returns>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.Course">
      <summary>Gets or sets the heading in degrees relative to true north.</summary>
      <returns>The heading in degrees relative to true north. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.Course" /> is set outside the valid range.</exception>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.Equals(System.Device.Location.GeoCoordinate)">
      <summary>Determines if the <see cref="T:System.Device.Location.GeoCoordinate" /> object is equivalent to the parameter, based solely on latitude and longitude.</summary>
      <returns>true if the <see cref="T:System.Device.Location.GeoCoordinate" /> objects are equal; otherwise, false.</returns>
      <param name="other">The <see cref="T:System.Device.Location.GeoCoordinate" /> object to compare to the calling object.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.Equals(System.Object)">
      <summary>Determines if a specified <see cref="T:System.Device.Location.GeoCoordinate" /> is equal to the current <see cref="T:System.Device.Location.GeoCoordinate" />, based solely on latitude and longitude.</summary>
      <returns>true, if the <see cref="T:System.Device.Location.GeoCoordinate" /> objects are equal; otherwise, false.</returns>
      <param name="obj">The object to compare the <see cref="T:System.Device.Location.GeoCoordinate" /> to.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.GetDistanceTo(System.Device.Location.GeoCoordinate)">
      <summary>Returns the distance between the latitude/longitude coordinate specified by this <see cref="T:System.Device.Location.GeoCoordinate" /> and another specified <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
      <returns>The distance between the two coordinates, in meters.</returns>
      <param name="other">The <see cref="T:System.Device.Location.GeoCoordinate" /> for the location to calculate the distance to.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
      <returns>A hash code for the current <see cref="T:System.Device.Location.GeoCoordinate" />.</returns>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy">
      <summary>Gets or sets the accuracy of the latitude and longitude given by the <see cref="T:System.Device.Location.GeoCoordinate" />, in meters.</summary>
      <returns>The accuracy of the latitude and longitude, in meters.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.HorizontalAccuracy" /> is set outside the valid range.</exception>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.IsUnknown">
      <summary>Gets a value that indicates whether the <see cref="T:System.Device.Location.GeoCoordinate" /> does not contain latitude or longitude data.</summary>
      <returns>true if the <see cref="T:System.Device.Location.GeoCoordinate" /> does not contain latitude or longitude data; otherwise, false.</returns>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.Latitude">
      <summary>Gets or sets the latitude of the <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
      <returns>Latitude of the location.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.Latitude" /> is set outside the valid range.</exception>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.Longitude">
      <summary>Gets or sets the longitude of the <see cref="T:System.Device.Location.GeoCoordinate" />.</summary>
      <returns>The longitude.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.Longitude" /> is set outside the valid range.</exception>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.op_Equality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)">
      <summary>Determines whether two <see cref="T:System.Device.Location.GeoCoordinate" /> objects refer to the same location.</summary>
      <returns>true, if the <see cref="T:System.Device.Location.GeoCoordinate" /> objects are determined to be equivalent; otherwise, false.</returns>
      <param name="left">The first <see cref="T:System.Device.Location.GeoCoordinate" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Device.Location.GeoCoordinate" /> to compare.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.op_Inequality(System.Device.Location.GeoCoordinate,System.Device.Location.GeoCoordinate)">
      <summary>Determines whether two <see cref="T:System.Device.Location.GeoCoordinate" /> objects correspond to different locations.</summary>
      <returns>true, if the <see cref="T:System.Device.Location.GeoCoordinate" /> objects are determined to be different; otherwise, false.</returns>
      <param name="left">The first <see cref="T:System.Device.Location.GeoCoordinate" /> to compare.</param>
      <param name="right">The second <see cref="T:System.Device.Location.GeoCoordinate" /> to compare.</param>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.Speed">
      <summary>Gets or sets the speed in meters per second.</summary>
      <returns>The speed in meters per second. The speed must be greater than or equal to zero, or <see cref="F:System.Double.NaN" />. </returns>
      <exception cref="System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.Speed" /> is set outside the valid range.</exception>
    </member>
    <member name="M:System.Device.Location.GeoCoordinate.ToString">
      <summary>Returns a string containing the latitude and longitude.</summary>
      <returns>A string containing the latitude and longitude, separated by a comma.</returns>
    </member>
    <member name="F:System.Device.Location.GeoCoordinate.Unknown">
      <summary>Represents a <see cref="T:System.Device.Location.GeoCoordinate" /> object with unknown latitude and longitude fields.</summary>
    </member>
    <member name="P:System.Device.Location.GeoCoordinate.VerticalAccuracy">
      <summary>Gets or sets the accuracy of the altitude given by the <see cref="T:System.Device.Location.GeoCoordinate" />, in meters.</summary>
      <returns>The accuracy of the altitude, in meters.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <see cref="P:System.Device.Location.GeoCoordinate.VerticalAccuracy" /> is set outside the valid range.</exception>
    </member>
    <member name="T:System.Device.Location.GeoCoordinateWatcher">
      <summary>Supplies location data that is based on latitude and longitude coordinates. </summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> with default accuracy settings.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.#ctor(System.Device.Location.GeoPositionAccuracy)">
      <summary>Initializes a new instance of <see cref="T:System.Device.Location.GeoCoordinateWatcher" />, given an accuracy level.</summary>
      <param name="desiredAccuracy">
        <see cref="T:System.Device.Location.GeoLocationAccuracy" /> indicating the requested accuracy level of the location provider.An accuracy of <see cref="F:System.Device.Location.GeoPositionAccuracy.High" /> can degrade performance and should be specified only when high accuracy is needed. </param>
    </member>
    <member name="P:System.Device.Location.GeoCoordinateWatcher.DesiredAccuracy">
      <summary>The requested accuracy level for the location data provided by the <see cref="T:System.Device.Location.GeoCoordinateWatcher" />.</summary>
      <returns>
        <see cref="T:System.Device.Location.GeoLocationAccuracy" /> indicating the requested accuracy level of the location provider.</returns>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> class.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Dispose(System.Boolean)">
      <summary>Releases all resources used by the current instance of the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> class.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Finalize">
      <summary>Free resources and perform other cleanup operations before the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Device.Location.GeoCoordinateWatcher.MovementThreshold">
      <summary>The distance that must be moved, in meters relative to the coordinate from the last <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> event, before the location provider will raise another <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> event.</summary>
      <returns>Distance in meters.</returns>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.OnPositionChanged(System.Device.Location.GeoPositionChangedEventArgs{System.Device.Location.GeoCoordinate})">
      <summary>Called when a <see cref="E:System.Device.Location.GeoCoordinateWatcher.System.Device.Location.IGeoPositionWatcher`1.PositionChanged" /> event occurs.</summary>
      <param name="e">A GeoPositionChangedEventArgs object that contains the new location.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.OnPositionStatusChanged(System.Device.Location.GeoPositionStatusChangedEventArgs)">
      <summary>Called when a <see cref="E:System.Device.Location.GeoCoordinateWatcher.System.Device.Location.IGeoPositionWatcher`1.StatusChanged" /> event occurs.</summary>
      <param name="e">A GeoPositionStatusChangedEventArgs object that contains the new status.</param>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.OnPropertyChanged(System.String)">
      <summary>Called when a property of the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> changes.</summary>
      <param name="propertyName">The name of the property that has changed.</param>
    </member>
    <member name="P:System.Device.Location.GeoCoordinateWatcher.Permission">
      <summary>Indicates whether permission to access location data from location providers has been granted or denied.</summary>
      <returns>A value that indicates whether permission has been granted or denied.</returns>
    </member>
    <member name="P:System.Device.Location.GeoCoordinateWatcher.Position">
      <summary>Gets the <see cref="T:System.Device.Location.GeoCoordinate" /> that indicates the current location.</summary>
      <returns>The <see cref="T:System.Device.Location.GeoCoordinate" /> that indicates the current location.</returns>
    </member>
    <member name="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged">
      <summary>Indicates that the latitude or longitude of the location data has changed.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Start">
      <summary>Initiate the acquisition of data from the current location provider. This method enables <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> events and allows access to the <see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> property.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Start(System.Boolean)">
      <summary>Initiate the acquisition of data from the current location provider. This method enables <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> events and allows access to the <see cref="P:System.Device.Location.GeoCoordinateWatcher.Position" /> property.</summary>
      <param name="suppressPermissionPrompt">true to suppress the permission dialog box; false to optionally show the permission dialog box if permissions have not already been granted.</param>
    </member>
    <member name="P:System.Device.Location.GeoCoordinateWatcher.Status">
      <summary>Gets the current status of the <see cref="T:System.Device.Location.GeoCoordinateWatcher" />.</summary>
      <returns>A <see cref="T:System.Device.Location.GeoPositionStatus" /> that indicates the availability of data from the <see cref="T:System.Device.Location.GeoCoordinateWatcher" />.</returns>
    </member>
    <member name="E:System.Device.Location.GeoCoordinateWatcher.StatusChanged">
      <summary>Indicates that the status of the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> object has changed.</summary>
    </member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.Stop">
      <summary>Stops the <see cref="T:System.Device.Location.GeoCoordinateWatcher" /> from providing location data and events.</summary>
    </member>
    <member name="E:System.Device.Location.GeoCoordinateWatcher.System#ComponentModel#INotifyPropertyChanged#PropertyChanged"></member>
    <member name="E:System.Device.Location.GeoCoordinateWatcher.System#Device#Location#IGeoPositionWatcher{T}#PositionChanged"></member>
    <member name="E:System.Device.Location.GeoCoordinateWatcher.System#Device#Location#IGeoPositionWatcher{T}#StatusChanged"></member>
    <member name="M:System.Device.Location.GeoCoordinateWatcher.TryStart(System.Boolean,System.TimeSpan)">
      <summary>Initiates the acquisition of data from the current location provider. This method returns synchronously.</summary>
      <returns>true if data acquisition is started within the time period specified by <paramref name="timeout" />; otherwise, false.</returns>
      <param name="suppressPermissionPrompt">true to suppress the permission dialog box; false to display the permission dialog box.</param>
      <param name="timeout">Time in milliseconds to wait for the location provider to start before timing out.</param>
    </member>
    <member name="T:System.Device.Location.GeoPosition`1">
      <summary>Contains location data of a type specified by the type parameter of the <see cref="T:System.Device.Location.GeoPosition`1" /> class.</summary>
      <typeparam name="T">The type of the location data.</typeparam>
    </member>
    <member name="M:System.Device.Location.GeoPosition`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoPosition`1" /> class.</summary>
    </member>
    <member name="M:System.Device.Location.GeoPosition`1.#ctor(System.DateTimeOffset,`0)">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoPosition`1" /> class with a timestamp and position.</summary>
      <param name="timestamp">The time the location data was obtained.</param>
      <param name="position">The location data to use to initialize the <see cref="T:System.Device.Location.GeoPosition`1" /> object.</param>
    </member>
    <member name="P:System.Device.Location.GeoPosition`1.Location">
      <summary>Gets or sets the location data for the <see cref="T:System.Device.Location.GeoPosition`1" /> object.</summary>
      <returns>An object of type T that contains the location data for the <see cref="T:System.Device.Location.GeoPosition`1" /> object.</returns>
    </member>
    <member name="P:System.Device.Location.GeoPosition`1.Timestamp">
      <summary>Gets or sets the time when the location data was obtained.</summary>
      <returns>A <see cref="T:System.DateTimeOffset" /> containing the time the location data was created.</returns>
    </member>
    <member name="T:System.Device.Location.GeoPositionAccuracy">
      <summary>Specifies the requested accuracy level for the location data that the application uses.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionAccuracy.Default">
      <summary>Optimize for power, performance and other cost considerations.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionAccuracy.High">
      <summary>Deliver the most accurate report possible. This includes using services that might charge money, or consuming higher levels of battery power or connection bandwidth.</summary>
    </member>
    <member name="T:System.Device.Location.GeoPositionChangedEventArgs`1">
      <summary>Provides data for the <see cref="E:System.Device.Location.GeoCoordinateWatcher.PositionChanged" /> event.</summary>
      <typeparam name="T">The type of the location data in the <see cref="P:System.Device.Location.GeoPosition`1.Location" /> property of this event's <see cref="P:System.Device.Location.GeoPositionChangedEventArgs`1.Position" /> property</typeparam>
    </member>
    <member name="M:System.Device.Location.GeoPositionChangedEventArgs`1.#ctor(System.Device.Location.GeoPosition{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Device.Location.GeoPositionChangedEventArgs`1" /> class</summary>
      <param name="position">The updated position.</param>
    </member>
    <member name="P:System.Device.Location.GeoPositionChangedEventArgs`1.Position">
      <summary>Gets the location data associated with the event.</summary>
      <returns>A <see cref="T:System.Device.Location.GeoPosition`1" /> object that contains the location data in its <see cref="P:System.Device.Location.GeoPosition`1.Location" /> property.</returns>
    </member>
    <member name="T:System.Device.Location.GeoPositionPermission">
      <summary>Indicates whether the calling application has permission to access location data.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionPermission.Unknown">
      <summary>Location permissions are not known. This status can occur while the provider is being initialized.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionPermission.Granted">
      <summary>Location permissions are granted.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionPermission.Denied">
      <summary>Location permissions are denied.</summary>
    </member>
    <member name="T:System.Device.Location.GeoPositionStatus">
      <summary>Indicates the ability of the location provider to provide location updates.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionStatus.Ready">
      <summary>A location provider is ready to supply new data.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionStatus.Initializing">
      <summary>The location provider is initializing.  For example, a GPS still obtaining a fix has this status.</summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionStatus.NoData">
      <summary>No location data is available from any location provider. </summary>
    </member>
    <member name="F:System.Device.Location.GeoPositionStatus.Disabled">
      <summary>The location provider is disabled. On Windows 7, this is the case when the Sensor and Location platform has been disabled by group policy. </summary>
    </member>
    <member name="T:System.Device.Location.GeoPositionStatusChangedEventArgs">
      <summary>Contains data for a GeoPositionStatusChanged event.</summary>
    </member>
    <member name="M:System.Device.Location.GeoPositionStatusChangedEventArgs.#ctor(System.Device.Location.GeoPositionStatus)">
      <summary>Initializes a new instance of the GeoPositionStatusChangedEventArgs class.</summary>
      <param name="status">The new status.</param>
    </member>
    <member name="P:System.Device.Location.GeoPositionStatusChangedEventArgs.Status">
      <summary>Gets the updated status.</summary>
      <returns>The updated status.</returns>
    </member>
    <member name="T:System.Device.Location.ICivicAddressResolver">
      <summary>Provides a method that when implemented, resolves a latitude/longitude location to a civic address. </summary>
    </member>
    <member name="M:System.Device.Location.ICivicAddressResolver.ResolveAddress(System.Device.Location.GeoCoordinate)"></member>
    <member name="M:System.Device.Location.ICivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)">
      <summary>Initiates a request to resolve a latitude/longitude location to an address.</summary>
      <param name="coordinate">The latitude/longitude location to resolve to an address.</param>
    </member>
    <member name="E:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted">
      <summary>Occurs when an asynchronous request using <see cref="M:System.Device.Location.ICivicAddressResolver.ResolveAddressAsync(System.Device.Location.GeoCoordinate)" /> to resolve a latitude/longitude to a civic address is complete.</summary>
    </member>
    <member name="T:System.Device.Location.IGeoPositionWatcher`1">
      <summary>Interface that can be implemented for providing accessing location data and receiving location updates.</summary>
      <typeparam name="T">The type of the object that contains the location data.</typeparam>
    </member>
    <member name="P:System.Device.Location.IGeoPositionWatcher`1.Position">
      <summary>Gets the location data. </summary>
      <returns>The <see cref="T:System.Device.Location.GeoPosition`1" /> containing the location data.</returns>
    </member>
    <member name="E:System.Device.Location.IGeoPositionWatcher`1.PositionChanged"></member>
    <member name="M:System.Device.Location.IGeoPositionWatcher`1.Start">
      <summary>Initiate the acquisition of location data.</summary>
    </member>
    <member name="M:System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)">
      <summary>Start acquiring location data, specifying whether or not to suppress prompting for permissions. This method returns synchronously.</summary>
      <param name="suppressPermissionPrompt">If true, do not prompt the user to enable location providers and only start if location data is already enabled. If false, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.</param>
    </member>
    <member name="P:System.Device.Location.IGeoPositionWatcher`1.Status">
      <summary>Gets the status of location data.</summary>
      <returns>The status of location data.</returns>
    </member>
    <member name="E:System.Device.Location.IGeoPositionWatcher`1.StatusChanged"></member>
    <member name="M:System.Device.Location.IGeoPositionWatcher`1.Stop">
      <summary>Stop acquiring location data.</summary>
    </member>
    <member name="M:System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.TimeSpan)">
      <summary>Start acquiring location data, specifying an initialization timeout. This method returns synchronously.</summary>
      <returns>true if succeeded, false if timed out.</returns>
      <param name="suppressPermissionPrompt">If true, do not prompt the user to enable location providers and only start if location data is already enabled. If false, a dialog box may be displayed to prompt the user to enable location sensors that are disabled.</param>
      <param name="timeout">Time in milliseconds to wait for initialization to complete.</param>
    </member>
    <member name="T:System.Device.Location.ResolveAddressCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted" /> event.</summary>
    </member>
    <member name="M:System.Device.Location.ResolveAddressCompletedEventArgs.#ctor(System.Device.Location.CivicAddress,System.Exception,System.Boolean,System.Object)">
      <summary>Initializes a new instance of <see cref="T:System.Device.Location.ResolveAddressCompletedEventArgs" />.</summary>
      <param name="address">The <see cref="T:System.Device.Location.CivicAddress" /> containing the address resolved from the latitude/longitude location, if successful. </param>
      <param name="error"></param>
      <param name="cancelled">true if the operation was cancelled; otherwise, false.</param>
      <param name="userState"></param>
    </member>
    <member name="P:System.Device.Location.ResolveAddressCompletedEventArgs.Address">
      <summary>Gets the <see cref="T:System.Device.Location.CivicAddress" /> associated with the <see cref="E:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted" /> event.</summary>
      <returns>The <see cref="T:System.Device.Location.CivicAddress" /> associated with the <see cref="E:System.Device.Location.ICivicAddressResolver.ResolveAddressCompleted" /> event. If the address could not be resolved, this property returns <see cref="F:System.Device.Location.CivicAddress.Unknown" />.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.DirectoryServices.AccountManagement.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.DirectoryServices.AccountManagement</name>
  </assembly>
  <members>
    <member name="T:System.DirectoryServices.AccountManagement.AdvancedFilters">
      <summary>This class provides writable access to certain attributes so that users can modify read-only properties of the "dummy" principal object that is passed to a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> object when using Query By Example</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.#ctor(System.DirectoryServices.AccountManagement.Principal)">
      <summary>Instantiates a new <see cref="M:System.DirectoryServices.AccountManagement.AdvancedFilters" /> object.  Not intended to be called directly.</summary>
      <param name="p"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AccountExpirationDate(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the query filter for the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.AccountExpirationDate" /> attribute to the specified time and comparison type.</summary>
      <param name="expirationTime">A <see cref="T:System.DateTime" /> object.</param>
      <param name="match"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AccountLockoutTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.AccountLockoutTime" /> query filter to the specified time and comparison type.</summary>
      <param name="lockoutTime">A <see cref="T:System.DateTime" /> object.</param>
      <param name="match"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.AdvancedFilterSet(System.String,System.Object,System.Type,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Creates a query filter for a property in an extended class.</summary>
      <param name="attribute">The name of the attribute</param>
      <param name="value"></param>
      <param name="objectType">The object type of <paramref name="value" />.</param>
      <param name="mt"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.BadLogonCount(System.Int32,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the query filter for the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.BadLogonCount" /> attribute to the specified value and comparison type.</summary>
      <param name="badLogonCount">An integer.</param>
      <param name="match"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastBadPasswordAttempt(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the query filter for the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.LastBadPasswordAttempt" /> attribute to the specified <see cref="T:System.DateTime" /> and the specified comparison value.</summary>
      <param name="lastAttempt">A <see cref="T:System.DateTime" /> object.</param>
      <param name="match"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastLogonTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the query filter for the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.LastLogon" /> attribute to the specified <see cref="T:System.DateTime" /> and the specified comparison value.</summary>
      <param name="logonTime">A <see cref="T:System.DateTime" /> object.</param>
      <param name="match"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AdvancedFilters.LastPasswordSetTime(System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Sets the query filter for the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrinciple.LastPasswordSet" /> attribute to the specified <see cref="T:System.DateTime" /> and the specified comparison value.</summary>
      <param name="passwordSetTime">A <see cref="T:System.DateTime" /> object.</param>
      <param name="match"></param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal">
      <summary>Encapsulates the account and contact data common to principals that can be authenticated.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> class by using the specified context. This constructor is called by derived-class constructors to initialize the base class and is not intended for use directly from your code.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed. </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> class by using the specified context, SAM account name, password, and enabled value. This constructor is called by derived-class constructors to initialize the base class and is not intended for use directly from your code.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="samAccountName">The SAM account name for this principal. </param>
      <param name="password">The password for this account.</param>
      <param name="enabled">A Boolean value that specifies whether the account is enabled. </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate">
      <summary>Gets or sets a Nullable <see cref="T:System.DateTime" /> that specifies the date and time that the account expires. </summary>
      <returns>A <see cref="T:System.DateTime" /> that specifies the date and time that the account expires, or null if the account never expires. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime">
      <summary>Gets the Nullable <see cref="T:System.DateTime" /> that specifies the date and time that the account was locked out.  </summary>
      <returns> A <see cref="T:System.DateTime" /> that specifies the date and time that the account was locked out, or null if no lockout time is set on the account. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter">
      <summary>Returns an <see cref="T:System.DirectoryServices.AccountManagement.AdvancedSearchFilter" /> object, for use with Query By Example to set read-only properties before passing the object to the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />.</summary>
      <returns>An <see cref="T:System.DirectoryServices.AccountManagement.AdvancedSearchFilter" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption">
      <summary>Gets or sets a Boolean value that specifies whether reversible password encryption is enabled for this account. </summary>
      <returns>true if reversible password encryption is enabled for this account; otherwise false.  </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount">
      <summary>Gets the number of logon attempts using incorrect credentials for this account. </summary>
      <returns>The number of logon attempts using incorrect credentials for this account.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates">
      <summary>Gets a <see cref="T:System.X509Certificate2Collection" /> that contains the X509 certificates for this account. </summary>
      <returns>A <see cref="T:System.X509Certificate2Collection" /> that contains the X509 certificates for this account.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)">
      <summary>Changes the account password from the old password to the new password. Do not use this with a <see cref="T:System.DirecoryServices.AccountManagement.ComputerPrincipal" />.</summary>
      <param name="oldPassword">The password that is changed. </param>
      <param name="newPassword">The new password. </param>
      <exception cref="T:System.InvalidOperationException">The principal has not been persisted.</exception>
      <exception cref="T:System.DiectoryServices.AccountManagement.PasswordException">The new password does not meet the complexity requirements.</exception>
      <exception cref="T:System.NotSupportedException">The principal is not a user.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted">
      <summary>Gets or sets a Nullable Boolean value that specifies whether the account may be delegated. </summary>
      <returns>true if the account may be delegated; otherwise false. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled">
      <summary>Gets or sets a Nullable Boolean value that specifies whether this account is enabled for authentication.  </summary>
      <returns>true if the principal is enabled, or null if the account has not been persisted; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
      <exception cref="T:System.ArgumentNullException">The application tried to set a null value for this property. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow">
      <summary>Expires the password for this account. This will force the user to change his/her password at the next logon.</summary>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">An exception occurred when saving the changes to the store. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of authentication principal objects that have an incorrect password try recorded in the specified date and time range. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> objects, or an empty collection if no results are found. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the incorrect password try. This parameter is used with the type parameter to determine the range of time in which the returned objects have an incorrect logon try recorded. </param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> collection of objects that have a bad password attempt within the specified date and time range.  This is the template function for extended classes that wish to implement this functionality.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more objects of the appropriate principal type, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the password set. This parameter is used with the type parameter to determine the range of time in which the returned objects have a password set recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of authentication principal objects that have an account expiration time recorded in the specified date and time range. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> objects. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the account expiration. This parameter is used with the type parameter to determine the range of time in which the returned objects have an account expiration recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> collection of objects that have an expiration time within the specified date and time range.  This is the template function for extended classes that wish to implement this functionality.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more objects of the appropriate principal type, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the password set. This parameter is used with the type parameter to determine the range of time in which the returned objects have a password set recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> collection of objects that have a lockout time within the specified date and time range.  This is the template function for extended classes that wish to implement this functionality.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more objects of the appropriate principal type, or an empty collection if no matches are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of authentication principal objects that have an account lockout time recorded in the specified date and time range. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> objects. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the account lockout. This parameter is used with the type parameter to determine the range of time in which the returned objects have an account lockout recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of authentication principal objects that have an account logon recorded in the specified date and time range. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> objects. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the logon record. This parameter is used with the type parameter to determine the range of time in which the returned objects have an account logon recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> collection of objects that have a logon time within the specified date and time range.  This is the template function for extended classes that wish to implement this functionality.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more objects of the appropriate principal type, or an empty collection if no matches are found.</returns>
      <param name="context"></param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the password set. This parameter is used with the type parameter to determine the range of time in which the returned objects have a password set recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> collection of objects that have a password set time within the specified date and time range.  This is the template function for extended classes that wish to implement this functionality.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more objects of the appropriate principal type, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the password set. This parameter is used with the type parameter to determine the range of time in which the returned objects have a password set recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of authentication principal objects that have an account password set recorded in the specified date and time range. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.AuthenticablePrincipal" /> objects. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> object that identifies the date and time of the password set. This parameter is used with the type parameter to determine the range of time in which the returned objects have a password set recorded.</param>
      <param name="type">A <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration value that specifies the type of match that is applied to the <paramref name="time" /> parameter.  </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory">
      <summary>Gets or sets the home directory for this account. </summary>
      <returns>The home directory for this account, or null if no home directory exists. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive">
      <summary>Gets or sets the home drive for this account. </summary>
      <returns>The home drive for the account, or null if no home drive exists. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut">
      <summary>Returns a Boolean value that specifies whether the account is currently locked out. </summary>
      <returns>true if the account is locked out; otherwise false. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt">
      <summary>Gets the Nullable <see cref="T:System.DateTime" /> that specifies the date and time of the last incorrect password attempt on this account. </summary>
      <returns>A Nullable <see cref="T:System.DateTime" /> that specifies the date and time of the last incorrect password attempt on this account, or null if no incorrect password tries are recorded. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon">
      <summary>Gets the Nullable <see cref="T:System.DateTime" /> that specifies the date and time of the last logon for this account. </summary>
      <returns>A Nullable <see cref="T:System.DateTime" /> that specifies the date and time of the last logon for this account. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet">
      <summary>Gets the Nullable <see cref="T:System.DateTime" /> that specifies the last date and time that the password was set for this account. </summary>
      <returns>A Nullable <see cref="T:System.DateTime" /> that specifies the last date and time that the password was set for this account.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires">
      <summary>Gets or sets a Boolean value that specifies whether the password expires for this account. </summary>
      <returns>true if the password expires for this account; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired">
      <summary>Gets or sets a Boolean value that specifies whether a password is required for this account. </summary>
      <returns>true if a password is required for this account; otherwise false. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes">
      <summary>Gets or sets the times when the principal can logon. </summary>
      <returns>The permitted logon times for this account.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations">
      <summary>Gets the list of workstations that this principal is permitted to log into. </summary>
      <returns>The mutable list of workstations that this principal is permitted to log into. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword">
      <summary>Refreshes an expired password. </summary>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">An exception occurred when saving the changes to the store. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath">
      <summary>Gets or sets the script path for this account. </summary>
      <returns>A path of the script for this account, or null if there is no script path. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)">
      <summary>Sets the account password to the specified value. </summary>
      <param name="newPassword">The new password. </param>
      <exception cref="T:System.DirectoryServices.AccountManagement.PasswordException">Throws an exception if the caller does not have appropriate rights, the new password does not meet password complexity requirements, or for any other reason that the underlying stores reject the password change.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired">
      <summary>Gets or sets a Boolean value that specifies whether a smartcard is required to log on to the account. </summary>
      <returns>true if a smartcard is required to log on to this account; otherwise false. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount">
      <summary>Unlocks the account if it is currently locked out. </summary>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">Throws an exception if the caller does not have appropriate rights.</exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">An exception occurred when saving the changes to the store.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword">
      <summary>Gets or sets a Boolean value that specifies whether the user can change the password for this account. Do not use this with a <see cref="T:System.DirecoryServices.AccountManagement.ComputerPrincipal" />.</summary>
      <returns>true if the user is not permitted to change the password; otherwise false.</returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
      <exception cref="T:System.NotSupportedException">This principal object is not a user.</exception>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.ComputerPrincipal">
      <summary>Encapsulates principals that are computer accounts.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> class and assigns it to the specified context. </summary>
      <param name="context"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> class by using the specified context, SAM account name, password, and enabled value.  </summary>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="samAccountName">The SAM account name for this computer principal. </param>
      <param name="password">The password for this account.</param>
      <param name="enabled">A Boolean value that specifies whether the account is enabled. </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> collection of <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that have had bad password attempts within the parameters specified.</summary>
      <returns>A <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that match the search parameters, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> structure that is used in conjunction with the <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> to find computers with bad password attempts.</param>
      <param name="type">The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> that specifies the type of comparison to use in the search.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> collection of <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that have an expiration time within the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that match the search parameters, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> structure that is used in conjunction with the <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> to filter search results.</param>
      <param name="type">The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> that specifies the type of comparison to use in the search.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a computer principal object that matches the specified identity type and value. This version of the <see cref="Overload:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByIdentity" /> method determines the format of the identity value. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <paramref name="identityValue" /> parameter.  </param>
      <param name="identityValue">The identity of the computer. This parameter can be any format that is contained in the <see cref="T:System.DirectoryService.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple computer principal objects matching the current computer object were found.</exception>
      <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
      <summary>Returns a computer principal object that matches the specified identity value. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object that matches the specified identity value, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityValue">The identity of the computer. This parameter can be any format that is contained in the <see cref="T:System.DirectoryService.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple computer principal objects matching the current computer object were found.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> collection of <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that have a lockout time within the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that match the search parameters, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> structure that is used in conjunction with the <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> to filter search results.</param>
      <param name="type">The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> that specifies the type of comparison to use in the search.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> collection of <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that have a logon time within the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that match the search parameters, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> structure that is used in conjunction with the <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> to filter search results.</param>
      <param name="type">The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> that specifies the type of comparison to use in the search.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.ComputerPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> collection of <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that have a password set time within the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryService.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryService.AccountManagement.ComputerPincipal" /> objects that match the search parameters, or an empty collection if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryService.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="time">A <see cref="T:System.DateTime" /> structure that is used in conjunction with the <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> to filter search results.</param>
      <param name="type">The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> that specifies the type of comparison to use in the search.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.ComputerPrincipal.ServicePrincipalNames">
      <summary>Gets a collection of the Service Principal Names (SPN) for the computer account.  </summary>
      <returns>A collection of SPNs that specify the names of the accounts registered for this computer. The syntax for the SPN depends on the underlying store. </returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.ContextOptions">
      <summary>Specifies the options that are used for binding to the server. The application can set multiple options that are linked with a bitwise OR operation.  </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.Negotiate">
      <summary>The client is authenticated by using either Kerberos or NTLM. When the user name and password are not provided, the Account Management API binds to the object by using the security context of the calling thread, which is either the security context of the user account under which the application is running or of the client user account that the calling thread represents.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.SimpleBind">
      <summary>The client is authenticated by using the Basic authentication.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.SecureSocketLayer">
      <summary>The channel is encrypted by using the Secure Sockets Layer (SSL). Active Directory requires that the Certificate Services be installed to support SSL. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.Signing">
      <summary>The integrity of the data is verified. This flag can only be used with the Negotiate context option and is not available with the simple bind option. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.Sealing">
      <summary>The data is encrypted by using Kerberos.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextOptions.ServerBind">
      <summary>Specify this flag when you use the domain context type if the application is binding to a specific server name. </summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.ContextType">
      <summary>Specifies the type of store to which the principal belongs. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextType.Machine">
      <summary>The computer store. This represents the SAM store.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextType.Domain">
      <summary>The domain store. This represents the AD DS store. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory">
      <summary>The application directory store. This represents the AD LDS store.</summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute">
      <summary>Represents the schema object that is used to create an object of this type in the directory. This attribute is required for principal extensions and can only be set on classes. </summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute" /> class with the specified object class value. The object created in the directory will be created with this object class type.    </summary>
      <param name="objectClass">The string that contains the object class value. The <see cref="P:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute.ObjectClass" /> property is initialized to this value. The object class string represents the objectClass attribute for the application directory and domain directories. </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute.Context">
      <summary>This property is not implemented and always returns null. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value that specifies the type of store to which the attribute applies, or null if no context is set. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryObjectClassAttribute.ObjectClass">
      <summary>Returns the object class value for the extended class.</summary>
      <returns>The object class value for the extended class. </returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute">
      <summary>Contains the data required by the store to map a principal property to a directory attribute. This attribute is required for principal extensions and can only be set on a property. It must be specified on every property that represents a directory attribute in the extended class. </summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute" /> class with the schema attribute name.  </summary>
      <param name="schemaAttributeName">The name of the attribute that is set in the directory. The <see cref="P:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName" /> property is initialized to this value. This property represents the ldapDisplayName for application directory and domain directories. </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context">
      <summary>This property is not implemented and always returns null. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value that specifies the type of store to which this attribute applies, or null if no context is set. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName">
      <summary>Returns the string that represents the attribute name in the directory. </summary>
      <returns>The string that represents the attribute name in the directory. </returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute">
      <summary>The RDN prefix used to construct the RDN for the new object that is inserted into the store. The default RDN prefix of "CN" is used by the Account Management API if this attribute is not set. This attribute is optional and can only be set on principal extension classes. </summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute" /> class with the RDN prefix.  </summary>
      <param name="rdnPrefix">The RDN prefix. The <see cref="P:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute.RdnPrefix" /> property is initialized to this value. </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute.Context">
      <summary>This property is not implemented and always returns null.  </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value that specifies the type of store to which this attribute applies, or null is no context is set. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.DirectoryRdnPrefixAttribute.RdnPrefix">
      <summary>Returns the RDN prefix used to construct the RDN. </summary>
      <returns>The RDN prefix used to construct the RDN.  </returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.GroupPrincipal">
      <summary>Encapsulates group accounts. Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.  </summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class by using the specified context. </summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class and assigns it to the specified context and SAM account name. </summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="samAccountName">The SAM account name for this principal.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose">
      <summary>Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a group principal object that matches the specified identity type, and value. This version of the <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> method determines the format of the identity value.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> that matches the specified identity value and type, or null if no matches are found. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <paramref name="identityValue" /> parameter.  </param>
      <param name="identityValue">The identity of the group principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple group principal objects matching the current group object were found.</exception>
      <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
      <summary>Returns a group principal object that matches the specified identity value.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityValue">The identity of the group principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple group principal objects matching the current group object were found.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers">
      <summary>Returns a collection of the principal objects that is contained in the group.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)">
      <summary>Returns a collection of the principal objects that is contained in the group. When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.  </returns>
      <param name="recursive">A Boolean value that specifies whether the group is searched recursively. </param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope">
      <summary>Gets or sets a Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration that specifies the scope for this group principal. </summary>
      <returns>A nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration value that specifies the scope of this group or null if no scope has been set. </returns>
      <exception cref="T:System.ArgumentNullException">The application may not set this property to null. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup">
      <summary>Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.  </summary>
      <returns>true if the group is security enabled, or null if the group has not been persisted; otherwise false. </returns>
      <exception cref="T:System.ArgumentNullException">The application may not set this property to null. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members">
      <summary>Gets a collection of principal objects that represent the members of the group. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object that contains the principal objects that represent the members of the group. </returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.GroupScope">
      <summary>Specifies the scope of the group principal.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.GroupScope.Local">
      <summary>The scope of the group is local. This group type is supported on AD DS and AD LDS.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.GroupScope.Global">
      <summary>The group's scope is global. This group type is supported on AD DS. When a global group is specified with an AD LDS directory, a <see cref="F:System.DirectoryServices.AccountManagement.GroupScope.Local" /> group is created instead. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.GroupScope.Universal">
      <summary>The scope of the group is universal. This group type is supported on AD DS and AD LDS. </summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.IdentityType">
      <summary>Specifies the format of the identity.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.SamAccountName">
      <summary>The identity is a Security Account Manager (SAM) name. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.Name">
      <summary>The identity is a name. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.UserPrincipalName">
      <summary>The identity is a User Principal Name (UPN). </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.DistinguishedName">
      <summary>The identity is a Distinguished Name (DN).</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.Sid">
      <summary>The identity is a Security Identifier (SID) in Security Descriptor Definition Language (SDDL) format. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.IdentityType.Guid">
      <summary>The identity is a Globally Unique Identifier (GUID). </summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.MatchType">
      <summary>The <see cref="T:System.DirectoryServices.AccountManagement.MatchType" /> enumeration specifies the type of comparison used in a search.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.Equals">
      <summary>The search results include values that equal the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that have the same date and time. </summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.NotEquals">
      <summary>The search results include values that are not equal to the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that do not include the specified date and time.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.GreaterThan">
      <summary>The search results include values that are greater than the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that are dated after the specified date and time.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.GreaterThanOrEquals">
      <summary>The search results include values that are greater than or equal to the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that are dated on or after the specified date and time.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.LessThan">
      <summary>The search results include values that are less than the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that are dated prior to the specified date and time.</summary>
    </member>
    <member name="F:System.DirectoryServices.AccountManagement.MatchType.LessThanOrEquals">
      <summary>The search results include values that are less than or equal to the supplied value. If the supplied value specifies a date and time, the returned collection includes objects that are dated prior to or on the specified date and time.</summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">
      <summary>This exception is thrown by methods that expect to match a single principal object when there are multiple matches to the search query.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.MultipleMatchesException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.MultipleMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.MultipleMatchesException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.MultipleMatchesException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">
      <summary>This exception is thrown when no matching principal object could be found with the specified parameters.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the message</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PasswordException">
      <summary>This exception is thrown when a password does not meet complexity requirements.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PasswordException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PasswordException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PasswordException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /> class with the specified error message.</summary>
      <param name="message"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PasswordException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PasswordException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.Principal">
      <summary>Encapsulates the account data and operations common to all security principals. This is the abstract base class from which all security principals are derived.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> class. This constructor is called by derived-class constructors to initialize the base class and is not intended to be called directly from your code. </summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted">
      <summary>Determines whether the <see cref="M:System.DirectoryServices.AccountManagement.Principal.Dispose" /> or <see cref="M:System.DirectoryServices.AccountManagement.Principal.Delete" /> methods have been called on this class. This method is called by classes that derive from this principal class. </summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="M:System.DirectoryServices.AccountManagement.Principal.Dispose" /> method has been called on this principal object.</exception>
      <exception cref="T:System.InvalidOperationsException">The <see cref="M:System.DirectoryServices.AccountManagement.Principal.Delete" /> method has been called on this principal object.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.Context">
      <summary>Gets a principal context that is associated with the principal. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object that contains the context associated with this principal. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.ContextRaw">
      <summary>Gets a principal context that is associated with this principal. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object that contains the context associated with this principal. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.ContextType">
      <summary>Gets the context type enumeraton value that specifies the type of principal context associated with this principal. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value that specifies the context type. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.Delete">
      <summary>Deletes the principal object from the store. </summary>
      <exception cref="T:System.InvalidOperationsException">The object that is not persisted in the store.The object has already been deleted. The target context type must match the context type of the current principal.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.Description">
      <summary>Gets or sets the description of the principal. </summary>
      <returns>The description text for this principal or null if there is no description. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.DisplayName">
      <summary>Gets or sets the display name for this principal.</summary>
      <returns>The display name for this principal or null if there is no display name. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.Dispose">
      <summary>Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.DistinguishedName">
      <summary>Gets the distinguished name (DN) for this principal.</summary>
      <returns>The DN for this principal or null if there is no DN.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)">
      <summary>Returns a Boolean value that specifies whether the supplied object is equal to the current object. </summary>
      <returns>true if the supplied object and current principal objects represent the same underlying principal in the store; otherwise false. </returns>
      <param name="o">The <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that is compared to the current instance. </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)">
      <summary>Retrieves an attribute of an extended class object.</summary>
      <returns>Returns an array of objects, or null if no attribute exists with that name.  See System.DirectoryServices.AccountManagement Principle Extensions for an example on using this function.</returns>
      <param name="attribute">The name of the attribute to retrieve.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)">
      <summary>Sets the value of an attribute in an extended class.</summary>
      <param name="attribute">The name of the attribute.</param>
      <param name="value">The object that contains the value of the attribute.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a principal object that matches the specified identity type, and value. This version of the <see cref="M:System.DirectoryServices.AccountManagement.Principal.FindByIdentity" /> method determines the format of the identity value.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that matches the specified identity value and type or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityType">An <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <paramref name="identityValue" /> parameter.  </param>
      <param name="identityValue">The identity of the principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple principal objects matching the current object were found.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The identity type is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
      <summary>Returns a principal object that matches the specified identity value.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that matches the specified identity value and type, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityValue">The identity of the principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple principal objects matching the current object were found.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a principal object that matches the specified identity type, and value. This method is called by the implementation of the derived-class FindByIdentity method to restrict the search to the derived class type and is not intended to be called directly from your code.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that matches the specified identity value and type or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="principalType">The type of object for which results are returned. This must of type <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> or a type derived from the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> class. </param>
      <param name="identityType">An <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the type of the identity value.</param>
      <param name="identityValue">The identity of the principal.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)">
      <summary>Returns a principal object that matches the specified identity type, and value. This method is called by the implementation of the derived-class FindByIdentity method to restrict the search to the derived class type and is not intended to be called directly from your code.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that matches the specified identity value and type, or null if no matches are found. </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="principalType">The type of object for which results are returned. This must of type <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> or a type derived from the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> class.</param>
      <param name="identityValue">The identity of the principal.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.GetGroups">
      <summary>Returns a collection of group objects that specify the groups of which the current principal is a member.  See the Knowledge Base article here for important information regarding the functionality of <see cref="M:System.DirectoryServices.AccountManagement.Principal.GetGroups" />. </summary>
      <returns>A collection of <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> objects that specify the groups of which the current principal is a member. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Returns a collection of group objects that the principal is a member of and that exist in the store provided by the specified context parameter.  See the Knowledge Base article here for important information regarding the functionality of <see cref="M:System.DirectoryServices.AccountManagement.Principal.GetGroups" />.</summary>
      <returns>A collection of <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> objects that specify the groups of which the current principal is a member. </returns>
      <param name="contextToQuery">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object that specifies the context against which the query is performed. When the context is located in another domain, the query is performed against the principal objects' representation in the specified context. </param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.GetHashCode">
      <summary>Retrieves the hash created from the contents of the principal object, suited for use in hashing algorithms and data structures like a hash table.</summary>
      <returns>A hash code for the current principal. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject">
      <summary>Returns the underlying <see cref="T:System.DirectoryServices.DirectoryEntry" /> object that provides the contact data for the principal object. </summary>
      <returns>The underlying <see cref="T:System.DirectoryServices.DirectoryEntry" /> object. </returns>
      <exception cref="T:system.InvalidOperationExtension">The current principal has not been persisted and does not have an associated <see cref="T:System.DirectoryServices.DirectoryEntry" /> object. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType">
      <summary>Returns the underlying object type.  </summary>
      <returns>The underlying object type. For AD DS, AD LDS, and SAM the type is <see cref="T:System.DirectoryServices.DirectoryEntry" />. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.Guid">
      <summary>Gets the GUID associated with this principal. </summary>
      <returns>The Nullable <see cref="T:System.Guid" /> associated with this principal or null if there is no GUID. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)">
      <summary>Returns a Boolean value that specifies whether the principal is a member of the specified group.  </summary>
      <returns>true if the principal is a member of the specified group; otherwise false.  </returns>
      <param name="group">The <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object for which principal membership is determined. </param>
      <exception cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">The <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> specified in the group parameter could not be found. </exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">More than one matching <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> was found. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a Boolean value that specifies whether the principal is a member of the group specified by identity type and value. </summary>
      <returns>true if the principal is a member of the specified group; otherwise false.  </returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the type of the identity value.  </param>
      <param name="identityValue">The identity of the group. </param>
      <exception cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">The identity type or value does not correspond to a <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />.</exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">More than one matching <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> was found. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.Name">
      <summary>Gets or sets the name of this principal. </summary>
      <returns>The name of the principal or null if the name attribute is not set. </returns>
      <exception cref="T:System.ArgumentNullException">The application tried to set the name to null.</exception>
      <exception cref="T:System.InvlaidOperationException">The underlying store does not support this property. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.SamAccountName">
      <summary>Gets or sets the SAM account name for this principal. </summary>
      <returns>The SAM account name for this principal or null if no name has been set. </returns>
      <exception cref="T:System.ArgumentNullException">The application tried to set the SAM account name to null.</exception>
      <exception cref="T:System.InvlaidOperationException">The application tried to set the SAM account name on a persisted principal. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.Save">
      <summary>Saves the changes that were made on the principal object to the store. If this is a new principal object, this method inserts it into the store.</summary>
      <exception cref="T:System.InvalidOperationException">The principal has not yet been associated with a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object.This type of principal cannot be inserted in the store. </exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">An exception occurred when saving changes to the store, or updating the group membership in the store. </exception>
      <exception cref="T:System&gt;DirectoryServices.AccountManagement.PrincipalExistsException">The principal already occurs in the store. </exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.PasswordException">The password does not meet complexity requirements. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Saves the changes that were made on the principal object to the store. If this is a new principal object, this method inserts it into the specified context. If the principal has already been persisted, it is moved from the original context to the specified context. </summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <exception cref="T:System.InvalidOperationException">The principal has not yet been associated with a <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object.  This type of principal cannot be inserted in the store. </exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">An exception occurred when saving changes to the store, or updating the group membership in the store. </exception>
      <exception cref="T:System&gt;DirectoryServices.AccountManagement.PrincipalExistsException">The principal already occurs in the store. </exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.PasswordException">The password does not meet complexity requirements. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.Sid">
      <summary>Gets the Security ID (SID) of the principal. </summary>
      <returns>The <see cref="T:System.Security.Principal.SecurityIdentifier" /> for this principal or null if there is no SID. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass">
      <summary>Gets the structural object class directory attribute.</summary>
      <returns>The structural object class directory attribute.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.Principal.ToString">
      <summary>Returns a user friendly string representation of the current principal object.</summary>
      <returns>A string representation of the current <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.Principal.UserPrincipalName">
      <summary>Gets or sets the user principal name (UPN) associated with this principal. </summary>
      <returns>The UPN associated with this principal or null if no if the UPN has not been set. </returns>
      <exception cref="T:System.InvlaidOperationException">The underlying store does not support this property. </exception>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalCollection">
      <summary>A mutable collection of objects derived from the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> class.  This class is designed to be used for multi-valued properties that contain Principals.  Manipulating the contents of this collection changes the contents of the corresponding store property, which is made permanent when <see cref="M:System.DirectoryServices.AccountManagement.Principal.Save" /> is called on the corresponding principal object.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Add(System.DirectoryServices.AccountManagement.ComputerPrincipal)">
      <summary>Adds the specified <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object to the end of the collection</summary>
      <param name="computer"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Add(System.DirectoryServices.AccountManagement.GroupPrincipal)">
      <summary>Adds the specified <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object to the end of the collection</summary>
      <param name="group"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Add(System.DirectoryServices.AccountManagement.Principal)">
      <summary>Adds the specified <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object to the end of the collection</summary>
      <param name="principal">A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Add(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Searches for a <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that matches the parameters, and adds it to the end of the collection.</summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object for the principal to be added to the collection.</param>
      <param name="identityType">An <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> object that specifies the format of <paramref name="identityValue" /></param>
      <param name="identityValue">A string that identifies the principal, in the format specified by <paramref name="identityType" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Add(System.DirectoryServices.AccountManagement.UserPrincipal)">
      <summary>Adds the specified <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object to the end of the collection</summary>
      <param name="user">A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear">
      <summary>Removes all Principals from the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Contains(System.DirectoryServices.AccountManagement.ComputerPrincipal)">
      <summary>Returns true if the collection contains the specified <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object.</summary>
      <returns>Returns a bool.</returns>
      <param name="computer">A <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Contains(System.DirectoryServices.AccountManagement.GroupPrincipal)">
      <summary>Returns true if the collection contains the specified <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</summary>
      <returns>Returns a bool.</returns>
      <param name="group">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Contains(System.DirectoryServices.AccountManagement.Principal)">
      <summary>Returns true if the collection contains the specified <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object.</summary>
      <returns>Returns a bool.</returns>
      <param name="principal">A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Contains(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns true if the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object matching the <paramref name="indentityType" />/<paramref name="idendityValue" /> pair is in the collection</summary>
      <returns>Returns a bool.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object of the principal.</param>
      <param name="identityType">An <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> object that specifies the format of <paramref name="identityValue" /></param>
      <param name="identityValue">A string that identifies the principal, in the format specified by <paramref name="identityType" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Contains(System.DirectoryServices.AccountManagement.UserPrincipal)">
      <summary>Returns true if the collection contains the specified <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object.</summary>
      <returns>Returns a bool.</returns>
      <param name="user">A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.CopyTo(System.DirectoryServices.AccountManagement.Principal[],System.Int32)">
      <summary>Copies the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects from this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> into the specified array, starting at the specified position index in array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that should be populated with <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects.</param>
      <param name="index">The position in <paramref name="array" /> into which the first principal object in the collection should be copied.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.Count">
      <summary>Returns the count of Principal objects in this collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.GetEnumerator">
      <summary>Returns an enumerator to iterate through the principals in the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> containing the principals in the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.IsReadOnly">
      <summary>Returns false.  This is not a read-only collection.</summary>
      <returns>Returns a bool.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.IsSynchronized">
      <summary>Returns false.  It is up to the application to serialize access to this collection.</summary>
      <returns>Returns a bool.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove(System.DirectoryServices.AccountManagement.ComputerPrincipal)">
      <summary>Removes the specified <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object from the collection, and returns true if the <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> was a member of this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, and false otherwise (in which case the method performs no operation).</summary>
      <returns>Returns a bool.</returns>
      <param name="computer">A <see cref="T:System.DirectoryServices.AccountManagement.ComputerPrincipal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove(System.DirectoryServices.AccountManagement.GroupPrincipal)">
      <summary>Removes the specified <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object from the collection, and returns true if the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> was a member of this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, and false otherwise (in which case the method performs no operation).</summary>
      <returns>Returns a bool.</returns>
      <param name="group">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove(System.DirectoryServices.AccountManagement.Principal)">
      <summary>Removes the specified <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object from the collection, and returns true if the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> was a member of this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, and false otherwise (in which case the method performs no operation).</summary>
      <returns>Returns a bool.</returns>
      <param name="principal">A <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Finds the <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object specified by the given <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> and <paramref name="identityType" />/<paramref name="identityValue" /> pair from the collection, and returns true if the identified <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> was a member of this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, and false otherwise (in which case the method performs no operation).</summary>
      <returns>Returns a bool.</returns>
      <param name="context">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object.</param>
      <param name="identityType">An <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> that identifies the format of <paramref name="identityValue" />.</param>
      <param name="identityValue">A string.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove(System.DirectoryServices.AccountManagement.UserPrincipal)">
      <summary>Removes the specified <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object from the collection, and returns true if the <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> was a member of this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />, and false otherwise (in which case the method performs no operation).</summary>
      <returns>Returns a bool.</returns>
      <param name="user">A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.SyncRoot">
      <summary>Returns a synchronization object that can be used to synchronize access to this collection.</summary>
      <returns>Returns the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object itself.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects from this <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> into the specified array, starting at the specified position index in array.</summary>
      <param name="array">The T:System.Array that should be populated with <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects.</param>
      <param name="index">The position in <paramref name="array" /> to which the first <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object should be copied to.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.System#Collections#ICollection#Count">
      <summary>Returns the count of Principal objects in this collection.</summary>
      <returns>Returns an integer.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Always returns false.  It is up to the application to synchronize access to this collection.</summary>
      <returns>Returns a bool.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalCollection.System#Collections#ICollection#SyncRoot">
      <summary>Returns a synchronization object that can be used to synchronize access to this collection.  Returns the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object itself.</summary>
      <returns>The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator to iterate through the principals in the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> containing the principals in the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />.</returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalContext">
      <summary>Encapsulates the server or domain against which all operations are performed, the container that is used as the base of those operations, and the credentials used to perform the operations.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type.  </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context.</param>
      <exception cref="T:System.ArgumentException">A name or container must be specified when using the application directory context.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type and name. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context.</param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <exception cref="T:System.ArgumentException">A name must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type, name, and container. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context.</param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <param name="container">The container on the store to use as the root of the context. All queries are performed under this root, and all inserts are performed into this container.For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> and <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types, this parameter is the distinguished name of a container object. For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, this parameter must be set to null.</param>
      <exception cref="T:System.ArgumentException">A container cannot be specified when the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type is specified in the <paramref name="contextType" /> parameter.A name or container must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type, name, container, and context options. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context.</param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <param name="container">The container on the store to use as the root of the context. All queries are performed under this root, and all inserts are performed into this container.For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> and <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types, this parameter is the distinguished name of a container object. For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, this parameter must be set to null.</param>
      <param name="options">A combination of one or more <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration values specifying the options used to bind to the server. If this parameter is null, the default options are ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing.  </param>
      <exception cref="T:System.ArgumentException">A container cannot be specified when the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type is specified in the <paramref name="contextType" /> parameter.A name or container must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. The <paramref name="options" /> parameter does not contain a combination of valid <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration values. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type, name, container, context options, username, and password. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context. </param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <param name="container">The container on the store to use as the root of the context. All queries are performed under this root, and all inserts are performed into this container.For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> and <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types, this parameter is the distinguished name of a container object. For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, this parameter must be set to null.</param>
      <param name="options">A combination of one or more <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration values the options used to bind to the server. If this parameter is null, the default options are ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing.  </param>
      <param name="userName">The username used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used. Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store.</param>
      <param name="password">The password used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used.  Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="username" /> and <paramref name="password" /> parameters must either be null or contain a value. A container cannot be specified when the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type is specified in the <paramref name="contextType" /> parameter.A name or container must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. The <paramref name="options" /> parameter does not contain a combination of valid <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration values. </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type, name, username, and password. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context.</param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <param name="userName">The username used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used. Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store.</param>
      <param name="password">The password used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used. Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store.</param>
      <exception cref="T:System.ArgumentException">The <paramref name="username" /> and <paramref name="password" /> parameters must either be null or contain a value. A name must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value.  </exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> class with the specified context type, name, container, username, and password. </summary>
      <param name="contextType">A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of store for the principal context. </param>
      <param name="name">The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context types, the machine name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, or the name of the server and port hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> context type this context is a domain controller for the domain of the user principal under which the thread is running. If the name is null for a <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type, this is the local machine name. This parameter cannot be null for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types.</param>
      <param name="container">The container on the store to use as the root of the context. All queries are performed under this root, and all inserts are performed into this container.For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> and <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> context types, this parameter is the distinguished name of a container object. For <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, this parameter must be set to null.</param>
      <param name="userName">The username used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used.  Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store.</param>
      <param name="password">The password used to connect to the store. If the <paramref name="username" /> and <paramref name="password" /> parameters are both null, the default credentials of the current principal are used.  Otherwise, both <paramref name="username" /> and <paramref name="password" /> must be non-null, and the credentials they specify are used to connect to the store. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="username" /> and <paramref name="password" /> parameters must either be null or contain a value. A container cannot be specified when the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context type is specified in the <paramref name="contextType" /> parameter.A <paramref name="name" /> or <paramref name="container" /> must be specified when <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> is specified in the <paramref name="contextType" /> parameter. </exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The <paramref name="contextType" /> parameter does not contain a valid <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer">
      <summary>Gets the name of the server to which the principal context is connected. </summary>
      <returns>The name of the server to which the principal context is connected or null if the principal context is not connected to a server. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.Container">
      <summary>Gets the value specified in the container parameter in the constructor.</summary>
      <returns>The container on the store to use as the root of the context or null if the container is not specified. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType">
      <summary>Gets the context type that specifies the type of store for the principal context. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> enumeration value specifying the type of target to connect to.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.Dispose">
      <summary>Disposes the current instance of the <see cref="T:System.DirectorySerices.AccountManagement.PrincipalContext" /> object. </summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.Name">
      <summary>Gets the value specified as the <paramref name="name" /> parameter in the constructor.</summary>
      <returns>The name of the domain or server for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> contexts types, the host name for <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> context types, the name of the server hosting the <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> instance, or null if no name is set. </returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.Options">
      <summary>Gets the options specified in the <paramref name="contextOptions" /> parameter of the constructor. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration value specifying the type of target to connect to.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalContext.UserName">
      <summary>Gets the value specified in the username parameter in the constructor.</summary>
      <returns>The username used to connect to the store, or null if no user name exists.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String)">
      <summary>Creates the connections to the server and returns a Boolean value that specifies whether the specified username and password are valid. </summary>
      <returns>true if the credentials are valid; otherwise false. </returns>
      <param name="userName">The username that is validated on the server.</param>
      <param name="password">The password that is validated on the server.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)">
      <summary>Creates the connections to the server and returns a Boolean value that specifies whether the specified user name and password are valid. This method performs fast credential validation of the username and password. </summary>
      <returns>true if the credentials are valid; otherwise false. </returns>
      <param name="userName">The username that is validated on the server.</param>
      <param name="password">The password that is validated on the server.</param>
      <param name="options">A combination of one or more <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> enumeration values the options used to bind to the server. This parameter can only specify Simple bind with or without SSL, or Negotiate bind. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="options" /> parameter must specify Negotiate when the context type is <see cref="T:System.DirectoryServices.AccountManagement.ContextType.Machine." /></exception>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalException">
      <summary>The base class of exceptions thrown by <see cref="N:System.DirectoryServices.AccountManagement" /> objects.</summary>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalExistsException">
      <summary>Thrown by <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection.Add" /> when an attempt is made to insert a principal that already exists in the collection, or by <see cref="N:System.DirectoryServices.AccountManagement.Principal.Save" /> when an attempt is made to save a new principal that already exists in the store.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalExistsException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalExistsException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalExistsException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalExistsException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">
      <summary>Thrown when ADSI returns an error during an operation to update the store.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class with the specified error message.</summary>
      <param name="message">The text of the error message.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class with the specified error message, the specified nested exception, and the specified error code.</summary>
      <param name="message">The text of the message.</param>
      <param name="innerException">A nested exception.</param>
      <param name="errorCode">An error code.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.#ctor(System.String,System.Int32)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class with the specified error message and specified error code.</summary>
      <param name="message">The text of the message.</param>
      <param name="errorCode">An error code.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalOperationException.ErrorCode">
      <summary>Returns an integer error code.</summary>
      <returns>Returns an integer.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalOperationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">The contextual information about the source or destination. </param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalSearcher">
      <summary>Encapsulates the methods and search patterns used to execute a query against the underlying principal store.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> class. The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> property must be set before the Principal searcher object can be used to perform a search.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.#ctor(System.DirectoryServices.AccountManagement.Principal)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> class with the specified query filter.</summary>
      <param name="queryFilter">The <see cref="T:System.DirectoryServices.AccountManagement.Principal" />  object that specifies the filter to use for the search. The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> property is initialized to this value. </param>
      <exception cref="T:System.ArgumentException">Persisted principal objects can not be used as the <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" />. The <paramref name="queryFilter" /> parameter cannot be null or empty.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.Context">
      <summary>Gets that principal context that is used to perform the query. The context specifies the server or domain against which search operations are performed. </summary>
      <returns>The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> object that specifies the server or domain against which operations are performed. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.Dispose">
      <summary>Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.FindAll">
      <summary>Returns a principal search result that contains a collection of all the principal objects that match the principal specified in the query filter property. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that matches the query filter or an empty collection if no results are found.  </returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> contains referential properties. For more information, see the Query by Example overview topic. The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> is a persisted principal.</exception>
      <exception cref="T:System.ArgumentException">A <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> must first be assigned to the principal searcher before the query can be performed.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.FindOne">
      <summary>Returns a principal search result that contains the first principal object found that matches the principal specified in the <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> property. </summary>
      <returns>A  <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that contains the principal object that matches the query filter or null if no results are found.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> contains referential properties. For more information, see the Query by Example overview topic.The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> is a persisted principal.</exception>
      <exception cref="T:System.ArgumentException">A <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> must first be assigned to the principal searcher before the query can be performed.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher">
      <summary>Returns the underlying search object that is used by the Account Management API to perform the search. </summary>
      <returns>A <see cref="T:System.DirectoryServices.DirectorySearcher" /> object. </returns>
      <exception cref="T:System.InvalidOperationException">A <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> must first be assigned to the principal searcher before the query can be performed.The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> contains referential properties. For more information, see the Query by Example overview topic. The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> is a persisted principal.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcherType">
      <summary>Returns the type of the object returned from the <see cref="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher" /> method. </summary>
      <returns>A <see cref="T:System.Type" /> that specifies the type of object returned from the <see cref="M:System.DirectoryServices.AccountManagement.PrincipalSearcher.GetUnderlyingSearcher" /> method. </returns>
      <exception cref="T:System.InvalidOperationException">A <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> must first be assigned to the principal searcher before the query can be performed.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter">
      <summary>Gets or sets the query filter that is used to locate matching principals. </summary>
      <returns>The <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> object that is used for the query or null if no filter is set. </returns>
      <exception cref="T:System.ArgumentException">Persisted Principal objects can not be used as the <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" />.The <see cref="P:System.DirectoryServices.AccountManagement.PrincipalSearcher.QueryFilter" /> cannot be null or empty.</exception>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects that are returned by a search. </summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1.Dispose">
      <summary>Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult" /> object.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.  </summary>
      <returns>The <see cref="T:SystemCollections.IEnumerator" /> object that is used to iterate through the principal objects. </returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate over the objects in this collection.</summary>
      <returns>Returns an <see cref="T:System.Collections.IEnumerator" /> containing the principals in the search result collection.</returns>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException">
      <summary>This exception is thrown when the API is unable to connect to the server.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class from the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> instances.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the information required to serialize the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /></param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source of the serialized stream that is associated with the new <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class with the specified error message.</summary>
      <param name="message">An error message.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.String,System.Exception)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class with the specified error message and specified nested exception.</summary>
      <param name="message">The text of the message.</param>
      <param name="innerException">A nested exception.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.String,System.Exception,System.Int32)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class with the specified error message, the specified nested exception, and the specified error code.</summary>
      <param name="message">The text of the error message.</param>
      <param name="innerException">A nested exception.</param>
      <param name="errorCode">An error code.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.String,System.Exception,System.Int32,System.String)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class with the specified error message, the specified nested exception, the specified error code, and the specified server name.</summary>
      <param name="message">The text of the message.</param>
      <param name="innerException">A nested exception.</param>
      <param name="errorCode">An error code.</param>
      <param name="serverName">A server name.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.#ctor(System.String,System.Int32)">
      <summary>Instantiates a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalServerDownException" /> class with the specified error message and specified error code.</summary>
      <param name="message">The text of the message.</param>
      <param name="errorCode">An error code.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalServerDownException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the parameter name and additional exception information.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object that will hold the serialized object data.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object that will hold contextual information about the source or destination.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1">
      <summary>Multi-valued properties, such as <see cref="P:System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations" />, have a value of the type <see cref="T:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1" />.  This class provides methods to enumerate and manipulate those values.</summary>
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Add(`0)">
      <summary>Adds the specified value to the end of the collection.</summary>
      <param name="value">An object to be added to the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Clear">
      <summary>Clears the contents of the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Contains(`0)">
      <summary>Returns true if the specified object is in the collection, and false otherwise.</summary>
      <returns>Returns a bool.</returns>
      <param name="value">An object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copys the contents of the collection to the specified array, starting at the specified position in the array.</summary>
      <param name="array">An <see cref="T:System.Array" /> of objects.</param>
      <param name="index">An integer representing the position in <paramref name="array" /> to which the first object in the collection should be copied.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Count">
      <summary>Gets the number of objects in the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the collection.</summary>
      <returns>An <see cref="T:SystemCollections.IEnumerator" /> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IndexOf(`0)">
      <summary>Returns the index of the specified object, or -1 if the object is not in the collection.</summary>
      <returns>An integer.</returns>
      <param name="value">The object whose index is required.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Insert(System.Int32,`0)">
      <summary>Inserts the specified object into the collection at the specified index.</summary>
      <param name="index">The index at which <paramref name="value" /> will be inserted into the collection.</param>
      <param name="value">An object.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsFixedSize">
      <summary>Gets a bool that represents whether or not the collection is fixed in size.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsReadOnly">
      <summary>Gets a bool that represents whether or not the collection is read-only.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Item(System.Int32)">
      <summary>Gets the object at the specified index in the collection.</summary>
      <param name="index"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.Remove(`0)">
      <summary>Removes the specified object from the collection.</summary>
      <returns>Returns a bool.  Returns true if the object was removed, or false if the object was not in the collection.</returns>
      <param name="value">The object to be removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.RemoveAt(System.Int32)">
      <summary>Removes the object at the specified index from the collection.</summary>
      <param name="index"></param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the contents of the collection to the specified array, starting at the specified index.</summary>
      <param name="array"></param>
      <param name="index"></param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#Count">
      <summary>Gets the number of objects in the collection.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator for iterating through the collection.</summary>
      <returns>An <see cref="T:SystemCollections.IEnumerator" /> object.</returns>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds the specified object to the end of the collection.</summary>
      <param name="value">An object to be added to the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Clear">
      <summary>Deletes the contents of the collection.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Returns a bool indicating whether the specified object is in the collection.</summary>
      <returns>boolean</returns>
      <param name="value"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Returns the index of the specified object in the collection, or -1 if it is not in the collection.</summary>
      <returns>An integer.</returns>
      <param name="value">An object.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts the specified object at the specified position into the collection.</summary>
      <param name="index">The position into which <paramref name="value" /> should be inserted.</param>
      <param name="value">An object</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the collection is fixed-size.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether access to the collection is read-only.</summary>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the object at the specified index in the collection.</summary>
      <param name="index">An integer.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the specified object from the collection.</summary>
      <param name="value">The object to be removed from the collection.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.PrincipalValueCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the object at the specified index from the collection.</summary>
      <param name="index">The index of the object to be removed from the collection.</param>
    </member>
    <member name="T:System.DirectoryServices.AccountManagement.UserPrincipal">
      <summary>Encapsulates principals that are user accounts.</summary>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> class by using the specified context. </summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> class by using the specified context, SAM account name, password, and enabled value. </summary>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="samAccountName">The SAM account name for this user principal.</param>
      <param name="password">The password for this account. </param>
      <param name="enabled">A Boolean value that specifies whether the account is enabled.</param>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.AdvancedSearchFilter">
      <summary>Returns an <see cref="T:System.DirectoryServices.AccountManagement.AdvancedSearchFilter" /> object, for use with Query By Example to set read-only properties before passing the object to the <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearcher" />.</summary>
      <returns>An <see cref="T:System.DirectoryServices.AccountManagement.AdvancedSearchFilter" /> object.</returns>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.Current">
      <summary>Gets a user principal object that represents the current user under which the thread is running.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> representing the current user. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
      <exception cref="T:System.DirectoryServices.AccountManagement.NoMatchingPrincipalException">The user principal object for the current user could not be found. The principal object may contain an access control list to prevent access by unauthorized users.</exception>
      <exception cref="T:System.MultipleMatchesException">Multiple user principal objects matching the current user were found.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmailAddress">
      <summary>Gets or sets the e-mail address for this account.</summary>
      <returns>The e-mail address of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.EmployeeId">
      <summary>Gets or sets the employee ID for this user principal. </summary>
      <returns>The employee ID of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.PrincipleSearchResult'1" /> objects for users that have an incorrect password attempt recorded in the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> objects, or an empty collection if no results are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.PrincipleSearchResult'1" /> objects for users that have an account expiration time in the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> objects, or an empty collection if no results are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)">
      <summary>Returns a user principal object that matches the specified identity type, and value. This version of the <see cref="Overload:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity" /> method determines the format of the identity value. </summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContex" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityType">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <paramref name="identityValue" /> parameter.</param>
      <param name="identityValue">The identity of the user principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple user principal objects matching the current user object were found.</exception>
      <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)">
      <summary>Returns a user principal object that matches the specified identity value.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> object that matches the specified identity value, or null if no matches are found.</returns>
      <param name="context">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</param>
      <param name="identityValue">The identity of the user principal. This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</param>
      <exception cref="T:System.MultipleMatchesException">Multiple user principal objects matching the current user object were found.</exception>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.PrincipleSearchResult'1" /> objects for users that have an account lockout time in the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> objects, or an empty collection if no results are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.PrincipleSearchResult'1" /> objects for users that have account logon recorded in the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> objects, or an empty collection if no results are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)">
      <summary>Returns a collection of <see cref="T:System.DirectoryServices.AccountManagement.PrincipleSearchResult'1" /> objects for users that have set their password within the specified date and time range.</summary>
      <returns>A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> that contains one or more <see cref="T:System.DirectoryServices.AccountManagement.UserPrincipal" /> objects, or an empty collection if no results are found.</returns>
      <param name="context"></param>
      <param name="time"></param>
      <param name="type"></param>
    </member>
    <member name="M:System.DirectoryServices.AccountManagement.UserPrincipal.GetAuthorizationGroups">
      <summary>Returns a collection of principal objects that contains all the authorization groups of which this user is a member. This function only returns groups that are security groups; distribution groups are not returned. </summary>
      <returns>A collection of <see cref="T:System.DirectoryServices.AccountManagement.Principal" /> objects that contain the groups of which the user is a member, or null if the user does not belong to any groups. </returns>
      <exception cref="T:System.DirectoryServices.AccountManagement.PrincipalOperationException">The attempt to retrieve authorization groups failed. </exception>
      <exception cref="T:System&gt;NotSupportedException">The retrieval of authorization groups is not supported by this operating system. </exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.GivenName">
      <summary>Gets or sets the given name for the user principal.</summary>
      <returns>The given name of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.MiddleName">
      <summary>Gets or sets the middle name for the user principal. </summary>
      <returns>The middle name of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.Surname">
      <summary>Gets or sets the surname for the user principal. </summary>
      <returns>The surname of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
    <member name="P:System.DirectoryServices.AccountManagement.UserPrincipal.VoiceTelephoneNumber">
      <summary>Gets or sets the voice telephone number for the user principal. </summary>
      <returns> The voice telephone number of the user principal. </returns>
      <exception cref="T:System.InvalidOperationException">The underlying store does not support this property.</exception>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.EnterpriseServices.Thunk.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<doc>
	This is a stub file.
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.EnterpriseServices.Wrapper.xml ===
<?xml version="1.0" encoding="utf-8" ?> 
<doc>
	This is a stub file.
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Drawing.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Drawing.Design</name>
  </assembly>
  <members>
    <member name="T:System.Drawing.Design.BitmapEditor">
      <summary>Provides a user interface for selecting bitmap files in a property browser.</summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.BitmapEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetExtensions">
      <summary>Gets the extensions for the file list filter that the bitmap editor will initially use to filter the file list.</summary>
      <returns>The default set of file extensions used to filter the file list.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.GetFileDialogDescription">
      <summary>Gets the description for the default file list filter provided by this editor.</summary>
      <returns>The description for the default type of files to filter the file list for.</returns>
    </member>
    <member name="M:System.Drawing.Design.BitmapEditor.LoadFromStream(System.IO.Stream)">
      <summary>Loads an image from the specified stream.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> loaded from the stream.</returns>
      <param name="stream">The stream from which to load the image. </param>
    </member>
    <member name="T:System.Drawing.Design.ColorEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> for visually picking a color.</summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ColorEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the Edit method. If the method is not supported, this will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating if this editor supports the painting of a representation of an object's value.</summary>
      <returns>true if <see cref="Overload:System.Drawing.Design.ColorEditor.PaintValue" /> is implemented; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.ColorEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a representative value of the given object to the provided canvas.</summary>
      <param name="e">What to paint and where to paint it. </param>
    </member>
    <member name="T:System.Drawing.Design.ContentAlignmentEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> for visually editing content alignment.</summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ContentAlignmentEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle" /> method.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Drawing.Design.ContentAlignmentEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="Overload:System.Drawing.Design.ContentAlignmentEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value indicating the provided editing style. If the method to retrieve the edit style is not supported, this will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Drawing.Design.CursorEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> that can perform default file searching for cursor (.cur) files.</summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.CursorEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="Overload:System.Drawing.Design.CursorEditor.GetEditStyle" /> method.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Drawing.Design.CursorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see cref="Overload:System.Drawing.Design.CursorEditor.EditValue" /> method. </summary>
      <returns>An enum value indicating the provided editing style. If the method is not supported, this will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="P:System.Drawing.Design.CursorEditor.IsDropDownResizable"></member>
    <member name="T:System.Drawing.Design.FontEditor">
      <summary>Provides a user interface to select and configure a <see cref="T:System.Drawing.Font" /> object.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.FontEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object that was passed to it.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services. </param>
      <param name="value">The object to edit. </param>
    </member>
    <member name="M:System.Drawing.Design.FontEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="M:System.Drawing.Design.FontEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Drawing.Design.FontNameEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> that paints a glyph for the font name.</summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.FontNameEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines if this editor supports the painting of a representation of an object's value.</summary>
      <returns>true if <see cref="Overload:System.Drawing.Design.FontNameEditor.PaintValue" /> is implemented; otherwise, false.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.FontNameEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a representative value of the given object to the provided canvas. Painting should be done within the boundaries of the provided rectangle.</summary>
      <param name="e">What to paint and where to paint it. </param>
    </member>
    <member name="T:System.Drawing.Design.IconEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> for visually choosing an icon.</summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.IconEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Creates a string representing the valid file extensions for icons.</summary>
      <returns>A string containing the icon file extensions, or null if <paramref name="extensions" /> is null or empty.</returns>
      <param name="extensions">An array of strings holding valid file extensions.</param>
      <param name="sep">A string that specifies the separator character.</param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.CreateFilterEntry(System.Drawing.Design.IconEditor)">
      <summary>Creates a filter string for the file dialog box.</summary>
      <returns>The filter string, created from the string returned by <see cref="M:System.Drawing.Design.IconEditor.CreateExtensionsString(System.String[],System.String)" />.</returns>
      <param name="e">The <see cref="T:System.Drawing.Design.IconEditor" /> for which the filter string will be created.</param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the given object value using the editor style provided by the <see cref="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see cref="Overload:System.Drawing.Design.IconEditor.EditValue" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetExtensions">
      <summary>Retrieves an array of valid file extensions for icons.</summary>
      <returns>An array of valid file extensions for icons.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetFileDialogDescription">
      <summary>Gets the description for the default file list filter provided by this editor.</summary>
      <returns>The description for the default type of files to filter the file list for.</returns>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Determines if this editor supports the painting of a representation of an object's value.</summary>
      <returns>true if <see cref="Overload:System.Drawing.Design.UITypeEditor.PaintValue" /> is implemented; otherwise, false.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.LoadFromStream(System.IO.Stream)">
      <summary>Creates a new <see cref="T:System.Drawing.Icon" /> from the given stream.</summary>
      <returns>The newly created <see cref="T:System.Drawing.Icon" />.</returns>
      <param name="stream">The source stream from which the icon will be created.</param>
    </member>
    <member name="M:System.Drawing.Design.IconEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a representative value of the given object to the provided canvas.</summary>
      <param name="e">What to paint and where to paint it. </param>
    </member>
    <member name="T:System.Drawing.Design.ImageEditor">
      <summary>Provides a user interface for selecting an image for a property in a property grid.</summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ImageEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateExtensionsString(System.String[],System.String)">
      <summary>Creates a string of file name extensions using the specified array of file extensions and the specified separator.</summary>
      <returns>A string containing the specified file name extensions, each separated by the specified separator.</returns>
      <param name="extensions">The extensions to filter for. </param>
      <param name="sep">The separator to use. </param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.CreateFilterEntry(System.Drawing.Design.ImageEditor)">
      <summary>Creates a filter entry for a file dialog box's file list.</summary>
      <returns>The new filter entry string.</returns>
      <param name="e">An <see cref="T:System.Drawing.Design.ImageEditor" /> to get the filter entry from.</param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by the <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>An <see cref="T:System.Object" /> representing the new value. If the value of the object has not changed, <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> returns the object that was passed to it.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">An <see cref="T:System.Object" /> being edited. </param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the supported editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetExtensions">
      <summary>Gets the extensions for the file-list filter that this editor initially uses to filter the file list.</summary>
      <returns>A set of file extensions used to filter the file list.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetFileDialogDescription">
      <summary>Gets the description for the default file-list filter provided by this editor.</summary>
      <returns>The description for the default file-list filter.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetImageExtenders">
      <summary>Gets an array of supported image types.</summary>
      <returns>An array of <see cref="T:System.Type" /> representing supported image types.</returns>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <returns>true if <see cref="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)" /> is implemented; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.LoadFromStream(System.IO.Stream)">
      <summary>Loads an image from the specified stream.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> that has been loaded.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the image to load.</param>
    </member>
    <member name="M:System.Drawing.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>Paints a value indicated by the specified <see cref="T:System.Drawing.Design.PaintValueEventArgs" />.</summary>
      <param name="e">A <see cref="T:System.Drawing.Design.PaintValueEventArgs" /> indicating what to paint and where to paint it. </param>
    </member>
    <member name="T:System.Drawing.Design.MetafileEditor">
      <summary>Provides a <see cref="T:System.Drawing.Design.UITypeEditor" /> that can perform default file searching for metafile (.emf) files.</summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.MetafileEditor" /> class. </summary>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetExtensions">
      <returns>A set of file extensions used to filter the file list.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.GetFileDialogDescription">
      <returns>The description for the default file-list filter.</returns>
    </member>
    <member name="M:System.Drawing.Design.MetafileEditor.LoadFromStream(System.IO.Stream)">
      <returns>The <see cref="T:System.Drawing.Image" /> that has been loaded.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> that contains the image to load.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemContainer">
      <summary>Encapsulates a <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.#ctor(System.Drawing.Design.ToolboxItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> class from a <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <param name="item">The <see cref="T:System.Drawing.Design.ToolboxItem" /> for which to create a <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> class from a serialization stream.</summary>
      <param name="info">The serialization information passed in by the serializer when deserializing the <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</param>
      <param name="context">The streaming context passed in by the serializer when deserializing the <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.#ctor(System.Windows.Forms.IDataObject)">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> class from a <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <param name="data">A data object that represents a <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> instances are equal.</summary>
      <returns>true if the specified <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> is equal to the current <see cref="T:System.Drawing.Design.ToolboxItemContainer" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> to compare with the current <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.GetFilter(System.Collections.ICollection)">
      <summary>Returns a collection of <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> objects that represent the current filter for the <see cref="T:System.Drawing.Design.ToolboxItem" />.  </summary>
      <returns>A collection of <see cref="T:System.ComponentModel.ToolboxItemFilterAttribute" /> objects. This never returns null.</returns>
      <param name="creators">A collection of <see cref="T:System.Drawing.Design.ToolboxItemCreator" /> objects.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A hash code for the current <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the serialization state for the object.</summary>
      <param name="info">The serialization information passed in by the serializer when serializing this object.</param>
      <param name="context">The streaming context passed in by the serializer when serializing this object.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.GetToolboxItem(System.Collections.ICollection)">
      <summary>Returns the <see cref="T:System.Drawing.Design.ToolboxItem" /> contained in the <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> contained in the <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</returns>
      <param name="creators">A collection of <see cref="T:System.Drawing.Design.ToolboxItemCreator" /> objects.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemContainer.IsCreated">
      <summary>Gets a value indicating whether the underlying toolbox item has been deserialized.</summary>
      <returns>true if the underlying toolbox item has been deserialized; otherwise, false.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemContainer.IsTransient">
      <summary>Gets a value indicating if the <see cref="T:System.Drawing.Design.ToolboxItem" /> contained in the <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> is transient.</summary>
      <returns>true, if the <see cref="T:System.Drawing.Design.ToolboxItem" /> contained in the <see cref="T:System.Drawing.Design.ToolboxItemContainer" /> is marked as transient; otherwise, false.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.ToolboxItemContainer.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method.</summary>
      <param name="info">The serialization information passed in by the serializer when serializing this object.</param>
      <param name="context">The streaming context passed in by the serializer when serializing this object.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemContainer.ToolboxData">
      <summary>Gets an <see cref="T:System.Windows.Forms.IDataObject" /> that describes this <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IDataObject" /> that describes this <see cref="T:System.Drawing.Design.ToolboxItemContainer" />.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemContainer.UpdateFilter(System.Drawing.Design.ToolboxItem)">
      <summary>Merges the container's filter with the filter from the given item.</summary>
      <param name="item">The source of the filter to merge with the container's filter.</param>
    </member>
    <member name="T:System.Drawing.Design.ToolboxItemCreator">
      <summary>Encapsulates a <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxItemCreator.Create(System.Windows.Forms.IDataObject)">
      <summary>Creates a new <see cref="T:System.Drawing.Design.ToolboxItem" /> from a <see cref="T:System.Windows.Forms.IDataObject" />.</summary>
      <returns>A new instance of the <see cref="T:System.Drawing.Design.ToolboxItem" /> class.</returns>
      <param name="data">A data object that represents a <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxItemCreator.Format">
      <summary>Gets the Clipboard format that represents the data needed to deserialize a <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
      <returns>A string representing the Clipboard format.</returns>
    </member>
    <member name="T:System.Drawing.Design.ToolboxService">
      <summary>Provides a default implementation of the <see cref="T:System.Drawing.Design.IToolboxService" /> interface.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Drawing.Design.ToolboxService" /> class. </summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.CategoryNames">
      <summary>Gets a collection of strings depicting available categories of the toolbox.</summary>
      <returns>A collection of category names.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.CreateItemContainer(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates a new toolbox item container from a toolbox item.</summary>
      <returns>A new toolbox item container.</returns>
      <param name="item">The toolbox item for which to create an item container.</param>
      <param name="link">An optional designer host that should be linked to this toolbox item. This parameter can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.CreateItemContainer(System.Windows.Forms.IDataObject)">
      <summary>Creates a new toolbox item container from a saved data object.</summary>
      <returns>A new toolbox item container.</returns>
      <param name="dataObject">A data object containing saved toolbox data.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataObject" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.FilterChanged">
      <summary>Occurs when the toolbox service detects that the active designer’s toolbox item filter has changed.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetItemContainers">
      <summary>Returns an <see cref="T:System.Collections.IList" /> containing all items on the toolbox.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing all items on the toolbox.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetItemContainers(System.String)">
      <summary>Returns an <see cref="T:System.Collections.IList" /> containing all items in a given category.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing all items in the category specified by <paramref name="categoryName" />.</returns>
      <param name="categoryName">The category for which to retrieve the item container list.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItem(System.Type)">
      <summary>Returns a toolbox item for a given type.</summary>
      <returns>A toolbox item associated with the given type, or null if the type has no corresponding toolbox item.</returns>
      <param name="toolType">The type of component for which to retrieve the toolbox item.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolType" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItem(System.Type,System.Boolean)">
      <summary>Returns a toolbox item for a given type.</summary>
      <returns>A toolbox item associated with the given type, or null if the type has no corresponding toolbox item.</returns>
      <param name="toolType">The type of component for which to retrieve the toolbox item.</param>
      <param name="nonPublic">true to search for non-public constructors on the type; false to search for public constructors.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolType" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.Assembly,System.String)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> containing all the toolbox items in the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the given assembly.</returns>
      <param name="a">The assembly to enumerate.</param>
      <param name="newCodeBase">A string that is the URL location of the assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.Assembly,System.String,System.Boolean)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="a">The assembly to enumerate.</param>
      <param name="newCodeBase">A string that is the URL location of the assembly.</param>
      <param name="throwOnError">true to throw an exception on error; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="a" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.AssemblyName)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="an">An assembly name from which to load an assembly.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="an" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.GetToolboxItems(System.Reflection.AssemblyName,System.Boolean)">
      <summary>Returns an <see cref="T:System.Collections.ICollection" /> of <see cref="T:System.Drawing.Design.ToolboxItem" /> objects for the given assembly.</summary>
      <returns>A collection containing all the toolbox items in the assembly represented by the given assembly name.</returns>
      <param name="an">An assembly name from which to load an assembly.</param>
      <param name="throwOnError">true to throw an exception on error; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="an" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.IsItemContainer(System.Windows.Forms.IDataObject,System.ComponentModel.Design.IDesignerHost)">
      <summary>Returns a value indicating whether the given data object represents an item container.</summary>
      <returns>true if the given data object represents an item container; otherwise, false.</returns>
      <param name="dataObject">The data object to examine for the presence of a toolbox item container.</param>
      <param name="host">An optional designer host. This parameter can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataObject" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.IsItemContainerSupported(System.Drawing.Design.ToolboxItemContainer,System.ComponentModel.Design.IDesignerHost)">
      <summary>Determines whether the toolbox item container is supported by the given designer host.</summary>
      <returns>true if the toolbox item container is supported by the given designer host; otherwise, false.</returns>
      <param name="container">The toolbox item container.</param>
      <param name="host">The given designer host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.Refresh">
      <summary>Refreshes the state of the toolbox items.</summary>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.SelectedCategory">
      <summary>Gets or sets the name of the currently selected category.</summary>
      <returns>A string containing the name of the currently selected category.</returns>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.SelectedItemContainer">
      <summary>Gets or sets the currently selected item container.</summary>
      <returns>The item container for the currently selected toolbox item, or null if no item is selected.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.SelectedItemContainerUsed">
      <summary>Receives a call from the toolbox service when a user reports that a selected toolbox item has been used.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.SetCursor">
      <summary>Sets the current application's cursor to a cursor that represents the currently selected tool.</summary>
      <returns>true if there is an item selected; otherwise, false.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#ComponentModel#Design#IComponentDiscoveryService#GetComponentTypes(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Gets the list of available component types.</summary>
      <returns>The list of available component types.</returns>
      <param name="designerHost">The designer host providing design-time services.</param>
      <param name="baseType">The base type specifying the components to retrieve. Can be null.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String)" /> method.</summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format that the creator handles.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddCreator(System.Drawing.Design.ToolboxItemCreatorCallback,System.String,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <param name="creator">A <see cref="T:System.Drawing.Design.ToolboxItemCreatorCallback" /> that can create a component when the toolbox item is invoked.</param>
      <param name="format">The data format that the creator handles.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that represents the designer host to associate with the creator.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddLinkedToolboxItem(System.Drawing.Design.ToolboxItem,System.String,System.ComponentModel.Design.IDesignerHost)" />method.</summary>
      <param name="toolboxItem">The linked <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="category">The toolbox item category to add the toolbox item to.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem)" /> method.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.AddToolboxItem(System.Drawing.Design.ToolboxItem,System.String)" /> method.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to add to the toolbox.</param>
      <param name="category">The toolbox item category to add the <see cref="T:System.Drawing.Design.ToolboxItem" /> to.</param>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#CategoryNames">
      <summary>For a description of this member, see the <see cref="P:System.Drawing.Design.IToolboxService.CategoryNames" /> property.</summary>
      <returns>A <see cref="T:System.Drawing.Design.CategoryNameCollection" /> containing the tool categories.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#DeserializeToolboxItem(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.DeserializeToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> created from deserialization.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to associate with this <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetSelectedToolboxItem">
      <summary>For a description of this member, see the <see cref="Overload:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected, or null if no toolbox item is currently selected.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)">
      <summary>For a description of this member, see the <see cref="M:System.Drawing.Design.IToolboxService.GetSelectedToolboxItem(System.ComponentModel.Design.IDesignerHost)" /> method.</summary>
      <returns>The <see cref="T:System.Drawing.Design.ToolboxItem" /> that is currently selected, or null if no toolbox item is currently selected.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that the selected tool must be associated with for it to be returned.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems">
      <summary>Gets the entire collection of toolbox items from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the collection of toolbox items that are associated with the specified designer host from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified designer host.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.String)">
      <summary>Gets a collection of toolbox items from the toolbox that match the specified category.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified category.</returns>
      <param name="category">The toolbox item category from which to retrieve all the toolbox items.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#GetToolboxItems(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the collection of toolbox items that are associated with the specified designer host and category from the toolbox.</summary>
      <returns>A <see cref="T:System.Drawing.Design.ToolboxItemCollection" /> that contains the current toolbox items that are associated with the specified category and designer host.</returns>
      <param name="category">The toolbox item category to retrieve the toolbox items from.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the toolbox items to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="category " />or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsSupported(System.Object,System.Collections.ICollection)">
      <summary>Gets a value indicating whether the specified object, which represents a serialized toolbox item, matches the specified attributes.</summary>
      <returns>true if the object matches the specified attributes; otherwise, false.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="filterAttributes">An <see cref="T:System.Collections.ICollection" /> that contains the attributes to test the serialized object for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializedObject" /> or <paramref name="filterAttributes" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsSupported(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a value indicating whether the specified object, which represents a serialized toolbox item, can be used by the specified designer host.</summary>
      <returns>true if the specified object is compatible with the specified designer host; otherwise, false.</returns>
      <param name="serializedObject">The object that contains the <see cref="T:System.Drawing.Design.ToolboxItem" /> to retrieve.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> to test for support for the <see cref="T:System.Drawing.Design.ToolboxItem" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serializedObject" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsToolboxItem(System.Object)">
      <summary>Gets a value indicating whether the specified object is a serialized toolbox item.</summary>
      <returns>true if the object contains a toolbox item object; otherwise, false.</returns>
      <param name="serializedObject">The object to inspect.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#IsToolboxItem(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a value indicating whether the specified object is a serialized toolbox item byusing the specified designer host.</summary>
      <returns>true if the object contains a toolbox item object; otherwise, false.</returns>
      <param name="serializedObject">The object to inspect.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is making this request.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#Refresh">
      <summary>Refreshes the state of the toolbox items.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveCreator(System.String)">
      <summary>Removes a previously added toolbox item creator of the specified data format.</summary>
      <param name="format">The data format of the creator to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveCreator(System.String,System.ComponentModel.Design.IDesignerHost)">
      <summary>Removes a previously added toolbox creator that is associated with the specified data format and the specified designer host.</summary>
      <param name="format">The data format of the creator to remove.</param>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is associated with the creator to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> or <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Removes the specified toolbox item from the toolbox.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#RemoveToolboxItem(System.Drawing.Design.ToolboxItem,System.String)">
      <summary>Removes the specified toolbox item from the toolbox.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to remove from the toolbox.</param>
      <param name="category">The toolbox item category to remove the <see cref="T:System.Drawing.Design.ToolboxItem" /> from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> or <paramref name="category" /> is null.</exception>
    </member>
    <member name="P:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SelectedCategory">
      <summary>For a description of this member, see the <see cref="P:System.Drawing.Design.IToolboxService.SelectedCategory" /> property.</summary>
      <returns>The name of the currently selected category.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SelectedToolboxItemUsed">
      <summary>Notifies the toolbox service that the selected tool has been used.</summary>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SerializeToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Gets a serializable object that represents the specified toolbox item.</summary>
      <returns>An object that represents the specified <see cref="T:System.Drawing.Design.ToolboxItem" />.</returns>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="toolboxItem" /> is null.</exception>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SetCursor">
      <summary>Sets the current application's cursor to a cursor that represents the currently selected tool.</summary>
      <returns>true if the cursor is set by the currently selected tool; false if there is no tool selected and the cursor is set to the standard Windows cursor.</returns>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.System#Drawing#Design#IToolboxService#SetSelectedToolboxItem(System.Drawing.Design.ToolboxItem)">
      <summary>Selects the specified toolbox item.</summary>
      <param name="toolboxItem">The <see cref="T:System.Drawing.Design.ToolboxItem" /> to select.</param>
    </member>
    <member name="M:System.Drawing.Design.ToolboxService.UnloadToolboxItems">
      <summary>Unloads any assemblies that were locked as a result of calling the <see cref="Overload:System.Drawing.Design.ToolboxService.GetToolboxItems" /> method.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\System.Design.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Design</name>
  </assembly>
  <members>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.#ctor(System.ComponentModel.Design.DesignSurface,System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" /> class.</summary>
      <param name="oldSurface">The design surface that is losing activation.</param>
      <param name="newSurface">The design surface that is gaining activation.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.NewSurface">
      <summary>Gets the design surface that is gaining activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is gaining activation.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs.OldSurface">
      <summary>Gets the design surface that is losing activation.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is losing activation.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event, the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</param>
      <param name="e">An <see cref="T:System.ComponentModel.Design.ActiveDesignSurfaceChangedEventArgs" />    that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ArrayEditor">
      <summary>Provides a user interface for editing arrays at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of <see cref="T:System.ComponentModel.Design.ArrayEditor" /> using the specified data type for the array.</summary>
      <param name="type">The data type of the items in the array. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection is designed to contain.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the data type that the collection is designed to contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.GetItems(System.Object)">
      <summary>Gets the items in the array.</summary>
      <returns>An array consisting of the items within the specified array. If the object specified in the <paramref name="editValue" /> parameter is not an array, a new empty object is returned.</returns>
      <param name="editValue">The array from which to retrieve the items. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ArrayEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the items in the array.</summary>
      <returns>An instance of the new array. If the object specified by the <paramref name="editValue" /> parameter is not an array, the object specified by the <paramref name="editValue" /> parameter is returned.</returns>
      <param name="editValue">The array to set the items to. </param>
      <param name="value">The array of objects to set as the items of the array. </param>
    </member>
    <member name="T:System.ComponentModel.Design.BinaryEditor">
      <summary>Provides a user interface for editing binary data.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.BinaryEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">The object to edit the value of. </param>
    </member>
    <member name="M:System.ComponentModel.Design.BinaryEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.ComponentModel.Design.BinaryEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ByteViewer">
      <summary>Displays byte arrays in hexadecimal, ANSI, and Unicode formats.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ByteViewer" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetBytes">
      <summary>Gets the bytes in the buffer.</summary>
      <returns>The unsigned byte array reference.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.GetDisplayMode">
      <summary>Gets the display mode for the control.</summary>
      <returns>The display mode that this control uses. The returned value is defined in <see cref="T:System.ComponentModel.Design.DisplayMode" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SaveToFile(System.String)">
      <summary>Writes the raw data from the data buffer to a file.</summary>
      <param name="path">The file path to save to. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">The file write failed. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.ScrollChanged(System.Object,System.EventArgs)">
      <summary>Handles the <see cref="E:System.Windows.Forms.ScrollBar.ValueChanged" /> event on the <see cref="T:System.ComponentModel.Design.ByteViewer" /> control's <see cref="T:System.Windows.Forms.ScrollBar" />.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetBytes(System.Byte[])">
      <summary>Sets the byte array to display in the viewer.</summary>
      <param name="bytes">The byte array to display. </param>
      <exception cref="T:System.ArgumentNullException">The specified byte array is null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetDisplayMode(System.ComponentModel.Design.DisplayMode)">
      <summary>Sets the current display mode.</summary>
      <param name="mode">The display mode to set. </param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The specified display mode is not from the <see cref="T:System.ComponentModel.Design.DisplayMode" /> enumeration. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetFile(System.String)">
      <summary>Sets the file to display in the viewer.</summary>
      <param name="path">The file path to load from. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="path" /> is an empty string (""), contains only white space, or contains one or more invalid characters. </exception>
      <exception cref="T:System.IO.DirectoryNotFoundException">The specified path is invalid, such as being on an unmapped drive. </exception>
      <exception cref="T:System.IO.IOException">The file load failed. </exception>
      <exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception>
      <exception cref="T:System.UnauthorizedAccessException">The access requested is not permitted by the operating system for the specified <paramref name="path" />, such as when access is Write or ReadWrite and the file or directory is set for read-only access. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.ByteViewer.SetStartLine(System.Int32)">
      <summary>Sets the current line for the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> view.</summary>
      <param name="line">The current line to display from. </param>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor">
      <summary>Provides a user interface that can edit most types of collections at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> class using the specified collection type.</summary>
      <param name="type">The type of the collection for this editor to edit. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CancelChanges">
      <summary>Cancels changes to the collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Indicates whether original members of the collection can be removed.</summary>
      <returns>true if it is permissible to remove this value from the collection; otherwise, false. The default implementation always returns true.</returns>
      <param name="value">The value to remove. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>true if it multiple collection members can be selected at the same time; otherwise, false. By default, this returns true.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or null if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection contains.</summary>
      <returns>The data type of the items in the collection, or an <see cref="T:System.Object" /> if no Item property can be located on the collection.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified object.</returns>
      <param name="itemType">The type of item to create. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can contain.</summary>
      <returns>An array of data types that this collection can contain.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services can be obtained. </param>
      <param name="value">The object to edit the value of. </param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program did not succeed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetDisplayText(System.Object)">
      <summary>Retrieves the display text for the given list item.</summary>
      <returns>The display text for <paramref name="value" />.</returns>
      <param name="value">The list item for which to retrieve display text.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the edit style used by the <see cref="M:System.ComponentModel.Design.CollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this method will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetItems(System.Object)">
      <summary>Gets an array of objects containing the specified collection.</summary>
      <returns>An array containing the collection objects, or an empty object array if the specified collection does not inherit from <see cref="T:System.Collections.ICollection" />.</returns>
      <param name="editValue">The collection to edit. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetObjectsFromInstance(System.Object)">
      <summary>Returns a list containing the given object</summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains the individual objects to be created.</returns>
      <param name="instance">An <see cref="T:System.Collections.ArrayList" /> returned as an object.</param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <returns>An instance of the service, or null if the service cannot be found.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.HelpTopic">
      <summary>Gets the Help keyword to display the Help topic or topic list for when the editor's dialog box Help button or the F1 key is pressed.</summary>
      <returns>The Help keyword to display the Help topic or topic list for when Help is requested from the editor.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.NewItemTypes">
      <summary>Gets the available types of items that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.SetItems(System.Object,System.Object[])">
      <summary>Sets the specified array as the items of the collection.</summary>
      <returns>The newly created collection object or, otherwise, the collection indicated by the <paramref name="editValue" /> parameter.</returns>
      <param name="editValue">The collection to edit. </param>
      <param name="value">An array of objects to set as the collection items. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.ShowHelp">
      <summary>Displays the default Help topic for the collection editor.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.CollectionEditor.CollectionForm">
      <summary>Provides a modal dialog box for editing the contents of a collection using a <see cref="T:System.Drawing.Design.UITypeEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.#ctor(System.ComponentModel.Design.CollectionEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.CollectionEditor" /> to use for editing the collection. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanRemoveInstance(System.Object)">
      <summary>Indicates whether you can remove the original members of the collection.</summary>
      <returns>true if it is permissible to remove this value from the collection; otherwise, false. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanRemoveInstance(System.Object)" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
      <param name="value">The value to remove. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CanSelectMultipleInstances">
      <summary>Indicates whether multiple collection items can be selected at once.</summary>
      <returns>true if it multiple collection members can be selected at the same time; otherwise, false. By default, this method returns the value from <see cref="M:System.ComponentModel.Design.CollectionEditor.CanSelectMultipleInstances" /> of the <see cref="T:System.ComponentModel.Design.CollectionEditor" /> for this form.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionItemType">
      <summary>Gets the data type of each item in the collection.</summary>
      <returns>The data type of the collection items.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.CollectionType">
      <summary>Gets the data type of the collection object.</summary>
      <returns>The data type of the collection object.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Context">
      <summary>Gets a type descriptor that indicates the current context.</summary>
      <returns>An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context currently in use, or null if no context is available.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified object, or null if the user chose to cancel the creation of this instance.</returns>
      <param name="itemType">The type of item to create. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DestroyInstance(System.Object)">
      <summary>Destroys the specified instance of the object.</summary>
      <param name="instance">The object to destroy. </param>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.DisplayError(System.Exception)">
      <summary>Displays the specified exception to the user.</summary>
      <param name="e">The exception to display. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.EditValue">
      <summary>Gets or sets the collection object to edit.</summary>
      <returns>The collection object to edit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.GetService(System.Type)">
      <summary>Gets the requested service, if it is available.</summary>
      <returns>An instance of the service, or null if the service cannot be found.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.Items">
      <summary>Gets or sets the array of items for this form to display.</summary>
      <returns>An array of objects for the form to display.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.CollectionEditor.CollectionForm.NewItemTypes">
      <summary>Gets the available item types that can be created for this collection.</summary>
      <returns>The types of items that can be created.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.OnEditValueChanged">
      <summary>Provides an opportunity to perform processing when a collection value has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.CollectionEditor.CollectionForm.ShowEditorDialog(System.Windows.Forms.Design.IWindowsFormsEditorService)">
      <summary>Shows the dialog box for the collection editor using the specified <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> object.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> that indicates the result code returned from the dialog box.</returns>
      <param name="edSvc">An <see cref="T:System.Windows.Forms.Design.IWindowsFormsEditorService" /> that can be used to show the dialog box. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentActionsType">
      <summary>Specifies the type of object-bound smart tag with respect to how it was associated with the component.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.All">
      <summary>Both types of smart tags.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Component">
      <summary>Pull model smart tags only.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ComponentActionsType.Service">
      <summary>Push model smart tags only.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner">
      <summary>Extends the design mode behavior of a component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ActionLists">
      <summary>Gets the design-time action lists supported by the component associated with the designer.</summary>
      <returns>The design-time action lists supported by the component associated with the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.AssociatedComponents">
      <summary>Gets the collection of components associated with the component managed by the designer.</summary>
      <returns>The components that are associated with the component managed by the designer.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Component">
      <summary>Gets the component this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.DoDefaultAction">
      <summary>Creates a method signature in the source code file for the default event on the component and navigates the user's cursor to that location.</summary>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">An attempt to check out a file that is checked into a source code management program failed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Finalize">
      <summary>Attempts to free resources by calling Dispose(false) before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.GetService(System.Type)">
      <summary>Attempts to retrieve the specified type of service from the design mode site of the designer's component.</summary>
      <returns>An object implementing the requested service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to request. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute">
      <summary>Gets an attribute that indicates the type of inheritance of the associated component.</summary>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> for the associated component.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Inherited">
      <summary>Gets a value indicating whether this component is inherited.</summary>
      <returns>true if the component is inherited; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the specified component.</summary>
      <param name="component">The component for this designer. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)">
      <summary>Reinitializes an existing component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)">
      <summary>Initializes a newly created component.</summary>
      <param name="defaultValues">A name/value dictionary of default values to apply to properties. May be null if no default values are specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InitializeNonDefault">
      <summary>Initializes the settings for an imported component that is already initialized to settings other than the defaults.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.InvokeGetInheritanceAttribute(System.ComponentModel.Design.ComponentDesigner)">
      <summary>Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified <see cref="T:System.ComponentModel.Design.ComponentDesigner" />.</summary>
      <returns>The <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the specified designer.</returns>
      <param name="toInvoke">The <see cref="T:System.ComponentModel.Design.ComponentDesigner" /> whose inheritance attribute to retrieve. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.OnSetComponentDefaults">
      <summary>Sets the default properties for the component.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ParentComponent">
      <summary>Gets the parent component for this designer.</summary>
      <returns>The parent component for this designer, or null if this designer is the root component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="attributes">The attributes for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="events">The events for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component has been changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that has been changed. </param>
      <param name="oldValue">The old value of the member. </param>
      <param name="newValue">The new value of the member. </param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanging(System.ComponentModel.MemberDescriptor)">
      <summary>Notifies the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> that this component is about to be changed.</summary>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> that indicates the member that is about to be changed. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowProperties">
      <summary>Gets a collection of property values that override user settings.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection" /> that indicates the shadow properties of the design document.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" /> method.</summary>
      <param name="attributes">The <see cref="T:System.Attribute" /> objects for the class of the component. The keys in the dictionary of attributes are the <see cref="P:System.Attribute.TypeId" /> values of the attributes.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" /> method.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see the <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" /> method.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Children">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Children" /> property.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> that contains the collection of <see cref="T:System.ComponentModel.Design.IDesigner" /> designers contained in the current parent designer. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.System#ComponentModel#Design#ITreeDesigner#Parent">
      <summary>For a description of this member, see the <see cref="P:System.ComponentModel.Design.ITreeDesigner.Parent" /> property.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.IDesigner" /> representing the parent designer, or null if there is no parent.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.Verbs">
      <summary>Gets the design-time verbs supported by the component that is associated with the designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects, or null if no designer verbs are available. This default implementation always returns null.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection">
      <summary>Represents a collection of shadow properties that should override inherited default or assigned values for specific properties. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Contains(System.String)">
      <summary>Indicates whether a property matching the specified name exists in the collection.</summary>
      <returns>true if the property exists in the collection; otherwise, false.</returns>
      <param name="propertyName">The name of the property to check for in the collection. </param>
    </member>
    <member name="P:System.ComponentModel.Design.ComponentDesigner.ShadowPropertyCollection.Item(System.String)">
      <summary>Gets or sets the object at the specified index.</summary>
      <returns>The value of the specified property, if it exists in the collection. Otherwise, the value is retrieved from the current value of the nonshadowed property.</returns>
      <param name="propertyName">The name of the property to access in the collection. </param>
    </member>
    <member name="T:System.ComponentModel.Design.DateTimeEditor">
      <summary>This date time editor is a <see cref="T:System.Drawing.Design.UITypeEditor" /> suitable for visually editing <see cref="T:System.DateTime" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DateTimeEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the editor style provided by GetEditorStyle. A service provider is provided so that any required editing services can be obtained.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this should return the same object it was passed.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.ComponentModel.Design.DateTimeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the editing style of the <see cref="Overload:System.ComponentModel.Design.DateTimeEditor.EditValue" /> method. If the method is not supported, this will return None.</summary>
      <returns>An enum value indicating the provided editing style.</returns>
      <param name="context">A type descriptor context that can be used to provide additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionHeaderItem">
      <summary>Represents a static header item on a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name string.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionHeaderItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionHeaderItem" /> class using the provided name and category strings.</summary>
      <param name="displayName">The text to be displayed in the header.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItem">
      <summary>Provides the base class for types that represent a panel item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> that defines the groupings of panel entries.</param>
      <param name="description">Supplemental text for this item, potentially used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.AllowAssociate">
      <summary>Gets or sets a value indicating whether to allow this item to be placed into a group of items that have the same <see cref="P:System.ComponentModel.Design.DesignerActionItem.Category" /> property value.</summary>
      <returns>true if the item can be grouped; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Category">
      <summary>Gets the group name for an item.</summary>
      <returns>A string that represents the group that the item is a member of. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Description">
      <summary>Gets the supplemental text for the item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the descriptive text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.DisplayName">
      <summary>Gets the text for this item.</summary>
      <returns>A <see cref="T:System.String" /> that contains the display text for the item.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItem.Properties">
      <summary>Gets a reference to a collection that can be used to store programmer-defined key/value pairs.</summary>
      <returns>A collection that implements <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionItemCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Add(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to the current collection.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> index at which the value has been added.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" />  to add.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Contains(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines whether the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains a specific element.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> contains the specified value; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.CopyTo(System.ComponentModel.Design.DesignerActionItem[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.IndexOf(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to locate in the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionItem)">
      <summary>Inserts an element into the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionItemCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> at the specified index.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionItemCollection.Remove(System.ComponentModel.Design.DesignerActionItem)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> to remove from the <see cref="T:System.ComponentModel.Design.DesignerActionItemCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionList">
      <summary>Provides the base class for types that define a list of items used to create a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.#ctor(System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> class.</summary>
      <param name="component">A component related to the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.AutoShow">
      <summary>Gets or sets a value indicating whether the smart tag panel should automatically be displayed when it is created.</summary>
      <returns>true if the panel should be shown when the owning component is created; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionList.Component">
      <summary>Gets the component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>A component related to <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetService(System.Type)">
      <summary>Returns an object that represents a service provided by the component associated with the <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents a service provided by the <see cref="T:System.ComponentModel.Component" />. This value is null if the <see cref="T:System.ComponentModel.Component" /> does not provide the specified service.</returns>
      <param name="serviceType">A service provided by the <see cref="T:System.ComponentModel.Component" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems">
      <summary>Returns the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects contained in the list.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> array that contains the items in this list.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListCollection">
      <summary>Represents a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with default settings.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.#ctor(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> class with the specified panel items.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to populate the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Add(System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection.</summary>
      <returns>The position into which the new element is inserted into the collection's internal list.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to add.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionList[])">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> array to the end of the current collection.</summary>
      <param name="value">The array of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.AddRange(System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds the elements of the supplied <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the end of the current collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Contains(System.ComponentModel.Design.DesignerActionList)">
      <summary>Indicates whether the collection contains a specific value.</summary>
      <returns>true if the collection contains the specified value; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to search for.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.CopyTo(System.ComponentModel.Design.DesignerActionList[],System.Int32)">
      <summary>Copies the elements of the current collection into the supplied array, starting at the specified array index.</summary>
      <param name="array">The one-dimensional array of type <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the current collection is greater than the available space from <paramref name="index" /> to the end of the destination array.</exception>
      <exception cref="T:System.InvalidCastException">A problem occurred casting the elements of the current collection to the type of the destination array, perhaps as the result of a failed downcast.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.IndexOf(System.ComponentModel.Design.DesignerActionList)">
      <summary>Determines the index of a specific item in the collection.</summary>
      <returns>The index of <paramref name="value" /> if found in the internal list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to locate in the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Insert(System.Int32,System.ComponentModel.Design.DesignerActionList)">
      <summary>Inserts the supplied <see cref="T:System.ComponentModel.Design.DesignerActionList" /> into the collection at the specified position.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0 or greater than the count of elements in the current collection.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> at the specified index.</returns>
      <param name="index">The zero-based index of the element.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnClear"></member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new element into the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which to insert <paramref name="value" />.</param>
      <param name="value">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> can be found.</param>
      <param name="value">The value of the element to remove from <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Performs additional custom processes before setting a value in the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> instance.</summary>
      <param name="index">The zero-based index at which <paramref name="oldValue" /> can be found.</param>
      <param name="oldValue">The value to replace with <paramref name="newValue" />.</param>
      <param name="newValue">The new value of the element at <paramref name="index" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
      <param name="value">The object to validate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListCollection.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.ComponentModel.Design.DesignerActionList" /> from the collection.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to remove from the current collection.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionListsChangedType,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the collection.</param>
      <param name="changeType">A value that specifies whether a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> has been added or removed from the collection.</param>
      <param name="actionLists">The collection of list elements after the action has been applied.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ActionLists">
      <summary>Gets the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects associated with this event.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that represents the current state of the collection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.ChangeType">
      <summary>Gets a flag indicating whether an element has been added or removed from the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedType" /> that indicates the type of change.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionListsChangedEventArgs.RelatedObject">
      <summary>Gets the object that that is associated with the collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the managed <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignerActionListsChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionListsChangedType">
      <summary>Specifies the type of change occurring in a collection of <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsAdded">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been added to the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionListsChangedType.ActionListsRemoved">
      <summary>One or more <see cref="T:System.ComponentModel.Design.DesignerActionList" /> objects have been removed from the collection.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionMethodItem">
      <summary>Represents a smart tag panel item that is associated with a method in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and display names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method, display, and category names, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, and display and description text.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.#ctor(System.ComponentModel.Design.DesignerActionList,System.String,System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> class, with the specified method and category names, display and description text, and a flag that indicates whether the item should appear in other user interface contexts.</summary>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the method this item is associated with.</param>
      <param name="memberName">The case-sensitive name of the method in the class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to invoke through the panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
      <param name="includeAsDesignerVerb">A flag that specifies whether to also treat the associated method as a designer verb for the associated component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb">
      <summary>Gets a value that indicates the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> should appear in other user interface contexts.</summary>
      <returns>true if the item is to be used in shortcut menus; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionMethodItem.Invoke">
      <summary>Programmatically executes the method associated with the <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" />.</summary>
      <exception cref="T:System.InvalidOperationException">The method, named in <see cref="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName" /> cannot be found.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.MemberName">
      <summary>Gets the name of the method that this <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated method.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionMethodItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its <see cref="T:System.ComponentModel.Design.DesignerActionMethodItem" /> objects to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies items.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionPropertyItem">
      <summary>Represents a panel item that is associated with a property in a class derived from <see cref="T:System.ComponentModel.Design.DesignerActionList" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and display names.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionPropertyItem.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionPropertyItem" /> class, with the specified property and category names, and display and description text.</summary>
      <param name="memberName">The case-sensitive name of the property associated with this panel item.</param>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The case-sensitive <see cref="T:System.String" /> used to group similar items on the panel.</param>
      <param name="description">Supplemental text for this item, used in ToolTips or the status bar.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.MemberName">
      <summary>Gets the name of the property that this item is associated with.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name of the associated property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionPropertyItem.RelatedComponent">
      <summary>Gets or sets a component that contributes its items to the current panel.</summary>
      <returns>The contributing component, which should have an associated designer that supplies <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
      <param name="serviceProvider">The service provider for the current design-time environment.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="actionList">The <see cref="T:System.ComponentModel.Design.DesignerActionList" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to the current collection of managed smart tags.</summary>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to associate the smart tags with.</param>
      <param name="designerActionListCollection">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the new smart tag items to be added.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Clear">
      <summary>Releases all components from management and clears all push-model smart tag lists.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)">
      <summary>Determines whether the current smart tag service manages the action lists for the specified component.</summary>
      <returns>true if the component is managed by the current service; otherwise, false.</returns>
      <param name="comp">The <see cref="T:System.ComponentModel.IComponent" /> to search for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged">
      <summary>Occurs when a <see cref="T:System.ComponentModel.Design.DesignerActionList" /> is removed or added for any component.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionService" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)">
      <summary>Returns the collection of smart tag item lists associated with a component.</summary>
      <returns>The collection of smart tags for the specified component.</returns>
      <param name="component">The component that the smart tags are associated with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)">
      <summary>Returns the collection of smart tag item lists of the specified type associated with a component.</summary>
      <returns>The collection of smart tags of the specified type for the specified component.</returns>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="type">The <see cref="T:System.ComponentModel.Design.ComponentActionsType" /> to filter the associated smart tags with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the pull-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Retrieves the push-model smart tags associated with a component.</summary>
      <param name="component">The component that the smart tags are associated with.</param>
      <param name="actionLists">The collection to add the associated smart tags to.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from all components managed by the current service.</summary>
      <param name="actionList">The list of smart tags to be removed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="actionList" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)">
      <summary>Removes all the smart tag lists associated with the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="comp" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)">
      <summary>Removes the specified smart tag list from the specified component.</summary>
      <param name="comp">The component to disassociate the smart tags from.</param>
      <param name="actionList">The smart tag list to remove.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionTextItem">
      <summary>Represents a static text item on a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionTextItem.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionTextItem" /> class.</summary>
      <param name="displayName">The panel text for this item.</param>
      <param name="category">The category used to group similar items on the panel.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIService">
      <summary>Manages the user interface (UI) for a smart tag panel. This class cannot be inherited.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange">
      <summary>Occurs when a request is made to show or hide a smart tag panel.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.DesignerActionUIService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.HideUI(System.ComponentModel.IComponent)">
      <summary>Hides the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be hidden.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.Refresh(System.ComponentModel.IComponent)">
      <summary>Updates the smart tag panel.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to refresh.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShouldAutoShow(System.ComponentModel.IComponent)">
      <summary>Indicates whether to automatically show the smart tag panel.</summary>
      <returns>true to automatically show the smart tag panel; otherwise, false.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to automatically show.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIService.ShowUI(System.ComponentModel.IComponent)">
      <summary>Displays the smart tag panel for a component.</summary>
      <param name="component">The component whose smart tag panel should be displayed.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.#ctor(System.Object,System.ComponentModel.Design.DesignerActionUIStateChangeType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs" /> class.</summary>
      <param name="relatedObject">The object that is associated with the panel.</param>
      <param name="changeType">A value that specifies whether the panel is being displayed or hidden.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.ChangeType">
      <summary>Gets a flag indicating whether the smart tag panel is being displayed or hidden.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionUIStateChangeType" /> that indicates the state of the panel.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerActionUIStateChangeEventArgs.RelatedObject">
      <summary>Gets the object that is associated with the smart tag panel.</summary>
      <returns>The <see cref="T:System.Object" /> associated with the smart tag panel.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignerActionUIService.DesignerActionUIStateChange" /> event of a <see cref="T:System.ComponentModel.Design.DesignerActionUIService" />.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">The event-specific information.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerActionUIStateChangeType">
      <summary>Specifies the display state of a smart tag panel.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Show">
      <summary>The smart tag panel is being displayed.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Hide">
      <summary>The smart tag panel is being hidden.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DesignerActionUIStateChangeType.Refresh">
      <summary>The smart tag panel is being refreshed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignerCommandSet">
      <summary>Represents a base class for design-time tools, not derived from <see cref="T:System.ComponentModel.Design.ComponentDesigner" />, that provide smart tag or designer verb capabilities.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.ComponentModel.Design.DesignerCommandSet" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.ActionLists">
      <summary>Gets the collection of all the smart tags associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the smart tags for the associated designed component.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignerCommandSet.GetCommands(System.String)">
      <summary>Returns a collection of command objects.</summary>
      <returns>A collection that contains the specified type—either <see cref="T:System.ComponentModel.Design.DesignerActionList" /> or <see cref="T:System.ComponentModel.Design.DesignerVerb" />—of command objects. The base implementation always returns null.</returns>
      <param name="name">The type of collection to return, indicating either a <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> or a <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" />.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignerCommandSet.Verbs">
      <summary>Gets the collection of all the designer verbs associated with the designed component.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> that contains the designer verbs for the associated designed component.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurface">
      <summary>Presents a user interface for designing components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or null if there is no parent used to resolve services.</param>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.IServiceProvider,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="parentProvider">The parent service provider, or null if there is no parent used to resolve services.</param>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class.</summary>
      <param name="rootComponentType">The type of root component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.ComponentModel.Design.Serialization.DesignerLoader)">
      <summary>Begins the loading process with the given designer loader.</summary>
      <param name="loader">The designer loader to use for loading the designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="loader" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.BeginLoad(System.Type)">
      <summary>Begins the loading process.</summary>
      <param name="rootComponentType">The type of component to create in design mode.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rootComponentType" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ComponentContainer">
      <summary>Gets the <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> implementation within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateComponent(System.Type)">
      <summary>Creates an instance of a component.</summary>
      <returns>The newly created component.</returns>
      <param name="componentType">The type of component to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="componentType" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateDesigner(System.ComponentModel.IComponent,System.Boolean)">
      <summary>Creates a designer when a component is added to the container.</summary>
      <returns>An instance of the requested designer, or null if no matching designer could be found.</returns>
      <param name="component">The component for which the designer should be created.</param>
      <param name="rootDesigner">true to create a root designer; false to create a normal designer.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateInstance(System.Type)">
      <summary>Creates an instance of the given type.</summary>
      <returns>The newly created object.</returns>
      <param name="type">The type to create.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <returns>The nested container.</returns>
      <param name="owningComponent">The component that manages the nested container.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.CreateNestedContainer(System.ComponentModel.IComponent,System.String)">
      <summary>Creates a container suitable for nesting controls or components.</summary>
      <returns>The nested container.</returns>
      <param name="owningComponent">The component that manages the nested container.</param>
      <param name="containerName">An additional name for the nested container.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owningComponent" /> is null.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Dispose(System.Boolean)">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Disposed">
      <summary>Occurs when the design surface is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.DtelLoading">
      <summary>Gets a value indicating whether the Design-time Error List is loading. </summary>
      <returns>true if the Design-time Error List is loading; otherwise, false. </returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.Flush">
      <summary>Serializes changes to the design surface.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Flushed">
      <summary>Occurs when a call is made to the <see cref="M:System.ComponentModel.Design.DesignSurface.Flush" /> method of <see cref="T:System.ComponentModel.Design.DesignSurface" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.GetService(System.Type)">
      <summary>Gets a service from the service container.</summary>
      <returns>An object that implements, or is a derived class of, <paramref name="serviceType" />, or null if the service does not exist in the service container.</returns>
      <param name="serviceType">The type of service to retrieve. </param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.IsLoaded">
      <summary>Gets a value indicating whether the design surface is currently loaded.</summary>
      <returns>true if the design surface is currently loaded; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loaded">
      <summary>Occurs when the designer load has completed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.LoadErrors">
      <summary>Returns a collection of loading errors or a void collection.</summary>
      <returns>A <see cref="T:System.Collections.ICollection" /> of loading errors.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Loading">
      <summary>Occurs when the designer is about to be loaded.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoaded(System.ComponentModel.Design.LoadedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnLoading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Loading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloaded(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloaded" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnUnloading(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.Unloading" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurface.OnViewActivate(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.DesignSurface.ViewActivated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.ServiceContainer">
      <summary>Gets the service container.</summary>
      <returns>The service container that provides all services to designers contained within the design surface.</returns>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloaded">
      <summary>Occurs when a designer has finished unloading.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.Unloading">
      <summary>Occurs when a designer is about to unload.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurface.View">
      <summary>Gets the view for the root designer.</summary>
      <returns>The view for the root designer.</returns>
      <exception cref="T:System.InvalidOperationException">The design surface is not loading, the designer loader has not yet created a root designer, or the design surface finished the load, but failed. More information may available in the <see cref="P:System.Exception.InnerException" />.</exception>
      <exception cref="T:System.NotSupportedException">The designer loaded, but it does not offer a view compatible with this design surface.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.IDesignerHost" />  attached to the <see cref="T:System.ComponentModel.Design.DesignSurface" />  has been disposed.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurface.ViewActivated">
      <summary>Occurs when the <see cref="M:System.ComponentModel.Design.IDesignerHost.Activate" /> method has been called on <see cref="T:System.ComponentModel.Design.IDesignerHost" />.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceCollection">
      <summary>Contains a collection of design surfaces. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.CopyTo(System.ComponentModel.Design.DesignSurface[],System.Int32)">
      <summary>Copies the collection members to the specified <see cref="T:System.ComponentModel.Design.DesignSurface" /> array beginning at the specified destination index.</summary>
      <param name="array">The array to copy collection members to.</param>
      <param name="index">The destination index to begin copying to.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Count">
      <summary>Gets the total number of design surfaces in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</summary>
      <returns>The total number of elements in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.GetEnumerator">
      <summary>Returns an enumerator that can iterate through the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.Item(System.Int32)">
      <summary>Gets the design surface at the specified index.</summary>
      <returns>The design surface at the specified index.</returns>
      <param name="index">The index of the design surface to return.</param>
      <exception cref="T:System.NotSupportedException">The design surface specified by <paramref name="index" /> is not supported.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" /> method.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</param>
      <param name="index">The index in <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.Count" /> property.</summary>
      <returns>The number of elements contained in the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</summary>
      <returns>true if access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.DesignSurfaceCollection" /> instance.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceEventArgs.#ctor(System.ComponentModel.Design.DesignSurface)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" /> class.</summary>
      <param name="surface">The design surface that is being created.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="surface" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceEventArgs.Surface">
      <summary>Gets the design surface that is being created.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignSurface" /> that is being created.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated" /> event of a <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.DesignSurfaceEventArgs" />      that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.DesignSurfaceManager">
      <summary>Manages a collection of <see cref="T:System.ComponentModel.Design.DesignSurface" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class.</summary>
      <param name="parentProvider">A parent service provider. Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</param>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface">
      <summary>Gets or sets the active designer.</summary>
      <returns>The active designer.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurfaceChanged">
      <summary>Occurs when the currently active designer changes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface">
      <summary>Creates an instance of a design surface.</summary>
      <returns>A new design surface instance.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface(System.IServiceProvider)">
      <summary>Creates an instance of a design surface.</summary>
      <returns>A new design surface instance.</returns>
      <param name="parentProvider">A parent service provider. A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object. This merged provider will be passed into the <see cref="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)" /> method.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="parentProvider" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)">
      <summary>Implementation that creates the design surface.</summary>
      <returns>A new design surface instance.</returns>
      <param name="parentProvider">A service provider to pass to the design surface. This is either an instance of <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> or an object that implements <see cref="T:System.IServiceProvider" />, and represents a merge between the service provider of the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> class and an externally passed provider.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceCreated">
      <summary>Occurs when a designer is created.</summary>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaceDisposed">
      <summary>Occurs when a designer is disposed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces">
      <summary>Gets a collection of design surfaces.</summary>
      <returns>A collection of design surfaces that are currently hosted by the design surface manager.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.DesignSurfaceManager" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.DesignSurfaceManager.GetService(System.Type)">
      <summary>Gets a service in the design surface manager’s service container.</summary>
      <returns>An object that implements, or is a derived class of, the given service type; otherwise, null if the service does not exist in the service container.</returns>
      <param name="serviceType">The service type to retrieve.</param>
    </member>
    <member name="E:System.ComponentModel.Design.DesignSurfaceManager.SelectionChanged">
      <summary>Occurs when the global selection changes.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer">
      <summary>Gets the design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</summary>
      <returns>The design surface manager's <see cref="P:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer" />.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.DisplayMode">
      <summary>Defines identifiers that indicate the display modes used by <see cref="T:System.ComponentModel.Design.ByteViewer" />.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Hexdump">
      <summary>A hexadecimal format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Ansi">
      <summary>An ANSI format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Unicode">
      <summary>A Unicode format display.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.DisplayMode.Auto">
      <summary>A display mode that automatically selects a display mode. In this mode, the bytes are examined to determine if they are hexadecimal or printable. If the bytes are in hexadecimal format, the <see cref="F:System.ComponentModel.Design.DisplayMode.Hexdump" /> mode is selected. If the characters match a printable character set, a test is run to automatically select either the <see cref="F:System.ComponentModel.Design.DisplayMode.Ansi" /> or <see cref="F:System.ComponentModel.Design.DisplayMode.Unicode" /> display mode.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.EventBindingService">
      <summary>A default implementation of the <see cref="T:System.ComponentModel.Design.IEventBindingService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.EventBindingService" /> class. </summary>
      <param name="provider">The service provider from which <see cref="T:System.ComponentModel.Design.EventBindingService" /> will query for services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique method name.</summary>
      <returns>The unique method name.</returns>
      <param name="component">The component for which the method name will be created.</param>
      <param name="e">The event to create a name for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.FreeMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is no longer being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method to be freed.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Returns a collection of names of compatible methods.</summary>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> containing the compatible delegate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.GetService(System.Type)">
      <summary>Gets the requested service from the service provider.</summary>
      <returns>A reference to the service specified by <paramref name="serviceType" />, or null if the requested service is not available.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode">
      <summary>Displays user code.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Displays the user code for the specified method.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method for which to display code.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ShowCode(System.Int32)">
      <summary>Displays the user code at the given line number.</summary>
      <returns>true if it is possible to display the code; otherwise, false.</returns>
      <param name="lineNumber">The line number to show.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Creates a unique name for an event-handler method for the specified component and event.</summary>
      <returns>The recommended name for the event-handler method for this event.</returns>
      <param name="component">The component instance the event is connected to.</param>
      <param name="e">The event to create a name for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> or <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetCompatibleMethods(System.ComponentModel.EventDescriptor)">
      <summary>Gets a collection of event-handler methods that have a method signature compatible with the specified event.</summary>
      <returns>A collection of strings that are names of compatible methods.</returns>
      <param name="e">The event to get the compatible event-handler methods for.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEvent(System.ComponentModel.PropertyDescriptor)">
      <summary>Gets an <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the specified property descriptor represents, if it represents an event.</summary>
      <returns>An <see cref="T:System.ComponentModel.EventDescriptor" /> for the event that the property represents, or null if the property does not represent an event.</returns>
      <param name="property">The property that represents an event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperties(System.ComponentModel.EventDescriptorCollection)">
      <summary>Converts a set of event descriptors to a set of property descriptors.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that describe the event set.</returns>
      <param name="events">The events to convert to properties.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#GetEventProperty(System.ComponentModel.EventDescriptor)">
      <summary>Converts a single event descriptor to a property descriptor.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that describes the event.</returns>
      <param name="e">The event to convert.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="e" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode">
      <summary>Displays the user code for the designer.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)">
      <summary>Displays the user code for the specified event.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
      <param name="component">The component that the event is connected to.</param>
      <param name="e">The event to display.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="events" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.System#ComponentModel#Design#IEventBindingService#ShowCode(System.Int32)">
      <summary>Displays the user code for the designer at the specified line.</summary>
      <returns>true if the code is displayed; otherwise, false.</returns>
      <param name="lineNumber">The line number to place the caret on.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.UseMethod(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor,System.String)">
      <summary>Provides a notification that a particular method is being used by an event handler.</summary>
      <param name="component">The component to which the method is bound.</param>
      <param name="e">The <see cref="T:System.ComponentModel.EventDescriptor" /> for the event handler.</param>
      <param name="methodName">The name of the method.</param>
    </member>
    <member name="M:System.ComponentModel.Design.EventBindingService.ValidateMethodName(System.String)">
      <summary>Validates that the provided method name is valid for the language or script being used.</summary>
      <param name="methodName">The method name to validate.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ExceptionCollection">
      <summary>Represents the collection of exceptions.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.#ctor(System.Collections.ArrayList)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ExceptionCollection" /> class.</summary>
      <param name="exceptions">An array of type <see cref="T:System.Exception" />, containing the objects to populate the collection.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ExceptionCollection.Exceptions">
      <summary>Gets the array of <see cref="T:System.Exception" /> objects that represent the collection of exceptions.</summary>
      <returns>An <see cref="T:System.Exception" /> array that represent the collection of exceptions.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.ExceptionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data needed to serialize the <see cref="T:System.ComponentModel.Design.ExceptionCollection" />.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerDebugService">
      <summary>Provides debugging services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Assert(System.Boolean,System.String)">
      <summary>Asserts on a condition inside a design-time environment.</summary>
      <param name="condition">true to prevent <paramref name="message" /> from being displayed; otherwise, false.</param>
      <param name="message">The message to display.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Fail(System.String)">
      <summary>Logs a failure message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.IndentLevel">
      <summary>Gets or sets the indent level for debug output.</summary>
      <returns>The indent level for debug output.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.IComponentDesignerDebugService.Listeners">
      <summary>Gets a collection of trace listeners for monitoring design-time debugging output.</summary>
      <returns>A collection of trace listeners </returns>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerDebugService.Trace(System.String,System.String)">
      <summary>Logs a debug message inside a design-time environment.</summary>
      <param name="message">The message to log.</param>
      <param name="category">The category of <paramref name="message" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IComponentDesignerStateService">
      <summary>Allows a designer to store and retrieve its state.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.GetState(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a state item specified by the key for the given component.</summary>
      <returns>The designer state for <paramref name="component" /> specified by <paramref name="key" />.</returns>
      <param name="component">The component for which to retrieve the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IComponentDesignerStateService.SetState(System.ComponentModel.IComponent,System.String,System.Object)">
      <summary>Sets a state item specified by the key for the given component.</summary>
      <param name="component">The component for which to set the designer state item.</param>
      <param name="key">The name of the designer state item.</param>
      <param name="value">The designer state item for <paramref name="component" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IDesignTimeAssemblyLoader">
      <summary>Utility for loading assemblies in a designer. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.GetTargetAssemblyPath(System.Reflection.AssemblyName,System.String,System.Runtime.Versioning.FrameworkName)">
      <summary>Determines the load path for the specified assembly in the target framework.</summary>
      <returns>The actual load path for the assembly, or null if the assembly is not loadable.</returns>
      <param name="runtimeOrTargetAssemblyName">The full assembly name for the runtime or target assembly.</param>
      <param name="suggestedAssemblyPath">The suggested path from which to load the assembly.</param>
      <param name="targetFramework">The target framework for the designer.</param>
    </member>
    <member name="M:System.ComponentModel.Design.IDesignTimeAssemblyLoader.LoadRuntimeAssembly(System.Reflection.AssemblyName)">
      <summary>Loads the specified runtime assembly.</summary>
      <returns>The loaded runtime assembly, or null if the assembly could not be loaded.</returns>
      <param name="targetAssemblyName">The full target assembly name.</param>
    </member>
    <member name="T:System.ComponentModel.Design.IMultitargetHelperService">
      <summary>Defines multi-target type name resolution services in a design-time environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.IMultitargetHelperService.GetAssemblyQualifiedName(System.Type)">
      <summary>Resolves a type for the target framework to an assembly-qualified name.</summary>
      <returns>The <see cref="P:System.Type.AssemblyQualifiedName" /> for <paramref name="type" /> in the target framework. </returns>
      <param name="type">The type to resolve.</param>
    </member>
    <member name="T:System.ComponentModel.Design.InheritanceService">
      <summary>Provides a set of methods for identifying inherited components.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.InheritanceService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="component">The component to search for inherited components to add to the specified container. </param>
      <param name="container">The container to add the inherited components to. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.AddInheritedComponents(System.Type,System.ComponentModel.IComponent,System.ComponentModel.IContainer)">
      <summary>Adds the components of the specified type that are inherited by the specified component to the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
      <param name="type">The base type to search for. </param>
      <param name="component">The component to search for inherited components to add to the specified container. </param>
      <param name="container">The container to add the inherited components to. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.InheritanceService" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.GetInheritanceAttribute(System.ComponentModel.IComponent)">
      <summary>Gets the inheritance attribute of the specified component.</summary>
      <returns>An <see cref="T:System.ComponentModel.InheritanceAttribute" /> that describes the level of inheritance that this component comes from.</returns>
      <param name="component">The component to retrieve the inheritance attribute for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.InheritanceService.IgnoreInheritedMember(System.Reflection.MemberInfo,System.ComponentModel.IComponent)">
      <summary>Indicates whether to ignore the specified member.</summary>
      <returns>true if the specified member should be included in the set of inherited components; otherwise, false.</returns>
      <param name="member">The member to check. This member is either a <see cref="T:System.Reflection.FieldInfo" /> or a <see cref="T:System.Reflection.MethodInfo" />. </param>
      <param name="component">The component instance this member is bound to. </param>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LoadedEventArgs.#ctor(System.Boolean,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> class.</summary>
      <param name="succeeded">true to indicate that the designer load was successful; otherwise, false.</param>
      <param name="errors">A collection of errors that occurred while the designer was loading.</param>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.Errors">
      <summary>Gets a collection of errors that occurred while the designer was loading.</summary>
      <returns>A collection of errors that occurred while the designer was loading.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.LoadedEventArgs.HasSucceeded">
      <summary>Gets a value that indicates whether the designer load was successful.</summary>
      <returns>true if the designer load was successful; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.LoadedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.DesignSurface.Loaded" /> event of the <see cref="T:System.ComponentModel.Design.DesignSurface" /> class. This class cannot be inherited.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.LoadedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="T:System.ComponentModel.Design.LocalizationExtenderProvider">
      <summary>Provides design-time support for localization features to a root designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.#ctor(System.ComponentModel.ISite,System.ComponentModel.IComponent)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> class using the specified service provider and base component.</summary>
      <param name="serviceProvider">A service provider for the specified component. </param>
      <param name="baseComponent">The base component to localize. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.CanExtend(System.Object)">
      <summary>Indicates whether this object can provide its extender properties to the specified object.</summary>
      <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
      <param name="o">The object to receive the extender properties. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose">
      <summary>Disposes of the resources (other than memory) used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.LocalizationExtenderProvider" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLanguage(System.Object)">
      <summary>Gets the current resource culture for the specified object.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource variety.</returns>
      <param name="o">The object to get the current resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLoadLanguage(System.Object)">
      <summary>Gets the default resource culture to use when initializing the values of a localized object at design time.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" /> indicating the resource culture to use to initialize the values of the specified object.</returns>
      <param name="o">The object to get the resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.GetLocalizable(System.Object)">
      <summary>Gets a value indicating whether the specified object supports resource localization.</summary>
      <returns>true if the specified object supports resource localization; otherwise, false.</returns>
      <param name="o">The object to check for localization support. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ResetLanguage(System.Object)">
      <summary>Resets the resource culture for the specified object.</summary>
      <param name="o">The object to reset the resource culture for. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLanguage(System.Object,System.Globalization.CultureInfo)">
      <summary>Sets the current resource culture for the specified object to the specified resource culture.</summary>
      <param name="o">The base component to set the resource culture for. </param>
      <param name="language">A <see cref="T:System.Globalization.CultureInfo" /> that indicates the resource culture to use. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.SetLocalizable(System.Object,System.Boolean)">
      <summary>Sets a value indicating whether the specified object supports localized resources.</summary>
      <param name="o">The base component to set as localizable or not localizable. </param>
      <param name="localizable">true if the object supports resource localization; otherwise, false. </param>
    </member>
    <member name="M:System.ComponentModel.Design.LocalizationExtenderProvider.ShouldSerializeLanguage(System.Object)">
      <summary>Gets a value indicating whether the specified object must have its localizable values persisted in a resource.</summary>
      <returns>true if the localizable values should be persisted in resources; otherwise, false.</returns>
      <param name="o">The object to get the language support persistence flag for. </param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandsChangedEventArgs.#ctor(System.ComponentModel.Design.MenuCommandsChangedType,System.ComponentModel.Design.MenuCommand)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> class.</summary>
      <param name="changeType">The type of change.</param>
      <param name="command">The menu command.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.ChangeType">
      <summary>Gets the type of change that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedType" /> that caused <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> to be raised.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandsChangedEventArgs.Command">
      <summary>Gets the command that was added, removed, or changed.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.MenuCommand" /> that was added, removed, or changed.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event of a <see cref="T:System.ComponentModel.Design.MenuCommandService" />. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandsChangedType">
      <summary>Specifies the type of action that occurred to the related object's <see cref="T:System.Windows.Forms.Design.MenuCommands" /> collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandAdded">
      <summary>Specifies that one or more command objects were added.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandRemoved">
      <summary>Specifies that one or more commands were removed.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.MenuCommandsChangedType.CommandChanged">
      <summary>Specifies that one or more commands have changed their status.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.MenuCommandService">
      <summary>Implements the <see cref="T:System.ComponentModel.Design.IMenuCommandService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MenuCommandService" /> class. </summary>
      <param name="serviceProvider">The service provider that this service uses to obtain other services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Adds a command handler to the menu command service.</summary>
      <param name="command">The <see cref="T:System.ComponentModel.Design.MenuCommand" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A command handler <paramref name="command" /> already exists.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Adds a verb to the verb table of the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="verb">The <see cref="T:System.ComponentModel.Design.DesignerVerb" /> to add.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.Dispose(System.Boolean)">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.MenuCommandService" />.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.EnsureVerbs">
      <summary>Ensures that the verb list has been created.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command ID.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, null if the command is not found.</returns>
      <param name="commandID">The <see cref="T:System.ComponentModel.Design.CommandID" /> to find.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.FindCommand(System.Guid,System.Int32)">
      <summary>Searches for the <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.MenuCommand" /> associated with the given command; otherwise, null if the command is not found.</returns>
      <param name="guid">The GUID of the command.</param>
      <param name="id">The ID of the command.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetCommandList(System.Guid)">
      <summary>Gets the command list for a given GUID.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> of commands.</returns>
      <param name="guid">The GUID of the command list.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GetService(System.Type)">
      <summary>Gets a reference to the requested service.</summary>
      <returns>A reference to <paramref name="serviceType" />; otherwise, null if the service is not found.</returns>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)">
      <summary>Invokes the given command on the local form or in the global environment.</summary>
      <returns>true, if the command was found; otherwise, false.</returns>
      <param name="commandID">The command to invoke.</param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID,System.Object)">
      <summary>Invokes the given command with the given parameter on the local form or in the global environment.</summary>
      <returns>true, if the command was found; otherwise, false.</returns>
      <param name="commandId">The command to invoke.</param>
      <param name="arg">A parameter for the invocation.</param>
    </member>
    <member name="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged">
      <summary>Occurs when the status of a menu command has changed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.OnCommandsChanged(System.ComponentModel.Design.MenuCommandsChangedEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.MenuCommandService.MenuCommandsChanged" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.MenuCommandsChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)">
      <summary>Removes the given menu command from the document.</summary>
      <param name="command">The command to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="command" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)">
      <summary>Removes the given verb from the document.</summary>
      <param name="verb">The verb to remove.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="verb" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.MenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)">
      <summary>Shows the shortcut menu with the given command ID at the given location.</summary>
      <param name="menuID">The shortcut menu to display.</param>
      <param name="x">The x-coordinate of the shortcut menu's location.</param>
      <param name="y">The y-coordinate of the shortcut menu's location.</param>
    </member>
    <member name="P:System.ComponentModel.Design.MenuCommandService.Verbs">
      <summary>Gets a collection of the designer verbs that are currently available.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerVerbCollection" /> of the designer verbs that are currently available.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.MultilineStringEditor">
      <summary>Displays a dialog for editing multi-line strings in design mode.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.MultilineStringEditor" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified object value using the edit style provided by <see cref="M:System.Drawing.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object passed to it.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services can be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Drawing.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the supported editing style.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.ComponentModel.Design.MultilineStringEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this editor supports painting a representation of an object's value.</summary>
      <returns>false, indicating that this <see cref="T:System.Drawing.Design.UITypeEditor" /> does not display a visual representation in the Properties Window.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor">
      <summary>Implements the basic functionality that can be used to design value editors. These editors can, in turn, provide a user interface for representing and editing the values of objects of the supported data types.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> class.</summary>
      <param name="subObjectSelector">The specified sub-object selector value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.currValue">
      <summary>Represents the current value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style indicated by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle" />.</summary>
      <returns>The new value of the object. If the value of the object has not changed, the method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information.</param>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> that this editor can use to obtain services.</param>
      <param name="value">The object to edit.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.EqualsToValue(System.Object)">
      <summary>Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.</summary>
      <returns>true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.FillTreeWithData(System.ComponentModel.Design.ObjectSelectorEditor.Selector,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>Fills a hierarchical collection of labeled items, with each item represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="selector">A hierarchical collection of labeled items.</param>
      <param name="context">The context information for a component.</param>
      <param name="provider">The <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method of this interface that obtains the object that provides the service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by <see cref="Overload:System.ComponentModel.Design.ObjectSelectorEditor.EditValue" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that can be used to gain additional context information.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.prevValue">
      <summary>Represents the previous value of <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SetValue(System.Object)">
      <summary>Sets the current <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" /> to the specified value.</summary>
      <param name="value">The specified value.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SubObjectSelector">
      <summary>Controls whether or not the nodes within the hierarchical collection of labeled items are accessible.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector">
      <summary>Displays a hierarchical collection of labeled items, each represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.#ctor(System.ComponentModel.Design.ObjectSelectorEditor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.Selector" /> class.</summary>
      <param name="editor">The <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.AddNode(System.String,System.Object,System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode)">
      <summary>Adds a new tree node to the collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> added to the collection. </returns>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
      <param name="parent">The parent of the node.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Clear">
      <summary>Removes all tree nodes from the collection.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.Selector.clickSeen">
      <summary>This field is for internal use only.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnAfterSelect(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Occurs after the tree node is selected.</summary>
      <param name="sender">The source of an event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyDown" />  event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Occurs when a key is pressed while the control has focus.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is clicked.</summary>
      <param name="e">Provides data for the <see cref="E:System.Windows.Forms.Control.MouseUp" />, <see cref="E:System.Windows.Forms.Control.MouseDown" />, and <see cref="E:System.Windows.Forms.Control.MouseMove" /> events.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.SetSelection(System.Object,System.Windows.Forms.TreeNodeCollection)">
      <summary>Sets the collection nodes to a specific value.</summary>
      <returns>true if the collection nodes were set; otherwise, false.</returns>
      <param name="value">The value to be set.</param>
      <param name="nodes">The nodes collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
      <summary>Initializes the editor service.</summary>
      <param name="edSvc">The editor service.</param>
      <param name="value">The value to be set.</param>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.Stop">
      <summary>Removes the editor service.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.Selector.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode">
      <summary>Represents a node of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode" /> class.</summary>
      <param name="label">The label for the node.</param>
      <param name="value">The <see cref="T:System.Object" /> that represents the value for the node.</param>
    </member>
    <member name="F:System.ComponentModel.Design.ObjectSelectorEditor.SelectorNode.value">
      <summary>Represents the value for the node.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute">
      <summary>Specifies the target framework for a project.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.ProjectTargetFrameworkAttribute" /> class. </summary>
      <param name="targetFrameworkMoniker">The target framework for the project.</param>
    </member>
    <member name="P:System.ComponentModel.Design.ProjectTargetFrameworkAttribute.TargetFrameworkMoniker">
      <summary>Gets the target framework for the project.</summary>
      <returns>The target framework for the project.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine">
      <summary>Specifies generic undo/redo functionality at design time.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine" /> class.</summary>
      <param name="provider">A parenting service provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">A required service cannot be found. See <see cref="T:System.ComponentModel.Design.UndoEngine" /> for required services. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.AddUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Adds an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> to the undo stack.</summary>
      <param name="unit">The undo unit to add </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.CreateUndoUnit(System.String,System.Boolean)">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <returns>A new <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
      <param name="name">The name of the unit to create. </param>
      <param name="primary">true to create the first of a series of nested units; false to create subsequent nested units.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.DiscardUndoUnit(System.ComponentModel.Design.UndoEngine.UndoUnit)">
      <summary>Discards an <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</summary>
      <param name="unit">The unit to discard.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Design.UndoEngine" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.Enabled">
      <summary>Enables or disables the <see cref="T:System.ComponentModel.Design.UndoEngine" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.UndoEngine" /> is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetRequiredService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, if found.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="serviceType" /> is required but cannot be found. If you have removed this service, ensure that you provide a replacement.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the requested service is not found.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndoing(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undoing" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.OnUndone(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.UndoEngine.Undone" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undoing">
      <summary>Occurs immediately before an undo action is performed.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoInProgress">
      <summary>Indicates if an undo action is in progress.</summary>
      <returns>true if an undo action is in progress; otherwise, false.</returns>
    </member>
    <member name="E:System.ComponentModel.Design.UndoEngine.Undone">
      <summary>Occurs immediately after an undo action is performed.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.UndoEngine.UndoUnit">
      <summary>Encapsulates a unit of work that a user can undo.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.#ctor(System.ComponentModel.Design.UndoEngine,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> class.</summary>
      <param name="engine">The undo engine that owns this undo unit.</param>
      <param name="name">The name for this undo unit.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="engine" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Close">
      <summary>Receives a call from the undo engine to close this unit.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdded(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdded" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentAdding(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentAdding" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanged(System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentChanging(System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoved(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoved" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRemoving(System.ComponentModel.Design.ComponentEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRemoving" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ComponentRename(System.ComponentModel.Design.ComponentRenameEventArgs)">
      <summary>Receives a call from the <see cref="T:System.ComponentModel.Design.UndoEngine" /> in response to a <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentRenameEventArgs" />  that contains the event data.</param>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.GetService(System.Type)">
      <summary>Gets an instance of the requested service.</summary>
      <returns>An instance of the given service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.IsEmpty">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> contains no events; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.Name">
      <summary>Gets the name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />. </summary>
      <returns>The name of the <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.ToString">
      <summary>Returns a <see cref="T:System.String" /> that represents the current name of the unit.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current name of the unit.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo">
      <summary>Performs an undo or redo action.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoCore">
      <summary>Called by <see cref="M:System.ComponentModel.Design.UndoEngine.UndoUnit.Undo" /> to perform an undo action.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine">
      <summary>Gets the parent <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" />.</summary>
      <returns>The <see cref="P:System.ComponentModel.Design.UndoEngine.UndoUnit.UndoEngine" /> to which this <see cref="T:System.ComponentModel.Design.UndoEngine.UndoUnit" /> is attached.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptor">
      <summary>Implements the basic functionality required by a single data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Image">
      <summary>When overridden in a derived class, closes this stream and the underlying stream gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.IsDesignable">
      <summary>When overridden in a derived class, gets the value indicating whether the data source is designable.</summary>
      <returns>true if the data source is designable; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.Name">
      <summary>When overridden in a derived class, gets the name of the data source.</summary>
      <returns>The name of the data source.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptor.TypeName">
      <summary>When overridden in a derived class, gets the fully qualified type name of the data source.</summary>
      <returns>The fully qualified type name of the data source.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Add(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to the collection.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> that was added to the collection.</returns>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to add to the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Contains(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceDescriptor[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</summary>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" />.</returns>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceDescriptorCollection.Remove(System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptor" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroup">
      <summary>Implements the basic functionality required by a single data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.DataSources">
      <summary>When overridden in a derived class, gets the collection of descriptors for the data sources in this group.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceDescriptorCollection" /> that represents the collection of descriptors for the data sources in this group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Image">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</summary>
      <returns>A <see cref="T:System.Drawing.Bitmap" /> image that represents the group.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.IsDefault">
      <summary>When overridden in a derived class, gets the value indicating whether this group is the default group.</summary>
      <returns>true if this group is the default group; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroup.Name">
      <summary>When overridden in a derived class, gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceGroupCollection">
      <summary>Provides a type-safe collection of <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> objects.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Add(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Adds a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to the collection.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> that was added to the collection.</returns>
      <param name="value">A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Contains(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Gets a value indicating whether the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> contains the specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> is contained in the collection; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.CopyTo(System.ComponentModel.Design.Data.DataSourceGroup[],System.Int32)">
      <summary>Copies the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> values to a one-dimensional <see cref="T:System.Array" /> at the specified index.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the values copied from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
      <param name="index">The index in the <paramref name="array" /> where copying begins.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.IndexOf(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Returns the index of a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <returns>The index of the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> of <paramref name="value" /> in the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, if found; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to locate.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Insert(System.Int32,System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Inserts a <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> into the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index where <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to insert.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceGroupCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</summary>
      <returns>The specified <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" />.</returns>
      <param name="index">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> specified.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceGroupCollection.Remove(System.ComponentModel.Design.Data.DataSourceGroup)">
      <summary>Removes a specific <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</summary>
      <param name="value">The <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> to remove from the <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DataSourceProviderService">
      <summary>Implements the basic functionality required of a service for providing access to a data source at the EnvDTE.Project level.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DataSourceProviderService" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.AddDataSourceInstance(System.ComponentModel.Design.IDesignerHost,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, creates and returns an instance of the given data source, and adds it to the design surface.</summary>
      <returns>An <see cref="T:System.Object" /> representing an instance of the added data source.</returns>
      <param name="host">The designer host.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <exception cref="T:System.ArgumentException">The type name cannot be created or resolved.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.GetDataSources">
      <summary>When overridden in a derived class, retrieves the collection of data sources at the EnvDTE.Project level.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroupCollection" />, or null if there are no data sources at the EnvDTE.Project level.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)">
      <summary>When overridden in a derived class, invokes the Add New Data Source Wizard.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DataSourceGroup" /> collection of newly added data sources, or null if no data sources are added.</returns>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)">
      <summary>When overridden in a derived class, invokes the Configure Data Source dialog box on the specified data source.</summary>
      <returns>true if any changes were made to that data source; otherwise, false.</returns>
      <param name="parentWindow">The parent window.</param>
      <param name="startPosition">The initial position of a form.</param>
      <param name="dataSourceDescriptor">The data source.</param>
      <exception cref="T:System.ArgumentException">The specified data source is invalid or null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DataSourceProviderService.NotifyDataSourceComponentAdded(System.Object)">
      <summary>When overridden in a derived class, notifies the service that a component representing a data source was added to the design surface.</summary>
      <param name="dsc">The data source component.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsAddNewDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />.</summary>
      <returns>true if the service supports adding a new data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeAddNewDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition)" />; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DataSourceProviderService.SupportsConfigureDataSource">
      <summary>When overridden in a derived class, gets the value indicating whether the service supports configuring data sources using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />.</summary>
      <returns>true if the service supports configuring a data source using <see cref="M:System.ComponentModel.Design.Data.DataSourceProviderService.InvokeConfigureDataSource(System.Windows.Forms.IWin32Window,System.Windows.Forms.FormStartPosition,System.ComponentModel.Design.Data.DataSourceDescriptor)" />; otherwise, false.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataColumn">
      <summary>Represents a column of a table or view in the data store accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name and data type. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified name, data type, and default value. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataColumn.#ctor(System.String,System.Data.DbType,System.Object,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> class with the specified values. </summary>
      <param name="name">The name identifying the column in the data store.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="defaultValue">The default value of the column</param>
      <param name="identity">true if the field is the identity field of the data row; otherwise, false.</param>
      <param name="nullable">true if the field can be null in the data store; otherwise, false.</param>
      <param name="primaryKey">true if the field is the primary key of the data row; otherwise, false.</param>
      <param name="precision">The maximum number of digits used by a numeric data field.</param>
      <param name="scale">The maximum number of digits to the right of the decimal point in a numeric data field.</param>
      <param name="length">The length of the data field, in bytes.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DataType">
      <summary>Gets the data type of the data column.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.DefaultValue">
      <summary>Gets the default value of the data column.</summary>
      <returns>The default value of the data column. The default is null.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Identity">
      <summary>Gets a value indicating whether the data column is an identity column for the data row.</summary>
      <returns>true of the column is an identity column; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Length">
      <summary>Gets the length in bytes of the data column.</summary>
      <returns>The length of the data column, in bytes.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Name">
      <summary>Gets the name of the column in the data store.</summary>
      <returns>The name of the column in the data store.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Nullable">
      <summary>Gets a value indicating whether the column can be null in the data store.</summary>
      <returns>true if the column can be null in the data store; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Precision">
      <summary>Gets the number of digits in a numeric data column.</summary>
      <returns>The number of digits in a numeric data column. </returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.PrimaryKey">
      <summary>Gets a value indicating whether the column is part of the table's primary key.</summary>
      <returns>true if the column is part of the table's primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataColumn.Scale">
      <summary>Gets the number of digits to the right of the decimal point in a numeric column.</summary>
      <returns>The number of digits to the right of the decimal point in a numeric column.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataConnection">
      <summary>Represents a connection to a data store in a design tool. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string. </summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataConnection.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> class with the specified name, data provider, and connection string, and indicates whether the connection was loaded from a configuration file. </summary>
      <param name="name">The name associated with this connection.</param>
      <param name="providerName">The name of the provider object used to access the underlying data store.</param>
      <param name="connectionString">The string that specifies how to connect to the data store.</param>
      <param name="isConfigured">true to indicate the connection was created from information stored in the application's configuration file; otherwise, false.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ConnectionString">
      <summary>Gets the application connection string defined for the connection.</summary>
      <returns>The application connection string defined for the connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured">
      <summary>Gets a value indicating whether the connection information is in the application's configuration file.</summary>
      <returns>true if the connection is defined in the application's configuration file; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name">
      <summary>Gets the name of the data connection.</summary>
      <returns>The name of the data connection.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataConnection.ProviderName">
      <summary>Gets the name of the provider used to access the underlying data store.</summary>
      <returns>The name of the provider used to access the underlying data store.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataParameter">
      <summary>Represents a parameter for a stored procedure. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataParameter.#ctor(System.String,System.Data.DbType,System.Data.ParameterDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> class with the specified name, data type, and input/output semantics. </summary>
      <param name="name">The name of the parameter.</param>
      <param name="dataType">One of the <see cref="T:System.Data.DbType" /> values.</param>
      <param name="direction">One of the <see cref="T:System.Data.ParameterDirection" /> values.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.DataType">
      <summary>Gets the database type of the parameter.</summary>
      <returns>One of the <see cref="T:System.Data.DbType" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Direction">
      <summary>Gets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return-value parameter.</summary>
      <returns>One of the <see cref="T:System.Data.ParameterDirection" /> values.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataParameter.Name">
      <summary>Gets the name of the parameter.</summary>
      <returns>The name of the parameter.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataRelationship">
      <summary>Represents to the designer a relationship between two tables in the data source accessed through a data connection. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataRelationship.#ctor(System.String,System.Collections.ICollection,System.ComponentModel.Design.Data.DesignerDataTable,System.Collections.ICollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> class with the specified name, parent column, and child relationship. </summary>
      <param name="name">The name of the relationship.</param>
      <param name="parentColumns">The columns in the parent table that define the relationship.</param>
      <param name="childTable">The child table in the relationship.</param>
      <param name="childColumns">The columns in the child table that define the relationship.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildColumns">
      <summary>Gets a collection of columns from the child table that are part of the relationship.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the child table.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ChildTable">
      <summary>Gets the child table referenced in the relationship.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> object that represents the child table in the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.Name">
      <summary>Gets the name of the relationship.</summary>
      <returns>The name of the relationship.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataRelationship.ParentColumns">
      <summary>Gets a collection of columns from the parent table that are part of the relationship between two tables.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects that define the relationship in the parent table.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataSchemaClass">
      <summary>Specifies the types of objects that can be retrieved from a data-store schema. This class cannot be inherited.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.StoredProcedures">
      <summary>Indicates that stored procedures should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Tables">
      <summary>Indicates that tables should be returned from the data-store schema.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.DesignerDataSchemaClass.Views">
      <summary>Indicates that data views should be returned from the data-store schema.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure">
      <summary>Represents a stored procedure in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name. </summary>
      <param name="name">The name of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataStoredProcedure" /> class with the specified name and owner. </summary>
      <param name="name">The name of the stored procedure.</param>
      <param name="owner">The data store owner of the stored procedure.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.CreateParameters">
      <summary>When overridden in a derived class, returns a collection of parameters for the stored procedure.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataParameter" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Name">
      <summary>Gets the name of the stored procedure.</summary>
      <returns>The name of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Owner">
      <summary>Gets the owner of the stored procedure.</summary>
      <returns>The owner of the stored procedure.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataStoredProcedure.Parameters">
      <summary>Gets a collection of parameters required for a stored procedure.</summary>
      <returns>A collection of parameters for the stored procedure.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTable">
      <summary>Represents a table in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name. </summary>
      <param name="name">The name of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTable" /> class with the specified name and owner. </summary>
      <param name="name">The name of the table.</param>
      <param name="owner">The owner of the table.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTable.CreateRelationships">
      <summary>When overridden in a derived class, returns a collection of relationship objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTable.Relationships">
      <summary>Gets a collection of relationships defined for a table.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataRelationship" /> objects.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataTableBase">
      <summary>Defines the properties and methods shared between data-store tables and data-store views.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class. </summary>
      <param name="name">The name of the table or view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataTableBase" /> class. </summary>
      <param name="name">The name of the table or view.</param>
      <param name="owner">The data-store owner of the table or view.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Columns">
      <summary>Gets a collection of columns defined for a table or view.</summary>
      <returns>A collection of columns defined for a table or view.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataTableBase.CreateColumns">
      <summary>When overridden in a derived class, returns a collection of data-store column objects.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataColumn" /> objects.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Name">
      <summary>Gets the name of the data-store table or view.</summary>
      <returns>The name of the data-store table or view.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Data.DesignerDataTableBase.Owner">
      <summary>Gets the owner of the data-store table or view.</summary>
      <returns>The owner of the data-store table or view.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Data.DesignerDataView">
      <summary>Represents a data view in the data store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name. </summary>
      <param name="name">The name of the view.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.DesignerDataView.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Data.DesignerDataView" /> class with the specified name and owner. </summary>
      <param name="name">The name of the view.</param>
      <param name="owner">The data-store owner of the view.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDataEnvironment">
      <summary>Defines an interface to data services that enables control designers to integrate data store or database-related functionality into their design environment.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Creates a new data connection or edits an existing connection using the design tool's new connection user interface.</summary>
      <returns>A new or edited <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object, or null if the user canceled.</returns>
      <param name="owner">The parent window for the connection dialog.</param>
      <param name="initialConnection">The connection, if any, to edit. To create a new connection, <paramref name="initialConnection" /> should be null.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.BuildQuery(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.ComponentModel.Design.Data.QueryBuilderMode,System.String)">
      <summary>Launches a dialog to build a SQL query string.</summary>
      <returns>A string containing the SQL query, or null if the user canceled.</returns>
      <param name="owner">The parent window for the dialog.</param>
      <param name="connection">The data connection to use for the query.</param>
      <param name="mode">One of the <see cref="T:System.ComponentModel.Design.Data.QueryBuilderMode" /> values.</param>
      <param name="initialQueryText">The initial value of the query or <see cref="F:System.String.Empty" /> to create a new query.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.ConfigureConnection(System.Windows.Forms.IWin32Window,System.ComponentModel.Design.Data.DesignerDataConnection,System.String)">
      <summary>Writes a connection string to the application's configuration file.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the saved connection data with the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.Name" /> property set to <paramref name="name" />, and the <see cref="P:System.ComponentModel.Design.Data.DesignerDataConnection.IsConfigured" /> property set to true.</returns>
      <param name="owner">The parent window for the dialog, if any.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> object containing the connection data to save.</param>
      <param name="name">The name of the new connection configuration entry.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Data.IDataEnvironment.Connections">
      <summary>Gets a collection of data connections defined in the current design session.</summary>
      <returns>A collection of <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> objects representing the data connections available in the current design session.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetCodeExpression(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Returns a code expression that contains the source code required to retrieve a connection string from the application's configuration file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object containing the source code required to retrieve a connection string from the application's configuration file.</returns>
      <param name="connection">The connection to retrieve from the application's configuration file.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetConnectionSchema(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets the schema for the specified data connection.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.Data.IDesignerDataSchema" /> object containing the schema information for the specified data connection, or null if no schema information is available.</returns>
      <param name="connection">The data connection for which to return schema information.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDataEnvironment.GetDesignTimeConnection(System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Gets a database connection that can be used at design time.</summary>
      <returns>A <see cref="T:System.Data.Common.DbConnection" /> object that can be used at design time.</returns>
      <param name="connection">The desired data connection.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.IDesignerDataSchema">
      <summary>Defines methods for retrieving data-store schema information.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Gets a collection of specified schema items.</summary>
      <returns>A collection of schema objects of the specified type.</returns>
      <param name="schemaClass">The schema objects to return.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)">
      <summary>Returns a value indicating whether the data store contains the specified data-schema object.</summary>
      <returns>true if the data store supports the specified data-schema object; otherwise, false.</returns>
      <param name="schemaClass">The schema objects to return.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Data.QueryBuilderMode">
      <summary>Specifies the type of data-store query the design environment should construct.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Select">
      <summary>The query being built is a Select query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Update">
      <summary>The query being built is an Update query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Insert">
      <summary>The query being built is an Insert query.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Data.QueryBuilderMode.Delete">
      <summary>The query being built is a Delete query.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)">
      <summary>Starts the loading process.</summary>
      <param name="host">The designer loader host to load.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The designer is already loaded, or <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> has been called with a different designer loader host.</exception>
      <exception cref="T:System.ObjectDisposedException">
        <paramref name="host" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)">
      <summary>Enables or disables component notification with the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</summary>
      <returns>true if the component notification was enabled prior to this call; otherwise, false.</returns>
      <param name="enable">true to enable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />; false to disable component notification by the <see cref="T:System.ComponentModel.Design.Serialization.DesignerLoader" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush">
      <summary>Flushes pending changes to the designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the requested service cannot be found.</returns>
      <param name="serviceType">The <see cref="T:System.Type" /> of the service.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded">
      <summary>Indicates whether the designer should be reloaded.</summary>
      <returns>true if the designer should be reloaded; otherwise, false. The default implementation always returns true.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost">
      <summary>Gets the loader host.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> that was passed to the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)" /> method.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading">
      <summary>Gets a value indicating whether the designer loader is loading the design surface.</summary>
      <returns>true if the designer loader is currently loading the design surface; otherwise, false.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified">
      <summary>Gets or sets a value indicating whether the designer has been modified.</summary>
      <returns>true if the designer has been modified; otherwise, false,</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">true if the load completed successfully; otherwise, false.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing objects (usually exceptions) that were reported as errors.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying">
      <summary>Notifies the designer loader that the state of the document is about to be modified.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Flushes all changes to the designer.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for persisting the state of loaded designers.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Loads a designer from persistence.</summary>
      <param name="serializationManager">An <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for loading state for the designers.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider">
      <summary>Gets or sets the property provider for the serialization manager being used by the loader.</summary>
      <returns>An object whose properties are to be provided to the serialization manager.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)">
      <summary>Queues a reload of the designer.</summary>
      <param name="flags">A bitwise combination of the <see cref="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions" /> values.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending">
      <summary>Gets a value indicating whether a reload has been queued.</summary>
      <returns>true, if a call to <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> has queued a reload request; otherwise, false.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)">
      <summary>Reports errors that occurred while flushing changes.</summary>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> containing error objects, usually exceptions.</param>
      <exception cref="T:System.InvalidOperationException">One or more errors occurred while flushing changes.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)">
      <summary>Sets the full class name of the base component.</summary>
      <param name="name">A string representing the full name of the component to be designed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency">
      <summary>Registers an external component as part of the load process managed by <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderService" />.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)">
      <summary>Signals that a dependent load has finished.</summary>
      <param name="successful">true to load successfully; otherwise, false.</param>
      <param name="errorCollection">An <see cref="T:System.Collections.ICollection" /> containing errors that occurred during the load.</param>
      <exception cref="T:System.InvalidOperationException">No load dependencies have been added by <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency" />, or the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized. </exception>
      <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has been disposed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload">
      <summary>Reloads the design document.</summary>
      <returns>true if the reload request is accepted; false if the loader does not allow the reload.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions">
      <summary>Defines the behavior of the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)" /> method. These flags can be combined using the bitwise OR operator.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Default">
      <summary>The designer loader flushes changes before reloading, but it does not force a reload, and it also does not set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to true if load errors occur.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.ModifyOnError">
      <summary>The designer loader will set the <see cref="P:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified" /> property to true if load errors occur. This flag is useful if you want a flush of the loader to overwrite persistent state that had errors.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.Force">
      <summary>The designer loader forces the reload to occur. Normally, a reload occurs only if the <see cref="M:System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded" /> method returns true. This flag bypasses calling this method and always performs the reload.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions.NoFlush">
      <summary>The designer loader abandons any changes before reloading.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService">
      <summary>Serializes a set of components into a serialization store.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService" /> class using the given service provider to resolve services.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> to use for resolving services.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore">
      <summary>Creates a new <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)">
      <summary>Deserializes the given store to produce a collection of objects.</summary>
      <returns>A collection of deserialized components.</returns>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)">
      <summary>Deserializes the given store and populates the given <see cref="T:System.ComponentModel.IContainer" /> with deserialized <see cref="T:System.ComponentModel.IComponent" /> objects.</summary>
      <returns>A collection of deserialized components.</returns>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from which objects will be deserialized.</param>
      <param name="container">A container to which <see cref="T:System.ComponentModel.IComponent" />  objects will be added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)">
      <summary>Deserializes the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> to the given container, optionally applying default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  from which the objects will be deserialized.</param>
      <param name="container">A container of objects to which data will be applied.</param>
      <param name="validateRecycledTypes">true to validate the recycled type; otherwise, false.</param>
      <param name="applyDefaults">true to apply default property values; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="container" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.LoadStore(System.IO.Stream)">
      <summary>Loads a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" /> from the given stream.</summary>
      <returns>The loaded <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</returns>
      <param name="stream">The stream from which to load the <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="stream" /> is null.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="stream" /> supports seeking, but its length is 0. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object to the given <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="value" /> will be serialized. </param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)">
      <summary>Serializes the given object, accounting for default property values.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="value" /> will be serialized. </param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" /> or <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="member" /> will be serialized. </param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object, but also serializes the member if it contains the default property value.</summary>
      <param name="store">The <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />  to which <paramref name="member" /> will be serialized. </param>
      <param name="owningObject">The object that owns the <paramref name="member" />.</param>
      <param name="member">The given member.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="store" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="store" /> is closed, or <paramref name="store" /> is not a supported type of serialization store. Use a store returned by <see cref="M:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore" />.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader">
      <summary>Provides the base class for implementing a CodeDOM-based designer loader.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider">
      <summary>Gets the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use. </summary>
      <returns>The <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> this designer loader will use</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Dispose">
      <summary>Releases the resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Initialize">
      <summary>Initializes services.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerLoaderHost" /> has not been initialized, or the designer loader did not supply a type resolution service, which is required for CodeDom serialization.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.IsReloadNeeded">
      <summary>Returns a value indicating whether a reload is required.</summary>
      <returns>true if the <see cref="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.CodeDomProvider" /> decides a reload is required; otherwise, false.</returns>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginLoad">
      <summary>Notifies the designer loader that loading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnBeginUnload">
      <summary>Notifies the designer loader that unloading is about to begin.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnComponentRename(System.Object,System.String,System.String)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentRename" /> event. </summary>
      <param name="component">The component to rename.</param>
      <param name="oldName">The original name of the component.</param>
      <param name="newName">The new name of the component.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)">
      <summary>Notifies the designer loader that loading is complete.</summary>
      <param name="successful">true to indicate that the load completed successfully; otherwise, false.</param>
      <param name="errors">An <see cref="T:System.Collections.ICollection" /> of objects (usually exceptions) that were reported as errors.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Parse">
      <summary>Parses the text or other persistent storage and returns a <see cref="T:System.CodeDom.CodeCompileUnit" />.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> resulting from a parse operation.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Requests serialization of the root component of the designer.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Parses code from a CodeDOM provider.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> from which to request the serializer.</param>
      <exception cref="T:System.NotSupportedException">The language did not provide a code parser for this file; this file type may not support a designer.</exception>
      <exception cref="T:System.InvalidOperationException">The class can be designed, but it is not the first class in the file, or the designer could not be shown for this file because none of the classes within it can be designed.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Deserialize(System.Object)">
      <summary>Deserializes the specified serialization data object and returns a collection of objects represented by that data.</summary>
      <returns>A collection of objects represented by <paramref name="serializationData" />.</returns>
      <param name="serializationData">An object consisting of serialized data.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="serializationData" /> is not a <see cref="T:System.ComponentModel.Design.Serialization.SerializationStore" />. </exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerSerializationService#Serialize(System.Collections.ICollection)">
      <summary>Serializes the specified collection of objects and stores them in a serialization data object.</summary>
      <returns>An object that contains the serialized state of the specified collection of objects.</returns>
      <param name="objects">A collection of objects to serialize.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ComponentModel.Design.Serialization.ComponentSerializationService" />  was not found.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#CreateName(System.ComponentModel.IContainer,System.Type)">
      <summary>Creates a new name that is unique to all components in the specified container.</summary>
      <returns>A unique name for the data type.</returns>
      <param name="container">The container where the new object is added.</param>
      <param name="dataType">The data type of the object that receives the name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#IsValidName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <returns>true if the name is valid; otherwise, false.</returns>
      <param name="name">The name to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.System#ComponentModel#Design#Serialization#INameCreationService#ValidateName(System.String)">
      <summary>Gets a value indicating whether the specified name is valid.</summary>
      <param name="name">The name to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is not a valid identifier, or there is already a component with the same name. </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.TypeResolutionService">
      <summary>Gets the type resolution service to be used with this designer loader.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.ITypeResolutionService" /> that the CodeDOM serializers will use when resolving types.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomDesignerLoader.Write(System.CodeDom.CodeCompileUnit)">
      <summary>Writes compile-unit changes to persistent storage.</summary>
      <param name="unit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to be persisted.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel">
      <summary>Determines the localization model to be used by the CodeDom resource adapter.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.None">
      <summary>The localization provider should ignore localized properties. It will still write out resources for objects that do not support code generation and are serializable.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyAssignment">
      <summary>The localization provider will write out localized properties by assigning a resource to each property. This model is fast when the number of properties is small, but it scales poorly as the number of properties containing default values grows.</summary>
    </member>
    <member name="F:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel.PropertyReflection">
      <summary>The localization provider will write localized property values into a resource file and use the <see cref="T:System.ComponentModel.ComponentResourceManager" /> class to reflect on properties by name to fill them at runtime. This uses reflection at runtime so it can be slow, but it scales better for large numbers of properties with default values.</summary>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider">
      <summary>Provides CodeDOM resource serialization services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class. </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.#ctor(System.IServiceProvider,System.ComponentModel.Design.Serialization.CodeDomLocalizationModel,System.Globalization.CultureInfo[])">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" /> class. </summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" /> used by the localization provider to add its extender properties.</param>
      <param name="model">A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationModel" /> value indicating the localization model to be used by the CodeDOM resource adapter </param>
      <param name="supportedCultures">An array of cultures that this resource adapter should support.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider" />.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomLocalizationProvider.System#ComponentModel#Design#Serialization#IDesignerSerializationProvider#GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Type,System.Type)" />.</summary>
      <returns>An instance of a serializer of the type requested, or null if the request cannot be satisfied.</returns>
      <param name="manager">The serialization manager requesting the serializer. </param>
      <param name="currentSerializer">An instance of the current serializer of the specified type. This can be null if no serializer of the specified type exists. </param>
      <param name="objectType">The data type of the object to serialize. </param>
      <param name="serializerType">The data type of the serializer to create. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializer">
      <summary>Serializes an object graph to a series of CodeDOM statements. This class provides an abstract base class for a serializer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Deserializes the specified serialized CodeDOM object into an object.</summary>
      <returns>The deserialized CodeDOM object.</returns>
      <param name="manager">A serialization manager interface that is used during the deserialization process. </param>
      <param name="codeObject">A serialized CodeDOM object to deserialize. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="codeObject" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="codeObject" /> is an unsupported code element.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.DeserializeStatementToInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a single statement.</summary>
      <returns>An object instance resulting from deserializing <paramref name="statement" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="statement">The statement to deserialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.GetTargetComponentName(System.CodeDom.CodeStatement,System.CodeDom.CodeExpression,System.Type)">
      <summary>Determines which statement group the given statement should belong to.</summary>
      <returns>The name of the component with which <paramref name="statement" /> should be grouped.</returns>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> for which to determine the group.</param>
      <param name="expression">A <see cref="T:System.CodeDom.CodeExpression" /> that <paramref name="statement" /> has been reduced to.</param>
      <param name="targetType">The <see cref="T:System.Type" /> of <paramref name="statement" />.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified object into a CodeDOM object.</summary>
      <returns>A CodeDOM object representing the object that has been serialized.</returns>
      <param name="manager">The serialization manager to use during serialization. </param>
      <param name="value">The object to serialize. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object, accounting for default values.</summary>
      <returns>A CodeDom object representing <paramref name="value" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMember(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member on the given object.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeStatementCollection" /> representing the serialized state of <paramref name="member" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Serializes the given member, accounting for default values.</summary>
      <returns>A CodeDom object representing <paramref name="member" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="owningObject">The object to which is <paramref name="member" /> attached.</param>
      <param name="member">The member to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="owningObject" />, or <paramref name="member" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="member" /> is not a serializable type.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializer.SerializeToReferenceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the specified value to a CodeDOM expression.</summary>
      <returns>The serialized value. This returns null if no reference expression can be obtained for the specified value, or the value cannot be serialized.</returns>
      <param name="manager">The serialization manager to use during serialization. </param>
      <param name="value">The object to serialize. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerBase">
      <summary>Provides a base class for <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> classes.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)">
      <summary>Deserializes the given expression into an in-memory object.</summary>
      <returns>An object resulting from interpretation of <paramref name="expression" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="name">The name of the object that results from the expression. Can be null if there is no need to name the object.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> to interpret.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)">
      <summary>Returns an instance of the given type.</summary>
      <returns>An instance of <paramref name="type" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="type">The <see cref="T:System.Type" /> of the instance to return.</param>
      <param name="parameters">The parameters to pass to the constructor for <paramref name="type" />.</param>
      <param name="name">The name of the deserialized object.</param>
      <param name="addToContainer">true to add this object to the design container; otherwise, false. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Deserializes properties on the given object from the invariant culture’s resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object from which the properties are to be deserialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be deserialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)">
      <summary>Deserializes a statement by interpreting and executing a CodeDOM statement.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statement">The <see cref="T:System.CodeDom.CodeStatement" /> to deserialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="type">The target type.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a collection of attributes as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of attributes as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of events as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of events as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns an expression for the given object.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing v<paramref name="alue" />, or null if there is no existing expression for v<paramref name="alue" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which to get an expression.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])">
      <summary>Gets a collection of properties as defined in the project's target version of the .NET Framework.</summary>
      <returns>A collection of properties as defined in the project's target version of the .NET Framework.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">An object of the target type.</param>
      <param name="attributes">An array of attributes to pass to the target version of the .NET Framework.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Gets a reflection type generated from type metadata.</summary>
      <returns>A reflection type generated from the metadata of <paramref name="type" />.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="type">The type to use metadata from.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Gets a reflection type generated from object metadata.</summary>
      <returns>A reflection type generated from the metadata of <paramref name="object" />.</returns>
      <param name="manager">The serialization manager.</param>
      <param name="instance">The object to use metadata from.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Locates a serializer for the given object value.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object specifying the serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)">
      <summary>Locates a serializer for the given type.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> that is appropriate for <paramref name="valueType" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="valueType">The <see cref="T:System.Type" /> specifying the serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="valueType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)">
      <summary>Gets a <see cref="T:System.ComponentModel.TypeDescriptionProvider" /> that is aware of the target version of the .NET Framework, for use in type filtering.</summary>
      <returns>A .NET Framework-aware type description provider.</returns>
      <param name="provider">The type description provider service.</param>
      <param name="instance">An object from which the type description provider service can be derived, if <paramref name="provider" /> is null.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a unique name for the given object.</summary>
      <returns>A unique name for <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object for which the name will be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Returns a value indicating whether the given object has been serialized.</summary>
      <returns>true if <paramref name="value" /> has been serialized; otherwise, false.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Returns a value indicating whether the given object has been serialized, optionally considering preset expressions.</summary>
      <returns>true if <paramref name="value" /> has been serialized; otherwise, false.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to test for previous serialization.</param>
      <param name="honorPreset">true to include preset expressions; otherwise, false. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)">
      <summary>Returns an expression representing the creation of the given object.</summary>
      <returns>An expression representing the creation of <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="isComplete">true if <paramref name="value" /> was fully serialized; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)">
      <summary>Serializes the given event into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object to which <paramref name="descriptor" /> is bound.</param>
      <param name="descriptor">An <see cref="T:System.ComponentModel.EventDescriptor" /> specifying the event to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="descriptor" /> is null.</exception>
      <exception cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
        <see cref="T:System.ComponentModel.Design.IEventBindingService" /> is not available.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the specified events into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the event will be serialized.</param>
      <param name="value">The object on which events will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which events will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the given statement collection.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the properties will be serialized.</param>
      <param name="value">The object on which the properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])">
      <summary>Serializes the properties on the given object into the invariant culture’s resource bundle.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">Not used.</param>
      <param name="value">The object whose properties will be serialized.</param>
      <param name="filter">An <see cref="T:System.Attribute" /> array that filters which properties will be serialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="statements" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)">
      <summary>Serializes a property on the given object.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which the property will be serialized.</param>
      <param name="value">The object on which the property will be serialized.</param>
      <param name="propertyToSerialize">The property to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, <paramref name="statements" />, or <paramref name="propertyToSerialize" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)">
      <summary>Serializes the given object into a resource bundle using the given resource name.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="resourceName">The name of the resource bundle into which <paramref name="value" /> will be serialized.</param>
      <param name="value">The object to serialize.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> object if <paramref name="value" /> can be serialized; otherwise, null.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize. Can be null.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given object into an expression.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)">
      <summary>Serializes the given object into an expression appropriate for the invariant culture.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> containing <paramref name="value" /> as a serialized expression.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="ensureInvariant">true to serialize into the invariant culture; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)">
      <summary>Associates an object with an expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="value" />, or <paramref name="expression" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)">
      <summary>Associates an object with an expression, optionally specifying a preset expression.</summary>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use for serialization.</param>
      <param name="value">The object to serialize.</param>
      <param name="expression">The <see cref="T:System.CodeDom.CodeExpression" /> with which to associate <paramref name="value" />.</param>
      <param name="isPreset">true to specify a preset expression; otherwise, false.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException">
      <summary>The exception that is thrown when line number information is available for a serialization error.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified exception and line information.</summary>
      <param name="ex">The exception to throw. </param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Exception,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class. </summary>
      <param name="ex">The exception to throw. </param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified serialization data and context.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing. </param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.CodeDom.CodeLinePragma)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class using the specified message and line information.</summary>
      <param name="message">A message describing the exception. </param>
      <param name="linePragma">A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates where the exception occurred. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.#ctor(System.String,System.ComponentModel.Design.Serialization.IDesignerSerializationManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializerException" /> class. </summary>
      <param name="message">A message describing the exception. </param>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> object from which to extract the context.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Manager" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CodeDomSerializerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object with the parameter name and additional exception information.</summary>
      <param name="info">Stores the data that was being used to serialize or deserialize the object that the <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> was serializing or deserializing. </param>
      <param name="context">Describes the source and destination of the stream that generated the exception, as well as a means for serialization to retain that context and an additional caller-defined context. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.CodeDomSerializerException.LinePragma">
      <summary>Gets or sets the line information for the error associated with this exception.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeLinePragma" /> that indicates the line information for the error.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer">
      <summary>Serializes collections.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.MethodSupportsSerialization(System.Reflection.MethodInfo)">
      <summary>Verifies serialization support by the <paramref name="method" />.</summary>
      <returns>true if the <paramref name="method" /> supports serialization; otherwise, false.</returns>
      <param name="method">The <see cref="T:System.Reflection.MethodInfo" /> to check for serialization attributes.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="method" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)">
      <summary>Serializes the given collection into a CodeDOM object.</summary>
      <returns>A CodeDOM object representing <paramref name="value" />.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="value">The object to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.CollectionCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>Serializes the given collection.</summary>
      <returns>Serialized collection if the serialization process succeeded; otherwise, null.</returns>
      <param name="manager">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use during serialization.</param>
      <param name="targetExpression">The <see cref="T:System.CodeDom.CodeExpression" /> that refers to the collection</param>
      <param name="targetType">The <see cref="T:System.Type" /> of the collection.</param>
      <param name="originalCollection">The collection to serialize.</param>
      <param name="valuesToSerialize">The values to serialize.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="targetType" />, <paramref name="originalCollection" />, or <paramref name="valuesToSerialize" /> is null.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager">
      <summary>Provides an implementation of the <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> interface.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> class with the given service provider.</summary>
      <param name="provider">An <see cref="T:System.IServiceProvider" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="provider" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container">
      <summary>Gets or sets to the container for this serialization manager.</summary>
      <returns>The <see cref="T:System.ComponentModel.IContainer" /> to which the serialization manager will add components.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Creates an instance of a type.</summary>
      <returns>A new instance of the type specified by <paramref name="type" />.</returns>
      <param name="type">The type to create an instance of.</param>
      <param name="arguments">The parameters of the type’s constructor. This can be null or an empty collection to invoke the default constructor.</param>
      <param name="name">A name to give the object. If null, the object will not be given a name, unless the object is added to a container and the container gives the object a name.</param>
      <param name="addToContainer">true to add the object to the container if the object implements <see cref="T:System.ComponentModel.IComponent" />; otherwise, false.</param>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
        <paramref name="type" /> does not have a constructor that takes parameters contained in <paramref name="arguments" />.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession">
      <summary>Creates a new serialization session.</summary>
      <returns>An <see cref="T:System.IDisposable" /> that represents a new serialization session.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager is already within a session. This version of <see cref="T:System.ComponentModel.Design.Serialization.DesignerSerializationManager" /> does not support simultaneous sessions.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors">
      <summary>Gets the list of errors that occurred during serialization or deserialization.</summary>
      <returns>The list of errors that occurred during serialization or deserialization.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)">
      <summary>Gets the type corresponding to the specified type name.</summary>
      <returns>The specified type.</returns>
      <param name="typeName">The name of the type to get.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)">
      <summary>Gets the serializer for the given object type.</summary>
      <returns>The serializer for <paramref name="objectType" />, or null, if not found.</returns>
      <param name="objectType">The type of object for which to retrieve the serializer.</param>
      <param name="serializerType">The type of serializer to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="objectType" /> or <paramref name="serializerType" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)">
      <summary>Gets the requested service.</summary>
      <returns>The requested service, or null if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)">
      <summary>Gets the requested type.</summary>
      <returns>The requested type, or null if the type cannot be resolved.</returns>
      <param name="typeName">The name of the type to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" /> event. </summary>
      <param name="e">A <see cref="T:System.ComponentModel.Design.Serialization.ResolveNameEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed" /> event. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames">
      <summary>Gets or sets a value indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method should check for the presence of the given name in the container.</summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will pass the given component name; false if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will check for the presence of the given name in the container. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">This property was changed from within a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider">
      <summary>Gets the object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</summary>
      <returns>The object that should be used to provide properties to the serialization manager's <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances">
      <summary>Gets or sets a flag indicating whether <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will always create a new instance of a type. </summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will return the existing instance; false if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> will create a new instance of a type. The default is false.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated">
      <summary>Occurs when a session is created. </summary>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed">
      <summary>Occurs when a session is disposed.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Adds a custom serialization provider to the serialization manager.</summary>
      <param name="provider">The serialization provider to add.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context">
      <summary>Gets the context stack for this serialization session. </summary>
      <returns>A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that stores data.</returns>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)">
      <summary>Implements the <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method.</summary>
      <returns>The newly created object instance.</returns>
      <param name="type">The data type to create. </param>
      <param name="arguments">The arguments to pass to the constructor for this type. </param>
      <param name="name">The name of the object. This name can be used to access the object later through <see cref="M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)" />. If null is passed, the object is still created but cannot be accessed by name. </param>
      <param name="addToContainer">true to add this object to the design container. The object must implement <see cref="T:System.ComponentModel.IComponent" /> for this to have any effect. </param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)">
      <summary>Retrieves an instance of a created object of the specified name.</summary>
      <returns>An instance of the object with the given name, or null if no object by that name can be found.</returns>
      <param name="name">The name of the object to retrieve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)">
      <summary>Retrieves a name for the specified object.</summary>
      <returns>The name of the object, or null if the object is unnamed.</returns>
      <param name="value">The object for which to retrieve the name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)">
      <summary>Gets a serializer of the requested type for the specified object type.</summary>
      <returns>An instance of the requested serializer, or null if no appropriate serializer can be located.</returns>
      <param name="objectType">The type of the object to get the serializer for.</param>
      <param name="serializerType">The type of the serializer to retrieve.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)">
      <summary>Gets a type of the specified name.</summary>
      <returns>An instance of the type, or null if the type cannot be loaded.</returns>
      <param name="typeName">The fully qualified name of the type to load.</param>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties">
      <summary>Implements the <see cref="P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" /> property. </summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> containing the properties to be serialized.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)">
      <summary>Removes a previously added serialization provider.</summary>
      <param name="provider">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)">
      <summary>Used to report a recoverable error in serialization.</summary>
      <param name="errorInformation">An object containing the error information, usually of type <see cref="T:System.String" /> or <see cref="T:System.Exception" />.</param>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName">
      <summary>Occurs when <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table. </summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="E:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete">
      <summary>Occurs when serialization is complete.</summary>
      <exception cref="T:System.InvalidOperationException">The serialization manager does not have an active serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)">
      <summary>Sets the name for the specified object.</summary>
      <param name="instance">The object to set the name.</param>
      <param name="name">A <see cref="T:System.String" /> used as the name of the object.</param>
      <exception cref="T:System.ArgumentNullException">One or both of the parameters are null.</exception>
      <exception cref="T:System.ArgumentException">The object specified by instance already has a name, or <paramref name="name" /> is already used by another named object.</exception>
      <exception cref="T:System.InvalidOperationException">This property was accessed outside of a serialization session.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see the <see cref="M:System.IServiceProvider.GetService(System.Type)" /> method.</summary>
      <returns>A service object of type <paramref name="serviceType" />.-or-null if there is no service object of type <paramref name="serviceType" />.</returns>
      <param name="serviceType">An object that specifies the type of service object to get.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes">
      <summary>Gets or sets a flag indicating whether the <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> method will verify that matching names refer to the same type.</summary>
      <returns>true if <see cref="M:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" /> verifies types; otherwise, false if it does not. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The serialization manager has an active serialization session.</exception>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ExpressionContext">
      <summary>Provides a means of passing context state among serializers. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with the given expression and owner. </summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ExpressionContext.#ctor(System.CodeDom.CodeExpression,System.Type,System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.ExpressionContext" /> class with a current value.</summary>
      <param name="expression">The given code expression.</param>
      <param name="expressionType">The given code expression type.</param>
      <param name="owner">The given code expression owner.</param>
      <param name="presetValue">The given code expression preset value.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" />, <paramref name="expressionType" />, or <paramref name="owner" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Expression">
      <summary>Gets the expression this context represents.</summary>
      <returns>The expression this context represents.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.ExpressionType">
      <summary>Gets the <see cref="T:System.Type" /> of the expression.</summary>
      <returns>The <see cref="T:System.Type" /> of the expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.Owner">
      <summary>Gets the object owning this expression.</summary>
      <returns>The object owning this expression.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ExpressionContext.PresetValue">
      <summary>Gets the preset value of an expression.</summary>
      <returns>The preset value of this expression, or null if not assigned.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload">
      <summary>Provides an interface that can be used to optimize the reloading of a designer.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ICodeDomDesignerReload.ShouldReloadDesigner(System.CodeDom.CodeCompileUnit)">
      <summary>Indicates whether the designer should reload in order to import the specified compile unit correctly.</summary>
      <returns>true if the designer should reload; otherwise, false.</returns>
      <param name="newTree">A <see cref="T:System.CodeDom.CodeCompileUnit" /> containing the designer document code. </param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer">
      <summary>Provides the base class for serializing a reflection primitive within the object graph.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor,System.CodeDom.CodeStatementCollection)">
      <summary>Serializes the given member descriptor on the given value to a statement collection.</summary>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
      <param name="statements">The <see cref="T:System.CodeDom.CodeStatementCollection" /> into which <paramref name="descriptor" /> is serialized.</param>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer.ShouldSerialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.ComponentModel.MemberDescriptor)">
      <summary>Determines if the given member should be serialized.</summary>
      <returns>true, if the member described by <paramref name="descriptor" /> should be serialized; otherwise, false.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="value">The object to which the member is bound.</param>
      <param name="descriptor">The descriptor of the member to serialize.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection">
      <summary>Holds a table of statements that is offered by the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.ContainsKey(System.Object)">
      <summary>Determines whether the table contains the given statement owner.</summary>
      <returns>true if <paramref name="statementOwner" /> is in the table; otherwise, false.</returns>
      <param name="statementOwner">The owner of the statement collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" />.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Item(System.Object)">
      <summary>Gets the statement collection for the given owner.</summary>
      <returns>The statement collection for <paramref name="statementOwner" />, or null if <paramref name="statementOwner" /> is not in the table.</returns>
      <param name="statementOwner">The owner of the statement collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Collections.ICollection)">
      <summary>Populates the statement table with a collection of statement owners.</summary>
      <param name="statementOwners">A collection of statement owners to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="statementOwner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.Populate(System.Object)">
      <summary>Populates the statement table with a statement owner.</summary>
      <param name="owner">The statement owner to add to the table.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.ObjectStatementCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> method.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.RootContext">
      <summary>A <see cref="T:System.ComponentModel.Design.Serialization.CodeDomSerializer" /> adds a root context to provide a definition of the root object. This class cannot be inherited</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.RootContext.#ctor(System.CodeDom.CodeExpression,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.RootContext" /> class. </summary>
      <param name="expression">The expression representing the root object in the object graph.</param>
      <param name="value">The root object of the object graph.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expression" /> or <paramref name="value" /> is null.</exception>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Expression">
      <summary>Gets the expression representing the root object in the object graph.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeExpression" /> representing the root object in the object graph.</returns>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.RootContext.Value">
      <summary>Gets the root object of the object graph.</summary>
      <returns>The root object of the object graph.</returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext">
      <summary>Specifies that serializers should handle default values. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.#ctor(System.ComponentModel.MemberDescriptor)">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext" /> class with the option of binding to a specific member. </summary>
      <param name="member">The member to which this context is bound. Can be null.</param>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.Member">
      <summary>Gets the member to which this context is bound.</summary>
      <returns>The member to which this context is bound, or null if the context is bound to all members of an object.</returns>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.SerializeAbsoluteContext.ShouldSerialize(System.ComponentModel.MemberDescriptor)">
      <summary>Gets a value indicating whether the given member should be serialized in this context.</summary>
      <returns>true if the given member should be serialized in this context; otherwise, false.</returns>
      <param name="member">The member to be examined for serialization.</param>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.StatementContext">
      <summary>Provides a location into which statements can be serialized. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.StatementContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.StatementContext" /> class. </summary>
    </member>
    <member name="P:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection">
      <summary>Gets a collection of statements offered by the statement context.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.Serialization.ObjectStatementCollection" /> containing statements offered by the statement context. </returns>
    </member>
    <member name="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer">
      <summary>Serializes an object to a new type.</summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer" /> class. </summary>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Deserializes the given type declaration.</summary>
      <returns>A root <see cref="T:System.Object" />.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">Type declaration to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)">
      <summary>Returns the method where statements used to serialize a member are stored.</summary>
      <returns>The method used to emit all of the initialization code for the given member.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <param name="value">The value to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" />, <paramref name="typeDecl" />, or <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)">
      <summary>Returns an array of methods to be interpreted during deserialization.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeMemberMethod" /> array of methods to be interpreted during deserialization.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="declaration">The type declaration to use for serialization.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="typeDecl" /> is null.</exception>
    </member>
    <member name="M:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)">
      <summary>Serializes the object root by creating a new type declaration that defines root.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that defines the root object.</returns>
      <param name="manager">The serialization manager to use for serialization.</param>
      <param name="root">The object to serialize.</param>
      <param name="members">Optional collection of members. Can be null or empty.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="manager" /> or <paramref name="root" /> is null.</exception>
    </member>
    <member name="T:System.Data.Design.MethodSignatureGenerator">
      <summary>This class is used to generate a database query method signature, as it will be created by the typed dataset generator.</summary>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.#ctor">
      <summary>Initializes a new instance of the MethodSignatureGenerator class.</summary>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.CodeProvider">
      <summary>Gets or sets the <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object.</summary>
      <returns>The <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object, which provides code generation and code compilation interfaces for generating code and managing compilation for a single programming language. Code generators can be used to generate code in a particular language, and code compilers can be used to compile code into assemblies.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ContainerParameterType">
      <summary>Gets or sets the type of object that the query will fill.</summary>
      <returns>The type of object that the query will fill. The type will be either <see cref="T:System.Data.DataSet" /> or <see cref="T:System.Data.DataTable" />.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.DataSetClassName">
      <summary>Gets or sets the type name of the typed dataset to be filled.</summary>
      <returns>A string representing the type name of the typed dataset to be filled.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethod">
      <summary>Returns the code member method representing the database query, as generated by the typed dataset generator.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeMemberMethod" /> object representing the database query, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateMethodSignature">
      <summary>Returns a string representing the database query method signature, as generated by the typed dataset generator.</summary>
      <returns>A string representing the database query method signature, as generated by the typed dataset generator.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.GenerateUpdatingMethods">
      <summary>Returns a code type declaration containing the Insert, Update, and Delete methods associated with the database query.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> object containing the Insert, Update, and Delete methods associated with the database query.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.IsGetMethod">
      <summary>Gets or sets a Boolean value specifying whether the signature generated needs to return a <see cref="T:System.Data.DataTable" /> object.</summary>
      <returns>A Boolean value specifying whether the signature generated needs to return a <see cref="T:System.Data.DataTable" /> object: True if the signature generated needs to return a data table, otherwise False.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.PagingMethod">
      <summary>Gets or sets a Boolean value specifying whether the method supports paging.</summary>
      <returns>A Boolean value specifying whether the method supports paging: True if the method supports paging; False if it does not.</returns>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.ParameterOption">
      <summary>Gets or sets the category of types to use for parameters.</summary>
      <returns>A ParameterGenerationOption value specifying the category of types to use for parameters: <see cref="F:System.Data.Design.ParameterGenerationOption.ClrTypes" /> (the default), <see cref="F:System.Data.Design.ParameterGenerationOption.SqlTypes" />, or <see cref="F:System.Data.Design.ParameterGenerationOption.Objects" />.</returns>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetDesignTableContent(System.String)">
      <summary>Sets the schema of the design table for which the database query method will be generated.</summary>
      <param name="designTableContent">A string representation of the table schema.</param>
    </member>
    <member name="M:System.Data.Design.MethodSignatureGenerator.SetMethodSourceContent(System.String)">
      <summary>Sets the database query for which the method signature will be generated.</summary>
      <param name="methodSourceContent">A string representation of the database query.</param>
    </member>
    <member name="P:System.Data.Design.MethodSignatureGenerator.TableClassName">
      <summary>Gets or sets the type name of the typed table to fill.</summary>
      <returns>A string indicating the type name of the typed table to fill.</returns>
    </member>
    <member name="T:System.Data.Design.ParameterGenerationOption">
      <summary>Sets the type of parameters that are generated in a typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.ClrTypes">
      <summary>Parameters in the typed dataset are CLR types.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.SqlTypes">
      <summary>Parameters in the typed dataset are Sql types.</summary>
    </member>
    <member name="F:System.Data.Design.ParameterGenerationOption.Objects">
      <summary>Parameters in the typed dataset are all of <see cref="T:System.Object" />.</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.Data.DataSet,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on an existing <see cref="T:System.Data.DataSet" />. </summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="dataSet">The source <see cref="T:System.Data.DataSet" /> that specifies the metadata for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeNamespace">The namespace that provides the target namespace for the typed <see cref="T:System.Data.DataSet" />.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Collections.Hashtable,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="customDBProviders">A HashTable that maps connections to specific providers in the typed dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Common.DbProviderFactory)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="specifiedFactory">The <see cref="T:System.Data.Common.DbProviderFactory" /> to use to override the provider contained in the <paramref name="inputFileContent" />.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.Generate(System.String,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.CodeDom.Compiler.CodeDomProvider,System.Data.Design.TypedDataSetGenerator.GenerateOption,System.String,System.String)">
      <summary>Generates a strongly typed <see cref="T:System.Data.DataSet" /> based on the provided input file.</summary>
      <returns>A strongly typed <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="codeProvider">The language-specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
      <param name="option">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> that determines what (if any) additional components and methods to create when generating a typed dataset.</param>
      <param name="dataSetNamespace">A string that contains the namespace of the generated dataset.</param>
      <param name="basePath">A string that represents the path to the schema based on the relative path of the dataset input file.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String)">
      <summary>Returns the first provider name found in the provided input file.</summary>
      <returns>A string that represents the specific provider for this <see cref="T:System.Data.DataSet" />.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGenerator.GetProviderName(System.String,System.String)">
      <summary>Returns the provider name for the <paramref name="tableName" /> in the input file.</summary>
      <returns>A string that represents the provider name for the specific table passed in to the <paramref name="tableName" /> parameter.</returns>
      <param name="inputFileContent">A string that represents the XML schema to base the <see cref="T:System.Data.DataSet" /> on.</param>
      <param name="tableName">A string that represents the name of the table to return the provider name from.</param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGenerator.ReferencedAssemblies">
      <summary>Gets or sets the collection of assemblies referenced in a typed dataset.</summary>
      <returns>A collection containing all referenced assemblies in the dataset.</returns>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGenerator.GenerateOption">
      <summary>Provides the <see cref="T:System.Data.Design.TypedDataSetGenerator" />with information for creating typed datasets that support LINQ to DataSet and hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.None">
      <summary>Generates typed datasets that are compatible with typed datasets generated in versions of Visual Studio earlier than Visual Studio 2008.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.HierarchicalUpdate">
      <summary>Generates typed datasets that have a TableAdapterManager and associated methods for enabling hierarchical update.</summary>
    </member>
    <member name="F:System.Data.Design.TypedDataSetGenerator.GenerateOption.LinqOverTypedDatasets">
      <summary>Generates typed datasets that have data tables that inherit from <see cref="T:System.Data.TypedTableBase`1" /> in order to enable the ability to perform LINQ queries on data tables.</summary>
    </member>
    <member name="T:System.Data.Design.TypedDataSetGeneratorException">
      <summary>The exception that is thrown when a name conflict occurs while a strongly typed <see cref="T:System.Data.DataSet" /> is being generated.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Collections.IList)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class by passing in a collection of errors.</summary>
      <param name="list">An <see cref="T:System.Collections.IList" /> of errors.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class, using the specified serialization information and streaming context.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> class with the specified string and inner exception.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture. </param>
      <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not null, the current exception is raised in a catch block that handles the inner exception. </param>
    </member>
    <member name="P:System.Data.Design.TypedDataSetGeneratorException.ErrorList">
      <summary>Gets a dynamic list of generated errors.</summary>
      <returns>The error list.</returns>
    </member>
    <member name="M:System.Data.Design.TypedDataSetGeneratorException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implements the ISerializable interface and returns the data that you must have to serialize the <see cref="T:System.Data.Design.TypedDataSetGeneratorException" /> object.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> structure.</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtension">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.#ctor(System.Data.Design.TypedDataSetGenerator.GenerateOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> class</summary>
      <param name="dataSetGenerateOptions">The <see cref="T:System.Data.Design.TypedDataSetGenerator.GenerateOption" /> value for generating typed datasets that enable LINQ to DataSet and Hierarchical Update.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.String,System.String,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <returns>Returns a <see cref="T:System.String" /> representing the name of the typed dataset class.</returns>
      <param name="name">A <see cref="T:System.String" /> representing the name of the schema to import.</param>
      <param name="namespaceName">A <see cref="T:System.String" /> representing the namespace of the XML schema.</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the XML schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">The <see cref="T:System.CodeDom.CodeNamespace" /> that contains the generated dataset.</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtension.ImportSchemaType(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaObject,System.Xml.Serialization.XmlSchemas,System.Xml.Serialization.XmlSchemaImporter,System.CodeDom.CodeCompileUnit,System.CodeDom.CodeNamespace,System.Xml.Serialization.CodeGenerationOptions,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates internal type mapping information for an element defined in an XML schema document.</summary>
      <returns>Returns a <see cref="T:System.String" /> representing the name of the typed dataset class.</returns>
      <param name="type">XMLSchemaType</param>
      <param name="context">An <see cref="T:System.Xml.Schema.XmlSchemaObject" /> that represents the root class for the Xml schema object model hierarchy and serves as a base class for classes such as the XmlSchema class.</param>
      <param name="schemas">An <see cref="T:System.Xml.Schema.XmlSchema" /> class that represents a collection of XML schemas.</param>
      <param name="importer">The base <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> that generates internal mappings to .NET Framework types for XML schema element declarations, including literal XSD message parts in a WSDL document.</param>
      <param name="compileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> to contain the generated code.</param>
      <param name="mainNamespace">CodeNamespace</param>
      <param name="options">The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> that specifies various options to use when generating .NET Framework types for use with an XML Web service.</param>
      <param name="codeProvider">The language specific <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> to use to generate the dataset.</param>
    </member>
    <member name="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35">
      <summary>Generates internal mappings to .NET Framework types for XML schema element declarations. Expands upon <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtension" /> to provide additional functionality for typed datasets created for .NET Framework version 3.5.</summary>
    </member>
    <member name="M:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Data.Design.TypedDataSetSchemaImporterExtensionFx35" /> class.</summary>
    </member>
    <member name="T:System.Diagnostics.Design.LogConverter">
      <summary>Provides the type converter for the <see cref="P:System.Diagnostics.EventLog.Log" /> property.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.LogConverter" /> class for the given type.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether this converter can convert an object of the given type to the type of this converter, using the specified context. </summary>
      <returns>true if the conversion can be performed; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" />  that represents the type you want to convert from.</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to a string, using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" />  to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" />  to convert</param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a collection of standard values for the data type this validator is designed for.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a standard set of valid values, or null if the data type does not support a standard set of values.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
    </member>
    <member name="M:System.Diagnostics.Design.LogConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this object supports a standard set of values that can be picked from a list using the specified context.</summary>
      <returns>true because <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports. This method never returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessModuleDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process module.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessModuleDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessModuleDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the process module exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Diagnostics.Design.ProcessThreadDesigner">
      <summary>Base designer class for extending the design-mode behavior of a process thread.</summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Design.ProcessThreadDesigner" /> class. </summary>
    </member>
    <member name="M:System.Diagnostics.Design.ProcessThreadDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</param>
    </member>
    <member name="T:System.Messaging.Design.MessageDesigner">
      <summary>Provides basic design-time functionality for the <see cref="T:System.Messaging.Message" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Messaging.Design.MessageDesigner" /> class.</summary>
    </member>
    <member name="M:System.Messaging.Design.MessageDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Modifies the set of properties that the designer exposes through the <see cref="T:System.ComponentModel.TypeDescriptor" /> class.</summary>
      <param name="properties">A <see cref="T:System.Collections.IDictionary" /> that contains the set of properties to filter for the component.</param>
    </member>
    <member name="T:System.Resources.Tools.StronglyTypedResourceBuilder">
      <summary>Provides support for strongly-typed resources. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources referenced in the specified collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources referenced in the specified collection.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resourceList">An <see cref="T:System.Collections.IDictionary" /> collection where each dictionary entry key/value pair is the name of a resource and the value of the resource.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated. </param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="resourceList" />, <paramref name="basename" />, or <paramref name="codeProvider" /> is null.</exception>
      <exception cref="T:System.ArgumentException">A resource node name does not match its key in <paramref name="resourceList" />.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources in the specified .resx file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename" /> or <paramref name="codeProvider" /> is null.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
      <summary>Generates a class file that contains strongly-typed properties that match the resources in the specified .resx file.</summary>
      <returns>A <see cref="T:System.CodeDom.CodeCompileUnit" /> container.</returns>
      <param name="resxFile">The name of a .resx file used as input.</param>
      <param name="baseName">The name of the class to be generated.</param>
      <param name="generatedCodeNamespace">The namespace of the class to be generated.</param>
      <param name="resourcesNamespace">The namespace of the resource to be generated. </param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />  class that provides the language in which the class will be generated.</param>
      <param name="internalClass">true to generate an internal class; false to generate a public class.</param>
      <param name="unmatchable">A <see cref="T:System.String" /> array that contains each resource name for which a property cannot be generated. Typically, a property cannot be generated because the resource name is not a valid identifier.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="basename " />or <paramref name="codeProvider" /> is null.</exception>
    </member>
    <member name="M:System.Resources.Tools.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
      <summary>Generates a valid resource string based on the specified input string and code provider.</summary>
      <returns>A valid resource name derived from the <paramref name="key" /> parameter. Any invalid tokens are replaced with the underscore (_) character, or null if the derived string still contains invalid characters according to the language specified by the <paramref name="provider" /> parameter.</returns>
      <param name="key">The string to verify and, if necessary, convert to a valid resource name.</param>
      <param name="provider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> object that specifies the target language to use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> or <paramref name="provider" /> is null.</exception>
    </member>
    <member name="T:System.ServiceProcess.Design.ServiceControllerDesigner">
      <summary>Provides design-time services for the <see cref="T:System.ServiceProcess.ServiceController" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceProcess.Design.ServiceControllerDesigner" /> class.</summary>
    </member>
    <member name="M:System.ServiceProcess.Design.ServiceControllerDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adjusts the set of properties the <see cref="T:System.ServiceProcess.ServiceController" /> exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the <see cref="T:System.ServiceProcess.ServiceController" /> class. </param>
    </member>
    <member name="T:System.Web.UI.Design.AppSettingsExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing an application setting expression in a configuration file at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an application setting expression string and provides the design-time value for a control property.</summary>
      <returns>The object referenced by <paramref name="expression" />, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">An application setting expression string to evaluate. <paramref name="expression" /> does not include the AppSettings expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />.</param>
      <param name="propertyType">The control property type.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.AppSettingsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for an application setting expression.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> implementation that defines the application setting expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. <paramref name="expression" /> does not include the AppSettings expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.CalendarDataBindingHandler">
      <summary>Provides a data-binding handler for a calendar.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.CalendarDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.CalendarDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Sets the calendar's date to the current day if the <see cref="P:System.Web.UI.WebControls.Calendar.SelectedDate" /> property is data-bound.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to which data binding will be added. </param>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItem">
      <summary>Represents a client script element in a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItem.#ctor(System.String,System.String,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItem" /> class using the provided parameters.</summary>
      <param name="text">The contents for the script element; a string of script statements to run on the client.</param>
      <param name="source">The src attribute value for the script element, specifying an external source location for the client script contents.</param>
      <param name="language">The language attribute value for the script element, specifying the language of the script statements.</param>
      <param name="type">The type attribute value for the script element, indicating the MIME type for the associated scripting engine.</param>
      <param name="id">The ID for the script element. This argument is required by the design host (for example, Visual Studio 2005).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="id" /> is null (thrown by the design host).</exception>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Id">
      <summary>Gets the ID attribute value for the client script element.</summary>
      <returns>The ID value of the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Language">
      <summary>Gets the language attribute value for the client script element.</summary>
      <returns>The language name specified for the language attribute in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Source">
      <summary>Gets the src attribute value for the client script element.</summary>
      <returns>The path to the source file specified for the src attribute in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Text">
      <summary>Gets the script statements contained in the client script element.</summary>
      <returns>The script statements contained in the script element.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ClientScriptItem.Type">
      <summary>Gets the type attribute value for the client script element.</summary>
      <returns>The name of the MIME type associated with the script element.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ClientScriptItemCollection">
      <summary>Represents a read-only collection of client script blocks that are contained within a Web Form or user control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ClientScriptItemCollection.#ctor(System.Web.UI.Design.ClientScriptItem[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" /> class. </summary>
      <param name="clientScriptItems">An array of <see cref="T:System.Web.UI.Design.ClientScriptItem" /> elements used to initialize the collection.</param>
    </member>
    <member name="T:System.Web.UI.Design.ColorBuilder">
      <summary>Provides an HTML color string builder at design time that allows a user to select a color.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ColorBuilder.BuildColor(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String)">
      <summary>Starts a color editor to build an HTML color property value.</summary>
      <returns>The color value, represented as a string in an HTML color format, or null if the builder service could not be retrieved.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Web.UI.Control" /> used to parent the picker window. </param>
      <param name="initialColor">The initial color to be shown in the picker window, in a valid HTML color format. </param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringEditor">
      <summary>Provides a base class for a user interface to select and edit a connection string property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object by using the specified service provider and context.</summary>
      <returns>The selected connection expression, as a string object; otherwise, if a connection expression was not selected, the same <paramref name="value" /> that was passed in.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
      <param name="provider">A service provider object through which to obtain editing services.</param>
      <param name="value">An instance of the object being edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns the editing style that is associated with the connection string editor for the specified context.</summary>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value that indicates the editing style for the provided user interface.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> to use to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the provider name for the provided instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <returns>Always an empty string ("").</returns>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Puts the provider name on the specified instance of the <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> class.</summary>
      <param name="instance">A <see cref="T:System.Web.UI.Design.ConnectionStringEditor" /> or an instance of a derived class.</param>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.ConnectionStringsExpressionEditor">
      <summary>Provides properties and methods for selecting a data connection expression that is associated with a control property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ConnectionStringsExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a connection string expression and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A connection string expression to evaluate. The expression does not include the ConnectionStrings expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ConnectionStringsExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a connection string expression.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> instance that defines the connection string expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet. The expression does not include the ConnectionStrings expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.ContainerControlDesigner">
      <summary>Provides designer functionality for controls that contain child controls or properties that can be modified at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds the style attributes for the control at design time.</summary>
      <param name="styleAttributes">A keyed collection of style attributes.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.AllowResize">
      <summary>Gets a value indicating if the control can be resized at design time.</summary>
      <returns>true, if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameCaption">
      <summary>Gets the caption that is displayed for a control at design time.</summary>
      <returns>The string used for the control frame caption at design time, if the control has a design-time caption; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContainerControlDesigner.FrameStyle">
      <summary>Gets the style that is applied to the control frame at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> for the control frame at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeCssAttributes">
      <summary>Returns the collection of style attributes for the control at design time.</summary>
      <returns>A collection of style attributes applied to the control on the design surface. The style attribute names are keys used to access the style attribute values in the <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Returns the HTML markup that is used to represent the control at design time.</summary>
      <returns>An HTML markup string that represents the control.</returns>
      <param name="regions">A collection of designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for the editable region of the control at design time.</summary>
      <returns>The persisted content of the region contained within the <see cref="T:System.Web.UI.Design.ContainerControlDesigner" />.</returns>
      <param name="region">An editable design region contained within the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.GetPersistenceContent">
      <summary>Returns the persistable content of the control at design time.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ContainerControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content for the editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">Content to assign for the editable design region.</param>
    </member>
    <member name="T:System.Web.UI.Design.ContentDefinition">
      <summary>Provides a property structure that defines Web content at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ContentDefinition.#ctor(System.String,System.String,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.ContentDefinition" /> class.</summary>
      <param name="id">A string identifier for the content.</param>
      <param name="content">The default HTML markup content.</param>
      <param name="designTimeHtml">The design-time HTML markup content.</param>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.ContentPlaceHolderID">
      <summary>Gets the ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> control that is associated with the current content.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> associated with the current content.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultContent">
      <summary>Gets the default HTML markup for the content.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ContentDefinition.DefaultDesignTimeHtml">
      <summary>Gets the HTML markup to represent the content at design time.</summary>
      <returns>A string containing HTML markup.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ContentDesignerState">
      <summary>Enumerates the possible settings for the state of a <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowDefaultContent">
      <summary>The associated control displays the default content.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ContentDesignerState.ShowUserContent">
      <summary>The associated control displays the user content.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesigner">
      <summary>Provides a base control designer class for extending the design-mode behavior of a Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized in the design-time environment.</summary>
      <returns>true, if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)">
      <summary>Creates HTML markup to display a specified error message at design time.</summary>
      <returns>An HTML markup string that contains the specified error message.</returns>
      <param name="errorMessage">The error message to include in the generated HTML markup.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)">
      <summary>Creates the HTML markup to display a specified exception error message at design time.</summary>
      <returns>HTML markup that contains the specified <paramref name="errorMessage" /> and <paramref name="e" />.</returns>
      <param name="errorMessage">The error message to include in the generated HTML string.</param>
      <param name="e">The exception to include in the generated HTML string.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control.</summary>
      <returns>A string that contains design-time HTML markup providing basic information about the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)">
      <summary>Provides a simple rectangular placeholder representation that displays the type and ID of the control, and also additional specified instructions or information.</summary>
      <returns>A string that contains design-time HTML markup providing information about the control.</returns>
      <param name="instruction">A string that contains text and markup to add to the HTML output. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether data binding is supported by the containing region for the associated control.</summary>
      <returns>true, if the container for the control supports data binding; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignerState">
      <summary>Gets an object that is used to persist data for the associated control at design time.</summary>
      <returns>A <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" /> property that implements <see cref="T:System.Collections.IDictionary" /> and uses the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> to persist state data for the associated control at design time. </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView">
      <summary>Gets the view-control object for the control designer.</summary>
      <returns>null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete">
      <summary>Gets a value indicating whether the design host must finish loading before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called.</summary>
      <returns>true, if loading must be complete before the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetBounds">
      <summary>Retrieves the coordinates of the rectangle representing the boundaries for the control as displayed on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> object representing the boundaries for the control on the design surface relative to the control, not the document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">A collection of control designer regions for the associated control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)">
      <summary>Returns an appropriate resource provider factory, depending on the globalization settings in the configuration file for the site.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object, if any are defined in the configuration file; otherwise, null.</returns>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object that can retrieve global and local services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object to get content for.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception. </summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent">
      <summary>Retrieves the persistable inner HTML markup of the control at design time.</summary>
      <returns>A string representing the persistable inner HTML markup for the associated control. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml">
      <summary>Retrieves the persistable inner HTML markup of the control.</summary>
      <returns>The persistable inner HTML markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the specified control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="control">A <see cref="T:System.Web.UI.Control" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)">
      <summary>Retrieves an object that contains the design-time markup for the content and regions of the associated control for the specified control designer.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="designer">A control designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode">
      <summary>Gets a value indicating whether the properties of the associated control are hidden when the control is in template mode.</summary>
      <returns>true, if the properties of the associated control are hidden when the control is in template mode; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ID">
      <summary>Gets or sets the ID string for the control.</summary>
      <returns>The ID string for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the control designer and loads the specified component.</summary>
      <param name="component">The control being designed. </param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the control is in either template viewing or editing mode in the design host. The <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> property is read-only.</summary>
      <returns>true, if the control is in either template viewing or editing mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate">
      <summary>Invalidates the whole area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)">
      <summary>Invalidates the specified area of the control that is displayed on the design surface and signals the control designer to redraw the control.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> object that represents the area to invalidate, relative to the upper-left corner of the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically, either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)">
      <summary>Wraps a series of changes into a transaction, using the specified parameters that can be rolled back as a unit with the undo functionality of the design host.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> object representing the design host that provides control designer services for the associated control.</param>
      <param name="component">The control associated with the control designer.</param>
      <param name="callback">A <see cref="T:System.Web.UI.Design.TransactedChangeCallback" /> object representing a function to call in the control designer as part of the transaction.</param>
      <param name="context">An object that contains the argument for callback.</param>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the transaction.</param>
      <param name="member">A <see cref="T:System.ComponentModel.MemberDescriptor" /> object (typically either an <see cref="T:System.ComponentModel.EventDescriptor" /> or a <see cref="T:System.ComponentModel.PropertyDescriptor" /> object) that describes the member of the associated control that is being invoked as part of the transaction.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="component" /> is null.-or-<paramref name="callback" /> is null.-or-<paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.IsDirty">
      <summary>Gets or sets a value indicating whether the Web server control has been marked as changed.</summary>
      <returns>true, if the Web server control has changed since it was last persisted or loaded; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)">
      <summary>Retrieves a value indicating whether the specified property on the associated control is data-bound.</summary>
      <returns>true, if the property is data-bound; otherwise, false.</returns>
      <param name="propName">The property to test for data binding. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)">
      <summary>Uses the provided resource writer to persist the localizable properties of the associated control to a resource in the design host.</summary>
      <param name="resourceWriter">An object derived from the <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" /> object that is used to write resources into the design-time response stream.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when a predefined, automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Called when the data-binding collection changes.</summary>
      <param name="propName">The property to test for changes in its bindings collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> object that specifies the location and, possibly, the control designer region that the user clicked.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> event for the associated control. </summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnControlResize">
      <summary>Called when the associated Web server control has been resized in the design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Called when the control designer draws the associated control on the design surface, if the <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> value is true.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> object that specifies the graphics and rectangle boundaries used to draw the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host at design time or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent">
      <summary>Raises the <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" /> event.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ReadOnly">
      <summary>Gets or sets a value indicating whether the properties of the control are read-only at design time.</summary>
      <returns>true, if the properties of the control are read-only at design time; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)">
      <summary>Registers internal data in a cloned control.</summary>
      <param name="original">The control associated with the control designer.</param>
      <param name="clone">The cloned copy of the associated control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="original" /> is null.-or-<paramref name="clone" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.RootDesigner">
      <summary>Gets the control designer for the Web Forms page that contains the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object that can be used at design time to access components on the Web Forms page that contains the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time. </summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region in the design-time view of the control.</summary>
      <param name="region">An editable design region contained within the design-time view of the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>Assigns the specified bitwise <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration to the specified flag value.</summary>
      <param name="viewFlags">A <see cref="T:System.Web.UI.Design.ViewFlags" /> value.</param>
      <param name="setFlag">true to set the flag, false to remove the flag.</param>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Tag">
      <summary>Gets an object representing the HTML markup element for the associated control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> object that represents the HTML markup element for the associated control. </returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the design-time HTML markup for the associated Web server control by calling the <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" /> method.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true, if the control designer uses a temporary copy of the control for design-time preview; otherwise, false, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControl">
      <summary>Gets or sets a Web server control that can be used for previewing the design-time HTML markup.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> object used by the base class to generate design-time HTML markup.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated">
      <summary>Gets or sets a value indicating whether a View control has been created for display on the design surface.</summary>
      <returns>true, if a control has been created for viewing on the design surface; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesigner.Visible">
      <summary>Gets a value that indicates whether the control is visible at design time.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ControlDesignerState">
      <summary>Provides access to the state of the control designer in the design host through the <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> interface. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Web.UI.Design.ControlDesignerState.Item(System.String)">
      <summary>Represents one element, identified by the given key, in the state collection for a control designer.</summary>
      <returns>The object identified by <paramref name="key" />.</returns>
      <param name="key">The name of the item to set or retrieve from the state collection.</param>
    </member>
    <member name="T:System.Web.UI.Design.ControlLocation">
      <summary>Specifies the possible locations for adding a control in a container.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Before">
      <summary>Adds the control before the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.After">
      <summary>Adds the control after the current selection or current control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.First">
      <summary>Adds the control at the start of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.Last">
      <summary>Adds the control at the end of the document.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.FirstChild">
      <summary>Adds the control as the first child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ControlLocation.LastChild">
      <summary>Adds the control as the last child of the selected control, if the selected control is a container control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ControlParser">
      <summary>Provides methods for creating a Web server <see cref="T:System.Web.UI.Control" /> control or <see cref="T:System.Web.UI.ITemplate" /> interface from a string of markup that represents a persisted control or template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that controlText represents; otherwise, null, if the parser cannot build the control.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="controlText">The HTML markup for the control. </param>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid. </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControl(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Creates a control from the specified markup using the specified designer host and directives.</summary>
      <returns>The <see cref="T:System.Web.UI.Control" /> that <paramref name="controlText" /> represents.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">The text of the HTML markup for the control.</param>
      <param name="directives">The page directives to include in the code for the control.</param>
      <exception cref="T:System.ArgumentNullException">A parameter is not valid. </exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseControls(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an array of controls from the specified markup using the specified designer host.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Control" /> elements, parsed from <paramref name="controlText" />; otherwise, null, if the parser cannot build the controls.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page.</param>
      <param name="controlText">A string that represents a collection of markup for controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.- or -<paramref name="controlText" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String)">
      <summary>Creates an <see cref="T:System.Web.UI.ITemplate" /> interface from the specified template markup.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="templateText">A string containing the template markup. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ControlParser.ParseTemplate(System.ComponentModel.Design.IDesignerHost,System.String,System.String)">
      <summary>Parses the specified template markup and creates an <see cref="T:System.Web.UI.ITemplate" /> interface.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance created by parsing <paramref name="templateText" />.</returns>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> instance that is the designer host for the page. </param>
      <param name="templateText">A string containing the template markup. </param>
      <param name="directives">Any directives to add to the beginning of the code for the template. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designerHost" /> is null.</exception>
    </member>
    <member name="T:System.Web.UI.Design.ControlPersister">
      <summary>Provides methods for persisting Web server controls at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.IO.TextWriter,System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that represents the persisted form of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to output the persisted control data to. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control)">
      <summary>Gets a string of data that represents the persisted form of the specified control.</summary>
      <returns>A string that represents the persisted form of the control.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistControl(System.Web.UI.Control,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified control, using the specified designer host.</summary>
      <returns>A string that represents the persisted form of the control.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.IO.TextWriter,System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Outputs a string of data that can persist the inner properties of the specified control to the specified <see cref="T:System.IO.TextWriter" />, using the specified designer host.</summary>
      <param name="sw">The <see cref="T:System.IO.TextWriter" /> to use. </param>
      <param name="component">The component to persist. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistInnerProperties(System.Object,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that can persist the inner properties of the specified control.</summary>
      <returns>A string that contains the information to persist about the inner properties of the control.</returns>
      <param name="component">The component to persist the inner properties of. </param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.IO.TextWriter,System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Writes a string of data that represents the persisted form of the specified template to the specified <see cref="T:System.IO.TextWriter" /> object.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> to write the persisted template data to.</param>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.ControlPersister.PersistTemplate(System.Web.UI.ITemplate,System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets a string of data that represents the persisted form of the specified template.</summary>
      <returns>A string that represents the persisted form of the template.</returns>
      <param name="template">The template to persist.</param>
      <param name="host">An <see cref="T:System.ComponentModel.Design.IDesignerHost" /> that is the designer host for the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionConverter">
      <summary>Provides a type converter for <see cref="T:System.Web.UI.DataBindingCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts a data binding collection to the specified type.</summary>
      <returns>The object produced by the type conversion. If the <paramref name="destinationType" /> parameter is of type <see cref="T:System.String" />, this method returns an empty string ("").</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the component or control to which the data binding collection belongs. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to provide additional culture information. </param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert to. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingCollectionEditor">
      <summary>Provides a user interface for editing a collection of data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingCollectionEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified data-binding collection using the specified service provider and context.</summary>
      <returns>The new collection.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control the collection belongs to. </param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> to use. </param>
      <param name="value">The collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.DataBindingCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> object that specifies the editor style of the component or control.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that identifies the component or control to retrieve the edit style for. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingHandler">
      <summary>Provides a base class for a data-binding handler.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingHandler" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Binds the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataBindingValueUIHandler">
      <summary>Provides a UI handler for data binding values.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataBindingValueUIHandler" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataBindingValueUIHandler.OnGetUIValueItem(System.ComponentModel.ITypeDescriptorContext,System.ComponentModel.PropertyDescriptor,System.Collections.ArrayList)">
      <summary>Adds a data binding for the specified property and the specified value item list, if the current control has data bindings and the current object does not already have a binding.</summary>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can provide additional context information. </param>
      <param name="propDesc">A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the property to add a data binding for. </param>
      <param name="valueUIItemList">An <see cref="T:System.Collections.ArrayList" /> of items that have data bindings. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataColumnSelectionConverter">
      <summary>Provides a type converter for a property representing the field name of a bound column field in a <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataColumnSelectionConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> instance containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <returns>true if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataColumnSelectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property, within the specified context.</summary>
      <returns>true if this converter returns a standard set of available values for assignment to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataFieldConverter">
      <summary>Provides a type converter that can retrieve a list of data fields from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data fields present within the selected data source if information about them is available.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataFieldConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> can be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataMemberConverter">
      <summary>Provides a type converter that can retrieve a list of data members from the current component's selected data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataFieldConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you wish to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion cannot be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the data members present within the selected data source, if information about them is available.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the data members of the data source selected for the component. </returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values that are valid; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that provides a format context. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataMemberConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false. This implementation always returns true.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.DataSetFieldSchema">
      <summary>Represents the structure, or schema, of a data field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetFieldSchema.#ctor(System.Data.DataColumn)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> class using a specified <see cref="T:System.Data.DataColumn" />.</summary>
      <param name="column">A <see cref="T:System.Data.DataColumn" /> object that the <see cref="T:System.Web.UI.Design.DataSetFieldSchema" /> object  describes.</param>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.DataType">
      <summary>Gets the type of data stored in the data field.</summary>
      <returns>A <see cref="T:System.Type" /> object that represents the type of data the data field contains.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the data field automatically increments for each new row added to the table or view.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Design.DataSetFieldSchema.DataType" /> is numeric and the value of the column increments automatically as new rows are added to the <see cref="T:System.Data.DataTable" />; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Data.DataColumn" /> is read-only.</summary>
      <returns>true if the data field is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the data field are required to be unique.</summary>
      <returns>true if data in the data field is unique; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Length">
      <summary>Gets a value indicating the size of data that can be stored in the data field.</summary>
      <returns>The number of bytes the column can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Name">
      <summary>Gets the name of the data field.</summary>
      <returns>The name of the data field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Nullable">
      <summary>Gets a value indicating whether the data field can accept null values.</summary>
      <returns>true if the data field can accept null values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the data field.</summary>
      <returns>This property always returns -1.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the data field is in the primary key for the containing table or view.</summary>
      <returns>true if the data field is in the primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the data field are resolved.</summary>
      <returns>This property always returns -1.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetSchema">
      <summary>The <see cref="T:System.Web.UI.Design.DataSetSchema" /> class represents the structure, or schema, of a data source. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.#ctor(System.Data.DataSet)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetSchema" /> class using a specified <see cref="T:System.Data.DataSet" />.</summary>
      <param name="dataSet">The <see cref="T:System.Data.DataSet" /> that the <see cref="T:System.Web.UI.Design.DataSetSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetSchema.GetViews">
      <summary>Gets an array containing information about each view in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSetViewSchema">
      <summary>Represents the structure, or schema, of a <see cref="T:System.Data.DataTable" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.#ctor(System.Data.DataTable)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> class using a specified <see cref="T:System.Data.DataTable" />.</summary>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Web.UI.Design.DataSetViewSchema" /> instance will describe.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSetViewSchema.GetFields">
      <summary>Gets an array containing information about each data field in the view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSetViewSchema.Name">
      <summary>Gets the name of the view using its <see cref="P:System.Data.DataTable.TableName" /> property.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter">
      <summary>Provides a type converter for a property representing a Boolean field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceBooleanViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available Boolean values that can be assigned to the associated field.</summary>
      <returns>A collection of Boolean values.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of data sources accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether the converter can convert an object of the specified source type to the native type of the converter.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the specified object after conversion.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> that can be used to support localization features. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the standard data sources accessible to the control.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> listing the standard accessible data sources.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> indicating the component or control to get values for. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the collection of standard values returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is a list of all possible values.</summary>
      <returns>true if the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> returned from <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> is an exclusive list of all possible values; false if other values are possible.As implemented in this class, this method always returns false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the converter supports a standard set of values that can be picked from a list.</summary>
      <returns>true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false. This implementation always returns true.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <returns>true if <paramref name="component" /> implements <see cref="T:System.Collections.IEnumerable" /> or <see cref="T:System.ComponentModel.IListSource" />; otherwise, false.</returns>
      <param name="component">The component to check as a valid data source.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceDesigner">
      <summary>Provides design-time support in a design host for the <see cref="T:System.Web.UI.DataSourceControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.ActionLists">
      <summary>Gets a list of items that are used to create an action list menu at design time.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object containing the action list items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if <see cref="M:System.Web.UI.Design.DataSourceDesigner.Configure" /> can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup for displaying the associated data source control at design time.</summary>
      <returns>The markup for the design-time display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="viewName">The name of the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.GetViewNames">
      <summary>Returns an array of the view names that are available in this data source.</summary>
      <returns>An array of view names.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents" /> value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">true to allow events when refreshing the schema; false to disable the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> and <see cref="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed" /> events when refreshing the schema.</param>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after the data source events have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">An attempt was made to invoke this method in the base class.</exception>
    </member>
    <member name="E:System.Web.UI.Design.DataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SchemasEquivalent(System.Web.UI.Design.IDataSourceSchema,System.Web.UI.Design.IDataSourceSchema)">
      <summary>Provides a value that indicates whether two schemas are equal.</summary>
      <returns>true if both schemas are equivalent; otherwise, false.</returns>
      <param name="schema1">The first schema to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceSchema" />).</param>
      <param name="schema2">The second schema to compare.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.DataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Gets a value indicating whether the <see cref="E:System.Web.UI.Design.DataSourceDesigner.DataSourceChanged" /> event or the <see cref="M:System.Web.UI.Design.DataSourceDesigner.RefreshSchema(System.Boolean)" /> method occurs.</summary>
      <returns>true if events are being suppressed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceDesigner.ViewSchemasEquivalent(System.Web.UI.Design.IDataSourceViewSchema,System.Web.UI.Design.IDataSourceViewSchema)">
      <summary>Provides a value that determines whether two schema views are equal.</summary>
      <returns>true if both views are equivalent; otherwise, false. </returns>
      <param name="viewSchema1">The first view to compare (derived from the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />).</param>
      <param name="viewSchema2">The second view to compare.</param>
    </member>
    <member name="T:System.Web.UI.Design.DataSourceViewSchemaConverter">
      <summary>Provides a type converter for a property representing a field in a data source schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DataSourceViewSchemaConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Indicates whether the specified source type can be converted to the type of the associated control property.</summary>
      <returns>true if the converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
      <param name="sourceType">The type to convert from.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the type of the associated control property.</summary>
      <returns>An <see cref="T:System.Object" /> instance that represents the converted object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> object that can be used to support localization features.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">The conversion could not be performed. </exception>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a list of available values that can be assigned to the associated control property.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing available values for assignment to the associated control property.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
      <param name="typeFilter">A type used to filter fields to include in the standard values list.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</summary>
      <returns>true if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="M:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.</summary>
      <returns>true if this converter returns a standard set of available values for assignment to the associated control property; otherwise false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  implementation that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormat">
      <summary>Provides the abstract base class for creating formats that can be applied to a custom Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> class.</summary>
      <param name="name">A string that identifies a specific <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.Apply(System.Web.UI.Control)">
      <summary>Applies the associated formatting to the specified control.</summary>
      <param name="control">A Web server control to apply the formatting to.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)">
      <summary>Returns a copy of the associated control in order to provide a preview before applying the format to the control.</summary>
      <returns>The <see cref="M:System.Web.UI.Design.DesignerAutoFormat.GetPreviewControl(System.Web.UI.Control)" /> method returns a copy of the associated Web server control.</returns>
      <param name="runtimeControl">A run-time version of the Web server control.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Name">
      <summary>Gets the name of a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormat.Style">
      <summary>Gets a <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> object that is used by the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to render a design-time preview of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormat.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object.</summary>
      <returns>The <see cref="P:System.Web.UI.Design.DesignerAutoFormat.Name" /> property of the current <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Add(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object to the end of the collection.</summary>
      <returns>The index at which the format was added to the collection.</returns>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Clear">
      <summary>Removes all formats from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Contains(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Determines whether the specified format is contained within the collection.</summary>
      <returns>true, if the specified format is in the collection; otherwise, false.</returns>
      <param name="format">An instance of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.IndexOf(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="format" /> within the collection; otherwise, -1, if the format is not in the collection.</returns>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Insert(System.Int32,System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="format" />.</param>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.PreviewSize">
      <summary>Gets the maximum outer dimensions of the control as it will appear at run time.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> structure that contains the height and width of the control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.Remove(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object from the collection.</summary>
      <param name="format">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerAutoFormatCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <param name="array">The <see cref="T:System.Array" /> to receive the designated items.</param>
      <param name="index">The starting index for the items to copy.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#Count">
      <summary>Gets the number of elements that are contained in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>The number of items in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether access to the collection is synchronized (thread safe) when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>true, if the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> is synchronized; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an <see cref="T:System.Collections.IEnumerator" /> interface that iterates through the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IEnumerable" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of the added item.</returns>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to add to the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains a specific value when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>true, if the object is in the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of a item in the collection.</returns>
      <param name="value">The value.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item into the collection at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index at which to insert <paramref name="value" />.</param>
      <param name="value">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to insert.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection has a fixed size when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this method, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>Always true, which indicates that the collection cannot be replaced or deleted.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets the element at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The index.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the collection when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> to remove.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the item at the specified index when the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object is cast to an <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The index of the item to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerAutoFormatStyle">
      <summary>Represents the style for a <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object. This class is used primarily by control developers.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerAutoFormatStyle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" /> class using default values.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerAutoFormatStyle.VerticalAlign">
      <summary>Gets or sets the vertical alignment of the contents for the associated control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.VerticalAlign" /> values. The default is NotSet.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerDataSourceView">
      <summary>Serves as the base class for design-time data source view classes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.#ctor(System.Web.UI.Design.IDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class using the specified data source designer and view name.</summary>
      <param name="owner">The parent data source designer.</param>
      <param name="viewName">The name of the view in the data source.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null-or-<paramref name="viewName" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>true if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports retrieving the total number of data rows instead of the data itself.</summary>
      <returns>true if retrieving the total number of data rows is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports a sorted view on the underlying data source.</summary>
      <returns>true if a sorted view on the underlying data source is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.DataSourceControl" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.DataSourceDesigner">
      <summary>Gets a reference to the designer that created this <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> control.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object provided when the current <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> instance was created.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the specified number of rows, indicating whether it is returning sample data or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Name">
      <summary>Gets the name of the view as provided when this instance of the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> class was created.</summary>
      <returns>The view name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView">
      <summary>Provides a base class for designers for data views based on hierarchical data. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.IHierarchicalDataSourceDesigner,System.String)">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" /> that is the designer for the associated control.</param>
      <param name="viewPath">A unique path to the block of data to use for the view.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="owner" /> is null-or-<paramref name="viewPath" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.DataSourceDesigner">
      <summary>Gets the associated designer.</summary>
      <returns>The parent <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="isSampleData">true to indicate the returned data is sample data; false to indicate the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Path">
      <summary>Gets the path to the block of data that is presented in the view.</summary>
      <returns>The path provided when creating the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view for the associated control.</summary>
      <returns>This implementation always returns null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerObject">
      <summary>Represents an object in a design host such as Visual Studio 2005. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerObject" /> class.</summary>
      <param name="designer">The parent designer.</param>
      <param name="name">The name of the object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="name" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Designer">
      <summary>Gets the associated designer component.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.GetService(System.Type)">
      <summary>Gets a service from the design host, as identified by the provided type.</summary>
      <returns>The requested service.</returns>
      <param name="serviceType">The type of service being requested.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Name">
      <summary>Gets the name of the object.</summary>
      <returns>The name of the object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerObject.Properties">
      <summary>Gets the object's properties.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> object containing the object's properties and their values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerObject.System#IServiceProvider#GetService(System.Type)">
      <summary>For a description of this member, see <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
      <returns>The requested service.</returns>
      <param name="serviceType">The type of service being requested.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegion">
      <summary>Defines a region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="designer" /> is an empty string ("").-or-<paramref name="name" /> is null.-or-<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> class with the specified name for a control designer, optionally setting the instance as a selectable region in the designer.</summary>
      <param name="designer">The control designer that contains this designer region.</param>
      <param name="name">The name of this designer region.</param>
      <param name="selectable">true to select the region; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null.-or-<paramref name="designer" /> is an empty string ("").-or-<paramref name="name" /> is null.-or-<paramref name="name" /> is an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Description">
      <summary>Gets or sets the description for a designer region.</summary>
      <returns>A text description of the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="F:System.Web.UI.Design.DesignerRegion.DesignerRegionAttributeName">
      <summary>Defines the HTML attribute name for a designer region.</summary>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.DisplayName">
      <summary>Gets or sets the friendly display name for a designer region.</summary>
      <returns>A text display name for the designer region. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.EnsureSize">
      <summary>Gets or sets a value indicating whether the region size is to be explicitly set on the designer region by the design host.</summary>
      <returns>true, if the design host should set the size on the designer region; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegion.GetBounds">
      <summary>Retrieves the size of the designer region on the design surface.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> representing the designer region size on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Highlight">
      <summary>Gets or sets a value indicating whether to highlight the designer region on the design surface.</summary>
      <returns>true, if the visual designer should highlight the designer region on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selectable">
      <summary>Gets or sets a value indicating whether the designer region can be selected by the user on the design surface.</summary>
      <returns>true, if the designer region can be selected by the user on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.Selected">
      <summary>Gets or sets a value indicating whether the designer region is currently selected on the design surface.</summary>
      <returns>true, if the designer region is currently selected on the design surface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegion.UserData">
      <summary>Gets or sets optional user data to associate with the designer region.</summary>
      <returns>An object that contains user data stored for the designer region. The default is null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects within a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.#ctor(System.Web.UI.Design.ControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> class for the specified control designer.</summary>
      <param name="owner">The control designer that owns this collection of designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Add(System.Web.UI.Design.DesignerRegion)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object to the end of the collection.</summary>
      <returns>The index at which the region was added to the collection.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Clear">
      <summary>Removes all regions from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Contains(System.Web.UI.Design.DesignerRegion)">
      <summary>Gets a value indicating whether the specified region is contained within the collection.</summary>
      <returns>true, if the region is in the collection; otherwise, false.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to an <see cref="T:System.Array" /> object, starting at a particular <see cref="T:System.Array" /> index.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.IndexOf(System.Web.UI.Design.DesignerRegion)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="region" /> within the collection; otherwise, -1, if <paramref name="region" /> is not in the collection.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Insert(System.Int32,System.Web.UI.Design.DesignerRegion)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert the region.</param>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object has a fixed size.</summary>
      <returns>true, if the size of the collection cannot be changed by adding or removing items; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is read-only.</summary>
      <returns>true, if the collection cannot be changed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object is synchronized (thread safe).</summary>
      <returns>true, if access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.- or -<paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.Owner">
      <summary>Gets the control designer that owns the designer region collection.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ControlDesigner" /> that represents the control designer that owns the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.Remove(System.Web.UI.Design.DesignerRegion)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.DesignerRegion" /> object from the collection. </summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove from the collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.DesignerRegion" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.DesignerRegion" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied regions. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the collection.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>true, if access to the collection is synchronized; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The index at which the item was added to the collection.</returns>
      <param name="o">The item to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true, if the region is in the collection; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The zero-based index of the first occurrence of the object within the collection; otherwise, -1, if the object is not in the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert the object.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false, if the collection dynamically increases in size as new objects are added; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.Design.DesignerRegionCollection.IsReadOnly" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
      <returns>The object at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the object to get in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.DesignerRegionMouseEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when you click on a selected control or a designer region in a selected control. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignerRegionMouseEventArgs.#ctor(System.Web.UI.Design.DesignerRegion,System.Drawing.Point)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> class with the specified region and location. </summary>
      <param name="region">The designer region that was clicked; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" />.</param>
      <param name="location">The location that was clicked, relative to the upper left corner of the region; used to initialize the <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Location">
      <summary>Gets the location within the control that was clicked.</summary>
      <returns>The <see cref="T:System.Drawing.Point" /> identifying the location within the region that was clicked.</returns>
    </member>
    <member name="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region">
      <summary>Gets the designer region that was clicked, if any.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the click event applies to, or null if no region was clicked.</returns>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeData">
      <summary>Provides helper methods that can be used by control designers to generate sample data for data-bound properties at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataBoundDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names indicating that the columns are connected to a data source.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> object with three columns and no data.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateDummyDataTable">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object that contains three columns with names that indicate that the columns contain sample data.</summary>
      <returns>A new <see cref="T:System.Data.DataTable" /> with three columns. These columns can contain data of type string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable)">
      <summary>Creates a sample <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object that contains columns with the same names and data types as the provided <paramref name="referenceData" />.</returns>
      <param name="referenceData">A data source with the desired schema to use as the format for the sample <see cref="T:System.Data.DataTable" /> object. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.CreateSampleDataTable(System.Collections.IEnumerable,System.Boolean)">
      <summary>Creates a <see cref="T:System.Data.DataTable" /> object with the same schema as the provided data and optionally containing column names indicating that the data is bound data.</summary>
      <returns>A <see cref="T:System.Data.DataTable" /> object.</returns>
      <param name="referenceData">An <see cref="T:System.Collections.IEnumerable" /> object containing data.</param>
      <param name="useDataBoundData">If true, the column names indicate that they contain bound data.</param>
    </member>
    <member name="F:System.Web.UI.Design.DesignTimeData.DataBindingHandler">
      <summary>Gets an event handler for data binding.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataFields(System.Collections.IEnumerable)">
      <summary>Gets a collection of property descriptors for the data fields of the specified data source.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that describes the data fields of the specified data source.</returns>
      <param name="dataSource">The data source from which to retrieve the data fields. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMember(System.ComponentModel.IListSource,System.String)">
      <summary>Gets the specified data member from the specified data source.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the specified data member from the specified data source, if it exists.</returns>
      <param name="dataSource">An <see cref="T:System.ComponentModel.IListSource" /> that contains the data in which to find the member. </param>
      <param name="dataMember">The name of the data member to retrieve. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dataSource" /> is null-or-<paramref name="dataMember" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDataMembers(System.Object)">
      <summary>Gets the names of the data members in the specified data source.</summary>
      <returns>An array of type String that contains the names of the data members in the specified data source.</returns>
      <param name="dataSource">The data source from which to retrieve the names of the members. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetDesignTimeDataSource(System.Data.DataTable,System.Int32)">
      <summary>Adds the specified number of sample rows to the specified data table.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing sample data for use at design time.</returns>
      <param name="dataTable">The <see cref="T:System.Data.DataTable" /> object to which the sample rows are added. </param>
      <param name="minimumRows">The minimum number of rows to add. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data source name.</summary>
      <returns>An object implementing either <see cref="T:System.ComponentModel.IListSource" /> or <see cref="T:System.Collections.IEnumerable" /> representing the selected data source, or null if the data source or the designer host could not be accessed.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object that contains the data source. </param>
      <param name="dataSource">The name of the data source to retrieve. </param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeData.GetSelectedDataSource(System.ComponentModel.IComponent,System.String,System.String)">
      <summary>Gets a data source selected by name in the design host, represented by the specified component's site property and identified by the specified data-source name and member name.</summary>
      <returns>An object implementing <see cref="T:System.Collections.IEnumerable" /> containing the data member, or null if the data source, member, or component's site could not be accessed.</returns>
      <param name="component">The object implementing <see cref="T:System.ComponentModel.IComponent" /> that contains the data sourced property. </param>
      <param name="dataSource">The data source to retrieve. </param>
      <param name="dataMember">The data member to retrieve. </param>
    </member>
    <member name="T:System.Web.UI.Design.DesignTimeResourceProviderFactory">
      <summary>Used by control localization to read and write resources at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeGlobalResourceProvider(System.IServiceProvider,System.String)">
      <summary>When overridden in a derived class, creates a global resource provider using the provided <see cref="T:System.IServiceProvider" /> interface and resource class name.</summary>
      <returns>Either an <see cref="T:System.Web.Compilation.IResourceProvider" /> or an <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
      <param name="classKey">The name of the resource class.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceProvider(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource provider using the provided reference to the design host.</summary>
      <returns>An <see cref="T:System.Web.Compilation.IResourceProvider" /> or a class derived from <see cref="T:System.Web.Compilation.IResourceProvider" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="M:System.Web.UI.Design.DesignTimeResourceProviderFactory.CreateDesignTimeLocalResourceWriter(System.IServiceProvider)">
      <summary>When overridden in a derived class, creates a local resource writer for using the provided reference to the design host.</summary>
      <returns>A <see cref="T:System.Resources.ResourceWriter" />.</returns>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="T:System.Web.UI.Design.EditableDesignerRegion">
      <summary>Represents an editable content region within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Boolean)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> class using the given owner and name and the initial value of the <see cref="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly" /> property.</summary>
      <param name="owner">A <see cref="T:System.Web.UI.Design.ControlDesigner" /> object, or a designer that derives from <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
      <param name="name">The name of the region.</param>
      <param name="serverControlsOnly">true to have the region accept only Web server controls for content; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.Content">
      <summary>Gets or sets the HTML markup for the content of the region.</summary>
      <returns>HTML markup representing the content of the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.EditableDesignerRegion.GetChildViewRendering(System.Web.UI.Control)">
      <summary>Returns a <see cref="T:System.Web.UI.Design.ViewRendering" /> object containing the design-time HTML markup for the given control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewRendering" /> object.</returns>
      <param name="control">The control for which to get the <see cref="T:System.Web.UI.Design.ViewRendering" /> object for the current region.</param>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.ServerControlsOnly">
      <summary>Gets or sets a value indicating whether the region can accept only Web server controls.</summary>
      <returns>true if the region can contain only Web server controls; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value indicating whether the region can be bound to a data source.</summary>
      <returns>true if the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content supports binding to a data source; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditor">
      <summary>Defines a set of properties and methods for evaluating an expression that is associated with a control property at design time and to provide an expression editor sheet to the visual design host for use in the expression editor dialog box. This class is abstract.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates an expression string and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">An expression string to evaluate. The expression does not include the expression prefix.</param>
      <param name="parseTimeData">An object containing additional parsing information for evaluating <paramref name="expression" />. This typically is provided by the expression builder.</param>
      <param name="propertyType">The type of the control property to which <paramref name="expression" /> is bound.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditor.ExpressionPrefix">
      <summary>Gets the expression prefix that identifies expression strings that are supported by the expression editor implementation.</summary>
      <returns>A string representing the prefix for expressions supported by the class derived from the <see cref="T:System.Web.UI.Design.ExpressionEditor" />; otherwise, an empty string (""), if the expression editor does not have an associated expression prefix.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.String,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression prefix.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionPrefix" />; otherwise, null, if <paramref name="expressionPrefix" /> is not defined or is not associated with an <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <param name="expressionPrefix">The expression prefix used to find the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor(System.Type,System.IServiceProvider)">
      <summary>Returns an <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation that is associated with the specified expression builder type.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditor" /> implementation associated with <paramref name="expressionBuilderType" />; otherwise, null, if <paramref name="expressionBuilderType" /> cannot be located or has no associated <see cref="T:System.Web.UI.Design.ExpressionEditor" />.</returns>
      <param name="expressionBuilderType">The type of the derived expression builder class, used to locate the associated expression editor.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="expressionBuilderType" /> is null.- or -<paramref name="serviceProvider" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet that is associated with the current expression editor.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> that defines the custom expression properties.</returns>
      <param name="expression">The expression string set for a control property, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for a custom expression. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</summary>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression">
      <summary>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</summary>
      <returns>The custom expression string for the current property values.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the expression string is valid.</summary>
      <returns>true, if the expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the expression editor sheet.</summary>
      <returns>An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionConverter">
      <summary>Provides a type converter for expression binding collections.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts an expression binding collection to the specified type.</summary>
      <returns>If <paramref name="destinationType" /> is not of type <see cref="T:System.String" />, the object produced by the type conversion; otherwise, if <paramref name="destinationType" /> is a string, an empty string ("").</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the component or control the expression binding collection belongs to. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that can be used to provide additional culture information.</param>
      <param name="value">The object to convert. </param>
      <param name="destinationType">The type to convert to.</param>
    </member>
    <member name="T:System.Web.UI.Design.ExpressionsCollectionEditor">
      <summary>Provides a user interface for selecting and editing an expressions binding collection at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionsCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object with the specified service provider and context.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> object containing the selected expressions; otherwise, if no expressions are selected, the <paramref name="value" /> object.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information such as the associated control.</param>
      <param name="provider">A service provider object through which editing services can be obtained.</param>
      <param name="value">An instance of the object being edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.ExpressionsCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor for the specified context.</summary>
      <returns>An <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the editing style for the provided user interface.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information.</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceConverter">
      <summary>Provides a type converter that can retrieve a list of the hierarchical data sources that are accessible to the current component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Indicates whether the specified component is a valid data source for this converter.</summary>
      <returns>true if <paramref name="component" /> implements <see cref="T:System.Web.UI.IHierarchicalEnumerable" />; otherwise, false.</returns>
      <param name="component">The component to check as a valid data source.</param>
    </member>
    <member name="T:System.Web.UI.Design.HierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HierarchicalDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>This implementation always returns false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when any property of the associated data source changes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
      <param name="viewPath">The unique path to the block of data to use in creating the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnDataSourceChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> event when the properties of the data source have changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object provided by the calling object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.OnSchemaRefreshed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event when the schema of the data source has changed and the <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property value is false.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data.</summary>
      <param name="preferSilent">This parameter is not used in this implementation. However, it should be supported in derived classes.</param>
      <exception cref="T:System.NotSupportedException">In all cases.</exception>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores data source events after they have been suppressed.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents" /> property is false.</exception>
    </member>
    <member name="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs after the schema has been refreshed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Postpones all data source events until after the <see cref="M:System.Web.UI.Design.HierarchicalDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HierarchicalDataSourceDesigner.SuppressingDataSourceEvents">
      <summary>Indicates whether data source events have been disabled.</summary>
      <returns>true if the <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.DataSourceChanged" /> or <see cref="E:System.Web.UI.Design.HierarchicalDataSourceDesigner.SchemaRefreshed" /> event has been disabled; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlControlDesigner">
      <summary>Provides basic design-time functionality for ASP.NET server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Behavior">
      <summary>Gets or sets the DHTML behavior that is associated with the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> that is associated with the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DataBindings">
      <summary>Gets the data bindings collection for the current control.</summary>
      <returns>A <see cref="T:System.Web.UI.DataBindingCollection" /> that contains the data bindings for the current control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.DesignTimeElement">
      <summary>Gets the design-time object representing the control that is associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object on the design surface.</summary>
      <returns>The design-time object representing the control associated with the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.Expressions">
      <summary>Gets the expression bindings for the current control at design time.</summary>
      <returns>An <see cref="T:System.Web.UI.ExpressionBindingCollection" /> that contains the expressions strings set for properties in the current control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and sets the component for design.</summary>
      <param name="component">The control element for design. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorAttached">
      <summary>Called when a behavior is associated with the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBehaviorDetaching">
      <summary>Called when a behavior disassociates from the element.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnBindingsCollectionChanged(System.String)">
      <summary>Provides a method that can be used to indicate when a data binding has changed.</summary>
      <param name="propName">The name of the property that has changed. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.OnSetParent">
      <summary>Provides a way to perform additional processing when the associated control is attached to a parent control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Sets the list of events that are exposed at design-time for the <see cref="T:System.ComponentModel.TypeDescriptor" /> object for the component.</summary>
      <param name="events">An <see cref="T:System.Collections.IDictionary" /> that contains the names of the events of the component to expose. </param>
    </member>
    <member name="M:System.Web.UI.Design.HtmlControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows the designer to expose a specific set of properties through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object at design time.</summary>
      <param name="properties">The set of properties to filter for the component. </param>
    </member>
    <member name="P:System.Web.UI.Design.HtmlControlDesigner.ShouldCodeSerialize">
      <summary>Gets or sets a value indicating whether to create a field declaration for the control in the code-behind file for the current design document during serialization.</summary>
      <returns>true, if a declaration should be created; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner">
      <summary>Provides a base designer for all intrinsic HTML controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HtmlIntrinsicControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HtmlIntrinsicControlDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.HyperLinkDataBindingHandler">
      <summary>Provides a data-binding handler for a hyperlink property.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.HyperLinkDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.HyperLinkDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Resolves design-time data-binding for the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.IContentResolutionService">
      <summary>Provides an interface for access to a master page from a content page at design time, if provided by a design host, such as Visual Studio 2005. </summary>
    </member>
    <member name="P:System.Web.UI.Design.IContentResolutionService.ContentDefinitions">
      <summary>Gets the <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects for the content placeholders that are identified in the master page.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing identifiers and <see cref="T:System.Web.UI.Design.ContentDefinition" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.GetContentDesignerState(System.String)">
      <summary>Retrieves the current state of the identified content place holder.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ContentDesignerState" />.</returns>
      <param name="identifier">The identifier for a content place holder.</param>
    </member>
    <member name="M:System.Web.UI.Design.IContentResolutionService.SetContentDesignerState(System.String,System.Web.UI.Design.ContentDesignerState)">
      <summary>Sets the current state of the identified content place holder.</summary>
      <param name="identifier">The identifier for a content place holder.</param>
      <param name="state">A <see cref="T:System.Web.UI.Design.ContentDesignerState" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerBehavior">
      <summary>Enables the extension of specific behaviors of a control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeElementView">
      <summary>Gets the design-time view control object for the designer.</summary>
      <returns>The view control object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerBehavior.DesignTimeHtml">
      <summary>Gets or sets the design-time HTML for the designer's control.</summary>
      <returns>The HTML used at design time to format the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerBehavior.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform processing when the designer enters or exits template mode.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerTag">
      <summary>Provides an interface for design-time access to the HTML markup for a control that is associated with a control designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetAttribute(System.String)">
      <summary>Retrieves the value of the identified attribute on the tag.</summary>
      <returns>A string containing the value of the attribute.</returns>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetContent">
      <summary>Retrieves the HTML markup for the content of the tag.</summary>
      <returns>The HTML markup for the content of the tag.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.GetOuterContent">
      <summary>Retrieves the complete HTML markup for the control, including the outer tags.</summary>
      <returns>The outer HTML markup for the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerTag.IsDirty">
      <summary>Gets a value indicating whether or not an attribute or the content of a tag has changed.</summary>
      <returns>true if the tag has changed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.RemoveAttribute(System.String)">
      <summary>Deletes the specified attribute from the tag.</summary>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified attribute and creates the attribute, if necessary.</summary>
      <param name="name">The attribute name.</param>
      <param name="value">The attribute value.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetContent(System.String)">
      <summary>Sets the HTML markup for the content of the tag.</summary>
      <param name="content">The HTML markup for the content of the tag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)">
      <summary>Sets the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property of the tag.</summary>
      <param name="dirty">The value for the <see cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" /> property.</param>
    </member>
    <member name="T:System.Web.UI.Design.IControlDesignerView">
      <summary>Provides an interface for access to the visual representation and content of a control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.ContainingRegion">
      <summary>Gets the designer region that contains the associated control, if any.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerRegion" /> object if the associated control is contained in a designer region; otherwise null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)">
      <summary>Retrieves the outer bounds of the designer view.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> containing information about the location and measurements of the view at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.DesignerRegion" /> for which you want to retrieve the bounds.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Invalidate(System.Drawing.Rectangle)">
      <summary>Notifies the design host that the area represented by the provided rectangle needs to be repainted on the design surface.</summary>
      <param name="rectangle">A <see cref="T:System.Drawing.Rectangle" /> representing the location and outer measurements of the view on the design surface. The coordinate-system origin for this rectangle is the top-left corner of the element to which the behavior is attached.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.NamingContainerDesigner">
      <summary>Gets the designer component for the naming container of the associated control, if any.</summary>
      <returns>An IDesigner object representing the designer component for the naming container for the associated control; otherwise null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IControlDesignerView.SetFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />.</summary>
      <param name="viewFlags">A member of the <see cref="T:System.Web.UI.Design.ViewFlags" /> enumeration.</param>
      <param name="setFlag">true to set the flag, false to cancel the flag.</param>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Puts the provided content into the provided designer region.</summary>
      <param name="region">A <see cref="T:System.Web.UI.Design.DesignerRegion" /> into which the content is to be put.</param>
      <param name="content">The HTML markup to be put into the designer region.</param>
    </member>
    <member name="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions">
      <summary>Gets a value indicating whether designer regions are supported.</summary>
      <returns>true if designer regions are supported; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IControlDesignerView.Update">
      <summary>Causes the associated control to redraw the invalidated regions within its client area.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IControlDesignerView.ViewEvent">
      <summary>An event raised by the design host for the view and designer component.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataBindingSchemaProvider">
      <summary>Provides an interface for design-time access to a schema provider in a design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema.</summary>
      <returns>true, if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema for the data source.</summary>
      <param name="preferSilent">true to disable data-binding events until after the schema has been refreshed; false to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema">
      <summary>Gets the current schema object for the designer.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceDesigner">
      <summary>Defines the basic functionality for a data source designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" /> method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the underlying data source can refresh its schema; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.Configure">
      <summary>Launches the underlying data source's configuration wizard.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source has changed in a way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> for the specified view.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> containing information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of a view in the underlying data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames">
      <summary>Gets the names of the views in the underlying data source.</summary>
      <returns>An array of type <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Resumes raising data source events after calling the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Suppresses all events raised by a data source until the <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /> method is called.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceFieldSchema">
      <summary>Provides basic functionality for describing the structure of a data field at design time.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType">
      <summary>Gets the type of data stored in the field.</summary>
      <returns>A <see cref="T:System.Type" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Identity">
      <summary>Gets a value indicating whether the value of the field automatically increments for each new row.</summary>
      <returns>true if the field's <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> is numeric and the underlying field increments automatically as new rows are added; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsReadOnly">
      <summary>Gets a value indicating whether the field is editable.</summary>
      <returns>true if the field is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.IsUnique">
      <summary>Gets a value indicating whether values in the field are required to be unique.</summary>
      <returns>true if data in the field must be unique; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Length">
      <summary>Gets a value indicting the size of data that can be stored in the field.</summary>
      <returns>The number of bytes the field can store.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Name">
      <summary>Gets the name of the field.</summary>
      <returns>The name of the field.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Nullable">
      <summary>Gets a value indicating whether the field can accept null values.</summary>
      <returns>true if the field can accept null values; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Precision">
      <summary>Gets the maximum number of digits used to represent a numerical value in the field.</summary>
      <returns>The maximum number of digits used to represent the values of the field if the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type. If this property is not implemented, it should return -1.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.PrimaryKey">
      <summary>Gets a value indicating whether the field is in the primary key.</summary>
      <returns>true if the field is in the primary key; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceFieldSchema.Scale">
      <summary>Gets the number of decimal places to which numerical values in the field are resolved.</summary>
      <returns>If the <see cref="P:System.Web.UI.Design.IDataSourceFieldSchema.DataType" /> property of the field represents a numeric type, returns the number of decimal places to which values are resolved, otherwise -1.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceProvider">
      <summary>Defines an interface that a control designer can implement to provide access to a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an <see cref="T:System.ComponentModel.IListSource" /> (such as a <see cref="T:System.Data.DataSet" />) for the data source, and provides a DataMember property to select a particular list (or <see cref="T:System.Data.DataTable" />) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource">
      <summary>Gets a reference to the selected data source from the data source provider.</summary>
      <returns>The currently selected data source object of this data source provider.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceSchema">
      <summary>Provides basic functionality for describing the structure of a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceSchema.GetViews">
      <summary>Gets an array of schema descriptors for views contained in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDataSourceViewSchema">
      <summary>Defines a set of methods and properties used to examine a data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetChildren">
      <summary>Gets an array representing the child views contained in the current view.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects that represent the child views contained in the current view.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDataSourceViewSchema.GetFields">
      <summary>Gets an array containing information about each field in the data source.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceFieldSchema" /> objects representing each of the fields in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IDataSourceViewSchema.Name">
      <summary>Gets the name of the view.</summary>
      <returns>The name of the view.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService">
      <summary>Provides an interface for creating a custom <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceProviderFactoryService.GetFactory">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IDesignTimeResourceWriter">
      <summary>Used by the <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" /> class to localize data at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDesignTimeResourceWriter.CreateResourceKey(System.String,System.Object)">
      <summary>Creates a key, using the provided string, to use to retrieve data from the given resource.</summary>
      <returns>The key used to write or retrieve <paramref name="obj" /> from <paramref name="resourceName" />.</returns>
      <param name="resourceName">The name of the resource.</param>
      <param name="obj">The object to localize.</param>
    </member>
    <member name="T:System.Web.UI.Design.IDocumentProjectItem">
      <summary>Provides an interface for accessing a document item retrieved from a design host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.GetContents">
      <summary>Provides access to the contents of a document item that is retrieved from the design host.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IDocumentProjectItem.Open">
      <summary>Opens a document item that is retrieved from the design host.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IFolderProjectItem">
      <summary>Provides an interface for a project folder in a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddDocument(System.String,System.Byte[])">
      <summary>Adds a document to a project folder in a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDocumentProjectItem" /> representing the added document.</returns>
      <param name="name">The name of the document.</param>
      <param name="content">An array of type <see cref="T:System.Byte" /> containing the document contents.</param>
    </member>
    <member name="M:System.Web.UI.Design.IFolderProjectItem.AddFolder(System.String)">
      <summary>Creates a new folder in a project folder of a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IFolderProjectItem" /> representing the new folder.</returns>
      <param name="name">The name for the new folder.</param>
    </member>
    <member name="P:System.Web.UI.Design.IFolderProjectItem.Children">
      <summary>Gets a collection of items in a project folder in a design host, such as Visual Studio 2005.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the items in the project folder of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for a class that is derived from the <see cref="T:System.Web.UI.HierarchicalDataSourceControl" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure" />, otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHierarchicalDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.DataSourceChanged">
      <summary>Occurs when a data source control has changed in some way that affects data-bound controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.GetView(System.String)">
      <summary>Gets the named data source view that is associated with the data source control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
      <param name="viewPath">The XPath for the part of the data source to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the underlying data source.</summary>
      <param name="preferSilent">true to suppress events raised while refreshing the schema; otherwise false.</param>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.ResumeDataSourceEvents">
      <summary>Restores events after calling the <see cref="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents" /> method.</summary>
    </member>
    <member name="E:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SchemaRefreshed">
      <summary>Occurs when the fields or data of the underlying data source have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IHierarchicalDataSourceDesigner.SuppressDataSourceEvents">
      <summary>Turns off events in the data source control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.IHtmlControlDesignerBehavior">
      <summary>Defines an interface that enables the extension of specific behaviors of an HTML control designer.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.Designer">
      <summary>Gets or sets the designer that the behavior is associated with.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.HtmlControlDesigner" /> that the behavior is associated with.NoteThe <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IHtmlControlDesignerBehavior.DesignTimeElement">
      <summary>Gets the element that the designer is associated with.</summary>
      <returns>The object that the designer is associated with.NoteThe <see cref="T:System.Web.UI.Design.IHtmlControlDesignerBehavior" /> interface is obsolete. Use the <see cref="T:System.Web.UI.Design.IControlDesignerTag" /> and <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interfaces for equivalent control designer functionality.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetAttribute(System.String,System.Boolean)">
      <summary>Gets the specified attribute.</summary>
      <returns>The attribute that was retrieved.</returns>
      <param name="attribute">The attribute to retrieve. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.GetStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Gets the specified style attribute.</summary>
      <returns>The style attribute that was retrieved.</returns>
      <param name="attribute">The style attribute to retrieve. </param>
      <param name="designTimeOnly">true if the attribute is only active at design time; otherwise, false. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveAttribute(System.String,System.Boolean)">
      <summary>Removes the specified attribute.</summary>
      <param name="attribute">The attribute to remove. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.RemoveStyleAttribute(System.String,System.Boolean,System.Boolean)">
      <summary>Removes the specified style attribute.</summary>
      <param name="attribute">The style attribute to remove. </param>
      <param name="designTimeOnly">true if the attribute is only active at design time; otherwise, false. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetAttribute(System.String,System.Object,System.Boolean)">
      <summary>Sets the specified attribute to the specified object.</summary>
      <param name="attribute">The attribute to set. </param>
      <param name="value">The object on which to set the attribute. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.IHtmlControlDesignerBehavior.SetStyleAttribute(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>Sets the specified style attribute to the specified object.</summary>
      <param name="attribute">The attribute to set. </param>
      <param name="designTimeOnly">true if the attribute is only active at design-time; otherwise, false. </param>
      <param name="value">The object to set the attribute on. </param>
      <param name="ignoreCase">true if the attribute syntax is case-insensitive; otherwise, false. </param>
    </member>
    <member name="T:System.Web.UI.Design.ImageUrlEditor">
      <summary>Provides a user interface for selecting a URL that references an image.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ImageUrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ImageUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ImageUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This string is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>The filter string that can be used to filter the file list of the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IProjectItem">
      <summary>Provides an interface for an item that is retrieved at design time from a design host, such as Visual Studio 2005.</summary>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.AppRelativeUrl">
      <summary>Gets the URL for the item relative to the design host.</summary>
      <returns>The relative URL.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Name">
      <summary>Gets the name of the item.</summary>
      <returns>The name of the item.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.Parent">
      <summary>Gets a reference to the containing item, if any.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />, if the current item is contained within another item; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.IProjectItem.PhysicalPath">
      <summary>Gets the path for a project item.</summary>
      <returns>The path for the item.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingFrame">
      <summary>Provides an interface to manage a template editing area.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Close(System.Boolean)">
      <summary>Closes the control and optionally saves any changes.</summary>
      <param name="saveChanges">true if changes to the document should be saved; otherwise, false. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.ControlStyle">
      <summary>Gets the style for the editing frame.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> that represents the Web server control style attributes for the editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialHeight">
      <summary>Gets or sets the initial height of the control.</summary>
      <returns>The initial height of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.InitialWidth">
      <summary>Gets or sets the initial width of the control.</summary>
      <returns>The initial width of the control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Name">
      <summary>Gets the name of the editing frame.</summary>
      <returns>The name of the editing frame.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Open">
      <summary>Opens and displays the control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Resize(System.Int32,System.Int32)">
      <summary>Resizes the control to the specified width and height.</summary>
      <param name="width">The new width for the control. </param>
      <param name="height">The new height for the control. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.Save">
      <summary>Saves any changes to the document.</summary>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateNames">
      <summary>Gets a set of names of templates to use.</summary>
      <returns>An array of template names.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.TemplateStyles">
      <summary>Gets the template styles for the control.</summary>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Style" /> objects that represent the template styles for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingFrame.UpdateControlName(System.String)">
      <summary>Changes the name of the control to the specified name.</summary>
      <param name="newName">The new name for the control. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingFrame.Verb">
      <summary>Gets or sets the verb that invokes the template.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that invokes the template.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ITemplateEditingService">
      <summary>Provides services for editing control templates at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" />, using the specified name, template names, control style, and template styles.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> property used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame. </param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame. </param>
    </member>
    <member name="M:System.Web.UI.Design.ITemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <returns>The name of the parent template.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template. </param>
    </member>
    <member name="P:System.Web.UI.Design.ITemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>true if the service supports nested template editing; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebAdministrationService">
      <summary>Provides an interface for creating services for administering a Web site at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebAdministrationService.Start(System.Collections.IDictionary)">
      <summary>Starts the Web administration facility in the design host.</summary>
      <param name="arguments">An <see cref="T:System.Collections.IDictionary" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.IWebApplication">
      <summary>Provides an interface for accessing a Web application in a design host, such as Microsoft Visual Studio 2005, at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.GetProjectItemFromUrl(System.String)">
      <summary>Returns a project item from a design host based on its URL.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />.</returns>
      <param name="appRelativeUrl">The relative path to the project item to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.IWebApplication.OpenWebConfiguration(System.Boolean)">
      <summary>Returns a <see cref="T:System.Configuration.Configuration" /> object representing the current Web application in the design host.</summary>
      <returns>A <see cref="T:System.Configuration.Configuration" />.</returns>
      <param name="isReadOnly">true to indicate the returned <see cref="T:System.Configuration.Configuration" /> is editable; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.IWebApplication.RootProjectItem">
      <summary>Gets the root project item from the design host.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IProjectItem" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormReferenceManager">
      <summary>Provides an interface that can look up information about the types used in the current Web Forms project.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetObjectType(System.String,System.String)">
      <summary>Gets the type of the specified object.</summary>
      <returns>The <see cref="T:System.Type" /> of the object, if it could be resolved.</returns>
      <param name="tagPrefix">The tag prefix for the type. </param>
      <param name="typeName">The name of the type. </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project.</summary>
      <returns>The register directives for the current project.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified type of object.</summary>
      <returns>The tag prefix for the specified object type, if it could be located.</returns>
      <param name="objectType">The type of the object. </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsBuilderUIService">
      <summary>Provides methods to start specific user interfaces for building properties at design-time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildColor(System.Windows.Forms.Control,System.String)">
      <summary>Starts a <see cref="T:System.Web.UI.Design.ColorBuilder" /> to build a color property.</summary>
      <returns>The color that was selected. This value will be a named color, or an RGB color expressed in HTML color format (#RRGGBB).</returns>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.ColorBuilder" />. </param>
      <param name="initialColor">The initial color for the editor to pre-select. </param>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsBuilderUIService.BuildUrl(System.Windows.Forms.Control,System.String,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Launches an editor to build a URL property.</summary>
      <returns>A string that contains the URL returned by the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</returns>
      <param name="owner">The control used to parent the dialog shown by the <see cref="T:System.Web.UI.Design.UrlBuilder" />. </param>
      <param name="initialUrl">The initial URL to display in the selection interface. </param>
      <param name="baseUrl">The base URL used to construct relative URLs. </param>
      <param name="caption">A caption that presents a message in the selection interface. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the selection interface. </param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />. </param>
    </member>
    <member name="T:System.Web.UI.Design.IWebFormsDocumentService">
      <summary>Provides methods to access services for tracking the loading state of a Web Forms document, handling events at load time, accessing a document's location, managing a document's undo service, and setting a new selection within the document.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.CreateDiscardableUndoUnit">
      <summary>Creates a discardable undo unit.</summary>
      <returns>The new discardable undo unit.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.DiscardUndoUnit(System.Object)">
      <summary>Discards the specified undo unit.</summary>
      <param name="discardableUndoUnit">The undo unit to discard. </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.DocumentUrl">
      <summary>Gets the URL at which the document is located.</summary>
      <returns>The URL at which the document is located, or null if the document has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.EnableUndo(System.Boolean)">
      <summary>Enables the ability to undo actions that occur within undoable action units or transactions.</summary>
      <param name="enable">true if actions should be undoable; otherwise, false. </param>
    </member>
    <member name="P:System.Web.UI.Design.IWebFormsDocumentService.IsLoading">
      <summary>Gets a value indicating whether the document service is currently loading.</summary>
      <returns>true if the document service is loading; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.Design.IWebFormsDocumentService.LoadComplete">
      <summary>Occurs when the service has finished loading.</summary>
    </member>
    <member name="M:System.Web.UI.Design.IWebFormsDocumentService.UpdateSelection">
      <summary>When implemented in a derived class, updates the current selection.</summary>
    </member>
    <member name="T:System.Web.UI.Design.MailFileEditor">
      <summary>Provides a user interface for selecting and editing a mail file name for a property at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MailFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MailFileEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Caption">
      <summary>Gets the caption for the editor dialog.</summary>
      <returns>The caption for the design-time dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MailFileEditor.Filter">
      <summary>Gets the file filter string for the dialog (such as "*.txt").</summary>
      <returns>The filter for selecting files in the design-time dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.MdbDataFileEditor">
      <summary>Provides a design-time user interface for selecting a Microsoft Access database file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.MdbDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.MdbDataFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.MdbDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ReadWriteControlDesigner">
      <summary>Extends design-time behavior for read/write server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.ReadWriteControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a property, including description and value, to an intrinsic HTML style.</summary>
      <param name="propName">The name of the property to map. </param>
      <param name="varPropValue">The value of the property. </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnBehaviorAttached">
      <summary>Provides notification that is raised when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Represents the method that will handle the <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" /> event of the <see cref="T:System.ComponentModel.Design.IComponentChangeService" /> class.</summary>
      <param name="sender">The object sending the event. </param>
      <param name="ce">The <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.ReadWriteControlDesigner.UpdateDesignTimeHtml">
      <summary>Refreshes the display of the control.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditor">
      <summary>Provides properties and methods for evaluating and editing a resource expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.#ctor">
      <summary>Initializes a new instance of a <see cref="T:System.Web.UI.Design.ResourceExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a resource expression and provides the design-time value for a control property.</summary>
      <returns>The object referenced by the evaluated expression string, if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A resource expression to evaluate. <paramref name="expression" /> does not include the Resources expression prefix.</param>
      <param name="parseTimeData">An object supplying additional parse data, in the form of a <see cref="T:System.Web.Compilation.ResourceExpressionFields" /> value.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns a resource expression editor sheet that is initialized with the input expression string and service provider implementation.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> that defines the resource expression properties.</returns>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to initialize the expression editor sheet.</param>
    </member>
    <member name="T:System.Web.UI.Design.ResourceExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a resource expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" /> class.</summary>
      <param name="expression">A resource expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ClassKey">
      <summary>Gets or sets the key that matches the filename for the resource in the project's global resource folder.</summary>
      <returns>The key for a resource file in the global resource folder. </returns>
    </member>
    <member name="M:System.Web.UI.Design.ResourceExpressionEditorSheet.GetExpression">
      <summary>Returns a resource expression that is formed by the expression editor sheet property values.</summary>
      <returns>The resource expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the resource expression string is valid.</summary>
      <returns>true if the resource expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ResourceExpressionEditorSheet.ResourceKey">
      <summary>Gets or sets the name of the resource, which is used as a key to find the resource value.</summary>
      <returns>The name of the resource.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditor">
      <summary>Provides properties and methods for composing a RouteURL expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a RouteUrl expression and provides the design-time value.</summary>
      <returns>The URL for the specified route and route parameter values if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A RouteUrl expression to evaluate. The expression does not include the RouteUrl expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information for evaluating the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a RouteUrl expression.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> instance that defines the RouteUrl expression properties.</returns>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the RouteUrl expression prefix.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host that is used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a RouteUrl expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteUrlExpressionEditorSheet" /> class.</summary>
      <param name="expression">A RouteUrl expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteUrlExpressionEditorSheet.GetExpression">
      <summary>Returns a RouteUrl expression that is formed by the expression editor sheet property values.</summary>
      <returns>The RouteUrl expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the RouteUrl expression string is valid.</summary>
      <returns>true if the RouteUrl expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteName">
      <summary>Gets or sets the name of the route that a URL is to be generated for.</summary>
      <returns>The name of the route that a URL is to be generated for.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteUrlExpressionEditorSheet.RouteValues">
      <summary>Gets or sets the URL parameter names and values that are to be used to generate a URL from a route.</summary>
      <returns>The URL parameter names and values that are to be used to generate a URL from a route.</returns>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditor">
      <summary>Provides properties and methods for composing a RouteValue expression at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.EvaluateExpression(System.String,System.Object,System.Type,System.IServiceProvider)">
      <summary>Evaluates a RouteValue expression and provides the design-time value.</summary>
      <returns>The value of the specified URL parameter if the expression evaluation succeeded; otherwise, null.</returns>
      <param name="expression">A RouteValue expression to evaluate. The expression does not include the RouteValue expression prefix.</param>
      <param name="parseTimeData">An object that contains additional parsing information that is used to evaluate the expression.</param>
      <param name="propertyType">The type of the control property.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)">
      <summary>Returns an expression editor sheet for a RouteValue expression.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> instance that defines the RouteValue expression properties.</returns>
      <param name="expression">The expression string that is used to initialize the expression editor sheet. The expression does not include the RouteValue expression prefix.</param>
      <param name="serviceProvider">A service provider implementation that is supplied by the designer host and that is used to obtain additional design-time services.</param>
    </member>
    <member name="T:System.Web.UI.Design.RouteValueExpressionEditorSheet">
      <summary>Represents a design-time editor sheet for the properties of a RouteValue expression in the UI of a designer host at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.#ctor(System.String,System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.RouteValueExpressionEditorSheet" /> class.</summary>
      <param name="expression">A RouteValue expression, used to initialize the expression editor sheet.</param>
      <param name="serviceProvider">A service provider implementation supplied by the designer host, used to obtain additional design-time services</param>
    </member>
    <member name="M:System.Web.UI.Design.RouteValueExpressionEditorSheet.GetExpression">
      <summary>Returns a RouteValue expression that is formed by the expression editor sheet property values.</summary>
      <returns>The RouteValue expression string for the current settings in the sheet.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.IsValid">
      <summary>Gets a value that indicates whether the RouteValue expression string is valid.</summary>
      <returns>true if the RouteValue expression string is valid; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.RouteValueExpressionEditorSheet.RouteValue">
      <summary>Gets or sets the name of the URL parameter to be evaluated by the RouteValue expression.</summary>
      <returns>The name of the URL parameter to be evaluated by the RouteValue expression.</returns>
    </member>
    <member name="T:System.Web.UI.Design.SkinIDTypeConverter">
      <summary>Provides a list of valid skin IDs for a control at design time, based on the currently applicable theme.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SkinIDTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the provided format context and type.</summary>
      <returns>true, if the conversion can be made; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context for the control being designed.</param>
      <param name="sourceType">A <see cref="T:System.Type" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert a <see cref="P:System.Web.UI.Control.SkinID" /> object to the specified type, using the specified context.</summary>
      <returns>true, if a conversion can be made; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context for the control being designed.</param>
      <param name="destType">A <see cref="T:System.Type" /> that represents the type to convert to.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given string to a <see cref="P:System.Web.UI.Control.SkinID" /> object using the specified context and culture information.</summary>
      <returns>An object that can be cast as a <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> object, if the conversion can be made; otherwise, null.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed.</param>
      <param name="value">The string to convert.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given <see cref="P:System.Web.UI.Control.SkinID" /> object to a string using the specified context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null, the current culture is assumed. </param>
      <param name="value">The <see cref="P:System.Web.UI.Control.SkinID" /> object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert <paramref name="value" /> to (must be a <see cref="T:System.String" />). </param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be applied to the control that is represented by the given format context.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> that holds a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects; otherwise, null, if the control does not support skins.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context that represents the control being designed. <paramref name="context" /> or properties of <paramref name="context" /> can be null.</param>
    </member>
    <member name="M:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a value indicating whether the control that is represented by the given context supports a set of <see cref="P:System.Web.UI.Control.SkinID" /> objects that can be picked from a list.</summary>
      <returns>true, if <see cref="Overload:System.Web.UI.Design.SkinIDTypeConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the control being designed.</param>
    </member>
    <member name="T:System.Web.UI.Design.SupportsPreviewControlAttribute">
      <summary>Indicates whether a control designer requires a preview instance of the control at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class and sets the initial value of the <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" /> property.</summary>
      <param name="supportsPreviewControl">The initial value to assign for <see cref="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl" />.</param>
    </member>
    <member name="F:System.Web.UI.Design.SupportsPreviewControlAttribute.Default">
      <summary>Gets an instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class that is set to the default preview value. This field is read-only.</summary>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.Equals(System.Object)">
      <summary>Determines whether the specified object represents the same preview attribute setting as the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <returns>true if <paramref name="obj" /> is a <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> attribute and its value is the same as this instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />; otherwise, false.</returns>
      <param name="obj">The object to compare with the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.GetHashCode">
      <summary>Returns the hash code for this instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class.</summary>
      <returns>A 32-bit signed integer hash code for the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.SupportsPreviewControlAttribute.IsDefaultAttribute">
      <summary>Indicates whether the current instance of the <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> class is set to the default preview attribute value.</summary>
      <returns>true if the current instance of <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> is equal to the default preview attribute value; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl">
      <summary>Gets a value indicating whether the control designer requires a temporary preview control at design time.</summary>
      <returns>true if the designer uses a temporary copy of the associated control for design-time preview; false if the designer uses an instance of the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> control that is contained in the designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedControlDesigner">
      <summary>Extends design-time behavior for template-based server controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.ActiveTemplateEditingFrame">
      <summary>Gets the active template editing frame.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> that is the currently active template editing frame.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.CanEnterTemplateMode">
      <summary>Gets a value indicating whether or not this designer will allow the viewing or editing of templates.</summary>
      <returns>true if the designer will allow the viewing or editing of templates; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>When overridden in a derived class, creates a template editing frame for the specified verb.</summary>
      <returns>The new template editing frame.</returns>
      <param name="verb">The template editing verb to create a template editing frame for. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.DataBindingsEnabled">
      <summary>Gets a value indicating whether the designer allows data binding. </summary>
      <returns>true, if the designer allows data binding; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.EnterTemplateMode(System.Web.UI.Design.ITemplateEditingFrame)">
      <summary>Opens a particular template frame object for editing in the designer.</summary>
      <param name="newTemplateEditingFrame">The template editing frame object to open in the designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.ExitTemplateMode(System.Boolean,System.Boolean,System.Boolean)">
      <summary>Closes the currently active template editing frame after saving any relevant changes.</summary>
      <param name="fSwitchingTemplates">true when switching from one template editing frame to another; otherwise false. </param>
      <param name="fNested">true if this designer is nested (one or more levels) within another control whose designer is also in template editing mode; otherwise false. </param>
      <param name="fSave">true if templates should be saved on exit; otherwise, false. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects, if any.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template's container.</summary>
      <returns>A string representing the data.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <returns>The data source of the container of the specified template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>When overridden in a derived class, gets the template's content.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The template editing frame to retrieve the content of. </param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateEditingVerbs">
      <summary>Gets the template editing verbs available to the designer.</summary>
      <returns>The template editing verbs available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplateFromText(System.String)">
      <summary>Creates a template from the specified text.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> from the specified text.</returns>
      <param name="text">The text to retrieve a template from. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the type of the parent of the template property.</summary>
      <returns>The type of the object that has the template property.</returns>
      <param name="templateName">The name of the template to return the type of the parent for. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.GetTextFromTemplate(System.Web.UI.ITemplate)">
      <summary>Gets a string of text that represents the specified template.</summary>
      <returns>A string that represents the specified template.</returns>
      <param name="template">The <see cref="T:System.Web.UI.ITemplate" /> to convert to text. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="template" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.InTemplateMode">
      <summary>Gets a value indicating whether the designer document is in template mode.</summary>
      <returns>true if the designer document is in template mode; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnBehaviorAttached">
      <summary>Provides an opportunity to perform additional processing when a behavior is attached to the designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Delegate to handle the component changed event.</summary>
      <param name="sender">The object sending the event. </param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnSetParent">
      <summary>Provides an opportunity to perform additional processing when the parent of this designer is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged">
      <summary>Provides an opportunity to perform additional processing when the template mode is changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SaveActiveTemplateEditingFrame">
      <summary>Saves the active template editing frame.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>When overridden in a derived class, sets the specified template's content to the specified content.</summary>
      <param name="editingFrame">The template editing frame to provide content for. </param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The content to set for the template. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedControlDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing a template definition.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> elements.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedControlDesigner.UpdateDesignTimeHtml">
      <summary>Updates the design-time HTML.</summary>
    </member>
    <member name="T:System.Web.UI.Design.TemplatedEditableDesignerRegion">
      <summary>Defines an editable region of content within the design-time markup for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplatedEditableDesignerRegion.#ctor(System.Web.UI.Design.TemplateDefinition)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplatedEditableDesignerRegion" /> class using the provided template definition.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> instance for the template to edit.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.IsSingleInstanceTemplate">
      <summary>Gets or sets whether the template occurs only once per instance of the containing control, such as a header template, or can appear many times according to available data, such as an item template.</summary>
      <returns>true if the template appears only once; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.SupportsDataBinding">
      <summary>Gets or sets a value that indicates whether the template can be bound to a data source.</summary>
      <returns>true if the template represented by the region can be bound to a data source; otherwise, false.</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set this property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplatedEditableDesignerRegion.TemplateDefinition">
      <summary>Gets a <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object describing the template that is referenced by the region.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateDefinition">
      <summary>Provides properties and methods that define a template element in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, and property name.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and whether to limit the template contents to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template content should allow only Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, and <see cref="T:System.Web.UI.WebControls.Style" /> object.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateDefinition.#ctor(System.Web.UI.Design.ControlDesigner,System.String,System.Object,System.String,System.Web.UI.WebControls.Style,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateDefinition" /> class, using the provided designer, template name, template, property name, <see cref="T:System.Web.UI.WebControls.Style" /> object, and whether to limit content to Web server controls.</summary>
      <param name="designer">The parent <see cref="T:System.Web.UI.Design.ControlDesigner" /> object.</param>
      <param name="name">The name of the template.</param>
      <param name="templatedObject">The object that contains the template.</param>
      <param name="templatePropertyName">The property name that represents this template in the Properties list in the design host.</param>
      <param name="style">A <see cref="T:System.Web.UI.WebControls.Style" /> object to apply to each template.</param>
      <param name="serverControlsOnly">A Boolean value indicating whether the template should limit content to Web server controls.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="designer" /> is null,-or-<paramref name="templatedObject" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.AllowEditing">
      <summary>Gets a value that indicates whether the template should enable editing of its contents.</summary>
      <returns>true if editing is allowed; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Content">
      <summary>Gets or sets the HTML markup representing the content of the template.</summary>
      <returns>HTML markup for the content of the template.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.ServerControlsOnly">
      <summary>Retrieves a value indicating whether the template should limit content to Web server controls, as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>true if content is limited to Web server controls; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.Style">
      <summary>Retrieves the style that should be applied to the template as set in the <see cref="Overload:System.Web.UI.Design.TemplateDefinition.#ctor" /> constructor. This property is read-only.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.SupportsDataBinding">
      <summary>Retrieves or sets a value indicating whether the template supports data binding.</summary>
      <returns>true if the template supports data binding; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatedObject">
      <summary>Retrieves the component in which the template resides. This property is read-only.</summary>
      <returns>The component as set when this <see cref="T:System.Web.UI.Design.TemplateDefinition" /> was created.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateDefinition.TemplatePropertyName">
      <summary>Retrieves the property name for the template that the design host should display in the property grid.</summary>
      <returns>The name of the template as it should appear in the Properties list of the design host.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingService">
      <summary>Provides services for editing control templates at design time. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.#ctor(System.ComponentModel.Design.IDesignerHost)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> class with the specified designer host. </summary>
      <param name="designerHost">An <see cref="T:System.ComponentModel.Design.IDesignerHost" />  implementation, used to access components at design time.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[])">
      <summary>Creates a new template editing frame for the specified templated control designer, using the specified name and templates.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame.</param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame.</param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.CreateFrame(System.Web.UI.Design.TemplatedControlDesigner,System.String,System.String[],System.Web.UI.WebControls.Style,System.Web.UI.WebControls.Style[])">
      <summary>Creates a new template editing frame for the specified <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> object, using the specified name, template names, control style, and template styles.</summary>
      <returns>The new <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that will use the template editing frame. </param>
      <param name="frameName">The name of the editing frame that will be displayed on the frame. Typically, this is the same as the <see cref="P:System.ComponentModel.Design.DesignerVerb.Text" /> used as the menu text for the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> that is invoked to create the frame. </param>
      <param name="templateNames">An array of names for the templates that the template editing frame will contain. </param>
      <param name="controlStyle">The control <see cref="T:System.Web.UI.WebControls.Style" /> for the editing frame. </param>
      <param name="templateStyles">An array of type <see cref="T:System.Web.UI.WebControls.Style" /> that represents the template styles for the editing frame. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.Dispose">
      <summary>Releases all resources that are used by the <see cref="T:System.Web.UI.Design.TemplateEditingService" /> object. </summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingService.GetContainingTemplateName(System.Web.UI.Control)">
      <summary>Gets the name of the parent template.</summary>
      <returns>The name of the parent template.</returns>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> for which to get the name of the parent template. </param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingService.SupportsNestedTemplateEditing">
      <summary>Gets a value that indicates whether the service supports nested template editing.</summary>
      <returns>true if the service supports nested template editing; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateEditingVerb">
      <summary>Represents a designer verb that creates a template editing frame, and that can be invoked only by a template editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class with the specified verb text and index.</summary>
      <param name="text">The text to show for the verb on a menu.</param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.#ctor(System.String,System.Int32,System.Web.UI.Design.TemplatedControlDesigner)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> class.</summary>
      <param name="text">The text to show for the verb on a menu. </param>
      <param name="index">An optional integer value that can be used by a designer, typically to indicate the index of the verb within a set of verbs. </param>
      <param name="designer">The <see cref="T:System.Web.UI.Design.TemplatedControlDesigner" /> that can use this verb. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateEditingVerb.Finalize">
      <summary>Attempts to free resources before the object is reclaimed by garbage collection.</summary>
    </member>
    <member name="P:System.Web.UI.Design.TemplateEditingVerb.Index">
      <summary>Gets the index or other user data for the verb.</summary>
      <returns>The index or user data for the verb.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroup">
      <summary>A collection of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects representing the template elements in a Web server control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name.</summary>
      <param name="groupName">The name of the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.#ctor(System.String,System.Web.UI.WebControls.Style)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> class, using the provided name and style.</summary>
      <param name="groupName">The name of the group</param>
      <param name="groupStyle">A <see cref="T:System.Web.UI.WebControls.Style" /> object to be applied to templates in the group.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroup.AddTemplateDefinition(System.Web.UI.Design.TemplateDefinition)">
      <summary>Adds the provided <see cref="T:System.Web.UI.Design.TemplateDefinition" /> to the group.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupName">
      <summary>Gets the name of the group.</summary>
      <returns>The name of the group.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.GroupStyle">
      <summary>Gets the current style for the group.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.Style" /> for the group if set; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.IsEmpty">
      <summary>Gets a value indicating whether there are any templates in the group.</summary>
      <returns>true if there are no templates in the group; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroup.Templates">
      <summary>Gets an array of all template definitions in the group.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateDefinition" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TemplateGroupCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects within a control designer. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Add(System.Web.UI.Design.TemplateGroup)">
      <summary>Adds the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object to the end of the collection.</summary>
      <returns>The index at which the <see cref="T:System.Web.UI.Design.TemplateGroup" /> was added to the collection.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.AddRange(System.Web.UI.Design.TemplateGroupCollection)">
      <summary>Adds the template groups in an existing <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object to the current <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</summary>
      <param name="groups">A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> that contains the groups to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="groups" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Clear">
      <summary>Removes all groups from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Contains(System.Web.UI.Design.TemplateGroup)">
      <summary>Determines whether the specified group is contained within the collection.</summary>
      <returns>true if the <paramref name="group" /> is in the collection; otherwise, false.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.CopyTo(System.Web.UI.Design.TemplateGroup[],System.Int32)">
      <summary>Copies the groups in the collection to a compatible one-dimensional array, starting at the specified index of the target array.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- <paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.-or- The number of elements in the source <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Count">
      <summary>Gets the number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</summary>
      <returns>The number of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects in the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.IndexOf(System.Web.UI.Design.TemplateGroup)">
      <summary>Returns the index of the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object within the collection.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="group" /> within the collection; otherwise, -1, if <paramref name="group" /> is not in the collection.</returns>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Insert(System.Int32,System.Web.UI.Design.TemplateGroup)">
      <summary>Inserts a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object into the collection at the specified index.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="group" />.</param>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.Item(System.Int32)">
      <summary>Gets or sets a <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.TemplateGroup" /> at <paramref name="index" /> in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to get or set in the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="value" /> is less than zero.- or -<paramref name="value" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.Remove(System.Web.UI.Design.TemplateGroup)">
      <summary>Removes the specified <see cref="T:System.Web.UI.Design.TemplateGroup" /> object from the collection. </summary>
      <param name="group">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove from the collection. </param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.Design.TemplateGroup" /> object at the specified index within the collection.</summary>
      <param name="index">The zero-based index within the collection of the <see cref="T:System.Web.UI.Design.TemplateGroup" /> to remove.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.- or -<paramref name="index" /> is greater than the <see cref="P:System.Web.UI.Design.TemplateGroupCollection.Count" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination of the copied groups. The <see cref="T:System.Array" /> must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#Count">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.Count" />.</summary>
      <returns>The number of elements in the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
      <returns>false, if access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> is not synchronized (thread safe); otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
      <returns>An object to use to synchronize access to the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> to use to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
      <returns>The index at which <paramref name="o" /> was added to the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to add to the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
      <returns>true, if <paramref name="o" /> is in the collection; otherwise, false.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
      <returns>The zero-based index of the first occurrence of <paramref name="o" /> within the collection; otherwise, -1, if <paramref name="o" /> is not in the collection.</returns>
      <param name="o">The <see cref="T:System.Web.UI.Design.TemplateGroup" /> to locate within the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
      <param name="index">The zero-based index within the collection at which to insert <paramref name="o" />.</param>
      <param name="o">The object to insert into the collection.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
      <returns>false, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> dynamically increases as new objects are added; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#IsReadOnly">
      <summary>For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</summary>
      <returns>false, if the <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> can be added, modified, and removed; otherwise, true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see the <see cref="T:System.Collections.IList" /> class.</summary>
      <returns>The object at <paramref name="index" /> in the collection.</returns>
      <param name="index">The zero-based index of the object to get in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
      <param name="o">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.TemplateGroupCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
      <param name="index">The zero-based index within the collection of the object to remove.</param>
    </member>
    <member name="T:System.Web.UI.Design.TemplateModeChangedEventArgs">
      <summary>Provides data for a <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised when the template mode changes for a control on the design surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TemplateModeChangedEventArgs.#ctor(System.Web.UI.Design.TemplateGroup)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TemplateModeChangedEventArgs" /> class with the specified template group.</summary>
      <param name="newTemplateGroup">A new template group that is used to initialize the <see cref="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.TemplateModeChangedEventArgs.NewTemplateGroup">
      <summary>Gets the template group that was created when you entered template editing mode.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroup" /> if you entered template editing mode with a new template; otherwise, null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextControlDesigner">
      <summary>Extends design-time behavior for Web server controls that have a Text property that is persisted as inner text.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextControlDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the associated control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.TextDataBindingHandler">
      <summary>Provides a data-binding handler for a data-bound control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.TextDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TextDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Data-binds the specified control.</summary>
      <param name="designerHost">An object implementing <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to data-bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.TransactedChangeCallback">
      <summary>A delegate that refers to a method in a custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> object that is to be called by the <see cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" /> method for implementing property changes in the designer's associated control.</summary>
      <returns>true if the transaction completed successfully; false if the transaction should be rolled back.</returns>
      <param name="context">The method to call when the transaction is invoked.</param>
    </member>
    <member name="T:System.Web.UI.Design.TypeSchema">
      <summary>Represents the structure, or schema, of an object type.</summary>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.TypeSchema" /> class using the provided <see cref="T:System.Type" /> object.</summary>
      <param name="type">A <see cref="T:System.Type" /> that describes an object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.TypeSchema.GetViews">
      <summary>Gets an array of schema descriptors for views into a data source.</summary>
      <returns>An array of instances of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />, or of instances of a class that implements the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> interface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilder">
      <summary>Starts a URL editor that allows a user to select or create a URL. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String)">
      <summary>Creates a UI to create or pick a URL.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window. </param>
      <param name="initialUrl">The initial URL to be shown in the picker window. </param>
      <param name="caption">The caption of the picker window. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.ComponentModel.IComponent,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> whose site is to be used to access design-time services. </param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window. </param>
      <param name="initialUrl">The initial URL to be shown in the picker window. </param>
      <param name="caption">The caption of the picker window. </param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window. </param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection. </param>
    </member>
    <member name="M:System.Web.UI.Design.UrlBuilder.BuildUrl(System.IServiceProvider,System.Windows.Forms.Control,System.String,System.String,System.String,System.Web.UI.Design.UrlBuilderOptions)">
      <summary>Creates a UI to create or pick a URL, using the specified <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> object.</summary>
      <returns>The URL returned from the UI.</returns>
      <param name="serviceProvider">The <see cref="T:System.IServiceProvider" /> to be used to access design-time services.</param>
      <param name="owner">The <see cref="T:System.Windows.Forms.Control" /> used as the parent for the picker window.</param>
      <param name="initialUrl">The initial URL to be shown in the picker window.</param>
      <param name="caption">The caption of the picker window.</param>
      <param name="filter">The filter string to use to optionally filter the files displayed in the picker window.</param>
      <param name="options">A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> indicating the options for URL selection.</param>
    </member>
    <member name="T:System.Web.UI.Design.UrlBuilderOptions">
      <summary>Defines identifiers for settings of a <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.None">
      <summary>Use no additional options for the <see cref="T:System.Web.UI.Design.UrlBuilder" />.</summary>
    </member>
    <member name="F:System.Web.UI.Design.UrlBuilderOptions.NoAbsolute">
      <summary>Build a URL that references a path relative to the current path, rather than one that references a fully qualified, absolute path.</summary>
    </member>
    <member name="T:System.Web.UI.Design.UrlEditor">
      <summary>Provides a user interface for selecting a URL.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UrlEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption to display on the selection dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the editor style provided by the <see cref="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" /> method.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style of the <see cref="M:System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>One of the <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> values indicating the provided editing style. If the method is not supported, this method will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
    </member>
    <member name="P:System.Web.UI.Design.UrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.UserControlDesigner">
      <summary>Provides designer functionality for user controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.ActionLists">
      <summary>Gets the action list collection for the user control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> that contains the action list tags for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlDesigner.AllowResize">
      <summary>Gets a value indicating whether the user control can be resized.</summary>
      <returns>false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.UserControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the user control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.Control.ID" /> property of a child control is empty or null.</exception>
    </member>
    <member name="T:System.Web.UI.Design.UserControlFileEditor">
      <summary>Provides a dialog box for selecting files to edit at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.UserControlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.UserControlFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Caption">
      <summary>Gets the caption for the dialog box.</summary>
      <returns>The caption for the editor window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.UserControlFileEditor.Filter">
      <summary>Gets the file name filter string used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that filters the list of files available in the dialog box, such as "*.txt".</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEvent">
      <summary>Represents the kind of event that has occurred on a view of a control at design time. This class cannot be inherited. </summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Click">
      <summary>Indicates that a view event was raised for a click on a designer region.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.Paint">
      <summary>Indicates that a view event was raised for drawing a control on the design surface.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewEvent.TemplateModeChanged">
      <summary>Indicates that a view event was raised for changing the template mode of a control designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewEventArgs.#ctor(System.Web.UI.Design.ViewEvent,System.Web.UI.Design.DesignerRegion,System.EventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewEventArgs" /> class for the type of view event on the design surface. </summary>
      <param name="eventType">The type of action that raised the event; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventType" />.</param>
      <param name="region">The designer region that the action applies to; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.Region" />.</param>
      <param name="eventArgs">The event arguments associated with <paramref name="eventType" />; used to initialize the <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventArgs">
      <summary>Gets the event arguments that are associated with the action that raised the event.</summary>
      <returns>An <see cref="P:System.Web.UI.Design.ViewEventArgs.EventArgs" /> that contains additional event data that is specific to the type of event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.EventType">
      <summary>Gets the type of action that raised the event.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ViewEvent" /> that specifies the type of action that raised the event.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewEventArgs.Region">
      <summary>Gets the designer region that the event applies to.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerRegion" /> that the action applies to.</returns>
    </member>
    <member name="T:System.Web.UI.Design.ViewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Web.UI.Design.IControlDesignerView.ViewEvent" /> event that is raised by visual design tools, such as Visual Studio 2005, implementing the <see cref="T:System.Web.UI.Design.IControlDesignerView" /> interface. This class cannot be inherited.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Web.UI.Design.ViewEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.ViewFlags">
      <summary>Indicates which features are enabled with the <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> method of a designer.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.CustomPaint">
      <summary>Enables painting events for displaying a custom control at design time.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete">
      <summary>Postpones all events until after the control is completely loaded.</summary>
    </member>
    <member name="F:System.Web.UI.Design.ViewFlags.TemplateEditing">
      <summary>Enables template editing at design time.</summary>
    </member>
    <member name="T:System.Web.UI.Design.ViewRendering">
      <summary>Contains the design-time markup for content and regions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content and regions.</summary>
      <param name="content">HTML markup.</param>
      <param name="regions">A collection that contains the regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.ViewRendering.#ctor(System.String,System.Web.UI.Design.DesignerRegionCollection,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.ViewRendering" /> class by using the specified content, regions, and visibility mode.</summary>
      <param name="content">The HTML markup.</param>
      <param name="regions">A collection of regions</param>
      <param name="visible">A value that indicates whether the control is rendered.</param>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Content">
      <summary>Gets the design-time HTML markup.</summary>
      <returns>The HTML markup to display at design time.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Regions">
      <summary>Gets a collection of <see cref="T:System.Web.UI.Design.DesignerRegion" /> objects at design time.</summary>
      <returns>A collection of regions.</returns>
    </member>
    <member name="P:System.Web.UI.Design.ViewRendering.Visible">
      <summary>Gets a value that indicates whether the control is visible.</summary>
      <returns>true if the control is rendered; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControlToolboxItem">
      <summary>Provides a base class for a Web server control <see cref="T:System.Drawing.Design.ToolboxItem" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object and <see cref="T:System.Runtime.Serialization.StreamingContext" />.</summary>
      <param name="info">A SerializationInfo object containing information needed to instantiate the Web control through deserialization.</param>
      <param name="context">A StreamingContext object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" /> class using the provided type.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the tool for this toolbox item. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)">
      <summary>Creates objects from each type contained in this <see cref="T:System.Drawing.Design.ToolboxItem" />, and adds them to the specified designer.</summary>
      <returns>An array of created <see cref="T:System.ComponentModel.IComponent" /> objects.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
      <exception cref="T:System.Exception">The <see cref="M:System.Web.UI.Design.WebControlToolboxItem.CreateComponentsCore(System.ComponentModel.Design.IDesignerHost)" /> method is only available in Windows Forms.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Deserialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Loads the state of the toolbox item from the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that describes the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolAttributeValue(System.ComponentModel.Design.IDesignerHost,System.Type)">
      <summary>Gets the value of the specified type of attribute of the toolbox item.</summary>
      <returns>The value of the specified type of attribute.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
      <param name="attributeType">The type of attribute to retrieve the value of. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="attributeType" /> parameter is not a <see cref="T:System.Web.UI.PersistChildrenAttribute" />. </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolHtml(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the HTML for the Web control that the tool creates.</summary>
      <returns>The HTML for the Web control that the tool creates.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.GetToolType(System.ComponentModel.Design.IDesignerHost)">
      <summary>Gets the type of this toolbox item.</summary>
      <returns>The <see cref="T:System.Type" /> of this toolbox item.</returns>
      <param name="host">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the current design document. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Initialize(System.Type)">
      <summary>Initializes this toolbox item.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the Web server control toolbox item. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControlToolboxItem.Serialize(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Saves the state of the toolbox item to the specified serialization information object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> used to save the state of the <see cref="T:System.Web.UI.Design.WebControlToolboxItem" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that indicates the serialization stream characteristics.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsDesignerActionService">
      <summary>Establishes a design-time service that manages the collection of <see cref="T:System.ComponentModel.Design.DesignerActionItem" /> objects for a component.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.#ctor(System.IServiceProvider)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebFormsDesignerActionService" /> class using the provided reference to the design host.</summary>
      <param name="serviceProvider">A reference to the design host.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsDesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)">
      <summary>Gets the smart-tag item lists that are associated with a component.</summary>
      <param name="component">A reference to the control associated with the designer.</param>
      <param name="actionLists">The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> to add the associated smart tags to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsReferenceManager">
      <summary>Provides a base class for accessing the types, directives, and controls in the current Web project document. This class must be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetRegisterDirectives">
      <summary>Gets the register directives for the current project document.</summary>
      <returns>A collection of strings representing the register directives defined in the current document.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetTagPrefix(System.Type)">
      <summary>Gets the tag prefix for the specified object type.</summary>
      <returns>The tag prefix for the specified object type, if found; otherwise, null.</returns>
      <param name="objectType">The type of the object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetType(System.String,System.String)">
      <summary>Gets the object type with the specified tag prefix and tag name.</summary>
      <returns>The <see cref="T:System.Type" /> of the object with the specified tag prefix and name, if found; otherwise, null.</returns>
      <param name="tagPrefix">The tag prefix of the type to retrieve.</param>
      <param name="tagName">The tag name of the type to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.GetUserControlPath(System.String,System.String)">
      <summary>Gets the relative URL path for the user control with the specified tag prefix and tag name.</summary>
      <returns>A string representing the relative URL path for the specified user control, if found; otherwise, null.</returns>
      <param name="tagPrefix">The tag prefix of the user control to retrieve.</param>
      <param name="tagName">The tag name of the user control to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsReferenceManager.RegisterTagPrefix(System.Type)">
      <summary>Adds a tag prefix for the specified type.</summary>
      <returns>The tag prefix string.</returns>
      <param name="objectType">The type to add a tag prefix for in the current document.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebFormsRootDesigner">
      <summary>Provides a base class for the design-time functionality of a Web Forms page and allows access to and manipulation of components and controls that are contained within the Web Forms page at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddClientScriptToDocument(System.Web.UI.Design.ClientScriptItem)">
      <summary>When overridden in a derived class, adds a client script element to the current Web Forms page.</summary>
      <param name="scriptItem">A <see cref="T:System.Web.UI.Design.ClientScriptItem" /> to add to the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.AddControlToDocument(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.Design.ControlLocation)">
      <summary>When overridden in a derived class, adds a Web server control to the Web Forms page.</summary>
      <returns>The ID of the control that was added.</returns>
      <param name="newControl">The control to add to the Web Forms page.</param>
      <param name="referenceControl">The control relative to which <paramref name="newControl" /> is added.</param>
      <param name="location">A <see cref="T:System.Web.UI.Design.ControlLocation" /> value that indicates the location for <paramref name="newControl" /> relative to <paramref name="referenceControl" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Component">
      <summary>Gets or sets the component that this designer is designing.</summary>
      <returns>The component managed by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateDesignerActionService(System.IServiceProvider)">
      <summary>Returns a design-time <see cref="T:System.ComponentModel.Design.DesignerActionService" /> object.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionService" />.</returns>
      <param name="serviceProvider">A design host, such as Visual Studio 2005, cast as an <see cref="T:System.IServiceProvider" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.CreateUrlResolutionService">
      <summary>Returns an <see cref="T:System.Web.UI.IUrlResolutionService" /> that resolves relative URLs.</summary>
      <returns>An <see cref="T:System.Web.UI.IUrlResolutionService" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.CurrentCulture">
      <summary>Gets the culture information for the current thread.</summary>
      <returns>A <see cref="T:System.Globalization.CultureInfo" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.DocumentUrl">
      <summary>When overridden in a derived class, gets the URL at which the Web Forms page is located. </summary>
      <returns>The URL at which the Web Forms page is located; otherwise, null, if the Web Forms page has no associated URL.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Finalize">
      <summary>Frees the resources of the current <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object before it is reclaimed by the garbage collector.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateEmptyDesignTimeHtml(System.Web.UI.Control)">
      <summary>Generates empty HTML markup for a control at design time.</summary>
      <returns>HTML markup for an empty control.</returns>
      <param name="control">The control to generate HTML markup for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GenerateErrorDesignTimeHtml(System.Web.UI.Control,System.Exception,System.String)">
      <summary>Generates HTML markup that is used to display an error message at design time by using the specified control, exception, and message.</summary>
      <returns>HTML markup for a control and exception information.</returns>
      <param name="control">The control that raised the exception.-or- null.</param>
      <param name="e">The exception. -or-null.</param>
      <param name="errorMessage">A message to add to the exception message.-or- An empty string (“”).</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetClientScriptsInDocument">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />  object that contains all client script items that are on the page.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.ClientScriptItemCollection" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)">
      <summary>When overridden in a derived class, returns both the current design-time view and the HTML markup for the specified control.</summary>
      <param name="control">The control to provide the view and tag for.</param>
      <param name="view">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="view" /> contains an IControlDesignerView object that provides access to the visual representation and content of a control at design time. <paramref name="view" /> is passed uninitialized.</param>
      <param name="tag">When the <see cref="M:System.Web.UI.Design.WebFormsRootDesigner.GetControlViewAndTag(System.Web.UI.Control,System.Web.UI.Design.IControlDesignerView@,System.Web.UI.Design.IControlDesignerTag@)" /> method returns, <paramref name="tag" /> contains an IControlDesignerTag object that provides access to the HTML element for the control's control designer. <paramref name="tag" /> is passed uninitialized.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetService(System.Type)">
      <summary>Returns the requested service.</summary>
      <returns>The requested service; otherwise, null, if the service cannot be resolved.</returns>
      <param name="serviceType">The type of service to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Returns a view object that is determined by the provided <see cref="T:System.ComponentModel.Design.ViewTechnology" /> object.</summary>
      <returns>An object containing the current view of the component.</returns>
      <param name="viewTechnology">A <see cref="T:System.ComponentModel.Design.ViewTechnology" /> obtained from the <see cref="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies" /> property.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" /> object using the specified component.</summary>
      <param name="component">The component that this designer is designing.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsDesignerViewLocked">
      <summary>When overridden in a derived class, gets a value indicating whether the designer view is locked.</summary>
      <returns>true, if the designer view is locked; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.IsLoading">
      <summary>When overridden in a derived class, gets a value indicating whether the Web Forms page is still loading.</summary>
      <returns>true, if the Web Forms page is loading; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete">
      <summary>Occurs when the designer completes loading the Web Forms page.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.OnLoadComplete(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebFormsRootDesigner.LoadComplete" /> event when the Web Forms page is completely loaded.</summary>
      <param name="e">An <see cref="T:System.EventArgs" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to change or remove items from the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterAttributes(System.Collections.IDictionary)">
      <summary>Allows a designer to add to the set of attributes that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="attributes">The attributes for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of events that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The events for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Allows a designer to add items to the set of properties that the designer exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.ReferenceManager">
      <summary>When overridden in a derived class, gets a <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> object that has information about the current Web Forms page.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.WebFormsReferenceManager" /> containing information about the current Web Forms page.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveClientScriptFromDocument(System.String)">
      <summary>Removes the specified client script from the document at design time.</summary>
      <param name="clientScriptId">The identifier for the previously registered client script.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.RemoveControlFromDocument(System.Web.UI.Control)">
      <summary>When overridden in a derived class, removes the specified control from the Web Forms page.</summary>
      <param name="control">The control to remove from the Web Forms page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.ResolveUrl(System.String)">
      <summary>Converts a relative URL into a fully qualified URL.</summary>
      <returns>A fully qualified URL resolved from <paramref name="relativeUrl" />.</returns>
      <param name="relativeUrl">A relative URL for a resource on the site.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="relativeUrl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.SetControlID(System.Web.UI.Control,System.String)">
      <summary>Sets the ID property of the specified control with the specified string.</summary>
      <param name="control">The control on which to set the ID.</param>
      <param name="id">The string to set as the ID for the control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display.</summary>
      <returns>An array of supported <see cref="T:System.ComponentModel.Design.ViewTechnology" /> values.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#DoDefaultAction">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesigner.DoDefaultAction" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesigner#Verbs">
      <summary>Gets or sets the design-time verbs that are supported by the designer. For a description of this member, see <see cref="P:System.ComponentModel.Design.IDesigner.Verbs" />.</summary>
      <returns>The design-time verbs that are supported by the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PostFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PostFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterAttributes(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterAttributes(System.Collections.IDictionary)" />.</summary>
      <param name="attributes">The attribute objects for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterEvents(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterEvents(System.Collections.IDictionary)" />.</summary>
      <param name="events">The event descriptor objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IDesignerFilter#PreFilterProperties(System.Collections.IDictionary)">
      <summary>For a description of this member, see <see cref="M:System.ComponentModel.Design.IDesignerFilter.PreFilterProperties(System.Collections.IDictionary)" />.</summary>
      <param name="properties">The property descriptor objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#GetView(System.ComponentModel.Design.ViewTechnology)">
      <summary>Gets a view object for the specified view technology. For a description of this member, see <see cref="M:System.ComponentModel.Design.IRootDesigner.GetView(System.ComponentModel.Design.ViewTechnology)" />.</summary>
      <returns>The view object for the specified view technology.</returns>
      <param name="viewTechnology"> The view technology.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.System#ComponentModel#Design#IRootDesigner#SupportedTechnologies">
      <summary>Gets an array of technologies that the designer component can support for its display. For a description of this member, see <see cref="P:System.ComponentModel.Design.IRootDesigner.SupportedTechnologies" />.</summary>
      <returns>An array of technologies that the designer component can support for its display.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebFormsRootDesigner.System#IDisposable#Dispose">
      <summary>For a description of this member, see <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebFormsRootDesigner.Verbs">
      <summary>Gets the design-time verbs that are supported by the designer.</summary>
      <returns>An array of <see cref="T:System.ComponentModel.Design.DesignerVerb" /> objects supported by the designer; otherwise, null, if the component has no verbs.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDataFileEditor">
      <summary>Provides a design-time user interface for selecting an XML data file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDataFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlDataFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlDataFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlDocumentSchema">
      <summary>Represents the structure, or schema, of an <see cref="T:System.Xml.XmlDocument" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.XmlDocumentSchema" /> class using a specified <see cref="T:System.Xml.XmlDocument" /> and an XPath string.</summary>
      <param name="xmlDocument">An instance of an <see cref="T:System.Xml.XmlDocument" /> object.</param>
      <param name="xPath">An XPath string identifying the child nodes of the document root.</param>
    </member>
    <member name="M:System.Web.UI.Design.XmlDocumentSchema.GetViews">
      <summary>Gets an array containing information about each child node starting at the node identified by the <paramref name="xPath" /> parameter in the constructor, or each child node starting at the document root if the <paramref name="xPath" /> parameter is empty.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XmlFileEditor">
      <summary>Provides a user interface for selecting an XML file using a standard <see cref="T:System.Windows.Forms.OpenFileDialog" /> box.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XmlFileEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this method should return the same object it was passed.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="provider">A service provider object through which editing services may be obtained. </param>
      <param name="value">An instance of the value being edited. </param>
    </member>
    <member name="M:System.Web.UI.Design.XmlFileEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> enumeration value indicating the provided editing style. If the method is not supported in the specified context, this will return the <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" /> identifier.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.XmlUrlEditor">
      <summary>Provides a user interface for selecting a URL that indicates the location of an XML file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XmlUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XmlUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XmlUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XsdSchemaFileEditor">
      <summary>Provides a design-time user interface for selecting an XML schema definition file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XsdSchemaFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XsdSchemaFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XsdSchemaFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which are used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslTransformFileEditor">
      <summary>Provides a design-time user interface for selecting an XML transform file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslTransformFileEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.XslTransformFileEditor" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Caption">
      <summary>Gets the caption to display on the selection dialog box.</summary>
      <returns>The caption text to display on the selection dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslTransformFileEditor.Filter">
      <summary>Gets the URL filter options for the editor, which is used to filter the items that appear in the URL selection dialog box.</summary>
      <returns>A string that represents one or more URL filter options for the dialog box.</returns>
    </member>
    <member name="T:System.Web.UI.Design.XslUrlEditor">
      <summary>Provides a user interface for selecting an URL that indicates the location of an XSL file.</summary>
    </member>
    <member name="M:System.Web.UI.Design.XslUrlEditor.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.Design.XslUrlEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Caption">
      <summary>Gets the caption to display on the selection dialog window.</summary>
      <returns>The caption to display on the selection dialog window.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Filter">
      <summary>Gets the file name filter string for the editor. This is used to determine the items that appear in the file list of the dialog box.</summary>
      <returns>A string that contains information about the file filtering options available in the dialog box.</returns>
    </member>
    <member name="P:System.Web.UI.Design.XslUrlEditor.Options">
      <summary>Gets the options for the URL builder to use.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.UrlBuilderOptions" /> that indicates the options for the URL builder to use.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AccessDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.DataFile">
      <summary>Implements a designer property to shadow the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name and path of the data file associated with the <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.String" /> that contains the design-time connection string for the associated <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AccessDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.AdRotatorDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.AdRotator" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.AdRotatorDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.AdRotatorDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control on the design surface.</summary>
      <returns>The markup that represents the control on the design surface.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner">
      <summary>Provides design-time support in a visual designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ConnectToDataSource">
      <summary>When overridden in a derived class, typically unhooks events from the previous data source, and then attaches new events to the new data source. </summary>
      <returns>true if a connection to a new data source was performed, typically; false if the old and new data sources are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.CreateDataSource">
      <summary>When overridden in a derived class, creates a new data source for the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>When overridden in a derived class, performs the necessary actions to set up the associated control that is derived from the <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> class.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> with which this designer is associated.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property for the associated control.</summary>
      <returns>The data-binding expression used by the associated control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSourceID">
      <summary>Gets or sets the value of the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object.</summary>
      <returns>The ID of the <see cref="T:System.Web.UI.DataSourceControl" /> associated with the underlying <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>When overridden in a derived class, unhooks events from the current data source. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner" /> object, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetDesignTimeHtml">
      <summary>Generates the markup that is used to render the control at design time. </summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetEmptyDesignTimeHtml">
      <summary>Provides the markup that is used to render the control at design time if the control is empty or if the data source cannot be retrieved. </summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the control at design time when an error has occurred.</summary>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object changes. </summary>
      <param name="forceUpdateView">true to force the update of design-time markup; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.OnSchemaRefreshed">
      <summary>Called when the data source of the associated <see cref="T:System.Web.UI.WebControls.BaseDataBoundControl" /> object loads a new schema. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The <see cref="T:System.Collections.IDictionary" /> containing the properties to filter.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.ShowCreateDataSourceDialog(System.Web.UI.Design.ControlDesigner,System.Type,System.Boolean,System.String@)">
      <summary>In a design host, such as Visual Studio 2005, displays a dialog box to assist the user in creating a data source.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> object.</returns>
      <param name="controlDesigner">A reference to this designer.</param>
      <param name="dataSourceType">The type of data source.</param>
      <param name="configure">true to enable editing of the configuration, or false to disable configuration editing.</param>
      <param name="dataSourceID">The ID of a <see cref="T:System.Web.UI.DataSourceControl" /> control on the page.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor">
      <summary>Provides a component editor base class for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListComponentEditor" /> class.</summary>
      <param name="initialPage">The index in the array of page control types, of the initial page to display. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Edits the specified component by using the specified context descriptor and parent window.</summary>
      <returns>true the component was successfully edited; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that can be used to gain additional context information. </param>
      <param name="obj">An <see cref="T:System.Object" /> implementing the <see cref="T:System.ComponentModel.IComponent" />, which represents the component to edit. </param>
      <param name="parent">The <see cref="T:System.Windows.Forms.IWin32Window" /> that represents the parent window. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>Gets the index of the initial page to display in the component editor.</summary>
      <returns>The index of the initial page in the array.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseDataListDesigner">
      <summary>Provides a base class for components that provide design-time support in a designer host for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseDataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataKeyField">
      <summary>Gets or sets the value of the data key field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataMember">
      <summary>Gets or sets the value of the data member field of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSource">
      <summary>Gets or sets the value of the data source property of the associated control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> value of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DataSourceID">
      <summary>Gets or sets the designer's version of the data source ID property and is used to shadow the corresponding property of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> that is the data source ID of the associated control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control. </summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> representing the default view of the data source. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the designer and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
      <param name="selectedDataSource">An object implementing an <see cref="T:System.Collections.IEnumerable" /> that is used as a template for the data format. </param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source data should contain. </param>
      <param name="dummyDataSource">true if the returned data source contains dummy data; false if the returned data source contains data from an actual data source. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetDesignTimeDataSource(System.Int32,System.Boolean@)">
      <summary>Generates an object that can be used as a data source at design time.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface that serves as a data source for use at design time.</returns>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
      <param name="dummyDataSource">true if the returned data source contains dummy data; false if the returned data source contains data from an actual data source. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> of the associated control, resolved to the <see cref="P:System.Web.UI.WebControls.BaseDataList.DataMember" /> parameter; otherwise, null if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property of the associated control; otherwise, null if a data source is not found.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.GetTemplateContainerDataSource(System.String)">
      <summary>Gets the data source of the template's container.</summary>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface containing a design-time <see cref="P:System.Web.UI.WebControls.BaseDataList.DataSource" /> property.</returns>
      <param name="templateName">A <see cref="T:System.String" /> that specifies the name of the template for which to get the data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.BaseDataList" />, which implements an <see cref="T:System.ComponentModel.IComponent" />. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.InvokePropertyBuilder(System.Int32)">
      <summary>Invokes a component editor for the associated control.</summary>
      <param name="initialPage">The index of the page with which to initialize the component editor. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Handles the AutoFormat event.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that raised the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)">
      <summary>Called when an automatic formatting scheme has been applied to the associated control.</summary>
      <param name="appliedAutoFormat">A <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> object that defines a style.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The <see cref="T:System.Object" /> that is the source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnPropertyBuilder(System.Object,System.EventArgs)">
      <summary>Represents the method that handles the property-builder event.</summary>
      <param name="sender">An <see cref="T:System.Object" /> that is the source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnStylesChanged">
      <summary>Can be overridden to implement functionality that should occur when a style of the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Can be overridden to implement functionality that should occur when the designer template-editing verbs have changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control. </summary>
      <param name="properties">A collection implementing an <see cref="T:System.Collections.IDictionary" /> interface of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>true if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">true to disable data-binding events until after the schema has been refreshed; false to enable the events.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BaseDataListDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner">
      <summary>Provides design-time support in a visual designer for Web server controls that are derived from the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BaseValidatorDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control to render on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.BaseValidator" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BaseValidatorDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add properties in the properties grid, or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.BulletedListDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.BulletedList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.BulletedListDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.BulletedListDesigner.PostFilterEvents(System.Collections.IDictionary)">
      <summary>Allows the designer to filter the set of events that the associated control will expose at design time.</summary>
      <param name="events">The <see cref="T:System.Collections.IDictionary" /> that contains the <see cref="T:System.ComponentModel.EventDescriptor" /> objects representing the events of the control. The keys in the <see cref="T:System.Collections.IDictionary" /> are event names. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.BulletedListDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ButtonDesigner">
      <summary>Used to provide design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Button" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ButtonDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ButtonDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Button" /> at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog">
      <summary>Provides an Auto Format dialog box for a <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.#ctor(System.Web.UI.WebControls.Calendar)">
      <summary>Creates a new AutoFormatPage instance associated with a <see cref="T:System.Web.UI.WebControls.Calendar" /> instance for a designer host.</summary>
      <param name="calendar">The <see cref="T:System.Web.UI.WebControls.Calendar" />  instance for which the AutoFormatePage is displayed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.DoDelayLoadActions">
      <summary>Executes any initialization that was delayed until the first idle time </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnActivated(System.Object,System.EventArgs)">
      <summary>Occurs when the <see cref="T:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog" /> is activated.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnOKClicked(System.Object,System.EventArgs)">
      <summary>Handles changes in the pre-defined schema choices </summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.OnSelChangedScheme(System.Object,System.EventArgs)">
      <summary>Handles changes in the predefined schema choices </summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that provides information about the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarAutoFormatDialog.SaveComponent">
      <summary>Saves any changes into the component </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CalendarDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Calendar" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CalendarDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CalendarDesigner.AutoFormats">
      <summary>Gets all the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object containing the <see cref="T:System.Web.UI.Design.DesignerAutoFormat" /> objects available for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> object for this designer. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CalendarDesigner.OnAutoFormat(System.Object,System.EventArgs)">
      <summary>Called when an auto-format scheme has been applied to the control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">The <see cref="T:System.EventArgs" /> object that contains the event data. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.ActionLists">
      <summary>Gets the action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AllowResize">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control allows resizing.</summary>
      <returns>true if the control allows resizing; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.AutoFormats">
      <summary>Gets the collection of automatic format schemes that will be displayed in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.ChangePassword" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which a definition of the current view of the associated control has been added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the persisted form of the current template of the associated control.</summary>
      <returns>A <see cref="T:System.String" /> containing the persisted form of the current template of the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that is not used by this <see cref="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" /> override.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the markup that renders to a placeholder containing information about the error that occurred while attempting to create or render the associated control at design time.</summary>
      <returns>The markup for the placeholder that contains information about the specified exception.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown while creating or rendering the associated control. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.ChangePassword" />, which implements <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove or add additional properties for display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.ChangePasswordDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ChangePasswordDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the value of a template of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to set content for.</param>
      <param name="content">A <see cref="T:System.String" /> containing a persisted control or template.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the control that is associated with this designer.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the associated <see cref="T:System.Web.UI.WebControls.ChangePassword" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ChangePasswordDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CheckBoxDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CheckBox" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CheckBoxDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CheckBoxDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CompositeControlDesigner">
      <summary>Extends design-time behavior for controls that implement the methods of the <see cref="T:System.Web.UI.WebControls.CompositeControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.CreateChildControls">
      <summary>Creates the child controls of this <see cref="T:System.Web.UI.WebControls.CompositeControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CompositeControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" />, which is the control associated with this designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Content" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized on the visual designer surface.</summary>
      <returns>true if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time from the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>The markup that is used to represent the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> associated with the design-time markup generated by <see cref="M:System.Web.UI.Design.WebControls.ContentDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <returns>The persistence string for the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> from which to get the content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.GetPersistenceContent">
      <summary>Gets the inner markup of the control.</summary>
      <returns>The inner markup of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PostFilterProperties(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to change or remove items from the set of properties that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the class of the component. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.PreFilterEvents(System.Collections.IDictionary)">
      <summary>When overridden in a derived class, allows a designer to add items to the set of events that it exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</summary>
      <param name="events">The <see cref="T:System.ComponentModel.EventDescriptor" /> objects that represent the events of the class of the component. The keys in the dictionary of events are event names.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in which to set the content.</param>
      <param name="content">The persistence string for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> content.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.ContentPlaceHolder" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.AllowResize">
      <summary>Gets a value indicating whether the control can be resized.</summary>
      <returns>true if the control can be resized; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the HTML that is used to represent the control at design time using the <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to use for generating design-time HTML.</param>
      <exception cref="T:System.InvalidOperationException">The root component is not a <see cref="T:System.Web.UI.MasterPage" /> instance.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <returns>The content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object from which to extract content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.GetPersistenceContent">
      <summary>Gets the persistable inner HTML of the control.</summary>
      <returns>The persistable inner HTML of the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ContentPlaceHolderDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> instance to set.</param>
      <param name="content">The new content for the <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates a <see cref="T:System.Web.UI.Design.DesignerRegion" /> object for each step associated with the underlying wizard control, and then adds it to the specified <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object.</summary>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which regions associated with the wizard control are added. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Converts the child controls associated with the underlying wizard control to a custom navigation template.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML that provides information about the specified exception. This method is typically called after an error has been encountered at design time.</summary>
      <returns>The HTML for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control element being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Exposes the properties associated with each default step through the property grid on the designer tool.</summary>
      <param name="properties">The <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that represent the properties of the component's base class. The keys in the dictionary of properties are property names.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer uses the <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> control itself to generate the design-time HTML or uses a temporarily created copy. </summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor">
      <summary>Provides an editor in a design host such as Visual Studio 2005 to edit the <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> object of a <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the items in the collection associated with the collection editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CanRemoveInstance(System.Object)">
      <summary>Returns a value indicating whether a provided object can be removed from the collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.WizardStep" /> can be removed from the collection; otherwise, false.</returns>
      <param name="value">A <see cref="T:System.Web.UI.WebControls.WizardStep" /> object to determine whether it can be removed from the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a modal dialog box for editing the contents of a collection of <see cref="T:System.Web.UI.WebControls.CreateUserWizardStep" /> objects.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.CreateUserWizardStepCollectionEditor.HelpTopic">
      <summary>Gets the Help keyword used to display the Help topic or topic list when users click the Help button or press the F1 key in the editor's dialog box.</summary>
      <returns>The Help keyword to display the Help topic or topic list when Help is requested from the editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner">
      <summary>Provides a base class for design-time support for controls that derive from <see cref="T:System.Web.UI.WebControls.DataBoundControl" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ActionLists">
      <summary>Gets the <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.ConnectToDataSource">
      <summary>Disconnects events from the previous data source and connects them to the current data source.</summary>
      <returns>true if the data-bound control connected to a new data source; false if the data source did not change.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.CreateDataSource">
      <summary>Invokes the standard dialog box to create a new data source control, and sets the new data source control's ID to the <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID" /> property of the data-bound control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to the data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DataBoundControl" /> object to bind to the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember">
      <summary>Gets the shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property of the underlying data-bound control.</summary>
      <returns>The shadowed <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataSourceDesigner">
      <summary>Gets the designer of the data source of the underlying data-bound control.</summary>
      <returns>The designer of the data source of the underlying data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Disconnects the data-bound control from data source events.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataBoundControlDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets the design-time data source from either the associated DataSourceDesigner or the DataSource property.</summary>
      <returns>An object that implements an <see cref="T:System.Collections.IEnumerable" /> interface referencing the design-time data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.GetSampleDataSource">
      <summary>Gets dummy sample data to render the data-bound control on the design surface if sample data cannot be created from the DataSourceDesigner or DataSource properties.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface containing dummy sample data used to render the data-bound control on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Overridden by the designer to shadow run-time properties of the data-bound control with corresponding properties implemented by the designer.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties to filter.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.SampleRowCount">
      <summary>Gets the number of rows that the data-bound control displays on the design surface.</summary>
      <returns>The number of rows that the data-bound control displays on the design surface.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" />.</summary>
      <returns>true if the designer can refresh the data source; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" />. </summary>
      <param name="preferSilent">Indicates whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" />.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetResolvedSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetResolvedSelectedDataSource" />.</summary>
      <returns>The selected data member from the selected data source, if the control allows the user to select an IListSource object (such as a <see cref="T:System.Data.DataSet" /> object) for the data source, and provides a <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataMember" /> property to select a particular list (or <see cref="T:System.Data.DataTable" /> object) within the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataBoundControlDesigner.System#Web#UI#Design#IDataSourceProvider#GetSelectedDataSource">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceProvider.GetSelectedDataSource" />.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface containing the design-time <see cref="P:System.Web.UI.WebControls.BaseDataBoundControl.DataSource" /> property of the associated control, or null if a data source is not found.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value indicating whether the designer should include "Choose a data source" in its action list.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner">
      <summary>Provides design-time support in a visual designer for adding and editing data fields in a data-bound control, such as <see cref="T:System.Web.UI.WebControls.GridView" /> or <see cref="T:System.Web.UI.WebControls.DetailsView" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField">
      <summary>When overridden in a derived class, creates an empty field object.</summary>
      <returns>An empty field object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateField(System.Web.UI.Design.IDataSourceFieldSchema)">
      <summary>When overridden in a derived class, creates a new field object using the specified data field information.</summary>
      <returns>A new field object.</returns>
      <param name="fieldSchema">Schema information that contains the structure of a data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.CreateTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, creates a <see cref="T:System.Web.UI.WebControls.TemplateField" /> field for the specified data field.</summary>
      <returns>The new template field.</returns>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.DefaultNodeText">
      <summary>When overridden in a derived class, gets the default text that is displayed for the data field in the fields editor.</summary>
      <returns>The default text that is displayed for the data field in the fields editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNewDataSourceName(System.Type,System.Web.UI.WebControls.DataBoundControlMode)">
      <summary>Gets an unique ID for a control that is created when a data field is converted into a <see cref="T:System.Web.UI.WebControls.TemplateField" />.</summary>
      <returns>A unique ID for the control.</returns>
      <param name="controlType">The type of the control that will be created.</param>
      <param name="mode">The data entry mode for the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetNodeText(System.Web.UI.WebControls.DataControlField)">
      <summary>When overridden in a derived class, gets the name that is displayed for the data field in the fields editor.</summary>
      <returns>The name that is displayed for the data field in the fields editor.</returns>
      <param name="dataControlField">The data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetService(System.Type)">
      <summary>Gets the service object of the specified type.</summary>
      <returns>The service object of the specified type.</returns>
      <param name="serviceType">The type of service object to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplate(System.Web.UI.WebControls.DataBoundControl,System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.ITemplate" /> object that contains the template markup for the specified data-bound control.</summary>
      <returns>An object that contains the template markup for the specified data-bound control.</returns>
      <param name="control">The data-bound control.</param>
      <param name="templateContent">The template markup.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.GetTemplateField(System.Web.UI.WebControls.DataControlField,System.Web.UI.WebControls.DataBoundControl)">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.TemplateField" /> object for the specified data field.</summary>
      <returns>The new template field.</returns>
      <param name="dataControlField">The data field.</param>
      <param name="dataBoundControl">The data-bound control that contains the data field.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldDesigner.IsEnabled(System.Web.UI.WebControls.DataBoundControl)">
      <summary>When overridden in a derived class, gets a value that indicates whether the data field is enabled in the fields editor.</summary>
      <returns>A value that indicates whether the data field is enabled in the fields editor.</returns>
      <param name="parent">The data-bound control that contains the data field.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.ServiceProvider">
      <summary>Gets the service provider implementation that is used by the fields editor.</summary>
      <returns>The service provider implementation, typically provided by the design host, which can be used to obtain additional design-time services.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataControlFieldDesigner.UsesSchema">
      <summary>When overridden in a derived class, gets a value that indicates whether schema information is used to load the data fields.</summary>
      <returns>true if schema information is used to load the data fields; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor">
      <summary>Provides an editing user interface (UI) for a data control field.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> and <see cref="T:System.IServiceProvider" /> objects.</summary>
      <returns>The final value of the object after it has been edited.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" />  that indicates the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> containing a reference to the associated designer.</param>
      <param name="value">The object to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataControlFieldTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default value is Modal.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor">
      <summary>Provides an editing user interface (UI) for the column collection of a <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the specified value using the specified context descriptor and service provider.</summary>
      <returns>The final value of the object after it has been edited.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object indicating the context of the object being edited.</param>
      <param name="provider">The <see cref="T:System.IServiceProvider" /> object containing a reference to the associated designer.</param>
      <param name="value">The object to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridColumnCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style associated with this editor, using the specified <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object.</summary>
      <returns>The <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value representing the editing style of this editor. The default is Modal.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to 0.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridComponentEditor" /> class and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataGridDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataGrid" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataGridDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" />.</returns>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataGridDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</summary>
      <returns>The HTML markup that is used to represent the <see cref="T:System.Web.UI.WebControls.DataGrid" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML markup used to represent an empty template-based control at design time.</summary>
      <returns>The HTML markup used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup displayed at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <returns>The HTML markup displayed at design time for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the data item property of the template container.</summary>
      <returns>The data item property of the container of the template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> from which to get the content. </param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.GetTemplatePropertyParentType(System.String)">
      <summary>Gets the <see cref="T:System.Type" /> object corresponding to the parent of the specified template.</summary>
      <returns>The <see cref="T:System.Type" /> corresponding to the parent of the specified template.</returns>
      <param name="templateName">The name of the template.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.Web.UI.WebControls.DataGrid" /> control.</summary>
      <param name="component">The control element being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnColumnsChanged">
      <summary>Called when the columns of the template change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataGridDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> to set the content for. </param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The new content for the template.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListComponentEditor">
      <summary>Provides a component editor for a <see cref="T:System.Web.UI.WebControls.DataList" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListComponentEditor" /> class, and sets its initial page to the specified index.</summary>
      <param name="initialPage">The index of the initial page.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListComponentEditor.GetComponentEditorPages">
      <summary>Gets an array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects corresponding to the pages that can be edited using this editor.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataListDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.DataList" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AllowResize">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.DataList" /> control can be resized.</summary>
      <returns>true if the data list has templates; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.AutoFormats">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object associated with this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.CreateTemplateEditingFrame(System.Web.UI.Design.TemplateEditingVerb)">
      <summary>Creates a template editing frame using the specified verb.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> object.</returns>
      <param name="verb">The <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> for which to create the template editing frame.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.DataListDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetCachedTemplateEditingVerbs">
      <summary>Gets the cached template editing verbs available to the designer.</summary>
      <returns>An array of <see cref="T:System.Web.UI.Design.TemplateEditingVerb" /> objects consisting of the cached template editing verbs that are available to the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</summary>
      <returns>The HTML that is used to represent the <see cref="T:System.Web.UI.WebControls.DataList" /> control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML used to represent an empty template-based control at design time.</summary>
      <returns>The HTML used to represent an empty template-based control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML to display at design time for the specified exception when an error has been encountered while rendering the control.</summary>
      <returns>The HTML displayed at design time for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContainerDataItemProperty(System.String)">
      <summary>Gets the <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the template container.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.DataListItem.System#Web#UI#IDataItemContainer#DataItem" /> property of the container of the template.</returns>
      <param name="templateName">The name of the template. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.GetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.Boolean@)">
      <summary>Gets the content of the template.</summary>
      <returns>The content of the template.</returns>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance from which to get the content.</param>
      <param name="templateName">The name of the template. </param>
      <param name="allowEditing">true if the template's content can be edited; false if the content is read-only. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified component.</summary>
      <param name="component">The control element being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnSchemaRefreshed">
      <summary>Called when the data source to which the underlying control is bound loads a new schema.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.OnTemplateEditingVerbsChanged">
      <summary>Called when the template editing verbs change.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataListDesigner.SetTemplateContent(System.Web.UI.Design.ITemplateEditingFrame,System.String,System.String)">
      <summary>Sets the content for the specified template and frame.</summary>
      <param name="editingFrame">The <see cref="T:System.Web.UI.Design.ITemplateEditingFrame" /> instance for which to set the content.</param>
      <param name="templateName">The name of the template. </param>
      <param name="templateContent">The new content for the template. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DataListDesigner.TemplatesExist">
      <summary>Gets a value indicating whether there are templates defined for the associated control.</summary>
      <returns>true if the associated control has templates defined; otherwise false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataProviderNameConverter">
      <summary>Creates a user-selectable list of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataProviderNameConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the available ADO.NET providers.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names are an exclusive list of possible values.</summary>
      <returns>Always false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataProviderNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of ActiveX® Data Objects (ADO) for the .NET Framework (ADO.NET) provider names that can be picked from a list.</summary>
      <returns>Always true.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DataSourceIDConverter">
      <summary>Creates a user-selectable list of data source names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DataSourceIDConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object in the specified source type to the native type of the converter. </summary>
      <returns>true if <paramref name="sourceType" /> is a string; otherwise, false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="sourceType">The <see cref="T:System.Type" /> of the object for which conversion is being requested.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the specified object to the native type of the converter. </summary>
      <returns>The <paramref name="value" /> parameter is returned as a string. </returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the culture of the <paramref name="value" /> parameter.</param>
      <param name="value">The object to convert.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="value" /> is other than a string or null. </exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Returns a list of the available data source names.</summary>
      <returns>A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> containing the names of the controls that implement the <see cref="T:System.Web.UI.IDataSource" /> interface and are available for use in the given context.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether the returned data source names are an exclusive list of possible values.</summary>
      <returns>Always false.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets a value indicating whether this object returns a standard set of data source names that can be picked from a list.</summary>
      <returns>Always true.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides information about a context to a type converter so that the type converter can perform a conversion.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value that indicates whether the specified component is a valid data source.</summary>
      <returns>true if <paramref name="component" /> is a valid data source; otherwise, false.</returns>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.DetailsViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.DetailsViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.DetailsView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.DetailsView" /> control to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.DetailsView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which to add definitions of the selectable and clickable regions in the design-time view of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.DetailsView" />, control which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view for the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows to show.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.DetailsViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view of the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.DetailsView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.DetailsViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control associated with the designer, to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor">
      <summary>Provides a component editor for embedded mail object collections in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.EmbeddedMailObjectCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to gain additional context information. </param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">The object to edit the value for. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.FormViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.FormView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes for display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.FormView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.FormView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.FormViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds or removes properties in the properties grid in a design host at design time, or provides new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.RenderOuterTable">
      <summary>Specifies whether the <see cref="T:System.Web.UI.Design.WebControls.FormViewDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.FormViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always returns true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.GridViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.GridView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.GridView" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the <see cref="T:System.Web.UI.WebControls.GridView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region of the design-time view of the associated control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.GridView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called when a region of the design-time view of the associated control is clicked.</summary>
      <param name="e">A <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" /> that defines the clicked region of the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.OnSchemaRefreshed">
      <summary>Called when the schema of the data source for the associated control changes. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.SampleRowCount">
      <summary>Gets the number of sample rows for the associated control to display.</summary>
      <returns>The number of sample rows.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.GridViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies content for an editable region of the design-time view for the associated control.</summary>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> to update.</param>
      <param name="content">A <see cref="T:System.String" /> to write to <paramref name="region" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.GridView" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.GridViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HiddenField" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HiddenFieldDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.HiddenField" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HiddenFieldDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.HiddenField" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner">
      <summary>Provides design-time support in a designer host for the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.ConnectToDataSource">
      <summary>Performs the actions that are necessary to connect to the current data source.</summary>
      <returns>true if a connection to a new data source was performed; false if the old and new data source are the same.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.CreateDataSource">
      <summary>Creates a new data source for the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" /> to bind to the design-time data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DataSourceDesigner">
      <summary>Provides access to the designer of the data source, when one is selected for data binding.</summary>
      <returns>The designer for the data source of the associated control derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />, which implements the <see cref="T:System.Web.UI.Design.IHierarchicalDataSourceDesigner" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DesignerView">
      <summary>Gets the default view of the data source that is bound to the associated control. </summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> representing the default view of the data source. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.DisconnectFromDataSource">
      <summary>Performs the actions that are necessary to disconnect from the current data source.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetDesignTimeDataSource">
      <summary>Gets a data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from the <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HierarchicalDataBoundControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the control should render its default action lists, which contain a data source ID drop-down list and related tasks.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter">
      <summary>Creates a user-selectable list of hierarchical data source names. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HierarchicalDataSourceIDConverter.IsValidDataSource(System.ComponentModel.IComponent)">
      <summary>Gets a value indicating whether the specified component is a valid data source.</summary>
      <returns>true if <paramref name="component" /> is a valid data source; otherwise, false.</returns>
      <param name="component">An object that implements the <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.HotSpotCollection" /> objects in an <see cref="T:System.Web.UI.WebControls.ImageMap" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.HotSpot" /> collection elements can be selected at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.CreateNewItemTypes">
      <summary>Gets the multiple data types that the collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> can create.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.HotSpotCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.HotSpotCollectionEditor" /> object.</summary>
      <returns>A string that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.HyperLinkDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.HyperLink" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.HyperLinkDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time.</summary>
      <returns>A string containing the markup used to render the associated hyperlink control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.HyperLinkDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LabelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Label" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LabelDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LabelDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LinkButtonDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LinkButton" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LinkButtonDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LinkButtonDesigner" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler">
      <summary>Performs data binding of a <see cref="T:System.Web.UI.WebControls.ListControl" /> Web server control within a visual designer.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDataBindingHandler" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDataBindingHandler.DataBindControl(System.ComponentModel.Design.IDesignerHost,System.Web.UI.Control)">
      <summary>Performs data binding on the specified control.</summary>
      <param name="designerHost">The <see cref="T:System.ComponentModel.Design.IDesignerHost" /> for the document that contains the control. </param>
      <param name="control">The <see cref="T:System.Web.UI.Control" /> to bind. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListControlDesigner">
      <summary>Serves as the base class for designers that provide design-time support in the Visual Web Designer for controls that are derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.ActionLists">
      <summary>Gets the designer action list collection for the designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with the designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the specified control to the design-time data source. </summary>
      <param name="dataBoundControl">The associated control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" />, or a copy of that control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataTextField">
      <summary>Gets or sets the data text field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataTextField" /> of the list control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.DataValueField">
      <summary>Gets or sets the data value field of the control.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.ListControl.DataValueField" /> of the list control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> containing the markup used to render the control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the data source component from the associated control container, resolved to a specific data member.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" />, resolved to the <see cref="P:System.Web.UI.Design.WebControls.DataBoundControlDesigner.DataMember" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.GetSelectedDataSource">
      <summary>Gets the data source component from the associated control container.</summary>
      <returns>An object implementing an <see cref="T:System.Collections.IEnumerable" /> interface and containing the design-time <see cref="P:System.Web.UI.Design.WebControls.BaseDataBoundControlDesigner.DataSource" /> of the associated control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A control derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged">
      <summary>Called when the data source for the associated control has changed.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.OnDataSourceChanged(System.Boolean)">
      <summary>Called when the data source for the associated control has changed.</summary>
      <param name="forceUpdateView">A <see cref="T:System.Boolean" /> that indicates whether the design-time markup is to be unconditionally updated. This parameter is ignored. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListControlDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove additional properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties to expose for the associated control at design time. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListControlDesigner.UseDataSourcePickerActionList">
      <summary>Gets a value that indicates whether the associated control should render its default action lists.</summary>
      <returns>Always returns false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.ListItemCollection" /> objects in a control that is derived from the <see cref="T:System.Web.UI.WebControls.ListControl" /> or a similar control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.ListItem" /> elements can be selected at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ListItemsCollectionEditor.HelpTopic">
      <summary>Gets the Help topic to display for the <see cref="T:System.Web.UI.Design.WebControls.ListItemsCollectionEditor" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the Help topic to display.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LiteralDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Literal" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LiteralDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LiteralDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the associated control.</summary>
      <param name="sender">The object that is the source of the event.</param>
      <param name="ce">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object that contains the event data.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Login" /> Web-server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.ActionLists">
      <summary>Gets the designer action-list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control allows resizing.</summary>
      <returns>true if the control allows resizing; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions.</summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the control are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the template that is used to render the associated control at design time.</summary>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to fetch content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Login" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Login" />, that implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.LoginDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each templated field in the <see cref="T:System.Web.UI.WebControls.Login" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginNameDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginName" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginNameDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginNameDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that is used to render the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginName" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginNameDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy, rather than the actual control that is associated with the designer, to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginStatusDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginStatusDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginStatus" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginStatusDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginStatus" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginStatusDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.LoginViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.LoginView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.LoginViewDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to render the associated control at design time and populates a collection of designer regions. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> to which definitions of the selectable and clickable regions in the design-time view of the <see cref="T:System.Web.UI.WebControls.LoginView" /> are added.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns a serialized copy of the current template that is used to render the associated control at design time.</summary>
      <returns>A string containing a serialized copy of the template used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time.</returns>
      <param name="region">The <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> for which to obtain content.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when the current template is not defined.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.LoginView" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.LoginView" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.LoginView" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.LoginView" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when there is a change to the control that is associated with this designer.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added or shadowed properties. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.LoginViewDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets a region of the associated control from a serialized copy of a control template.</summary>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> that provides the name of the region to update.</param>
      <param name="content">A string that contains a serialized template for the associated control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the fields of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.LoginView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.LoginViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor">
      <summary>Provides an editor for selecting message body files in a <see cref="T:System.Web.UI.WebControls.MailDefinition" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Caption">
      <summary>Gets the caption to appear on the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> form.</summary>
      <returns>A string that is the caption to appear on the editor form.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor.Filter">
      <summary>Gets the list of file types for the <see cref="T:System.Web.UI.Design.WebControls.MailDefinitionBodyFileNameEditor" /> object to accept.</summary>
      <returns>A string specifying a user-friendly name for each accepted file type and file specifications for each type.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuBindingsEditor">
      <summary>Provides a component editor for the <see cref="P:System.Web.UI.WebControls.Menu.DataBindings" /> collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the data bindings collection of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> interface, through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
      <param name="context">An object implementing the <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> interface that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.ActionLists">
      <summary>Gets the designer action list collection for this designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.AutoFormats">
      <summary>Gets the collection of predefined formatting schemes to display in the Auto Format dialog box.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> that contains the predefined schemes for the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the provider can refresh the schema.</summary>
      <returns>true if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The <see cref="T:System.Web.UI.WebControls.Menu" /> to bind to the design-time data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to render the associated control at design time. </summary>
      <returns>A string containing the markup used to render the <see cref="T:System.Web.UI.WebControls.Menu" /> at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup that renders a placeholder for the associated control at design time when no markup is otherwise available.</summary>
      <returns>A string containing markup text that renders to a placeholder on the design surface.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>A string that contains the markup used to render the associated <see cref="T:System.Web.UI.WebControls.Menu" /> at design time after an error has occurred.</returns>
      <param name="e">The <see cref="T:System.Exception" /> object that was thrown.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source to use at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> to use as a data source for the associated <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Menu" />, which implements the <see cref="T:System.ComponentModel.IComponent" /> interface.</param>
      <exception cref="T:System.ArgumentException">component is not a <see cref="T:System.Web.UI.WebControls.Menu" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Menu" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema of the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <param name="preferSilent">If true, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.Schema">
      <summary>Gets a schema that describes the data source view for the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object that describes the structure of the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#CanRefreshSchema">
      <summary>Gets a value indicating whether the provider can refresh the schema. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.CanRefreshSchema" /> property. </summary>
      <returns>true, if the schema can be refreshed; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see the <see cref="M:System.Web.UI.Design.IDataBindingSchemaProvider.RefreshSchema(System.Boolean)" /> method.</summary>
      <param name="preferSilent">true to indicate that error messages should not be displayed when exceptions occur during processing; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.System#Web#UI#Design#IDataBindingSchemaProvider#Schema">
      <summary>Gets the current schema object for the designer. For a description of this member, see the <see cref="P:System.Web.UI.Design.IDataBindingSchemaProvider.Schema" /> property.</summary>
      <returns>The current schema object for the designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.TemplateGroups">
      <summary>Gets a collection of template groups for the templates of the associated control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> containing an element for each template in the <see cref="T:System.Web.UI.WebControls.Menu" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.MenuDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a copy of the associated control or use the control itself to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor">
      <summary>Provides a component editor for the collection that is specified by the <see cref="P:System.Web.UI.WebControls.Menu.Items" /> property of the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the menu item collection of the associated control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that is used to acquire context information.</param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained.</param>
      <param name="value">The object to edit the value for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always returns <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />.</returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor">
      <summary>Provides a component editor for <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> objects in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.MenuItemStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.MenuItemStyleCollection" /> object.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified type, <see cref="T:System.Web.UI.WebControls.MenuItemStyle" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of item to create. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.MenuItemStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.MultiViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.MultiView" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.MultiViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.MultiViewDesigner" /> class. </summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanConfigure">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure" /> method can be called; false otherwise.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value that indicates whether the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true if the <see cref="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)" /> can be called; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.Configure">
      <summary>Displays the Configure Data Source wizard on the visual designer surface.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetView(System.String)">
      <summary>Returns a data source view with the specified name.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> with the name specified by <paramref name="viewName" />.</returns>
      <param name="viewName">A string containing the name of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.GetViewNames">
      <summary>Returns a list of data source view names for the associated control.</summary>
      <returns>A string array containing the names of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> objects of the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add additional properties to the display in the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection implementing the <see cref="T:System.Collections.IDictionary" /> of the added and shadowed properties. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Extracts the metadata for the Select method from the business object that is specified by the associated control.</summary>
      <param name="preferSilent">If true, does not display error messages when exceptions occur during processing; otherwise, exception messages are displayed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.SelectMethod">
      <summary>Gets or sets the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> method of the associated control is called.</summary>
      <returns>A string containing the name of the method to execute when the <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> is called.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner.TypeName">
      <summary>Gets or sets the name of the type that contains the methods that are specified in the associated control.</summary>
      <returns>A string containing the name of the type that contains the methods that perform the Delete, Insert, Select, and Update database operations specified in the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView">
      <summary>Provides the design-time view that is associated with the <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.ObjectDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> class. </summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.ObjectDataSourceDesigner" /> that owns this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
      <param name="viewName">A string containing the name of this <see cref="T:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView" /> object.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform a Delete operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform a Delete operation; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Insert operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Insert operation; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the associated data source control can perform server-based paging.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the associated data source control can return the total number of rows that are returned by a query.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the associated data source control can sort rows.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the associated data source control as it is currently configured can perform an Update operation.</summary>
      <returns>true if the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> can perform an Update operation; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control.</summary>
      <returns>A sample of the data represented by the associated <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> or null if the designer cannot generate any sample data.</returns>
      <param name="minimumRows">An integer containing the minimum number of rows to retrieve.</param>
      <param name="isSampleData">A value indicating whether the data returned is sample data or real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ObjectDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> that describes the view and the properties of the objects in the list or null if the schema is unavailable.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelContainerDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelContainerDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.AddDesignTimeCssAttributes(System.Collections.IDictionary)">
      <summary>Adds string representations of style attributes to a collection to be used in the design-time rendering of the control.</summary>
      <param name="styleAttributes">A collection of style attributes implementing the <see cref="T:System.Collections.IDictionary" />. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameCaption">
      <summary>Gets the caption that appears on the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A string that contains the panel caption.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.FrameStyle">
      <summary>Gets the styles of the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Style" /> object that contains the design-time styles for the associated <see cref="T:System.Web.UI.WebControls.Panel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelContainerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">A <see cref="T:System.Web.UI.WebControls.Panel" />, which implements an <see cref="T:System.ComponentModel.IComponent" />.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not a <see cref="T:System.Web.UI.WebControls.Panel" /> or of a class derived from <see cref="T:System.Web.UI.WebControls.Panel" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PanelContainerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control that is associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PanelDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Panel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PanelDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.MapPropertyToStyle(System.String,System.Object)">
      <summary>Maps a specified property and value to a specified markup style.</summary>
      <param name="propName">A string containing the property name. </param>
      <param name="varPropValue">An object that is the property value. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PanelDesigner.OnBehaviorAttached">
      <summary>Provides notification when a behavior is attached to the designer.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> object that is specified by the Parameters properties of the associated data source control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the elements of the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects of the associated data source control.</summary>
      <returns>The new <paramref name="value" />; otherwise, if the value of the object has not changed, <paramref name="value" /> unchanged.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object used to acquire context information. </param>
      <param name="provider">An object implementing the <see cref="T:System.IServiceProvider" /> through which editing services can be obtained. </param>
      <param name="value">The object to edit the value for. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editing style that is associated with this editor.</summary>
      <returns>Always <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.Modal" />. </returns>
      <param name="context">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object that indicates the context of the object being edited.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl">
      <summary>Provides a reusable <see cref="T:System.Windows.Forms.UserControl" /> object for editing <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class using the specified <see cref="T:System.IServiceProvider" />.</summary>
      <param name="serviceProvider">An <see cref="T:System.IServiceProvider" /> interface to the current design host, such as Visual Studio 2005.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.AddParameters(System.Web.UI.WebControls.Parameter[])">
      <summary>Adds an array of existing parameters to the editor.</summary>
      <param name="parameters">A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of existing parameters to add to the editor.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ClearParameters">
      <summary>Removes all parameters from the editor.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.GetParameters">
      <summary>Gets all parameters from the editor.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.Parameter" /> array of all parameters from the editor.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.OnParametersChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged" /> event when the state of a parameter in the editor changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersChanged">
      <summary>Occurs when any parameter or one of the parameter's properties is changed.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.ParametersConfigured">
      <summary>Returns a value indicating whether all the parameters in the editor are configured.</summary>
      <returns>true if all parameters in the editor are fully configured; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ParameterEditorUserControl.SetAllowCollectionChanges(System.Boolean)">
      <summary>Controls whether additions and deletions can be made to the values in the editor.</summary>
      <param name="allowChanges">A <see cref="T:System.Boolean" /> that indicates whether additions and deletions can be made to the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> being edited.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.ParameterEditorUserControl.TypeDescriptionProvider">
      <summary>Provides metadata for the <see cref="T:System.Web.UI.Design.WebControls.ParameterEditorUserControl" /> class. </summary>
      <returns>A type descriptor provider object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AllowResize">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control allows resizing. </summary>
      <returns>true if the control allows resizing; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to display the associated control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display all regions at design time.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">A collection of control designer regions for the associated control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Returns the content for an editable region for the design-time view of the associated control.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">The region to get content for.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control being designed.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer class to add properties to, or remove properties from, the Properties grid at design time or to shadow properties of the associated control.</summary>
      <param name="properties">The properties for the class of the component.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.RenderOuterTable">
      <summary>Gets or sets a value that specifies whether the <see cref="T:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner" /> control uses an outer table container to apply inline CSS style rules.</summary>
      <returns>true if the control uses an outer table container to apply inline CSS style rules; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Establishes the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region that is contained within the control. </param>
      <param name="content">The content to assign for the editable design region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PasswordRecoveryDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.PreviewControlDesigner">
      <summary>Provides design-time support in a visual designer for a control where the design surface must use a preview of the associated control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.PreviewControlDesigner.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.PreviewControlDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexEditorDialog">
      <summary>Provides a dialog box for editing regular expressions used by the <see cref="T:System.Web.UI.WebControls.RegularExpressionValidator" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.#ctor(System.ComponentModel.ISite)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> class.</summary>
      <param name="site">The site for this dialog box. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdHelp_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Help event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdOK_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the OK event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.cmdTestValidate_Click(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TestValidate event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="args">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> and optionally releases the managed resources.</summary>
      <param name="disposing">A value indicating to all resources held by any managed objects that this <see cref="T:System.Web.UI.Design.WebControls.RegexEditorDialog" /> references.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.lstStandardExpressions_SelectedIndexChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the SelectedIndexChanged event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.RegexTypeEditor_Activated(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the Activated event of dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RegexEditorDialog.RegularExpression">
      <summary>Gets or sets the name of the regular expression to edit.</summary>
      <returns>The name of the regular expression.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexEditorDialog.txtExpression_TextChanged(System.Object,System.EventArgs)">
      <summary>Represents the method that will handle the TextChanged event of the dialog box.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> object that provides data for the event. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RegexTypeEditor">
      <summary>Provides a user interface for editing regular expressions.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.RegexTypeEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the given regular expression object using the given service provider and context.</summary>
      <returns>The new value of the object. If the value of the object hasn't changed, this method returns the same object it received.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can provide additional context information.</param>
      <param name="provider">A service provider.</param>
      <param name="value">The regular expression object whose value is to be edited.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RegexTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Gets the editor style used by the <see cref="M:System.Web.UI.Design.WebControls.RegexTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the editor style used by the method.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RepeaterDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataMember">
      <summary>Gets or sets the name of a specific table or view in the data source object to bind the <see cref="T:System.Web.UI.WebControls.Repeater" /> control to.</summary>
      <returns>The name of a table or view in the data source.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSource">
      <summary>A data-binding expression that identifies the source of data for the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>A data binding expression.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceDesigner">
      <summary>Provides access to the associated designer component for the data source.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceDesigner" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DataSourceID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> property of the associated control.</summary>
      <returns>The ID of the associated control's data source control.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.DesignerView">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object associated with the data source of this designer.</summary>
      <returns>The <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> associated with the data source of this designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.UI.Design.WebControls.RepeaterDesigner" /> object and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both the managed and unmanaged resources; false to release only the unmanaged resources.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.ExecuteChooseDataSourcePostSteps">
      <summary>Called by a design host such as Visual Studio 2005 after a user selects a data source at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Collections.IEnumerable,System.Int32)">
      <summary>Returns design-time sample data based on the provided data and using the specified number of rows.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
      <param name="selectedDataSource">An <see cref="T:System.Collections.IEnumerable" /> object containing data to use in creating similar sample data at design time.</param>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeDataSource(System.Int32)">
      <summary>Returns design-time sample data based on the <see cref="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource" /> method and using the specified number of rows.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> object containing sample data for use at design time.</returns>
      <param name="minimumRows">The minimum number of rows of sample data that the data source should contain. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup to be used for the design-time representation of the control.</summary>
      <returns>Design-time HTML markup.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup to represent a Web server control at design time that will have no visual representation at run time.</summary>
      <returns>The HTML markup used to represent a control at design time that would otherwise have no visual representation. The default is a rectangle that contains the type and ID of the component.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Retrieves the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e">The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetResolvedSelectedDataSource">
      <summary>Gets the selected data member from the selected data source.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> that contains a collection of values used to supply design-time data. The default value is null.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.GetSelectedDataSource">
      <summary>Retrieves the selected data source component from the container of the associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <returns>The selected data source; null if a data source is not found or if a data source with the selected name does not exist.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the provided <see cref="T:System.Web.UI.WebControls.Repeater" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.Repeater" /> control. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="source">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.OnDataSourceChanged">
      <summary>Handles changes made to the data source </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RepeaterDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Filters the properties to replace the runtime data source property descriptor with the designer's property descriptor.</summary>
      <param name="properties">The properties for the class of the component. </param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.RepeaterDesigner.TemplatesExist">
      <summary>Gets a value indicating whether the associated control has any templates defined.</summary>
      <returns>A value that indicates whether any templates are defined for the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor">
      <summary>Provides a design-time editor for the <see cref="T:System.Web.UI.WebControls.RoleGroupCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor" /> class.</summary>
      <param name="type">The type of objects in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.RoleGroupCollectionEditor.CanSelectMultipleInstances">
      <summary>Provides a value indicating whether the editor allows selection of multiple items in the collection.</summary>
      <returns>false.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the schema can be refreshed.</summary>
      <returns>This implementation always returns true.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetView(System.String)">
      <summary>Gets the <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> for the specified view.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" /> object.</returns>
      <param name="viewPath">The XPath query for the part of the data source to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.GetViewNames">
      <summary>Gets an array of names representing named views in the data source.</summary>
      <returns>This implementation always returns an empty string array.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated component changes.</summary>
      <param name="sender">The object that raised the event.</param>
      <param name="e">A <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" /> object containing information about the event.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Called by the designer host to refresh the schema of the underlying data source.</summary>
      <param name="preferSilent">true to suppress data source events until the refresh operation has completed; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />.</summary>
      <returns>true if the underlying data source has a configuration wizard that can be launched with the Configure method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />.</summary>
      <returns>A designer data-source view that contains information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of the view to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>The names of the views in the underlying data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">true suppresses data source events until the refresh is finished.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" /></summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" /> and <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> classes.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> class using the provided <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> object and view name.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view for which the data source provides data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" />.</returns>
      <param name="minimumRows">The minimum number of rows to retrieve or create.</param>
      <param name="isSampleData">true to indicate sample data; false to indicate real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data that is represented by this <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerDataSourceView" /> object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> or an object that derives from <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView">
      <summary>Provides a design-time view of hierarchical data for the <see cref="T:System.Web.SiteMap" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView" /> class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.Design.WebControls.SiteMapDataSourceDesigner" /> that is the designer for the associated <see cref="T:System.Web.UI.WebControls.SiteMapDataSource" />.</param>
      <param name="viewPath">An XPath query that defines the block of data to use for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample data or real data.</summary>
      <returns>An <see cref="T:System.Web.UI.IHierarchicalEnumerable" />.</returns>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is real data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceSchema" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SiteMapPathDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.AutoFormats">
      <summary>Gets the collection of automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Gets the HTML markup that provides information about the specified exception.</summary>
      <returns>The design-time HTML markup for the specified exception.</returns>
      <param name="e"> The exception that occurred.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SiteMapPathDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated <see cref="T:System.Web.UI.WebControls.SiteMapPath" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.SiteMapPath" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.Design.TemplateGroup" /> objects. The default is an empty <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SiteMapPathDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor">
      <summary>Provides a user interface for selecting and editing a connection string property of a <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object at design time. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.GetProviderName(System.Object)">
      <summary>Returns the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <returns>The <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, if the <paramref name="instance" /> is not null; otherwise, an empty string ("").</returns>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor.SetProviderName(System.Object,System.ComponentModel.Design.Data.DesignerDataConnection)">
      <summary>Sets the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object.</summary>
      <param name="instance">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> that the connection string applies to.</param>
      <param name="connection">The <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" /> associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.#ctor">
      <summary>Creates an instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure" /> method can be called by the design host.</summary>
      <returns>true if the design host supports the <see cref="T:System.ComponentModel.Design.Data.IDataEnvironment" /> interface; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called by the design host.</summary>
      <returns>true if the <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString" /> and <see cref="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand" /> properties are not empty; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.Configure">
      <summary>Launches the data source configuration utility in the design host.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ConnectionString">
      <summary>Gets or sets the string used to open a database.</summary>
      <returns>The string used to open a database connection at runtime.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.CreateView(System.String)">
      <summary>Creates a new <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> instance using the specified name.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> object.</returns>
      <param name="viewName">The name of the view to create.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeleteQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports delete queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Delete" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.DeriveParameters(System.String,System.Data.Common.DbCommand)">
      <summary>Derives the parameters from the specified SQL command and adds corresponding <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the command's parameters collection.</summary>
      <param name="providerName">The name of the data provider.</param>
      <param name="command">A <see cref="T:System.Data.Common.DbCommand" /> object.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetConnectionString">
      <summary>Gets the connection string that is valid at design time for the control that is associated with this designer.</summary>
      <returns>A connection string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves a <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object that is identified by the view name.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object if found in the data source; otherwise null.</returns>
      <param name="viewName">The name of the view to get.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.GetViewNames">
      <summary>Gets a list of available views.</summary>
      <returns>A string array containing the names of the available views.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InferParameterNames(System.ComponentModel.Design.Data.DesignerDataConnection,System.String,System.Web.UI.WebControls.SqlDataSourceCommandType)">
      <summary>Returns an array of parameters using the specified connection, command text, and command type.</summary>
      <returns>An array of <see cref="T:System.Web.UI.WebControls.Parameter" /> objects.</returns>
      <param name="connection">A <see cref="T:System.ComponentModel.Design.Data.DesignerDataConnection" />  object</param>
      <param name="commandText">The text of the command.</param>
      <param name="commandType">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> indicating the type of command.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.InsertQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports insert queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Insert" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to add properties to, or remove them from, the Properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">The properties to be filtered.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.ProviderName">
      <summary>Gets or sets the name of the .NET Framework data provider that the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</summary>
      <returns>A string containing the name of the data provider.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the underlying data source.</summary>
      <param name="preferSilent">true suppresses all data source events until the schema is refreshed.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectCommand">
      <summary>Gets or sets the SQL query in the associated <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> for selecting data from the underlying database.</summary>
      <returns>An SQL query.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.SelectQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports select queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Select" />.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDataSourceDesigner.UpdateQuery">
      <summary>Indicates that this <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> supports update queries.</summary>
      <returns>
        <see cref="F:System.Web.UI.DataSourceOperation.Update" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.SqlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView" /> class using the provided data source designer and name of the view.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.SqlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanDelete">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanInsert">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object supports the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanPage">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports paging through the data that is retrieved by the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method.</summary>
      <returns>true if paging through the data retrieved by the <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, instead of the data.</summary>
      <returns>true if retrieving the total number of data rows is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanSort">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the underlying data source.</summary>
      <returns>true if a sorted view on the underlying data source is supported; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.CanUpdate">
      <summary>Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</summary>
      <returns>true if the <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> method is supported; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control using the provided number of rows and returns a value indicating whether the data is sample or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows">The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.SqlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.StyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.StyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.StyleCollectionEditor" /> class.</summary>
      <param name="type">The type to create an instance of.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.StyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A collection of the specified type.</returns>
      <param name="itemType">The type to create an instance of.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor">
      <summary>Provides a component editor for the <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> object in the associated <see cref="T:System.Web.UI.WebControls.Menu" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CanSelectMultipleInstances">
      <summary>Gets a value indicating whether multiple <see cref="T:System.Web.UI.WebControls.SubMenuStyle" /> elements can be selected in the editor at one time.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current <see cref="T:System.Web.UI.WebControls.SubMenuStyleCollection" /> collection.</summary>
      <returns>An instance of the <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to use as the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates a new instance of the specified collection item type.</summary>
      <returns>A new instance of the specified type, which should be <see cref="T:System.Web.UI.WebControls.SubMenuStyle" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor.CreateNewItemTypes">
      <summary>Gets the data types that this collection editor can create.</summary>
      <returns>A type array of the data types the <see cref="T:System.Web.UI.Design.WebControls.SubMenuStyleCollectionEditor" /> can create.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.SubstitutionDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Substitution" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.SubstitutionDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.SubstitutionDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML markup that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor">
      <summary>Provides a user interface for editing the collection of cells in a table row.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableCellsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple table cells can be selected at the same time.</summary>
      <returns>true if multiple cells can be selected at the same time; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableCellsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the editor for use with the specified type.</summary>
      <returns>An object of the specified type.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Table" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableDesigner" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableDesigner.GetDesignTimeHtml">
      <summary>Gets the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML used to represent the control at design time.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor">
      <summary>Provides a user interface for editing rows of a table.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TableRowsCollectionEditor" /> class.</summary>
      <param name="type">The type of the collection to edit. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>true if multiple items can be selected at once; otherwise, false. This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TableRowsCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the specified type.</summary>
      <returns>An object of the specified type.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of the item to create. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter">
      <summary>Provides a type converter to convert the <see cref="P:System.Web.UI.WebControls.TreeNodeBinding.Depth" /> property to and from other representations.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.#ctor">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given value to the type of this converter using the provided context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeBindingDepthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the object to the specified type using the provided context and culture information.</summary>
      <returns>An object that represents the converted value.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The object to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> to.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.#ctor">
      <summary>Initiates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the provided <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> object and the design host as represented by the <see cref="T:System.IServiceProvider" /> interface.</summary>
      <returns>The new value of the object. If the value of the object has not changed, this should return the same object it was passed.</returns>
      <param name="context">The type descriptor context.</param>
      <param name="provider">The provider.</param>
      <param name="value">The value to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeNodeCollectionEditor.EditValue" /> method.</summary>
      <returns>A <see cref="T:System.Drawing.Design.UITypeEditorEditStyle" /> value that indicates the style of editor used by the <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)" /> method. If the <see cref="T:System.Drawing.Design.UITypeEditor" /> does not support this method, then <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle" /> will return <see cref="F:System.Drawing.Design.UITypeEditorEditStyle.None" />.</returns>
      <param name="context">The context.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor">
      <summary>Provides a design-time editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.WebControls.TreeNodeStyleCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor" /> class.</summary>
      <param name="type">The type.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor.CreateCollectionItemType">
      <summary>Gets the data type that this collection edits.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor">
      <summary>Provides a design-time data bindings editor in a design host, such as Microsoft Visual Studio 2005, for a <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewBindingsEditor" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Edits the value of the specified object using the specified service provider and context.</summary>
      <param name="context">The type descriptor context.</param>
      <param name="provider">The service provider.</param>
      <param name="value">The value to edit.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Retrieves the edit style that is used by the <see cref="Overload:System.Web.UI.Design.WebControls.TreeViewBindingsEditor.EditValue" /> method.</summary>
      <param name="context">The type descriptor context.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.TreeViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.TreeViewDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>The <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> associated with this designer.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object that contains the predefined schemes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.CreateLineImages">
      <summary>Displays a dialog box to edit the line images for the <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.DataBind(System.Web.UI.WebControls.BaseDataBoundControl)">
      <summary>Binds the associated control to the design-time data source.</summary>
      <param name="dataBoundControl">The data bound control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditBindings">
      <summary>Displays a dialog box to edit the data bindings.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.EditNodes">
      <summary>Displays a dialog box to edit the <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
      <returns>The markup used to render the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetEmptyDesignTimeHtml">
      <summary>Retrieves the HTML markup text that is used to render a placeholder for the associated control at design time.</summary>
      <returns>The markup used to render the control at design time with an empty data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetErrorDesignTimeHtml(System.Exception)">
      <summary>Provides the markup that renders the associated control at design time when an error has occurred.</summary>
      <returns>The markup used to render the control at design time when an error has occurred.</returns>
      <param name="e">The exception.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.GetSampleDataSource">
      <summary>Constructs a sample data source that can be used at design time for the associated control.</summary>
      <returns>An object implementing the <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> interface that can be used as a data source for controls derived from <see cref="T:System.Web.UI.WebControls.HierarchicalDataBoundControl" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.TreeViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>When overridden in a derived class, provides for custom initialization of the given <see cref="T:System.Web.UI.WebControls.TreeView" /> control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> that can be cast as a <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.TreeViewDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the control designer uses a temporary preview control to generate the design-time HTML markup.</summary>
      <returns>true, if the control designer uses a temporary copy of the control for design-time preview; otherwise, false, if the control designer uses the <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> property for the control contained in the control designer.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.ValidationSummary" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ValidationSummaryDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.CreateViewControl">
      <summary>Returns a copy of the associated control for viewing or rendering on the design surface.</summary>
      <returns>A Web server control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ValidationSummaryDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by the designer to remove properties from or add properties to the display in the properties grid or to shadow properties of the associated control.</summary>
      <param name="properties">A collection that implements a dictionary of the added and shadowed properties.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.ViewDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.View" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.ViewDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Retrieves the HTML markup to display the control and populates the collection with the current control designer regions.</summary>
      <param name="regions">The current control designer regions.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.ViewDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the associated control.</summary>
      <param name="component">An <see cref="T:System.ComponentModel.IComponent" /> object.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.ActionLists">
      <summary>Gets the action list collection for the control designer.</summary>
      <returns>An <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" /> object that contains the custom <see cref="T:System.ComponentModel.Design.DesignerActionList" /> items for the control designer.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.AddDesignerRegions(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Adds the provided designer region collection to the current designer regions.</summary>
      <param name="regions">A <see cref="T:System.Web.UI.Design.DesignerRegionCollection" /> object containing the regions to add.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToCustomNavigationTemplate">
      <summary>Creates a navigation template from the active step and saves it in the <see cref="P:System.Web.UI.WebControls.TemplatedWizardStep.CustomNavigationTemplate" /> property of the active step.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ConvertToTemplate(System.String,System.ComponentModel.IComponent,System.String,System.String[])">
      <summary>Converts a selection of controls to a template in the associated control.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The wizard control associated with this designer.</param>
      <param name="templateName">The name of the template to convert to.</param>
      <param name="keys">An array of IDs for the controls that are to be included in the template.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.CreateChildControls">
      <summary>Creates the child controls of the associated control.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.DisplaySideBar">
      <summary>Gets or sets a property in the associated wizard control indicating whether to display a sidebar.</summary>
      <returns>true to display the sidebar; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>The HTML that is used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the HTML markup to display the control at design time and populates the collection with the current control designer regions.</summary>
      <returns>The design-time HTML markup for the associated control, including all control designer regions.</returns>
      <param name="regions">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the editable region of the control at design time.</summary>
      <returns>The persisted content for the region, if the control designer supports editable regions; otherwise, an empty string ("").</returns>
      <param name="region">An <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the specified <see cref="T:System.ComponentModel.IComponent" /> object.</summary>
      <param name="component">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)">
      <summary>Called by the design host when the user clicks the associated control at design time.</summary>
      <param name="e">Use base</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)">
      <summary>Called when the associated control changes.</summary>
      <param name="sender">The source of the event.</param>
      <param name="ce">The event data.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Adds properties to or removes properties from the Properties grid in a design host, or provides new design-time settings or properties that correspond to properties on the associated control.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> object containing the properties for the class of the component.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.ResetTemplate(System.String,System.ComponentModel.IComponent,System.String)">
      <summary>Resets the specified template to its default value.</summary>
      <param name="description">A description of the effect of allowing the transaction to complete, which is used by the design host to give the user an opportunity to cancel the operation.</param>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.Wizard" /> control associated with this designer.</param>
      <param name="templateName">The name of the template to reset.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Specifies the content for an editable region of the control at design time.</summary>
      <param name="region">An editable design region contained within the control.</param>
      <param name="content">The content to assign for the editable design region.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="region" /> is not an object of type <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</exception>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the design host should use a preview control.</summary>
      <returns>true to use a preview control; false to use the associated control.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor">
      <summary>Provides a design-time editor in a design host such as Visual Studio 2005 for a <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.#ctor(System.Type)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepCollectionEditor" /> class using the given <see cref="T:System.Type" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> of items in the collection.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CanSelectMultipleInstances">
      <summary>Indicates whether multiple instances may be selected.</summary>
      <returns>true if multiple items can be selected at once; otherwise, false. This implementation always returns false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateCollectionForm">
      <summary>Creates a new form to display and edit the current collection.</summary>
      <returns>A <see cref="T:System.ComponentModel.Design.CollectionEditor.CollectionForm" /> to provide as the user interface for editing the collection.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateInstance(System.Type)">
      <summary>Creates an instance of the collection of the specified <see cref="T:System.Type" />.</summary>
      <returns>A collection of the specified <paramref name="itemType" />.</returns>
      <param name="itemType">The <see cref="T:System.Type" /> of collection to create.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepCollectionEditor.CreateNewItemTypes">
      <summary>Retrieves the data types this collection can contain.</summary>
      <returns>An array of <see cref="T:System.Type" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepEditableRegion.#ctor(System.Web.UI.Design.WebControls.WizardDesigner,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepEditableRegion" /> class using the given designer and step.</summary>
      <param name="designer">A <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" /> that is the parent designer for the wizard.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> that defines the step.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion">
      <summary>Defines an editable region of content within the design-time markup of a template in a wizard step for a <see cref="T:System.Web.UI.Design.WebControls.WizardDesigner" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.#ctor(System.Web.UI.Design.TemplateDefinition,System.Web.UI.WebControls.WizardStepBase)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion" /> class.</summary>
      <param name="templateDefinition">A <see cref="T:System.Web.UI.Design.TemplateDefinition" /> object that defines a template element in a wizard step at design time.</param>
      <param name="wizardStep">A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object that represents a step displayed in a <see cref="T:System.Web.UI.WebControls.Wizard" /> control.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WizardStepTemplatedEditableRegion.Step">
      <summary>Gets the associated design-time wizard step.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner">
      <summary>Provides design-time support in a visual designer for the <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanConfigure">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called.</summary>
      <returns>true, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure" /> method can be called; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.CanRefreshSchema">
      <summary>Gets a value indicating whether the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called.</summary>
      <returns>true, if the <see cref="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)" /> method can be called, otherwise false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Configure">
      <summary>Launches the configuration wizard for the underlying data source.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data">
      <summary>Gets or sets a block of XML that the associated data source control binds to.</summary>
      <returns>A string of XML data.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile">
      <summary>Gets or sets the file name of an XML file that the associated data source control binds to.</summary>
      <returns>An XML file name.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.GetView(System.String)">
      <summary>Retrieves the design-time data source view object for the associated <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerHierarchicalDataSourceView" />.</returns>
      <param name="viewPath">The path to the view to retrieve.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer and loads the specified component.</summary>
      <param name="component">The control being designed. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Used by a designer component to add properties to or remove properties from, the Properties grid in a design host at design time or to provide new design-time properties that might correspond to properties on the associated control.</summary>
      <param name="properties">An IDictionary of properties.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.RefreshSchema(System.Boolean)">
      <summary>Refreshes the schema from the data source, while optionally suppressing events.</summary>
      <param name="preferSilent">true to suppress schema UI events; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanConfigure">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanConfigure" />. </summary>
      <returns>true if the data source can be configured; otherwise false.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#CanRefreshSchema">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.Design.IDataSourceDesigner.CanRefreshSchema" />. </summary>
      <returns>true if the schema can be refreshed; otherwise false.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#Configure">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.Configure" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#DataSourceChanged">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.DataSourceChanged" />. </summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetView(System.String)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetView(System.String)" />. </summary>
      <returns>A <see cref="T:System.Web.UI.Design.DesignerDataSourceView" /> object containing information about the identified view, or null if a view with the specified name is not found.</returns>
      <param name="viewName">The name of a view in the underlying data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#GetViewNames">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.GetViewNames" />.</summary>
      <returns>An array of names of the views in the data source.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#RefreshSchema(System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.RefreshSchema(System.Boolean)" />.</summary>
      <param name="preferSilent">Specifies whether to suppress any events raised while refreshing the schema.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#ResumeDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.ResumeDataSourceEvents" />.</summary>
    </member>
    <member name="E:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SchemaRefreshed">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.Design.IDataSourceDesigner.SchemaRefreshed" />.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.System#Web#UI#Design#IDataSourceDesigner#SuppressDataSourceEvents">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.Design.IDataSourceDesigner.SuppressDataSourceEvents" />.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Transform">
      <summary>Gets or sets a block of Extensible Stylesheet Language (XSL) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XSL data string.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.TransformFile">
      <summary>Gets or sets the file name of an Extensible Stylesheet Language (XSL) file (.xsl) that defines an XSLT transformation to perform on the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>The XSLT file name.</returns>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.XPath">
      <summary>Gets or sets an XPath query to apply to the XML data that is contained by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.Data" /> property or by the XML file that is indicated by the <see cref="P:System.Web.UI.Design.WebControls.XmlDataSourceDesigner.DataFile" /> property.</summary>
      <returns>An XPath query.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesigner">
      <summary>Extends design-time behavior for the <see cref="T:System.Web.UI.WebControls.Xml" /> Web server control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by the <see cref="T:System.Web.UI.Design.WebControls.XmlDesigner" /> control and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML markup that is used to represent the control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the HTML that is used to fill an empty control.</summary>
      <returns>The HTML used to fill an empty control.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Initializes the designer with the control that this instance of the designer is associated with.</summary>
      <param name="component">The associated control. </param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView">
      <summary>Provides a design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView" /> class.</summary>
      <param name="owner">The parent <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewName">The name of the view in the data source.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.GetDesignTimeData(System.Int32,System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a value indicating whether the data is sample or real data.</summary>
      <returns>A <see cref="T:System.Web.UI.DataSourceView" /> object containing data to display at design time.</returns>
      <param name="minimumRows"> The minimum number of rows to return.</param>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerDataSourceView.Schema">
      <summary>Gets a schema that describes the data source view that is represented by this view object.</summary>
      <returns>An <see cref="T:System.Web.UI.Design.IDataSourceViewSchema" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView">
      <summary>Provides a hierarchical design-time view of data for the <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.#ctor(System.Web.UI.Design.WebControls.XmlDataSourceDesigner,System.String)">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView" /> class using the provided designer and XPath.</summary>
      <param name="owner">An <see cref="T:System.Web.UI.Design.WebControls.XmlDataSourceDesigner" />.</param>
      <param name="viewPath">An XPath string that identifies the data for the view.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.GetDesignTimeData(System.Boolean@)">
      <summary>Generates design-time data that matches the schema of the associated data source control and returns a Boolean value indicating whether the data is sample or real data.</summary>
      <returns>This implementation always returns null.</returns>
      <param name="isSampleData">true to indicate that the returned data is sample data; false to indicate that the returned data is live data.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.XmlDesignerHierarchicalDataSourceView.Schema">
      <summary>Gets a schema that describes the data represented by this view object.</summary>
      <returns>This implementation always returns null.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />, and <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in a <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />-derived control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner" /> class</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default CatalogZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time by calling the <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> method with a null argument.</summary>
      <returns>A method call to <see cref="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null argument as the parameter.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Creates an <see cref="T:System.Web.UI.Design.EditableDesignerRegion" /> in the designer before generating the design-time HTML of the control.</summary>
      <returns>A <see cref="T:System.String" /> representing the design-time HTML of the control.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</summary>
      <param name="component">The associated <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions. </summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for a CatalogZone environment.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A predefined <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default ConnectionZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.GetDesignTimeHtml">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> that is the markup to represent the control at design time. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the specified <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionsZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ConnectionsZoneDesigner.PreFilterProperties(System.Collections.IDictionary)">
      <summary>Hides a preset group of properties at design time.</summary>
      <param name="properties">An <see cref="T:System.Collections.IDictionary" /> of the set of properties associated with the control.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Overrides the parent method to prevent rendering of the control.</summary>
      <returns>Either an empty string ("") or the value of <see cref="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control on the design surface.</summary>
      <returns>An empty markup string.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control and sets the <see cref="F:System.Web.UI.Design.ViewFlags.TemplateEditing" /> view flag to true.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.DeclarativeCatalogPartDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>The appended <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> associated with this class.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.CreateViewControl">
      <summary>Creates a copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control to render at design time.</summary>
      <returns>A copy of the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.GetDesignTimeHtml">
      <summary>Verifies that the control resides in a zone of type <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />, and then gets the markup that is used to represent the control at design time.</summary>
      <returns>The markup that is used to represent the control at design time, or error markup if the control does not reside in an <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> control associated with the designer.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner">
      <summary>Provides design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.AutoFormats">
      <summary>Gets the collection of predefined automatic formatting schemes to display in the Auto Format dialog box for the associated control at design time. </summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" /> with a default EditorZone scheme.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml">
      <summary>Invokes <see cref="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" /> with a null parameter.</summary>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)">
      <summary>Gets the markup that is used to represent the control at design time.</summary>
      <returns>A <see cref="T:System.String" /> that represents the markup of the control at design time.</returns>
      <param name="regions">The <see cref="T:System.Web.UI.Design.DesignerRegionCollection" />, if any, associated with the control.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)">
      <summary>Gets the content for the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the persisted form of the designer region's content.</returns>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.GetEmptyDesignTimeHtml">
      <summary>Gets the markup to represent an empty control.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> control associated with the designer.</param>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)">
      <summary>Sets the content of the specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</summary>
      <param name="region">The specified <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />.</param>
      <param name="content">A <see cref="T:System.String" /> that represents the content to go in the specified region.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner.TemplateGroups">
      <summary>Gets a collection of template groups, each containing one or more template definitions.</summary>
      <returns>A pre-specified <see cref="T:System.Web.UI.Design.TemplateGroupCollection" /> with default settings for an EditorZone environment. </returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner">
      <summary>Provides design-time support in a visual designer for a <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.GetDesignTimeHtml">
      <summary>Retrieves the HTML that is used to represent the control at design time.</summary>
      <returns>The HTML markup used to represent the control at design time.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PageCatalogPartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Prepares the designer to view, edit, and design the <see cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" /> control.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to initialize.</param>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.PartDesigner">
      <summary>Extends design-time behavior for controls that implement the <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> abstract class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.PartDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Creates an instance of the designer bound to the associated <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.Part" /> control associated with this designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.PartDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner">
      <summary>Provides minimal design-time support for <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.GetDesignTimeHtml">
      <summary>Gets an empty string (""), which indicates that the visual design environment should revert to default control rendering.</summary>
      <returns>An empty <see cref="T:System.String" />.</returns>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.Initialize(System.ComponentModel.IComponent)">
      <summary>Binds the designer to the associated <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control.</summary>
      <param name="component">The <see cref="T:System.Web.UI.WebControls.WebParts.ProxyWebPartManager" /> control associated with the designer.</param>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ProxyWebPartManagerDesigner.UsePreviewControl">
      <summary>Gets a value indicating whether the designer should use a temporary copy rather than the actual control associated with the designer to generate the design-time markup.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner">
      <summary>Provides design-time support in a visual designer for a Web Parts zone.</summary>
    </member>
    <member name="M:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.Design.WebControls.WebParts.ToolZoneDesigner.ActionLists">
      <summary>Gets the action list collection for the zone designer