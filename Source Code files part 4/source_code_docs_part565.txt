cure">true if the method should perform a JSON compliance check before evaluating; otherwise, false. The default is false.</param></member><member name="T:J#Sys.Services.ProfileService"><summary>Provides the client proxy class for the profile service. </summary></member><member name="M:J#Sys.Services.ProfileService.#ctor"><summary>Contains the loaded profile data.</summary></member><member name="P:J#Sys.Services.ProfileService.defaultLoadCompletedCallback"><summary>Gets or sets the name of the default load-completed callback function.</summary><returns /><param name="v alue">A string that contains the name of the default load-completed callback function.</param></member><member name="P:J#Sys.Services.ProfileService.defaultSaveCompletedCallback"><summary>Gets or sets the name of the default save-completed callback function.</summary><returns /></member><member name="P:J#Sys.Services.ProfileService.path"><summary>Gets or sets the profile service path.</summary><returns /><param name="v alue">A string that contains the name of the default save-completed callback function.</param></member><member name="M:J#Sys.Services.ProfileService.load"><summary>Loads the specified profile properties.</summary><param name="propertyNames">A string array that contains the profile properties to load.</param><param name="loadCompletedCallback">The function that is called when loading has completed. The default is null.</param><param name="failedCallback">The function that is called when loading has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="M:J#Sys.Services.ProfileService.save"><summary>Saves the specified profile properties.</summary><param name="propertyNames">A string array that contains the profile properties to save.</param><param name="saveCompletedCallback">The function that is called when the <see cref="M:J#Sys.Services.ProfileService.save" /> method has finished. The default is null.</param><param name="failedCallback">The function that is called if the <see cref="M:J#Sys.Services.ProfileService.save" /> method has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="P:J#Sys.Services.ProfileService.timeout"><summary>Gets or sets the profile service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.ProfileService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.ProfileService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.ProfileService.defaultFailedCallback"><summary>Gets or sets the name of the default failure callback function.</summary><returns /><param name="v alue">A string that contains the name of the default failure callback function.</param></member><member name="F:J#Sys.Services.ProfileService.DefaultWebServicePath"><summary>Specifies the path to the default profile service.</summary></member><member name="T:J#Sys.Services.ProfileGroup"><summary>Defines a group. </summary></member><member name="M:J#Sys.Services.ProfileGroup.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.ProfileGroup" /> class.</summary><param name="properties">(Optional) An object containing the settings for this profile group. This parameter may be null.</param></member><member name="T:J#Sys.Services.AuthenticationService"><summary>Provides the client proxy class for the authentication service. </summary></member><member name="M:J#Sys.Services.AuthenticationService.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.AuthenticationService" /> class.</summary></member><member name="P:J#Sys.Services.AuthenticationService.defaultLoginCompletedCallback"><summary>Gets or sets the name of the default login-completed callback function.</summary><param name="v alue">A string that contains the name of the default login-completed callback function.</param></member><member name="P:J#Sys.Services.AuthenticationService.defaultLogoutCompletedCallback"><summary>Gets or sets the name of the default logout-completed callback function.</summary><param name="v alue">A string that contains the name of the default logout-completed callback function.</param></member><member name="P:J#Sys.Services.AuthenticationService.isLoggedIn"><summary>Gets the authentication state of the current user.</summary><returns>true if the current user is logged in; otherwise, false.</returns></member><member name="P:J#Sys.Services.AuthenticationService.path"><summary>Gets or sets the authentication service path.</summary><returns /><param name="value">The authentication service path.</param></member><member name="M:J#Sys.Services.AuthenticationService.login"><summary>Authenticates the user's credentials.</summary><param name="username">(required) The user name to authenticate.</param><param name="password">The user's password. The default is null.</param><param name="isPersistent">true if the issued authentication ticket should be persistent across browser sessions; otherwise, false. The default is false.</param><param name="customInfo">The URL to redirect the browser to on successful authentication. If null, no redirect occurs. The default is null.</param><param name="redirectUrl">Reserved for future use. The default is null.</param><param name="loginCompletedCallback">The function to call when the login has finished successfully. The default is null.</param><param name="failedCallback">The function to call if the login fails. The default is null. </param><param name="userContext">User context information that you are passing to the callback functions.</param><exception cref="Sys.ArgumentNullException"><paramref name="username" /> is null.</exception></member><member name="M:J#Sys.Services.AuthenticationService.logout"><summary>Logs out the currently authenticated user.</summary><param name="redirectUrl">The URL to redirect the browser to on successful logout. The default is null.</param><param name="logoutCompletedCallback">The function that is called when the logout has finished. The default is null.</param><param name="failedCallback">The function that is called if the logout has failed. The default is null. </param><param name="userContext">User context information that you are passing to the callback functions.</param></member><member name="P:J#Sys.Services.AuthenticationService.timeout"><summary>Gets or sets the authentication service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.AuthenticationService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.AuthenticationService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.AuthenticationService.defaultFailedCallback"><summary>Gets or sets the name of the default failure callback function.</summary><returns /><param name="v alue">A string that contains the name of the default failure callback function.</param></member><member name="F:J#Sys.Services.AuthenticationService.DefaultWebServicePath"><summary>Specifies the path to the default authentication service.</summary></member><member name="T:J#Sys.Services.RoleService"><summary>Provides a client proxy class for the ASP.NET role service. </summary></member><member name="M:J#Sys.Services.RoleService.#ctor"><summary>Initializes an instance of the <see cref="T:J#Sys.Services.RoleService" /> class.</summary></member><member name="P:J#Sys.Services.RoleService.defaultLoadCompletedCallback"><summary>Gets or sets the name of the default load-completed callback function.</summary><returns /><param name="value">The name of the default failed callback function.</param></member><member name="P:J#Sys.Services.RoleService.path"><summary>Gets or sets the role service path.</summary><returns /><param name="value">A string that contains the role service path.</param></member><member name="P:J#Sys.Services.RoleService.roles"><summary>Gets the roles for the currently authenticated user.</summary><returns>An<see cref="T:J#Array" /> instance that contains the roles. </returns></member><member name="M:J#Sys.Services.RoleService.isUserInRole"><summary>Checks whether the currently authenticated user is in the specified role.</summary><returns>true if the current user is in the specified role; otherwise, false.</returns><param name="role">The name of the role to check for.</param></member><member name="M:J#Sys.Services.RoleService.load"><summary>Loads the roles for the currently authenticated user into local client memory.</summary><param name="loadCompletedCallback">The function that is called when the load operation has completed. The default is null.</param><param name="failedCallback">The function that is called if loading has failed. The default is null. </param><param name="userContext">User context information passed to the callback functions.</param></member><member name="P:J#Sys.Services.RoleService.timeout"><summary>Gets or sets the role service time-out value.</summary><returns /><param name="value">The time-out value in milliseconds.</param></member><member name="P:J#Sys.Services.RoleService.defaultUserContext"><summary>Gets or sets the default user context for the service.</summary><returns>Reference to the user context for the service.</returns></member><member name="P:J#Sys.Services.RoleService.defaultSucceededCallback"><summary>Gets or sets the default succeeded callback function for the service.</summary><returns>Reference to the succeeded callback function for the service.</returns></member><member name="P:J#Sys.Services.RoleService.defaultFailedCallback"><summary>Gets or sets the name of the default failed callback function.</summary><param name="value">The name of the default failed callback function.</param></member><member name="F:J#Sys.Services.RoleService.DefaultWebServicePath"><summary>Specifies the path to the default authentication service.</summary></member><member name="T:J#Sys.UI.MouseButton"><summary>Describes mouse button locations.</summary></member><member name="F:J#Sys.UI.MouseButton.leftButton"><summary>Represents the left mouse button.</summary></member><member name="F:J#Sys.UI.MouseButton.middleButton"><summary>Represents the wheel button (middle mouse button).</summary></member><member name="F:J#Sys.UI.MouseButton.rightButton"><summary>Represents the right mouse button.</summary></member><member name="M:J#Sys.UI.MouseButton.parse"><summary /></member><member name="T:J#Sys.UI.Key"><summary>Describes key codes.</summary></member><member name="F:J#Sys.UI.Key.backspace"><summary>Represents the BACKSPACE key.</summary></member><member name="F:J#Sys.UI.Key.tab"><summary>Represents the TAB key.</summary></member><member name="F:J#Sys.UI.Key.enter"><summary>Represents the ENTER key.</summary></member><member name="F:J#Sys.UI.Key.esc"><summary>Represents the ESC key.</summary></member><member name="F:J#Sys.UI.Key.space"><summary>Represents the SPACEBAR key.</summary></member><member name="F:J#Sys.UI.Key.pageUp"><summary>Represents the PAGE UP key.</summary></member><member name="F:J#Sys.UI.Key.pageDown"><summary>Represents the PAGE DOWN key.</summary></member><member name="F:J#Sys.UI.Key.end"><summary>Represents the END key.</summary></member><member name="F:J#Sys.UI.Key.home"><summary>Represents the HOME key.</summary></member><member name="F:J#Sys.UI.Key.left"><summary>Represents the LEFT ARROW key.</summary></member><member name="F:J#Sys.UI.Key.up"><summary>Represents the UP ARROW key.</summary></member><member name="F:J#Sys.UI.Key.right"><summary>Represents the RIGHT ARROW key.</summary></member><member name="F:J#Sys.UI.Key.down"><summary>Represents the DOWN ARROW key.</summary></member><member name="F:J#Sys.UI.Key.del"><summary>Represents DELETE key.</summary></member><member name="M:J#Sys.UI.Key.parse"><summary /></member><member name="T:J#Sys.UI.Point"><summary>Creates an object that contains a set of integer coordinates that represent a position.</summary></member><member name="M:J#Sys.UI.Point.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.Point" /> class.</summary><param name="x">The number of pixels between the location and the left edge of the parent frame.</param><param name="y">The number of pixels between the location and the top edge of the parent frame.</param></member><member name="F:J#Sys.UI.Point.x"><summary>Gets the x-coordinate of a <see cref="T:J#Sys.UI.Point" /> object in pixels. This property is read-only.</summary><returns>A number that represents the x-coordinate of the <see cref="T:J#Sys.UI.Point" /> object in pixels. </returns></member><member name="F:J#Sys.UI.Point.y"><summary>Gets the y-coordinate of a <see cref="T:J#Sys.UI.Point" /> object in pixels. This property is read-only.</summary><returns>A number that represents the y-coordinate of the <see cref="T:J#Sys.UI.Point" /> object in pixels.</returns></member><member name="T:J#Sys.UI.Bounds"><summary>Creates an object that contains a set of integer coordinates representing position, width, and height.</summary></member><member name="M:J#Sys.UI.Bounds.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.Bounds" /> class.</summary><param name="x">The number of pixels between the location and the left edge of the parent frame.</param><param name="y">The number of pixels between the location and the top edge of the parent frame.</param><param name="height">The width in pixels.</param><param name="width">The height in pixels.</param></member><member name="F:J#Sys.UI.Bounds.x"><summary>Gets the x-coordinate of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</summary><returns>A number that represents the x-coordinate of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.y"><summary>Gets the y-coordinate of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</summary><returns>A number that represents the y-coordinate of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.height"><summary>Gets the height of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels. This property is read-only.</summary><returns>A number that represents the height of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="F:J#Sys.UI.Bounds.width"><summary>Gets the width of a <see cref="T:J#Sys.UI.Bounds" /> object in pixels. This property is read-only.</summary><returns>A number that represents the width of the <see cref="T:J#Sys.UI.Bounds" /> object in pixels.</returns></member><member name="T:J#Sys.UI.DomEvent"><summary>Provides cross-browser access to fields and methods that are associated with handlers for DOM-element events. </summary></member><member name="M:J#Sys.UI.DomEvent.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.DomEvent" /> class and associates it with the specified <see cref="T:J#Sys.UI.DomElement" /> object.</summary><param name="eventObject">The <see cref="T:J#Sys.UI.DomElement" /> object to associate with the event.</param></member><member name="M:J#Sys.UI.DomEvent.preventDefault"><summary>Prevents the default DOM event action from happening.</summary></member><member name="M:J#Sys.UI.DomEvent.stopPropagation"><summary>Prevents an event from being propagated (bubbled) to parent elements.</summary></member><member name="M:J#Sys.UI.DomEvent.addHandler"><summary>Provides a method to add a DOM event handler to the DOM element that exposes the event. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the event.</param><param name="eventName">The name of the event. </param><param name="handler">The client function that is called when the event occurs.</param></member><member name="M:J#Sys.UI.DomEvent.addHandlers"><summary>Adds a list of DOM event handlers to the DOM element that exposes the events. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The DOM element that exposes the events.</param><param name="events">A dictionary of event handlers.</param><param name="handlerOwner">(Optional) The object instance that is the context for the delegates that should be created from the handlers.</param><exception cref="M:J#Error.invalidOperation">(Debug) One of the handlers specified in <paramref name="events" /> is not a function.</exception></member><member name="M:J#Sys.UI.DomEvent.clearHandlers"><summary>Removes all DOM event handlers from a DOM element that were added through the <see cref="M:J#Sys.UI.DomEvent.addHandler" /> or the <see cref="M:J#Sys.UI.DomEvent.addHandlers" /> methods. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the events.</param></member><member name="M:J#Sys.UI.DomEvent.removeHandler"><summary>Removes a DOM event handler from the DOM element that exposes the event. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The element that exposes the event.</param><param name="eventName">The name of the event. </param><param name="handler">The event handler to remove.</param></member><member name="F:J#Sys.UI.DomEvent.altKey"><summary>Gets a Boolean value that indicates the state of the ALT key when the associated event occurred.</summary><returns>true if the ALT key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.button"><summary>Gets a <see cref="T:J#Sys.UI.MouseButton" /> enumeration value that indicates the button state of the mouse when the related event occurred.</summary><returns>A <see cref="T:J#Sys.UI.MouseButton" /> value.</returns></member><member name="F:J#Sys.UI.DomEvent.charCode"><summary>Gets the character code of the key that raised the associated keyPress event.</summary><returns>An integer value that represents the character code of the key or key combination that was pressed to raise the keyPress event.</returns></member><member name="F:J#Sys.UI.DomEvent.clientX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the client area of the browser window, excluding window scroll bars.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.clientY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the client area of the browser window, excluding window scroll bars.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.ctrlKey"><summary>Gets a Boolean value that indicates the state of the CTRL key when the associated event occurred.</summary><returns>true if the CTRL key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.keyCode"><summary>Gets the key code of the key that raised the <see cref="F:J#Sys.UI.Key.up" /> or <see cref="F:J#Sys.UI.Key.down" /> event.</summary><returns>An integer value that represents the key code of the key that was pressed to raise the <see cref="F:J#Sys.UI.Key.up" /> or <see cref="F:J#Sys.UI.Key.down" /> event.</returns></member><member name="F:J#Sys.UI.DomEvent.offsetX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the object that raised the event.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.offsetY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the object that raised the event.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.screenX"><summary>Gets the x-coordinate of the mouse pointer's position relative to the user's screen.</summary><returns>An integer that represents the x-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.screenY"><summary>Gets the y-coordinate of the mouse pointer's position relative to the user's screen.</summary><returns>An integer that represents the y-coordinate in pixels.</returns></member><member name="F:J#Sys.UI.DomEvent.shiftKey"><summary>Gets a Boolean value that indicates the state of the SHIFT key when the associated event occurred.</summary><returns>true if the SHIFT key was pressed when the event occurred; otherwise, false.</returns></member><member name="F:J#Sys.UI.DomEvent.target"><summary>Gets the object that the event acted on.</summary><returns>An object that represents the target that the event acted on.</returns></member><member name="F:J#Sys.UI.DomEvent.type"><summary>Gets the name of the event that was raised.</summary><returns>A string that represents the name of the event that was raised.</returns></member><member name="T:J#Sys.UI.DomElement"><summary>Defines static methods and properties that provide helper APIs for manipulating and inspecting DOM elements.</summary></member><member name="M:J#Sys.UI.DomElement.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.UI.DomElement" /> class.</summary></member><member name="M:J#Sys.UI.DomElement.addCssClass"><summary>Adds a CSS class to a DOM element if the class is not already part of the DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to add the CSS class to.</param><param name="className">The name of the CSS class to add.</param></member><member name="M:J#Sys.UI.DomElement.containsCssClass"><summary>Gets a value that indicates whether the DOM element contains the specified CSS class. This member is static and can be invoked without creating an instance of the class.</summary><returns>true if the element contains the specified CSS class; otherwise, false.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to test for the CSS class.</param><param name="className">The name of the CSS class to test for.</param></member><member name="M:J#Sys.UI.DomElement.getBounds"><summary>Gets a set of integer coordinates that represent the position, width, and height of a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><returns>An object of the JavaScript type Object that contains the x-coordinate and y-coordinate of the upper-left corner, the width, and the height of the element in pixels.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> instance to get the coordinates of.</param></member><member name="M:J#Sys.UI.DomElement.getElementById"><summary>Gets a DOM element that has the specified id attribute. This member is static and can be invoked without creating an instance of the class.</summary><returns>The <see cref="T:J#Sys.UI.DomElement" /> object with the specified ID.</returns><param name="id">The ID of the element to find.</param><param name="element">The parent element to search in. The default is the document element.</param></member><member name="M:J#Sys.UI.DomElement.getLocation"><summary>Gets the absolute position of a DOM element relative to the upper-left corner of the owner frame or window. This member is static and can be invoked without creating an instance of the class.</summary><returns>An object of the JavaScript type Object that contains the x-coordinate and y-coordinate of the element in pixels.</returns><param name="element">The target element.</param></member><member name="M:J#Sys.UI.DomElement.removeCssClass"><summary>Removes a CSS class from a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to remove the CSS class from.</param><param name="className">The name of the CSS class to remove.</param></member><member name="M:J#Sys.UI.DomElement.setLocation"><summary>Sets the position of a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target element.</param><param name="x">The x-coordinate in pixels.</param><param name="y">The y-coordinate in pixels.</param></member><member name="M:J#Sys.UI.DomElement.toggleCssClass"><summary>Toggles a CSS class in a DOM element. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to toggle.</param><param name="className">The name of the CSS class to toggle.</param></member><member name="M:J#Sys.UI.DomElement.getVisibilityMode"><summary>Returns a value that represents the layout characteristics of a DOM element when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method. This member is static and can be invoked without creating an instance of the class.</summary><returns>A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value that indicates the layout characteristics of <paramref name="element" /> when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method.</returns><param name="element">The target DOM element.</param></member><member name="M:J#Sys.UI.DomElement.setVisibilityMode"><summary>Sets the layout characteristics of a DOM element when it is hidden by invoking the <see cref="M:J#Sys.UI.DomElement.setVisible" /> method. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target DOM element.</param><param name="value">A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value.</param></member><member name="M:J#Sys.UI.DomElement.getVisible"><summary>Gets a value that indicates whether a DOM element is currently visible on the Web page. This member is static and can be invoked without creating an instance of the class.</summary><returns>true if <paramref name="element" /> is visible on the Web page; otherwise, false</returns><param name="element">The target DOM element.</param></member><member name="M:J#Sys.UI.DomElement.setVisible"><summary>Sets a DOM element to be visible or hidden. This member is static and can be invoked without creating an instance of the class.</summary><param name="element">The target DOM element.</param><param name="value">true to make <paramref name="element" /> visible on the Web page; false to hide <paramref name="element" />.</param></member><member name="T:J#Sys.UI.Behavior"><summary>Provides a base class for all AJAX behaviors in ASP.NET.</summary></member><member name="M:J#Sys.UI.Behavior.#ctor"><summary>When overridden in a derived class, initializes a new instance of that class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to associate with the behavior.</param></member><member name="P:J#Sys.UI.Behavior.element"><summary>Gets the HTML Document Object Model (DOM) element that the current <see cref="T:J#Sys.UI.Behavior" /> object is associated with.</summary><returns>The DOM element that the current <see cref="T:J#Sys.UI.Behavior" /> object is associated with.</returns></member><member name="P:J#Sys.UI.Behavior.id"><summary>Gets or sets the identifier for the <see cref="T:J#Sys.UI.Behavior" /> object.</summary><returns>A generated identifier that consists of the ID of the associated <see cref="T:J#Sys.UI.DomElement" />, the "$" character, and the <see cref="P:J#Sys.UI.Behavior.name" /> value of the <see cref="T:J#Sys.UI.Behavior" /> object.</returns><param name="value">The string value to use as the identifier.</param><exception cref="M:J#Error.invalidOperation">In all cases.</exception></member><member name="P:J#Sys.UI.Behavior.name"><summary>Gets or sets the name of the <see cref="T:J#Sys.UI.Behavior" /> object.</summary><returns>The name of the <see cref="T:J#Sys.UI.Behavior" /> object.</returns><param name="value">A string value to use as the name.</param><exception cref="M:J#Error.argument">(Debug) <paramref name="value" /> starts or ends with a space or is an empty string ("").</exception><exception cref="M:J#Error.invalidOperation">(Debug) The specified name already exists in the current <see cref="T:J#Sys.UI.DomElement" /> object.- or -The current <see cref="T:J#Sys.UI.DomElement" /> object has already been initialized.</exception></member><member name="M:J#Sys.UI.Behavior.initialize"><summary>Initializes the current <see cref="T:J#Sys.UI.Behavior" /> object. </summary></member><member name="M:J#Sys.UI.Behavior.dispose"><summary>Removes the current <see cref="T:J#Sys.UI.Behavior" /> object from the application.</summary></member><member name="M:J#Sys.UI.Behavior.getBehaviorByName"><summary>Gets a <see cref="T:J#Sys.UI.Behavior" /> instance with the specified <see cref="P:J#Sys.UI.Behavior.name" /> property from the specified HTML Document Object Model (DOM) element. This member a static member and can be invoked without creating an instance of the class.</summary><returns>The specified <see cref="T:J#Sys.UI.Behavior" /> object, if found; otherwise, null.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to search.</param><param name="name">The <see cref="P:J#Sys.UI.Behavior.name" /> property of the <see cref="T:J#Sys.UI.Behavior" /> instance to look for.</param></member><member name="M:J#Sys.UI.Behavior.getBehaviors"><summary>Gets the <see cref="T:J#Sys.UI.Behavior" /> objects that are associated with the specified HTML Document Object Model (DOM) element. This member is static and can be invoked without creating an instance of the class.</summary><returns>An array of references to <see cref="T:J#Sys.UI.Behavior" /> objects, or null if no references exist.</returns><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object to search.</param></member><member name="M:J#Sys.UI.Behavior.getBehaviorsByType"><summary>Gets an array of <see cref="T:J#Sys.UI.Behavior" /> objects that are of the specified type from the specified HTML Document Object Model (DOM) element. This method is is static and can be invoked without creating an instance of the class.</summary><returns>An array of all <see cref="T:J#Sys.UI.Behavior" /> objects of the specified type that are associated with the specified DOM element, if found; otherwise, an empty array.</returns><param name="element">The DOM element to search.</param><param name="type">The type of the <see cref="T:J#Sys.UI.Behavior" /> objects to find.</param></member><member name="T:J#Sys.UI.VisibilityMode"><summary>Describes the layout of a DOM element in the page when the element's <see cref="P:J#Sys.UI.Control.visible" /> property is set to false.</summary></member><member name="F:J#Sys.UI.VisibilityMode.hide"><summary>The element is not visible, but it occupies space on the page.</summary></member><member name="F:J#Sys.UI.VisibilityMode.collapse"><summary>The element is not visible, and the space it occupies is collapsed.</summary></member><member name="M:J#Sys.UI.VisibilityMode.parse"><summary /></member><member name="T:J#Sys.UI.Control"><summary>Provides the base class for all ASP.NET AJAX client controls.</summary></member><member name="M:J#Sys.UI.Control.#ctor"><summary>When called from a derived class, initializes a new instance of that class.</summary><param name="element">The <see cref="T:J#Sys.UI.DomElement" /> object that the control will be associated with.</param><exception cref="M:J#Error.invalidOperation">(Debug) The control is already defined.</exception></member><member name="P:J#Sys.UI.Control.element"><summary>Gets the HTML Document Object Model (DOM) element that the current <see cref="T:J#Sys.UI.Control" /> instance is associated with.</summary><returns>The DOM element that the current <see cref="T:J#Sys.UI.Control" /> instance is associated with.</returns></member><member name="P:J#Sys.UI.Control.id"><summary>Gets or sets the identifier for the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>The identifier for the current <see cref="T:J#Sys.UI.Control" /> object. The default is the <see cref="M:J#Sys.UI.DomElement.getElementById" /> value of the associated <see cref="T:J#Sys.UI.DomElement" /> object.</returns><param name="value">The string to use as the identifier.</param><exception cref="M:J#Error.invalidOperation">An attempt was made to set the value of <see cref="P:J#Sys.UI.Control.id" />.</exception></member><member name="P:J#Sys.UI.Control.parent"><summary>Gets or sets the parent control associated with the current control.</summary><returns>A reference to the parent control of the current control.</returns><param name="value">The parent control to associate with the current control.</param><exception cref="M:J#Error.invalidOperation">(Debug) <paramref name="value" /> represents a control that is lower in the control hierarchy.</exception></member><member name="P:J#Sys.UI.Control.visibilityMode"><summary>Gets or sets the <see cref="T:J#Sys.UI.VisibilityMode" /> value for the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>The current <see cref="T:J#Sys.UI.VisibilityMode" /> value associated with the <see cref="T:J#Sys.UI.Control" /> object.</returns><param name="value">A <see cref="T:J#Sys.UI.VisibilityMode" /> enumeration value.</param><exception cref="M:J#Error.invalidOperation">(Debug) An attempt was made to set a <see cref="P:J#Sys.UI.Control.visibilityMode" /> value after the <see cref="T:J#Sys.UI.Control" /> object's <see cref="M:J#Sys.UI.Control.dispose" /> method was invoked.</exception></member><member name="P:J#Sys.UI.Control.visible"><summary>Gets or sets the visibility of the current <see cref="T:J#Sys.UI.Control" /> object.</summary><returns>true if the current element is visible; otherwise, false.</returns><param name="value">true to display the current element on the page, or false to hide the control.</param><exception cref="M:J#Error.invalidOperation">(Debug) An attempt was made to set the <see cref="P:J#Sys.UI.Control.visible" /> property value after the <see cref="T:J#Sys.UI.Control" /> object's <see cref="M:J#Sys.UI.Control.dispose" /> method was invoked.</exception></member><member name="M:J#Sys.UI.Control.addCssClass"><summary>Adds a CSS class to the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to add.</param></member><member name="M:J#Sys.UI.Control.dispose"><summary>Removes the current control from the application.</summary></member><member name="M:J#Sys.UI.Control.onBubbleEvent"><summary>Called when an event is raised by the <see cref="M:J#Sys.UI.Control.raiseBubbleEvent" /> method.</summary><returns>false in all cases.</returns><param name="source">The object that triggered the event.</param><param name="args">The event arguments.</param></member><member name="M:J#Sys.UI.Control.raiseBubbleEvent"><summary>Calls the <see cref="M:J#Sys.UI.Control.onBubbleEvent" /> method of the parent control.</summary><param name="source">The object that triggered the event.</param><param name="args">The event arguments.</param></member><member name="M:J#Sys.UI.Control.removeCssClass"><summary>Removes a CSS class from the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to remove.</param></member><member name="M:J#Sys.UI.Control.toggleCssClass"><summary>Toggles a CSS class of the HTML Document Object Model (DOM) element that the control is attached to.</summary><returns>None.</returns><param name="className">A string that contains the name of the CSS class to toggle.</param></member><member name="T:J#Sys.WebForms.BeginRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.beginRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers. The <see cref="E:J#Sys.WebForms.PageRequestManager.beginRequest" /> event is raised just before the postback request is made.</summary></member><member name="M:J#Sys.WebForms.BeginRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.BeginRequestEventArgs" /> class. </summary><param name="request" /><param name="postBackElement" /></member><member name="P:J#Sys.WebForms.BeginRequestEventArgs.postBackElement"><summary>Gets the postback element that initiated the asynchronous postback. This property is read-only. </summary><returns>An HTML DOM element.</returns></member><member name="P:J#Sys.WebForms.BeginRequestEventArgs.request"><summary>Gets the request object that represents the current postback. </summary><returns>An instance of the <see cref="T:J#Sys.Net.WebRequest" /> class.</returns></member><member name="T:J#Sys.WebForms.EndRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.endRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers. The <see cref="E:J#Sys.WebForms.PageRequestManager.endRequest" /> event is raised just after the postback request has finished processing.</summary></member><member name="M:J#Sys.WebForms.EndRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.EndRequestEventArgs" /> class. </summary><param name="error" /><param name="dataItems" /><param name="response" /></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</summary><returns>A JSON data structure that contains name/value pairs that were registered as data items by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.error"><summary>Gets the Error object. </summary><returns>A base ECMAScript (JavaScript) <see cref="P:J#Sys.WebForms.EndRequestEventArgs.error" /> object.</returns></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.errorHandled"><summary>Get or sets a value that indicates whether the error has been handled. </summary><returns>true if the error has been handled; otherwise false.</returns><param name="v alue">true or false.</param></member><member name="P:J#Sys.WebForms.EndRequestEventArgs.response"><summary>Gets a response object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</summary><returns>A response object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</returns></member><member name="T:J#Sys.WebForms.InitializeRequestEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.initializeRequest" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to pass argument information to event handlers.</summary></member><member name="M:J#Sys.WebForms.InitializeRequestEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.InitializeRequestEventArgs" /> class. </summary><param name="R equest" /><param name="postBackElement" /></member><member name="P:J#Sys.WebForms.InitializeRequestEventArgs.postBackElement"><summary>Gets the postback element that initiated the asynchronous postback.</summary><returns>An HTML DOM element.</returns></member><member name="P:J#Sys.WebForms.InitializeRequestEventArgs.request"><summary>Gets the request object that represents the current postback. </summary><returns>A request object that is represented by the <see cref="T:J#Sys.Net.WebRequestExecutor" /> class.</returns></member><member name="T:J#Sys.WebForms.PageLoadedEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.pageLoaded" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to send event data that represents the <see cref="T:System.Web.UI.UpdatePanel" /> controls that were updated and created in the most recent postback.</summary></member><member name="M:J#Sys.WebForms.PageLoadedEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.PageLoadedEventArgs" /> class.</summary><param name="panelsUpdated" /><param name="panelsCreated" /><param name="dataItems" /></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class. </summary><returns>A JSON data structure that contains name/value pairs that were registered as data items that use the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.panelsCreated"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that were created when the DOM was updated during the last asynchronous postback.</summary><returns>An array of &lt;div&gt; elements that were created during the DOM manipulation that was caused by the last asynchronous postback. If no elements were created, the property returns null.</returns></member><member name="P:J#Sys.WebForms.PageLoadedEventArgs.panelsUpdated"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that were updated when the DOM was updated during the last asynchronous postback. </summary><returns>An array of &lt;div&gt; elements that were updated during the DOM manipulation that was the result of the last asynchronous postback. If no elements were created, the property returns null.</returns></member><member name="T:J#Sys.WebForms.PageLoadingEventArgs"><summary>Used by the <see cref="E:J#Sys.WebForms.PageRequestManager.pageLoading" /> event of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class to send event data that represents the <see cref="T:System.Web.UI.UpdatePanel" /> controls being updated and deleted as a result of the most recent postback.</summary></member><member name="M:J#Sys.WebForms.PageLoadingEventArgs.#ctor"><summary>Initializes a new instance of the <see cref="T:J#Sys.WebForms.PageLoadingEventArgs" /> class.</summary><param name="panelsUpdating" /><param name="panelsDeleting" /><param name="dataItems" /></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.dataItems"><summary>Gets a JSON data structure that contains data items that were registered by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class. </summary><returns>A JSON data structure that contains name/value pairs that were registered as data items by using the <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)" /> method of the <see cref="T:System.Web.UI.ScriptManager" /> class.</returns></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.panelsDeleting"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that will be deleted from the DOM as a result of the current asynchronous postback. </summary><returns>An array of &lt;div&gt; elements that will be deleted from the DOM. If no elements will be deleted, the property returns null.</returns></member><member name="P:J#Sys.WebForms.PageLoadingEventArgs.panelsUpdating"><summary>Gets an array of HTML &lt;div&gt; elements that represent <see cref="T:System.Web.UI.UpdatePanel" /> controls that will be updated in the DOM as a result of the current asynchronous postback.</summary><returns>An array of &lt;div&gt; elements that will be updated in the DOM. If no elements will be updated, the property returns null.</returns></member><member name="T:J#Sys.WebForms.PageRequestManager"><summary>Manages partial-page updates of server <see cref="T:System.Web.UI.UpdatePanel" /> controls in the browser. In addition, defines properties, events, and methods that can be used to customize a Web page by using client script.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.#ctor"><summary>You do not create a new instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class directly. Instead, an instance is available when partial-page rendering is enabled. Call the <see cref="M:J#Sys.WebForms.PageRequestManager.getInstance" /> method to get the instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class.</summary></member><member name="P:J#Sys.WebForms.PageRequestManager.isInAsyncPostBack"><summary>Returns a value that indicates whether the <see cref="T:J#Sys.WebForms.PageRequestManager" /> object is processing a postback.</summary></member><member name="E:J#Sys.WebForms.PageRequestManager.beginRequest"><summary>Raised before the processing of an asynchronous postback starts and the postback request is sent to the server.</summary><param name="beginRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.endRequest"><summary>Raised after an asynchronous postback is finished and control has been returned to the browser.</summary><param name="endRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.initializeRequest"><summary>Raised during the initialization of the asynchronous postback.</summary><param name="initializeRequestHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.pageLoaded"><summary>Raised after all content on the page is refreshed as a result of either a synchronous or an asynchronous postback.</summary><param name="pageLoadedHandler">The name of the handler method that will be called.</param></member><member name="E:J#Sys.WebForms.PageRequestManager.pageLoading"><summary>Raised after the response from the server to an asynchronous postback is received but before any content on the page is updated.</summary><param name="pageLoadingHandler">The name of the handler function that will be called.</param></member><member name="M:J#Sys.WebForms.PageRequestManager.abortPostBack"><summary>Stops all updates that would occur as a result of an asynchronous postback.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.dispose"><summary>Releases ECMAScript (JavaScript) resources and detaches events.</summary></member><member name="M:J#Sys.WebForms.PageRequestManager.getInstance"><summary>Returns the instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class for the page. </summary><returns>The current instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class. You do not create a new instance of the <see cref="T:J#Sys.WebForms.PageRequestManager" /> class directly. Instead, an instance is available when partial-page rendering is enabled.</returns></member>
    <member name="T:System.Web.ApplicationServices.ApplicationServicesHostFactory">
      <summary>Provides a factory class that creates instances of the authentication service, role service, and profile service in managed hosting environments.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ApplicationServices.ApplicationServicesHostFactory" /> class. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ApplicationServicesHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <summary>Creates an instance of the service class that has the specified base address or addresses.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> instance for the type of service that has the specified base address or addresses.</returns>
      <param name="serviceType">The type of service host to create.</param>
      <param name="baseAddresses">An array of base addresses for the service.</param>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated">
      <summary>Gets or sets a value that indicates whether the user credentials are valid.</summary>
      <returns>true if the user credentials are valid; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete">
      <summary>Gets or sets a value that indicates whether the user credentials have been authenticated.</summary>
      <returns>true if all the steps for validating the user credentials have been performed; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential">
      <summary>Gets additional user values for authentication.</summary>
      <returns>The values required for authentication other than user name and password.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.Password">
      <summary>Gets the password for the user.</summary>
      <returns>The password to validate.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName">
      <summary>Gets the authentication name for the user.</summary>
      <returns>The user name to validate.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.AuthenticationService">
      <summary>Enables access to ASP.NET forms authentication as a Web service.</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.Authenticating">
      <summary>Occurs when user credentials are being validated.</summary>
    </member>
    <member name="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie">
      <summary>Occurs when the authentication cookie is being set.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn">
      <summary>Determines whether the current user is authenticated.</summary>
      <returns>true if the user has been authenticated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)">
      <summary>Checks user credentials and creates an authentication ticket (cookie) if the credentials are valid.</summary>
      <returns>true if user credentials are valid; otherwise, false.</returns>
      <param name="username">The user name to be validated.</param>
      <param name="password">The password for the specified user.</param>
      <param name="customCredential">The value or values to validate in addition to <paramref name="userName" /> and <paramref name="password" />, if any.</param>
      <param name="isPersistent">A value that indicates whether the authentication ticket remains valid across sessions.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> or <paramref name="password" /> is null.</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.Logout">
      <summary>Clears the authentication ticket (cookie) in the browser.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)">
      <summary>Authenticates user credentials without issuing an authentication ticket.</summary>
      <returns>true if the user credentials are valid; otherwise, false.</returns>
      <param name="username">The user name to be validated.</param>
      <param name="password">The password for the specified user.</param>
      <param name="customCredential">The value or values to validate in addition to <paramref name="userName" /> and <paramref name="password" />, if any.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="userName" /> or <paramref name="password" /> is null.</exception>
    </member>
    <member name="T:System.Web.ApplicationServices.CreatingCookieEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CookieIsSet">
      <summary>Gets or sets a value that indicates whether the authentication cookie has been created.</summary>
      <returns>true if the authentication cookie was created; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential">
      <summary>Gets additional authentication values that are provided by the user.</summary>
      <returns>The custom values required for authentication, other than user name and password.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.IsPersistent">
      <summary>Gets a value that indicates whether the authentication cookie should be retained beyond the current session.</summary>
      <returns>true if the cookie should be retained beyond the current session; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.Password">
      <summary>Gets the password for the user.</summary>
      <returns>The password that is provided by the user for authentication.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.CreatingCookieEventArgs.UserName">
      <summary>Gets the name for the user.</summary>
      <returns>The name that is provided by the user for authentication.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.KnownTypesProvider">
      <summary>Creates an array of <see cref="T:System.Type" /> objects that contain the types of individual profile properties.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.KnownTypesProvider.GetKnownTypes(System.Reflection.ICustomAttributeProvider)">
      <summary>Creates an array of <see cref="T:System.Type" /> objects that contain the types of individual profile properties.</summary>
      <returns>An array of types of individual profile properties.</returns>
      <param name="knownTypeAttributeTarget">A provider object.</param>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfilePropertyMetadata">
      <summary>Provides a collection of values that describe a profile property. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfilePropertyMetadata.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> class. </summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.AllowAnonymousAccess">
      <summary>Gets or sets a value that indicates whether the property is available to unauthenticated users.</summary>
      <returns>true if the property is available to unauthenticated users; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.DefaultValue">
      <summary>Gets or sets the default value of the property.</summary>
      <returns>A serialized representation of the default value for the property, if a default value is defined in the Web.config file; otherwise the string "(null)".</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.ExtensionData">
      <summary>Gets or sets a reference to an <see cref="T:System.Runtime.Serialization.ExtensionDataObject" /> instance. </summary>
      <returns>A reference to an object that stores extended data during deserialization operations.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.IsReadOnly">
      <summary>Gets or sets a value that indicates whether a profile property is read-only.</summary>
      <returns>true if the profile property is read-only; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.PropertyName">
      <summary>Gets or sets the name of the profile property.</summary>
      <returns>The name of the profile property as defined in the Web.config file.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.SerializeAs">
      <summary>Gets or sets a value that indicates how to serialize the property value.</summary>
      <returns>The enumeration value.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ProfilePropertyMetadata.TypeName">
      <summary>Gets or sets the assembly-qualified name of the profile property type. </summary>
      <returns>The assembly-qualified name of the profile property type.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ProfileService">
      <summary>Enables access to ASP.NET user profiles through a Web service.</summary>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetAllPropertiesForCurrentUser(System.Boolean)">
      <summary>Retrieves all the profile properties and values that are available to the profile service for the current user.</summary>
      <returns>The profile properties and values.</returns>
      <param name="authenticatedUserOnly">A value that indicates whether properties are returned only for users who have been authenticated.</param>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesForCurrentUser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
      <summary>Retrieves the specified profile properties and values for the current user.</summary>
      <returns>The profile property information and values.</returns>
      <param name="properties">A collection of string values that contains the names of the profile properties to retrieve.</param>
      <param name="authenticatedUserOnly">A value that indicates whether properties are returned only for users who have been authenticated.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="properties" /> parameter or an item in the <paramref name="properties" /> collection is null.</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.GetPropertiesMetadata">
      <summary>Retrieves information about the profile properties that are available through the profile service.</summary>
      <returns>An array of <see cref="T:System.Web.ApplicationServices.ProfilePropertyMetadata" /> objects that contain information about the profile properties.</returns>
    </member>
    <member name="M:System.Web.ApplicationServices.ProfileService.SetPropertiesForCurrentUser(System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Sets the values of the specified properties in the user profile.</summary>
      <returns>The properties that were not set for the user profile, if any.</returns>
      <param name="values">A collection that contains names and values of the profile properties to set. </param>
      <param name="authenticatedUserOnly">A value that indicates whether properties are set only for users who have been authenticated. </param>
    </member>
    <member name="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties">
      <summary>Occurs when a user's profile properties are set. </summary>
    </member>
    <member name="T:System.Web.ApplicationServices.RoleService">
      <summary>Enables access to the ASP.NET role provider as a WCF Web service. </summary>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.GetRolesForCurrentUser">
      <summary>Returns all the roles for the logged-in user.</summary>
      <returns>An array of the names of the roles that the user belongs to.</returns>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="M:System.Web.ApplicationServices.RoleService.IsCurrentUserInRole(System.String)">
      <summary>Determines whether the logged-in user belongs to the specified role.</summary>
      <returns>true if the user is in the specified role; otherwise, false.</returns>
      <param name="role">The name of the role to check.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="role" /> is null or the user is not logged in.</exception>
      <exception cref="T:System.Configuration.Provider.ProviderException">Role management is not enabled.</exception>
    </member>
    <member name="E:System.Web.ApplicationServices.RoleService.SelectingProvider">
      <summary>Occurs when a <see cref="T:System.Web.ApplicationServices.RoleService" /> instance determines which role provider to use for checking the user's roles.</summary>
    </member>
    <member name="T:System.Web.ApplicationServices.SelectingProviderEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.RoleService.SelectingProvider" /> event.</summary>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.ProviderName">
      <summary>Gets or sets the role provider to use for retrieving the user's roles.</summary>
      <returns>The name of the role provider that is used to get the user's roles.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.SelectingProviderEventArgs.User">
      <summary>Gets the authenticated user.</summary>
      <returns>An object that contains the authenticated user.</returns>
    </member>
    <member name="T:System.Web.ApplicationServices.ValidatingPropertiesEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ApplicationServices.ProfileService.ValidatingProperties" /> event. </summary>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.FailedProperties">
      <summary>Gets the collection that contains profile properties that have failed validation. </summary>
      <returns>The profile properties that have failed validation.</returns>
    </member>
    <member name="P:System.Web.ApplicationServices.ValidatingPropertiesEventArgs.Properties">
      <summary>Gets the collection of names and values of the profile properties to validate.</summary>
      <returns>The names and values of the profile properties to validate.</returns>
    </member>
    <member name="T:System.Web.ClientServices.ClientFormsIdentity">
      <summary>Represents a user identity authenticated for client application services by using forms authentication. </summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class. </summary>
      <param name="name">The name of the authenticated user.</param>
      <param name="password">The password of the authenticated user.</param>
      <param name="provider">The membership provider used to authenticate the user. </param>
      <param name="authenticationType">The type of authentication that is used.</param>
      <param name="isAuthenticated">true if the user has been authenticated; otherwise, false.</param>
      <param name="authenticationCookies">The cookies retrieved from the authentication service. </param>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies">
      <summary>Gets a collection of the cookies retrieved from the authentication service. </summary>
      <returns>The cookies retrieved from the authentication service.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType">
      <summary>Gets the type of authentication that is used to authenticate the user.</summary>
      <returns>The type of authentication that is used to authenticate the user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />. </summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated">
      <summary>Gets a value indicating whether the user has been authenticated. </summary>
      <returns>true if the user has been authenticated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Name">
      <summary>Gets the name of the user.</summary>
      <returns>The name of the user.</returns>
    </member>
    <member name="P:System.Web.ClientServices.ClientFormsIdentity.Provider">
      <summary>Gets the membership provider that is used to authenticate the user.</summary>
      <returns>The membership provider that is used to authenticate the user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser">
      <summary>Silently authenticates the user by using cached credentials. </summary>
    </member>
    <member name="T:System.Web.ClientServices.ClientRolePrincipal">
      <summary>Represents security information for client application services, which includes role information.</summary>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.#ctor(System.Security.Principal.IIdentity)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> class. </summary>
      <param name="identity">Represents the current user.</param>
    </member>
    <member name="P:System.Web.ClientServices.ClientRolePrincipal.Identity">
      <summary>Gets the security identity associated with the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" />.</summary>
      <returns>Represents the current user. </returns>
    </member>
    <member name="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)">
      <summary>Gets a value indicating whether the user represented by the <see cref="T:System.Web.ClientServices.ClientRolePrincipal" /> is in the specified role.</summary>
      <returns>true if the user is in the specified role; false if the user is not in the specified role or is not authenticated.</returns>
      <param name="role">The role to check. </param>
    </member>
    <member name="T:System.Web.ClientServices.ConnectivityStatus">
      <summary>Represents the status of an application's network connection.</summary>
    </member>
    <member name="P:System.Web.ClientServices.ConnectivityStatus.IsOffline">
      <summary>Gets or sets a value indicating whether an application is in offline mode.</summary>
      <returns>true if the application is in offline mode; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials">
      <summary>Represents user login information for forms authentication by using client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.#ctor(System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials" /> class. </summary>
      <param name="username">The user name.</param>
      <param name="password">The user password.</param>
      <param name="rememberMe">A value indicating whether the user credentials should be saved and reused for subsequent login attempts.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.Password">
      <summary>Gets or sets the user password.</summary>
      <returns>The user password.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.RememberMe">
      <summary>Gets or sets a value indicating whether the user credentials should be saved and reused for subsequent login attempts. </summary>
      <returns>true if the credentials should be saved and reused; otherwise, false. </returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationCredentials.UserName">
      <summary>Gets or sets the user name. </summary>
      <returns>The user name.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider">
      <summary>Enables forms authentication with client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="oldPassword">Not used.</param>
      <param name="newPassword">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="newPasswordQuestion">Not used.</param>
      <param name="newPasswordAnswer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="email">Not used.</param>
      <param name="passwordQuestion">Not used.</param>
      <param name="passwordAnswer">Not used.</param>
      <param name="isApproved">Not used.</param>
      <param name="providerUserKey">Not used.</param>
      <param name="status">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="deleteAllRelatedData">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="emailToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="usernameToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used. This parameter is passed uninitialized.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used. This parameter is passed uninitialized.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="providerUserKey">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="email">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.-or-<paramref name="config" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is empty.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout">
      <summary>Logs out the user.</summary>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>This property is not used by this class.</summary>
      <returns>Always zero.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>This property is not used by this class.</summary>
      <returns>Always one.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordFormat">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>This property is not used by this class.</summary>
      <returns>Always "*".</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ServiceUri">
      <summary>Gets or sets the URI of the authentication service.</summary>
      <returns>The authentication service URI.</returns>
      <exception cref="T:System.ArgumentException">When getting this property, no service URI was found in the application configuration file, and this property has not been previously set. </exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>This method is not used by this class.</summary>
      <param name="user">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated">
      <summary>Occurs when the user is validated. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Authenticates a user by using the specified user name and password.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate, or <see cref="F:System.String.Empty" /> or null to retrieve credentials from the <see cref="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider" /> implementation that this application is configured to use.</param>
      <param name="password">The password of the user to authenticate.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.Boolean)">
      <summary>Authenticates a user by using the specified user name and password, optionally storing a hash of the password in the local data cache.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate.</param>
      <param name="password">The password of the user to authenticate.</param>
      <param name="rememberMe">true to store a hash of the password in the local data cache for offline use and for automatic reauthentication when the user authentication cookie expires; false to disable offline login or to require users to reauthenticate when the cookie expires.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.ValidateUser(System.String,System.String,System.String)">
      <summary>Authenticates a user at the specified service URI by using the specified user name and password.</summary>
      <returns>true if the user was authenticated; otherwise, false.</returns>
      <param name="username">The name of the user to authenticate.</param>
      <param name="password">The password of the user to authenticate.</param>
      <param name="serviceUri">The URI of the authentication service to use.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the membership provider is unable to access the authentication service.</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientRoleProvider">
      <summary>Gets role information for Windows-based applications from an Microsoft Ajax roles service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])">
      <summary>This method is not used by this class.</summary>
      <param name="usernames">Not used.</param>
      <param name="roleNames">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)">
      <summary>This method is not used by this class.</summary>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception. </returns>
      <param name="roleName">Not used.</param>
      <param name="throwOnPopulatedRole">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception. </returns>
      <param name="roleName">Not used.</param>
      <param name="usernameToMatch">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)">
      <summary>Gets the names of the roles that the specified user belongs to.</summary>
      <returns>The role names that <paramref name="username" /> belongs to or an empty array if the user is not authenticated.</returns>
      <param name="username">The name of the user to retrieve roles for. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is <see cref="F:System.String.Empty" /> or null.-or-<paramref name="username" /> is not the user name of the current, authenticated user. </exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider. </summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.-or-<paramref name="config" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is empty.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> has already been initialized.</exception>
      <exception cref="T:System.FormatException">
        <paramref name="config" /> contains a cacheTimeout value that is not in the correct format for conversion to an <see cref="T:System.Int32" /> value.</exception>
      <exception cref="T:System.OverflowException">
        <paramref name="config" /> contains a cacheTimeout value that represents a number less than <see cref="F:System.Int32.MinValue" /> or greater than <see cref="F:System.Int32.MaxValue" />.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)">
      <summary>Gets a value indicating whether the specified user is in the specified role.</summary>
      <returns>true if the specified user is in the specified role; false if the specified user is not authenticated or is not in the specified role. </returns>
      <param name="username">The name of the user.</param>
      <param name="roleName">The name of the role.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is <see cref="F:System.String.Empty" /> or null.-or-<paramref name="username" /> is not the user name of the current, authenticated user. </exception>
      <exception cref="T:System.Net.WebException">The user is no longer authenticated.-or-The roles service is not available.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])">
      <summary>This method is not used by this class.</summary>
      <param name="usernames">Not used.</param>
      <param name="roleNames">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache">
      <summary>Clears the cached role information and resets the cache time-out period.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="roleName">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri">
      <summary>Gets or sets the URI of the role service. </summary>
      <returns>The role service URI.</returns>
      <exception cref="T:System.ArgumentException">When getting this property, no service URI was found in the application configuration file, and this property has not been previously set. </exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientSettingsProvider">
      <summary>Enables Windows-based applications to retrieve user settings from a Web settings service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)">
      <summary>Gets the previous version of the specified property.</summary>
      <returns>Represents the previous version of the specified property.</returns>
      <param name="context">This parameter is not used by this method.</param>
      <param name="property">Represents the property to get the previous version of.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyMetadata(System.String)">
      <summary>Gets a collection of metadata for all properties retrieved from the specified Web settings service.</summary>
      <returns>The property metadata.</returns>
      <param name="serviceUri">The Web settings service to retrieve property metadata from.</param>
      <exception cref="T:System.Net.WebException">The Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <returns>A <see cref="T:System.Configuration.SettingsPropertyValueCollection" /> containing the values for the specified settings property group.</returns>
      <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application use.</param>
      <param name="propertyCollection"></param>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes the provider.</summary>
      <param name="name">The friendly name of the provider.</param>
      <param name="config">A collection of name/value pairs representing the provider-specific attributes specified in the configuration for this provider.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is <see cref="F:System.String.Empty" />.-or-<paramref name="config" /> contains an unrecognized value. For more information, see the Remarks section.</exception>
      <exception cref="T:System.InvalidOperationException">This <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> has already been initialized.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Reset(System.Configuration.SettingsContext)">
      <summary>Resets all user settings to their default values.</summary>
      <param name="context">This parameter is not used by this method.</param>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" /> property value is false and the Web settings service at the <see cref="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri" /> location is unavailable.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientSettingsProvider.ServiceUri">
      <summary>Gets or sets the Web settings service location.</summary>
      <returns>The URI of the Web settings service.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
      <param name="context">A <see cref="T:System.Configuration.SettingsContext" /> describing the current application usage.</param>
      <param name="propertyValueCollection"></param>
    </member>
    <member name="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved">
      <summary>Occurs after the settings provider attempts to save the property values to the Web settings service.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
      <summary>This method is not used by this class.</summary>
      <param name="context">Not used.</param>
      <param name="properties">Not used.</param>
    </member>
    <member name="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider">
      <summary>Enables Windows authentication with client application services.</summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider" /> class. </summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ApplicationName">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePassword(System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="oldPassword">Not used.</param>
      <param name="newPassword">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="newPasswordQuestion">Not used.</param>
      <param name="newPasswordAnswer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="password">Not used.</param>
      <param name="email">Not used.</param>
      <param name="passwordQuestion">Not used.</param>
      <param name="passwordAnswer">Not used.</param>
      <param name="isApproved">Not used.</param>
      <param name="providerUserKey">Not used.</param>
      <param name="status">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.DeleteUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="deleteAllRelatedData">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordReset">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.EnablePasswordRetrieval">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="emailToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="usernameToMatch">Not used.</param>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="pageIndex">Not used.</param>
      <param name="pageSize">Not used.</param>
      <param name="totalRecords">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetNumberOfUsersOnline">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.Object,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="providerUserKey">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUser(System.String,System.Boolean)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="userIsOnline">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.GetUserNameByEmail(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="email">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.Logout">
      <summary>Logs out the user.</summary>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MaxInvalidPasswordAttempts">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredNonAlphanumericCharacters">
      <summary>This property is not used by this class.</summary>
      <returns>Always zero.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.MinRequiredPasswordLength">
      <summary>This property is not used by this class.</summary>
      <returns>Always one.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordAttemptWindow">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordFormat">
      <summary>This property is not used by this class.</summary>
      <returns>Always <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.PasswordStrengthRegularExpression">
      <summary>This property is not used by this class.</summary>
      <returns>Always "*".</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresQuestionAndAnswer">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.RequiresUniqueEmail">
      <summary>This property is not used by this class.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ResetPassword(System.String,System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <param name="answer">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UnlockUser(System.String)">
      <summary>This method is not used by this class.</summary>
      <returns>Not applicable. This method always throws an exception.</returns>
      <param name="username">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)">
      <summary>This method is not used by this class.</summary>
      <param name="user">Not used.</param>
      <exception cref="T:System.NotSupportedException">Always thrown.</exception>
    </member>
    <member name="M:System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider.ValidateUser(System.String,System.String)">
      <summary>Automatically authenticates the current user by using the identity supplied by the operating system.</summary>
      <returns>Always true.</returns>
      <param name="username">Must be <see cref="F:System.String.Empty" /> or null.</param>
      <param name="password">Must be <see cref="F:System.String.Empty" /> or null.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="username" /> is not <see cref="F:System.String.Empty" /> or null.-or-<paramref name="password" /> is not <see cref="F:System.String.Empty" /> or null.</exception>
    </member>
    <member name="T:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider">
      <summary>Defines a method that the <see cref="T:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider" /> class calls to retrieve user credentials. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.IClientFormsAuthenticationCredentialsProvider.GetCredentials">
      <summary>Retrieves user credentials.</summary>
      <returns>The user login information.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ClientServices.Providers.ClientSettingsProvider.SettingsSaved" /> event. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.SettingsSavedEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.SettingsSavedEventArgs" /> class. </summary>
      <param name="failedSettingsList">The settings that the settings provider was unable to save.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.SettingsSavedEventArgs.FailedSettingsList">
      <summary>Gets the settings that the <see cref="T:System.Web.ClientServices.Providers.ClientSettingsProvider" /> was unable to save to the server. </summary>
      <returns>The settings that were not saved.</returns>
    </member>
    <member name="T:System.Web.ClientServices.Providers.UserValidatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.UserValidated" /> event. </summary>
    </member>
    <member name="M:System.Web.ClientServices.Providers.UserValidatedEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.ClientServices.Providers.UserValidatedEventArgs" /> class. </summary>
      <param name="username">The user name of the validated user.</param>
    </member>
    <member name="P:System.Web.ClientServices.Providers.UserValidatedEventArgs.UserName">
      <summary>Gets the user name of the validated user.</summary>
      <returns>The user name of the validated user. </returns>
    </member>
    <member name="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation">
      <summary>Defines the interface to implement to obtain additional context information.</summary>
    </member>
    <member name="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)">
      <summary>Gets additional context information.</summary>
      <param name="serviceReferenceExtensionFileContents">Provides the content of any extension files that are associated with the .svcmap file of a WCF service reference.</param>
      <param name="serviceProvider">A reference to a Visual Studio service provider to be queried for additional information.</param>
    </member>
    <member name="T:System.Web.Compilation.WCFBuildProvider">
      <summary>Generates proxy class code for Windows Communication Foundation (WCF) services </summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Compilation.WCFBuildProvider" /> class. </summary>
    </member>
    <member name="M:System.Web.Compilation.WCFBuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)">
      <summary>Generates the service proxy class source code and adds it to the specified assembly builder.</summary>
      <param name="assemblyBuilder">An instance of the <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object that the generated proxy code must be added to. This instance is provided by ASP.NET at run time.</param>
    </member>
    <member name="T:System.Web.Configuration.Converter">
      <summary>Represents a configuration element in a configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.Converter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.Converter" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.Converter.Name">
      <summary>Gets or sets the unique identifier for the converter.</summary>
      <returns>The unique identifier for the converter.</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Properties">
      <summary>Gets a collection of configuration-element properties.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.Converter.Type">
      <summary>Gets or sets the fully qualified type name of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> object.</summary>
      <returns>The fully qualified type name of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.ConvertersCollection">
      <summary>Represents a configuration collection that contains references to <see cref="T:System.Web.Configuration.Converter" /> objects.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ConvertersCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Add(System.Web.Configuration.Converter)">
      <summary>Adds a <see cref="T:System.Web.Configuration.Converter" /> object to the <see cref="T:System.Web.Configuration.ConvertersCollection" /> instance.</summary>
      <param name="converter">A string value that specifies the <see cref="T:System.Web.Configuration.Converter" /> reference.</param>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Configuration.Converter" /> objects from a <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</summary>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.CreateNewElement">
      <summary>Creates a new <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>A new <see cref="T:System.Configuration.ConfigurationElement" /> object.</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>Gets the element key for the specified <see cref="T:System.Configuration.ConfigurationElement" /> object.</summary>
      <returns>The object acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement" /> instance.</returns>
      <param name="element">The <see cref="T:System.Configuration.ConfigurationElement" /> object whose key you want to return.</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Item(System.Int32)">
      <summary>Gets or sets an item in the <see cref="T:System.Web.Configuration.ConvertersCollection" /> collection.</summary>
      <returns>The <see cref="T:System.Web.Configuration.Converter" /> object at the specified index.</returns>
      <param name="index">A <see cref="T:System.Web.Configuration.Converter" /> collection index.</param>
    </member>
    <member name="P:System.Web.Configuration.ConvertersCollection.Properties">
      <summary>Gets a collection of configuration-element properties.</summary>
      <returns>A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> object that contains configuration-element properties.</returns>
    </member>
    <member name="M:System.Web.Configuration.ConvertersCollection.Remove(System.Web.Configuration.Converter)">
      <summary>Removes the specified converter from the <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</summary>
      <param name="converter">The name of the converter to remove.</param>
    </member>
    <member name="T:System.Web.Configuration.ScriptingAuthenticationServiceSection">
      <summary>Represents the configuration section for authentication service settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingAuthenticationServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the authentication service is enabled for an application that uses AJAX features of ASP.NET.</summary>
      <returns>true if the authentication service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingAuthenticationServiceSection.RequireSSL">
      <summary>Gets or sets a value that indicates whether the authentication service requires an SSL-secured connection.</summary>
      <returns>true if the authentication service requires Secure Sockets Layer (SSL); otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingJsonSerializationSection">
      <summary>Represents a jsonSerialization configuration section in the scripting element of the configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingJsonSerializationSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.Converters">
      <summary>Gets a <see cref="T:System.Web.Configuration.ConvertersCollection" /> object that contains a collection of <see cref="T:System.Web.Configuration.Converter" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ConvertersCollection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.MaxJsonLength">
      <summary>Gets or sets the maximum length that is accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> object for JavaScript Object Notation (JSON) strings.</summary>
      <returns>An integer that represents the maximum length for JSON strings. The default is 102400 characters.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingJsonSerializationSection.RecursionLimit">
      <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
      <returns>The number of object levels. The default is 100.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is being set to a value that is less than one.</exception>
    </member>
    <member name="T:System.Web.Configuration.ScriptingProfileServiceSection">
      <summary>Represents the configuration section for profile-service settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingProfileServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the profile service is available in the AJAX-enabled ASP.NET application.</summary>
      <returns>true if the profile service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.ReadAccessProperties">
      <summary>Gets or sets the read-access profile properties.</summary>
      <returns>An array that contains the names of the read-access profile properties.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingProfileServiceSection.WriteAccessProperties">
      <summary>Gets or sets the write-access profile properties.</summary>
      <returns>An array that contains the names of the write-access profile properties.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingRoleServiceSection">
      <summary>Represents the configuration section for role-service settings.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingRoleServiceSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingRoleServiceSection.Enabled">
      <summary>Gets or sets a value that indicates whether the role service is enabled for an ASP.NET application that uses AJAX features.</summary>
      <returns>true if the role service is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection">
      <summary>Represents a ScriptingScriptResourceHandler configuration section in the &lt;scripting&gt; element of the configuration file. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingScriptResourceHandlerSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCaching">
      <summary>Gets or sets whether caching is enabled for script files that are embedded as resources in an assembly.</summary>
      <returns>true if caching is enabled for script files that are embedded as resources in an assembly; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingScriptResourceHandlerSection.EnableCompression">
      <summary>Gets or sets whether compression is enabled for script files that are embedded as resources in an assembly.</summary>
      <returns>true if compression is enabled for script files that are embedded as resources in an assembly; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingSectionGroup">
      <summary>Represents the configuration section for scripting settings. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.ScriptResourceHandler">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingScriptResourceHandlerSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingSectionGroup.WebServices">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.ScriptingWebServicesSectionGroup">
      <summary>Represents a group of related sections in a configuration file.</summary>
    </member>
    <member name="M:System.Web.Configuration.ScriptingWebServicesSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.ScriptingWebServicesSectionGroup" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.AuthenticationService">
      <summary>Gets the authenticationService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingAuthenticationServiceSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.JsonSerialization">
      <summary>Gets the jsonSerialization section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingJsonSerializationSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.ProfileService">
      <summary>Gets the profileService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingProfileServiceSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Configuration.ScriptingWebServicesSectionGroup.RoleService">
      <summary>Gets the roleService section that is contained in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingRoleServiceSection" /> object.</returns>
    </member>
    <member name="T:System.Web.Configuration.SystemWebExtensionsSectionGroup">
      <summary>Represents a group of related sections in a configuration file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Configuration.SystemWebExtensionsSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Configuration.SystemWebExtensionsSectionGroup" /> class.</summary>
    </member>
    <member name="P:System.Web.Configuration.SystemWebExtensionsSectionGroup.Scripting">
      <summary>Gets a <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> object that is derived from the current system configuration.</summary>
      <returns>A <see cref="T:System.Web.Configuration.ScriptingSectionGroup" /> object.</returns>
    </member>
    <member name="T:System.Web.DynamicData.DynamicDataSourceOperation">
      <summary>Describes the type of operation that is being performed by the data source object.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Delete">
      <summary>The data source object is performing a delete operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Insert">
      <summary>The data source object is performing an insert operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Select">
      <summary>The data source object is performing a select operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.Update">
      <summary>The data source object is performing an update operation.</summary>
    </member>
    <member name="F:System.Web.DynamicData.DynamicDataSourceOperation.ContextCreate">
      <summary>The data source object is creating the data context object.</summary>
    </member>
    <member name="T:System.Web.DynamicData.DynamicValidatorEventArgs">
      <summary>Base class for <see cref="T:System.Web.DynamicData.DynamicValidator" /> classes that contain event data.</summary>
    </member>
    <member name="M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.DynamicData.DynamicValidatorEventArgs" /> class, using the exception that occurred and the data source operation that caused the exception.</summary>
      <param name="exception">The exception that occurred.</param>
      <param name="operation">The data source operation that caused the exception.</param>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception">
      <summary>Gets the exception that occurs during a data source operation event.</summary>
      <returns>The exception that occurred during the data source operation event.</returns>
    </member>
    <member name="P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation">
      <summary>Gets the data source operation that caused an exception in the <see cref="T:System.Web.DynamicData.DynamicValidator" /> class.</summary>
      <returns>The data source operation that caused the exception.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicDataSource">
      <summary>Represents a data source for a Dynamic Data control.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.DynamicData.IDynamicDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters" /> collection.</summary>
      <returns>true if the data source control creates the Where clause dynamically; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.ContextType">
      <summary>Gets the type of the <see cref="T:System.Data.Linq.DataContext" /> class.</summary>
      <returns>The type associated with the class.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableDelete">
      <summary>Gets or sets a value that indicates whether the data source view supports the ability to delete rows.</summary>
      <returns>true if the data source view supports the ability to delete rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableInsert">
      <summary>Gets or sets a value that indicates whether the data source view supports the ability to insert rows.</summary>
      <returns>true if the data source view supports the ability to insert rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate">
      <summary>Gets or sets a value that indicates whether the data source view supports the ability to update rows.</summary>
      <returns>true if the view supports the ability to  update rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <summary>Gets or sets the entity set name.</summary>
      <returns>The name of the entity.</returns>
    </member>
    <member name="E:System.Web.DynamicData.IDynamicDataSource.Exception">
      <summary>Occurs when a data field fails to validate.</summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.Where">
      <summary>Gets or sets a value that specifies the condition that must be true for a record to be included in the retrieved data by a Where clause.</summary>
      <returns>The value that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicDataSource.WhereParameters">
      <summary>Gets a collection of parameters that are used to create a Where clause.</summary>
      <returns>A collection that contains the parameters that are used by this property.</returns>
    </member>
    <member name="T:System.Web.DynamicData.IDynamicValidatorException">
      <summary>Represents an interface implemented by Dynamic Data Exception classes.  </summary>
    </member>
    <member name="P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions">
      <summary>Gets the exceptions that occur when a new or edited data field is validated.</summary>
      <returns>A collection that contains all the exceptions that occurred.</returns>
    </member>
    <member name="T:System.Web.Handlers.ScriptModule">
      <summary>Manages HTTP modules for AJAX functionality in ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.ScriptModule" /> class.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Dispose">
      <summary>Releases the resources (other than memory) that are used by the module.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.Init(System.Web.HttpApplication)">
      <summary>Initializes a module and prepares it to handle requests.</summary>
      <param name="app">An <see cref="T:System.Web.HttpApplication" /> object that provides access to the methods, properties, and events that are common to all applications in an ASP.NET application.</param>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Dispose">
      <summary>Performs application-defined tasks that are associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
      <summary>Initializes the module and prepares it to handle requests.</summary>
      <param name="context">An <see cref="T:System.Web.HttpApplication" /> that provides access to the methods, properties, and events that are common to all application objects in an ASP.NET application.</param>
    </member>
    <member name="T:System.Web.Handlers.ScriptResourceHandler">
      <summary>Provides an HTTP handler for processing requests for script files that are embedded as resources in an assembly. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> class.</summary>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.IsReusable">
      <summary>When overridden in a derived class, gets a value that indicates whether another request can use the instance of the class.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>When overridden in a derived class, processes HTTP Web requests for a script file that is embedded as a resource in an assembly.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) that are used to service HTTP requests.</param>
    </member>
    <member name="P:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Gets a value that indicates whether another request can use the <see cref="T:System.Web.IHttpHandler" /> instance.</summary>
      <returns>true in all cases.</returns>
    </member>
    <member name="M:System.Web.Handlers.ScriptResourceHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Processes HTTP Web requests for a script file that is embedded as a resource in an assembly.</summary>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> object that provides references to the intrinsic server objects (for example, Request, Response, Session, and Server) that are used to service HTTP requests.</param>
      <exception cref="T:System.Web.HttpException">The type names for the debug and release versions of the embedded script do not match.</exception>
    </member>
    <member name="T:System.Web.Management.WebServiceErrorEvent">
      <summary>Defines the event that contains information about Web service errors.</summary>
    </member>
    <member name="M:System.Web.Management.WebServiceErrorEvent.#ctor(System.String,System.Object,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Management.WebServiceErrorEvent" /> class by using the specified event parameters.</summary>
      <param name="message">The event description.</param>
      <param name="eventSource">The object that is the source of the event.</param>
      <param name="exception">The exception that is associated with the error.</param>
    </member>
    <member name="P:System.Web.Management.WebServiceErrorEvent.WebServiceErrorEventCode">
      <summary>Gets the code number that is associated with the current error event.</summary>
      <returns>The code number that is associated with this event. For information about event codes, see <see cref="T:System.Web.Management.WebEventCodes" />.</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.DynamicClass">
      <summary>Provides functionality to create new classes from values in a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Query.Dynamic.DynamicClass" /> class. </summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.DynamicClass.ToString">
      <summary>Returns a string representation of the dynamic class.</summary>
      <returns>A string that represents the dynamic class and its properties.</returns>
    </member>
    <member name="T:System.Web.Query.Dynamic.ParseException">
      <summary>Represents errors that occur when a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control parses values to create a query.</summary>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Query.Dynamic.ParseException" /> class.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="position">The location of the error.</param>
    </member>
    <member name="P:System.Web.Query.Dynamic.ParseException.Position">
      <summary>Gets the location of the error.</summary>
      <returns>The location where the exception occurred. </returns>
    </member>
    <member name="M:System.Web.Query.Dynamic.ParseException.ToString">
      <summary>Returns the error message and the location of the error.</summary>
      <returns>The message and the position of the error. </returns>
    </member>
    <member name="T:System.Web.Script.AjaxFrameworkAssemblyAttribute">
      <summary>Specifies the assembly that contains ASP.NET AJAX resources.</summary>
    </member>
    <member name="M:System.Web.Script.AjaxFrameworkAssemblyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.AjaxFrameworkAssemblyAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.AjaxFrameworkAssemblyAttribute.GetDefaultAjaxFrameworkAssembly(System.Reflection.Assembly)">
      <summary>Returns the default ASP.NET AJAX framework assembly that contains ASP.NET AJAX resources.</summary>
      <returns>The default ASP.NET AJAX framework assembly.</returns>
      <param name="currentAssembly">The assembly that the <see cref="T:System.Web.Script.AjaxFrameworkAssemblyAttribute" /> attribute was declared in.</param>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptConverter">
      <summary>Provides an abstract base class for a custom type converter.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptConverter" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>When overridden in a derived class, converts the provided dictionary into an object of the specified type.</summary>
      <returns>The deserialized object.</returns>
      <param name="dictionary">An <see cref="T:System.Collections.Generic.IDictionary`2" /> instance of property data stored as name/value pairs.</param>
      <param name="type">The type of the resulting object.</param>
      <param name="serializer">The <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)">
      <summary>When overridden in a derived class, builds a dictionary of name/value pairs.</summary>
      <returns>An object that contains key/value pairs that represent the object’s data.</returns>
      <param name="obj">The object to serialize.</param>
      <param name="serializer">The object that is responsible for the serialization.</param>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes">
      <summary>When overridden in a derived class, gets a collection of the supported types.</summary>
      <returns>An object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> that represents the types supported by the converter.</returns>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptSerializer">
      <summary>Provides serialization and deserialization functionality for AJAX-enabled applications.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has no type resolver.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.#ctor(System.Web.Script.Serialization.JavaScriptTypeResolver)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class that has a custom type resolver.</summary>
      <param name="resolver">The custom type-resolver object.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType``1(System.Object)">
      <summary>Converts the given object to the specified type.</summary>
      <returns>The object that has been converted to the target type.</returns>
      <param name="obj">The object to convert.</param>
      <typeparam name="T">The type to which <paramref name="obj" /> will be converted.</typeparam>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a "__type" property that indicates a custom type, but the type resolver that is associated with the serializer cannot find a corresponding managed type.-or- <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a “__type” property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type.-or- <paramref name="obj" /> (or a nested member of <paramref name="obj" />) contains a “__type” property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).-or- An attempt was made to convert <paramref name="obj" /> to an array-like managed type, which is not supported for use as a deserialization target. -or- It is not possible to convert <paramref name="obj" /> to <paramref name="T" />. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="obj" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="obj" /> includes member definitions that are not available on type <paramref name="T" />. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.ConvertToType(System.Object,System.Type)">
      <summary>Converts the specified object to the specified type.</summary>
      <returns>The serialized JSON string.</returns>
      <param name="obj">The object to convert.</param>
      <param name="targetType">The type to convert the object to.</param>
      <exception cref="T:System.InvalidOperationException">The resulting JSON-formatted string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object. </exception>
      <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize``1(System.String)">
      <summary>Converts the specified JSON string to an object of type <paramref name="T" />.</summary>
      <returns>The deserialized object.</returns>
      <param name="input">The JSON string to be deserialized.</param>
      <typeparam name="T">The type of the resulting object.</typeparam>
      <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. -or- <paramref name="input" /> contains an unexpected character sequence. -or- <paramref name="input" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="input" /> includes member definitions that are not available on type <paramref name="T" />. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null. </exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> contains a “__type” property that indicates a custom type, but the type resolver associated with the serializer cannot find a corresponding managed type. -or- <paramref name="input" /> contains a “__type” property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type. -or- <paramref name="input" /> contains a “__type” property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract types or an interface). -or- An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target. -or- It is not possible to convert <paramref name="input" /> to <paramref name="T" />. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Deserialize(System.String,System.Type)">
      <summary>Converts a JSON-formatted string to an object of the specified type.</summary>
      <returns>The deserialized object.</returns>
      <param name="input">The JSON string to deserialize.</param>
      <param name="targetType">The type of the resulting object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The length of <paramref name="input" /> exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. -or- <paramref name="input" /> contains an unexpected character sequence. -or- <paramref name="input" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> contains a "__type" property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type. -or- <paramref name="input" /> contains a "__type" property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type. -or- <paramref name="input" /> contains a "__type" property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).-or- An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target. -or- It is not possible to convert <paramref name="input" /> to the target type. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.DeserializeObject(System.String)">
      <summary>Converts the specified JSON string to an object graph.</summary>
      <returns>The deserialized object.</returns>
      <param name="input">The JSON string to be deserialized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="input" /> length exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. -or- <paramref name="input" /> contains an unexpected character sequence. -or- <paramref name="input" /> is a dictionary type and a non-string key value was encountered. -or- <paramref name="input" /> includes member definitions that are not available on the target type.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="input" /> contains a “__type” property that indicates a custom type, but the type resolver that is currently associated with the serializer cannot find a corresponding managed type. -or- <paramref name="input" /> contains a “__type” property that indicates a custom type, but the result of deserializing the corresponding JSON string cannot be assigned to the expected target type. -or- <paramref name="input" /> contains a “__type” property that indicates either <see cref="T:System.Object" /> or a non-instantiable type (for example, an abstract type or an interface).-or- An attempt was made to convert a JSON array to an array-like managed type that is not supported for use as a JSON deserialization target. -or- It is not possible to convert <paramref name="input" /> to the target type. </exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength">
      <summary>Gets or sets the maximum length of JSON strings that are accepted by the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> class.</summary>
      <returns>The maximum length of JSON strings. The default is 2097152 characters, which is equivalent to 4 MB of Unicode string data.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
    </member>
    <member name="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit">
      <summary>Gets or sets the limit for constraining the number of object levels to process.</summary>
      <returns>The number of object levels. The default is 100.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The property is set to a value that is less than one.</exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters(System.Collections.Generic.IEnumerable{System.Web.Script.Serialization.JavaScriptConverter})">
      <summary>Registers a custom converter with the <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> instance. </summary>
      <param name="converters">An array that contains the custom converters to be registered.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="converters" /> is null. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object)">
      <summary>Converts an object to a JSON string.</summary>
      <returns>The serialized JSON string.</returns>
      <param name="obj">The object to serialize.</param>
      <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object. </exception>
      <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. </exception>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptSerializer.Serialize(System.Object,System.Text.StringBuilder)">
      <summary>Serializes an object and writes the resulting JSON string to the specified <see cref="T:System.Text.StringBuilder" /> object.</summary>
      <param name="obj">The object to serialize.</param>
      <param name="output">The <see cref="T:System.Text.StringBuilder" /> object that is used to write the JSON string.</param>
      <exception cref="T:System.InvalidOperationException">The resulting JSON string exceeds the value of <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.MaxJsonLength" />. -or- <paramref name="obj" /> contains a circular reference. A circular reference occurs when a child object has a reference to a parent object, and the parent object has a reference to the child object. </exception>
      <exception cref="T:System.ArgumentException">The recursion limit defined by <see cref="P:System.Web.Script.Serialization.JavaScriptSerializer.RecursionLimit" /> was exceeded. </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="output" /> is null.</exception>
    </member>
    <member name="T:System.Web.Script.Serialization.JavaScriptTypeResolver">
      <summary>Provides the abstract base class for implementing a custom type resolver.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.JavaScriptTypeResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveType(System.String)">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Type" /> object that is associated with the specified type name.</summary>
      <returns>The <see cref="T:System.Type" /> object that is associated with the specified type name.</returns>
      <param name="id">The name of the managed type.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.JavaScriptTypeResolver.ResolveTypeId(System.Type)">
      <summary>When overridden in a derived class, returns the type name for the specified <see cref="T:System.Type" /> object.</summary>
      <returns>The name of the specified managed type.</returns>
      <param name="type">The managed type to be resolved.</param>
    </member>
    <member name="T:System.Web.Script.Serialization.ScriptIgnoreAttribute">
      <summary>Specifies that <see cref="T:System.Web.Script.Serialization.JavaScriptSerializer" /> will not serialize the public property or public field. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.ScriptIgnoreAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.ScriptIgnoreAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.Script.Serialization.SimpleTypeResolver">
      <summary>Provides a type resolver for managed types.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Serialization.SimpleTypeResolver" /> class.</summary>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveType(System.String)">
      <summary>Returns the <see cref="T:System.Type" /> of the specified name.</summary>
      <returns>A <see cref="T:System.Type" /> object that has the specified name, if found; otherwise, null.</returns>
      <param name="id">The assembly-qualified name of the managed type.</param>
    </member>
    <member name="M:System.Web.Script.Serialization.SimpleTypeResolver.ResolveTypeId(System.Type)">
      <summary>Returns the assembly-qualified name of the specified <see cref="T:System.Type" />.</summary>
      <returns>A string that contains the assembly-qualified name of the specified type.</returns>
      <param name="type">The type to be resolved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="T:System.Web.Script.Services.GenerateScriptTypeAttribute">
      <summary>Specifies that the server type must be generated in the proxy object. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Services.GenerateScriptTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.GenerateScriptTypeAttribute" /> class for the specified type.</summary>
      <param name="type">The type to include in the proxy class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="type" /> is null.</exception>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.ScriptTypeId">
      <summary>Gets or sets the type identifier for the type metadata marker.</summary>
      <returns>The type identifier for the type metadata marker on the serialized JavaScript Object Notation (JSON) string. The default value is the assembly-qualified name of the type.</returns>
    </member>
    <member name="P:System.Web.Script.Services.GenerateScriptTypeAttribute.Type">
      <summary>Gets the type that is included in the proxy object.</summary>
      <returns>The type object that is included in the generated proxy object.</returns>
    </member>
    <member name="T:System.Web.Script.Services.ProxyGenerator">
      <summary>Represents a proxy code generator.</summary>
    </member>
    <member name="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean)">
      <summary>Retrieves the proxy generation code for the specified type.</summary>
      <returns>The proxy generation code.</returns>
      <param name="type">The type of the object to obtain the script for.</param>
      <param name="path">The location of the endpoint.</param>
      <param name="debug">true to include XML code comments; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> or <paramref name="path" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The specified type is not supported for proxy generation.</exception>
    </member>
    <member name="M:System.Web.Script.Services.ProxyGenerator.GetClientProxyScript(System.Type,System.String,System.Boolean,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Retrieves the proxy generation code for the specified type using the path and service end point.</summary>
      <returns>The proxy generation code.</returns>
      <param name="type">The type of the object to obtain the script for.</param>
      <param name="path">The location of the endpoint.</param>
      <param name="debug">true to include XML code comments; otherwise, false.</param>
      <param name="serviceEndpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="type" /> or <paramref name="path" /> parameter is null.</exception>
      <exception cref="T:System.ArgumentException">The specified type is not supported for proxy generation.</exception>
    </member>
    <member name="T:System.Web.Script.Services.ResponseFormat">
      <summary>Specifies how the Web method return-type is serialized.</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Json">
      <summary>The return type is serialized as JavaScript Object Notation (JSON).</summary>
    </member>
    <member name="F:System.Web.Script.Services.ResponseFormat.Xml">
      <summary>The return type is serialized as XML.</summary>
    </member>
    <member name="T:System.Web.Script.Services.ScriptMethodAttribute">
      <summary>Specifies which HTTP verb is used to invoke a method, and the format of the response. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.ScriptMethodAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.ResponseFormat">
      <summary>Gets or sets the format of the method response.</summary>
      <returns>One of the <see cref="T:System.Web.Script.Services.ResponseFormat" /> values. The default is Json.</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.UseHttpGet">
      <summary>Gets or sets a value that indicates whether to invoke the method by using HTTP GET.</summary>
      <returns>true if the method is invoked by using the HTTP GET command; false if the method is invoked by using the HTTP POST command. The default is false.</returns>
    </member>
    <member name="P:System.Web.Script.Services.ScriptMethodAttribute.XmlSerializeString">
      <summary>Gets or sets a value that indicates whether all return types are serialized as XML, which includes string types.</summary>
      <returns>true if all return types are serialized as XML; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Script.Services.ScriptServiceAttribute">
      <summary>Indicates that a Web service can be invoked from script. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Web.Script.Services.ScriptServiceAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Script.Services.ScriptServiceAttribute" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.AjaxFrameworkMode">
      <summary>Specifies how client scripts of the Microsoft Ajax client library are included on the client.</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Enabled">
      <summary>Specifies that the <see cref="T:System.Web.UI.ScriptManager" /> control automatically includes the MicrosoftAjax.js script file, which is a combined script file of every core framework script (legacy behavior).</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Disabled">
      <summary>Specifies that all Microsoft Ajax script features are disabled and that the <see cref="T:System.Web.UI.ScriptManager" /> control does not reference any scripts automatically.</summary>
    </member>
    <member name="F:System.Web.UI.AjaxFrameworkMode.Explicit">
      <summary>Specifies that you will explicitly include script references to individual framework core script file that your page requires, and that you will include references to the dependencies that each script file requires.</summary>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackErrorEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.AsyncPostBackErrorEventArgs" /> class.</summary>
      <param name="exception">The server exception raised during partial-page rendering.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="exception" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackErrorEventArgs.Exception">
      <summary>Gets the <see cref="T:System.Exception" /> raised during partial-page rendering.</summary>
      <returns>An <see cref="T:System.Exception" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.AsyncPostBackTrigger">
      <summary>Defines a control and optional event of the control as an asynchronous postback control trigger that causes an <see cref="T:System.Web.UI.UpdatePanel" /> control to refresh.</summary>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.#ctor">
      <summary>Initializes a new instance of an <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.ControlID">
      <summary>Gets or sets the name of the control that triggers an asynchronous postback for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A server control ID.</returns>
    </member>
    <member name="P:System.Web.UI.AsyncPostBackTrigger.EventName">
      <summary>Gets or sets the postback control event that triggers an <see cref="T:System.Web.UI.UpdatePanel" /> control to be updated.</summary>
      <returns>The event name. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was invoked.</summary>
      <returns>true if the trigger was invoked; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control and determines whether the event that is named in the trigger exists and is valid.</summary>
      <exception cref="T:System.InvalidOperationException">No <see cref="T:System.Web.UI.ScriptManager" /> control was found on the page.- or -The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property is not found for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.- or -The event that is named in the <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> property for the control that is named in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property does not match a standard event handler signature. </exception>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)">
      <summary>Raises the event that will trigger a postback and refresh of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <param name="sender">The event sender.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.AsyncPostBackTrigger.ToString">
      <summary>Returns a string representation of the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</summary>
      <returns>A string that represents the current <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.AuthenticationServiceManager">
      <summary>Configures the location of a custom implementation of the authentication service.</summary>
    </member>
    <member name="M:System.Web.UI.AuthenticationServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.AuthenticationServiceManager.Path">
      <summary>Gets or sets the path of the authentication service.</summary>
      <returns>The path of the custom authentication Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReference">
      <summary>Represents a collection of script references to combine into a single composite script.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompositeScriptReference" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Returns the URL that is rendered as the value of the src attribute of the script element.</summary>
      <returns>A string that contains a URL.</returns>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true to compress the script; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>Determines whether the composite script is a reference to an ASP.NET AJAX framework script.</summary>
      <returns>true if the composite script is a reference to an ASP.NET AJAX framework script; otherwise, false.</returns>
      <param name="scriptManager">The <see cref="T:System.Web.UI.ScriptManager" /> object that is contained on the page.</param>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReference.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
      <returns>true if the composite script contains a reference to an ASP.NET AJAX framework script; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReference.Scripts">
      <summary>Gets a collection of script references that are contained in the composite script object.</summary>
      <returns>A collection of script references that are contained in the composite script object.</returns>
    </member>
    <member name="T:System.Web.UI.CompositeScriptReferenceEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.CompositeScriptReferenceEventArgs.#ctor(System.Web.UI.CompositeScriptReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.CompositeScriptReferenceEventArgs" /> class.</summary>
      <param name="compositeScript">The composite script reference.</param>
    </member>
    <member name="P:System.Web.UI.CompositeScriptReferenceEventArgs.CompositeScript">
      <summary>Gets the composite script reference for the event.</summary>
      <returns>The composite script reference.</returns>
    </member>
    <member name="T:System.Web.UI.ExtenderControl">
      <summary>Provides an abstract base class for an extender control.</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ExtenderControl" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control. </summary>
      <returns>An enumeration of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control to which the extender is associated.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.GetScriptReferences">
      <summary>When overridden in a derived class, registers the script libraries for the control.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers the extender control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered in the browser window.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptDescriptors(System.Web.UI.Control)">
      <summary>Registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control. This method is a private member and cannot be inherited.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control that the extender is associated with.</param>
    </member>
    <member name="M:System.Web.UI.ExtenderControl.System#Web#UI#IExtenderControl#GetScriptReferences">
      <summary>Registers the script libraries for the control. This method is a private member and cannot be inherited.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.TargetControlID">
      <summary>Gets or sets the ID of the control that the extender is associated with.</summary>
      <returns>The ID of the server control that is being extended. </returns>
    </member>
    <member name="P:System.Web.UI.ExtenderControl.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property to prevent setting this value.</summary>
      <returns>true if the extender control is rendered on the page; otherwise, false. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.HistoryEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.HistoryEventArgs.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.HistoryEventArgs" /> class.</summary>
      <param name="state">A collection of name/value pairs that represent the state of the Web page.</param>
    </member>
    <member name="P:System.Web.UI.HistoryEventArgs.State">
      <summary>Gets a collection of name/value pairs that represent the state of a Web page.</summary>
      <returns>A collection that represents the state of a Web page.</returns>
    </member>
    <member name="T:System.Web.UI.IExtenderControl">
      <summary>Defines the behavior for an extender control.</summary>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)">
      <summary>Registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control and returns an object that contains the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
      <param name="targetControl">The server control that the extender is associated with.</param>
    </member>
    <member name="M:System.Web.UI.IExtenderControl.GetScriptReferences">
      <summary>Registers the script libraries for the control and returns an enumeration of ECMAScript (JavaScript) files that have been registered as embedded resources.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains JavaScript files that have been registered as embedded resources.</returns>
    </member>
    <member name="T:System.Web.UI.IScriptControl">
      <summary>Defines methods that ASP.NET server controls must implement to define ECMAScript (JavaScript) resources in AJAX-enabled applications.</summary>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptDescriptors">
      <summary>Gets a collection of script descriptors that represent ECMAScript (JavaScript) client components.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.IScriptControl.GetScriptReferences">
      <summary>Gets a collection of <see cref="T:System.Web.UI.ScriptReference" /> objects that define script resources that the control requires.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.PostBackTrigger">
      <summary>Defines a control inside a <see cref="T:System.Web.UI.UpdatePanel" /> control as a postback control.</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.PostBackTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.PostBackTrigger.ControlID">
      <summary>Gets or sets the name of the control that is an <see cref="T:System.Web.UI.PostBackTrigger" /> control for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A string that represents a server control ID.</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was activated.</summary>
      <returns>true if the trigger was activated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.PostBackTrigger" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.PostBackTrigger.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.UI.PostBackTrigger" /> object.</summary>
      <returns>A string that represents the current <see cref="T:System.Web.UI.PostBackTrigger" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.ProfileServiceManager">
      <summary>Configures a set of preloaded profile properties and the location of a custom implementation of the profile service.</summary>
    </member>
    <member name="M:System.Web.UI.ProfileServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ProfileServiceManager" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.LoadProperties">
      <summary>Gets or sets an array that contains the profile properties that will be made available to client script.</summary>
      <returns>A string array that contains the names of the profile properties that will be preloaded and made available to client script. The default is an empty array.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> property includes property names that are not in the current application’s profile schema.</exception>
    </member>
    <member name="P:System.Web.UI.ProfileServiceManager.Path">
      <summary>Gets or sets the path of a custom implementation of the profile Web service.</summary>
      <returns>The path of a custom implementation of the profile Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.RegisteredArrayDeclaration">
      <summary>Provides access to an ECMAScript (JavaScript) array declaration that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Control">
      <summary>Gets the control that registered the array declaration.</summary>
      <returns>A reference to the control that registered the array.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Name">
      <summary>Gets the name of the array.</summary>
      <returns>The name of the array.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredArrayDeclaration.Value">
      <summary>Gets the value or values of the array members.</summary>
      <returns>The value or values of the array.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredDisposeScript">
      <summary>Provides access to a dispose script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Control">
      <summary>Gets the control that registered the dispose script.</summary>
      <returns>A reference to the control that registered the dispose script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredDisposeScript.Script">
      <summary>Gets the name of the dispose script.</summary>
      <returns>The name of the dispose script.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredExpandoAttribute">
      <summary>Provides access to the name/value pair of a custom (expando) attribute that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Control">
      <summary>Gets the control that registered the custom (expando) attribute.</summary>
      <returns>A reference to the control that registered the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.ControlId">
      <summary>Gets the identifier of the control that registered the custom (expando) attribute.</summary>
      <returns>The identifier of the control that registered the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Encode">
      <summary>Gets a value that indicates whether the custom (expando) attribute is encoded.</summary>
      <returns>true if the custom attribute is encoded; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Name">
      <summary>Gets the name of the custom (expando) attribute.</summary>
      <returns>The name of the custom attribute.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredExpandoAttribute.Value">
      <summary>Gets the value of the custom (expando) attribute.</summary>
      <returns>The value of the custom attribute.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredHiddenField">
      <summary>Provides access to a hidden value that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Control">
      <summary>Gets the control that registered the hidden field.</summary>
      <returns>A reference to the control that registered the hidden field.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.InitialValue">
      <summary>Gets the initial value of the hidden field.</summary>
      <returns>The initial value of the hidden field.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredHiddenField.Name">
      <summary>Gets the name of the hidden field.</summary>
      <returns>The name of the hidden field.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScript">
      <summary>Provides access to a client script that was previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.AddScriptTags">
      <summary>Gets a value that indicates whether the script block should be rendered on the Web page enclosed in &lt;script&gt; tags.</summary>
      <returns>true if the script should be rendered on the Web page enclosed in &lt;script&gt; tags; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Control">
      <summary>Gets the control that registered the script.</summary>
      <returns>A reference to the control that registered the script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Key">
      <summary>Gets the key that, together with the <see cref="P:System.Web.UI.RegisteredScript.Type" /> value, identifies the script.</summary>
      <returns>The value of the key. This value can be null or empty.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Script">
      <summary>Gets the file name of the script.</summary>
      <returns>The file name of the script. This value can be null or empty.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.ScriptType">
      <summary>Gets the script type that indicates when the script is intended to be executed.</summary>
      <returns>A value defined by the <see cref="T:System.Web.UI.RegisteredScriptType" /> enumeration.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Type">
      <summary>Gets the client script type that, together with the <see cref="P:System.Web.UI.RegisteredScript.Key" /> value, identifies the script.</summary>
      <returns>The type of the script.</returns>
    </member>
    <member name="P:System.Web.UI.RegisteredScript.Url">
      <summary>Gets the URL of the script file.</summary>
      <returns>The URL of the script file. This value can be null or empty.</returns>
    </member>
    <member name="T:System.Web.UI.RegisteredScriptType">
      <summary>Specifies the type of client script block that is represented by a <see cref="T:System.Web.UI.RegisteredScript" /> object.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptInclude">
      <summary>A client script that executes every time that an asynchronous postback occurs.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientScriptBlock">
      <summary>A block of client code that executes one time during initial page rendering. A client script block of this type does not execute during partial-page updates.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.ClientStartupScript">
      <summary>A client script that is associated with a control that executes when the control starts.</summary>
    </member>
    <member name="F:System.Web.UI.RegisteredScriptType.OnSubmitStatement">
      <summary>A client script that executes when a page is submitted.</summary>
    </member>
    <member name="T:System.Web.UI.RoleServiceManager">
      <summary>Configures the location of a custom implementation of the role service.</summary>
    </member>
    <member name="M:System.Web.UI.RoleServiceManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.RoleServiceManager" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.LoadRoles">
      <summary>Gets or sets a value that indicates whether the list of roles for the currently logged-on user must be retrieved.</summary>
      <returns>true if the list of roles must be retrieved; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.RoleServiceManager.Path">
      <summary>Gets or sets the path of the role service.</summary>
      <returns>The path of the custom role Web service.</returns>
      <exception cref="T:System.ArgumentException">More than one unique path was set in the control hierarchy.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptBehaviorDescriptor">
      <summary>Extends the <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> class to provide a wrapper for defining behaviors that are converted into client script.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> class.</summary>
      <param name="type">A string representation of the type of the client behavior to describe.</param>
      <param name="elementID">The client ID of the target control.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> or <paramref name="elementID" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ClientID">
      <summary>Gets the identifier for the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance.</summary>
      <returns>The ID or a generated value, depending on the conditions described in the following table.The <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property has been set.The value of the <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property.The <see cref="P:System.Web.UI.ScriptComponentDescriptor.ID" /> property has not been set.A generated ID that consists of the value of the <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID" /> property, followed by a dollar sign ($), followed by the value of the <see cref="P:System.Web.UI.ScriptBehaviorDescriptor.Name" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.ElementID">
      <summary>Gets the id attribute of the associated element, as set in the constructor.</summary>
      <returns>The client ID of the target control, as set in the constructor.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptBehaviorDescriptor.GetScript">
      <summary>Gets the client script that implements the target control on the page.</summary>
      <returns>The client script that implements the target control on the page.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptBehaviorDescriptor.Name">
      <summary>Gets or sets the name of the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance.</summary>
      <returns>The name of the current <see cref="T:System.Web.UI.ScriptBehaviorDescriptor" /> instance, if set; otherwise, a generated name.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptComponentDescriptor">
      <summary>Provides a wrapper for converting server components into client script.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> class.</summary>
      <param name="type">The type of the target client component.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="type" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddComponentProperty(System.String,System.String)">
      <summary>Adds the specified property, and associates that property with the specified element.</summary>
      <param name="name">The name of the property.</param>
      <param name="componentID">The ID of the target component.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="componentID" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddElementProperty(System.String,System.String)">
      <summary>Adds the specified property and associates that property with the specified component.</summary>
      <param name="name">The name of the property.</param>
      <param name="elementID">The ID of the target element.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="component" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddEvent(System.String,System.String)">
      <summary>Adds the specified event and handler.</summary>
      <param name="name">The name of the event.</param>
      <param name="handler">The name of the handler function for the specified event.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> or <paramref name="handler" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddProperty(System.String,System.Object)">
      <summary>Adds the specified property and value.</summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string ("").</exception>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.AddScriptProperty(System.String,System.String)">
      <summary>Adds the specified property, and associates the property with the specified script.</summary>
      <param name="name">The name of the property.</param>
      <param name="script">The script that is rendered to the browser.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="script" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ClientID">
      <summary>When overridden in a derived class, gets the identifier of the client component.</summary>
      <returns>The ID of the client component.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptComponentDescriptor.GetScript">
      <summary>Gets the client script that implements the target control on the page.</summary>
      <returns>The client script that implements the target control on the page.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.ID">
      <summary>Gets or sets the ID of the current <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> instance.</summary>
      <returns>The ID of the current <see cref="T:System.Web.UI.ScriptComponentDescriptor" /> instance, if set; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptComponentDescriptor.Type">
      <summary>Gets or sets the type of the target client component.</summary>
      <returns>The type of the target client component.</returns>
      <exception cref="T:System.ArgumentException">An attempt was made to set the property to null.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptControl">
      <summary>Provides an abstract base class for a script control.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptControl" /> class in a derived class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptDescriptors">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.GetScriptReferences">
      <summary>When overridden in a derived class, returns the script files for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.OnPreRender(System.EventArgs)" /> event and registers the script control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.EventArgs)" /> event and sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered to the browser.</summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the server control content.</param>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>When overridden in a derived class, registers the <see cref="T:System.Web.UI.ScriptDescriptor" /> objects for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptControl.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>When overridden in a derived class, registers script files for the control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains ECMAScript (JavaScript) files that have been registered as embedded resources.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptControlDescriptor">
      <summary>Defines a client control object. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptControlDescriptor.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptControlDescriptor" /> class. </summary>
      <param name="type">The type of the client control object to create.</param>
      <param name="elementID">The ID of the HTML element that represents the control object to create. </param>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ClientID">
      <summary>Gets the ID of the client component.</summary>
      <returns>The ID of the client component.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ElementID">
      <summary>Gets the HTML ID of the client control object.</summary>
      <returns>The HTML ID of the client control object.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptControlDescriptor.ID">
      <summary>Gets the ID of the current <see cref="T:System.Web.UI.ScriptControlDescriptor" /> instance.</summary>
      <returns>The ID of the current <see cref="T:System.Web.UI.ScriptControlDescriptor" /> instance, if set; otherwise, an empty string ("").</returns>
      <exception cref="T:System.InvalidOperationException">An attempt was made to set the <see cref="P:System.Web.UI.ScriptControlDescriptor.ID" /> property.</exception>
    </member>
    <member name="T:System.Web.UI.ScriptDescriptor">
      <summary>When overridden in a derived class, defines script that creates an instance of a client class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptDescriptor" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptDescriptor.GetScript">
      <summary>When overridden in a derived class, returns script to create a client class or object.</summary>
      <returns>The ECMAScript (JavaScript) code for creating a client object.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptManager">
      <summary>Manages ASP.NET AJAX script libraries and script files, partial-page rendering, and client proxy class generation for Web and application services.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManager" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.Collections.Specialized.NameValueCollection,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state data collection and state title.</summary>
      <param name="state">A collection of key/value pairs that contain the data for the state.</param>
      <param name="title">The text that will be added to the browser's history stack as the title for this state.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state key and state value.</summary>
      <param name="key">The key part of the key/value pair that identifies the state of the Web page.</param>
      <param name="value">The value part of the key/value pair that identifies the state of the Web page.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.AddHistoryPoint(System.String,System.String,System.String)">
      <summary>Creates a history point and adds it to the browser's history stack, using the specified state key, state value, and state title.</summary>
      <param name="key">The key part of the key/value pair that identifies the state of the Web page.</param>
      <param name="value">The value part of the key/value pair that identifies the state of the Web page.</param>
      <param name="title">The text that will be added to the browser's history stack as the title for this state.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AjaxFrameworkAssembly">
      <summary>Gets the AJAX framework assembly that components on the page use. </summary>
      <returns>The AJAX framework assembly.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AjaxFrameworkMode">
      <summary>Gets or sets a value that specifies how client scripts of the Microsoft Ajax client library will be included on the client.</summary>
      <returns>An <see cref="T:System.Web.UI.AjaxFrameworkMode" /> enumeration value.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AllowCustomErrorsRedirect">
      <summary>Gets or sets a value that determines whether the custom errors section of the Web.config file is used during an error in an asynchronous postback.</summary>
      <returns>true if the custom errors setting in the Web.config file is used to determine error behavior during asynchronous postbacks; otherwise, false. The default is true.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.AsyncPostBackError">
      <summary>Occurs when there is a page error during an asynchronous postback.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackErrorMessage">
      <summary>Gets or sets the error message that is sent to the client when an unhandled server exception occurs during an asynchronous postback.</summary>
      <returns>The error message. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackSourceElementID">
      <summary>Gets the unique ID of the control that caused the asynchronous postback.</summary>
      <returns>The unique ID of a control, if the control has an ID; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AsyncPostBackTimeout">
      <summary>Gets or sets a value that indicates the time, in seconds, before asynchronous postbacks time out if no response is received.</summary>
      <returns>An integer that represents the time-out in seconds. The default value is 90 seconds.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.AuthenticationService">
      <summary>Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ClientNavigateHandler">
      <summary>Gets or sets the name of the method that handles the Sys.Application.navigate event on the client.</summary>
      <returns>The name of the method that handles the Sys.Application.navigate event on the client.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.CompositeScript">
      <summary>Gets a reference to the composite script that supports the Web page.</summary>
      <returns>A reference to the composite script.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EmptyPageUrl">
      <summary>Gets or sets a URL to a blank Web page..</summary>
      <returns>The URL to use if the target Web page is empty.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableCdn">
      <summary>Determines whether the current page loads client script references from CDN (Content Delivery Network) paths.</summary>
      <returns>true if client script references are loaded from CDN paths, otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableHistory">
      <summary>Gets or sets a value that indicates whether the Web page supports history point management.</summary>
      <returns>true if the Web page supports adding history points to the browser's history stack; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePageMethods">
      <summary>Gets or sets a value that indicates whether public static page methods in an ASP.NET page can be called from client script.</summary>
      <returns>true if static page methods on an ASP.NET page can be called from client script as Web methods; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnablePartialRendering">
      <summary>Gets or sets a value that enables partial rendering of a page, which in turn enables you to update regions of the page individually by using <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
      <returns>true if partial rendering is enabled and full-page updates are suppressed; otherwise, false. The default is true.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is set after the page's <see cref="E:System.Web.UI.Control.Init" /> event occurs.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptGlobalization">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders script that supports parsing and formatting of culture-specific information.</summary>
      <returns>true if culture-specific information can be displayed; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableScriptLocalization">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.ScriptManager" /> control renders localized versions of script files.</summary>
      <returns>true if localized script files will be rendered; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.EnableSecureHistoryState">
      <summary>Gets or sets a value that indicates whether to encrypt the history state string.</summary>
      <returns>true if the history state string should be encrypted; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetCurrent(System.Web.UI.Page)">
      <summary>Gets the <see cref="T:System.Web.UI.ScriptManager" /> instance for a given <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>The current <see cref="T:System.Web.UI.ScriptManager" /> instance for the selected <see cref="T:System.Web.UI.Page" /> object, or null if no instance is defined.</returns>
      <param name="page">The page instance to retrieve the <see cref="T:System.Web.UI.ScriptManager" /> from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredArrayDeclarations">
      <summary>Retrieves a read-only collection of ECMAScript (JavaScript) array declarations that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains the array declarations.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredClientScriptBlocks">
      <summary>Retrieves a read-only collection of client script blocks that were previously registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <returns>A generic collection that contains client script blocks.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredDisposeScripts">
      <summary>Retrieves a read-only collection of dispose scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains dispose scripts.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredExpandoAttributes">
      <summary>Retrieves a read-only collection of custom (expando) attributes that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains custom attributes.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredHiddenFields">
      <summary>Retrieves a read-only collection of hidden fields that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains hidden fields.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredOnSubmitStatements">
      <summary>Retrieves a read-only collection of onsubmit statements that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains onsubmit statements.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetRegisteredStartupScripts">
      <summary>Retrieves a read-only collection of startup scripts that were previously registered with the <see cref="T:System.Web.UI.Page" /> object.</summary>
      <returns>A generic collection that contains startup scripts.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.GetStateString">
      <summary>Retrieves a string that contains key/value pairs that represent the state of the Web page.</summary>
      <returns>A string containing the key/value pairs that represent the state of the Web page.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsDebuggingEnabled">
      <summary>Gets a value that indicates whether the debug versions of client script libraries will be rendered.</summary>
      <returns>true if the current request is executing in debug mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsInAsyncPostBack">
      <summary>Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</summary>
      <returns>true if the current postback is executing in partial-rendering mode; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.IsNavigating">
      <summary>Gets a value that indicates whether a <see cref="E:System.Web.UI.ScriptManager.Navigate" /> event is currently being handled.</summary>
      <returns>true if the <see cref="E:System.Web.UI.ScriptManager.Navigate" /> is being handled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>Reads form data that is posted from the browser to the server, and determines the source of the asynchronous postback.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key identifier for the control.</param>
      <param name="postCollection">The collection of all the incoming post data.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.LoadScriptsBeforeUI">
      <summary>Gets or sets a value that indicates whether scripts are loaded before or after markup for the page UI is loaded.</summary>
      <returns>true if scripts are loaded before markup for the UI is loaded; false if scripts are loaded after markup for the UI is loaded. The default is true.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManager.Navigate">
      <summary>Occurs when the user clicks the browser's Back or Forward button.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnAsyncPostBackError(System.Web.UI.AsyncPostBackErrorEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.AsyncPostBackError" /> event.</summary>
      <param name="e">The error event data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event and makes sure that only one <see cref="T:System.Web.UI.ScriptManager" /> control exists on the page.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">More than one instance of <see cref="T:System.Web.UI.ScriptManager" /> exists on the page.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event, and registers script files and services for partial-page updates. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The browser that made the partial-page request does not support at least DOM Level 1.0.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveCompositeScriptReference(System.Web.UI.CompositeScriptReferenceEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference" /> event.</summary>
      <param name="e">An object that represents the composite script reference.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.OnResolveScriptReference(System.Web.UI.ScriptReferenceEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event for each script reference that is managed by the <see cref="T:System.Web.UI.ScriptManager" /> control</summary>
      <param name="e">An object that represents the current script.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ProfileService">
      <summary>Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostBackEvent(System.String)">
      <summary>Processes a postback event by the <see cref="T:System.Web.UI.ScriptManager" /> control and loads the history state of the Web page.</summary>
      <param name="eventArgument">A string of key/value pairs that represent the history state of the Web page.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RaisePostDataChangedEvent">
      <summary>Raises events for the <see cref="T:System.Web.UI.ScriptManager" /> control when it posts back to the server.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Control,System.String,System.String)">
      <summary>Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</summary>
      <param name="control">The control that is registering the array.</param>
      <param name="arrayName">The name of the array to register.</param>
      <param name="arrayValue">The array value or values to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterArrayDeclaration(System.Web.UI.Page,System.String,System.String)">
      <summary>Registers an ECMAScript (JavaScript) array declaration with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and adds the array to the page.</summary>
      <param name="page">The page object that is registering the array.</param>
      <param name="arrayName">The name of the array to register.</param>
      <param name="arrayValue">The array value or values to register.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="arrayName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)">
      <summary>Registers a control as a trigger for asynchronous postbacks.</summary>
      <param name="control">The control to register for asynchronous postbacks.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The page is registered as an asynchronous postback control.</exception>
      <exception cref="T:System.ArgumentException">The registered control does not implement the <see cref="T:System.Web.UI.INamingContainer" />, <see cref="T:System.Web.UI.IPostBackDataHandler" />, or <see cref="T:System.Web.UI.IPostBackEventHandler" /> interfaces.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</summary>
      <param name="control">The control that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The client script block <paramref name="type" /> is null.- or -The control that is registering the script block is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script block is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptBlock(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a client script block with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds the script block to the page.</summary>
      <param name="page">The page object that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">The script block <paramref name="type" /> is null.- or -The page that is registering the script block is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>Registers a client script file with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control, and then adds a script file reference to the page. </summary>
      <param name="control">The control that is registering the client script file.</param>
      <param name="type">The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script file.</param>
      <param name="url">The URL of the script file.</param>
      <exception cref="T:System.ArgumentNullException">The client script file <paramref name="type" /> is null.- or -The control that is registering the script file is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script file is not in the page's control tree.- or -<paramref name="url" /> is null. - or -<paramref name="url" /> is empty.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptInclude(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>Registers client script with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that an asynchronous postback occurs, and then adds a script file reference to the page.</summary>
      <param name="page">The page object that is registering the client script file.</param>
      <param name="type">The type of the client script file. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script file.</param>
      <param name="url">The URL of the script file.</param>
      <exception cref="T:System.ArgumentNullException">The client script file <paramref name="type" /> is null.- or -The page that is registering the script file is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="url" /> is null. - or -<paramref name="url" /> is empty.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Control,System.Type,System.String)">
      <summary>Registers the client script that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control for use with a control that is participating in partial-page rendering.</summary>
      <param name="control">The control that is registering the script.</param>
      <param name="type">The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="resourceName">An identifier for the resource.</param>
      <exception cref="T:System.ArgumentNullException">The client resource <paramref name="type" /> is null.- or -The control that is registering the script is null.</exception>
      <exception cref="T:System.ArgumentException">The control that is registering the script is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterClientScriptResource(System.Web.UI.Page,System.Type,System.String)">
      <summary>Registers a client script file that is embedded in an assembly with the <see cref="T:System.Web.UI.ScriptManager" /> control every time that a postback occurs.</summary>
      <param name="page">The page object that is registering the script.</param>
      <param name="type">The type of the client script. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="resourceName">An identifier for the resource.</param>
      <exception cref="T:System.ArgumentNullException">The client resource <paramref name="type" /> is null.- or -The page that is registering the script is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String)">
      <summary>Sends custom data to a control during partial-page rendering.</summary>
      <param name="control">The control that is receiving the data.</param>
      <param name="dataItem">The data that is sent to the control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataItem" /> is already registered for <paramref name="control" />.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)">
      <summary>Sends custom data to a control during partial-page rendering, and indicates whether the data is in JavaScript Object Notation (JSON) format. </summary>
      <param name="control">The page control that is receiving the data.</param>
      <param name="dataItem">The data that is sent to the control.</param>
      <param name="isJsonSerialized">true to indicate that <paramref name="dataItem" /> is serialized as JSON; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ScriptManager.RegisterDataItem(System.Web.UI.Control,System.String,System.Boolean)" /> method is called during a postback.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="dataItem" /> is already registered for <paramref name="control" />.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterDispose(System.Web.UI.Control,System.String)">
      <summary>Registers a dispose script for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control. The script is executed when the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated or deleted. </summary>
      <param name="control">The control that the dispose script is for.</param>
      <param name="disposeScript">The dispose script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="disposeScript" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not found on the page.- or -<paramref name="control" /> is not inside an <see cref="T:System.Web.UI.UpdatePanel" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExpandoAttribute(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
      <summary>Registers a name/value pair with the <see cref="T:System.Web.UI.ScriptManager" /> control as a custom (expando) attribute of a specified control. </summary>
      <param name="control">The control that is registering the expando attribute.</param>
      <param name="controlId">The control that contains the custom attribute on the page.</param>
      <param name="attributeName">The name of the custom attribute to register.</param>
      <param name="attributeValue">The value of the custom attribute.</param>
      <param name="encode">true to encode the custom attribute that is being registered; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.- or -<paramref name="controlId" /> is null. - or -<paramref name="controlId" /> is empty.- or -<paramref name="attributeName" /> is null. - or -<paramref name="attributeName" /> is empty.- or -<paramref name="attributeName" /> is already registered.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterExtenderControl``1(``0,System.Web.UI.Control)">
      <summary>Registers an extender control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <param name="extenderControl">The extender control to register.</param>
      <param name="targetControl">The script control that the extender control extends.</param>
      <typeparam name="TExtenderControl">A control that implements the <see cref="T:System.Web.UI.IExtenderControl" /> interface.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="extenderControl" /> is null.- or - <paramref name="targetControl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Control,System.String,System.String)">
      <summary>Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> control. </summary>
      <param name="control">The control that is registering the hidden field.</param>
      <param name="hiddenFieldName">The name of the hidden field to register.</param>
      <param name="hiddenFieldInitialValue">The initial value of the hidden field.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or - <paramref name="hiddenFieldName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterHiddenField(System.Web.UI.Page,System.String,System.String)">
      <summary>Registers a hidden field with the <see cref="T:System.Web.UI.ScriptManager" /> control during every asynchronous postback.</summary>
      <param name="page">The page object that is registering the hidden field.</param>
      <param name="hiddenFieldName">The name of the hidden field to register.</param>
      <param name="hiddenFieldInitialValue">The initial value of the hidden field.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.- or - <paramref name="hiddenFieldName" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Control,System.Type,System.String,System.String)">
      <summary>Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted. </summary>
      <param name="control">The control that is registering the onsubmit statement.</param>
      <param name="type">The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script statement.</param>
      <param name="script">The script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterOnSubmitStatement(System.Web.UI.Page,System.Type,System.String,System.String)">
      <summary>Registers ECMAScript (JavaScript) code with the <see cref="T:System.Web.UI.ScriptManager" /> control for a control that is used with an <see cref="T:System.Web.UI.UpdatePanel" /> control that is executed when the form is submitted.</summary>
      <param name="page">The page object that is registering the onsubmit statement.</param>
      <param name="type">The type of the client script statement. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script statement.</param>
      <param name="script">The script.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="page" /> is null.- or -<paramref name="type" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)">
      <summary>Registers a control as a trigger for a postback. This method is used to configure postback controls inside an <see cref="T:System.Web.UI.UpdatePanel" /> control that would otherwise perform asynchronous postbacks.</summary>
      <param name="control">The control to register for postback.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptControl``1(``0)">
      <summary>Registers a script control with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <param name="scriptControl">The script control to register.</param>
      <typeparam name="TScriptControl">A control that implements the <see cref="T:System.Web.UI.IScriptControl" /> interface.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="scriptControl" /> is null.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IExtenderControl)">
      <summary>Calls back to an <see cref="T:System.Web.UI.ExtenderControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior. </summary>
      <param name="extenderControl">The extender control for which script descriptors will be registered.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterScriptDescriptors(System.Web.UI.IScriptControl)">
      <summary>Calls a <see cref="T:System.Web.UI.ScriptControl" /> class to return instance scripts that must be rendered to support the client object that represents a client control, component, or behavior.</summary>
      <param name="scriptControl">The script control for which script descriptors will be registered.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Control,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a startup script block for a control that is inside an <see cref="T:System.Web.UI.UpdatePanel" /> by using the <see cref="T:System.Web.UI.ScriptManager" /> control, and adds the script block to the page. </summary>
      <param name="control">The control that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block with &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="control" /> is null.- or -<paramref name="type" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="control" /> is not in the page's control tree.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.RegisterStartupScript(System.Web.UI.Page,System.Type,System.String,System.String,System.Boolean)">
      <summary>Registers a startup script block for every asynchronous postback with the <see cref="T:System.Web.UI.ScriptManager" /> control and adds the script block to the page.</summary>
      <param name="page">The page object that is registering the client script block.</param>
      <param name="type">The type of the client script block. This parameter is usually specified by using the typeof operator (C#) or the GetType operator (Visual Basic) to retrieve the type of the control that is registering the script.</param>
      <param name="key">A unique identifier for the script block.</param>
      <param name="script">The script.</param>
      <param name="addScriptTags">true to enclose the script block with &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.ScriptManager" /> control's content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that receives the content of the control to write to the page. </param>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveCompositeScriptReference">
      <summary>Occurs when a composite script is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.ScriptManager.ResolveScriptReference">
      <summary>Occurs when a member of the <see cref="P:System.Web.UI.ScriptManager.Scripts" /> collection is registered with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptManager.RoleService">
      <summary>Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptMode">
      <summary>Gets or sets a value that specifies whether debug or release versions of client script libraries are rendered.</summary>
      <returns>The enumeration value that indicates the current mode. The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> property is not one of the <see cref="T:System.Web.UI.ScriptMode" /> values.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptPath">
      <summary>Gets or sets the root path of the location that is used to build the paths to ASP.NET AJAX and custom script files.</summary>
      <returns>The location where script files are stored. The default value is an empty string (""), which is interpreted as a relative path.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.ScriptResourceMapping">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Scripts">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains the <see cref="T:System.Web.UI.ScriptReference" /> objects, each of which represents a script file rendered to the client.</summary>
      <returns>The <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object of the <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Services">
      <summary>Gets a <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each Web service that ASP.NET exposes on the client for AJAX functionality.</summary>
      <returns>The <see cref="T:System.Web.UI.ServiceReferenceCollection" /> object for the current <see cref="T:System.Web.UI.ScriptManager" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.String)">
      <summary>Sets the browser focus to the control specified by ID.</summary>
      <param name="clientID">The ID of the control to receive focus.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.SetFocus(System.Web.UI.Control)">
      <summary>Sets the browser focus to the specified control.</summary>
      <param name="control">The control to receive focus.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.SupportsPartialRendering">
      <summary>Gets a value that indicates whether the client supports partial-page rendering.</summary>
      <returns>true if the client supports partial-page rendering; otherwise, false. The default value is true.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" /> property is false and the <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set to true.- or -The <see cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" /> property was set after the <see cref="E:System.Web.UI.Control.Init" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />.</summary>
      <returns>true if the <see cref="T:System.Web.UI.ScriptManager" /> control's state has changed as a result of a postback; otherwise, false.</returns>
      <param name="postDataKey">The key-identifier for the control.</param>
      <param name="postCollection">A collection of all incoming post data.</param>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManager.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Enables the <see cref="T:System.Web.UI.ScriptManager" /> control to process a postback event and load the history state of the Web page.</summary>
      <param name="eventArgument">A string of key/value pairs that represent the history state of the Web page.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManager.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property that is inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</summary>
      <returns>true in all cases.</returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the <see cref="P:System.Web.UI.ScriptManager.Visible" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptManagerProxy">
      <summary>Enables nested components such as content pages and user controls to add script and service references to pages when a <see cref="T:System.Web.UI.ScriptManager" /> control is already defined in a parent element.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptManagerProxy" /> class. </summary>
      <exception cref="T:System.InvalidOperationException">There is no <see cref="T:System.Web.UI.ScriptManager" /> for the current page.- or -The current page is null.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.AuthenticationService">
      <summary>Gets the <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.AuthenticationServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.CompositeScript">
      <summary>Gets a reference to the composite script that supports the content page.</summary>
      <returns>A reference to the composite script.</returns>
    </member>
    <member name="E:System.Web.UI.ScriptManagerProxy.Navigate">
      <summary>Occurs when the user clicks the browser's Back or Forward button.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptManagerProxy.OnInit(System.EventArgs)">
      <summary>Raises the base <see cref="E:System.Web.UI.Control.Init" /> event and registers the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control with the <see cref="T:System.Web.UI.ScriptManager" /> control.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.ProfileService">
      <summary>Gets the <see cref="T:System.Web.UI.ProfileServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.ProfileServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.RoleService">
      <summary>Gets the <see cref="T:System.Web.UI.RoleServiceManager" /> object that is associated with the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</summary>
      <returns>The <see cref="T:System.Web.UI.RoleServiceManager" /> object for the current <see cref="T:System.Web.UI.ScriptManagerProxy" /> instance.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Scripts">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ScriptReference" /> object for each script file that is explicitly registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptReference" /> objects for each script file that the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control sends to the browser.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Services">
      <summary>Gets a <see cref="T:System.Web.UI.ScriptReferenceCollection" /> object that contains a <see cref="T:System.Web.UI.ServiceReference" /> object for each service that is explicitly registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</summary>
      <returns>A collection that contains an <see cref="T:System.Web.UI.ServiceReference" /> object for each service that is registered with the <see cref="T:System.Web.UI.ScriptManagerProxy" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptManagerProxy.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property inherited from the base <see cref="T:System.Web.UI.Control" /> class to prevent setting this value.</summary>
      <returns>true if the control is rendered on the page; otherwise, false.</returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the <see cref="P:System.Web.UI.ScriptManagerProxy.Visible" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.ScriptMode">
      <summary>Specifies whether <see cref="T:System.Web.UI.ScriptManager" /> and <see cref="T:System.Web.UI.ScriptReference" /> objects refer to the debug or release version of client scripts.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Auto">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the version of client scripts to use is determined at run time based on the application-level &lt;compilation&gt; element of the Web.config file, unless it is overridden in an instance of the <see cref="T:System.Web.UI.ScriptReference" /> control. In the <see cref="T:System.Web.UI.ScriptReference" /> control, when applied to a standalone script file, <see cref="F:System.Web.UI.ScriptMode.Auto" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Release" />. When applied to a script reference in an assembly, <see cref="F:System.Web.UI.ScriptMode.Auto" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Inherit" />.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Inherit">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, <see cref="F:System.Web.UI.ScriptMode.Inherit" /> is equivalent to <see cref="F:System.Web.UI.ScriptMode.Auto" />. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the <see cref="P:System.Web.UI.ScriptManager.ScriptMode" /> value from <see cref="T:System.Web.UI.ScriptManager" /> determines which version of the client script to use.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Debug">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the debug version of the client script is used on the Web page unless overridden in an instance of the <see cref="T:System.Web.UI.ScriptReference" /> control. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the debug version of the client script is used on the Web page.</summary>
    </member>
    <member name="F:System.Web.UI.ScriptMode.Release">
      <summary>In the <see cref="T:System.Web.UI.ScriptManager" /> control, the release version of the client script is used on the Web page unless overridden by setting the <see cref="P:System.Web.UI.ScriptReference.ScriptMode" /> property of a <see cref="T:System.Web.UI.ScriptReference" /> instance to <see cref="F:System.Web.UI.ScriptMode.Debug" />. In the <see cref="T:System.Web.UI.ScriptReference" /> control, the release version of the client script is used on the Web page.</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReference">
      <summary>Registers an ECMAScript (JavaScript) file for use on an ASP.NET Web page. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified path.</summary>
      <param name="path">The path of the client script file relative to the Web page.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReference" /> class by using a specified name and assembly.</summary>
      <param name="name">The name of the script file that is embedded in the assembly.</param>
      <param name="assembly">The name of the assembly that contains the client script file as an embedded resource.</param>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Assembly">
      <summary>Gets or sets the name of the assembly that contains the client script file as an embedded resource.</summary>
      <returns>The fully qualified or partially qualified name of the assembly that contains a client script file as an embedded resource.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Retrieves the URL that is rendered as the value of the src attribute of the script element.</summary>
      <returns>A string that contains the URL that is rendered as the value of the src attribute of the script element.</returns>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true if the script should be compressed; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.ScriptReference.IgnoreScriptPath">
      <summary>Gets or sets a value that indicates whether the <see cref="P:System.Web.UI.ScriptManager.ScriptPath" /> property is included in the URL when you register a client script file from a resource.</summary>
      <returns>true if the script path is not used when you register the client script; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>Determines whether the script reference is an AJAX script.</summary>
      <returns>true if the script reference is an AJAX script; otherwise, false.</returns>
      <param name="scriptManager">A <see cref="T:System.Web.UI.ScriptManager" /> object.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReference.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
      <returns>true if the composite script contains a reference to an ASP.NET AJAX framework script; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReference.Name">
      <summary>Gets or sets the name of the embedded resource that contains the client script file. </summary>
      <returns>The name of the client script file that is embedded as a resource in an assembly.</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReference.ToString">
      <summary>Returns a string that represents the value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property, the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property, or the type name.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.ScriptReference.Name" /> property if it is defined, or the value of the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceBase">
      <summary>The base class for all script reference classes.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceBase" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.GetUrl(System.Web.UI.ScriptManager,System.Boolean)">
      <summary>Retrieves the URL that is rendered as the value of the src attribute of the script element.</summary>
      <returns>A string that contains the URL that is rendered as the value of the src attribute of the script element.</returns>
      <param name="scriptManager">The ScriptManager control on the target Web page.</param>
      <param name="zip">true to compress the script; otherwise, false.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)">
      <summary>Determines whether the specified script reference is an ASP.NET AJAX script.</summary>
      <returns>true if the script reference is an ASP.NET AJAX script; otherwise, false.</returns>
      <param name="scriptManager">A <see cref="T:System.Web.UI.ScriptManager" /> object.</param>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.IsFromSystemWebExtensions">
      <summary>Indicates whether the composite script contains a reference to an ASP.NET AJAX framework script.</summary>
      <returns>true if the composite script contains a reference to an ASP.NET AJAX framework script; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.Handlers.ScriptResourceHandler" /> object automatically adds code at the end of the ECMAScript (JavaScript) file to call the client <see cref="P:System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded" /> method of the Sys.Application class.</summary>
      <returns>true if the Sys.Application.notifyScriptLoaded method is automatically called at the end of a JavaScript file, or false if user code calls the Sys.Application.notifyScriptLoaded method that is already in the JavaScript file. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.Path">
      <summary>Gets or sets the path of the referenced client script file, relative to the Web page.</summary>
      <returns>The path of the referenced client script</returns>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)">
      <summary>Replaces the file-name extension in the specified script path to designate a debug script.</summary>
      <returns>A string that contains the path of the script with the debug extension.</returns>
      <param name="pathOrName">The full path of the script to rename. The path must end with ".js".</param>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ResourceUICultures">
      <summary>Gets or sets a comma-delimited list of UI cultures that are supported by the <see cref="P:System.Web.UI.ScriptReferenceBase.Path" /> property.</summary>
      <returns>A string that contains a comma-delimited list of UI cultures.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceBase.ScriptMode">
      <summary>Gets or sets the version of the client script file (release or debug) to use.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptMode" /> value that indicates which version of the client script file to reference. The default is <see cref="F:System.Web.UI.ScriptMode.Auto" />.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceCollection">
      <summary>Represents a collection of script references.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceCollection" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.ScriptReferenceEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.ScriptManager.ResolveScriptReference" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.ScriptReferenceEventArgs.#ctor(System.Web.UI.ScriptReference)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptReferenceEventArgs" /> class. </summary>
      <param name="script">A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="script" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.ScriptReferenceEventArgs.Script">
      <summary>Gets the <see cref="T:System.Web.UI.ScriptReference" /> object that contains the script library.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains the client script referenced on the Web page.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceAttribute">
      <summary>Defines a resource in an assembly to be used from a client script file. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptResourceAttribute" /> class. </summary>
      <param name="scriptName">The name of the script library.</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptResourceAttribute" /> class. </summary>
      <param name="scriptName">The name of the script library.</param>
      <param name="stringResourceName">The name of the resource file for the script library.</param>
      <param name="stringResourceClientTypeName">The name of the type to create for the values in the resource file.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="scriptName" />, <paramref name="scriptResourceName" />, or <paramref name="typeName" /> is null or an empty string ("").</exception>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptName">
      <summary>Gets the name of the script library.</summary>
      <returns>The name of the script library.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.ScriptResourceName">
      <summary>Gets the name of the resource file for the script library.</summary>
      <returns>The name of the resource file for the script library.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.StringResourceClientTypeName">
      <summary>Gets the name of the client type to create for the values in the resource file.</summary>
      <returns>The name of the client type.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.StringResourceName">
      <summary>Gets the name of the resource file for the script library.</summary>
      <returns>The name of the resource file.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceAttribute.TypeName">
      <summary>Gets the name that is used when retrieving the values in the resource file.</summary>
      <returns>The name that is used in client script when retrieving the values in the resource file.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceDefinition">
      <summary>Defines the location of a script resource.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceDefinition.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptResourceDefinition" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnDebugPath">
      <summary>Gets or sets the debug mode path of the script resource on a content delivery network (CDN).</summary>
      <returns>The path of a CDN that contains debug script resources.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnPath">
      <summary>Gets or sets the release mode path of a script resource on a content delivery network (CDN).</summary>
      <returns>The path of a CDN.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.CdnSupportsSecureConnection">
      <summary>Gets or set a value that indicates to the <see cref="T:System.Web.UI.ScriptManager" /> whether a script resource should be accessed using a secure connection to the content delivery network (CDN) path when the page is accessed using HTTPS.</summary>
      <returns>true if the CDN should be accessed using HTTPS; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.DebugPath">
      <summary>Gets or sets the debug mode path of the script resource that is used when debug mode is enabled.</summary>
      <returns>The path of a script resource that is used when debug mode is enabled.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.Path">
      <summary>Gets or set the release mode path of the script resource.</summary>
      <returns>The path of a script resource.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.ResourceAssembly">
      <summary>Gets or sets an assembly object that contains the script resource.</summary>
      <returns>An assembly object that contains a script resource.</returns>
    </member>
    <member name="P:System.Web.UI.ScriptResourceDefinition.ResourceName">
      <summary>Gets or sets the name of the script resource in the specified resource assembly.</summary>
      <returns>The name of a script resource.</returns>
    </member>
    <member name="T:System.Web.UI.ScriptResourceMapping">
      <summary>Provides location mapping support for script resources.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ScriptResourceMapping" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.AddDefinition(System.String,System.Reflection.Assembly,System.Web.UI.ScriptResourceDefinition)">
      <summary>Adds a <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object to the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <param name="name">The name of the script resource.</param>
      <param name="assembly">An <see cref="T:System.Reflection.Assembly" /> object that contains the script resource.</param>
      <param name="definition">A <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object that specifies location support for script resources.</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.AddDefinition(System.String,System.Web.UI.ScriptResourceDefinition)">
      <summary>Adds a <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object to the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <param name="name">The name of the script resource.</param>
      <param name="definition">A <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object that specifies location support for script resources.</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.Clear">
      <summary>Removes all <see cref="T:System.Web.UI.ScriptResourceDefinition" /> objects from the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.GetDefinition(System.String,System.Reflection.Assembly)">
      <summary>Returns the specified <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object from the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object.</returns>
      <param name="name">The name of the script resource.</param>
      <param name="assembly">An <see cref="T:System.Reflection.Assembly" /> object that contains the script resource.</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.GetDefinition(System.Web.UI.ScriptReference)">
      <summary>Returns a <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object from the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object.</returns>
      <param name="scriptReference">A <see cref="T:System.Web.UI.ScriptReference" /> object.</param>
    </member>
    <member name="M:System.Web.UI.ScriptResourceMapping.RemoveDefinition(System.String,System.Reflection.Assembly)">
      <summary>Removes a <see cref="T:System.Web.UI.ScriptResourceDefinition" /> object from the <see cref="T:System.Web.UI.ScriptResourceMapping" /> object.</summary>
      <param name="name">The name of the script resource to remove.</param>
      <param name="assembly">An <see cref="T:System.Reflection.Assembly" /> object that contains the script resource.</param>
    </member>
    <member name="T:System.Web.UI.ServiceReference">
      <summary>Registers a Web service for use in a Web page.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReference" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReference" /> class with a specified path.</summary>
      <param name="path">The location of the Web service. </param>
    </member>
    <member name="M:System.Web.UI.ServiceReference.GetProxyScript(System.Web.UI.ScriptManager,System.Web.UI.Control)">
      <summary>Provides a proxy script from a derived <see cref="T:System.Web.UI.ServiceReference" /> object in a custom manner.</summary>
      <returns>The proxy script.</returns>
      <param name="scriptManager">The <see cref="T:System.Web.UI.ScriptManager" /> control on the page.</param>
      <param name="containingControl">A <see cref="T:System.Web.UI.Control" /> object.</param>
    </member>
    <member name="M:System.Web.UI.ServiceReference.GetProxyUrl(System.Web.UI.ScriptManager,System.Web.UI.Control)">
      <summary>Provides a proxy URL from a derived <see cref="T:System.Web.UI.ServiceReference" /> object in a custom manner.</summary>
      <returns>A proxy URL.</returns>
      <param name="scriptManager">The <see cref="T:System.Web.UI.ScriptManager" /> control on the page.</param>
      <param name="containingControl">A <see cref="T:System.Web.UI.Control" /> object.</param>
    </member>
    <member name="P:System.Web.UI.ServiceReference.InlineScript">
      <summary>Gets or sets a value that indicates whether the proxy generation script is included in the page as an inline script block or is obtained by a separate request.</summary>
      <returns>true if the proxy generation script is included as an inline script block in the page; false if the proxy generation script is obtained by a separate request. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.ServiceReference.Path">
      <summary>Gets or sets the path of the referenced Web service.</summary>
      <returns>The path of the referenced Web service.</returns>
    </member>
    <member name="M:System.Web.UI.ServiceReference.ToString">
      <summary>Returns a string that represents the value of the <see cref="P:System.Web.UI.ServiceReference.Path" /> property or the type name.</summary>
      <returns>The value of the <see cref="P:System.Web.UI.ServiceReference.Path" /> property, if it is defined; otherwise, the value of the <see cref="P:System.Reflection.MemberInfo.Name" /> property for the class.</returns>
    </member>
    <member name="T:System.Web.UI.ServiceReferenceCollection">
      <summary>Contains a set of <see cref="T:System.Web.UI.ServiceReference" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.ServiceReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.ServiceReferenceCollection" /> class.</summary>
    </member>
    <member name="T:System.Web.UI.TargetControlTypeAttribute">
      <summary>Extends the <see cref="T:System.Attribute" /> class to indicate the type of server control that an extender control can be applied to.</summary>
    </member>
    <member name="M:System.Web.UI.TargetControlTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.TargetControlTypeAttribute" /> class.</summary>
      <param name="targetControlType">The type of the target control.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="targetControlType" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TargetControlType">
      <summary>Gets the type of the target control, as specified in the constructor.</summary>
      <returns>The type of the target control.</returns>
    </member>
    <member name="P:System.Web.UI.TargetControlTypeAttribute.TypeId">
      <summary>Gets a unique identifier for this <see cref="T:System.Web.UI.TargetControlTypeAttribute" />.</summary>
      <returns>The unique identifier for this attribute.</returns>
    </member>
    <member name="T:System.Web.UI.Timer">
      <summary>Performs asynchronous or synchronous Web page postbacks at a defined interval.</summary>
    </member>
    <member name="M:System.Web.UI.Timer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.Timer" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Enabled">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.Timer" /> control initiates a postback to the server after the number of milliseconds specified in the <see cref="P:System.Web.UI.Timer.Interval" /> property has elapsed.</summary>
      <returns>true if <see cref="T:System.Web.UI.Timer" /> will initiate a postback; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptDescriptors">
      <summary>Retrieves properties from a <see cref="T:System.Web.UI.Timer" /> object that are passed to the client component that implements timer logic in the browser.</summary>
      <returns>An array of type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.GetScriptReferences">
      <summary>Retrieves the client script for the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains client script for the <see cref="T:System.Web.UI.Timer" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.Timer.Interval">
      <summary>Gets or sets the number of milliseconds to wait before initiating a postback.</summary>
      <returns>The number of milliseconds to wait before initiating a postback. The default value is 60,000 (60 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is less than or equal to zero.</exception>
    </member>
    <member name="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event of the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Timer.OnTick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Timer.Tick" /> event of the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)">
      <summary>Enables a <see cref="T:System.Web.UI.Timer" /> control to raise the <see cref="E:System.Web.UI.Timer.Tick" /> event when a page is posted to the server.</summary>
      <param name="eventArgument">A string with an optional argument to be passed to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the <see cref="T:System.Web.UI.Timer" /> control content to the browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object. </summary>
      <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that is used to render the <see cref="T:System.Web.UI.Timer" /> control content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
      <summary>Raises the <see cref="E:System.Web.UI.Timer.Tick" /> event when a page is posted to the server.</summary>
      <param name="eventArgument">A string with an optional argument to be passed to the event handler.</param>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>Retrieves properties from a <see cref="T:System.Web.UI.Timer" /> object that are passed to the client component.</summary>
      <returns>An array of type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>Retrieves the client script for the <see cref="T:System.Web.UI.Timer" /> control.</summary>
      <returns>A <see cref="T:System.Web.UI.ScriptReference" /> object that contains client script for the <see cref="T:System.Web.UI.Timer" /> control.</returns>
    </member>
    <member name="E:System.Web.UI.Timer.Tick">
      <summary>Occurs when the number of milliseconds specified in the <see cref="P:System.Web.UI.Timer.Interval" /> property has elapsed and the page is posted to the server.</summary>
    </member>
    <member name="P:System.Web.UI.Timer.Visible">
      <summary>Overrides the <see cref="P:System.Web.UI.Control.Visible" /> property of the <see cref="T:System.Web.UI.Control" /> class to prevent this value from being set.</summary>
      <returns>true if the control is rendered on the page; otherwise, false. </returns>
      <exception cref="T:System.NotImplementedException">A value is assigned to the Visible property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.UpdatePanel">
      <summary>Enables sections of a page to be partially rendered without a postback.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanel" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Attributes">
      <summary>Gets the cascading style sheet (CSS) attributes collection of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>The names of the CSS style rules in the attributes collection.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers">
      <summary>Gets or sets a value that indicates whether postbacks from immediate child controls of an <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content.</summary>
      <returns>true if postbacks from immediate child controls of the <see cref="T:System.Web.UI.UpdatePanel" /> control update the panel's content; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplate">
      <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control. The default is null.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property of the <see cref="T:System.Web.UI.UpdatePanel" /> control is set after an instance of the template is created or after the content template container is created. </exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.ContentTemplateContainer">
      <summary>Gets a control object to which you can programmatically add child controls.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> object that defines the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Controls">
      <summary>Gets the <see cref="T:System.Web.UI.ControlCollection" /> object that contains the child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" />, or <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> method of the <see cref="T:System.Web.UI.ControlCollection" /> class has been called. To change the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control, modify the child controls of the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer">
      <summary>Creates a <see cref="T:System.Web.UI.Control" /> object that acts as a container for child controls that define the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</summary>
      <returns>A <see cref="T:System.Web.UI.Control" /> container for the <see cref="T:System.Web.UI.UpdatePanel" /> control's content.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.CreateControlCollection">
      <summary>Returns the collection of all controls that are contained in the <see cref="T:System.Web.UI.UpdatePanel" /> control. </summary>
      <returns>A <see cref="T:System.Web.UI.ControlCollection" /> object that consists of all controls that define the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Initialize">
      <summary>Initializes the <see cref="T:System.Web.UI.UpdatePanel" /> control trigger collection if partial-page rendering is enabled.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.IsInPartialRendering">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback.</summary>
      <returns>true if the current <see cref="T:System.Web.UI.UpdatePanel" /> control is being updated as a result of an asynchronous postback; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> property is being defined when the <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" /> property has already been created.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event for the <see cref="T:System.Web.UI.UpdatePanel" /> control and invokes the <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> method when partial-page rendering is not enabled. </summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains the event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> property is set to false, and the <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)">
      <summary>Raises the base <see cref="E:System.Web.UI.Control.Unload" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object that contains event data.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" /> event.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)">
      <summary>Raises the <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" /> event.</summary>
      <param name="writer">An <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RenderMode">
      <summary>Gets or sets a value that indicates whether an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is enclosed in an HTML &lt;div&gt; or &lt;span&gt; element.</summary>
      <returns>One of the <see cref="T:System.Web.UI.UpdatePanelRenderMode" /> values. The default is <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" /> so that the content of the panel is enclosed in an HTML &lt;div&gt; element.</returns>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.RequiresUpdate">
      <summary>Gets a value that indicates whether the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control will be updated.</summary>
      <returns>true if the <see cref="T:System.Web.UI.UpdatePanel" /> control's content will be updated; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Returns an attribute of a Web control by using a specified name.</summary>
      <returns>The value of the attribute.</returns>
      <param name="key">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified control attribute.</summary>
      <param name="key">The name of the attribute to set.</param>
      <param name="value">The value of the attribute to set.</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.Triggers">
      <summary>Gets an <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object that contains <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" /> objects that were registered declaratively for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A collection of objects of type <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> and <see cref="T:System.Web.UI.PostBackTrigger" />.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanel.Update">
      <summary>Causes an update of the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> property is set to <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.- or –The <see cref="M:System.Web.UI.UpdatePanel.Update" /> method is called during or after the page's <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />  event.</exception>
    </member>
    <member name="P:System.Web.UI.UpdatePanel.UpdateMode">
      <summary>Gets or sets a value that indicates when an <see cref="T:System.Web.UI.UpdatePanel" /> control's content is updated.</summary>
      <returns>One of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values. The default is <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified type is not one of the <see cref="T:System.Web.UI.UpdatePanelUpdateMode" /> values.</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelControlTrigger">
      <summary>Provides a common base class for controls that can be triggers for <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelControlTrigger.ControlID">
      <summary>Gets or sets a string that represents the <see cref="P:System.Web.UI.Control.ID" /> of the control that is a trigger for the <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
      <returns>A string that contains the <see cref="P:System.Web.UI.Control.ID" /> of the control. The default is an empty string ("").</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelControlTrigger.FindTargetControl(System.Boolean)">
      <summary>Searches for the control specified in the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</summary>
      <returns>A control that has the ID matching the <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property.</returns>
      <param name="searchNamingContainers">A Boolean value that indicates whether to search for the control recursively in naming containers that contain the current <see cref="T:System.Web.UI.UpdatePanel" /> control.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> property of the <see cref="T:System.Web.UI.UpdatePanelControlTrigger" /> is null or empty.- or -The control with the specified  <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> was not found.</exception>
    </member>
    <member name="T:System.Web.UI.UpdatePanelRenderMode">
      <summary>Represents the possible layout rendering options for the content of an <see cref="T:System.Web.UI.UpdatePanel" /> control on a page.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Block">
      <summary>Specifies that the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is rendered inside an HTML &lt;div&gt; element.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelRenderMode.Inline">
      <summary>Specifies that the content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is rendered inside an HTML &lt;span&gt; element.</summary>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTrigger">
      <summary>Provides a common base class for objects that can be triggers for <see cref="T:System.Web.UI.UpdatePanel" /> controls.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.HasTriggered">
      <summary>Returns a value that indicates whether the trigger was invoked.</summary>
      <returns>true if the trigger was invoked; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTrigger.Initialize">
      <summary>When overridden in a derived class, enables a trigger to initialize itself.</summary>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTrigger.Owner">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> targets.</summary>
      <returns>An <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.UpdatePanelTriggerCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.UpdatePanelTrigger" /> objects for an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.#ctor(System.Web.UI.UpdatePanel)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdatePanelTrigger" /> collection class.</summary>
      <param name="owner">The <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> belongs to.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.ClearItems">
      <summary>Removes all elements from the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />.</summary>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.InsertItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>Inserts an <see cref="T:System.Web.UI.UpdatePanelTrigger" /> object into the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object at the specified index. </summary>
      <param name="index">The zero-based index at which the trigger should be inserted.</param>
      <param name="item">The trigger to insert. The value can be null for reference types.</param>
    </member>
    <member name="P:System.Web.UI.UpdatePanelTriggerCollection.Owner">
      <summary>Gets a reference to the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> belongs to.</summary>
      <returns>An <see cref="T:System.Web.UI.UpdatePanel" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.RemoveItem(System.Int32)">
      <summary>Removes the element at the specified index of the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />.</summary>
      <param name="index">The zero-based index of the element to remove.</param>
    </member>
    <member name="M:System.Web.UI.UpdatePanelTriggerCollection.SetItem(System.Int32,System.Web.UI.UpdatePanelTrigger)">
      <summary>Replaces the trigger at the specified index in the <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" /> object.</summary>
      <param name="index">The zero-based index of the trigger to replace.</param>
      <param name="item">The new value for the trigger at the specified index. The value can be null for reference types.</param>
    </member>
    <member name="T:System.Web.UI.UpdatePanelUpdateMode">
      <summary>Represents the possible update modes for the content in an <see cref="T:System.Web.UI.UpdatePanel" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Always">
      <summary>The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated for all postbacks that originate from the page. This includes asynchronous postbacks.</summary>
    </member>
    <member name="F:System.Web.UI.UpdatePanelUpdateMode.Conditional">
      <summary>The content of the <see cref="T:System.Web.UI.UpdatePanel" /> control is updated under the following conditions:</summary>
    </member>
    <member name="T:System.Web.UI.UpdateProgress">
      <summary>Provides visual feedback in the browser when the contents of one or more <see cref="T:System.Web.UI.UpdatePanel" /> controls are updated.</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.UpdateProgress" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID">
      <summary>Gets or sets the ID of the <see cref="T:System.Web.UI.UpdatePanel" /> control that the <see cref="T:System.Web.UI.UpdateProgress" /> control displays status for.</summary>
      <returns>The ID of the associated <see cref="T:System.Web.UI.UpdatePanel" /> control. The default value is an empty string.</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.Attributes">
      <summary>Gets or sets the cascading style sheet (CSS) attributes of the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>The names of the CSS attribute.</returns>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls of the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.UpdateProgress" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.CreateChildControls">
      <summary>Called to create any child controls that the <see cref="T:System.Web.UI.UpdateProgress" /> control contains in preparation for posting back or rendering.</summary>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.DataBind">
      <summary>Binds a data source to the <see cref="T:System.Web.UI.UpdateProgress" /> control and all its child controls.</summary>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DisplayAfter">
      <summary>Gets or sets the value in milliseconds before the <see cref="T:System.Web.UI.UpdateProgress" /> control is displayed.</summary>
      <returns>An integer that represents the number of milliseconds before the <see cref="T:System.Web.UI.UpdateProgress" /> control's progress template is displayed. The default is 500 milliseconds (.5 seconds).</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.UpdateProgress.DisplayAfter" /> property is less than zero.</exception>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.DynamicLayout">
      <summary>Gets or sets a value that determines whether the progress template is rendered dynamically.</summary>
      <returns>true if the progress template is rendered dynamically; otherwise, false. The default value is true.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptDescriptors">
      <summary>Returns a list of components, behaviors, and client controls that are required for the <see cref="T:System.Web.UI.UpdateProgress" /> control's client functionality.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.GetScriptReferences">
      <summary>Returns a list of client script library dependencies for the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerable" /> collection that contains <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.OnPreRender(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.UpdateProgress.ProgressTemplate">
      <summary>Gets or sets the template that defines the content of the <see cref="T:System.Web.UI.UpdateProgress" /> control.</summary>
      <returns>An <see cref="T:System.Web.UI.ITemplate" /> instance that defines the content of the <see cref="T:System.Web.UI.UpdateProgress" /> control. The default is null.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Writes the rendered content of the <see cref="T:System.Web.UI.UpdateProgress" /> control to the browser by using the supplied <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that represents the output stream for rendering HTML content.</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Returns an attribute of a Web control by using the specified name.</summary>
      <returns>The value of the attribute.</returns>
      <param name="key">The name of the attribute to return.</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets the value of the specified user-control attribute.</summary>
      <param name="key">The name of the attribute to set.</param>
      <param name="value">The value of the attribute to set.</param>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptDescriptors">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptDescriptor" /> objects.</returns>
    </member>
    <member name="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptReferences">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />.</summary>
      <returns>A collection of <see cref="T:System.Web.UI.ScriptReference" /> objects.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSource">
      <summary>Represents a base class for data source controls.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.ContextTypeName">
      <summary>Gets or sets the name of the object that contains the property to retrieve data from.</summary>
      <returns>The name of the object that contains the property to retrieve data from.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.EntitySetName">
      <summary>Gets or sets the name of the property or field in the data source object that represents a data collection.</summary>
      <returns>The name of the property or field in the data source object that represents a data collection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSource.EntityTypeName">
      <summary>Gets or sets the name of the type that is created for Insert, Delete, and Update operations.</summary>
      <returns>The name of the type that is created for Insert, Delete, and Update operations.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSourceContextData">
      <summary>Represents the context data for the <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceContextData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceContextData.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> class by using a data context object.</summary>
      <param name="context">The data context object to use.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceContextData.Context">
      <summary>Gets or sets the instance of the data context object.</summary>
      <returns>An instance of the data context object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceContextData.EntitySet">
      <summary>Gets or sets the property or field in the data context class that represents a data collection.</summary>
      <returns>The property or field in the data context class that represents a data collection.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ContextDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.ContextDataSource" /> control and provides an interface for data-bound controls to perform data operations.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.#ctor(System.Web.UI.DataSourceControl,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ContextDataSourceView" /> class.</summary>
      <param name="owner">The data source control that the <see cref="T:System.Web.UI.WebControls.ContextDataSourceView" /> object is associated with.</param>
      <param name="viewName">The unique name for the data source view in the scope of the data source control that owns it.</param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.Context">
      <summary>Gets or sets the current data context.</summary>
      <returns>The current data context.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.ContextType">
      <summary>Gets the type of the data context.</summary>
      <returns>The type that is associated with the data context class that is specified in the <see cref="P:System.Web.UI.WebControls.ContextDataSourceView.ContextTypeName" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.ContextTypeName">
      <summary>Gets or sets the name of the data context class that contains the field or property that is specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> property.</summary>
      <returns>The name of the data context class that contains the field or property that is specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> property.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)">
      <summary>Creates an instance of the data context and entity-set type for the specified operation.</summary>
      <returns>An instance of the data context and entity-set type for the specified operation.</returns>
      <param name="operation">The type of data operation to perform.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.DisposeContext">
      <summary>Disposes the context after an operation is performed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.DisposeContext(System.Object)">
      <summary>Disposes the specified data context after an operation is performed.</summary>
      <param name="dataContext">The data context to dispose.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySet">
      <summary>Gets or sets the object that contains the value of the data to retrieve.</summary>
      <returns>The object that contains the value of the data to retrieve.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySetName">
      <summary>Gets or sets the name of the property or field in the data-context class that represents a data collection.</summary>
      <returns>The name of the property or field in the data-context class that represents a data collection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntitySetType">
      <summary>Gets or sets the name of the object that is created for an insert, delete, or update operation.</summary>
      <returns>The name of the object that is created for an insert, delete, or update operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntityType">
      <summary>Gets or sets the object that is created for an insert, delete, or update operation.</summary>
      <returns>The object that is created for an insert, delete, or update operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ContextDataSourceView.EntityTypeName">
      <summary>Gets or sets the name of the object that is created for an insert, delete, or update operation.</summary>
      <returns>The name of the object that is created for an insert, delete, or update operation.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextCreated">
      <summary>Indicates that an event occurred after an instance of the context type object was created.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextCreating">
      <summary>Indicates that an event occurs before an instance of the context type object is created.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ContextDataSourceView.EventContextDisposing">
      <summary>Indicates that an event occurs before an instance of the context type object is disposed.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation using the specified keys and using row values that are used to detect conflicts.</summary>
      <returns>The number of objects or rows that were deleted from the data source.</returns>
      <param name="keys">A dictionary of row-key values for the records to delete.</param>
      <param name="oldValues">A dictionary of name/value pairs that represent data elements and their original values, which is used to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation by using the values specified in a collection.</summary>
      <returns>The number of objects or rows that were inserted into the data source.</returns>
      <param name="values">A dictionary of name/value pairs that represent data elements and their new values.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation by using the specified row-key values, the row values, and the row values that are used to detect conflicts.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">A dictionary of row-key values for the records to update.</param>
      <param name="values">A dictionary of name/value pairs that represent data elements and their new values. </param>
      <param name="oldValues">A dictionary of name/value pairs that represent data elements and their original values, which is used to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetDataObjectType(System.Type)">
      <summary>Retrieves the type of data object to use for the delete, insert, and update operations.</summary>
      <returns>The type of the data object that was used for the delete, insert, or update operations.</returns>
      <param name="type">The data type of the object to use for the operation.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetEntitySetType">
      <summary>Retrieves the entity set as a property, field, or data context.</summary>
      <returns>The entity set that was retrieved.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ContextDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>Retrieves the source of the query context.</summary>
      <returns>The data source to apply the query to.</returns>
      <param name="context">The current query context.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPager">
      <summary>Provides paging functionality for data-bound controls that implement the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface, such as the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPager" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.AddAttributesToRender(System.Web.UI.HtmlTextWriter)">
      <summary>Adds HTML attributes and styles to be rendered in the browser to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Attributes">
      <summary>Gets a collection of custom attribute name/value pairs for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A collection of custom attribute name/value pairs.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.ConnectToEvents(System.Web.UI.WebControls.IPageableItemContainer)">
      <summary>Connects events to event handler methods in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <param name="container">The data-bound control that raises the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="container" /> is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control in the UI hierarchy.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.CreatePagerFields">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that are contained by the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> property of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.DataBind">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.DataPager" /> control and all its child controls to a data source.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.Fields">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that represent the pager fields that are specified in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A collection object that contains all the pager fields that are specified in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.FindPageableItemContainer">
      <summary>Retrieves the data-bound control that is associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The data-bound control that is associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</returns>
      <exception cref="T:System.InvalidOperationException">A control that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface was not found on the page.-or-The control specified by the <see cref="P:System.Web.UI.WebControls.DataPager.PagedControlID" /> property does not implement the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface.-or-The <see cref="T:System.Web.UI.WebControls.DataPager" /> control does not have a naming container.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadControlState(System.Object)">
      <summary>Loads the state information for the properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that must be persisted between postbacks, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</param>
      <exception cref="T:System.InvalidOperationException">There is no data-bound control associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.LoadViewState(System.Object)">
      <summary>Restores view-state information for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that was saved by the <see cref="M:System.Web.UI.WebControls.DataPager.SaveViewState" /> method during a previous page request.</summary>
      <param name="savedState">An object that represents the state to be restored.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.MaximumRows">
      <summary>Gets the maximum number of records that are displayed for each page of data.</summary>
      <returns>The maximum number of records that are displayed for each page of data. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether an event for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control is passed up the page's user interface (UI) server control hierarchy</summary>
      <returns>true if the event has been sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Load" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">A container control that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface was not found.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.OnTotalRowCountAvailable(System.Object,System.Web.UI.WebControls.PageEventArgs)">
      <summary>Handles the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PagedControlID">
      <summary>Gets or sets the <see cref="P:System.Web.UI.Control.ID" /> of the control that contains the data that will be paged by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The <see cref="P:System.Web.UI.Control.ID" /> of the control that contains the data that will be paged by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control. The default is an empty string, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.PageSize">
      <summary>Gets or sets the number of records that are displayed for each page of data.</summary>
      <returns>The number of records that are displayed for each page of data. The default is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.DataPager.PageSize" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.QueryStringField">
      <summary>Gets or sets the name of the query string field.</summary>
      <returns>The name of the query string field. The default is an empty string, which indicates that the <see cref="T:System.Web.UI.WebControls.DataPager" /> control will use a HTTP POST command to navigate through the pages.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RecreateChildControls">
      <summary>Creates child controls of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control at design time.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Sends the <see cref="T:System.Web.UI.WebControls.DataPager" /> control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to be rendered to the browser.</summary>
      <param name="writer">The object that receives the <see cref="T:System.Web.UI.WebControls.DataPager" /> control content.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderBeginTag(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the HTML opening tag of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control to the specified writer. </summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.RenderContents(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the contents of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control to the specified writer.</summary>
      <param name="writer">An object that represents the output stream to render HTML content to the browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveControlState">
      <summary>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control that must be persisted between postbacks, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <returns>Returns the current view state of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control. If there is no view state associated with the control, this method returns null. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SaveViewState">
      <summary>Saves any changes to an <see cref="T:System.Web.UI.WebControls.DataPager" /> control's view-state that have occurred since the time the page was posted back to the server.</summary>
      <returns>Returns the <see cref="T:System.Web.UI.WebControls.DataPager" /> control's current view state. If there is no view state associated with the control, this method returns null. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the page-related properties in the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <param name="startRowIndex">The index of the first record on the page of data.</param>
      <param name="maximumRows">The maximum number of items on a single page of data.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">There is no data-bound control associated with the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data .</summary>
      <returns>The index of the first record that is displayed on a page of data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)">
      <summary>Retrieves the attribute value with the specified name from the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>The value of the attribute.</returns>
      <param name="name">The name of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)">
      <summary>Sets an attribute of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control with the specified name and value.</summary>
      <param name="name">The name of the attribute to set.</param>
      <param name="value">The value of the attribute.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.System#Web#UI#WebControls#ICompositeControlDesignerAccessor#RecreateChildControls">
      <summary>Creates the child controls of the <see cref="T:System.Web.UI.WebControls.DataPager" /> control at design time.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TagKey">
      <summary>Gets the HTML element that is used to render the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>Always <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPager.TotalRowCount">
      <summary>Gets the total number of records that are retrieved by the underlying data source object that is referenced by the associated data-bound control.</summary>
      <returns>The total number of records that are retrieved by the underlying data source object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPager.TrackViewState">
      <summary>Tracks view-state changes to the <see cref="T:System.Web.UI.WebControls.DataPager" /> control so that they can be stored in the control's <see cref="T:System.Web.UI.StateBag" /> object. This object can be accessed through the <see cref="P:System.Web.UI.Control.ViewState" /> property.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerField,System.Int32,System.Web.UI.WebControls.CommandEventArgs,System.Web.UI.WebControls.DataPagerFieldItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerCommandEventArgs" /> class. </summary>
      <param name="pagerField">The object that contains the command button that was clicked.</param>
      <param name="totalRowCount">The total number of records.</param>
      <param name="originalArgs">The command name and command argument of the button that was clicked.</param>
      <param name="item">The object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and its container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.Item">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object and the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's container <see cref="T:System.Web.UI.WebControls.DataPager" /> object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewMaximumRows">
      <summary>Gets or sets the maximum number of records to display on each page of data.</summary>
      <returns>The maximum number of records to display on each page of data. The default is -1, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.NewStartRowIndex">
      <summary>Gets or sets the index of the first record to display on a page of data.</summary>
      <returns>The index of the first record that will be displayed on a page of data. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.PagerField">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that contains the button that was clicked.</summary>
      <returns>The object that contains the button that was clicked.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerCommandEventArgs.TotalRowCount">
      <summary>Gets the total number of records to display.</summary>
      <returns>The total number of records to display.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerField">
      <summary>Serves as the base class for data pager field types, which represent a navigation control for the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CloneField">
      <summary>Creates a copy of the current object that is derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</summary>
      <returns>A copy of the current <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current object derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" /> to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The object to copy the properties of the current <see cref="T:System.Web.UI.WebControls.DataControlField" />. object to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>When overridden in a derived class, creates the user interface (UI) controls for the data pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.CreateField">
      <summary>When overridden in a derived class, creates an empty object that is derived <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</summary>
      <returns>An empty object that is derived from <see cref="T:System.Web.UI.WebControls.DataPagerField" />.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.DataPager">
      <summary>Gets a reference to the data pager that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is associated with. </summary>
      <returns>The object that contains the data pager field. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.GetQueryStringNavigateUrl(System.Int32)">
      <summary>Creates a URL that contains a query string field that has the specified page number.</summary>
      <returns>The target URL.</returns>
      <param name="pageNumber">The target page number.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>When overridden in a derived class, handles events that occur in the data pager field object.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.LoadViewState(System.Object)">
      <summary>Restores view-state information that was saved previously. </summary>
      <param name="savedState">The saved view-state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.OnFieldChanged">
      <summary>Raises the FieldChanged event.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringHandled">
      <summary>Gets or sets a value that indicates whether the query string field has been evaluated.</summary>
      <returns>true if the query string field has been evaluated; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.QueryStringValue">
      <summary>Gets the value of the query string field from the URL of the request.</summary>
      <returns>The value of the query string field.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.SaveViewState">
      <summary>Saves the changes that were made to the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's view state.</summary>
      <returns>The view-state changes for the control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object is tracking its view-state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>Restores view-state information that was saved previously. </summary>
      <param name="state">The saved view-state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#SaveViewState">
      <summary>Saves the changes that were made to the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object's view state.</summary>
      <returns>The view-state changes for the control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.System#Web#UI#IStateManager#TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to track changes to its view state so that they can be stored in the control's <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> property and persisted across requests for the same page.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerField.TrackViewState">
      <summary>Causes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to track changes to its view state so that they can be stored in the control's <see cref="P:System.Web.UI.WebControls.DataPagerField.ViewState" /> property and persisted across requests for the same page.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.ViewState">
      <summary>Gets a dictionary of state information that enables you to save and restore the view state of a <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object across multiple requests for the same page.</summary>
      <returns>An object that contains the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> view-state information.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerField.Visible">
      <summary>Gets or sets a value that indicates whether a data pager field is rendered.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> is rendered; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCollection">
      <summary>Represents a collection of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that are used by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.#ctor(System.Web.UI.WebControls.DataPager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> class.</summary>
      <param name="dataPager">The control that will contain the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Add(System.Web.UI.WebControls.DataPagerField)">
      <summary>Appends the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to the collection.</summary>
      <param name="field">The object to append to the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CloneFields(System.Web.UI.WebControls.DataPager)">
      <summary>Creates a copy of the current collection.</summary>
      <returns>An object that contains a copy of each <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is in the current collection.</returns>
      <param name="pager">The object that contains the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Contains(System.Web.UI.WebControls.DataPagerField)">
      <summary>Determines whether the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection contains the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection contains the specified field; otherwise, false.</returns>
      <param name="field">The object to locate in the <see cref="T:System.Web.UI.WebControls.DataControlFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CopyTo(System.Web.UI.WebControls.DataPagerField[],System.Int32)">
      <summary>Copies the complete <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection to a one-dimensional <see cref="T:System.Array" /> object, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection. The array object must use zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying starts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.CreateKnownType(System.Int32)">
      <summary>Creates a default instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> type that is identified by the provided index.</summary>
      <returns>An object that represents an instance of a class that is derived from the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class, according to the index provided.</returns>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> type to create from the ordered list of types that are returned by the <see cref="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes" /> method.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is not in the recognized range.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.DataPagerFieldCollection.FieldsChanged">
      <summary>Occurs when the fields in the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection change.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.GetKnownTypes">
      <summary>Gets an array of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> types that the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection can contain.</summary>
      <returns>An array of type objects that identify the types of <see cref="T:System.Web.UI.WebControls.DataPagerField" /> objects that the collection can contain.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.IndexOf(System.Web.UI.WebControls.DataPagerField)">
      <summary>Gets the index of a specific <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object in the collection.</summary>
      <returns>The index of the <paramref name="field" /> parameter, if it is found in the collection; otherwise, -1.</returns>
      <param name="field">The object to locate in the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Insert(System.Int32,System.Web.UI.WebControls.DataPagerField)">
      <summary>Inserts the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object into the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection at the specified index.</summary>
      <param name="index">The zero-based index at which the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object will be inserted.</param>
      <param name="field">The object to insert.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCollection.Item(System.Int32)">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object that is at the specified index in the collection.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to retrieve from the collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnClearComplete">
      <summary>Performs additional processing after all items are removed from the collection.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional processing after an item is added to the collection.</summary>
      <param name="index">The index in the collection that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object was inserted at.</param>
      <param name="value">The object that was inserted into the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional processing after an item is removed from the collection.</summary>
      <param name="index">The index in the collection that the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object was removed from.</param>
      <param name="value">The object that was removed from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.OnValidate(System.Object)">
      <summary>Verifies that the specified object is a <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="o">The object to validate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="o" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="o" /> is not an instance of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> class or of one of its derived classes.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.Remove(System.Web.UI.WebControls.DataPagerField)">
      <summary>Removes the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</summary>
      <param name="field">The object to remove from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object at the specified index from the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCollection" /> collection.</summary>
      <param name="index">The index of the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to remove.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCollection.SetDirtyObject(System.Object)">
      <summary>Instructs the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to record its complete state to view state, instead of recording only changed information.</summary>
      <param name="o">The object to mark as changed since the last time that view state was loaded or saved.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs">
      <summary>Provides data for the Command event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.#ctor(System.Web.UI.WebControls.DataPagerFieldItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs" /> class. </summary>
      <param name="item">A <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that generated the event.</param>
      <param name="commandSource">The source of the event.</param>
      <param name="originalArgs">The original event data that contains the <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" /> and <see cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" /> properties.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.CommandSource">
      <summary>Gets the control that raised the event.</summary>
      <returns>The control that raised the event.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldCommandEventArgs.Item">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the control that raised the event.</summary>
      <returns>The <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> object that contains the control that raised the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.DataPagerFieldItem">
      <summary>Represents a pager field item in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.#ctor(System.Web.UI.WebControls.DataPagerField,System.Web.UI.WebControls.DataPager)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.DataPagerFieldItem" /> class. </summary>
      <param name="field">The pager field object.</param>
      <param name="pager">The pager control that contains the pager field object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.DataPagerFieldItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether the event for the server control is passed up the page's UI server control hierarchy.</summary>
      <returns>true if the event was sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.Pager">
      <summary>Gets the pager control that contains the pager field object.</summary>
      <returns>The pager control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.DataPagerFieldItem.PagerField">
      <summary>Gets the <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <returns>The pager field object.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.InsertItemPosition">
      <summary>Specifies the location of the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template when it is rendered as part of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.None">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is not rendered.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.FirstItem">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is rendered as the first item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.InsertItemPosition.LastItem">
      <summary>The <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template is rendered as the last item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.IPageableItemContainer">
      <summary>Defines members that a data-bound control must implement in order to have paging functionality provided by the <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows">
      <summary>Gets the maximum number of items to display on a single page of data.</summary>
      <returns>The maximum number of items to display on a single page of data.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the properties of a page of data.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data.</summary>
      <returns>The index of the first record that is displayed on a page of data.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable">
      <summary>Occurs when the data from the data source is made available to the control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.IQueryableDataSource">
      <summary>Exposes methods and properties that the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control uses to communicate with data source controls. </summary>
    </member>
    <member name="E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated">
      <summary>Occurs when a query is created in a data source.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <summary>Raises the <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" /> event by calling the <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> method.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSource">
      <summary>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates an Order By clause based on values in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control creates the Order By clause; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control will create the Where clause; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports navigation through sections of the data at run time.</summary>
      <returns>true if the user can page through the data; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports sorting the data at run time.</summary>
      <returns>true if the user can sort the data; otherwise, false. The default value is true.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
      <summary>Occurs after an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
      <summary>Occurs before an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
      <summary>Occurs before disposing the context type object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
      <summary>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</summary>
      <returns>The name of the class to retrieve data from.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
      <summary>Returns a queryable view.</summary>
      <returns>A queryable view.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
      <summary>Creates a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class that is associated with this control.</summary>
      <returns>An object that acts as the interface for data-bound controls.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation.</summary>
      <returns>The number of records affected by the delete operation.</returns>
      <param name="keys">The row key values for the records to be deleted.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
      <summary>Occurs when a delete operation has finished.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
      <summary>Gets the collection of parameters that are used during a delete operation.</summary>
      <returns>The parameters that are used during a delete operation.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
      <summary>Gets or sets a value that indicates whether data records can be deleted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic delete operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
      <summary>Gets or sets a value that indicates whether data records can be inserted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic insert operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
      <summary>Gets or sets the value that indicates whether changes to the data context object are tracked.</summary>
      <returns>true if the data context object is tracked for changes; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
      <summary>Gets or sets a value that indicates whether data records can be updated through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
      <returns>true if automatic update operations are enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
      <summary>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</summary>
      <returns>A string that is used to create the Group By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
      <summary>Gets the collection of parameters that are used to create the Group By clause.</summary>
      <returns>The parameters that are used to create the Group By clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
      <summary>Performs an insert operation.</summary>
      <returns>The number of rows affected by the insert operation.</returns>
      <param name="values">The row values to be inserted into the data source.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
      <summary>Occurs when an insert operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
      <summary>Gets the collection of parameters that are used during an insert operation.</summary>
      <returns>The parameters that are used during an insert operation.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
      <summary>Initializes the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
      <summary>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</summary>
      <returns>A string that is used to create the Order By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
      <summary>Gets the collection of parameters that are used to create the Order By clause.</summary>
      <returns>The parameters that are used for creating the Order By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
      <summary>Gets or sets the fields that are used for ordering grouped data.</summary>
      <returns>A string that is used to create the Order Groups By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
      <summary>Gets the collection of parameters that are used to create the Order Groups By clause.</summary>
      <returns>The parameters that are used to create the Order Groups By clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Select">
      <summary>Gets or sets the properties and calculated values that are included in the retrieved data.</summary>
      <returns>A string that is used to create the Select clause.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selected">
      <summary>Occurs when a data retrieval operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
      <summary>Occurs before a data-retrieval operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
      <summary>Gets the collection of parameters that are used during a data-retrieval operation.</summary>
      <returns>The parameters that are used to create the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
      <summary>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</summary>
      <returns>true if the values will be stored in view state; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
      <returns>The type that is associated with the class.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
      <returns>The name of the entity.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception">
      <summary>For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.TableName">
      <summary>Gets or sets the name of the property or field in the data context class that represents a data collection.</summary>
      <returns>A string that contains the name of the property that contains the data collection.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of records affected by the update operation.</returns>
      <param name="keys">The row key values for the records to be updated.</param>
      <param name="values">The row values to be updated in the data source.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updated">
      <summary>Occurs when an update operation has finished.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
      <summary>Gets the collection of parameters that are used during an update operation.</summary>
      <returns>A collection of the parameters that are used during an update operation.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSource.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.Where">
      <summary>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</summary>
      <returns>A string that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
      <summary>Gets the collection of parameters that is used to create the Where clause.</summary>
      <returns>A collection of the parameters that are used to create the Where clause in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> property.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.#ctor(System.Web.UI.DataSourceOperation)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceContextEventArgs" /> class for the specified data operation. </summary>
      <param name="operation">The data operation that is being performed.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance">
      <summary>Gets or sets the data context object to create.</summary>
      <returns>The data context object that you have set to the <see cref="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance" /> property; otherwise, null. The default is null. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.Operation">
      <summary>Gets the data operation that is being performed.</summary>
      <returns>A value that represents the type of data operation that is being performed.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class. </summary>
      <param name="originalObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class with the specified exception. </summary>
      <param name="exception">The exception that occurred when validating the data to delete.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the delete operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject">
      <summary>Gets the object that represents the data to delete.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs" /> class. </summary>
      <param name="instance">The data context object to dispose.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs.ObjectInstance">
      <summary>Gets the data context object to dispose.</summary>
      <returns>An object that represents the data context.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class. </summary>
      <param name="newObject">An object that contains the data to insert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs" /> class and specifies the provided exception. </summary>
      <param name="exception">The exception that occurred when the data to insert was being validated.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the insert operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject">
      <summary>Gets the object that contains the data to insert.</summary>
      <returns>An object that contains the data to insert.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selecting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.#ctor(System.Web.UI.DataSourceSelectArguments,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs" /> class.</summary>
      <param name="arguments">The values that are passed from the data-bound control that determine how the data is paged and sorted. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments" /> property.</param>
      <param name="whereParameters">The collection of parameters that is used to create the Where clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters" /> property.</param>
      <param name="orderByParameters">The collection of parameters that is used to create the Order By clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters" /> property.</param>
      <param name="groupByParameters">The collection of parameters that is used to create the Group By clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters" /> property.</param>
      <param name="orderGroupsByParameters">The collection of parameter that is used to create the clause that is used for sorting grouped data. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters" /> property.</param>
      <param name="selectParameters">The collection of parameters that is used to create the Select clause. For more information, see the <see cref="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters" /> property.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Arguments">
      <summary>Gets values that determine how the data is returned.</summary>
      <returns>An object that contains values for determining how the data is returned.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.GroupByParameters">
      <summary>Gets the collection of parameters that is used to create the GroupBy clause.</summary>
      <returns>An object that contains the parameters for the GroupBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderByParameters">
      <summary>Gets the collection of parameters that is used to create the OrderBy clause.</summary>
      <returns>An object that contains the parameters for the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.OrderGroupsByParameters">
      <summary>Gets the collection of parameters that are used to create the clause that specifies how grouped data is sorted.</summary>
      <returns>An object that contains the parameters for the clause that specifies how grouped data is sorted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result">
      <summary>Gets or sets the data object that is used in the data query.</summary>
      <returns>An object that represents the data for the query.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.SelectParameters">
      <summary>Gets the collection of parameters that is used to create the Select clause.</summary>
      <returns>An object that contains the parameters for the Select clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.WhereParameters">
      <summary>Gets the collection of parameters that is used to create the Where clause.</summary>
      <returns>An object that contains the parameters for the Where clause.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, and <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> events.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an exception that occurred as a result of the data operation. </summary>
      <param name="exception">The error that occurred during the data operation.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an object that contains the data from the data operation. </summary>
      <param name="result">An object that contains the data that results from a data operation.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class with an object that contains the data from the data operation and the number of rows returned.</summary>
      <param name="result">An object that contains the data that results from a data operation.</param>
      <param name="totalRowCount">The number of rows that were returned from a data retrieval operation.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception">
      <summary>Gets the exception that was thrown during the data operation.</summary>
      <returns>An <see cref="T:System.Exception" /> object that represents the exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result">
      <summary>Gets the object that represents the result of a data operation.</summary>
      <returns>An object that contains the data from the data operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount">
      <summary>Gets the total number of rows in a data set from a data-retrieval operation.</summary>
      <returns>The total number of rows in a data set from the data retrieval operation; -1 if the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> object was created during a data modification operation; -1 if you enabled customized paging by setting <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> to true and by setting <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> to false.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class. </summary>
      <param name="originalObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</param>
      <param name="newObject">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception. </summary>
      <param name="exception">The exception that occurred when validating the data to update.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
      <summary>Gets the exception that was thrown while the data was being validated before the update operation.</summary>
      <returns>The exception, if an error occurred; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</summary>
      <returns>true if the exception was handled; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
      <summary>Gets the object that contains the values that will be saved in the data source.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
      <summary>Gets the object that contains the values that were originally retrieved from the data source.</summary>
      <returns>An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceValidationException">
      <summary>Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized object data. </param>
      <param name="context">Context information about the source or destination. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerExceptions">The collection of validation exceptions.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
      <param name="info">The object that holds the serialized object data for the exception that is being thrown. </param>
      <param name="context">Context information about the source or destination. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions">
      <summary>Gets one or more exceptions that occurred when new or modified data was being validated.</summary>
      <returns>A collection that contains the exceptions.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.LinqDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control and provides an interface for data-bound controls to perform LINQ data operations.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.#ctor(System.Web.UI.WebControls.LinqDataSource,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class, setting the specified <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control as the owner of the current view.</summary>
      <param name="owner">The data source control that the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object is associated with. </param>
      <param name="name">A unique name for the data source view within the scope of the data source control that owns it. </param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the delete operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the insert operation.</summary>
      <returns>true if the operation is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports paging of retrieved data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports retrieving the total number of data rows, in addition to retrieving the data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports a sorted view of the retrieved data.</summary>
      <returns>true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports the update operation.</summary>
      <returns>true if the operation is supported; otherwise, false.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated">
      <summary>Occurs after an instance of the context type object has been created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating">
      <summary>Occurs before an instance of the context type object is created.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing">
      <summary>Occurs before disposing the context type object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextType">
      <summary>Gets the type of the data context class.</summary>
      <returns>The type that is associated with the data context class specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName" /> property.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.ContextTypeName">
      <summary>Gets or sets the name of the data context class that contains the field or property specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.TableName" /> property.</summary>
      <returns>The name of the data context class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Type)">
      <summary>Creates an instance of the data context type.</summary>
      <returns>An instance of the data context type.</returns>
      <param name="contextType">The type of the data context to create.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.CreateContext(System.Web.UI.DataSourceOperation)">
      <summary>Creates an instance of the data context type using the specified data source operation.</summary>
      <returns>An instance of the data context.</returns>
      <param name="operation">The data source operation to use.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted">
      <summary>Occurs when a delete operation has finished.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteDataObject(System.Object,System.Object,System.Object)">
      <summary>Deletes a data object from a table.</summary>
      <param name="dataContext">The data context of the object to delete.</param>
      <param name="table">The table that contains the object to delete.</param>
      <param name="oldDataObject">The object to delete.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DeleteObject(System.Object)">
      <summary>Deletes a data object from a table.</summary>
      <returns>The number of data objects that were deleted.</returns>
      <param name="oldEntity">The data object to delete.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting">
      <summary>Occurs before a delete operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.DisposeContext(System.Object)">
      <summary>Disposes the data context.</summary>
      <param name="dataContext">The data context to dispose.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableDelete">
      <summary>Gets or sets a value that indicates whether the data source view supports deleting rows.</summary>
      <returns>true if the data source view supports deleting rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableInsert">
      <summary>Gets or sets a value that indicates whether the data source view supports adding new rows.</summary>
      <returns>true if the view supports inserting rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableObjectTracking">
      <summary>Gets or sets a value that indicates whether changes to the data-context object are tracked.</summary>
      <returns>true if the data-context object is tracked for changes; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.EnableUpdate">
      <summary>Gets or sets a value that indicates whether the data source view supports updating rows.</summary>
      <returns>true if the view supports updating rows; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation by using the specified keys and old values.</summary>
      <returns>The number of objects or rows that were deleted from the underlying data source.</returns>
      <param name="keys">The row key values for the records to be deleted.</param>
      <param name="oldValues">The row values that are evaluated to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation by using the values specified in a collection.</summary>
      <returns>The number of objects or rows that were inserted into the data source.</returns>
      <param name="values">The row values to insert into the data source.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Performs a data retrieval operation.</summary>
      <returns>A list of data objects or rows.</returns>
      <param name="arguments">An object that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">The row key values for the records to update.</param>
      <param name="values">The row values to update in the data source.</param>
      <param name="oldValues">The row values that are evaluated in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>Returns the data source to apply a query to.</summary>
      <returns>The data source to apply the query to.</returns>
      <param name="context">The data context to apply the query to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.GetTableMemberInfo(System.Type)">
      <summary>Retrieves metadata about the data collection.</summary>
      <returns>An object that contains type metadata for the data collection. </returns>
      <param name="contextType">An object that represents the data context class.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)">
      <summary>Handles any exceptions that occur when a data operation fails while a data object is being created.</summary>
      <param name="errors">The system-generated, field-specific exceptions that occurred.</param>
      <param name="operation">The data operation that caused the exception.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.InsertDataObject(System.Object,System.Object,System.Object)">
      <summary>Inserts a data object into a table.</summary>
      <param name="dataContext">The data context of the object.</param>
      <param name="table">The table into which the data is inserted.</param>
      <param name="newDataObject">The object to insert.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted">
      <summary>Occurs when an insert operation has finished.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting">
      <summary>Occurs before an insert operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.InsertObject(System.Object)">
      <summary>Inserts a data object into a <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> object. </summary>
      <returns>The number of objects that were inserted into the data source view.</returns>
      <param name="newEntity">The data object to insert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreated" /> event</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextCreating(System.Web.UI.WebControls.LinqDataSourceContextEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextCreating" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnContextDisposing(System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.ContextDisposing" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnDeleting(System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Deleting" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnException(System.Web.DynamicData.DynamicValidatorEventArgs)">
      <summary>Raises the <see cref="E:System.Web.DynamicData.IDynamicDataSource.Exception" /> event when a data operation fails.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserted(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an insert operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnInserting(System.Web.UI.WebControls.LinqDataSourceInsertEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Inserting" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelected(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed a data retrieval operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnSelecting(System.Web.UI.WebControls.LinqDataSourceSelectEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs a data-retrieval operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdated(System.Web.UI.WebControls.LinqDataSourceStatusEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control has completed an update operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.OnUpdating(System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.LinqDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control performs an update operation.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ResetDataObject(System.Object,System.Object)">
      <summary>Resets the object that contains data to its original state.</summary>
      <param name="table">The table that contains data.</param>
      <param name="dataObject">The entity that contains the original state of the data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)">
      <summary>Retrieves data from the data source.</summary>
      <returns>A list of data rows.</returns>
      <param name="arguments">An object that is used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selected">
      <summary>Occurs when a data-retrieval operation has completed.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Selecting">
      <summary>Occurs before a data-retrieval operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValues(System.Collections.IList)">
      <summary>Stores the original values from the Select operation in the control's view state.</summary>
      <param name="results">The result of the Select operation.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.StoreOriginalValuesInViewState">
      <summary>Gets or sets a value that indicates that original values from the select operation will be stored in view state when delete or update operations are enabled.</summary>
      <returns>true if original values are saved in view state; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.LinqDataSourceView.TableName">
      <summary>Gets or sets the name of a property or field of the data context class that contains the data collection.</summary>
      <returns>The name of the property that represents the data collection.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updated">
      <summary>Occurs when an update operation has finished.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateDataObject(System.Object,System.Object,System.Object,System.Object)">
      <summary>Updates a data object.</summary>
      <param name="dataContext">The data context class to update.</param>
      <param name="table">The data collection that contains the object to update.</param>
      <param name="oldDataObject">The object to be updated.</param>
      <param name="newDataObject">The updated object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.UpdateObject(System.Object,System.Object)">
      <summary>Updates a data object.</summary>
      <returns>0 (zero) if the update was successful, or -1 if the update failed.</returns>
      <param name="oldEntity">The object to update.</param>
      <param name="newEntity">The new object to use for the update.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.LinqDataSourceView.Updating">
      <summary>Occurs before an update operation.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateContextType(System.Type,System.Boolean)">
      <summary>Checks whether the data context class derives from <see cref="T:System.Data.Linq.DataContext" />.</summary>
      <param name="contextType">The type of the data context class to validate.</param>
      <param name="selecting">Specifies whether the method has been called when a select operation starts.</param>
      <exception cref="T:System.InvalidOperationException">An insert, update, or delete operation is being performed and the data context class does not derive from <see cref="T:System.Data.Linq.DataContext" />.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateDeleteSupported(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform a delete operation.</summary>
      <param name="keys">A dictionary of key values for the data records to delete.</param>
      <param name="oldValues">A dictionary that contains row values to delete.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> property contains a value.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanDelete" /> is false.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateEditSupported">
      <summary>Validates that the conditions exist to perform an edit operation.</summary>
      <exception cref="T:System.InvalidOperationException">The validation failed or was canceled.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateInsertSupported(System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform an insert operation.</summary>
      <param name="values">A dictionary that contains row values to insert.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.GroupBy" /> or <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.SelectNew" /> property contains a value or the <paramref name="values" /> parameter does not contain any items.</exception>
      <exception cref="T:System.NotSupportedException">
        <see cref="P:System.Web.UI.WebControls.LinqDataSourceView.CanInsert" /> is false.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateTableType(System.Type,System.Boolean)">
      <summary>Checks whether the type of the class that represents the data table is a generic type.</summary>
      <param name="tableType">The table type to validate.</param>
      <param name="selecting">Specifies whether the method has been called when a select operation starts.</param>
      <exception cref="T:System.InvalidOperationException">The type of the table is not generic.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.LinqDataSourceView.ValidateUpdateSupported(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Validates that the conditions exist to perform an update operation.</summary>
      <param name="keys">A dictionary of key values for the data records to update.</param>
      <param name="values">A dictionary that contains new row values for the update operation.</param>
      <param name="oldValues">A dictionary that contains the old row values for the update operation.</param>
      <exception cref="T:System.NotSupportedException">The update operation is not supported.</exception>
    </member>
    <member name="T:System.Web.UI.WebControls.ListView">
      <summary>Displays the values of a data source by using user-defined templates. The <see cref="T:System.Web.UI.WebControls.ListView" /> control enables users to select, sort, delete, edit, and insert records. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListView" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AccessKey">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.AccessKey" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.AccessKey" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.AddControlToContainer(System.Web.UI.Control,System.Web.UI.Control,System.Int32)">
      <summary>Adds the specified control to the specified container.</summary>
      <param name="control">An object that contains the controls to be added to the container.</param>
      <param name="container">The container that is used to store the child controls.</param>
      <param name="addLocation">The location in the controls collection at which to add the child control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.AlternatingItemTemplate">
      <summary>Gets or sets the custom content for the alternating data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the alternating data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BackColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BackColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BackColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderStyle">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.BorderStyle.NotSet" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderStyle" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.BorderWidth">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.BorderWidth" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffix">
      <summary>Gets or sets the name of the data field whose value is used to uniquely identify each data row of a <see cref="T:System.Web.UI.WebControls.ListView" /> control when the <see cref="P:System.Web.UI.Control.ClientIDMode" /> property is set to <see cref="F:System.Web.UI.ClientIDMode.Predictable" />.</summary>
      <returns>The name of the data field whose value is used to uniquely identify each instance of a <see cref="T:System.Web.UI.WebControls.ListView" /> control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ClientIDRowSuffixDataKeys">
      <summary>Gets the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</summary>
      <returns>The data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Controls">
      <summary>Gets a <see cref="T:System.Web.UI.ControlCollection" /> object that represents the child controls of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The collection of child controls for the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ConvertEmptyStringToNull">
      <summary>Gets or sets a value that indicates whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</summary>
      <returns>true if empty string values are automatically converted to null values; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls">
      <summary>Creates the control hierarchy that is used to render the <see cref="T:System.Web.UI.WebControls.ListView" /> control, based on the values that are stored in view state.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
      <summary>Creates the control hierarchy that is used to render the <see cref="T:System.Web.UI.WebControls.ListView" /> control by using the specified data source.</summary>
      <returns>The number of items that are created.</returns>
      <param name="dataSource">An object that contains the data source for the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </param>
      <param name="dataBinding">true to indicate that the child controls are bound to data; false to indicate that the control will re-create itself from view state during a postback. </param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="dataSource" /> returns null for <see cref="T:System.Web.UI.DataSourceView" />.-or-<paramref name="dataSource" /> does not implement the <see cref="T:System.Collections.ICollection" /> interface and cannot return a <see cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" /> value.-or-<paramref name="dataSource" /> does not implement the <see cref="T:System.Collections.ICollection" /> interface and <paramref name="dataBinding" /> is set to false.-or-The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have a group placeholder specified. -or-The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an item placeholder specified.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateControlStyle">
      <summary>Creates the default style for the control.</summary>
      <returns>The style for the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to invoke the <see cref="M:System.Web.UI.WebControls.ListView.CreateControlStyle" /> method.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataItem(System.Int32,System.Int32)">
      <summary>Creates a data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>A data item that is created by using the specified parameters.</returns>
      <param name="dataItemIndex">The index of the data item in the underlying data source object.</param>
      <param name="displayIndex">The display index of the data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateDataSourceSelectArguments">
      <summary>Creates the <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that contains the arguments that are passed to the data source.</summary>
      <returns>The arguments that are passed to the data source.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyDataItem">
      <summary>Creates the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateEmptyItem">
      <summary>Creates an empty item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The empty item that was created.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateInsertItem">
      <summary>Creates an insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The insert item that was created.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template specified. </exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItem(System.Web.UI.WebControls.ListViewItemType)">
      <summary>Creates a <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object with the specified type.</summary>
      <returns>A <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object with the specified type.</returns>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> values.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsInGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.ListView" /> control hierarchy in groups. </summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
      <param name="dataSource">The data source.</param>
      <param name="dataBinding">true to indicate that the <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to data; otherwise, false.</param>
      <param name="insertPosition">One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values.</param>
      <param name="keyArray">An array that represents the data-key value of each item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an item placeholder specified.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateItemsWithoutGroups(System.Web.UI.WebControls.ListViewPagedDataSource,System.Boolean,System.Web.UI.WebControls.InsertItemPosition,System.Collections.ArrayList)">
      <summary>Creates the <see cref="T:System.Web.UI.WebControls.ListView" /> control hierarchy without groups.</summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
      <param name="dataSource">The data source.</param>
      <param name="dataBinding">true to indicate that the <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to data; otherwise, false.</param>
      <param name="insertPosition">One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values.</param>
      <param name="keyArray">An array that represents the data-key value of each item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateLayoutTemplate">
      <summary>Creates the root container in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.CreateSuffixArrayList(System.Web.UI.WebControls.ListViewPagedDataSource,System.Collections.ArrayList)">
      <summary>Creates an array of suffixes for ASP.NET to use when it generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</summary>
      <param name="dataSource">The data source that will supply values for the suffix.</param>
      <param name="suffixArray">The suffix array.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.CssClass">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.CssClass" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that this property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.CssClass" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeyNames">
      <summary>Gets or sets an array that contains the names of the primary key fields for the items displayed in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An array that contains the names of the primary key fields for the items displayed in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.DataKeys">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.DataKey" /> objects that represent the data-key value for each item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the data key for each item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.DeleteItem(System.Int32)">
      <summary>Deletes the record at the specified index from the data source.</summary>
      <param name="itemIndex">The index of the item to delete.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> is less than 0.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditIndex">
      <summary>Gets or sets the index of the item being edited.</summary>
      <returns>The zero-based index of the item being edited. The default is -1, which indicates that no item is being edited.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.EditIndex" /> property is set to a value less than -1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItem">
      <summary>Gets the item that is in edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The item that is in edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control, or null if no item is in edit mode.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EditItemTemplate">
      <summary>Gets or sets the custom content for the item in edit mode.</summary>
      <returns>An object that contains the custom content for the item in edit mode. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate">
      <summary>Gets or sets the user-defined content for the empty template that is rendered when a <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to a data source that does not contain any records.</summary>
      <returns>An object that contains the custom content for the empty template. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate">
      <summary>Gets or sets the user-defined content for the empty item that is rendered in a <see cref="T:System.Web.UI.WebControls.ListView" /> control when there are no more data items to display in the last row of the current data page.</summary>
      <returns>An object that contains the custom content for the empty item. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EnableModelValidation">
      <summary>Gets or sets a value that indicates whether a validator control will handle exceptions that occur during insert or update operations. </summary>
      <returns>true if a validator control will handle exceptions that occur during insert or update operations; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.EnablePersistedSelection">
      <summary>Gets or sets a value that indicates whether row selection persists when a user pages through data in a data-bound control.</summary>
      <returns>true if row selection persists; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.EnsureLayoutTemplate">
      <summary>Ensures that the <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> content is correctly created in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.ExtractItemValues(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.ListViewItem,System.Boolean)">
      <summary>Retrieves the values of each field that is declared in the specified item, and stores them in the specified <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> object.</summary>
      <param name="itemValues">A dictionary object that is used to store the field values.</param>
      <param name="item">The <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object from which to retrieve the field values.</param>
      <param name="includePrimaryKey">true to include the primary key field or fields; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="itemValues" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="item" /> is not a <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> object.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.FindPlaceholder(System.String,System.Web.UI.Control)">
      <summary>Searches the specified container for a control that has the specified identifier.</summary>
      <returns>The specified control, or null if the specified control cannot be found.</returns>
      <param name="containerID">The identifier for the control to be found.</param>
      <param name="container">The container to be searched.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Font">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Font" /> property. This property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>This property is not supported, and throws a <see cref="T:System.NotSupportedException" /> error.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to access the <see cref="P:System.Web.UI.WebControls.ListView.Font" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ForeColor">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.ForeColor" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Drawing.Color.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.ForeColor" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupItemCount">
      <summary>Gets or sets the number of items to display per group in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The number of items to display per group in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is 1, which indicates that the <see cref="T:System.Web.UI.WebControls.ListView" /> control will display one item per group. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.GroupItemCount" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupPlaceholderID">
      <summary>Gets or sets the ID for the group placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The ID for the group placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is "groupPlaceholder".</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified ID is null or an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate">
      <summary>Gets or sets the user-defined content for the separator between groups in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the group separator. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.GroupTemplate">
      <summary>Gets or sets the user-defined content for the group container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the group container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Height">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Height" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.Height" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItem">
      <summary>Gets the insert item of a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that represents the insert item of a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemPosition">
      <summary>Gets or sets the location of the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template when it is rendered as part of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.InsertItemPosition" /> values. The default is <see cref="F:System.Web.UI.WebControls.InsertItemPosition.None" />, which indicates that the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> content will not be rendered by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.InsertItemTemplate">
      <summary>Gets or sets the custom content for an insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object  that contains the custom content for the insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InsertNewItem(System.Boolean)">
      <summary>Inserts the current record in the data source.</summary>
      <param name="causesValidation">true to perform page validation when this method is called; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an insert item.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyDataTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyDataTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateEmptyItemTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.EmptyItemTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupSeparatorTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.GroupSeparatorTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateGroupTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> template.</summary>
      <param name="container">A container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.GroupTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateInsertItemTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemSeparatorTemplate(System.Web.UI.Control)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using the child controls that are contained in the <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> template.</summary>
      <param name="container">The container that is used to store the child controls in the <see cref="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate" /> template.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.InstantiateItemTemplate(System.Web.UI.Control,System.Int32)">
      <summary>Populates the specified <see cref="T:System.Web.UI.Control" /> object by using child controls from one of the <see cref="T:System.Web.UI.WebControls.ListView" /> control templates.</summary>
      <param name="container">The container that is used to store the child controls.</param>
      <param name="displayIndex">The display index of the item that is being instantiated.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control does not have an <see cref="P:System.Web.UI.WebControls.ListView.ItemTemplate" /> template specified.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCanceling">
      <summary>Occurs when a cancel operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control cancels the insert or edit operation.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCommand">
      <summary>Occurs when a button in a <see cref="T:System.Web.UI.WebControls.ListView" /> control is clicked.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemCreated">
      <summary>Occurs when an item is created in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDataBound">
      <summary>Occurs when a data item is bound to data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleted">
      <summary>Occurs when a delete operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control deletes the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemDeleting">
      <summary>Occurs when a delete operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control deletes the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemEditing">
      <summary>Occurs when an edit operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> item is put in edit mode.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserted">
      <summary>Occurs when an insert operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control has inserted the item in the data source.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemInserting">
      <summary>Occurs when an insert operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control performs the insert.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemPlaceholderID">
      <summary>Gets or sets the ID for the item placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The ID for the item placeholder in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is "itemPlaceholder".</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified ID is null or an empty string.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Items">
      <summary>Gets a collection of <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> objects that represent the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains all the data items of the current page of data in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemSeparatorTemplate">
      <summary>Gets or sets the custom content for the separator between the items in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the separator between the items of the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ItemTemplate">
      <summary>Gets or sets the custom content for the data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdated">
      <summary>Occurs when an update operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control updates the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.ItemUpdating">
      <summary>Occurs when an update operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control updates the item.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.LayoutCreated">
      <summary>Occurs when the <see cref="P:System.Web.UI.WebControls.ListView.LayoutTemplate" /> template is created in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.LayoutTemplate">
      <summary>Gets or sets the custom content for the root container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the root container in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadControlState(System.Object)">
      <summary>Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.ListView" /> control that must be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <param name="savedState">An object that contains the saved control state values for the control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.LoadViewState(System.Object)">
      <summary>Loads the previously saved view state of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="savedState">An object that contains the saved view state values for the control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.MaximumRows">
      <summary>Gets the maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether an event for the <see cref="T:System.Web.UI.WebControls.ListView" /> control should be handled.</summary>
      <returns>true if the event should be handled; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnInit(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.Control.Init" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCanceling(System.Web.UI.WebControls.ListViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCommand(System.Web.UI.WebControls.ListViewCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemCreated(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDataBound(System.Web.UI.WebControls.ListViewItemEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleted(System.Web.UI.WebControls.ListViewDeletedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemDeleting(System.Web.UI.WebControls.ListViewDeleteEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemEditing(System.Web.UI.WebControls.ListViewEditEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserted(System.Web.UI.WebControls.ListViewInsertedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemInserting(System.Web.UI.WebControls.ListViewInsertEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdated(System.Web.UI.WebControls.ListViewUpdatedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnItemUpdating(System.Web.UI.WebControls.ListViewUpdateEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnLayoutCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.LayoutCreated" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnPagePropertiesChanging(System.Web.UI.WebControls.PagePropertiesChangingEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSelectedIndexChanging(System.Web.UI.WebControls.ListViewSelectEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorted(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.Sorted" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnSorting(System.Web.UI.WebControls.ListViewSortEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> event.</summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is not bound to a data source control by using the <see cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />  property.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.OnTotalRowCountAvailable(System.Web.UI.WebControls.PageEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable" /> event.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanged">
      <summary>Occurs when the page properties change, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control sets the new values.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging">
      <summary>Occurs when the page properties change, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control sets the new values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformDataBinding(System.Collections.IEnumerable)">
      <summary>Binds the <see cref="T:System.Web.UI.WebControls.ListView" /> control to the specified data source.</summary>
      <param name="data">An object that implements the <see cref="T:System.Collections.IEnumerable" /> interface and that contains the data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.PerformSelect">
      <summary>Retrieves data from the associated data source.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.RemoveItems">
      <summary>Deletes all child controls in an item or group container of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Renders the Web server control content to the client's browser by using the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</summary>
      <param name="writer">The object that is used to render the server control content on the client's browser.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveControlState">
      <summary>Saves the state of the properties in the <see cref="T:System.Web.UI.WebControls.ListView" /> control that must be persisted, even when the <see cref="P:System.Web.UI.Control.EnableViewState" /> property is set to false.</summary>
      <returns>Returns the server control's current view state. If there is no view state associated with the control, this method returns null.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the saved view state values for the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedDataKey">
      <summary>Gets the data-key value for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The data key for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that no item is currently selected. </returns>
      <exception cref="T:System.InvalidOperationException">No data keys are specified in the <see cref="P:System.Web.UI.WebControls.ListView.DataKeyNames" /> property.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedIndex">
      <summary>Gets or sets the index of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The zero-based index of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is -1, which indicates that no item is currently selected. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.ListView.SelectedIndex" /> property is set to a value less than -1. </exception>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanged">
      <summary>Occurs when an item's Select button is clicked, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the select operation.</summary>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging">
      <summary>Occurs when an item's Select button is clicked, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the select operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedItemTemplate">
      <summary>Gets or sets the custom content for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>An object that contains the custom content for the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedPersistedDataKey">
      <summary>Gets or sets the data-key value for the persisted selected item in a data-bound control.</summary>
      <returns>The data key for the persisted selected item in a data-bound control. The default is null, which indicates that no item is currently selected.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SelectedValue">
      <summary>Gets the data-key value of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The data-key value of the selected item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SelectItem(System.Int32)">
      <summary>Selects the item that is in edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="rowIndex">The index of the item that is in edit mode.</param>
      <exception cref="T:System.InvalidOperationException">The item index is negative.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SetEditItem(System.Int32)">
      <summary>Sets the specified item into edit mode in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="rowIndex">The index of the item to set into edit mode.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>Sets the properties of a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maximumRows" /> is less than 1.-or-<paramref name="startRowIndex" /> is less than 0.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.Sort(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>Sorts the <see cref="T:System.Web.UI.WebControls.ListView" /> control, depending on the specified sort expression and direction.</summary>
      <param name="sortExpression">The sort expression to sort the <see cref="T:System.Web.UI.WebControls.ListView" /> control with.</param>
      <param name="sortDirection">One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.Web.UI.WebControls.ListView" /> control is bound to a data source control, but the <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the data source is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortDirection">
      <summary>Gets the sort direction of the field or fields that are being sorted.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values. The default is SortDirection.Ascending.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorted">
      <summary>Occurs when a sort operation is requested, after the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the sort operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.SortExpression">
      <summary>Gets the sort expression that is associated with the field or fields that are being sorted.</summary>
      <returns>The sort expression that is associated with the field or fields that are being sorted.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.Sorting">
      <summary>Occurs when a sort operation is requested, but before the <see cref="T:System.Web.UI.WebControls.ListView" /> control handles the sort operation.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.StartRowIndex">
      <summary>Gets the index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#IDataKeysControl#ClientIDRowSuffixDataKeys">
      <summary>Gets a collection of the data values that are used to uniquely identify each instance of a data-bound control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</summary>
      <returns>A collection of data-field values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames">
      <summary>Gets or sets an array that contains the names of the primary-key fields of the items that are displayed in a data-bound control.</summary>
      <returns>An array that contains the names of the primary-key fields of the items that are displayed in a data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataMember">
      <summary>Gets or sets the name of the list of data that the data-bound control binds to when the data source contains more than one distinct list of data items.</summary>
      <returns>The name of the list of data that a data-bound control binds to. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSource">
      <summary>Gets or sets the object from which a data-bound control retrieves its list of data items.</summary>
      <returns>The object that contains the list of data that a data-bound control retrieves. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID">
      <summary>Gets or sets the ID of the data source control from which a data-bound control retrieves its list of data items.</summary>
      <returns>The ID of a control that represents the data source from which a data-bound control retrieves its data.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject">
      <summary>Gets an object that implements the <see cref="T:System.Web.UI.IDataSource" /> interface, which provides access to the object's data content.</summary>
      <returns>The data source object that contains the list of data items that a data-bound control retrieves.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#ClientIDRowSuffix">
      <summary>Gets the name of the data field whose value is used to uniquely identify each data row of a <see cref="T:System.Web.UI.WebControls.ListView" /> control when the <see cref="P:System.Web.UI.Control.ClientIDMode" /> property is set to <see cref="F:System.Web.UI.ClientIDMode.Predictable" />.</summary>
      <returns>The name of the data field whose value is used to uniquely identify each instance of a <see cref="T:System.Web.UI.WebControls.ListView" /> control when ASP.NET generates the <see cref="P:System.Web.UI.Control.ClientID" /> value.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#DataKeys">
      <summary>Gets a collection of data-key values that represent each row in a data-bound control.</summary>
      <returns>An array that contains the data-key values of each row in a data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#EnablePersistedSelection">
      <summary>Gets or sets the value that specifies whether a selected row persists when a user pages through data in a data-bound control.</summary>
      <returns>true if the selection is based on data keys; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedDataKey">
      <summary>Gets the data-key object that contains the data-key value for the selected row in a data-bound control.</summary>
      <returns>An object that contains the data-key value for the selected row in a data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IDataBoundListControl#SelectedIndex">
      <summary>Gets or sets the index of the selected row in a data-bound control.</summary>
      <returns>The index of the selected row in a data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#MaximumRows">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.MaximumRows" />.</summary>
      <returns>The maximum number of items to display on a single page of the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#SetPageProperties(System.Int32,System.Int32,System.Boolean)">
      <summary>For a description of this member, see <see cref="M:System.Web.UI.WebControls.IPageableItemContainer.SetPageProperties(System.Int32,System.Int32,System.Boolean)" />.</summary>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="databind">true to rebind the control after the properties are set; otherwise, false.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#StartRowIndex">
      <summary>For a description of this member, see <see cref="P:System.Web.UI.WebControls.IPageableItemContainer.StartRowIndex" />.</summary>
      <returns>The index of the first record that is displayed on a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPageableItemContainer#TotalRowCountAvailable">
      <summary>For a description of this member, see <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" />.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.System#Web#UI#WebControls#IPersistedSelector#DataKey">
      <summary>Gets or sets the data-key value for the selected record in a data-bound control.</summary>
      <returns>The data-key value for the selected record in a data-bound control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.TabIndex">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.TabIndex" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>0, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.TabIndex" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.ToolTip">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.ToolTip" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.ToolTip" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Web.UI.WebControls.ListView.UpdateItem(System.Int32,System.Boolean)">
      <summary>Updates the record at the specified index in the data source.</summary>
      <param name="itemIndex">The index of the item to update.</param>
      <param name="causesValidation">true to perform page validation when this method is called; otherwise, false.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="itemIndex" /> is less than 0.-or-The <see cref="T:System.Web.UI.DataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.ListView" /> control is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.ListView.Width">
      <summary>Overrides the <see cref="P:System.Web.UI.WebControls.WebControl.Width" /> property. Setting this property is not supported by the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>
        <see cref="F:System.Web.UI.WebControls.Unit.Empty" />, which indicates that the property is not set.</returns>
      <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.UI.WebControls.ListView.Width" /> property.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCanceling" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCancelEventArgs.#ctor(System.Int32,System.Web.UI.WebControls.ListViewCancelMode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewCancelEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item that contains the Cancel button that raised the event.</param>
      <param name="cancelMode">One of the <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> values that indicates which operation the user canceled.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.CancelMode">
      <summary>Gets the data-entry mode that the <see cref="T:System.Web.UI.WebControls.ListView" /> control was in when the Cancel button was clicked.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ListViewCancelMode" /> values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCancelEventArgs.ItemIndex">
      <summary>Gets the index of the item that contains the Cancel button that raised the event.</summary>
      <returns>The zero-based index of the item that contains the Cancel button that raised the event.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCancelMode">
      <summary>Determines the type of operation that the user was performing when the Cancel button was clicked in a <see cref="T:System.Web.UI.WebControls.ListView" /> item.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingEdit">
      <summary>The user canceled an edit operation.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewCancelMode.CancelingInsert">
      <summary>The user canceled an insert operation.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewCommandEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCommand" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewCommandEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem,System.Object,System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewCommandEventArgs" /> class by using the specified source of the command and event arguments.</summary>
      <param name="item">The item from the <see cref="T:System.Web.UI.WebControls.ListView" /> control for which the command was issued.</param>
      <param name="commandSource">The source of the command.</param>
      <param name="originalArgs">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.CommandSource">
      <summary>Gets the source of the command.</summary>
      <returns>The source of the command.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewCommandEventArgs.Item">
      <summary>Gets the data item for which the command was issued.</summary>
      <returns>The data item from the <see cref="T:System.Web.UI.WebControls.ListView" /> control for which the command was issued.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDataItem">
      <summary>Represents an individual data item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDataItem" /> class.</summary>
      <param name="dataItemIndex">The index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</param>
      <param name="displayIndex">The position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItem">
      <summary>Gets or sets the underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</summary>
      <returns>The underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DataItemIndex">
      <summary>Gets the index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</summary>
      <returns>The zero-based index of the <see cref="P:System.Web.UI.WebControls.ListViewDataItem.DataItem" /> in the underlying data source object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDataItem.DisplayIndex">
      <summary>Gets the position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The zero-based position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDataItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether to pass an event up the page's ASP.NET server control hierarchy.</summary>
      <returns>true if the event has been sent to the parent control; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleted" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeletedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDeletedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows that were affected by the delete operation.</param>
      <param name="exception">The exception that was raised when the delete operation was performed, if any. If no exception was raised, use null.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.AffectedRows">
      <summary>Gets the number of rows that were affected by the delete operation.</summary>
      <returns>The number of rows that were affected by the delete operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Exception">
      <summary>Gets the exception, if any, that was raised during the delete operation.</summary>
      <returns>The exception that was raised during the delete operation, if any; otherwise, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether an exception that was raised during the delete operation was handled in the event handler.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Keys">
      <summary>Gets the key or keys for the deleted item.</summary>
      <returns>The key or keys for the deleted item.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeletedEventArgs.Values">
      <summary>Gets the non-key field values for the deleted item.</summary>
      <returns>The non-key field values for the deleted item.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewDeleteEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemDeleting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewDeleteEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewDeleteEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item that contains the Delete button that raised the event. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.ItemIndex">
      <summary>Gets the index of the item being deleted.</summary>
      <returns>The zero-based index of the item being deleted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Keys">
      <summary>Gets a dictionary of field name/value pairs that represent the primary key or keys of the item to delete.</summary>
      <returns>An object that contains the name/value pairs that represent the primary key or keys of the item to delete.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewDeleteEventArgs.Values">
      <summary>Gets a dictionary of the non-key field name/value pairs in the item to delete.</summary>
      <returns>An object that contains the non-key field name/value pairs of the item to delete.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewEditEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemEditing" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewEditEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewEditEventArgs" /> class.</summary>
      <param name="newEditIndex">The index of the item to edit. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewEditEventArgs.NewEditIndex">
      <summary>Gets the index of the item that is being edited.</summary>
      <returns>The index of the item that is being edited.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows affected by the insert operation.</param>
      <param name="exception">The exception that is raised when the insert operation was performed, if any. If no exception was raised, use null for this parameter.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows">
      <summary>Gets the number of rows affected by the insert operation.</summary>
      <returns>The number of rows affected by the insert operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception">
      <summary>Gets the exception (if any) that was raised during the insert operation.</summary>
      <returns>The exception that was raised during the insert operation, or null if no exception was raised.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled">
      <summary>Gets or sets a that indicates whether an exception that was raised during the insert operation was handled in the event handler.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode">
      <summary>Gets or sets a value that indicates whether the user's input values are preserved for the controls inside the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template.</summary>
      <returns>true if the user's input values are preserved for the controls inside the <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> template; false if the user's input values are replaced with the default values for the controls. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values">
      <summary>Gets field name/value pairs for the inserted record.</summary>
      <returns>The field name/value pairs for the inserted record.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewInsertEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemInserting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewInsertEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewInsertEventArgs" /> class.</summary>
      <param name="item">The data item that is being inserted into the data source.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Item">
      <summary>Gets a <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object that represents the data item to be inserted.</summary>
      <returns>The data item to be inserted.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewInsertEventArgs.Values">
      <summary>Gets the values for the record to insert.</summary>
      <returns>The values for the record to insert.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItem">
      <summary>Represents an individual item in a <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.#ctor(System.Web.UI.WebControls.ListViewItemType)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> class.</summary>
      <param name="itemType">One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> enumeration values.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DataItem">
      <summary>Gets or sets the underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</summary>
      <returns>The underlying data object that the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object is bound to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DataItemIndex">
      <summary>Gets the index of the data item that is bound to the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> control.</summary>
      <returns>The index of the data item that is bound to the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.DisplayIndex">
      <summary>Gets the position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The position of the data item as displayed in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItem.ItemType">
      <summary>Gets the item type of the <see cref="T:System.Web.UI.WebControls.ListViewItem" /> object.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ListViewItemType" /> values.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItem.OnBubbleEvent(System.Object,System.EventArgs)">
      <summary>Determines whether to pass an event up the page's ASP.NET server control hierarchy.</summary>
      <returns>true if the event has been canceled; otherwise, false.</returns>
      <param name="source">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemCreated" /> and <see cref="E:System.Web.UI.WebControls.ListView.ItemDataBound" /> events.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewItemEventArgs.#ctor(System.Web.UI.WebControls.ListViewItem)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewItemEventArgs" /> class.</summary>
      <param name="item">The item being created or data-bound.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewItemEventArgs.Item">
      <summary>Gets the item that is being created or bound to data.</summary>
      <returns>The item that is being created or bound to data.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewItemType">
      <summary>Specifies the function of an item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.DataItem">
      <summary>A data item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.InsertItem">
      <summary>An insert item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.ListViewItemType.EmptyItem">
      <summary>An empty item in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. The empty item is displayed when the <see cref="T:System.Web.UI.WebControls.ListView" /> control has no records to display, or when a group in the <see cref="T:System.Web.UI.WebControls.ListView" /> control has no more records to display.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewPagedDataSource">
      <summary>Encapsulates the paging-related properties of a <see cref="T:System.Web.UI.WebControls.ListView" /> control. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging">
      <summary>Gets or sets a value that indicates whether server-based paging is enabled.</summary>
      <returns>true if server-based paging is enabled; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.CopyTo(System.Array,System.Int32)">
      <summary>Copies all the items from the data source to the specified <see cref="T:System.Array" /> object, starting at the specified index in <see cref="T:System.Array" />.</summary>
      <param name="array">A zero-based <see cref="T:System.Array" /> object that receives the copied items from the data source.</param>
      <param name="index">The first position in the specified <see cref="T:System.Array" /> object to receive the copied contents.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.Count">
      <summary>Gets the number of items that will be used from the data source for the current page.</summary>
      <returns>The number of items that will be used from the data source for the current page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSource">
      <summary>Gets or sets the data source.</summary>
      <returns>An object that implements <see cref="T:System.Collections.IEnumerable" /> that represents the data source.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.DataSourceCount">
      <summary>Gets the number of items in the data source.</summary>
      <returns>The number of items in the data source.</returns>
      <exception cref="T:System.InvalidOperationException">The data source object does not implement the <see cref="T:System.Collections.ICollection" /> interface.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetEnumerator">
      <summary>Returns an object that implements <see cref="T:System.Collections.IEnumerator" /> and that contains all items in the data source.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that contains all items in the data source.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
      <summary>Returns a <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</summary>
      <returns>The <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> object that represents the properties that are used to bind data.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects to find in the collection as bindable. This can be null.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewPagedDataSource.GetListName(System.ComponentModel.PropertyDescriptor[])">
      <summary>Returns the name of the list. This method does not apply to this class.</summary>
      <returns>An empty string in all cases.</returns>
      <param name="listAccessors">An array of <see cref="T:System.ComponentModel.PropertyDescriptor" /> objects that this list name is returned for. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsReadOnly">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.ListViewPagedDataSource" /> object is read-only.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsServerPagingEnabled">
      <summary>Gets a value that indicates whether server-based paging is enabled.</summary>
      <returns>true if server-based paging is indicated by using the <see cref="P:System.Web.UI.WebControls.ListViewPagedDataSource.AllowServerPaging" /> property; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.IsSynchronized">
      <summary>Gets a value that indicates whether access to the data source is synchronized (thread-safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.MaximumRows">
      <summary>Gets or sets the maximum number of items to display on a single page.</summary>
      <returns>The maximum number of items to display on a single page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.StartRowIndex">
      <summary>Gets or sets the index of the first record displayed on the page.</summary>
      <returns>The index of the first record displayed on the page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the collection.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewPagedDataSource.TotalRowCount">
      <summary>Gets or sets the total number of items in the data source when server-based paging is being used.</summary>
      <returns>The total number of items in the data source when server-based paging is being used.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSelectEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.SelectedIndexChanging" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSelectEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewSelectEventArgs" /> class.</summary>
      <param name="newSelectedIndex">The index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control. </param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSelectEventArgs.NewSelectedIndex">
      <summary>Gets or sets the index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The index of the new item to select in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewSortEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.Sorting" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewSortEventArgs.#ctor(System.String,System.Web.UI.WebControls.SortDirection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewSortEventArgs" /> class.</summary>
      <param name="sortExpression">The sort expression that is used to sort the items in the control.</param>
      <param name="sortDirection">A <see cref="T:System.Web.UI.WebControls.SortDirection" /> value that indicates the direction in which to sort the items in the control.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortDirection">
      <summary>Gets or sets the direction in which to sort the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.SortDirection" /> values.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewSortEventArgs.SortExpression">
      <summary>Gets or sets the expression that is used to sort the items in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</summary>
      <returns>The expression that is used to sort the items in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" /> class.</summary>
      <param name="affectedRows">The number of rows that were affected by the update operation.</param>
      <param name="exception">The exception that was raised when the update operation was performed, if any. If no exception is raised, use null.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows">
      <summary>Gets the number of rows that were affected by the update operation.</summary>
      <returns>The number of rows that were affected by the update operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception">
      <summary>Gets the exception, if any, that was raised during the update operation.</summary>
      <returns>The exception that was raised during the update operation, if any; if no exception was raised, null.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled">
      <summary>Gets or sets a value that indicates whether an exception that was raised during the update operation was handled during the event.</summary>
      <returns>true if the exception was handled in the event handler; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.ListView" /> control should remain in edit mode after an update operation.</summary>
      <returns>true if the control should remain in edit mode after an update operation; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues">
      <summary>Gets a dictionary that contains the new values for the updated item.</summary>
      <returns>The new values for the updated item.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues">
      <summary>Gets a dictionary that contains the original values for the updated item.</summary>
      <returns>The original values for the updated item.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.ListViewUpdateEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdating" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.ListViewUpdateEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.ListViewUpdateEventArgs" /> class.</summary>
      <param name="itemIndex">The index of the item being updated.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.ItemIndex">
      <summary>Gets the index of the data item that is being updated.</summary>
      <returns>The index of the data item that is being updated.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.Keys">
      <summary>Gets a dictionary of field name/value pairs that represent the key or keys of the item to update.</summary>
      <returns>The field name/value pairs that represent the key or keys of the item to update.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.NewValues">
      <summary>Gets a dictionary that contains the revised values of the item to update.</summary>
      <returns>The revised values of the item to update.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.ListViewUpdateEventArgs.OldValues">
      <summary>Gets a dictionary that contains the original values of the item to update.</summary>
      <returns>The original values of the item to update.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NextPreviousPagerField">
      <summary>Represents a field that displays navigation controls in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control enable users to page through data.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to render the buttons of the pager field on the browser.</summary>
      <returns>The CSS class used to render the buttons of the pager field on the client. The default is an empty string, which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType">
      <summary>Gets or sets the button type to display in the pager field.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is ButtonType.Link.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.ButtonType" /> property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the first-page button.</summary>
      <returns>The URL to an image that is displayed for the first-page button. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.FirstPageText">
      <summary>Gets or sets the text that is displayed for the first-page button.</summary>
      <returns>The text that is displayed for the first-page button. The default is "First".</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> class.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NextPreviousPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> control and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the last-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the last-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.LastPageText">
      <summary>Gets or sets the text that is displayed for the last-page button.</summary>
      <returns>The text that is displayed for the last-page button. The default is "Last".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.NextPageText">
      <summary>Gets or sets the text that is displayed for the next-page button.</summary>
      <returns>The text that is displayed for the next-page button. The default is "Next".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl">
      <summary>Gets or sets the URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.PreviousPageText">
      <summary>Gets or sets the text that is displayed for the previous-page button.</summary>
      <returns>The text that is displayed for the previous-page button. The default is "Previous".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderDisabledButtonsAsLabels">
      <summary>Gets or sets a value that indicates whether disabled buttons are rendered as <see cref="T:System.Web.UI.WebControls.Label" /> controls by the <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if disabled buttons are rendered as <see cref="T:System.Web.UI.WebControls.Label" /> controls; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>Gets or sets a value that indicates whether non-breaking spaces are rendered between controls.</summary>
      <returns>true if non-breaking spaces are rendered between controls; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowFirstPageButton">
      <summary>Gets or sets a value that indicates whether the first-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the first-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowLastPageButton">
      <summary>Gets or sets a value that indicates whether the last-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the last-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowNextPageButton">
      <summary>Gets or sets a value that indicates whether the next-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the next-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NextPreviousPagerField.ShowPreviousPageButton">
      <summary>Gets or sets a value that indicates whether the previous-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object.</summary>
      <returns>true if the previous-page button is displayed in a <see cref="T:System.Web.UI.WebControls.NextPreviousPagerField" /> object; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.NumericPagerField">
      <summary>Represents a <see cref="T:System.Web.UI.WebControls.DataPager" /> field that enables users to select a page by page number.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount">
      <summary>Gets or sets the number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The number of buttons to display in a <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is 5.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonCount" /> property is set to a value less than 1.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.ButtonType">
      <summary>Gets or sets the button type to display in the pager field.</summary>
      <returns>One of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values. The default is <see cref="F:System.Web.UI.WebControls.ButtonType.Link" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value for the <see cref="P:System.Web.UI.WebControls.NumericPagerField.ButtonType" /> property is not one of the <see cref="T:System.Web.UI.WebControls.ButtonType" /> values.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object to copy the properties of the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object to.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the current page number.</summary>
      <returns>The CSS class that is used to style the current page number in the browser. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.CurrentPageLabelCssClass" /> property is not set.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.Equals(System.Object)">
      <summary>Determines whether the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. </summary>
      <returns>true if the specified object is equal to the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object; otherwise, false.</returns>
      <param name="o">The object to compare with the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> instance.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.GetHashCode">
      <summary>Serves as a hash function for the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> class.</summary>
      <returns>A hash code for the current <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. For more information, see the <see cref="M:System.Object.GetHashCode" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.NumericPagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl">
      <summary>Gets or sets the URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The URL of an image that is displayed for the next-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPageText">
      <summary>Gets or sets the text that is displayed for the next-page button.</summary>
      <returns>The text that is displayed for the next-page button. The default is "…".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the next-page and previous-page buttons of the pager field.</summary>
      <returns>The CSS class that is used to style the next-page and previous-page buttons of the pager field. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NextPreviousButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass">
      <summary>Gets or sets the cascading style sheet (CSS) class that is used to style the page-number buttons of the pager field.</summary>
      <returns>The CSS class that is used to style the page-number buttons of the pager field. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.NumericButtonCssClass" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl">
      <summary>Gets or sets the URL of an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object.</summary>
      <returns>The URL to an image that is displayed for the previous-page button in the <see cref="T:System.Web.UI.WebControls.NumericPagerField" /> object. The default is an empty string (""), which indicates that the <see cref="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageImageUrl" /> property is not set.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.PreviousPageText">
      <summary>Gets or sets the text that is displayed for the previous-page button.</summary>
      <returns>The text that is displayed for the previous-page button. The default is "…".</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.NumericPagerField.RenderNonBreakingSpacesBetweenControls">
      <summary>Gets or sets a value that indicates whether non-breaking spaces will be rendered between controls.</summary>
      <returns>true if non-breaking spaces will be rendered between controls; otherwise, false. The default is true.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PageEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.IPageableItemContainer.TotalRowCountAvailable" /> event of a class that implements the <see cref="T:System.Web.UI.WebControls.IPageableItemContainer" /> interface.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PageEventArgs.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PageEventArgs" /> class. </summary>
      <param name="startRowIndex">The index of the first record on a page of data.</param>
      <param name="maximumRows">The maximum number of items to display on each page of data.</param>
      <param name="totalRowCount">The total number of records.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.MaximumRows">
      <summary>Gets the maximum number of records to display on each page.</summary>
      <returns>The maximum number of records to display on each page. </returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.StartRowIndex">
      <summary>Gets the index of the first record on a page.</summary>
      <returns>The index of the first record on a page.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PageEventArgs.TotalRowCount">
      <summary>Gets the total number of records in the underlying data source.</summary>
      <returns>The total number of records of the underlying data source.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs">
      <summary>Provides data for the <see cref="E:System.Web.UI.WebControls.ListView.PagePropertiesChanging" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.#ctor(System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.PagePropertiesChangingEventArgs" /> class. </summary>
      <param name="startRowIndex">The index of the first item of the page. </param>
      <param name="maximumRows">The maximum number of items to display on each page of data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.MaximumRows">
      <summary>Gets the maximum number of items to display on each page of data.</summary>
      <returns>The maximum number of items to display in a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.PagePropertiesChangingEventArgs.StartRowIndex">
      <summary>Gets the index of the first item of the page. </summary>
      <returns>The index of the first item to display in a page of data in the <see cref="T:System.Web.UI.WebControls.ListView" /> control.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSource">
      <summary>Represents a base class for data source objects that get data by using LINQ queries.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.CreateQueryableView">
      <summary>Gets or sets the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with this <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</summary>
      <returns>The default data source view that is associated with the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.GetView(System.String)">
      <summary>Gets the data source view that is associated with the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> object.</summary>
      <returns>The default data source view that is associated with the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</returns>
      <param name="viewName">The name of the data source view to get.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.GetViewNames">
      <summary>Gets a collection of names that represent views that are associated with the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</summary>
      <returns>A collection of names that represent views that are associated with the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.LoadViewState(System.Object)">
      <summary>Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control that must be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.OnInit(System.EventArgs)">
      <summary>Initializes the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> object by using the event data.</summary>
      <param name="e">The event data</param>
    </member>
    <member name="E:System.Web.UI.WebControls.QueryableDataSource.QueryCreated">
      <summary>Occurs when a query is added to or removed from a data source control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.RaiseViewChanged">
      <summary>Calls the <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> method of the <see cref="T:System.Web.UI.DataSourceView" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</summary>
      <returns>The saved state of the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.TrackViewState">
      <summary>Tracks view-state changes of the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSource.UpdateParameterVales">
      <summary>Updates the parameter values that have changed since the previous request.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSourceEditData">
      <summary>Represents data that can be edited from a <see cref="T:System.Web.UI.WebControls.QueryableDataSource`1" /> object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceEditData.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceEditData" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceEditData.NewDataObject">
      <summary>Gets or sets the value of the edited data object.</summary>
      <returns>The value of the edited data object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceEditData.OriginalDataObject">
      <summary>Gets or sets the value of the data object to edit before it was changed.</summary>
      <returns>The value of the data object to edit before it was changed.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryableDataSourceView">
      <summary>Supports the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control and provides an interface for data-bound controls to perform LINQ data operations.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.#ctor(System.Web.UI.DataSourceControl,System.String,System.Web.HttpContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> class.</summary>
      <param name="owner">The data source control that the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object is associated with.</param>
      <param name="viewName">The unique name for the data source view in the scope of the data source control that owns it.</param>
      <param name="context">The current <see cref="T:System.Web.HttpContext" /> instance.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateOrderByClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control creates a dynamic an OrderBy clause.</summary>
      <returns>true if the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object dynamically creates an OrderBy clause; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoGenerateWhereClause">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control creates a dynamic Where clause.</summary>
      <returns>true if dynamic creation of the Where clause is supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoPage">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports paging by default.</summary>
      <returns>true if paging is supported; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.AutoSort">
      <summary>Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports sorting by default.</summary>
      <returns>true if sorting is supported; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildDeleteObject(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>Creates the objects to use for the delete operation.</summary>
      <returns>The objects to use for the delete operation.</returns>
      <param name="keys">The keys of the rows to delete.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
      <param name="validationErrors">The list of conversion errors that are created in the data source when a CRUD operation fails.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildInsertObject(System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>Creates the objects to use for the insert operation by using the values to insert and the error message to display if the operation fails.</summary>
      <returns>The objects to use for the insert operation.</returns>
      <param name="values">The values of the rows to insert in the data source.</param>
      <param name="validationErrors">The list of conversion errors that are created by the system when a CRUD operation fails.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildQuery(System.Web.UI.DataSourceSelectArguments)">
      <summary>Creates a Select query expression by using the select arguments of the data source.</summary>
      <returns>A list of data objects.</returns>
      <param name="arguments">Objects that are used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.BuildUpdateObjects(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.Generic.IDictionary{System.String,System.Exception})">
      <summary>Creates the objects to use for the update operation by using the specified values.</summary>
      <returns>The objects to use for the update operation.</returns>
      <param name="keys">The keys of the rows to update.</param>
      <param name="values">The values of the rows to update in the data source.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
      <param name="validationErrors">The list of conversion errors that are created by the system when a CRUD operation fails.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanDelete">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports delete operations.</summary>
      <returns>true if delete operations are supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanInsert">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports insert operations.</summary>
      <returns>true if insert operations are supported; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanPage">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports paging.</summary>
      <returns>Always true.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanRetrieveTotalRowCount">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports retrieving the total number of data rows, and retrieving the data.</summary>
      <returns>true if the object supports retrieving the total number of data rows; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanSort">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports a sorted view of the retrieved data.</summary>
      <returns>true if the object supports a sorted view of the retrieved data; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.CanUpdate">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control supports update operations.</summary>
      <returns>true if update operations are supported; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ClearOriginalValues">
      <summary>Clears the original values.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.CreateQueryContext(System.Web.UI.DataSourceSelectArguments)">
      <summary>Creates an instance of a query context object that contains the evaluated parameter collections.</summary>
      <returns>An instance of the context object that contains the evaluated parameter collections.</returns>
      <param name="arguments">A collection of objects that are used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation.</summary>
      <returns>The number of rows that were deleted from the data source.</returns>
      <param name="keys">The keys of the rows to delete.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.DeleteObject(System.Object)">
      <summary>Deletes a data object from a table.</summary>
      <returns>The number of rows that were deleted from the data object.</returns>
      <param name="oldEntity">The data object to delete.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.DeleteParameters">
      <summary>Gets the collection that contains the parameters that are used during a delete operation.</summary>
      <returns>A collection that contains the parameters that are used by the <see cref="M:System.Web.UI.WebControls.QueryableDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" /> method.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.EntityType">
      <summary>Gets the type of the data object to use for CUD operations.</summary>
      <returns>An instance of the type of the data object to use for CUD operations.</returns>
    </member>
    <member name="F:System.Web.UI.WebControls.QueryableDataSourceView.EventSelected">
      <summary>Specifies whether the event that causes the data-retrieval operation to complete has occurred.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.QueryableDataSourceView.EventSelecting">
      <summary>Specifies whether the event that occurs before a data-retrieval operation has occurred.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs a delete operation on data items that the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object represents by using the specified values.</summary>
      <returns>The number of objects or rows that were deleted from the data source.</returns>
      <param name="keys">The keys of the rows to delete.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteInsert(System.Collections.IDictionary)">
      <summary>Performs an insert operation on the data items that the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object represents by using the specified value.</summary>
      <returns>The number of objects or rows that were inserted into the data source.</returns>
      <param name="values">The values of the rows to insert in the data source.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecutePaging(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>Executes paging by using the <see cref="T:System.Web.UI.WebControls.QueryContext" /> object from the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> object.</summary>
      <returns>The number of pages of data in the data object.</returns>
      <param name="source">The data source to use.</param>
      <param name="context">The data context to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQuery(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>Performs a query, sort, or paging operation on the <see cref="T:System.Linq.IQueryable`1" /> object.</summary>
      <returns>The data object that contains the result of the query, of sorting, or of paging.</returns>
      <param name="source">The data source object to use.</param>
      <param name="context">The data context to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteQueryExpressions(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>Executes query expressions by using an <see cref="T:System.Linq.IQueryable" /> object and the <see cref="T:System.Web.UI.WebControls.QueryContext" /> object.</summary>
      <returns>The data source that contains the results of the query expressions.</returns>
      <param name="source">The data source to use.</param>
      <param name="context">The data context to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)">
      <summary>Performs a data-retrieval operation.</summary>
      <returns>The result of the requested operation.</returns>
      <param name="arguments">A collection of objects that are used to request operations on the data beyond basic data retrieval.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteSorting(System.Linq.IQueryable,System.Web.UI.WebControls.QueryContext)">
      <summary>Performs a sorting operation.</summary>
      <returns>The sorted data object.</returns>
      <param name="source">The data source to use.</param>
      <param name="context">The data context to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">The keys of the rows to update.</param>
      <param name="values">The values of the rows to update.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.GetOriginalValues(System.Collections.IDictionary)">
      <summary>Retrieves the original values for the specified keys that were stored during the Select operation.</summary>
      <returns>The original values for the specified keys that were stored during the Select operation.</returns>
      <param name="keys">The keys of the rows to update.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.GetSource(System.Web.UI.WebControls.QueryContext)">
      <summary>Gets initial <see cref="T:System.Linq.IQueryable" /> object for the data source view based on the query context.</summary>
      <returns>The initial <see cref="T:System.Linq.IQueryable" /> object for the data source view.</returns>
      <param name="context">The data context to apply the query to.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupBy">
      <summary>Gets or sets the name or names of the properties to use during the select operation for grouping data.</summary>
      <returns>A value that is used to create the GroupBy expression.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.GroupByParameters">
      <summary>Gets a collection of parameters whose values are used to create the GroupBy clause during the select operation.</summary>
      <returns>A collection of parameters that are used to create the GroupBy clause.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.HandleValidationErrors(System.Collections.Generic.IDictionary{System.String,System.Exception},System.Web.UI.DataSourceOperation)">
      <summary>Called by methods that perform CRUD operations when a CRUD operation fails in the data-object building process. </summary>
      <param name="errors">The type of any field-specific exception that occurred during the CRUD operations.</param>
      <param name="operation">The data operation that caused the exception.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Insert(System.Collections.IDictionary)">
      <summary>Performs an asynchronous insert operation on the data items that the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object represents.</summary>
      <returns>The number of rows that were inserted into the data source.</returns>
      <param name="values">The values of the rows to insert.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.InsertObject(System.Object)">
      <summary>Inserts data objects into a <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object.</summary>
      <returns>The number of objects that were inserted into the data source view.</returns>
      <param name="newEntity">The data object to insert.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.InsertParameters">
      <summary>Gets a collection of parameters that are used during the insert operation.</summary>
      <returns>A collection that contains the parameters that are used during the insert operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.IsTrackingViewState">
      <summary>Gets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object is saving changes to its view state.</summary>
      <returns>true if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.LoadViewState(System.Object)">
      <summary>Restores the previously saved view state for the data source view.</summary>
      <param name="savedState">The <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> control state to restore.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.OnQueryCreated(System.Web.UI.WebControls.QueryCreatedEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated" /> event after the <see cref="T:System.Web.UI.WebControls.QueryableDataSource" /> control has created an <see cref="T:System.Linq.IQueryable" /> object.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.OnQueryParametersChanged(System.Object,System.EventArgs)">
      <summary>Calls the <see cref="M:System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged" /> method. </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event data.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderBy">
      <summary>Gets or sets the name or names of the properties that are used during the select operation to sort data.</summary>
      <returns>A value that is used to create the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderByParameters">
      <summary>Gets a collection of parameters that are used during the select operation to sort data.</summary>
      <returns>The parameters that are used to create the OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsBy">
      <summary>Gets or sets the names of the properties that are used during the select operation to sort grouped data.</summary>
      <returns>A value that is used to create the OrderGroupsBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.OrderGroupsByParameters">
      <summary>Gets a collection of parameters that are used to create the OrderGroupsBy clause.</summary>
      <returns>The parameters that are used to create the OrderGroupsBy clause.</returns>
    </member>
    <member name="E:System.Web.UI.WebControls.QueryableDataSourceView.QueryCreated">
      <summary>Occurs when a query is created.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.RaiseViewChanged">
      <summary>Calls the <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> method. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.SaveViewState">
      <summary>Saves changes to view state for the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> object since the time that the page was posted to the server.</summary>
      <returns>The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.QueryableDataSourceView" /> control's view state.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNew">
      <summary>Gets or sets the properties and calculated values that are included in the retrieved data.</summary>
      <returns>The values that are used to create the Select command.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.SelectNewParameters">
      <summary>Gets the collection of parameters that are used during a data-retrieval operation.</summary>
      <returns>The parameters that are used to create the Select command.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList)">
      <summary>Stores the original values from the Select operation in the control's view state.</summary>
      <param name="results">The result of the operations.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.StoreOriginalValues(System.Collections.IList,System.Func{System.ComponentModel.PropertyDescriptor,System.Boolean})">
      <summary>Stores the original values from the select operation in the control's view state when delete or update operations are enabled.</summary>
      <param name="results">The result of the operation. </param>
      <param name="include">The method that determines the properties to include.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>When implemented by a class, gets a value that indicates whether a server control is tracking its view-state changes.</summary>
      <returns>true if the data source view is marked to save its state; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>When implemented by a class, loads the server control's previously saved view state for the control.</summary>
      <param name="state">The state of the data source control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#SaveViewState">
      <summary>When implemented by a class, saves the changes to a server control's view state to an object. </summary>
      <returns>The object that contains the changes to the server control's view state.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.System#Web#UI#IStateManager#TrackViewState">
      <summary>When implemented by a class, gets a value that indicates whether a server control is tracking its view-state changes.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.TrackViewState">
      <summary>Causes tracking of view-state changes to the server control so that they can be stored in the server control's state.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
      <summary>Performs an update operation.</summary>
      <returns>The number of rows that were updated in the data source.</returns>
      <param name="keys">The keys of the rows to update.</param>
      <param name="values">The values of the rows to update.</param>
      <param name="oldValues">The row values to evaluate in order to detect data conflicts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryableDataSourceView.UpdateObject(System.Object,System.Object)">
      <summary>Updates a data object.</summary>
      <returns>The number of rows that were updated in the data object.</returns>
      <param name="oldEntity">The object to update.</param>
      <param name="newEntity">The updated object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.UpdateParameters">
      <summary>Gets the collection of parameters that are used during an update operation.</summary>
      <returns>A collection of parameters that are used during an update operation.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.Where">
      <summary>Gets or sets a value that specifies what conditions must be true for a row to be included in the retrieved data.</summary>
      <returns>A string that is used to create the Where clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryableDataSourceView.WhereParameters">
      <summary>Gets a collection of parameters that are used to create a Where clause.</summary>
      <returns>A collection of parameters that are used to create a Where clause.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryContext">
      <summary>Represents a list of parameters that are used to query a data source.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Specialized.IOrderedDictionary,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.UI.DataSourceSelectArguments)">
      <summary>Initializes new instance of the <see cref="T:System.Web.UI.WebControls.QueryContext" /> class by using the <see cref="P:System.Web.UI.WebControls.QueryContext.WhereParameters" />, <see cref="P:System.Web.UI.WebControls.QueryContext.OrderGroupsByParameters" />, <see cref="P:System.Web.UI.WebControls.QueryContext.OrderByParameters" />, <see cref="P:System.Web.UI.WebControls.QueryContext.GroupByParameters" />, <see cref="P:System.Web.UI.WebControls.QueryContext.SelectParameters" />, and <see cref="P:System.Web.UI.WebControls.QueryContext.Arguments" /> properties. </summary>
      <param name="whereParameters">The parameters collection that the data source uses to create the Where clause.</param>
      <param name="orderGroupsByParameters">The parameters collection that the data source uses to create the OrderGroupsBy clause.</param>
      <param name="orderByParameters">The parameters collection that the data source uses to create the OrderBy clause.</param>
      <param name="groupByParameters">The parameters collection that the data source uses to create the GroupBy clause.</param>
      <param name="selectParameters">The parameters collection that the data source uses to create the Select command.</param>
      <param name="arguments">The arguments to pass to the <see cref="T:System.Web.UI.WebControls.QueryContext" /> class.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.Arguments">
      <summary>Gets or sets the arguments to pass to the <see cref="T:System.Web.UI.WebControls.QueryContext" /> class.</summary>
      <returns>The arguments to pass to the <see cref="T:System.Web.UI.WebControls.QueryContext" /> class.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.GroupByParameters">
      <summary>Gets or sets a collection of parameters that specify which properties are used to group the retrieved data.</summary>
      <returns>A collection of parameters that the data source uses to create a GroupBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.OrderByParameters">
      <summary>Gets or sets a collection of parameters that specify which fields are used to order the retrieved data.</summary>
      <returns>A collection of parameters that the data source uses to create an OrderBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.OrderGroupsByParameters">
      <summary>Gets or set a collection of parameters that specify fields that are used to order grouped data.</summary>
      <returns>A collection of parameters that the data source uses to create an OrderGroupsBy clause.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.SelectParameters">
      <summary>Gets or sets a collection of parameters that specify the properties and calculated values that are included in the retrieved data. </summary>
      <returns>A collection of parameters that the data source uses to create a Select command.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryContext.WhereParameters">
      <summary>Gets or sets a collection of parameters that specify the conditions that must be true for a record to be included in the retrieved data.</summary>
      <returns>A collection of parameters that the data source uses to create a Where clause.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryCreatedEventArgs">
      <summary>Represents event data for the <see cref="E:System.Web.UI.WebControls.QueryableDataSource`1.QueryCreated" /> event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryCreatedEventArgs.#ctor(System.Linq.IQueryable)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> class using an <see cref="T:System.Linq.IQueryable`1" /> query object.</summary>
      <param name="query">The query object to use.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryCreatedEventArgs.Query">
      <summary>Gets or sets the <see cref="T:System.Linq.IQueryable`1" /> object to use for the <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> class.</summary>
      <returns>The <see cref="T:System.Linq.IQueryable`1" /> object to use for the <see cref="T:System.Web.UI.WebControls.QueryCreatedEventArgs" /> class.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.QueryExtender">
      <summary>Enables data from a data source to be filtered without an explicit Where clause in the data source. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> Class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.DataSource">
      <summary>Gets the data source control (<see cref="T:System.Web.UI.IDataSource" /> object) to use for the query.</summary>
      <returns>The data source control to use for the query.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> property is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.Expressions">
      <summary>Gets the collection of expressions that are applied to the <see cref="T:System.Web.UI.IDataSource" /> control.</summary>
      <returns>The collection of expressions that are applied to the data source control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)">
      <summary>Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control that must be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)">
      <summary>Occurs when a new instance of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> class is initialized. </summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</summary>
      <returns>An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.QueryExtender.TargetControlID">
      <summary>Gets or sets the ID of the <see cref="T:System.Web.UI.IDataSource" /> control to use for the query.</summary>
      <returns>The ID of the data source control to use for the query. </returns>
    </member>
    <member name="M:System.Web.UI.WebControls.QueryExtender.TrackViewState">
      <summary>Tracks view-state changes of the <see cref="T:System.Web.UI.WebControls.QueryExtender" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.TemplatePagerField">
      <summary>Represents a <see cref="T:System.Web.UI.WebControls.DataPager" /> field that enables you to create a custom paging UI.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CopyProperties(System.Web.UI.WebControls.DataPagerField)">
      <summary>Copies the properties of the current <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataPagerField" /> object.</summary>
      <param name="newField">The object to which the properties of the current <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> instance will be copied.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateDataPagers(System.Web.UI.WebControls.DataPagerFieldItem,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Creates the user interface (UI) controls for the pager field object and adds them to the specified container.</summary>
      <param name="container">The container that is used to store the controls.</param>
      <param name="startRowIndex">The index of the first record on the page.</param>
      <param name="maximumRows">The maximum number of items on a single page.</param>
      <param name="totalRowCount">The total number of items.</param>
      <param name="fieldIndex">The index of the data pager field in the <see cref="P:System.Web.UI.WebControls.DataPager.Fields" /> collection.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.CreateField">
      <summary>Creates and returns a new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</summary>
      <returns>A new instance of the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> class.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.HandleEvent(System.Web.UI.WebControls.CommandEventArgs)">
      <summary>Handles events that occur in the <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object and performs the appropriate action.</summary>
      <param name="e">The event data.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.TemplatePagerField.OnPagerCommand(System.Web.UI.WebControls.DataPagerCommandEventArgs)">
      <summary>Raises the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event. </summary>
      <param name="e">The event data.</param>
      <exception cref="T:System.InvalidOperationException">There is no handler for the <see cref="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand" /> event.</exception>
    </member>
    <member name="E:System.Web.UI.WebControls.TemplatePagerField.PagerCommand">
      <summary>Occurs when a button is clicked in a <see cref="T:System.Web.UI.WebControls.TemplatePagerField" /> object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.TemplatePagerField.PagerTemplate">
      <summary>Gets or sets the custom content for the pager field in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control.</summary>
      <returns>A template object that contains the custom content for the pager field in a <see cref="T:System.Web.UI.WebControls.DataPager" /> control. The default is null, which indicates that this property is not set.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.CustomExpression">
      <summary>Provides a way to specify a custom LINQ query that is called in response to an event.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Provides access to the modified <see cref="T:System.Linq.IQueryable" /> object that the data source uses.</summary>
      <returns>An instance of the modified data source.</returns>
      <param name="source">The data source that the <see cref="T:System.Linq.IQueryable" /> object uses. </param>
    </member>
    <member name="E:System.Web.UI.WebControls.Expressions.CustomExpression.Querying">
      <summary>Occurs when the <see cref="T:System.Linq.IQueryable" /> data source value is set.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs">
      <summary>Represents the event data for the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.#ctor(System.Linq.IQueryable,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs" /> class using the data source object and a dictionary of evaluated parameter values.</summary>
      <param name="source">The data source object to use.</param>
      <param name="values">The evaluated values from the parameter collection of the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Query">
      <summary>Gets or sets the data source object.</summary>
      <returns>The data source object.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.CustomExpressionEventArgs.Values">
      <summary>Gets or sets the evaluated values from the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> instance of the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> object.</summary>
      <returns>The evaluated values from the <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> instance of the <see cref="T:System.Web.UI.WebControls.Expressions.CustomExpression" /> object.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.DataSourceExpression">
      <summary>Represents a base class for creating expression classes.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> instance of the owner control.</summary>
      <returns>The HTTP context instance of the owner control.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource">
      <summary>Gets the data source object that is associated with the owner control.</summary>
      <returns>The data source object that is associated with the owner control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Evaluates the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> instance using the <see cref="T:System.Linq.IQueryable" /> interface. </summary>
      <returns>An instance of <see cref="T:System.Linq.IQueryable" /> object that was used to evaluate the data source expression.</returns>
      <param name="source">The <see cref="T:System.Linq.IQueryable" /> object that the expression is added to.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState">
      <summary>Gets a value that indicates whether a data source expression object is tracking its view state changes.</summary>
      <returns>true if the data source expression object is tracking its view state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.LoadViewState(System.Object)">
      <summary>Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object that must be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner">
      <summary>Gets the owner control.</summary>
      <returns>The owner control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object.</summary>
      <returns>An object that contains the saved state of the data source expression.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Sets the HTTP context of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object that uses the specified owner control, <see cref="T:System.Web.HttpContext" /> instance, and <see cref="T:System.Web.UI.WebControls.IQueryableDataSource" /> object.</summary>
      <param name="owner">The owner control of the <see cref="T:System.Linq.IQueryable" /> data source object.</param>
      <param name="context">The data context to use.</param>
      <param name="dataSource">The <see cref="T:System.Linq.IQueryable" /> data source object to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty">
      <summary>Marks the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object so that its state will be saved in view state.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState">
      <summary>When implemented by a class, gets a value that indicates whether a data source expression object is tracking its view state changes.</summary>
      <returns>true if a data source expression object is tracking its view state changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)">
      <summary>When implemented by a class, loads the previously saved view state of the data source expression object.</summary>
      <param name="state">The object that represents the saved view state values for the data source expression object.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState">
      <summary>When implemented by a class, saves the current view state of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object.</summary>
      <returns>The object that contains the view state changes.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState">
      <summary>When implemented by a class, tracks view state changes of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the data source expression object.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpression.TrackViewState">
      <summary>Tracks view state changes of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the data source expression object.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState">
      <summary>Gets an instance of the <see cref="T:System.Web.UI.StateBag" /> class that contains the current view state information.</summary>
      <returns>An instance of the state bag object that contains the current view state information.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection">
      <summary>Represents a collection of expressions to apply to a data source control.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Add(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>Adds a data source expression object to a <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object at the specified index.</summary>
      <param name="expression">The data source expression object to add.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Contains(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>Determines whether a <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object contains a specific data source expression object. </summary>
      <param name="expression">The data source expression object to locate.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> instance of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> class.</summary>
      <returns>The <see cref="T:System.Web.HttpContext" /> instance.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.CopyTo(System.Web.UI.WebControls.Expressions.DataSourceExpression[],System.Int32)">
      <summary>Copies elements of the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object to an array, starting at a particular index.</summary>
      <param name="expressionArray">The one-dimensional array that is the destination of the elements that are copied.</param>
      <param name="index">The zero-based index in the array at which copying starts.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.CreateKnownType(System.Int32)">
      <summary>Creates an instance of a data source expression object.</summary>
      <returns>The index of the data source expression to create from the ordered list of types returned by the <see cref="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.GetKnownTypes" /> method.</returns>
      <param name="index">The zero-based index in the array where the data source expression object is located.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.GetKnownTypes">
      <summary>Gets an array of data source expression objects that the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object can contain.</summary>
      <returns>An ordered array of data source expression objects that the data source collection can contain.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.IndexOf(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>Gets the index of a specified data source expression object in the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object.</summary>
      <returns>The index of the data source expression object, if it is in the collection; otherwise, -1.</returns>
      <param name="expression">The data source expression object to locate.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Insert(System.Int32,System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>Inserts a data source expression object into an <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object at the specified index.</summary>
      <param name="index">The zero-based index at which the object should be inserted.</param>
      <param name="expression">The data source expression object to insert.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Item(System.Int32)">
      <summary>Gets or sets the data source expression object at a specified index.</summary>
      <returns>The data source expression object at the specified index.</returns>
      <param name="index">The zero-based index of the data source expression to get.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Owner">
      <summary>Gets the owner control.</summary>
      <returns>The owner control.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.Remove(System.Web.UI.WebControls.Expressions.DataSourceExpression)">
      <summary>Removes the first occurrence of the specified data source expression object from the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object.</summary>
      <param name="expression">The data source expression object to remove.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.RemoveAt(System.Int32)">
      <summary>Removes a data source expression object at a specified index from the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" /> object.</summary>
      <param name="index">The zero-based index of the data source expression to remove.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection.SetDirtyObject(System.Object)">
      <summary>Marks a specified data source expression object as having changed since the last load or save operation from view state.</summary>
      <param name="o">The data source expression object to mark as having changed since the last load or save operation from view state. </param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.MethodExpression">
      <summary>Provides a way to specify a custom LINQ query that is defined in a method.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.MethodExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.MethodExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Resolves the expression by using the specified <see cref="T:System.Linq.IQueryable" /> object.</summary>
      <returns>An instance of the <see cref="T:System.Linq.IQueryable" /> object that was used to resolve the expression.</returns>
      <param name="source">The data source control to use.</param>
      <exception cref="T:System.ArgumentNullException">The data source control is null.</exception>
      <exception cref="T:System.InvalidOperationException">The method was not found.-or-The method is not static.-or-The type of the passed IQuerable&lt;T&gt; object was changed.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound">
      <summary>Gets or sets a value that indicates whether the expression should be ignored. </summary>
      <returns>true if the method is ignored; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.MethodName">
      <summary>Gets or sets the name of the method that contains a custom LINQ query.</summary>
      <returns>The name of the method that contains the custom LINQ query.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName">
      <summary>Gets or sets the class whose method contains the custom query.</summary>
      <returns>The class that the method is a member of.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.OfTypeExpression">
      <summary>Provides a way to filter a query based on a specified type.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> class using a specified type.</summary>
      <param name="type">The type that the filter is based on.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OfTypeExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Returns the query that the <see cref="T:System.Web.UI.WebControls.Expressions.OfTypeExpression" /> was performed on. </summary>
      <returns>A query that contains elements of the specified type.</returns>
      <param name="query">The query to use for the filter.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OfTypeExpression.TypeName">
      <summary>Gets or sets the type that the filter is based on.</summary>
      <returns>The type that the filter is based on. The default value is null.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.OrderByExpression">
      <summary>Provides a way to apply a sort expression to an <see cref="T:System.Linq.IQueryable" /> object. </summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> property is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> class. </summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField">
      <summary>Gets or sets the property of the <see cref="T:System.Linq.IQueryable" /> object to sort by.</summary>
      <returns>The property of the <see cref="T:System.Linq.IQueryable" /> data source object to sort by.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction">
      <summary>Gets and sets the sort direction of the <see cref="T:System.Linq.IQueryable" /> data source object.</summary>
      <returns>The sort direction of the data source object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Applies a sort expression to an <see cref="T:System.Linq.IQueryable" /> object based on a <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" /> value and a <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" /> value.</summary>
      <returns>An instance of the data source that the expression was applied to.</returns>
      <param name="source">Specifies the data source to apply the sort to.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions">
      <summary>Gets or sets the collection of <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> expressions to apply after an <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> value is applied to the data source.</summary>
      <returns>The collection of <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> expressions to apply after the <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> is applied to the data source.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression">
      <summary>Represents an abstract base class for <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> objects.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)">
      <summary>Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> object that must be persisted.</summary>
      <param name="savedState">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> object.</param>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters">
      <summary>Gets the parameters that are associated with this <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object.</summary>
      <returns>The parameters that are associated with the <see cref="T:System.Web.UI.WebControls.Expressions.DataSourceExpression" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState">
      <summary>Saves the current view state of the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> object.</summary>
      <returns>An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> object.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Executes the expression by using the specified owner control, context, and data source.</summary>
      <param name="owner">The owner control to use.</param>
      <param name="context">The context to use.</param>
      <param name="dataSource">The data source to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState">
      <summary>Tracks view-state changes of the <see cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" /> object so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the object.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.PropertyExpression">
      <summary>Provides a way to create a Where clause from parameters in a <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection. </summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.PropertyExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> class.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.PropertyExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Applies a <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> object by using the specified <see cref="T:System.Linq.IQueryable" /> data source object.</summary>
      <returns>An instance of the object that the expressions were applied to.</returns>
      <param name="source">The object to use for the query.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.QueryExpression">
      <summary>Retrieves instances of a specific entity type by using a complex query.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.#ctor">
      <summary>Initializes new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.QueryExpression.Expressions">
      <summary>Gets the collection of expressions in the query.</summary>
      <returns>The collection of expressions in the query.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Resolves the expression by using the specified <see cref="T:System.Linq.IQueryable" /> data source control.</summary>
      <returns>An instance of the data source control that was used to resolve the expression.</returns>
      <param name="source">The data source control to use.</param>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.QueryExpression.Initialize(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)">
      <summary>Initializes the <see cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" /> object by using the specified owner control, a <see cref="T:System.Web.HttpContext" /> instance, and <see cref="T:System.Web.UI.WebControls.IQueryableDataSource" /> object.</summary>
      <param name="owner">The control to use.</param>
      <param name="context">The context to use.</param>
      <param name="dataSource">The data source to use.</param>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.RangeExpression">
      <summary>Provides a way to determine whether a value is greater than or less than a specified value, or whether a value is between two specified values.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> property is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField">
      <summary>Gets or sets the field to use for the comparison.</summary>
      <returns>The field to use for the comparison.</returns>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Gets the <see cref="T:System.Linq.IQueryable" /> object that the range comparison was performed on.</summary>
      <returns>An instance of the <see cref="T:System.Linq.IQueryable" /> object that the expression was applied to.</returns>
      <param name="source">The object to use for the comparison.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> property is null.-or- The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> and the <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> properties are set to <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />.-or- The <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> or <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> property is not set to <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> and the parameter collection is empty.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType">
      <summary>Gets or sets the maximum value of the range.</summary>
      <returns>The type of comparison to use for the maximum value. The default is <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, which indicates that the maximum comparison is not performed.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType">
      <summary>Gets or sets the minimum value of the range.</summary>
      <returns>The type of comparison to use for the minimum value. The default is <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, which indicates that the minimum comparison is not performed.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.RangeType">
      <summary>Specifies the type of numeric comparison to use in an instance of the <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" /> class.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.None">
      <summary>Specifies that the search does not have a boundary.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.Exclusive">
      <summary>Specifies a greater-than-or-less-than comparison. Corresponds to the &gt; or &lt; operator.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.RangeType.Inclusive">
      <summary>Specifies an equal-to-or-greater-than comparison or an equal-to-or-less-than comparison. Corresponds to the &gt;= or &lt;= operator.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.SearchExpression">
      <summary>Provides a way to search a field or fields for string values and compare them to a specified string value.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> property is null (Nothing in Visual Basic)</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.SearchExpression.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType">
      <summary>Gets or sets the type of string comparison to perform.</summary>
      <returns>The type of string comparison to perform.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> property is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields">
      <summary>Gets and sets a single field or a comma-separated list of fields to search.</summary>
      <returns>The field or fields to search.</returns>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> property is null.</exception>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)">
      <summary>Applies a <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> object to the specified <see cref="T:System.Linq.IQueryable" /> object based on the <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> object.</summary>
      <returns>An instance of the <see cref="T:System.Linq.IQueryable" /> object that the <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> was applied to.</returns>
      <param name="source">The object to use.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields" /> property is null.</exception>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType">
      <summary>Gets or sets the <see cref="T:System.Web.UI.WebControls.Expressions.SearchType" /> value that determines where in the string the search occurs.</summary>
      <returns>The type of search to perform.</returns>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.SearchType">
      <summary>Specifies the type of search in an instance of the <see cref="T:System.Web.UI.WebControls.Expressions.SearchExpression" /> class.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.Contains">
      <summary>Indicates that a search should determine whether the search string matches a string anywhere in a field. </summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.StartsWith">
      <summary>Indicates that a search should determine whether the search string matches a string at the beginning of a field.</summary>
    </member>
    <member name="F:System.Web.UI.WebControls.Expressions.SearchType.EndsWith">
      <summary>Indicates that a search should determine whether the search string matches a string at the end of a field.</summary>
    </member>
    <member name="T:System.Web.UI.WebControls.Expressions.ThenBy">
      <summary>Provides a way to apply a sort expression to an <see cref="T:System.Linq.IQueryable" /> data source object after an <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" /> expression is applied.</summary>
    </member>
    <member name="M:System.Web.UI.WebControls.Expressions.ThenBy.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> class.</summary>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ThenBy.DataField">
      <summary>Gets or sets the property of the <see cref="T:System.Linq.IQueryable" /> object to apply the <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> expression to.</summary>
      <returns>The property of the <see cref="T:System.Linq.IQueryable" /> object to apply the <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" /> expression to.</returns>
    </member>
    <member name="P:System.Web.UI.WebControls.Expressions.ThenBy.Direction">
      <summary>Gets or sets the ordering direction of the <see cref="T:System.Linq.IQueryable" /> data source object.</summary>
      <returns>The ordering direction of the <see cref="T:System.Linq.IQueryable" /> data source object.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.Web.Services.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Services</name>
  </assembly>
  <members>
    <member name="T:System.Web.Services.WebMethodAttribute">
      <summary>Adding this attribute to a method within an XML Web service created using ASP.NET makes the method callable from remote Web clients. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> class.</summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method. </param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> class.</summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method. </param>
      <param name="transactionOption">Initializes the transaction support of an XML Web service method. </param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> class.</summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method. </param>
      <param name="transactionOption">Initializes the transaction support of an XML Web service method. </param>
      <param name="cacheDuration">Initializes the number of seconds the response is cached. </param>
    </member>
    <member name="M:System.Web.Services.WebMethodAttribute.#ctor(System.Boolean,System.EnterpriseServices.TransactionOption,System.Int32,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebMethodAttribute" /> class.</summary>
      <param name="enableSession">Initializes whether session state is enabled for the XML Web service method. </param>
      <param name="transactionOption">Initializes the transaction support of an XML Web service method. </param>
      <param name="cacheDuration">Initializes the number of seconds the response is cached. </param>
      <param name="bufferResponse">Initializes whether the response for this request is buffered. </param>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.BufferResponse">
      <summary>Gets or sets whether the response for this request is buffered.</summary>
      <returns>true if the response for this request is buffered; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.CacheDuration">
      <summary>Gets or sets the number of seconds the response should be held in the cache.</summary>
      <returns>The number of seconds the response should be held in the cache. The default is 0, which means the response is not cached.</returns>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.Description">
      <summary>A descriptive message describing the XML Web service method.</summary>
      <returns>A descriptive message describing the XML Web service method. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.EnableSession">
      <summary>Indicates whether session state is enabled for an XML Web service method.</summary>
      <returns>true if session state is enabled for an XML Web service method. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.MessageName">
      <summary>The name used for the XML Web service method in the data passed to and returned from an XML Web service method.</summary>
      <returns>The name used for the XML Web service method in the data passed to and from an XML Web service method. The default is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.WebMethodAttribute.TransactionOption">
      <summary>Indicates the transaction support of an XML Web service method.</summary>
      <returns>The transaction support of an XML Web service method. The default is <see cref="F:System.EnterpriseServices.TransactionOption.Disabled" />.</returns>
    </member>
    <member name="T:System.Web.Services.WebService">
      <summary>Defines the optional base class for XML Web services, which provides direct access to common ASP.NET objects, such as application and session state.</summary>
    </member>
    <member name="M:System.Web.Services.WebService.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebService" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.WebService.Application">
      <summary>Gets the application object for the current HTTP request.</summary>
      <returns>An <see cref="T:System.Web.HttpApplicationState" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlThread, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.WebService.Context">
      <summary>Gets the ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request, which encapsulates all HTTP-specific context used by the HTTP server to process Web requests.</summary>
      <returns>The ASP.NET <see cref="T:System.Web.HttpContext" /> for the current request.</returns>
      <exception cref="T:System.Exception">
        <paramref name="Context" /> is null. </exception>
      <PermissionSet>
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.WebService.Server">
      <summary>Gets the <see cref="T:System.Web.HttpServerUtility" /> for the current request.</summary>
      <returns>An <see cref="T:System.Web.HttpServerUtility" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.WebService.Session">
      <summary>Gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> instance for the current request.</summary>
      <returns>An <see cref="T:System.Web.SessionState.HttpSessionState" /> representing the ASP.NET session state object for the current session.</returns>
      <PermissionSet>
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.WebService.SoapVersion">
      <summary>Gets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values. The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</returns>
      <PermissionSet>
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.WebService.User">
      <summary>Gets the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object. Can be used to authenticate whether a user is authorized to execute the request.</summary>
      <returns>A <see cref="T:System.Security.Principal.IPrincipal" /> representing the ASP.NET server <see cref="P:System.Web.HttpContext.User" /> object.</returns>
      <PermissionSet>
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Minimal" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.WebServiceAttribute">
      <summary>Used to add additional information to an XML Web service, such as a string describing its functionality.</summary>
    </member>
    <member name="M:System.Web.Services.WebServiceAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceAttribute" /> class.</summary>
    </member>
    <member name="F:System.Web.Services.WebServiceAttribute.DefaultNamespace">
      <summary>The default value for the <see cref="P:System.Web.Services.WebServiceAttribute.Namespace" /> property. This field is constant.</summary>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Description">
      <summary>A descriptive message for the XML Web service.</summary>
      <returns>The text describing the functionality of the XML Web service.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Name">
      <summary>Gets or sets the name of the XML Web service.</summary>
      <returns>The name for the XML Web service. Default value is the name of the class implementing the XML Web service.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceAttribute.Namespace">
      <summary>Gets or sets the default XML namespace to use for the XML Web service.</summary>
      <returns>The default XML namespace to use for the XML Web service. The default is specified in the <see cref="F:System.Web.Services.WebServiceAttribute.DefaultNamespace" /> property.</returns>
    </member>
    <member name="T:System.Web.Services.WebServiceBindingAttribute">
      <summary>Declares a binding that defines one or more XML Web service methods. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class setting the name of the binding the XML Web service method is implementing.</summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property. </param>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property. </param>
      <param name="ns">The namespace associated with the binding. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Namespace" /> property. </param>
    </member>
    <member name="M:System.Web.Services.WebServiceBindingAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.WebServiceBindingAttribute" /> class.</summary>
      <param name="name">The name of the binding an XML Web service method is implementing an operation for. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Name" /> property. </param>
      <param name="ns">The namespace associated with the binding. Sets the <see cref="P:System.Web.Services.WebServiceBindingAttribute.Namespace" /> property. </param>
      <param name="location">The location where the binding is defined. </param>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.ConformsTo">
      <summary>Gets or sets the Web Services Interoperability (WSI) specification to which the binding claims to conform.</summary>
      <returns>One of the <see cref="T:System.Web.Services.WsiProfiles" /> values, indicating a WSI specification.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.EmitConformanceClaims">
      <summary>Gets or sets a value that indicates whether the binding emits conformance claims.</summary>
      <returns>true if the binding emits conformance claims; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Location">
      <summary>Gets or sets the location where the binding is defined.</summary>
      <returns>The location where the binding is defined. The default is the URL of the XML Web service to which the attribute is applied.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Name">
      <summary>Gets or sets the name of the binding.</summary>
      <returns>The name of the binding. The default is the name of the XML Web service with "Soap" appended.</returns>
    </member>
    <member name="P:System.Web.Services.WebServiceBindingAttribute.Namespace">
      <summary>Gets or sets the namespace associated with the binding.</summary>
      <returns>The namespace for the binding. The default is http://tempuri.org/.</returns>
    </member>
    <member name="T:System.Web.Services.WsiProfiles">
      <summary>Describes the Web services interoperability (WSI) specification to which a Web service claims to conform.</summary>
    </member>
    <member name="F:System.Web.Services.WsiProfiles.None">
      <summary>The web service makes no conformance claims.</summary>
    </member>
    <member name="F:System.Web.Services.WsiProfiles.BasicProfile1_1">
      <summary>The web service claims to conform to the WSI Basic Profile version 1.1.</summary>
    </member>
    <member name="T:System.Web.Services.Configuration.DiagnosticsElement">
      <summary>Represents the &lt;diagnostics&gt; element in the Web.config configuration file.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.DiagnosticsElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.DiagnosticsElement" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Configuration.DiagnosticsElement.SuppressReturningExceptions">
      <summary>Gets or sets a value that indicates whether the service returns exceptions.</summary>
      <returns>true if the service returns exceptions; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.PriorityGroup">
      <summary>Specifies the values that can be used to set the priority and group attributes for a SOAP extension in the Web Services configuration file.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.PriorityGroup.High">
      <summary>Represents the value 1. Indicates that the SOAP extension executes in the group of SOAP extensions with the highest priority.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.PriorityGroup.Low">
      <summary>Represents the value 0. Indicates that the SOAP extension executes in the group of SOAP extensions with the lowest priority.</summary>
    </member>
    <member name="T:System.Web.Services.Configuration.ProtocolElement">
      <summary>Represents a protocol element in the Web Services configuration file. The class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElement.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElement.#ctor(System.Web.Services.Configuration.WebServiceProtocols)">
      <summary>Creates an instance of this class, and initializes the <see cref="P:System.Web.Services.Configuration.ProtocolElement.Name" /> property.</summary>
      <param name="protocol">The value to initialize <see cref="P:System.Web.Services.Configuration.ProtocolElement.Name" />.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.ProtocolElement.Name">
      <summary>Gets or sets the protocol name.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WebServiceProtocols" /> object that represents the protocol name.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.ProtocolElementCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Configuration.ProtocolElementCollection" />.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.Add(System.Web.Services.Configuration.ProtocolElement)">
      <summary>Adds a <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to add.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.ContainsKey(System.Object)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> with the specified key exists in the collection.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> with the specified key; otherwise, false.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to find in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.CopyTo(System.Web.Services.Configuration.ProtocolElement[],System.Int32)">
      <summary>Copies the elements from the collection to an array, starting at a particular index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to which to copy the contents of the collection.</param>
      <param name="index">The zero-based index in <paramref name="Array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.IndexOf(System.Web.Services.Configuration.ProtocolElement)">
      <summary>Returns the zero-based index of a specified <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.Web.Services.Configuration.ProtocolElement" />, or -1 if the element was not found in the collection.</returns>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to find in the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.ProtocolElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at a specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.ProtocolElementCollection.Item(System.Object)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> that has the specified key in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> with the specified key.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to get or set in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> with the specified key was not found in the collection.</exception>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.Remove(System.Web.Services.Configuration.ProtocolElement)">
      <summary>Removes a specified <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> from the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.ProtocolElementCollection.RemoveAt(System.Object)">
      <summary>Removes the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> with the specified key from the collection.</summary>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.ProtocolElement" /> to be removed from the collection.</param>
    </member>
    <member name="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement">
      <summary>Configures a timeout that helps mitigate denial of service attacks by terminating any request that takes longer than the <see cref="P:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.ReadTimeout" /> property value. </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement" /> class using the provided <see cref="T:System.Int32" /> value. </summary>
      <param name="readTimeout">The value of the timeout period.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.#ctor(System.Int32,System.Boolean)">
      <summary>Gets or sets the timeout period used to determine whether to terminate requests to mitigate against denial of service attacks.</summary>
      <param name="readTimeout">The time to wait before terminating requests to <see cref="M:System.Xml.XmlReader.Read" /> and <see cref="M:System.Xml.XmlReader.MoveToContent" />.</param>
      <param name="strict">Whether to throw an exception if the serializer encounters elements or attributes that were not in the original schema. For details, see the <see cref="P:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.IsStrict" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.IsStrict">
      <summary>Gets or sets a value that indicates whether to throw an exception if the serializer encounters unexpected elements or attributes.</summary>
      <returns>true if the Web services serializer tries to detect unexpected elements or attributes; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapEnvelopeProcessingElement.ReadTimeout">
      <summary>Gets or sets the timeout period used to determine whether to terminate requests to mitigate against denial of service attacks.</summary>
      <returns>The time to wait before terminating requests to <see cref="M:System.Xml.XmlReader.Read" /> and <see cref="M:System.Xml.XmlReader.MoveToContent" />.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.SoapExtensionTypeElement">
      <summary>Represents the SoapExtensionElement in the Web Services configuration file. This element adds a SOAP extension to run with all XML Web services within the scope of the configuration file. The class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElement.#ctor(System.String,System.Int32,System.Web.Services.Configuration.PriorityGroup)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> class.</summary>
      <param name="type">Specifies the SOAP extension class to add.</param>
      <param name="priority">Indicates the relative order in which a SOAP extension runs when multiple SOAP extensions are specified. Within each group, the priority attribute distinguishes the overall relative priority of the SOAP extension. A lower priority number indicates a higher priority for the SOAP extension. The lowest possible value for the priority attribute is 1.</param>
      <param name="group">Along with priority, specifies the relative order in which a SOAP extension runs when multiple SOAP extensions are configured to run.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElement.#ctor(System.Type,System.Int32,System.Web.Services.Configuration.PriorityGroup)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> class.</summary>
      <param name="type">Specifies the SOAP extension class to add.</param>
      <param name="priority">Indicates the relative order in which a SOAP extension runs when multiple SOAP extensions are specified.</param>
      <param name="group">Along with priority, specifies the relative order in which a SOAP extension runs when multiple SOAP extensions are configured to run.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapExtensionTypeElement.Group">
      <summary>Gets or sets the relative order in which a SOAP extension runs when multiple SOAP extensions are configured to run.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.PriorityGroup" /> object whose value determines relative order in which a SOAP extension runs.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapExtensionTypeElement.Priority">
      <summary>Gets or sets the value that indicates the relative order in which a SOAP extension runs when multiple SOAP extensions are specified.</summary>
      <returns>A <see cref="T:System.Int32" /> whose value determines relative order in which a SOAP extension runs.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapExtensionTypeElement.Type">
      <summary>Gets or sets the SOAP extension class to add to the SoapExtensionType element of the Web Services configuration file.</summary>
      <returns>A <see cref="T:System.String" /> that contains the type name of the SoapExtensionType element.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.SoapExtensionTypeElementCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElementCollection" />.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.Add(System.Web.Services.Configuration.SoapExtensionTypeElement)">
      <summary>Adds a <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to add.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.ContainsKey(System.Object)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> with the specified key exists in the collection.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> with the specified key; otherwise, false.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to find in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.CopyTo(System.Web.Services.Configuration.SoapExtensionTypeElement[],System.Int32)">
      <summary>Copies the elements from the collection to an array, starting at a specified index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to which to copy the contents of the collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.IndexOf(System.Web.Services.Configuration.SoapExtensionTypeElement)">
      <summary>Returns the zero-based index of a specified <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" />, or -1 if the element was not found in the collection.</returns>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to find in the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at a specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.Item(System.Object)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> having the specified key in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> with the specified key.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to get or set in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> with the specified key was not found in the collection.</exception>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.Remove(System.Web.Services.Configuration.SoapExtensionTypeElement)">
      <summary>Removes a specified <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> from the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.SoapExtensionTypeElementCollection.RemoveAt(System.Object)">
      <summary>Removes the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> with the specified key from the collection.</summary>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElement" /> to be removed from the collection.</param>
    </member>
    <member name="T:System.Web.Services.Configuration.TypeElement">
      <summary>Represents the type element in the Web services configuration file.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElement.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElement.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> class.</summary>
      <param name="type">The type of the configuration attribute.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElement.#ctor(System.Type)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> class.</summary>
      <param name="type">The type of the configuration attribute.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.TypeElement.Type">
      <summary>Gets or sets the type of the configuration attribute.</summary>
      <returns>The type of the configuration attribute.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.TypeElementCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Web.Services.Configuration.TypeElement" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Configuration.TypeElementCollection" />.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.Add(System.Web.Services.Configuration.TypeElement)">
      <summary>Adds a <see cref="T:System.Web.Services.Configuration.TypeElement" /> to the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.TypeElement" /> to add.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Services.Configuration.TypeElement" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.ContainsKey(System.Object)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Web.Services.Configuration.TypeElement" /> with the specified key exists in the collection.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Services.Configuration.TypeElement" /> with the specified key; otherwise, false.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> to find in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.CopyTo(System.Web.Services.Configuration.TypeElement[],System.Int32)">
      <summary>Copies the elements from the collection to an array, starting at a specified index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Configuration.TypeElement" /> to which to copy the contents of the collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.IndexOf(System.Web.Services.Configuration.TypeElement)">
      <summary>Returns the zero-based index of a specified <see cref="T:System.Web.Services.Configuration.TypeElement" /> in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.Web.Services.Configuration.TypeElement" />, or -1 if the element was not found in the collection.</returns>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.TypeElement" /> to find in the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.TypeElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at a specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.TypeElement" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.TypeElementCollection.Item(System.Object)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.TypeElement" /> that has the specified key in the collection. </summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.TypeElement" /> with the specified key.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> to get or set in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The <see cref="T:System.Web.Services.Configuration.TypeElement" /> with the specified key was not found in the collection.</exception>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.Remove(System.Web.Services.Configuration.TypeElement)">
      <summary>Removes a specified <see cref="T:System.Web.Services.Configuration.TypeElement" /> from the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.TypeElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.TypeElementCollection.RemoveAt(System.Object)">
      <summary>Removes the <see cref="T:System.Web.Services.Configuration.TypeElement" /> with the specified key from the collection.</summary>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.TypeElement" /> to be removed from the collection.</param>
    </member>
    <member name="T:System.Web.Services.Configuration.WebServiceProtocols">
      <summary>Specifies the transmission protocols that are used to decrypt data sent from a client browser in the HTTP request.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.Unknown">
      <summary>Unknown protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.HttpSoap">
      <summary>The HTTP SOAP protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.HttpGet">
      <summary>The HTTP GET protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.HttpPost">
      <summary>The HTTP POST protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.Documentation">
      <summary>The Web Services Documentation protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.HttpPostLocalhost">
      <summary>The HTTP POST LOCALHOST protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.HttpSoap12">
      <summary>The HTTP SOAP version 1.2 protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Configuration.WebServiceProtocols.AnyHttpSoap">
      <summary>Any version of the HTTP SOAP protocol.</summary>
    </member>
    <member name="T:System.Web.Services.Configuration.WebServicesSection">
      <summary>Represents the webServices element in the configuration file. This element controls the settings of XML Web services.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WebServicesSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.ConformanceWarnings">
      <summary>Gets the collection of conformance warnings for the Web Service. This property corresponds to the configurationWarnings element in the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WsiProfilesElementCollection" /> object that represents the collection of conformance warnings for the Web Service.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.Current">
      <summary>Gets a <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object that represents the current section.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.Diagnostics">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.DiagnosticsElement" /> for the <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.DiagnosticsElement" /> for the current configuration file.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.EnabledProtocols">
      <summary>Gets one of the <see cref="T:System.Web.Services.Configuration.WebServiceProtocols" /> values that indicates the Web service protocol.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Configuration.WebServiceProtocols" /> values.</returns>
    </member>
    <member name="M:System.Web.Services.Configuration.WebServicesSection.GetSection(System.Configuration.Configuration)">
      <summary>Retrieves the specified configuration section.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object that represents the section being retrieved.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> object that represents the section to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="config" /> is null.</exception>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.Protocols">
      <summary>Gets the transmission protocol that is used to decrypt data sent from a client browser in an HTTP request.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WebServiceProtocols" /> object that represents the transmission protocol that is used to decrypt data sent from a client browser in an HTTP request.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.ServiceDescriptionFormatExtensionTypes">
      <summary>Gets the <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the service description format extension to run within the scope of the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the service description format extension to run within the scope of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapEnvelopeProcessing">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement" /> for the <see cref="T:System.Web.Services.Configuration.WebServicesSection" /> object.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.SoapEnvelopeProcessingElement" /> for the current configuration file.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapExtensionImporterTypes">
      <summary>Gets the <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the SOAP extensions to run when a service description for an XML Web service within the scope of the configuration file is accessed.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the SOAP extensions to run when a service description for an XML Web service within the scope of the configuration file is accessed.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapExtensionReflectorTypes">
      <summary>Gets the <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the SOAP extensions to run when a service description is generated for all XML Web services within the scope of the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> that specifies the SOAP extensions to run when a service description is generated for all XML Web services within the scope of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapExtensionTypes">
      <summary>Gets the <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElementCollection" /> that specifies the SOAP extensions to run with all XML Web services within the scope of the configuration file.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.SoapExtensionTypeElementCollection" /> that specifies the SOAP extensions to run with all XML Web services within the scope of the configuration file.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapServerProtocolFactoryType">
      <summary>Gets a <see cref="T:System.Web.Services.Configuration.TypeElement" /> object that corresponds to the protocol used to call the Web service.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.TypeElement" /> object that corresponds to the protocol used to call the Web service.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.SoapTransportImporterTypes">
      <summary>Gets a <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> object that represents the SoapTransportImporterTypes configuration element.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.TypeElementCollection" /> object that represents the SoapTransportImporterTypes configuration element.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.WebServicesSection.WsdlHelpGenerator">
      <summary>Gets the Web service Help page (an .aspx file) that is displayed to a browser when the browser navigates directly to an ASMX page.</summary>
      <returns>A <see cref="T:System.Web.Services.Configuration.WsdlHelpGeneratorElement" /> object that specifies the XML Web service Help page (an .aspx file) that is displayed to a browser when the browser navigates directly to an ASMX XML Web service page.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.WsdlHelpGeneratorElement">
      <summary>Represents WsdlHelpGenerator element in the configuration file that specifies the XML Web service Help page (an .aspx file) that is displayed to a browser when the browser navigates directly to an ASMX XML Web services page.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsdlHelpGeneratorElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.WsdlHelpGeneratorElement" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Configuration.WsdlHelpGeneratorElement.Href">
      <summary>Gets or sets the file path to the Help page.</summary>
      <returns>A <see cref="T:System.String" /> that contains the file path to the Help page.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.WsiProfilesElement">
      <summary>Represents the WsiProfiles element in the configuration file.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElement.#ctor">
      <summary>Initializes and instance of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElement.#ctor(System.Web.Services.WsiProfiles)">
      <summary>Initializes and instance of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> class, using the specified <see cref="T:System.Web.Services.WsiProfiles" /> enumeration value.</summary>
      <param name="name">A <see cref="T:System.Web.Services.WsiProfiles" /> object that specifies whether the Web service conforms to the WSI Basic Profile version 1.1.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.WsiProfilesElement.Name">
      <summary>Gets or sets whether the Web service conforms to the WSI Basic Profile version 1.1.</summary>
      <returns>A <see cref="T:System.Web.Services.WsiProfiles" /> object that specifies whether the Web service conforms to the WSI Basic Profile version 1.1.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.WsiProfilesElementCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Configuration.WsiProfilesElementCollection" />.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.Add(System.Web.Services.Configuration.WsiProfilesElement)">
      <summary>Adds a <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to add.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.Clear">
      <summary>Removes all <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> objects from the collection.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.ContainsKey(System.Object)">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether a <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> with the specified key exists in the collection.</summary>
      <returns>true if the collection contains a <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> with the specified key; otherwise, false.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to find in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.CopyTo(System.Web.Services.Configuration.WsiProfilesElement[],System.Int32)">
      <summary>Copies the elements from the collection to an array, starting at a specified index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to which to copy the contents of the collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.IndexOf(System.Web.Services.Configuration.WsiProfilesElement)">
      <summary>Returns the zero-based index of a specified <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" />, or -1 if the element was not found in the collection.</returns>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to find in the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.WsiProfilesElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at a specified index in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> that exists at the specified index.</returns>
      <param name="index">The zero-based index into the collection.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.WsiProfilesElementCollection.Item(System.Object)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> that has the specified key in the collection.</summary>
      <returns>The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> with the specified key.</returns>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to get or set in the collection.</param>
      <exception cref="T:System.Collections.Generic.KeyNotFoundException">The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> with the specified key was not found in the collection.</exception>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.Remove(System.Web.Services.Configuration.WsiProfilesElement)">
      <summary>Removes a specified <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> from the collection.</summary>
      <param name="element">The <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.RemoveAt(System.Int32)">
      <summary>Removes the element at the specified index in the collection.</summary>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.WsiProfilesElementCollection.RemoveAt(System.Object)">
      <summary>Removes the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> with the specified key from the collection.</summary>
      <param name="key">The key of the <see cref="T:System.Web.Services.Configuration.WsiProfilesElement" /> to be removed from the collection.</param>
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute">
      <summary>Specifies that a service description format extension runs at one or more extension points. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class that specifies the XML element and namespace to add when running at the specified extension point.</summary>
      <param name="elementName">The XML element added to the service description by the service description format extension.</param>
      <param name="ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name="extensionPoint1">The extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class that specifies the XML element and namespace to add when running at the specified extension points.</summary>
      <param name="elementName">The XML element added to the service description by the service description format extension.</param>
      <param name="ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name="extensionPoint1">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint2">An extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class that specifies the XML element and namespace to add when running at the specified extension points.</summary>
      <param name="elementName">The XML element added to the service description by the service description format extension.</param>
      <param name="ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name="extensionPoint1">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint2">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint3">An extension point at which to run the service description format extension.</param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type,System.Type,System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class that specifies the XML element and namespace to add when running at the specified extension points.</summary>
      <param name="elementName">The XML element added to the service description by the service description format extension.</param>
      <param name="ns">The XML namespace for the XML element added to the service description by the service description format extension.</param>
      <param name="extensionPoint1">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint2">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint3">An extension point at which to run the service description format extension.</param>
      <param name="extensionPoint4">An extension point at which to run the service description format extension. </param>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionAttribute.#ctor(System.String,System.String,System.Type[])">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionAttribute" /> class that specifies the XML element and namespace to add when running at the specified extension points.</summary>
      <param name="elementName">The XML element added to the service description by the service description format extension. </param>
      <param name="ns">The XML namespace for the XML element added to the service description by the service description format extension. </param>
      <param name="extensionPoints">An array of extension points at which to run the service description format extension. </param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.ElementName">
      <summary>Gets or sets the XML element added to the service description by the service description format extension.</summary>
      <returns>The XML element added to the service description by the service description format extension.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.ExtensionPoints">
      <summary>The stages at which the service description format extension is to run.</summary>
      <returns>An array of <see cref="T:System.Type" /> that specifies the stage at which the service description format extension is to run.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionAttribute.Namespace">
      <summary>Gets or sets the XML namespace for the XML element added to the service description by the service description format extension.</summary>
      <returns>The XML namespace for the XML element added to the service description by the service description format extension.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute">
      <summary>Specifies the XML namespace and XML namespace prefix to use for a service description format extension within a service description. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute" /> class.</summary>
      <param name="memberName">The member of the class that implements the service description format extension that can have a service description format extension associated with it.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.AllowElements">
      <summary>Gets or sets a value that indicates whether the member of the class that implements the service description format extension specified in the <see cref="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.MemberName" /> property can accept raw XML elements.</summary>
      <returns>true if the member of the class that implements the service description format extension specified in the <see cref="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.MemberName" /> property can accept raw XML elements; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPointAttribute.MemberName">
      <summary>Specifies that the member of the class that implements the service description format extension can have a service description format extension associated with it.</summary>
      <returns>The member of the class that implements the service description format extension that can have a service description format extension associated with it.</returns>
    </member>
    <member name="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute">
      <summary>Specifies the XML namespace and XML namespace prefix to use for a service description format extension within a service description. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute" /> class, setting the XML namespace and XML namespace prefix for a service description format extension.</summary>
      <param name="prefix">The XML namespace prefix associated with a service description format extension.</param>
      <param name="ns">The XML namespace associated with a service description format extension.</param>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.Namespace">
      <summary>Gets or sets the XML namespace associated with a service description format extension.</summary>
      <returns>The XML namespace associated with a service description format extension.</returns>
    </member>
    <member name="P:System.Web.Services.Configuration.XmlFormatExtensionPrefixAttribute.Prefix">
      <summary>Gets or sets the XML namespace prefix associated with a service description format extension.</summary>
      <returns>The XML namespace prefix associated with a service description format extension.</returns>
    </member>
    <member name="T:System.Web.Services.Description.BasicProfileViolation">
      <summary>Represents a WSDL violation of the WSI Basic Profile version 1.1.</summary>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolation.Claims">
      <summary>Gets a <see cref="T:System.Web.Services.WsiProfiles" /> object that specifies whether the Web service declares that it conforms to the WSI Basic Profile version 1.1.</summary>
      <returns>A <see cref="T:System.Web.Services.WsiProfiles" /> object that specifies whether the Web service declares that it conforms to the WSI Basic Profile version 1.1.</returns>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolation.Details">
      <summary>Gets a <see cref="T:System.String" /> that provides a detailed description of the WSDL violation of the Basic Profile.</summary>
      <returns>A <see cref="T:System.String" /> that provides a detailed description of the WSDL violation of the Basic Profile.</returns>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolation.Elements">
      <summary>Represents WSDL elements that do not comply with the WSI Basic Profile version 1.1 specification.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that contains the WSDL elements that do not comply with the WSI Basic Profile version 1.1 specification.</returns>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolation.NormativeStatement">
      <summary>Gets the identifier for the WSDL violation of the Basic Profile version 1.1 specification. </summary>
      <returns>A <see cref="T:System.String" /> that contains the identifier (For example, R2038) for the WSDL violation of the Basic Profile version 1.1 specification. </returns>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolation.Recommendation">
      <summary>Gets a <see cref="T:System.String" /> object that describes the WSDL violation of the Basic Profile version 1.1 specification.</summary>
      <returns>The <see cref="T:System.String" /> object that describes the WSDL violation of the Basic Profile version 1.1 specification.</returns>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolation.ToString">
      <summary>Returns a <see cref="T:System.String" /> that comprises information from <see cref="P:System.Web.Services.Description.BasicProfileViolation.NormativeStatement" />, <see cref="P:System.Web.Services.Description.BasicProfileViolation.Details" />, and <see cref="P:System.Web.Services.Description.BasicProfileViolation.Elements" />.</summary>
      <returns>A <see cref="T:System.String" /> that comprises information from <see cref="P:System.Web.Services.Description.BasicProfileViolation.NormativeStatement" />, <see cref="P:System.Web.Services.Description.BasicProfileViolation.Details" />, and <see cref="P:System.Web.Services.Description.BasicProfileViolation.Elements" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.BasicProfileViolationCollection">
      <summary>Contains a strongly typed collection of <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.Contains(System.Web.Services.Description.BasicProfileViolation)">
      <summary>Checks whether the collection contains the specified <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> object.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> object exists in the collection; otherwise false.</returns>
      <param name="violation">The <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> object to locate in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.CopyTo(System.Web.Services.Description.BasicProfileViolation[],System.Int32)">
      <summary>Copies the elements from the collection to an array, starting at a specified index of the array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> to which to copy the contents of the collection.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.IndexOf(System.Web.Services.Description.BasicProfileViolation)">
      <summary>Returns the zero-based index of a specified <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> in the collection.</summary>
      <returns>The zero-based index of the specified <see cref="T:System.Web.Services.Description.BasicProfileViolation" />, or -1 if the element was not found in the collection.</returns>
      <param name="violation">The <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> to find in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.Insert(System.Int32,System.Web.Services.Description.BasicProfileViolation)">
      <summary>Inserts a <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> to the collection at the specified location.</summary>
      <param name="index">The zero-based index in the collection at which to insert the <paramref name="violation" />.</param>
      <param name="violation">The <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> to insert.</param>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolationCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> element at a specified index in the collection.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> object that exists at the specified index.</returns>
      <param name="index">The zero-based index in the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.Remove(System.Web.Services.Description.BasicProfileViolation)">
      <summary>Removes a specified <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> from the collection.</summary>
      <param name="violation">The <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> to remove from the collection.</param>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection of <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> objects.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationCollection.ToString">
      <summary>Returns a <see cref="T:System.String" /> representation of the <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> objects in the collection.</summary>
      <returns>A <see cref="T:System.String" /> representation of the <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> objects in the collection.</returns>
    </member>
    <member name="T:System.Web.Services.Description.BasicProfileViolationEnumerator">
      <summary>Enumerates the elements in a <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" />.</summary>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationEnumerator.#ctor(System.Web.Services.Description.BasicProfileViolationCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.BasicProfileViolationEnumerator" /> class.</summary>
      <param name="list">The <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" /> to be enumerated using this class.</param>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolationEnumerator.Current">
      <summary>Gets the current <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> element in the <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.BasicProfileViolation" /> object representing the current element in the <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationEnumerator.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Web.Services.Description.BasicProfileViolationEnumerator" />. </summary>
    </member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationEnumerator.MoveNext">
      <summary>Enumerates to the next element in the <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" />.</summary>
      <returns>false if the end of the collection is reached; otherwise true.</returns>
    </member>
    <member name="P:System.Web.Services.Description.BasicProfileViolationEnumerator.System#Collections#IEnumerator#Current"></member>
    <member name="M:System.Web.Services.Description.BasicProfileViolationEnumerator.System#Collections#IEnumerator#Reset"></member>
    <member name="T:System.Web.Services.Description.Binding">
      <summary>Specifies the concrete data format and protocols used in the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Binding.#ctor"></member>
    <member name="P:System.Web.Services.Description.Binding.Extensions">
      <summary>Gets the collection of extensibility elements used in the XML Web service.</summary>
      <returns>Returns a <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Operations">
      <summary>Gets the collection of specifications for data formats and message protocols used in the action supported by the XML Web service.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Binding.ServiceDescription">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the <see cref="T:System.Web.Services.Description.Binding" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Binding.Type">
      <summary>Gets or sets a value representing the namespace-qualified name of the <see cref="T:System.Web.Services.Description.PortType" /> with which the Binding is associated.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.BindingCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Binding" /> class supported by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Add(System.Web.Services.Description.Binding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Binding" /> to the end of the <see cref="T:System.Web.Services.Description.BindingCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="binding" /> parameter has been added.</returns>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Contains(System.Web.Services.Description.Binding)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Binding" /> is a member of the <see cref="T:System.Web.Services.Description.BindingCollection" />.</summary>
      <returns>true if the <paramref name="binding" /> parameter is a member of the <see cref="T:System.Web.Services.Description.BindingCollection" />; otherwise, false.</returns>
      <param name="binding">A <see cref="T:System.Web.Services.Description.Binding" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.CopyTo(System.Web.Services.Description.Binding[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.BindingCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.Binding" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Binding" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.IndexOf(System.Web.Services.Description.Binding)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Binding" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Insert(System.Int32,System.Web.Services.Description.Binding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Binding" /> to the <see cref="T:System.Web.Services.Description.BindingCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="binding" /> parameter. </param>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> to be added to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.BindingCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Binding" /> at the specified zero-based index.</summary>
      <returns>A Binding.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Binding" /> whose value is modified or returned. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.BindingCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.Binding" /> specified by its name.</summary>
      <returns>A Binding.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Binding" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.BindingCollection.Remove(System.Web.Services.Description.Binding)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Binding" /> from the <see cref="T:System.Web.Services.Description.BindingCollection" />.</summary>
      <param name="binding">The <see cref="T:System.Web.Services.Description.Binding" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.DocumentableItem">
      <summary>Represents the abstract base class from which several classes in the <see cref="N:System.Web.Services.Description" /> namespace are derived.</summary>
    </member>
    <member name="M:System.Web.Services.Description.DocumentableItem.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.DocumentableItem" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.Documentation">
      <summary>Gets or sets the text documentation for the instance of the <see cref="T:System.Web.Services.Description.DocumentableItem" />.</summary>
      <returns>A string that represents the documentation for the <see cref="T:System.Web.Services.Description.DocumentableItem" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.DocumentationElement">
      <summary>Gets or sets the documentation element for the <see cref="T:System.Web.Services.Description.DocumentableItem" />.</summary>
      <returns>A <see cref="T:System.Xml.XmlElement" /> that represents the documentation for the <see cref="T:System.Web.Services.Description.DocumentableItem" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.ExtensibleAttributes">
      <summary>Gets or sets an array of type <see cref="T:System.Xml.XmlAttribute" /> that represents attribute extensions of WSDL to comply with Web Services Interoperability (WS-I) Basic Profile 1.1.</summary>
      <returns>An array of type <see cref="T:System.Xml.XmlAttribute" /> that represents attribute extensions of WSDL to comply with Web Services Interoperability (WS-I) Basic Profile 1.1.</returns>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.DocumentableItem" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.DocumentableItem" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.DocumentableItem.Namespaces">
      <summary>Gets or sets the dictionary of namespace prefixes and namespaces used to preserve namespace prefixes and namespaces when a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object is constructed.</summary>
      <returns>A <see cref="T:System.Xml.Serialization.XmlSerializerNamespaces" /> dictionary containing prefix/namespace pairs.</returns>
    </member>
    <member name="T:System.Web.Services.Description.FaultBinding">
      <summary>Specifies the format for any error messages that might be output as a result of the operation. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.FaultBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.FaultBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.FaultBinding.Extensions">
      <summary>Gets the collection of extensibility elements associated with the current <see cref="T:System.Web.Services.Description.FaultBinding" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />. The default value is a collection with a <see cref="P:System.Collections.CollectionBase.Count" /> of zero.</returns>
    </member>
    <member name="T:System.Web.Services.Description.FaultBindingCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.FaultBinding" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Add(System.Web.Services.Description.FaultBinding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> to the end of the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="bindingOperationFault" /> parameter has been added.</returns>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Contains(System.Web.Services.Description.FaultBinding)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> is a member of the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</summary>
      <returns>true if the <paramref name="bindingOperationFault" /> parameter is a member of the FaultBindingCollection; otherwise, false.</returns>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.CopyTo(System.Web.Services.Description.FaultBinding[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.FaultBindingCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.FaultBinding" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.FaultBinding" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.IndexOf(System.Web.Services.Description.FaultBinding)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Insert(System.Int32,System.Web.Services.Description.FaultBinding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> to the FaultBindingCollection at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="bindingOperationFault" /> parameter. </param>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.FaultBindingCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.FaultBinding" /> at the specified zero-based index.</summary>
      <returns>A FaultBinding.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.FaultBinding" /> whose value is modified or returned. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.FaultBindingCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.FaultBinding" /> specified by its name.</summary>
      <returns>A FaultBinding.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.FaultBinding" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.FaultBindingCollection.Remove(System.Web.Services.Description.FaultBinding)">
      <summary>Removes the first occurrence the specified <see cref="T:System.Web.Services.Description.FaultBinding" /> from the <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</summary>
      <param name="bindingOperationFault">The <see cref="T:System.Web.Services.Description.FaultBinding" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.HttpAddressBinding">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Port" /> within an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.HttpAddressBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.HttpAddressBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpAddressBinding.Location">
      <summary>Gets or sets a value representing the URL of the XML Web service.</summary>
      <returns>A string specifying the URI for the <see cref="T:System.Web.Services.Description.Port" />. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.HttpBinding">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Binding" /> within an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.HttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.HttpBinding" /> class. </summary>
    </member>
    <member name="F:System.Web.Services.Description.HttpBinding.Namespace">
      <summary>Specifies the URI for the XML namespace representing the HTTP transport for use with SOAP. This field is constant.</summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpBinding.Verb">
      <summary>Gets or sets a value indicating whether the HTTP request will be made using the "GET" or "POST" method.</summary>
      <returns>A string containing one of two possible values, "GET" or "POST". The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.HttpOperationBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.OperationBinding" /> within an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.HttpOperationBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.HttpOperationBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.HttpOperationBinding.Location">
      <summary>Gets or sets the URL relative to the location specified by the <see cref="T:System.Web.Services.Description.HttpAddressBinding" />, within the Web Services Description Language (WSDL) document, of the operation supported by the <see cref="T:System.Web.Services.Description.HttpOperationBinding" />.</summary>
      <returns>An unencoded string representing the relative path. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.HttpUrlEncodedBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> within an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.HttpUrlEncodedBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.HttpUrlEncodedBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.HttpUrlReplacementBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> within an XML Web service. It specifies the format for data transmission through HTTP. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.HttpUrlReplacementBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.HttpUrlReplacementBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.Import">
      <summary>Associates an XML namespace with a document location. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Import.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Import" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Import.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Import" /> class.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Import" /> class.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Import.Location">
      <summary>Gets or sets the value of the XML location attribute of the import element.</summary>
      <returns>The value of the XML location attribute of the import element. This value also specifies the URL of the imported document.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Import.Namespace">
      <summary>Gets or sets the value of the XML namespace attribute of the import element.</summary>
      <returns>The value of the XML namespace attribute of the import element.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Import.ServiceDescription">
      <summary>Gets a reference to the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the <see cref="T:System.Web.Services.Description.Import" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.ImportCollection">
      <summary>Provides a collection of instances of the <see cref="T:System.Web.Services.Description.Import" /> class representing documents to be imported into the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Add(System.Web.Services.Description.Import)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Import" /> to the end of the <see cref="T:System.Web.Services.Description.ImportCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="import" /> parameter has been added.</returns>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Contains(System.Web.Services.Description.Import)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Import" /> is a member of the <see cref="T:System.Web.Services.Description.ImportCollection" />.</summary>
      <returns>true if the <paramref name="import" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ImportCollection" />; otherwise, false.</returns>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.CopyTo(System.Web.Services.Description.Import[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.ImportCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.Import" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Import" /> serving as the destination of the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.IndexOf(System.Web.Services.Description.Import)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Import" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Insert(System.Int32,System.Web.Services.Description.Import)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Import" /> instance to the <see cref="T:System.Web.Services.Description.ImportCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="import" /> parameter. </param>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.ImportCollection.Item(System.Int32)">
      <summary>Gets or sets the value of an <see cref="T:System.Web.Services.Description.Import" /> at the specified zero-based index.</summary>
      <returns>An Import.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Import" /> whose value is modified or returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.ImportCollection.Remove(System.Web.Services.Description.Import)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Import" /> from the <see cref="T:System.Web.Services.Description.ImportCollection" />.</summary>
      <param name="import">The <see cref="T:System.Web.Services.Description.Import" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.InputBinding">
      <summary>Provides a set of specifications for data formats and protocols used by the XML Web service for input messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.InputBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.InputBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.InputBinding.Extensions">
      <summary>Gets the collection of extensibility elements associated with the current <see cref="T:System.Web.Services.Description.InputBinding" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.Message">
      <summary>Provides an abstract definition of data passed by an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Message.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Message" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Message.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Message" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Message" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.Message.FindPartByName(System.String)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> returned by the <see cref="P:System.Web.Services.Description.Message.Parts" /> property, and returns the named <see cref="T:System.Web.Services.Description.MessagePart" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MessagePart" />.</returns>
      <param name="partName">A string that names the <see cref="T:System.Web.Services.Description.MessagePart" /> to be returned.</param>
      <exception cref="T:System.ArgumentException">No <see cref="T:System.Web.Services.Description.MessagePart" /> with the specified name exists within the collection.</exception>
    </member>
    <member name="M:System.Web.Services.Description.Message.FindPartsByName(System.String[])">
      <summary>Searches the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> returned by the <see cref="P:System.Web.Services.Description.Message.Parts" /> property and returns an array of type <see cref="T:System.Web.Services.Description.MessagePart" /> that contains the named instances.</summary>
      <returns>An array of type <see cref="T:System.Web.Services.Description.MessagePart" />.</returns>
      <param name="partNames">An array of names of the <see cref="T:System.Web.Services.Description.MessagePart" /> instances to be returned. </param>
      <exception cref="T:System.ArgumentException">No <see cref="T:System.Web.Services.Description.MessagePart" /> instances with the specified names exist within the collection. </exception>
    </member>
    <member name="P:System.Web.Services.Description.Message.Parts">
      <summary>Gets the collection of the <see cref="T:System.Web.Services.Description.MessagePart" /> objects contained in the <see cref="T:System.Web.Services.Description.Message" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MessagePartCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Message.ServiceDescription">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the current <see cref="T:System.Web.Services.Description.Message" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MessageBinding">
      <summary>Describes how abstract content is mapped into a concrete format.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MessageBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MessageBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessageBinding.OperationBinding">
      <summary>Gets the <see cref="T:System.Web.Services.Description.OperationBinding" /> of which the current <see cref="T:System.Web.Services.Description.MessageBinding" /> is a member.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationBinding" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MessageCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Message" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Add(System.Web.Services.Description.Message)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Message" /> to the end of the <see cref="T:System.Web.Services.Description.MessageCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="message" /> parameter has been added.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Contains(System.Web.Services.Description.Message)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Message" /> is a member of the <see cref="T:System.Web.Services.Description.MessageCollection" />.</summary>
      <returns>true if the <paramref name="message" /> parameter is a member of the <see cref="T:System.Web.Services.Description.MessageCollection" />; otherwise, false.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.CopyTo(System.Web.Services.Description.Message[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.MessageCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.Message" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Message" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.IndexOf(System.Web.Services.Description.Message)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Message" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Insert(System.Int32,System.Web.Services.Description.Message)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Message" /> to the <see cref="T:System.Web.Services.Description.MessageCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="message" /> parameter. </param>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MessageCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Message" /> at the specified zero-based index.</summary>
      <returns>A Message.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Message" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.MessageCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.Message" /> specified by its name.</summary>
      <returns>A Message.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Message" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessageCollection.Remove(System.Web.Services.Description.Message)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Message" /> from the <see cref="T:System.Web.Services.Description.MessageCollection" />.</summary>
      <param name="message">The <see cref="T:System.Web.Services.Description.Message" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.MessagePart">
      <summary>Allows messages to be broken up into their logical units with specific abstract information for each part. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MessagePart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MessagePart" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Element">
      <summary>Gets or sets the name of the XML element that corresponds to the current <see cref="T:System.Web.Services.Description.MessagePart" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.MessagePart" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.MessagePart" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Message">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Message" /> of which the <see cref="T:System.Web.Services.Description.MessagePart" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Message" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MessagePart.Type">
      <summary>Gets or sets the XML data type of the <see cref="T:System.Web.Services.Description.MessagePart" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MessagePartCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.MessagePart" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Add(System.Web.Services.Description.MessagePart)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MessagePart" /> to the end of the <see cref="T:System.Web.Services.Description.MessagePartCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="messagePart" /> parameter has been added.</returns>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Contains(System.Web.Services.Description.MessagePart)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.MessagePart" /> is a member of the MessagePartCollection.</summary>
      <returns>true if the <paramref name="messagePart" /> parameter is a member of the <see cref="T:System.Web.Services.Description.MessagePartCollection" />; otherwise, false.</returns>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.CopyTo(System.Web.Services.Description.MessagePart[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.MessagePartCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.MessagePart" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.MessagePart" /> serving as the destination of the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.IndexOf(System.Web.Services.Description.MessagePart)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.MessagePart" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Insert(System.Int32,System.Web.Services.Description.MessagePart)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MessagePart" /> to the <see cref="T:System.Web.Services.Description.MessagePartCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="messagePart" /> parameter. </param>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.MessagePartCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.MessagePart" /> at the specified zero-based index.</summary>
      <returns>A MessagePart.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MessagePart" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.MessagePartCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.MessagePart" /> specified by its name.</summary>
      <returns>A MessagePart.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.MessagePart" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.MessagePartCollection.Remove(System.Web.Services.Description.MessagePart)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.MessagePart" /> from the <see cref="T:System.Web.Services.Description.MessagePartCollection" />.</summary>
      <param name="messagePart">The <see cref="T:System.Web.Services.Description.MessagePart" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.MimeContentBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> within an XML Web service, specifying the MIME format for the body of the HTTP transmission. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeContentBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeContentBinding" /> class. </summary>
    </member>
    <member name="F:System.Web.Services.Description.MimeContentBinding.Namespace">
      <summary>Specifies the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.MimeContentBinding" /> class. This field is constant.</summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeContentBinding.Part">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the <see cref="T:System.Web.Services.Description.MimeContentBinding" /> applies.</summary>
      <returns>A string representing the name of the <see cref="T:System.Web.Services.Description.MessagePart" /> with which the current <see cref="T:System.Web.Services.Description.MimeContentBinding" /> is associated. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeContentBinding.Type">
      <summary>Gets or sets a value indicating the format of the body of the HTTP transmission.</summary>
      <returns>A string indicating the format of the body of the HTTP transmission. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.MimeMultipartRelatedBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" />, specifying the individual MIME formats for the parts of the HTTP transmission. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeMultipartRelatedBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeMultipartRelatedBinding.Parts">
      <summary>Gets the collection of extensibility elements added to the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" /> to specify the MIME format for the parts of the MIME message.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MimePartCollection" /> representing extensibility elements added to the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MimePart">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" />, specifying the concrete MIME type for the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the MimePart applies. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimePart.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimePart" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimePart.Extensions">
      <summary>Gets the collection of MIME extensibility elements for the part of the <see cref="T:System.Web.Services.Description.MimeMultipartRelatedBinding" /> of which the <see cref="T:System.Web.Services.Description.MimePart" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MimePartCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.MimePart" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimePartCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Add(System.Web.Services.Description.MimePart)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MimePart" /> to the end of the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="mimePart" /> parameter has been added.</returns>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Contains(System.Web.Services.Description.MimePart)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.MimePart" /> is a member of the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</summary>
      <returns>true if the <paramref name="mimePart" /> parameter is a member of the MimePartCollection; otherwise, false.</returns>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to check for collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.CopyTo(System.Web.Services.Description.MimePart[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.MimePartCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.MimePart" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.MimePart" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.IndexOf(System.Web.Services.Description.MimePart)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.MimePart" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> for which to search the <see cref="T:System.Web.Services.Description.MimePartCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Insert(System.Int32,System.Web.Services.Description.MimePart)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MimePart" /> to the <see cref="T:System.Web.Services.Description.MimePartCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="mimePart" /> parameter. </param>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MimePartCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.MimePart" /> at the specified zero-based index.</summary>
      <returns>A MimePart.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MimePart" /> whose value is modified or returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimePartCollection.Remove(System.Web.Services.Description.MimePart)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.MimePart" /> from the <see cref="T:System.Web.Services.Description.MimePartCollection" />.</summary>
      <param name="mimePart">The <see cref="T:System.Web.Services.Description.MimePart" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" />, an <see cref="T:System.Web.Services.Description.OutputBinding" />, or a <see cref="T:System.Web.Services.Description.MimePart" />, specifying the text patterns for which to search the HTTP transmission. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeTextBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextBinding.Matches">
      <summary>Gets the collection of MIME text patterns for which the HTTP transmission is searched.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> representing the MIME text patterns to search for.</returns>
    </member>
    <member name="F:System.Web.Services.Description.MimeTextBinding.Namespace">
      <summary>Specifies the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.MimeTextBinding" /> class. This field is constant.</summary>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextMatch">
      <summary>Represents a text pattern for which the HTTP transmission is searched. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatch.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Capture">
      <summary>Gets or sets a value indicating the zero-based index of a <see cref="T:System.Web.Services.Description.MimeTextMatch" /> within a group.</summary>
      <returns>A 32-bit signed integer. The default value is 0, indicating that the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> is the first instance within a group.</returns>
      <exception cref="T:System.ArgumentException">The property value is negative. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Group">
      <summary>Gets or sets a value indicating the number of groups in which to place the results of the text search.</summary>
      <returns>A 32-bit signed integer. The default value is 1.</returns>
      <exception cref="T:System.ArgumentException">The property value is negative. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.IgnoreCase">
      <summary>Gets or sets a value indicating whether the search should disregard the case of the text to be searched.</summary>
      <returns>true if the search should disregard case; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Matches">
      <summary>Gets the collection of text pattern matches that have been found by the search.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> representing the members of the <see cref="P:System.Web.Services.Description.MimeTextMatch.Group" /> property.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Name">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Services.Description.MimeTextMatch" />.</summary>
      <returns>The name of the <see cref="T:System.Web.Services.Description.MimeTextMatch" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Pattern">
      <summary>Gets or sets the text pattern for the search.</summary>
      <returns>A string representing the text for which to search the HTTP transmission. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Repeats">
      <summary>Gets or sets a value indicating the number of times the search is to be performed.</summary>
      <returns>A 32-bit signed integer. The default value is 1.</returns>
      <exception cref="T:System.ArgumentException">The property value is negative. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.RepeatsString">
      <summary>Gets or sets a value indicating the number of times the search is to be performed.</summary>
      <returns>A string indicating the number of times the search is to be performed. The default value is "1".</returns>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatch.Type">
      <summary>Gets or sets a value indicating the MIME format of the text to be searched.</summary>
      <returns>A string indicating the MIME format of the text to be searched.</returns>
    </member>
    <member name="T:System.Web.Services.Description.MimeTextMatchCollection">
      <summary>Provides a collection of instances of the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Add(System.Web.Services.Description.MimeTextMatch)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to the end of the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="match" /> parameter has been added.</returns>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Contains(System.Web.Services.Description.MimeTextMatch)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> is a member of the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</summary>
      <returns>true if the <paramref name="match" /> parameter is a member of the MimeTextMatchCollection; otherwise, false.</returns>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.CopyTo(System.Web.Services.Description.MimeTextMatch[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.MimeTextMatch" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">The array of type <see cref="T:System.Web.Services.Description.MimeTextMatch" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.IndexOf(System.Web.Services.Description.MimeTextMatch)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Insert(System.Int32,System.Web.Services.Description.MimeTextMatch)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="match" /> parameter. </param>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.MimeTextMatchCollection.Item(System.Int32)">
      <summary>Gets or sets the value of the member of the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" /> at the specified zero-based index.</summary>
      <returns>A MimeTextMatch.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.MimeTextMatch" /> whose value is returned or modified. </param>
    </member>
    <member name="M:System.Web.Services.Description.MimeTextMatchCollection.Remove(System.Web.Services.Description.MimeTextMatch)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.MimeTextMatch" /> from the <see cref="T:System.Web.Services.Description.MimeTextMatchCollection" />.</summary>
      <param name="match">The <see cref="T:System.Web.Services.Description.MimeTextMatch" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.MimeXmlBinding">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.MimePart" />, an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" />. It specifies the schema for XML messages that are not SOAP compliant. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.MimeXmlBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.MimeXmlBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.MimeXmlBinding.Part">
      <summary>Gets or sets the name of the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the <see cref="T:System.Web.Services.Description.MimeXmlBinding" /> applies.</summary>
      <returns>The name of the corresponding <see cref="T:System.Web.Services.Description.MessagePart" />. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.NamedItem">
      <summary>Represents a named, item that can be documented.</summary>
    </member>
    <member name="M:System.Web.Services.Description.NamedItem.#ctor">
      <summary>When called in a derived class, initializes a new instance of the <see cref="T:System.Web.Services.Description.NamedItem" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.NamedItem.Name">
      <summary>Gets or sets the name of the item.</summary>
      <returns>A <see cref="T:System.String" /> containing the name of the item.</returns>
    </member>
    <member name="T:System.Web.Services.Description.Operation">
      <summary>Provides an abstract definition of an action supported by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Operation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Operation" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Operation" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.Operation" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Faults">
      <summary>Gets the collection of faults, or error messages, defined by the current <see cref="T:System.Web.Services.Description.Operation" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.Operation.IsBoundBy(System.Web.Services.Description.OperationBinding)">
      <summary>Returns a value that indicates whether the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> matches with the <see cref="T:System.Web.Services.Description.Operation" />.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Description.Operation" /> instance matches the <paramref name="operationBinding" /> parameter; otherwise, false.</returns>
      <param name="operationBinding">An <see cref="T:System.Web.Services.Description.OperationBinding" /> to be checked to determine whether it matches with the <see cref="T:System.Web.Services.Description.Operation" />. </param>
    </member>
    <member name="P:System.Web.Services.Description.Operation.Messages">
      <summary>Gets the collection of instances of the <see cref="T:System.Web.Services.Description.Message" /> class defined by the current <see cref="T:System.Web.Services.Description.Operation" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Operation.ParameterOrder">
      <summary>Gets or sets an array of the elements contained in the <see cref="P:System.Web.Services.Description.Operation.ParameterOrderString" />.</summary>
      <returns>An array of names of <see cref="T:System.Web.Services.Description.MessagePart" /> instances.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Operation.ParameterOrderString">
      <summary>Gets or sets an optional Remote Procedure Call (RPC) signature that orders specification for request-response or solicit-response operations.</summary>
      <returns>A list of names of the <see cref="T:System.Web.Services.Description.MessagePart" /> instances separated by a single space.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Operation.PortType">
      <summary>Gets the <see cref="T:System.Web.Services.Description.PortType" /> of which the <see cref="T:System.Web.Services.Description.Operation" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.PortType" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OperationBinding">
      <summary>Provides specifications for protocols and data formats for the messages used in the action supported by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OperationBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Binding">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Binding" /> of which the current <see cref="T:System.Web.Services.Description.OperationBinding" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Binding" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Extensions">
      <summary>Gets the collection of extensibility elements specific to the current <see cref="T:System.Web.Services.Description.OperationBinding" />.</summary>
      <returns>Returns a <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Faults">
      <summary>Gets the <see cref="T:System.Web.Services.Description.FaultBindingCollection" /> associated with the <see cref="T:System.Web.Services.Description.OperationBinding" /> instance.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.FaultBindingCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Input">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.InputBinding" /> associated with the <see cref="T:System.Web.Services.Description.OperationBinding" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.InputBinding" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.OperationBinding.Output">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.OutputBinding" /> associated with the <see cref="T:System.Web.Services.Description.OperationBinding" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OutputBinding" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OperationBindingCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.OperationBinding" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Add(System.Web.Services.Description.OperationBinding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> to the end of the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="bindingOperation" /> parameter has been added.</returns>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Contains(System.Web.Services.Description.OperationBinding)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> is a member of the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</summary>
      <returns>true if the <paramref name="bindingOperation" /> parameter is a member of the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />; otherwise, false.</returns>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.CopyTo(System.Web.Services.Description.OperationBinding[],System.Int32)">
      <summary>Copies the entire OperationBindingCollection to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.OperationBinding" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationBinding" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.IndexOf(System.Web.Services.Description.OperationBinding)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Insert(System.Int32,System.Web.Services.Description.OperationBinding)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> instance to the <see cref="T:System.Web.Services.Description.OperationBindingCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="bindingOperation" /> parameter. </param>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationBindingCollection.Item(System.Int32)">
      <summary>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationBinding" /> at the specified zero-based index.</summary>
      <returns>An OperationBinding.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationBinding" /> whose value is modified or returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationBindingCollection.Remove(System.Web.Services.Description.OperationBinding)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.OperationBinding" /> from the <see cref="T:System.Web.Services.Description.OperationBindingCollection" />.</summary>
      <param name="bindingOperation">The <see cref="T:System.Web.Services.Description.OperationBinding" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.OperationCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Operation" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Add(System.Web.Services.Description.Operation)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Operation" /> to the end of the <see cref="T:System.Web.Services.Description.OperationCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="operation" /> parameter has been added.</returns>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Contains(System.Web.Services.Description.Operation)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Operation" /> is a member of the <see cref="T:System.Web.Services.Description.OperationCollection" />.</summary>
      <returns>true if <paramref name="operation" /> is a member of the <see cref="T:System.Web.Services.Description.OperationCollection" />; otherwise, false.</returns>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.CopyTo(System.Web.Services.Description.Operation[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.OperationCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.Operation" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Operation" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.IndexOf(System.Web.Services.Description.Operation)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Operation" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Insert(System.Int32,System.Web.Services.Description.Operation)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Operation" /> to the <see cref="T:System.Web.Services.Description.OperationCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operation" /> parameter. </param>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationCollection.Item(System.Int32)">
      <summary>Gets or sets the value of an <see cref="T:System.Web.Services.Description.Operation" /> at the specified zero-based index.</summary>
      <returns>An Operation.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Operation" /> whose value is modified or returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationCollection.Remove(System.Web.Services.Description.Operation)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Operation" /> from the <see cref="T:System.Web.Services.Description.OperationCollection" />.</summary>
      <param name="operation">The <see cref="T:System.Web.Services.Description.Operation" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.OperationFault">
      <summary>Defines the specifications for error messages returned by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationFault.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OperationFault" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationFault.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationFault" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationFault" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OperationFaultCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.OperationFault" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Add(System.Web.Services.Description.OperationFault)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationFault" /> to the end of the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="operationFaultMessage" /> parameter has been added.</returns>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Contains(System.Web.Services.Description.OperationFault)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationFault" /> is a member of the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</summary>
      <returns>true if the <paramref name="operationFaultMessage" /> parameter is a member of the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />; otherwise, false.</returns>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.CopyTo(System.Web.Services.Description.OperationFault[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.OperationFaultCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.OperationFault" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationFault" /> serving as the destination of the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.IndexOf(System.Web.Services.Description.OperationFault)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.OperationFault" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Insert(System.Int32,System.Web.Services.Description.OperationFault)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationFault" /> to the <see cref="T:System.Web.Services.Description.OperationFaultCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operationFaultMessage" /> parameter. </param>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationFaultCollection.Item(System.Int32)">
      <summary>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationFault" /> at the specified zero-based index.</summary>
      <returns>An OperationFault.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationFault" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationFaultCollection.Item(System.String)">
      <summary>Gets an <see cref="T:System.Web.Services.Description.OperationFault" /> by its name.</summary>
      <returns>An OperationFault.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.OperationFault" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationFaultCollection.Remove(System.Web.Services.Description.OperationFault)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.OperationFault" /> from the <see cref="T:System.Web.Services.Description.OperationFaultCollection" />.</summary>
      <param name="operationFaultMessage">The <see cref="T:System.Web.Services.Description.OperationFault" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.OperationFlow">
      <summary>Specifies the type of transmission an endpoint of the XML Web service can support.</summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.None">
      <summary>Indicates that the endpoint of the XML Web service receives no transmissions.</summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.OneWay">
      <summary>Indicates that the endpoint of the XML Web service receives a message.</summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.Notification">
      <summary>Indicates that the endpoint of the XML Web service sends a message.</summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.RequestResponse">
      <summary>Indicates that the endpoint of the XML Web service receives a message, then sends a correlated message.</summary>
    </member>
    <member name="F:System.Web.Services.Description.OperationFlow.SolicitResponse">
      <summary>Indicates that the endpoint of the XML Web service sends a message, then receives a correlated message.</summary>
    </member>
    <member name="T:System.Web.Services.Description.OperationInput">
      <summary>Defines the specifications for input messages received by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationInput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OperationInput" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationInput.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationInput" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationInput" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OperationMessage">
      <summary>Represents a message type passed by the action of an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OperationMessage" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessage.Message">
      <summary>Gets or sets an abstract, typed definition of the data being communicated.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessage.Operation">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Operation" /> of which the <see cref="T:System.Web.Services.Description.OperationMessage" /> is a member.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.Operation" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OperationMessageCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Services.Description.OperationInput" /> and <see cref="T:System.Web.Services.Description.OperationOutput" /> messages related to an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Add(System.Web.Services.Description.OperationMessage)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> to the end of the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="operationMessage" /> parameter has been added.</returns>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Contains(System.Web.Services.Description.OperationMessage)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> is a member of the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</summary>
      <returns>true if the <paramref name="operationMessage" /> parameter is a member of the OperationMessageCollection; otherwise, false.</returns>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.CopyTo(System.Web.Services.Description.OperationMessage[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.OperationMessageCollection" /> to a compatible one-dimensional array of type <see cref="T:System.Web.Services.Description.OperationMessage" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.OperationMessage" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Flow">
      <summary>Gets the type of transmission supported by the OperationMessageCollection.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.OperationFlow" /> values. The default is SolicitResponse.</returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.IndexOf(System.Web.Services.Description.OperationMessage)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> for which to search in the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Input">
      <summary>Gets the first occurrence of an <see cref="T:System.Web.Services.Description.OperationInput" /> within the collection.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationInput" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Insert(System.Int32,System.Web.Services.Description.OperationMessage)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> to the <see cref="T:System.Web.Services.Description.OperationMessageCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="operationMessage" /> parameter. </param>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to add to the collection. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Item(System.Int32)">
      <summary>Gets or sets the value of an <see cref="T:System.Web.Services.Description.OperationMessage" /> at the specified zero-based index.</summary>
      <returns>An OperationMessage.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.OperationMessage" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.OperationMessageCollection.Output">
      <summary>Gets the first occurrence of an <see cref="T:System.Web.Services.Description.OperationOutput" /> within the collection.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationOutput" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.OperationMessageCollection.Remove(System.Web.Services.Description.OperationMessage)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.OperationMessage" /> from the <see cref="T:System.Web.Services.Description.OperationMessageCollection" />.</summary>
      <param name="operationMessage">The <see cref="T:System.Web.Services.Description.OperationMessage" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.OperationOutput">
      <summary>Defines the specifications for output messages returned by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OperationOutput.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OperationOutput" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OperationOutput.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationOutput" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.OperationOutput" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.OutputBinding">
      <summary>Provides a set of specifications for data formats and protocols used by the XML Web service for output messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.OutputBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.OutputBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.OutputBinding.Extensions">
      <summary>Gets the collection of extensibility elements associated with the current OutputBinding.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.Port">
      <summary>Defines an individual endpoint contained in the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Port.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Port" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Port.Binding">
      <summary>Gets or sets the value of the XML &lt;binding&gt; attribute of the <see cref="T:System.Web.Services.Description.Port" />.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Port.Extensions">
      <summary>Gets the collection of extensibility elements associated with the Port.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Port.Service">
      <summary>Gets the <see cref="T:System.Web.Services.Description.Service" /> of which the <see cref="T:System.Web.Services.Description.Port" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Service" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.PortCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Port" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Add(System.Web.Services.Description.Port)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Port" /> to the end of the <see cref="T:System.Web.Services.Description.PortCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="port" /> parameter has been added.</returns>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Contains(System.Web.Services.Description.Port)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Port" /> is a member of the <see cref="T:System.Web.Services.Description.PortCollection" />.</summary>
      <returns>true if the specified <see cref="T:System.Web.Services.Description.Port" /> is a member of the <see cref="T:System.Web.Services.Description.PortCollection" />; otherwise, false.</returns>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.CopyTo(System.Web.Services.Description.Port[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.PortCollection" /> to a one-dimensional array of type <see cref="T:System.Web.Services.Description.Port" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Port" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.IndexOf(System.Web.Services.Description.Port)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Port" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Insert(System.Int32,System.Web.Services.Description.Port)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Port" /> instance to the PortCollection at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="port" /> parameter. </param>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.PortCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Port" /> at the specified zero-based index.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Port" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Port" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.PortCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.Port" /> specified by its name.</summary>
      <returns>A Port.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Port" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortCollection.Remove(System.Web.Services.Description.Port)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Port" /> from the <see cref="T:System.Web.Services.Description.PortCollection" />.</summary>
      <param name="port">The <see cref="T:System.Web.Services.Description.Port" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.PortType">
      <summary>Represents a named set of abstract operations and the corresponding abstract messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.PortType.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.PortType" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.PortType.Extensions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.PortType" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> associated with this <see cref="T:System.Web.Services.Description.PortType" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.PortType.Operations">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Operation" /> instances defined by the <see cref="T:System.Web.Services.Description.PortType" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.OperationCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.PortType.ServiceDescription">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the <see cref="T:System.Web.Services.Description.PortType" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.PortTypeCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.PortType" /> class; that is, a collection of sets of operations supported by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Add(System.Web.Services.Description.PortType)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.PortType" /> to the end of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="portType" /> parameter has been added.</returns>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Contains(System.Web.Services.Description.PortType)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.PortType" /> is a member of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</summary>
      <returns>true if the <paramref name="portType" /> parameter is a member of the <see cref="T:System.Web.Services.Description.PortTypeCollection" />; otherwise, false.</returns>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> for which to check for collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.CopyTo(System.Web.Services.Description.PortType[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.PortTypeCollection" /> to a one-dimensional array of type <see cref="T:System.Web.Services.Description.PortType" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.PortType" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.IndexOf(System.Web.Services.Description.PortType)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.PortType" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Insert(System.Int32,System.Web.Services.Description.PortType)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.PortType" /> to the <see cref="T:System.Web.Services.Description.PortTypeCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="portType" /> parameter. </param>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.PortTypeCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.PortType" /> at the specified zero-based index.</summary>
      <returns>A PortType.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.PortType" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.PortTypeCollection.Item(System.String)">
      <summary>Gets the <see cref="T:System.Web.Services.Description.PortType" /> specified by its name.</summary>
      <returns>The name of the <paramref name="value" /> parameter.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.PortType" /> returned. </param>
      <exception cref="T:System.InvalidCastException">The <paramref name="value" /> parameter cannot be explicitly cast to type <see cref="T:System.Web.Services.Description.PortType" />. </exception>
    </member>
    <member name="M:System.Web.Services.Description.PortTypeCollection.Remove(System.Web.Services.Description.PortType)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.PortType" /> from the <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</summary>
      <param name="portType">The <see cref="T:System.Web.Services.Description.PortType" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.ProtocolImporter">
      <summary>Provides common functionality across communication protocols for generating classes for Web services. </summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ProtocolImporter" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.AbstractSchemas">
      <summary>Gets the abstract XML schemas used by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.AddExtensionWarningComments(System.CodeDom.CodeCommentStatementCollection,System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection)">
      <summary>For each unhandled extension or XML element in the input extensions collection, turns on a <see cref="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.RequiredExtensionsIgnored" /> or <see cref="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.OptionalExtensionsIgnored" /> warning for each unhandled extension or XML element in the input extensions collection. </summary>
      <param name="comments">A <see cref="T:System.CodeDom.CodeCommentStatementCollection" /> that specifies the collection of code comments to which each warning message is added.</param>
      <param name="extensions">A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> that specifies the extensions or XML elements for which warnings should be generated if they are not handled.</param>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.BeginClass">
      <summary>When overridden in a derived class, initializes the generation of a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.BeginNamespace">
      <summary>When overridden in a derived class, performs namespace-wide initialization during code generation.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Binding">
      <summary>Gets the Web Services Description Language (WSDL) binding that the protocol importer is currently processing to generate a class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.ClassName">
      <summary>Gets the name of the binding class that is currently being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.ClassNames">
      <summary>Gets the <see cref="T:System.Xml.Serialization.CodeIdentifiers" /> object that generates a unique name for the binding class that is currently being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.CodeNamespace">
      <summary>Gets a representation of the .NET Framework namespace of the binding classes that are being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.CodeTypeDeclaration">
      <summary>Gets a representation of the binding class that is currently being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.ConcreteSchemas">
      <summary>Gets the concrete XML schemas used by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.EndClass">
      <summary>When overridden in a derived class, processes a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.EndNamespace">
      <summary>When overridden in a derived class, performs processing for an entire namespace.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.GenerateMethod">
      <summary>When overridden in a derived class, generates method code for binding classes.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.InputMessage">
      <summary>Gets the Web Services Description Language (WSDL) input message for the abstract operation that the protocol importer is currently processing to generate a method in a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.IsBindingSupported">
      <summary>When overridden in a derived class, determines whether a class can be generated for the current binding.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.IsOperationFlowSupported(System.Web.Services.Description.OperationFlow)">
      <summary>When overridden in a derived class, determines whether the current operation's operation flow is supported.</summary>
      <param name="flow"></param>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.MethodName">
      <summary>Gets the name of the binding class method which that the protocol importer is currently generating.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Operation">
      <summary>Gets the abstract Web Services Description Language (WSDL) operation that the protocol importer is currently processing to generate a method in a binding class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.OperationBinding">
      <summary>Gets the Web Services Description Language (WSDL) operation binding that the protocol importer is currently processing to generate a method in a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.OperationBindingSyntaxException(System.String)">
      <summary>Produces an Exception indicating that the current <see cref="P:System.Web.Services.Description.ProtocolImporter.OperationBinding" /> instance for which a binding class is being generated is invalid within the target namespace.</summary>
      <param name="text"></param>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.OperationSyntaxException(System.String)">
      <summary>Produces an Exception indicating that the current <see cref="P:System.Web.Services.Description.ProtocolImporter.Operation" /> instance for which a binding class is being generated is invalid within the target namespace.</summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.OutputMessage">
      <summary>Gets the Web Services Description Language (WSDL) output message for the abstract operation that the protocol importer is currently processing to generate a method in a binding class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Port">
      <summary>Gets a Web Services Description Language (WSDL) port that contains a reference to the binding that the protocol importer is currently processing to generate a binding class. If more than one port refers to the current binding, the current port is the one in which the binding has most recently been found.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.PortType">
      <summary>Gets the Web Services Description Language (WSDL) <see cref="P:System.Web.Services.Description.ProtocolImporter.PortType" /> that is implemented by the binding that the protocol importer is currently processing to generate a binding class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.ProtocolName">
      <summary>Abstract property that concrete derived classes must implement to get the name of the protocol being used.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Schemas">
      <summary>Gets all the XML schemas, both abstract and concrete, used by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Service">
      <summary>Gets the Web Services Description Language (WSDL) service that contains a reference to the binding that the protocol importer is currently processing to generate a binding class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.ServiceDescriptions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> objects that belong to the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance that are searched for bindings from which to generate binding classes.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Style">
      <summary>Gets an enumeration value that indicates whether a client proxy class or an abstract server class is being generated. The values are Client and Server. The value is that of the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance's <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" /> property.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.UnsupportedBindingWarning(System.String)">
      <summary>Turns on an <see cref="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedBindingsIgnored" /> warning in the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> enumeration obtained through the <see cref="P:System.Web.Services.Description.ProtocolImporter.Warnings" /> property. This method also adds a warning message to the comments for the class that is being generated.</summary>
      <param name="text"></param>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.UnsupportedOperationBindingWarning(System.String)">
      <summary>Turns on an <see cref="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedOperationsIgnored" /> warning in the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> enumeration obtained through the <see cref="P:System.Web.Services.Description.ProtocolImporter.Warnings" /> property. This method also adds a warning message to the comments for the class that is being generated.</summary>
      <param name="text"></param>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolImporter.UnsupportedOperationWarning(System.String)">
      <summary>Turns on an <see cref="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedOperationsIgnored" /> warning in the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> enumeration obtained through the <see cref="P:System.Web.Services.Description.ProtocolImporter.Warnings" /> property. This method also adds a warning message to the comments for the class that is being generated.</summary>
      <param name="text"></param>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolImporter.Warnings">
      <summary>Gets or sets a <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> enumeration value that indicates the types of warnings, if any, issued by the protocol importer while generating binding classes.</summary>
    </member>
    <member name="T:System.Web.Services.Description.ProtocolReflector">
      <summary>Provides common functionality across communication protocols for creating <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects from classes that are identified as Web services.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ProtocolReflector" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.BeginClass">
      <summary>When overridden in a derived class, performs processing before <see cref="T:System.Web.Services.Description.ProtocolReflector" /> calls the <see cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" /> method for each of the methods for a binding.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Binding">
      <summary>Gets the Web Services Description Language (WSDL) binding currently being generated and added to the associated <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.DefaultNamespace">
      <summary>Gets the default namespace, as identified by the associated <see cref="T:System.Web.Services.Description.ServiceDescription" /> object's <see cref="F:System.Web.Services.Description.ServiceDescription.Namespace" /> property.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.EndClass">
      <summary>When overridden in a derived class, performs processing after <see cref="ProtocolReflector" /> has called the <see cref="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod" /> method for each of the methods for a binding.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.GetServiceDescription(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object for a given XML namespace and the applicable communication protocol.</summary>
      <param name="ns">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance obtained subsequently gets populated with objects that correspond to Web Services Description Language (WSDL) entities that are reflected from the input Web service class.</param>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.HeaderMessages">
      <summary>Gets SOAP header message definitions to be added to the associated <see cref="T:System.Web.Services.Description.ServiceDescription" /> object.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.InputMessage">
      <summary>Gets the Web Services Description Language (WSDL) input message for the abstract operation that the protocol reflector is currently generating from a Web service method.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Method">
      <summary>Gets the Web service method that the protocol reflector is currently processing to generate a Web Services Description Language (WSDL) operation to be placed in the generated <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.MethodAttribute">
      <summary>Gets the <see cref="T:System.Web.Services.WebMethodAttribute" /> for the method that the protocol reflector is currently processing to generate a Web Services Description Language (WSDL) operation to be placed in the generated <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Methods">
      <summary>Gets the Web service methods belonging to the Web service class, as identified by the associated <see cref="T:System.Web.Services.Description.ProtocolReflector" /> object's <see cref="P:System.Web.Services.Description.ProtocolReflector.Methods" /> property.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Operation">
      <summary>Gets the abstract Web Services Description Language (WSDL) operation that the protocol reflector is currently generating from a Web service method.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.OperationBinding">
      <summary>Gets the Web Services Description Language (WSDL) operation binding that the protocol importer is currently generating from a Web service method.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.OutputMessage">
      <summary>Gets the Web Services Description Language (WSDL) output message for the abstract operation that the protocol reflector is currently generating from a Web service method.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Port">
      <summary>Gets the Web Services Description Language (WSDL) port that the protocol reflector is currently generating to contain a reference to the binding being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.PortType">
      <summary>Gets the Web Services Description Language (WSDL) portType that the protocol reflector is currently generating to be implemented by the binding being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ProtocolName">
      <summary>When overridden in a derived class, gets the name of the protocol being used.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.ReflectDescription">
      <summary>When overridden in a derived class, generates service-specific description information that gets placed in a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object that corresponds to a binding.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ReflectionImporter">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlReflectionImporter" /> instance being used by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> instance.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.ReflectMethod">
      <summary>When overridden in a derived class, generates method-specific information that gets placed in a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object corresponding to a binding.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ProtocolReflector.ReflectMethodBinding">
      <summary>When overridden in a derived class, returns the name of the binding that a method belongs to.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.SchemaExporter">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSchemaExporter" /> instance being used by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> instance.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Schemas">
      <summary>Gets the XML schemas being generated by the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> instance.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.Service">
      <summary>Gets the Web Services Description Language (WSDL) service that the protocol reflector is currently generating to contain a reference to the binding being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ServiceDescription">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> object currently being created to contain the binding being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ServiceDescriptions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects that have so far been created and added to the corresponding to the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> obtained through the <see cref="P:System.Web.Services.Description.ServiceDescriptionReflector.ServiceDescriptions" /> property of the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> instance. </summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ServiceType">
      <summary>Gets the type of the Web service class being reflected to produce <see cref="T:System.Web.Services.Description.ServiceDescription" /> objects.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ProtocolReflector.ServiceUrl">
      <summary>Gets the endpoint of the associated Web service as a Uniform Resource Locator (URL), obtained from the associated <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> object.</summary>
    </member>
    <member name="T:System.Web.Services.Description.Service">
      <summary>Groups together a set of related instances of the <see cref="T:System.Web.Services.Description.Port" /> class that are associated with an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Service.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Service" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Service.Extensions">
      <summary>Gets the collection of extensibility elements associated with the <see cref="T:System.Web.Services.Description.Service" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Service.Ports">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Port" /> instances contained in the <see cref="T:System.Web.Services.Description.Service" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.PortCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Service.ServiceDescription">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescription" /> of which the <see cref="T:System.Web.Services.Description.Service" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.ServiceCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.Service" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Add(System.Web.Services.Description.Service)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Service" /> to the end of the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="service" /> parameter has been added.</returns>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> instance to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Contains(System.Web.Services.Description.Service)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.Service" /> instance is a member of the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</summary>
      <returns>true if the <paramref name="service" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ServiceCollection" />; otherwise, false.</returns>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.CopyTo(System.Web.Services.Description.Service[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.ServiceCollection" /> to a one-dimensional array of type <see cref="T:System.Web.Services.Description.Service" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.Service" /> serving as the destination for the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.IndexOf(System.Web.Services.Description.Service)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.Service" /> and returns the zero-based index of the first occurrence within the ServiceCollection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Insert(System.Int32,System.Web.Services.Description.Service)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.Service" /> instance to the <see cref="T:System.Web.Services.Description.ServiceCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="service" /> parameter. </param>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.ServiceCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.Service" /> at the specified zero-based index.</summary>
      <returns>A Service.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.Service" /> to be modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.Service" /> specified by its name.</summary>
      <returns>A Service.</returns>
      <param name="name">The name of the <see cref="T:System.Web.Services.Description.Service" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceCollection.Remove(System.Web.Services.Description.Service)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.Service" /> from the <see cref="T:System.Web.Services.Description.ServiceCollection" />.</summary>
      <param name="service">The <see cref="T:System.Web.Services.Description.Service" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescription">
      <summary>Provides a means of creating and formatting a valid Web Services Description Language (WSDL) document file, complete with appropriate namespaces, elements, and attributes, for describing an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Bindings">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Binding" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.BindingCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.CanRead(System.Xml.XmlReader)">
      <summary>Gets a value that indicates whether an <see cref="T:System.Xml.XmlReader" /> represents a valid Web Services Description Language (WSDL) file that can be parsed.</summary>
      <returns>true if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> can recognize the node on which the <see cref="T:System.Xml.XmlReader" /> is positioned; otherwise false.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" /></param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Extensions">
      <summary>Gets the collection of extensibility elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Imports">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Import" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>An <see cref="T:System.Web.Services.Description.ImportCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Messages">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Message" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.MessageCollection" />.</returns>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescription.Namespace">
      <summary>The XML namespace in which the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class is defined ("http://schemas.xmlsoap.org/wsdl/"). This field is constant.</summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.PortTypes">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.PortType" /> elements contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.PortTypeCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.Stream)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.Stream" /> instance.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" />, passed by reference, which contains the bytes to be read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.Stream,System.Boolean)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.Stream" /> instance.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" />, passed by reference, which contains the bytes to be read. </param>
      <param name="validate">A <see cref="T:System.Boolean" /> that indicates whether the XML should be validated against the schema specified by <see cref="P:System.Web.Services.Description.ServiceDescription.Schema" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.TextReader)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.TextReader" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> instance, passed by reference, which contains the text to be read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.TextReader,System.Boolean)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from a <see cref="T:System.IO.TextReader" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="textReader">A <see cref="T:System.IO.TextReader" /> instance, passed by reference, which contains the text to be read. </param>
      <param name="validate">A <see cref="T:System.Boolean" /> that indicates whether the XML should be validated against the schema specified by <see cref="P:System.Web.Services.Description.ServiceDescription.Schema" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.String)">
      <summary>Initializes an instance of a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object by directly loading the XML from the specified file.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="fileName">The path to the file to be read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.String,System.Boolean)">
      <summary>Initializes an instance of a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object by directly loading the XML from the specified file.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="fileName">The path to the file to be read. </param>
      <param name="validate">A <see cref="T:System.Boolean" /> that indicates whether the XML should be validated against the schema specified by <see cref="P:System.Web.Services.Description.ServiceDescription.Schema" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.Xml.XmlReader)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Returns a <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" />, passed by reference, which contains the XML data to be read. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Read(System.Xml.XmlReader,System.Boolean)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class by directly loading the XML from an <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>Returns a <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="reader">An <see cref="T:System.Xml.XmlReader" />, passed by reference, which contains the XML data to be read. </param>
      <param name="validate">A <see cref="T:System.Boolean" /> that indicates whether the XML should be validated against the schema specified by <see cref="P:System.Web.Services.Description.ServiceDescription.Schema" />.</param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.RetrievalUrl">
      <summary>Gets or sets the URL of the XML Web service to which the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance applies.</summary>
      <returns>The URL of the XML Web service. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Schema">
      <summary>Gets the schema associated with this <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>The schema associated with this <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Serializer">
      <summary>Gets the XML serializer used to serialize and deserialize between a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object and a Web Services Description Language (WSDL) document.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.ServiceDescriptions">
      <summary>Gets the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> instance of which the <see cref="T:System.Web.Services.Description.ServiceDescription" /> is a member.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />.</returns>
      <exception cref="T:System.NullReferenceException">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> has not been assigned to a parent collection. </exception>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Services">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.Service" /> instances contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.TargetNamespace">
      <summary>Gets or sets the XML targetNamespace attribute of the descriptions tag enclosing a Web Services Description Language (WSDL) file.</summary>
      <returns>The URL of the XML Web service described by the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.Types">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.Types" /> contained by the <see cref="T:System.Web.Services.Description.ServiceDescription" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Types" /> instance that represents the data types of both the parameters and return values of the methods exposed by the XML Web service.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescription.ValidationWarnings">
      <summary>Gets a <see cref="T:System.Collections.Specialized.StringCollection" /> that contains any validation warnings that were generated during a call to <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.Stream,System.Boolean)" />, <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.TextReader,System.Boolean)" />, <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.String,System.Boolean)" />, or <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.Xml.XmlReader,System.Boolean)" /> with the <paramref name="validate" /> parameter set to true.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that contains any validation warnings that were generated during a call to <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.Stream,System.Boolean)" />, <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.IO.TextReader,System.Boolean)" />, <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.String,System.Boolean)" />, or <see cref="M:System.Web.Services.Description.ServiceDescription.Read(System.Xml.XmlReader,System.Boolean)" /> with the <paramref name="validate" /> parameter set to true.</returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.IO.Stream)">
      <summary>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the specified <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" />, passed by reference, which contains the Web Services Description Language (WSDL) file produced. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.IO.TextWriter)">
      <summary>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> as a Web Services Description Language (WSDL) file to the <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> that contains the WSDL file produced. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.String)">
      <summary>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> as a Web Services Description Language (WSDL) file to the specified path.</summary>
      <param name="fileName">The path to which the WSDL file is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescription.Write(System.Xml.XmlWriter)">
      <summary>Writes out the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the <see cref="T:System.Xml.XmlWriter" /> as a Web Services Description Language (WSDL) file.</summary>
      <param name="writer">An <see cref="T:System.Xml.XmlWriter" />, passed by reference, which contains the WSDL file produced. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionBaseCollection">
      <summary>Forms the basis for the strongly typed collections that are members of the <see cref="N:System.Web.Services.Description" /> namespace.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.GetKey(System.Object)">
      <summary>Returns the name of the key associated with the value passed by reference.</summary>
      <returns>A null reference.</returns>
      <param name="value">An object for which to return the name of the key. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnClear">
      <summary>Clears the contents of the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" /> instance.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="value" /> parameter. </param>
      <param name="value">The element to insert into the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnRemove(System.Int32,System.Object)">
      <summary>Removes an element from the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</summary>
      <param name="index">The zero-based index of the <paramref name="value" /> parameter to be removed. </param>
      <param name="value">The element to remove from the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.OnSet(System.Int32,System.Object,System.Object)">
      <summary>Replaces one value with another within the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</summary>
      <param name="index">The zero-based index where the <paramref name="oldValue" /> parameter can be found. </param>
      <param name="oldValue">The object to replace with the <paramref name="newValue" /> parameter. </param>
      <param name="newValue">The object that replaces the <paramref name="oldValue" /> parameter. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionBaseCollection.SetParent(System.Object,System.Object)">
      <summary>Sets the parent object of the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" /> instance.</summary>
      <param name="value">The object for which to set the parent object. </param>
      <param name="parent">The object to set as the parent. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionBaseCollection.Table">
      <summary>Gets an interface that implements the association of the keys and values in the <see cref="T:System.Web.Services.Description.ServiceDescriptionBaseCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionCollection">
      <summary>Represents a collection of instances of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> class. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Add(System.Web.Services.Description.ServiceDescription)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the end of the ServiceDescriptionCollection.</summary>
      <returns>The zero-based index where the <paramref name="serviceDescription" /> parameter has been added.</returns>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to add to the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Contains(System.Web.Services.Description.ServiceDescription)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> is a member of the collection.</summary>
      <returns>true if the <paramref name="serviceDescription" /> parameter is a member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />; otherwise false.</returns>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.CopyTo(System.Web.Services.Description.ServiceDescription[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> to a one-dimensional array of type <see cref="T:System.Web.Services.Description.ServiceDescription" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.ServiceDescription" /> serving as the destination of the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetBinding(System.Xml.XmlQualifiedName)">
      <summary>Searches the ServiceDescriptionCollection and returns the <see cref="T:System.Web.Services.Description.Binding" /> with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the collection.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Binding" />.</returns>
      <param name="name">An <see cref="T:System.Xml.XmlQualifiedName" /> whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is used to retrieve a <see cref="T:System.Web.Services.Description.Binding" /> instance. </param>
      <exception cref="T:System.Exception">The specified Binding is not a member of any <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances within the collection. </exception>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetMessage(System.Xml.XmlQualifiedName)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and returns the <see cref="T:System.Web.Services.Description.Message" /> with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the collection.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Message" />.</returns>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.Message" /> returned. </param>
      <exception cref="T:System.Exception">The specified Message is not a member of any <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances within the collection. </exception>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetPortType(System.Xml.XmlQualifiedName)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and returns the <see cref="T:System.Web.Services.Description.PortType" /> with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the collection.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.PortType" />.</returns>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.PortType" /> returned. </param>
      <exception cref="T:System.Exception">The specified PortType is not a member of any <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances within the collection. </exception>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.GetService(System.Xml.XmlQualifiedName)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> and returns the <see cref="T:System.Web.Services.Description.Service" /> with the specified name that is a member of one of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances contained in the collection.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.Service" />.</returns>
      <param name="name">The <see cref="T:System.Xml.XmlQualifiedName" />, passed by reference, whose <see cref="P:System.Xml.XmlQualifiedName.Name" /> property is shared by the <see cref="T:System.Web.Services.Description.Service" /> returned. </param>
      <exception cref="T:System.Exception">The specified Service is not a member of any <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances within the collection. </exception>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.IndexOf(System.Web.Services.Description.ServiceDescription)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> and returns the zero-based index of the first occurrence within the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Insert(System.Int32,System.Web.Services.Description.ServiceDescription)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance to the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="serviceDescription" /> parameter. </param>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a <see cref="T:System.Web.Services.Description.ServiceDescription" /> at the specified zero-based index.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> whose value is modified or returned. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionCollection.Item(System.String)">
      <summary>Gets a <see cref="T:System.Web.Services.Description.ServiceDescription" /> specified by its <see cref="P:System.Web.Services.Description.ServiceDescription.TargetNamespace" /> property.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" />.</returns>
      <param name="ns">The namespace of the <see cref="T:System.Web.Services.Description.ServiceDescription" /> returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionCollection.Remove(System.Web.Services.Description.ServiceDescription)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> from the collection.</summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to remove from the collection. </param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionFormatExtension">
      <summary>Represents an extensibility element added to an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Handled">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is used by the import process when the extensibility element is imported.</summary>
      <returns>True if the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is used by the import process; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Parent">
      <summary>Gets the parent of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />.</summary>
      <returns>An <see cref="T:System.Object" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtension.Required">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is necessary for the action to which it refers.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is required; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection">
      <summary>Represents the collection of extensibility elements used by the XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> class.</summary>
      <param name="parent">The object of which this collection is a member. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Add(System.Object)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to the end of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</summary>
      <returns>The zero-based index where the <paramref name="extension" /> parameter has been added.</returns>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />, passed by reference, to add to the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Contains(System.Object)">
      <summary>Returns a value indicating whether the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> is a member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</summary>
      <returns>true if the <paramref name="extension" /> parameter is a member of the collection; otherwise, false.</returns>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for which to check collection membership. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.CopyTo(System.Object[],System.Int32)">
      <summary>Copies the entire <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> into a one-dimensional array of type <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />, starting at the specified zero-based index of the target array.</summary>
      <param name="array">An array of type <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> serving as the destination of the copy action. </param>
      <param name="index">The zero-based index at which to start placing the copied collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Find(System.String,System.String)">
      <summary>This method searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> for a member with the specified name and namespace URI.</summary>
      <returns>If the search is successful, an <see cref="T:System.Xml.XmlElement" />; otherwise null.</returns>
      <param name="name">The name of the <see cref="T:System.Xml.XmlElement" /> to be found. </param>
      <param name="ns">The XML namespace URI of the <see cref="T:System.Xml.XmlElement" /> to be found. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Find(System.Type)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and returns the first element of the specified derived <see cref="T:System.Type" />.</summary>
      <returns>If the search is successful, an object of the specified <see cref="T:System.Type" />; otherwise null.</returns>
      <param name="type">A <see cref="T:System.Type" /> for which to search the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.FindAll(System.String,System.String)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and returns an array of all members with the specified name and namespace URI.</summary>
      <returns>An array of <see cref="T:System.Xml.XmlElement" /> instances.</returns>
      <param name="name">The XML name attribute of the <see cref="T:System.Xml.XmlElement" /> objects to be found. </param>
      <param name="ns">The XML namespace URI attribute of the <see cref="T:System.Xml.XmlElement" /> objects to be found. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.FindAll(System.Type)">
      <summary>Searches the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> and returns an array of all elements of the specified <see cref="T:System.Type" />.</summary>
      <returns>An array of <see cref="T:System.Object" /> instances representing all collection members of the specified type.</returns>
      <param name="type">A <see cref="T:System.Type" /> for which to search the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IndexOf(System.Object)">
      <summary>Searches for the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> and returns the zero-based index of the first instance with the collection.</summary>
      <returns>A 32-bit signed integer.</returns>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for which to search in the collection. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Insert(System.Int32,System.Object)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" /> at the specified zero-based index.</summary>
      <param name="index">The zero-based index at which to insert the <paramref name="extension" /> parameter. </param>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to add to the collection. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than zero.- or - The <paramref name="index" /> parameter is greater than <see cref="P:System.Collections.CollectionBase.Count" />. </exception>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IsHandled(System.Object)">
      <summary>Returns a value indicating whether the specified object is used by the import process when the extensibility element is imported into the XML Web service.</summary>
      <returns>true if the <paramref name="item" /> parameter is used; otherwise false.</returns>
      <param name="item">An object, either of type <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to check for use by the import process. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.IsRequired(System.Object)">
      <summary>Returns a value indicating whether the specified object is necessary for the operation of the XML Web service.</summary>
      <returns>true if the <paramref name="item" /> parameter is required; otherwise false.</returns>
      <param name="item">An object, either of type <see cref="T:System.Xml.XmlElement" /> or <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />, to check whether it is necessary. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Item(System.Int32)">
      <summary>Gets or sets the value of a member of the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" />.</returns>
      <param name="index">The zero-based index of the member whose value is modified or returned. </param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection.Remove(System.Object)">
      <summary>Removes the first occurrence of the specified <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> from the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</summary>
      <param name="extension">The <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> to remove from the <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />. </param>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImporter">
      <summary>Exposes a means of generating client proxy classes for XML Web services.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.AddServiceDescription(System.Web.Services.Description.ServiceDescription,System.String,System.String)">
      <summary>Adds the specified <see cref="T:System.Web.Services.Description.ServiceDescription" /> to the collection of <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> values to be imported.</summary>
      <param name="serviceDescription">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> instance to add to the collection </param>
      <param name="appSettingUrlKey">Sets the initial value of the Url property of the proxy class to be generated from the instance represented by the <paramref name="serviceDescription" /> parameter. Specifies that it should be generated from the web.config file's &lt;appsetting&gt; section. </param>
      <param name="appSettingBaseUrl">Sets the initial value of the Url property of the proxy class to be generated from the instance represented by the <paramref name="serviceDescription" /> parameter. Specifies that it should be constructed from a combination of the value of this parameter and the URL specified by the location attribute in the WSDL document. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerationOptions">
      <summary>Gets or sets various options for code generation.</summary>
      <returns>A member or combination of members of the <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> enumeration.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.CodeGenerator">
      <summary>Gets or sets the code generator used by the service description importer.</summary>
      <returns>The <see cref="T:System.CodeDom.Compiler.ICodeGenerator" /> interface used by the service description importer to generate proxy code.</returns>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.GenerateWebReferences(System.Web.Services.Description.WebReferenceCollection,System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.CodeCompileUnit,System.Web.Services.Description.WebReferenceOptions)">
      <summary>Compiles a collection of Web references to produce a client proxy or a server stub.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of compiler warnings.</returns>
      <param name="webReferences">A <see cref="T:System.Web.Services.Description.WebReferenceCollection" /> of Web references to compile.</param>
      <param name="codeProvider">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that specifies the code provider.</param>
      <param name="codeCompileUnit">A <see cref="T:System.CodeDom.CodeCompileUnit" /> that specifies the unit into which code is compiled.</param>
      <param name="options">A <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> that specifies code generation options.</param>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)">
      <summary>Imports the specified <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> values, that generates code as specified by the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.Style" /> property.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> value that describes any error that occurred; or 0 if no error occurred.</returns>
      <param name="codeNamespace">The namespace into which the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> values are imported. </param>
      <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit" /> instance in which the code that represents the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> value is generated. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.ProtocolName">
      <summary>Gets or sets the protocol used to access the described XML Web services.</summary>
      <returns>A <see cref="T:System.String" /> that contains the case-insensitive name of the protocol to be imported.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.Schemas">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSchemas" /> used by the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> property.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSchemas" /> object that contains the XML schemas used by the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances in the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> collection.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances to be imported.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> instance that contains the <see cref="T:System.Web.Services.Description.ServiceDescription" /> instances slated to be imported by the <see cref="T:System.Web.Services.Description.ServiceDescriptionImporter" /> instance.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionImporter.Style">
      <summary>Gets or sets a value that determines the style of code (client or server) that is generated when the <see cref="P:System.Web.Services.Description.ServiceDescriptionImporter.ServiceDescriptions" /> values are imported.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" /> values. The default is <see cref="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Client" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImportStyle">
      <summary>Specifies whether the import is made to the server or to the client computer.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Client">
      <summary>Specifies that the import should be made to the client computer.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportStyle.Server">
      <summary>Specifies that the import should be made to the server.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportStyle.ServerInterface">
      <summary>Specifies that the import should be made to a server interface.</summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionImportWarnings">
      <summary>Specifies the type of warnings produced by <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" />.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.NoCodeGenerated">
      <summary>Specifies that no proxy class was generated by the <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" /> method.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.OptionalExtensionsIgnored">
      <summary>Specifies that at least one optional <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported has been ignored.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.RequiredExtensionsIgnored">
      <summary>Specifies that at least one required <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported has been ignored.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedOperationsIgnored">
      <summary>Specifies that at least one <see cref="T:System.Web.Services.Description.Operation" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported is of an unsupported type and has been ignored.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.UnsupportedBindingsIgnored">
      <summary>Specifies that at least one <see cref="T:System.Web.Services.Description.Binding" /> for the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported is of an unsupported type and has been ignored.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.NoMethodsGenerated">
      <summary>Specifies that the proxy class generated by the <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.Import(System.CodeDom.CodeNamespace,System.CodeDom.CodeCompileUnit)" /> method includes no methods.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.SchemaValidation">
      <summary>Specifies that the <see cref="T:System.Web.Services.Description.ServiceDescription" /> schema is invalid.</summary>
    </member>
    <member name="F:System.Web.Services.Description.ServiceDescriptionImportWarnings.WsiConformance">
      <summary>Specifies that the <see cref="T:System.Web.Services.Description.ServiceDescription" /> to be imported does not conform to the WS-I Basic Profile.</summary>
    </member>
    <member name="T:System.Web.Services.Description.ServiceDescriptionReflector">
      <summary>Provides a managed way of dynamically viewing, creating or invoking types supported by an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionReflector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.ServiceDescriptionReflector" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.ServiceDescriptionReflector.Reflect(System.Type,System.String)">
      <summary>Creates a <see cref="T:System.Web.Services.Description.ServiceDescription" /> including the specified <see cref="T:System.Type" /> for the XML Web service at the specified URL.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the class or interface to reflect. </param>
      <param name="url">The address (URL) of the XML Web service. </param>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionReflector.Schemas">
      <summary>Gets a reference to the <see cref="T:System.Xml.Serialization.XmlSchemas" /> associated with the XML Web service.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSchemas" /> collection.</returns>
    </member>
    <member name="P:System.Web.Services.Description.ServiceDescriptionReflector.ServiceDescriptions">
      <summary>Gets a reference to the <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> associated with the XML Web service.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Description.Soap12AddressBinding">
      <summary>Represents a service description format extension applied to a <see cref="T:System.Web.Services.Description.Port" /> when an XML Web service supports the SOAP protocol version 1.2. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12AddressBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12AddressBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.Soap12Binding">
      <summary>Represents a binding in a Web Services Description Language (WSDL) document to the SOAP version 1.2 protocol. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12Binding" /> class. </summary>
    </member>
    <member name="F:System.Web.Services.Description.Soap12Binding.HttpTransport">
      <summary>Represents the transport protocol for the SOAP message is HTTP. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Services.Description.Soap12Binding.Namespace">
      <summary>Represents the XML namespace of a binding to the SOAP protocol version 1.2. This field is constant.</summary>
    </member>
    <member name="T:System.Web.Services.Description.Soap12BodyBinding">
      <summary>Represents a service description format extension applied to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> when an XML Web service supports the SOAP protocol version 1.2. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12BodyBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12BodyBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.Soap12FaultBinding">
      <summary>Represents a service description format extension applied to an <see cref="T:System.Web.Services.Description.FaultBinding" /> when an XML Web service supports the SOAP protocol version 1.2. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12FaultBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12FaultBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.Soap12HeaderBinding">
      <summary>Represents a service description format extension applied to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> when an XML Web service supports the SOAP protocol version 1.2. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12HeaderBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12HeaderBinding" /> class. </summary>
    </member>
    <member name="T:System.Web.Services.Description.Soap12OperationBinding">
      <summary>Represents a service description format extension applied to an <see cref="T:System.Web.Services.Description.OperationBinding" /> when an XML Web service supports the SOAP protocol version 1.2. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Soap12OperationBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Soap12OperationBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Soap12OperationBinding.SoapActionRequired">
      <summary>Gets or sets a value indicating whether an XML Web service anticipates requiring the SOAPAction HTTP header.</summary>
      <returns>true if an XML Web service anticipates requiring the SOAPAction HTTP header; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapAddressBinding">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.Port" /> within an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapAddressBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapAddressBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapAddressBinding.Location">
      <summary>Gets or sets a value representing the URI for the <see cref="T:System.Web.Services.Description.Port" /> to which the <see cref="T:System.Web.Services.Description.SoapAddressBinding" /> applies.</summary>
      <returns>A string containing a URI. The default value is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapBinding">
      <summary>Represents an extension added to a <see cref="T:System.Web.Services.Description.Binding" /> within an XML Web service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapBinding.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.SoapBinding" /> class.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBinding.HttpTransport">
      <summary>Gets the URI for the standard protocol specifying HTTP transmission of SOAP data. This field is constant.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBinding.Namespace">
      <summary>Gets the URI for the XML namespace of the <see cref="T:System.Web.Services.Description.SoapBinding" /> class. This field is constant.</summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBinding.Schema">
      <summary>Gets the binding schema that is to be used to transmit data by using the SOAP protocol version 1.1.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchema" /> object that represents the binding schema that is to be used to transmit data by using the SOAP protocol version 1.1.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBinding.Style">
      <summary>Specifies the type of SOAP binding used by the current <see cref="T:System.Web.Services.Description.SoapBinding" />.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingStyle" /> values. The default is Document.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBinding.Transport">
      <summary>Gets or sets the URI with the specification for HTTP transmission of SOAP data.</summary>
      <returns>A string value representing the URI for the specification for data transmission by means of SOAP. The default is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapBindingStyle">
      <summary>Specifies the type of action that occurs in the XML Web service at the level of the class hierarchy to which this enumeration is applied.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Default">
      <summary>The default type of action for the current hierarchical level of the Web Services Description Language (WSDL) file.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Document">
      <summary>The message being transmitted is document-oriented.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingStyle.Rpc">
      <summary>The message being transmitted contains the parameters to call a procedure or the return values from that procedure. RPC is an acronym for "remote procedure call." </summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapBindingUse">
      <summary>Specifies whether the message parts are encoded as abstract type definitions or concrete schema definitions.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Default">
      <summary>Specifies an empty string ("") value for the corresponding XML use attribute.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Encoded">
      <summary>The message parts are encoded using given encoding rules.</summary>
    </member>
    <member name="F:System.Web.Services.Description.SoapBindingUse.Literal">
      <summary>The message parts represent a concrete schema.</summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapBodyBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" />.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapBodyBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapBodyBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Encoding">
      <summary>Gets or sets a string containing a list of space-delimited URIs. The URIs represent the encoding style (or styles) to be used to encode messages within the SOAP body.</summary>
      <returns>A string containing a list of URIs. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Namespace">
      <summary>Get or sets the URI representing the location of the specifications for encoding of content not specifically defined by the <see cref="P:System.Web.Services.Description.SoapBodyBinding.Encoding" /> property.</summary>
      <returns>A string containing a URI.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Parts">
      <summary>Gets or sets a value indicating which parts of the transmitted message appear within the SOAP body portion of the transmission.</summary>
      <returns>A string array containing the names of the appropriate message parts.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.PartsString">
      <summary>Gets or sets a value indicating which parts of the transmitted message appear within the SOAP body portion of the transmission.</summary>
      <returns>A space-delimited string containing the appropriate message parts.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapBodyBinding.Use">
      <summary>Indicates whether the message parts are encoded using specified encoding rules, or define the concrete schema of the message.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> values. The default is Default.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapExtensionImporter">
      <summary>Provides a common interface and functionality for classes to generate code attributes that specify SOAP extensions.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapExtensionImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapExtensionImporter" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapExtensionImporter.ImportContext">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> instance that invokes the <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" /> method.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)">
      <summary>When overridden in a derived class, adds code attribute declarations to any method that represents an operation in a binding.</summary>
      <param name="metadata">A <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection" /> into which the <see cref="M:System.Web.Services.Description.SoapExtensionImporter.ImportMethod(System.CodeDom.CodeAttributeDeclarationCollection)" />  method can place new <see cref="T:System.CodeDom.CodeAttributeDeclaration" /> instances.</param>
    </member>
    <member name="T:System.Web.Services.Description.SoapExtensionReflector">
      <summary>Provides a common interface and functionality for classes to add SOAP extension information to a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object on a per-method basis.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapExtensionReflector.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.SoapExtensionReflector" /> class</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapExtensionReflector.ReflectDescription">
      <summary>Generates service-specific description information that gets placed in a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object corresponding to a binding.</summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapExtensionReflector.ReflectionContext">
      <summary>Gets or sets the instance of a class derived from the abstract <see cref="T:System.Web.Services.Description.ProtocolReflector" /> class that invokes the <see cref="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod" /> method.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapExtensionReflector.ReflectMethod">
      <summary>Abstract method that a derived class must implement to add SOAP extension information to a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object on a per-method basis.</summary>
    </member>
    <member name="T:System.Web.Services.Description.SoapFaultBinding">
      <summary>Represents an extensibility element added to a <see cref="T:System.Web.Services.Description.FaultBinding" /> within an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapFaultBinding.#ctor">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Description.SoapFaultBinding" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Encoding">
      <summary>Gets or sets a URI representing the encoding style used to encode the SOAP fault message.</summary>
      <returns>A string containing a URI. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Name">
      <summary>Gets or sets the value of the name attribute that relates the soap fault to the wsdl fault defined for the specified operation.</summary>
      <returns>A <see cref="T:System.String" /> object that contains the name attribute that relates the soap fault to the wsdl fault defined for the operation.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Namespace">
      <summary>Get or sets the URI representing the location of the specification for encoding of content not specifically defined by the <see cref="P:System.Web.Services.Description.SoapFaultBinding.Encoding" /> property.</summary>
      <returns>A string representing a URI.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapFaultBinding.Use">
      <summary>Specifies whether the fault message is encoded using rules specified by the <see cref="P:System.Web.Services.Description.SoapFaultBinding.Encoding" /> property, or is encapsulated within a concrete XML schema.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> values. The default is Default.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapHeaderBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> within an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapHeaderBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Encoding">
      <summary>Gets or sets a URI representing the encoding style used to encode the SOAP header.</summary>
      <returns>A string containing a URI. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Fault">
      <summary>Gets or sets the extension type controlling the output in a WSDL document for the headerfault XML element of a SOAP header.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> representing the SOAP header types used to transmit error information.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.MapToProperty">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> instance is mapped to a specific property in generated proxy classes.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> maps to a specific property; otherwise false.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Message">
      <summary>Gets or sets a value specifying the name of the <see cref="T:System.Web.Services.Description.Message" /> within the XML Web service to which the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> applies.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> representing the name of the <see cref="T:System.Web.Services.Description.Message" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Namespace">
      <summary>Get or sets the URI representing the location of the specification for encoding of content not specifically defined by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" /> property.</summary>
      <returns>A string representing a URI.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Part">
      <summary>Gets or sets a value indicating to which <see cref="T:System.Web.Services.Description.MessagePart" /> within the XML Web service the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> applies.</summary>
      <returns>A string representing the name of the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the <see cref="T:System.Web.Services.Description.SoapHeaderBinding" /> applies.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderBinding.Use">
      <summary>Specifies whether the header is encoded using rules specified by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" /> property, or is encapsulated within a concrete XML schema.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> values. The default is Default.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapHeaderFaultBinding">
      <summary>Represents an extensibility element added to an <see cref="T:System.Web.Services.Description.InputBinding" /> or an <see cref="T:System.Web.Services.Description.OutputBinding" /> within an XML Web service. It specifies the SOAP header types used to transmit error information within the SOAP header.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapHeaderFaultBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Encoding">
      <summary>Gets or sets a URI representing the encoding style used to encode the error message for the SOAP header.</summary>
      <returns>A string containing a URI. The default value is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Message">
      <summary>Gets or sets a value specifying the name of the <see cref="T:System.Web.Services.Description.Message" /> within the XML Web service to which the <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> applies.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> representing the name of the <see cref="T:System.Web.Services.Description.Message" />. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Namespace">
      <summary>Get or sets a URI representing the location of the specifications for encoding content not specifically defined by the <see cref="P:System.Web.Services.Description.SoapHeaderFaultBinding.Encoding" /> property.</summary>
      <returns>Returns a string representing a URI.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Part">
      <summary>Gets or sets a value indicating which <see cref="T:System.Web.Services.Description.MessagePart" /> within the XML Web service the <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> applies to.</summary>
      <returns>The name of the <see cref="T:System.Web.Services.Description.MessagePart" /> to which the <see cref="T:System.Web.Services.Description.SoapHeaderFaultBinding" /> applies.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapHeaderFaultBinding.Use">
      <summary>Specifies whether the header is encoded using rules specified by the <see cref="P:System.Web.Services.Description.SoapHeaderBinding.Encoding" /> property, or is encapsulated within a concrete schema.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> values. The default is Default.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapOperationBinding">
      <summary>Represents an extension added to an <see cref="T:System.Web.Services.Description.OperationBinding" /> within an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapOperationBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapOperationBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapOperationBinding.SoapAction">
      <summary>Gets or sets the URI for the SOAP header.</summary>
      <returns>A string containing the URI for the SOAP header.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapOperationBinding.Style">
      <summary>Gets or sets the type of SOAP binding used by the <see cref="T:System.Web.Services.Description.SoapOperationBinding" />.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Description.SoapBindingStyle" /> values. The default is Document.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapProtocolImporter">
      <summary>Generates classes for Web services that use the SOAP protocol.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.BeginClass">
      <summary>Initializes the generation of a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.BeginNamespace">
      <summary>Performs initialization for an entire code namespace during code generation.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.EndClass">
      <summary>Processes a binding class after the generation of methods.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.EndNamespace">
      <summary>Performs processing for an entire code namespace after binding class generation.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.GenerateMethod">
      <summary>Generates method code for a binding class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.IsBindingSupported">
      <summary>Determines whether a class can be generated for the current binding.</summary>
      <returns>true if the class can be generated for the current binding; otherwise false.</returns>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.IsOperationFlowSupported(System.Web.Services.Description.OperationFlow)">
      <summary>Determines whether the current operation's operation flow is supported.</summary>
      <returns>true if the current operation's operation flow is supported; otherwise false.</returns>
      <param name="flow">An <see cref="T:System.Web.Services.Description.OperationFlow" /> enumeration value that represents a transmission pattern.</param>
    </member>
    <member name="M:System.Web.Services.Description.SoapProtocolImporter.IsSoapEncodingPresent(System.String)">
      <summary>Checks for the presence of "http://schemas.xmlsoap.org/soap/encoding/" in a string that represents a list of Uniform Resource Indicators (URIs).</summary>
      <returns>true it the string contains http://schemas.xmlsoap.org/soap/encoding/; otherwise false.</returns>
      <param name="uriList">A space-delimited list of URIs.</param>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.ProtocolName">
      <summary>Gets a value of "Soap".</summary>
      <returns>A <see cref="T:System.String" /> object that contains the string "Soap".</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding">
      <summary>Gets a <see cref="T:System.Web.Services.Description.SoapBinding" /> instance obtained through the <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> property's <see cref="P:System.Web.Services.Description.Binding.Extensions" /> property.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.SoapBinding" /> instance obtained through the <see cref="P:System.Web.Services.Description.SoapProtocolImporter.SoapBinding" /> property's <see cref="P:System.Web.Services.Description.Binding.Extensions" /> property.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.SoapExporter">
      <summary>Gets the object of type <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate code from mappings between SOAP-encoded XML schema content and .NET Framework types.</summary>
      <returns>An object of type <see cref="T:System.Xml.Serialization.SoapCodeExporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate code from mappings between SOAP-encoded XML schema content and .NET Framework types.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.SoapImporter">
      <summary>Gets the object of type <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate mappings between SOAP-encoded XML schema content and .NET Framework types.</summary>
      <returns>An object of type <see cref="T:System.Xml.Serialization.SoapSchemaImporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate mappings between SOAP-encoded XML schema content and .NET Framework types.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.XmlExporter">
      <summary>Gets the object of type <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate code from mappings between literal XML schema content and .NET Framework types.</summary>
      <returns>An object of type <see cref="T:System.Xml.Serialization.XmlCodeExporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate code from mappings between literal XML schema content and .NET Framework types.</returns>
    </member>
    <member name="P:System.Web.Services.Description.SoapProtocolImporter.XmlImporter">
      <summary>Gets the object of type <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate mappings between literal XML schema content and .NET Framework types.</summary>
      <returns>An object of type <see cref="T:System.Xml.Serialization.XmlSchemaImporter" /> used internally by the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> class to generate mappings between literal XML schema content and .NET Framework types.</returns>
    </member>
    <member name="T:System.Web.Services.Description.SoapTransportImporter">
      <summary>Serves as a base class for derived classes that import SOAP transmission protocols into XML Web services.</summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapTransportImporter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.SoapTransportImporter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Description.SoapTransportImporter.ImportClass">
      <summary>When overridden in a derived class, this method uses information contained in the <see cref="T:System.Web.Services.Description.ServiceDescription" /> object model (available through the <see cref="P:System.Web.Services.Description.SoapTransportImporter.ImportContext" /> property) to add transport-specific code to the class being generated.</summary>
    </member>
    <member name="P:System.Web.Services.Description.SoapTransportImporter.ImportContext">
      <summary>Gets or sets a reference to the <see cref="T:System.Web.Services.Description.SoapProtocolImporter" /> performing the import action.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.SoapProtocolImporter" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.SoapTransportImporter.IsSupportedTransport(System.String)">
      <summary>When overridden in a derived class, this method determines whether the specified transport protocol is supported by the XML Web service.</summary>
      <returns>true if the transport protocol is supported; otherwise, false.</returns>
      <param name="transport">A URI representing the transport protocol to be checked. </param>
    </member>
    <member name="T:System.Web.Services.Description.Types">
      <summary>Describes data type definitions relevant to exchanged messages. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Description.Types.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.Types" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Description.Types.Extensions">
      <summary>Gets the collection of <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtension" /> elements included in the XML Web service. This property is read-only.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionFormatExtensionCollection" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.Types.Schemas">
      <summary>Gets the collection of XML schemas included as data type definitions for the XML Web service. This property is read-only.</summary>
      <returns>An <see cref="T:System.Xml.Serialization.XmlSchemas" /> collection.</returns>
    </member>
    <member name="T:System.Web.Services.Description.WebReference">
      <summary>Describes a reference to a collection of XML Web services.</summary>
    </member>
    <member name="M:System.Web.Services.Description.WebReference.#ctor(System.Web.Services.Discovery.DiscoveryClientDocumentCollection,System.CodeDom.CodeNamespace)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.WebReference" /> class with the given description document collection and proxy code namespace.</summary>
      <param name="documents">A <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />  that specifies a collection of description documents.</param>
      <param name="proxyCode">A <see cref="T:System.CodeDom.CodeNamespace" /> that specifies a namespace for code compilation.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReference.#ctor(System.Web.Services.Discovery.DiscoveryClientDocumentCollection,System.CodeDom.CodeNamespace,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.WebReference" /> class with the given data.</summary>
      <param name="documents">A <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />  that specifies a collection of description documents.</param>
      <param name="proxyCode">A <see cref="T:System.CodeDom.CodeNamespace" /> that specifies a namespace for code compilation.</param>
      <param name="appSettingUrlKey">The URL key of the Web reference.</param>
      <param name="appSettingBaseUrl">The base URL of the Web reference.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReference.#ctor(System.Web.Services.Discovery.DiscoveryClientDocumentCollection,System.CodeDom.CodeNamespace,System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.WebReference" /> class with the given data.</summary>
      <param name="documents">A <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />  that specifies a collection of description documents.</param>
      <param name="proxyCode">A <see cref="T:System.CodeDom.CodeNamespace" /> that specifies a namespace for code compilation.</param>
      <param name="protocolName">The protocol used by the XML Web service.</param>
      <param name="appSettingUrlKey">The URL key of the Web reference.</param>
      <param name="appSettingBaseUrl">The base URL of the Web reference.</param>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.AppSettingBaseUrl">
      <summary>Gets the base URL of the Web reference.</summary>
      <returns>A <see cref="T:System.String" /> containing the base URL of the Web reference.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.AppSettingUrlKey">
      <summary>Gets the URL key of the web reference.</summary>
      <returns>A <see cref="T:System.String" /> containing the URL key of the Web reference.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.Documents">
      <summary>Gets the collection of description documents associated with the Web reference.</summary>
      <returns>The <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> used to initialize the <see cref="T:System.Web.Services.Description.WebReference" /> instance.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.ProtocolName">
      <summary>Gets or sets the protocol associated with the Web reference.</summary>
      <returns>A <see cref="T:System.String" /> containing the name of the protocol associated with the Web reference.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.ProxyCode">
      <summary>Gets the code namespace associated with the Web reference.</summary>
      <returns>The <see cref="T:System.CodeDom.CodeNamespace" /> in which proxy code will be generated when the <see cref="M:System.Web.Services.Description.ServiceDescriptionImporter.GenerateWebReferences(System.Web.Services.Description.WebReferenceCollection,System.CodeDom.Compiler.CodeDomProvider,System.CodeDom.CodeCompileUnit,System.Web.Services.Description.WebReferenceOptions)" /> method is called.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.ValidationWarnings">
      <summary>Gets a collection of warnings generated when validating the description documents.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> of validation warning text.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReference.Warnings">
      <summary>Gets a collection of warnings generated when importing Web Services Description Language (WSDL) service description documents.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescriptionImportWarnings" /> collection of warnings generated when importing WSDL service description documents.</returns>
    </member>
    <member name="T:System.Web.Services.Description.WebReferenceCollection">
      <summary>Describes a collection of <see cref="T:System.Web.Services.Description.WebReference" /> objects.</summary>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Description.WebReferenceCollection" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.Add(System.Web.Services.Description.WebReference)">
      <summary>Appends a <see cref="T:System.Web.Services.Description.WebReference" /> instance to the collection.</summary>
      <returns>The index of the appended Web reference.</returns>
      <param name="webReference">The Web reference to append.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.Contains(System.Web.Services.Description.WebReference)">
      <summary>Determines whether the collection contains a given <see cref="T:System.Web.Services.Description.WebReference" /> instance.</summary>
      <returns>true if the collections contains the given Web reference instance; otherwise, false.</returns>
      <param name="webReference">The Web reference to search for.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.CopyTo(System.Web.Services.Description.WebReference[],System.Int32)">
      <summary>Copies members of the collection to a specified array, starting at the specified array index.</summary>
      <param name="array">An array of Web references into which the collection members are copied.</param>
      <param name="index">The array index at which to begin copying.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.IndexOf(System.Web.Services.Description.WebReference)">
      <summary>Determines the index of the specified <see cref="T:System.Web.Services.Description.WebReference" /> instance.</summary>
      <returns>The index of the specified Web reference, or -1 if the collection does not contain the specified Web reference.</returns>
      <param name="webReference">The Web reference to search for.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.Insert(System.Int32,System.Web.Services.Description.WebReference)">
      <summary>Inserts the specified <see cref="T:System.Web.Services.Description.WebReference" /> instance at the specified index.</summary>
      <param name="index">The index at which to insert the specified Web reference.</param>
      <param name="webReference">The Web reference to insert.</param>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.WebReference" /> instance at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.WebReference" /> instance at the specified index.</returns>
      <param name="index">The index of the Web reference.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceCollection.Remove(System.Web.Services.Description.WebReference)">
      <summary>Removes the specified <see cref="T:System.Web.Services.Description.WebReference" /> instance from the collection.</summary>
      <param name="webReference">The Web reference to remove.</param>
    </member>
    <member name="T:System.Web.Services.Description.WebReferenceOptions">
      <summary>The <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> class represents code generation options specified in an XML text file.</summary>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceOptions.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceOptions.CodeGenerationOptions">
      <summary>Gets or sets the <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.CodeGenerationOptions" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</returns>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceOptions.Read(System.IO.Stream,System.Xml.Schema.ValidationEventHandler)">
      <summary>Returns a new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified stream.</summary>
      <returns>A new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified stream.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> that contains the code generation options.</param>
      <param name="validationEventHandler">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> to be associated with the new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceOptions.Read(System.IO.TextReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Returns a new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified <see cref="T:System.IO.TextReader" />.</summary>
      <returns>A new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified <see cref="T:System.IO.TextReader" />.</returns>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> that contains the code generation options.</param>
      <param name="validationEventHandler">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> to be associated with the new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebReferenceOptions.Read(System.Xml.XmlReader,System.Xml.Schema.ValidationEventHandler)">
      <summary>Returns a new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" /> based on the code generation options described in the specified <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> that contains the code generation options.</param>
      <param name="validationEventHandler">The <see cref="T:System.Xml.Schema.ValidationEventHandler" /> to be associated with the new instance of <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</param>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceOptions.Schema">
      <summary>Gets the <see cref="T:System.Xml.Schema.XmlSchema" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
      <returns>The <see cref="T:System.Xml.Schema.XmlSchema" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceOptions.SchemaImporterExtensions">
      <summary>Gets a <see cref="T:System.Collections.Specialized.StringCollection" /> that represents the schema importer extensions associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.StringCollection" /> that represents the schema importer extensions associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</returns>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceOptions.Style">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.ServiceDescriptionImportStyle" /> associated with this <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</returns>
    </member>
    <member name="F:System.Web.Services.Description.WebReferenceOptions.TargetNamespace">
      <summary>A <see cref="T:System.String" /> that contains the target namespace for the <see cref="T:System.Web.Services.Description.WebReferenceOptions" />.</summary>
    </member>
    <member name="P:System.Web.Services.Description.WebReferenceOptions.Verbose">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> value that indicates whether verbose warning messages are to be generated during compilation of a client proxy or a server stub.</summary>
      <returns>true if verbose warning messages are to be generated during compilation of a client proxy or a server stub; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Services.Description.WebServicesInteroperability">
      <summary>The <see cref="T:System.Web.Services.Description.WebServicesInteroperability" /> class provides methods to verify whether a given Web service or services conforms to a given Web Services Interoperability (WS-I) Organization specification.</summary>
    </member>
    <member name="M:System.Web.Services.Description.WebServicesInteroperability.CheckConformance(System.Web.Services.WsiProfiles,System.Web.Services.Description.ServiceDescription,System.Web.Services.Description.BasicProfileViolationCollection)">
      <summary>Verifies whether a given Web service or services conforms to a given WS-I specification, and provides a list of any violations that it finds.</summary>
      <returns>true if the Web service described by <paramref name="description" /> conforms to the Web services interoperability specification indicated by <paramref name="claims" />; otherwise false.</returns>
      <param name="claims">A member of <see cref="T:System.Web.Services.WsiProfiles" /> that indicates a Web services interoperability specification.</param>
      <param name="description">A <see cref="T:System.Web.Services.Description.ServiceDescription" /> that describes a Web service.</param>
      <param name="violations">A <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" /> that contains any violations that were found.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebServicesInteroperability.CheckConformance(System.Web.Services.WsiProfiles,System.Web.Services.Description.ServiceDescriptionCollection,System.Web.Services.Description.BasicProfileViolationCollection)">
      <summary>Verifies whether a given Web service or services conforms to a given WS-I specification, and provides a list of any violations that it finds.</summary>
      <returns>true if the Web service descriptions contained in <paramref name="descriptions" /> conform to the Web services interoperability specification indicated by <paramref name="claims" />; false otherwise.</returns>
      <param name="claims">A member of <see cref="T:System.Web.Services.WsiProfiles" /> that indicates a Web services interoperability specification.</param>
      <param name="descriptions">A <see cref="T:System.Web.Services.Description.ServiceDescriptionCollection" /> that contains Web service descriptions.</param>
      <param name="violations">A <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" /> that contains any violations that were found.</param>
    </member>
    <member name="M:System.Web.Services.Description.WebServicesInteroperability.CheckConformance(System.Web.Services.WsiProfiles,System.Web.Services.Description.WebReference,System.Web.Services.Description.BasicProfileViolationCollection)">
      <summary>Verifies whether a given Web service or services conforms to a given WS-I specification, and provides a list of any violations that it finds.</summary>
      <returns>true if the Web service described by <paramref name="webReference" /> conforms to the Web services interoperability specification indicated by <paramref name="claims" />; false otherwise.</returns>
      <param name="claims">A member of <see cref="T:System.Web.Services.WsiProfiles" /> that indicates a Web services interoperability specification.</param>
      <param name="webReference">A <see cref="T:System.Web.Services.Description.WebReference" /> that describes a Web service.</param>
      <param name="violations">A <see cref="T:System.Web.Services.Description.BasicProfileViolationCollection" /> that contains any violations that were found.</param>
    </member>
    <member name="T:System.Web.Services.Discovery.ContractReference">
      <summary>Represents a reference in a discovery document to a service description.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class using the supplied reference to a Service Description.</summary>
      <param name="href">The URL for a Sevice Descritpion. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property value. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractReference" /> class using the supplied references to a service description and a XML Web service implementing the service description.</summary>
      <param name="href">The URL for a service description. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property value. </param>
      <param name="docRef">The URL for a XML Web service implementing the service description at <paramref name="href" />. Initializes the <see cref="P:System.Web.Services.Discovery.ContractReference.DocRef" /> property value. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Contract">
      <summary>Gets a <see cref="T:System.Web.Services.Description.ServiceDescription" /> object representing the service description.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" /> object representing the service description.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null. </exception>
      <exception cref="T:System.Exception">The <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> property of <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> does not contain a discovery document with an URL of <see cref="P:System.Web.Services.Discovery.ContractReference.Url" />. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.DefaultFilename">
      <summary>Gets the name of the file to use by default when saving the referenced service description.</summary>
      <returns>Name of the default file to use when saving the referenced service description to a file.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.DocRef">
      <summary>Gets and sets the URL for a XML Web service implementing the service description referenced in the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property.</summary>
      <returns>The URL for a XML Web service implementing the Service Description referenced in the <see cref="P:System.Web.Services.Discovery.ContractReference.Ref" /> property.</returns>
    </member>
    <member name="F:System.Web.Services.Discovery.ContractReference.Namespace">
      <summary>XML namespace for service description references in discovery documents.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.ReadDocument(System.IO.Stream)">
      <summary>Reads the service description from the passed <see cref="T:System.IO.Stream" /> and returns the service description.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.ServiceDescription" /> containing the contents of the referenced service description.</returns>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the service description. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Ref">
      <summary>Gets or sets the URL to the referenced service description.</summary>
      <returns>The URL to the referenced service description.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.Resolve(System.String,System.IO.Stream)">
      <summary>Resolves whether the the referenced document is valid.</summary>
      <param name="contentType">The MIME content type of <paramref name="stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> containing the referenced document. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null.-or- The service description could not be downloaded and verified successfully. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractReference.Url">
      <summary>Gets or sets the URL for the referenced Service Description.</summary>
      <returns>The URL for the referenced service description.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>Writes the passed-in service description into the passed-in <see cref="T:System.IO.Stream" />.</summary>
      <param name="document">The <see cref="T:System.Web.Services.Description.ServiceDescription" /> to write into <paramref name="stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which the serialized <see cref="T:System.Web.Services.Description.ServiceDescription" /> is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Discovery.ContractSearchPattern">
      <summary>Obtains the file locations and descriptions of ASP.NET Web services. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractSearchPattern.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ContractSearchPattern" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ContractSearchPattern.GetDiscoveryReference(System.String)">
      <summary>Creates the <see cref="T:System.Web.Services.Discovery.ContractReference" /> object for the specified .asmx file.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.ContractReference" /> object with the specified file name for its .asmx file.</returns>
      <param name="filename">The file-system path of the Web service's .asmx file.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.ContractSearchPattern.Pattern">
      <summary>Gets the file name pattern to use as a search target.</summary>
      <returns>The literal string "*.asmx".</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection">
      <summary>Represents a collection of documents discovered during XML Web services discovery that have been downloaded to the client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Add(System.String,System.Object)">
      <summary>Adds an object with the specified URL to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</summary>
      <param name="url">The URL for the document to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
      <param name="value">A discovered document to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
      <exception cref="T:System.ArgumentException">An entry with a key of <paramref name="url" /> already exists in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Contains(System.String)">
      <summary>Determines if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> contains an object with the specified URL.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> contains an object with the specified URL; otherwise, false.</returns>
      <param name="url">The URL for the document to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Item(System.String)">
      <summary>Gets or sets a client discovery document object from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> with the specified URL.</summary>
      <returns>An <see cref="T:System.Object" /> representing the document discovered and downloaded to the client. The underlying type of the object can be a <see cref="T:System.Web.Services.Description.ServiceDescription" />, <see cref="T:System.Xml.Schema.XmlSchema" />, or <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />.</returns>
      <param name="url">The URL of the discovery document to get or set from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object with all the keys in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Remove(System.String)">
      <summary>Removes an object with the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</summary>
      <param name="url">The URL for the discovered document to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientDocumentCollection.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object with all the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientProtocol">
      <summary>Provides support for programmatically invoking XML Web services discovery.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.AdditionalInformation">
      <summary>Gets information in addition to references found in the discovery document.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing additional information found in the discovery document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Discover(System.String)">
      <summary>Discovers the supplied URL to determine if it is a discovery document.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the results of XML Web services discovery at the supplied URL.</returns>
      <param name="url">The URL where XML Web services discovery begins. </param>
      <exception cref="T:System.Net.WebException">Accessing the supplied URL returned an HTTP status code other than <see cref="F:System.Net.HttpStatusCode.OK" />. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="url" /> parameteris a valid URL, but does not point to a valid discovery document. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoverAny(System.String)">
      <summary>Discovers the supplied URL to determine if it is a discovery document, service description or an XML Schema Definition (XSD) schema.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the results of XML Web services discovery at the supplied URL. If the <paramref name="url" /> parameter refers to a service description or an XSD Schema, a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is created in memory for it.</returns>
      <param name="url">The URL where XML Web services discovery begins. </param>
      <exception cref="T:System.Net.WebException">Accessing the supplied URL returned an HTTP status code other than <see cref="F:System.Net.HttpStatusCode.OK" />. </exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="url" /> parameteris a valid URL, but does not point to a valid discovery document, service description, or XSD schema. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents">
      <summary>Gets a collection of discovery documents.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientDocumentCollection" /> representing the collection of discovery documents found.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@)">
      <summary>Downloads the discovery document at the supplied URL into a <see cref="T:System.IO.Stream" /> object.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing the document at the supplied URL.</returns>
      <param name="url">The URL of the discovery document to download. </param>
      <exception cref="T:System.Net.WebException">The download from the supplied URL returned an HTTP status code other than <see cref="F:System.Net.HttpStatusCode.OK" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.Download(System.String@,System.String@)">
      <summary>Downloads the discovery document at the supplied URL into a <see cref="T:System.IO.Stream" /> object, setting the <paramref name="contentType" /> parameter to the MIME encoding of the discovery document.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing the document at the supplied URL.</returns>
      <param name="url">The URL of the discovery document to download. </param>
      <param name="contentType">The MIME encoding of the downloaded discovery document. </param>
      <exception cref="T:System.Net.WebException">The download from the supplied URL returned an HTTP status code other than <see cref="F:System.Net.HttpStatusCode.OK" />. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Errors">
      <summary>Gets a collection of exceptions that occurred during invocation of method from this class.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" /> of exceptions.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.LoadExternals">
      <summary>Instructs the <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> object to load any external references.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)">
      <summary>Reads in a file containing a map of saved discovery documents populating the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> and <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" /> properties, with discovery documents, XML Schema Definition (XSD) schemas, and service descriptions referenced in the file.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> containing the results found in the file with the map of saved discovery documents. The file format is a <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile" /> class serialized into XML; however, one would typically create the file using only the <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" /> method or Disco.exe.</returns>
      <param name="topLevelFilename">Name of file to read in, containing the map of saved discovery documents. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References">
      <summary>A collection of references founds in resolved discovery documents.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> of references discovered.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveAll">
      <summary>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas, and service descriptions in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" /> property, as well as references found in referenced discovery documents.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ResolveOneLevel">
      <summary>Resolves all references to discovery documents, XML Schema Definition (XSD) schemas and service descriptions in <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.References" />, as well as references found in those discovery documents.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)">
      <summary>Writes all discovery documents, XML Schema Definition (XSD) schemas, and Service Descriptions in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> property to the supplied directory and creates a file in that directory.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> containing the results of all files saved.</returns>
      <param name="directory">The directory in which to save all documents currently in the <see cref="P:System.Web.Services.Discovery.DiscoveryClientProtocol.Documents" /> property. </param>
      <param name="topLevelFilename">The name of the file to create or overwrite containing a map of all documents saved. </param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile">
      <summary>Represents the root element of an XML document containing the results of all files written when the <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" /> method is invoked.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientProtocol.DiscoveryClientResultsFile.Results">
      <summary>Gets a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> objects.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> containing the results from a <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.ReadAll(System.String)" /> or <see cref="M:System.Web.Services.Discovery.DiscoveryClientProtocol.WriteAll(System.String,System.String)" /> invocation.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection">
      <summary>Represents a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Add(System.String,System.Web.Services.Discovery.DiscoveryReference)">
      <summary>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL and value to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</summary>
      <param name="url">The URL for the reference to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Add(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Contains(System.String)">
      <summary>Determines if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> contains a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> contains a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL; otherwise, false.</returns>
      <param name="url">The URL for the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Item(System.String)">
      <summary>Gets or sets a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> object from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" /> with the specified URL.</summary>
      <returns>An DiscoveryReference representing a reference to a discovery document.</returns>
      <param name="url">The URL for the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to get or set from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Keys">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object with all the keys in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Remove(System.String)">
      <summary>Removes a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> with the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</summary>
      <param name="url">A string that represents the URL for the object to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientReferenceCollection.Values">
      <summary>Gets an <see cref="T:System.Collections.ICollection" /> object with all the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientReferenceCollection" />.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientResult">
      <summary>Represents the details of a discovery reference without the contents of the referenced document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResult.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResult.#ctor(System.Type,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> class and sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName" /> property to <paramref name="referenceType" />, the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Url" /> property to <paramref name="url" /> and the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename" /> property to <paramref name="filename" />.</summary>
      <param name="referenceType">Name of the class representing the type of reference in the discovery document. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName" /> property. </param>
      <param name="url">URL for the reference. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Url" /> property. </param>
      <param name="filename">Name of the file in which the reference was saved. Sets the <see cref="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename" /> property. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.Filename">
      <summary>Gets or sets the name of the file in which the reference is saved.</summary>
      <returns>Name of the file in which the reference is saved.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.ReferenceTypeName">
      <summary>Name of the class representing the type of reference in the discovery document.</summary>
      <returns>Name of the class representing the type of a reference. Default value is null.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResult.Url">
      <summary>Gets or sets the URL for the reference.</summary>
      <returns>The URL of the reference.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryClientResultCollection">
      <summary>Contains a collection of <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> objects. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Add(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</summary>
      <returns>The position into which the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> was inserted.</returns>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Contains(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" /> contains a specific <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" />.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> is found in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to locate in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryClientResultCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> at position <paramref name="i" /> of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> at the specified index.</returns>
      <param name="i">The zero-based index of the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is not a valid index in the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryClientResultCollection.Remove(System.Web.Services.Discovery.DiscoveryClientResult)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />.</summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryClientResult" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryClientResultCollection" />. </param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocument">
      <summary>Represents a discovery document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.CanRead(System.Xml.XmlReader)">
      <summary>Returns a value indicating whether the passed <see cref="T:System.Xml.XmlReader" /> can be deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />.</summary>
      <returns>true if <see cref="T:System.Xml.XmlReader" /> can be deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />; otherwise, false.</returns>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> that is tested whether it can be deserialized into a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Web.Services.Discovery.DiscoveryDocument.Namespace">
      <summary>Namespace of the discovery XML element of a discovery document.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.Stream)">
      <summary>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.IO.Stream" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of a discovery document from the passed <see cref="T:System.IO.Stream" />.</returns>
      <param name="stream">The <see cref="T:System.IO.Stream" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.IO.TextReader)">
      <summary>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.IO.TextReader" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of a discovery document from the passed <see cref="T:System.IO.TextReader" />.</returns>
      <param name="reader">The <see cref="T:System.IO.TextReader" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Read(System.Xml.XmlReader)">
      <summary>Reads and returns a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> from the passed <see cref="T:System.Xml.XmlReader" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of a discovery document from the passed <see cref="T:System.Xml.XmlReader" />.</returns>
      <param name="xmlReader">The <see cref="T:System.Xml.XmlReader" /> from which to read the <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" />. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocument.References">
      <summary>A list of references contained within the discovery document.</summary>
      <returns>An <see cref="T:System.Collections.IList" /> containing the references within the discovery document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.Stream)">
      <summary>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the passed <see cref="T:System.IO.Stream" />.</summary>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.IO.TextWriter)">
      <summary>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the passed <see cref="T:System.IO.TextWriter" />.</summary>
      <param name="writer">The <see cref="T:System.IO.TextWriter" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocument.Write(System.Xml.XmlWriter)">
      <summary>Writes this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the passed <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> into which this <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern">
      <summary>Obtains the file locations of Web services discovery documents for use in populating another Web services discovery document.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern.GetDiscoveryReference(System.String)">
      <summary>Returns the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> object for a given discovery document.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> object that specifies the location of a .vsdisco file.</returns>
      <param name="filename">The file-system path of the discovery document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentLinksPattern.Pattern">
      <summary>Gets the file-name pattern to use as a search target.</summary>
      <returns>The literal string "*.disco".</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocumentReference">
      <summary>Represents a reference to a discovery document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> class, setting the <see cref="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref" /> property to the value of <paramref name="href" />.</summary>
      <param name="href">Reference to a discovery document. The <see cref="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref" /> property is set to the value of <paramref name="href" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.DefaultFilename">
      <summary>Gets the name of the default file to use when saving the referenced discovery document.</summary>
      <returns>Name of the default file to use when saving the referenced document to a file.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Document">
      <summary>Gets the contents of the referenced discovery document as a <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> object.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> representing the contents of the referenced discovery document.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null.-or- An error occurred during the download or resolution of the XSD schema using <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.ReadDocument(System.IO.Stream)">
      <summary>Reads and returns the discovery document from the passed <see cref="T:System.IO.Stream" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> containing the contents of the referenced discovery document.</returns>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the discovery document. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Ref">
      <summary>Gets or sets the reference to a discovery document.</summary>
      <returns>Reference to a discovery document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.ResolveAll">
      <summary>Verifies that all referenced documents within the discovery document are valid.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null.-or- The discovery document could not be downloaded and verified successfully. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentReference.Url">
      <summary>Gets or sets the URL of the referenced discovery document.</summary>
      <returns>The URL of the referenced discovery document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>Writes the passed <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> into the passed <see cref="T:System.IO.Stream" />.</summary>
      <param name="document">The <see cref="T:System.Web.Services.Discovery.DiscoveryDocument" /> to write into <paramref name="stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which the serialized discovery document is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern">
      <summary>Obtains the file locations of Web services discovery documents for use in populating another Web services discovery document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern.GetDiscoveryReference(System.String)">
      <summary>Returns the <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> object for a given discovery document.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DiscoveryDocumentReference" /> object that specifies the location of a .vsdisco file.</returns>
      <param name="filename">The file system path of the discovery document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryDocumentSearchPattern.Pattern">
      <summary>Gets the file name pattern to use as a search target.</summary>
      <returns>The literal string "*.vsdisco".</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary">
      <summary>Collects exceptions that occurred during XML Web services discovery. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Add(System.String,System.Exception)">
      <summary>Adds an <see cref="T:System.Exception" /> with a key of <paramref name="url" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</summary>
      <param name="url">The URL that caused an exception during XML Web services discovery. </param>
      <param name="value">The <see cref="T:System.Exception" /> that occurred during XML Web services discovery. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
      <exception cref="T:System.ArgumentException">An entry with a key of <paramref name="url" /> already exists in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Contains(System.String)">
      <summary>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" /> contains an <see cref="T:System.Exception" /> with the specified URL.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" /> contains an <see cref="T:System.Exception" /> with the specified URL; otherwise, false.</returns>
      <param name="url">The URL of the <see cref="T:System.Exception" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Item(System.String)">
      <summary>Gets or sets the <see cref="T:System.Exception" /> that occurred while discovering the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</summary>
      <returns>An <see cref="T:System.Exception" /> that was thrown discovering <paramref name="url" />.</returns>
      <param name="url">The URL of the discovery document that caused an exception to be thrown during XML Web services discovery. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Keys">
      <summary>Gets a <see cref="T:System.Collections.ICollection" /> object with all the keys in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the keys of the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Remove(System.String)">
      <summary>Removes an <see cref="T:System.Exception" /> with the specified URL from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</summary>
      <param name="url">The URL of the <see cref="T:System.Exception" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="url" /> is null. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryExceptionDictionary.Values">
      <summary>Gets a <see cref="T:System.Collections.ICollection" /> object containing all the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</summary>
      <returns>An <see cref="T:System.Collections.ICollection" /> containing the values in the <see cref="T:System.Web.Services.Discovery.DiscoveryExceptionDictionary" />.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryReference">
      <summary>The base class for discoverable references using XML Web services discovery.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol">
      <summary>Gets or sets the instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process.</summary>
      <returns>An instance of <see cref="T:System.Web.Services.Discovery.DiscoveryClientProtocol" /> used in a discovery process </returns>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.DefaultFilename">
      <summary>Gets the name of the default file to use when saving the referenced discovery document, XSD schema, or Service Description.</summary>
      <returns>Name of the default file to use when saving the referenced document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.FilenameFromUrl(System.String)">
      <summary>Returns a file name based on the passed URL.</summary>
      <returns>Name of the file based on the passed URL.</returns>
      <param name="url">The URL on which the name of the file is based. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.ReadDocument(System.IO.Stream)">
      <summary>Reads the passed <see cref="T:System.IO.Stream" /> and returns an instance of the class representing the type of referenced document.</summary>
      <returns>An <see cref="T:System.Object" /> with an underlying type matching the type of referenced document.</returns>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the reference document. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.Resolve">
      <summary>Downloads the referenced document at <see cref="P:System.Web.Services.Discovery.DiscoveryReference.Url" /> to resolve whether the referenced document is valid.</summary>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.Resolve(System.String,System.IO.Stream)">
      <summary>Resolves whether the referenced document is valid.</summary>
      <param name="contentType">The MIME type of <paramref name="stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> containing the referenced document. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReference.Url">
      <summary>Gets or sets the URL of the referenced document.</summary>
      <returns>The URL of the referenced document.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>When overridden in a derived class, writes the document to a <see cref="T:System.IO.Stream" />.</summary>
      <param name="document">The document to write into a <see cref="T:System.IO.Stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which the <paramref name="document" /> is written. </param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryReferenceCollection">
      <summary>A collection of discovery references. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Add(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>Adds a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</summary>
      <returns>The position where the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> was inserted in the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</returns>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to add to the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Contains(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>Determines whether the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" /> contains a specific <see cref="T:System.Web.Services.Discovery.DiscoveryReference" />.</summary>
      <returns>true if the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" /> contains the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to locate within the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryReferenceCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> at the specified index.</summary>
      <returns>The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> at the specified index.</returns>
      <param name="i">The zero-based index of the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="i" /> is not a valid index in the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </exception>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryReferenceCollection.Remove(System.Web.Services.Discovery.DiscoveryReference)">
      <summary>Removes a <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> from the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />.</summary>
      <param name="value">The <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> to remove from the <see cref="T:System.Web.Services.Discovery.DiscoveryReferenceCollection" />. </param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoveryRequestHandler">
      <summary>An ASP.NET HTTP handler that processes a request for a Web services discovery document.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryRequestHandler.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoveryRequestHandler" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoveryRequestHandler.IsReusable">
      <summary>Gets a value of true, indicates whether the instance of <see cref="T:System.Web.Services.Discovery.DiscoveryRequestHandler" /> (or a derived class) is reusable. </summary>
      <returns>This property always returns true.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoveryRequestHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Handles an HTTP request for a discovery document, which is serialized to the HTTP response.</summary>
      <param name="context">The <see cref="P:System.Web.HttpContext.Request" /> and <see cref="P:System.Web.HttpContext.Response" /> properties of the <see cref="T:System.Web.HttpContext" /> class are used for input and output, respectively.</param>
    </member>
    <member name="T:System.Web.Services.Discovery.DiscoverySearchPattern">
      <summary>Establishes an interface for file extension search patterns for discoverable file types.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoverySearchPattern.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DiscoverySearchPattern" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DiscoverySearchPattern.GetDiscoveryReference(System.String)">
      <summary>When overridden in a derived class, returns the <see cref="T:System.Web.Services.Discovery.DiscoveryReference" /> object for a given file name.</summary>
      <returns>A file name.</returns>
      <param name="filename">The name of a discovery file or a file that appears in a dynamically generated discovery document. For example, an .asmx or .xsd file.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.DiscoverySearchPattern.Pattern">
      <summary>Gets the file name pattern to use as a search target.</summary>
      <returns>A file name pattern.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.DynamicDiscoveryDocument">
      <summary>Represents an XML document that specifies a list of file system directory paths that should not be searched for references to add to a Web services discovery document.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.DynamicDiscoveryDocument" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.DynamicDiscoveryDocument.ExcludePaths">
      <summary>Gets or sets the file-system directory paths that should not be searched for references to add to a discovery document.</summary>
      <returns>An array of <see cref="T:System.Web.Services.Discovery.ExcludePathInfo" /> objects.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.Load(System.IO.Stream)">
      <summary>Deserializes an XML document into a <see cref="T:System.Web.Services.Discovery.DynamicDiscoveryDocument" />  instance.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.DynamicDiscoveryDocument" />.</returns>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object from which the XML dynamic discovery document is deserialized.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Web.Services.Discovery.DynamicDiscoveryDocument.Namespace">
      <summary>Contains the dynamic discovery document namespace "urn:schemas-dynamicdiscovery:disco.2000-03-17". This field is constant.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.DynamicDiscoveryDocument.Write(System.IO.Stream)">
      <summary>Serializes a <see cref="T:System.Web.Services.Discovery.DynamicDiscoveryDocument" />  instance into an XML document specified as an output stream.</summary>
      <param name="stream">A <see cref="T:System.IO.Stream" /> object to which the XML dynamic discovery document is serialized.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Discovery.ExcludePathInfo">
      <summary>Represents a file system directory path that should not be searched for references to add to a Web services discovery document.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ExcludePathInfo.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ExcludePathInfo" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.ExcludePathInfo.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.ExcludePathInfo" /> class and specifies the file system path to exclude from searches. </summary>
      <param name="path">The path to exclude from searches.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.ExcludePathInfo.Path">
      <summary>Gets or sets the file system directory path that should not be searched for references to add to a discovery document.</summary>
      <returns>The file system directory path that should be excluded from searches.</returns>
    </member>
    <member name="T:System.Web.Services.Discovery.SchemaReference">
      <summary>Represents a reference in a discovery document to an XML Schema Definition (XSD) language schema. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.SchemaReference" /> class using default values.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.SchemaReference" /> class using the supplied URL as the XSD schema reference.</summary>
      <param name="url">The URL for the XSD schema. Initializes the <see cref="P:System.Web.Services.Discovery.SchemaReference.Ref" /> property. </param>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.DefaultFilename">
      <summary>Gets the name of the default file to use when saving the referenced XSD schema.</summary>
      <returns>Default name to use when saving the referenced XSD schema to a file.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="F:System.Web.Services.Discovery.SchemaReference.Namespace">
      <summary>XML namespace for XSD schema references in discovery documents.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.ReadDocument(System.IO.Stream)">
      <summary>Reads and returns the XSD schema from the passed <see cref="T:System.IO.Stream" />.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchema" /> containing the contents of the referenced XSD schema.</returns>
      <param name="stream">
        <see cref="T:System.IO.Stream" /> containing the XSD schema. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Ref">
      <summary>Gets or sets the URL to the referenced XSD schema.</summary>
      <returns>The URL for the referenced XSD schema. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Schema">
      <summary>Gets an <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XSD schema.</summary>
      <returns>An <see cref="T:System.Xml.Schema.XmlSchema" /> object representing the XSD schema.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" /> property is null.-or- An error occurred during the download or resolution of the XSD schema using <see cref="P:System.Web.Services.Discovery.DiscoveryReference.ClientProtocol" />. </exception>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.TargetNamespace">
      <summary>Gets or sets the targetNamespace XML attribute of the XSD schema.</summary>
      <returns>The targetNamespace XML attribute of the XSD schema. The default value is null.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.SchemaReference.Url">
      <summary>Gets or sets the URL for the schema reference.</summary>
      <returns>The URL for the referenced XSD schema. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="M:System.Web.Services.Discovery.SchemaReference.WriteDocument(System.Object,System.IO.Stream)">
      <summary>Writes the passed XSD schema into the passed <see cref="T:System.IO.Stream" />.</summary>
      <param name="document">The <see cref="T:System.Xml.Schema.XmlSchema" /> to write into <paramref name="stream" />. </param>
      <param name="stream">The <see cref="T:System.IO.Stream" /> into which the serialized XSD schema is written. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Discovery.SoapBinding">
      <summary>Represents a SOAP binding in a discovery document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.SoapBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.SoapBinding" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Discovery.SoapBinding.Address">
      <summary>Gets or sets the URL of the XML Web service implementing the SOAP binding.</summary>
      <returns>The URL of the XML Web service implementing the SOAP binding. The default value is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.Services.Discovery.SoapBinding.Binding">
      <summary>Gets or sets the XML qualified name of the SOAP binding implemented by the XML Web service.</summary>
      <returns>The <see cref="T:System.Xml.XmlQualifiedName" /> of the SOAP binding implemented by the XML Web service.</returns>
    </member>
    <member name="F:System.Web.Services.Discovery.SoapBinding.Namespace">
      <summary>The XML namespace of the element that specifies a SOAP binding within a discovery document.</summary>
    </member>
    <member name="T:System.Web.Services.Discovery.XmlSchemaSearchPattern">
      <summary>Obtains the file locations of XML Schema documents for use in populating a Web services discovery document. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Discovery.XmlSchemaSearchPattern.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Discovery.XmlSchemaSearchPattern" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Discovery.XmlSchemaSearchPattern.GetDiscoveryReference(System.String)">
      <summary>Returns the <see cref="T:System.Web.Services.Discovery.SchemaReference" /> object for a given discovery document.</summary>
      <returns>A <see cref="T:System.Web.Services.Discovery.SchemaReference" /> object that specifies the file name for an XML Schema document.</returns>
      <param name="filename">The file system path of the XML Schema document.</param>
    </member>
    <member name="P:System.Web.Services.Discovery.XmlSchemaSearchPattern.Pattern">
      <summary>Gets the file name pattern to use as a search target.</summary>
      <returns>The literal string "*.xsd".</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.AnyReturnReader">
      <summary>Provides a minimal reader of incoming response return values for Web service clients implemented using HTTP but without SOAP. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.AnyReturnReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns the parameter passed to the <see cref="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)" /> method.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the initializer for the specified method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />  that indicates the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)">
      <summary>Initializes an instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class.</summary>
      <param name="o">Another instance of the <see cref="T:System.Web.Services.Protocols.AnyReturnReader" /> class, on which the <see cref="M:System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method was previously called.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)">
      <summary>Returns the input HTTP response stream.</summary>
      <param name="response">A representation of the HTTP response sent by a Web service, containing the output message for an operation.</param>
      <param name="responseStream">An output stream whose content is the body of the HTTP response represented by the <paramref name="response" /> parameter.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.HtmlFormParameterReader">
      <summary>Reads incoming request parameters for Web services implemented using HTTP, with name-value pairs encoded like an HTML form rather than as a SOAP message.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HtmlFormParameterReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HtmlFormParameterReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HtmlFormParameterReader.Read(System.Web.HttpRequest)">
      <summary>Reads name-value pairs into Web method parameter values.</summary>
      <returns>An array of objects contain the name-value pairs.</returns>
      <param name="request">An <see cref="T:System.Web.HttpRequest" /> object containing HTML name-value pairs encoded in the body of an HTTP request.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Protocols.HtmlFormParameterWriter">
      <summary>Writes outgoing request parameters for Web services implemented using HTTP with name-value pairs encoded like an HTML form rather than as a SOAP message.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HtmlFormParameterWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HtmlFormParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])">
      <summary>Initializes the outgoing HTTP request. </summary>
      <param name="request">The outgoing request.</param>
      <param name="values">The Web method parameter values.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.HtmlFormParameterWriter.UsesWriteRequest">
      <summary>Gets a value that indicates whether Web method parameter values are serialized to the outgoing HTTP request body.</summary>
      <returns>true to indicate that the Web method parameters are serialized. This property always returns true.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HtmlFormParameterWriter.WriteRequest(System.IO.Stream,System.Object[])">
      <summary>Serializes Web method parameter values into a stream representing the outgoing HTTP request body.</summary>
      <param name="requestStream">An input stream for the outgoing HTTP request's body.</param>
      <param name="values">The Web method parameter values.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpGetClientProtocol">
      <summary>The base class for XML Web service client proxies that use the HTTP-GET protocol.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</summary>
      <returns>The <see cref="T:System.Net.WebRequest" /> instance.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null or has a length of zero. </exception>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpMethodAttribute">
      <summary>Applying this attribute to an XML Web service client using HTTP-GET or HTTP-POST, sets the types that serialize the parameters sent to an XML Web service method and read the response from the XML Web service method. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpMethodAttribute.#ctor(System.Type,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />.</summary>
      <param name="returnFormatter">Initializes the <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter" /> property to a <see cref="T:System.Type" /> that deserializes the response from an XML Web service method. </param>
      <param name="parameterFormatter">Initializes the <see cref="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter" /> property to a <see cref="T:System.Type" /> that serializes parameters sent from an XML Web service client to an XML Web service method. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter">
      <summary>Gets or sets a <see cref="T:System.Type" /> that serializes parameters sent from an XML Web service client to the XML Web service method.</summary>
      <returns>A <see cref="T:System.Type" /> that serializes parameters sent from an XML Web service client to an XML Web service method. There is no default.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter">
      <summary>Gets or sets a <see cref="T:System.Type" /> that deserializes the response from an XML Web service method.</summary>
      <returns>A <see cref="T:System.Type" /> that deserializes the response from an XML Web service method. There is no default.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpPostClientProtocol">
      <summary>The base class for XML Web service client proxies that use the HTTP-POST protocol.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpPostClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpPostClientProtocol.GetWebRequest(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified URI.</summary>
      <returns>The <see cref="T:System.Net.WebRequest" /> instance.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null or has a length of zero. </exception>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpSimpleClientProtocol">
      <summary>Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of a method of an XML Web service.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</returns>
      <param name="methodName">The name of the XML Web service method. </param>
      <param name="requestUrl">The URL to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <param name="parameters">An array of objects containing the parameters to pass to the XML Web service method. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class. </param>
      <param name="callback">The delegate to call when the asynchronous method call is complete. If <paramref name="callback" /> is null, the delegate is not called. </param>
      <param name="asyncState">The additional information supplied by a client. </param>
      <exception cref="T:System.Exception">The request reached the server computer, but was not processed successfully. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>Completes asynchronous invocation of an XML Web service method using HTTP.</summary>
      <returns>An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])">
      <summary>Invokes an XML Web service method using HTTP.</summary>
      <returns>An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</returns>
      <param name="methodName">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method. </param>
      <param name="requestUrl">The URL of the XML Web service method that the client is requesting. </param>
      <param name="parameters">An array of objects containing the parameters to pass to the remote XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class. </param>
      <exception cref="T:System.Exception">The request reached the server computer, but was not processed successfully. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Invokes the specified method asynchronously.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="requestUrl">The request URL of the invoked web service.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes the specified method asynchronously while maintaining an associated state.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="requestUrl">The request URL of the invoked web service.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
      <param name="userState">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.HttpWebClientProtocol">
      <summary>The base class for all XML Web service client proxies that use the HTTP transport protocol.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect">
      <summary>Gets or sets whether the client automatically follows server redirects.</summary>
      <returns>true to automatically redirect the client to follow server redirects; otherwise, false. The default is false.</returns>
      <exception cref="T:System.Net.WebException">The <see cref="P:System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect" /> property is false and the Web server attempts to redirect the request. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)">
      <summary>Cancels an asynchronous call to an XML Web service method, unless the call has already completed.</summary>
      <param name="userState">The object provided in the last parameter to the asynchronous call of the Begin method.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates">
      <summary>Gets the collection of client certificates.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509CertificateCollection" /> that represents the client certificates.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer">
      <summary>Gets or sets the collection of cookies.</summary>
      <returns>A <see cref="T:System.Net.CookieContainer" /> that represents the cookies for a Web Services client.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression">
      <summary>Gets or sets a <see cref="T:System.Boolean" /> that indicates whether decompression is enabled for this <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />. </summary>
      <returns>true if decompression is enabled for this <see cref="T:System.Web.Services.Protocols.HttpWebClientProtocol" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> for each XML Web service method exposed by the specified type, and stores the mappings in the specified <see cref="T:System.Collections.ArrayList" />.</summary>
      <returns>true if <paramref name="type" /> can be assigned to a <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />; otherwise, false.</returns>
      <param name="type">The <see cref="T:System.Type" /> that exposes the XML Web service methods.</param>
      <param name="mappings">A <see cref="T:System.Collections.ArrayList" /> that is used to store the mappings.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> for each XML Web service method exposed by the specified types, and stores the mappings in the specified <see cref="T:System.Collections.ArrayList" />, as well as in a <see cref="T:System.Collections.Hashtable" /> that this method returns.</summary>
      <returns>A <see cref="T:System.Collections.Hashtable" /> that contains the <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> for each XML Web service method exposed by the specified types. The types contained in <paramref name="types" /> are used as keys.</returns>
      <param name="types">An array of type <see cref="T:System.Type" /> that contains the types that expose the XML Web service methods.</param>
      <param name="mappings">A <see cref="T:System.Collections.ArrayList" /> that is used to store the mappings.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> for the specified URI.</summary>
      <returns>The created <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> for creating the <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>Returns a response from a synchronous request to an XML Web service method.</summary>
      <returns>The <see cref="T:System.Net.WebResponse" />.</returns>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> from which to get the response. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Returns a response from an asynchronous request to an XML Web service method.</summary>
      <returns>The <see cref="T:System.Net.WebResponse" />.</returns>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> from which to get the response. </param>
      <param name="result">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> when the response has completed. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy">
      <summary>Gets or sets proxy information for making an XML Web service request through a firewall.</summary>
      <returns>An <see cref="T:System.Net.IWebProxy" /> that contains the proxy information for making requests through a firewall. The default value is the operating system proxy settings.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing">
      <summary>Gets or sets a value that indicates whether connection sharing is enabled when the client uses NTLM authentication to connect to the Web server that hosts the XML Web service.</summary>
      <returns>true if connection sharing is enabled; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent">
      <summary>Gets or sets the value for the user agent header that is sent with each request.</summary>
      <returns>The value of the HTTP protocol user agent header. The default is "MS Web Services Client Protocol <paramref name="number" /> ", where <paramref name="number" /> is the version of the common language runtime (for example, 1.0.3705.0).</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.InvokeCompletedEventArgs">
      <summary>Represents the result of an asynchronously invoked web method.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.InvokeCompletedEventArgs.Results">
      <summary>Gets the results returned by the Web method.</summary>
      <returns>An array of objects returned by the Web method.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.InvokeCompletedEventHandler">
      <summary>Represents an event handler that accepts the results of asynchronously invoked Web methods. This class cannot be inherited.</summary>
      <param name="sender">A reference to the Web service proxy.</param>
      <param name="e">An <see cref="T:System.Web.Services.Protocols.InvokeCompletedEventArgs" /> containing the results of the method invocation.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.LogicalMethodInfo">
      <summary>Represents the attributes and metadata for an XML Web service method. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.#ctor(System.Reflection.MethodInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class with the <see cref="T:System.Reflection.MethodInfo" /> passed in.</summary>
      <param name="methodInfo">A <see cref="T:System.Reflection.MethodInfo" /> to initialize the properties of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> common to the <see cref="T:System.Reflection.MethodInfo" />. </param>
      <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Reflection.MethodBase.IsStatic" /> property of the <paramref name="methodInfo" /> parameter is true.-or- The <see cref="M:System.Reflection.MethodBase.GetParameters" /> method of the <paramref name="methodInfo" /> parameter does not contain all the parameters required by the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncCallbackParameter">
      <summary>Gets the parameter information for the <paramref name="AsyncCallback" /> parameter of a Begin method in an asynchronous invocation.</summary>
      <returns>A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncCallback" /> parameter of a Begin asynchronous method invocation.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncResultParameter">
      <summary>Gets the return value of a Begin asynchronous method invocation.</summary>
      <returns>A <see cref="T:System.Reflection.ParameterInfo" /> representing the <see cref="T:System.IAsyncResult" /> returned from a Begin asynchronous method invocation.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.AsyncStateParameter">
      <summary>Gets the parameter information for the <paramref name="AsyncState" /> parameter of a Begin method in an asynchronous invocation.</summary>
      <returns>A <see cref="T:System.Reflection.ParameterInfo" /> representing the <paramref name="AsyncState" /> parameter of a Begin method in an asynchronous invocation.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous invocation of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> which is passed to <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)" /> to obtain the return values from the remote method call.</returns>
      <param name="target">The instance of the <see cref="T:System.Object" /> on which to invoke the method on. </param>
      <param name="values">An argument list for the invoked method. This is an array of objects with the same number, order, and type as the parameters of the method. If the method does not require any parameters, <paramref name="values" /> should be null. </param>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If <paramref name="callback" /> is null, the delegate is not called. </param>
      <param name="asyncState">State information that is passed on to the delegate. </param>
      <exception cref="T:System.Reflection.TargetException">The <paramref name="target" /> parameteris null. </exception>
      <exception cref="T:System.ArgumentException">The number, type, and order of parameters in <paramref name="values" /> do not match the signature of the invoked method. </exception>
      <exception cref="T:System.MemberAccessException">The caller does not have permission to invoke the method. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.BeginMethodInfo">
      <summary>Gets the attributes and metadata for a Begin method in an asynchronous invocation.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a Begin asynchronous method invocation.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[])">
      <summary>Given an array of <see cref="T:System.Reflection.MethodInfo" /> that can contain information about both asynchronous and synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />.</returns>
      <param name="methodInfos">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects. </param>
      <exception cref="T:System.InvalidOperationException">A Begin asynchronous method is included in <paramref name="methodInfos" /> without a corresponding End method. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Create(System.Reflection.MethodInfo[],System.Web.Services.Protocols.LogicalMethodTypes)">
      <summary>Given an array of <see cref="T:System.Reflection.MethodInfo" />, where the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> can be restricted to only asynchronous or synchronous methods, creates an array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />, representing the methods within <paramref name="methodInfos" />, filtered by the value of <paramref name="types" />.</returns>
      <param name="methodInfos">An array of <see cref="T:System.Reflection.MethodInfo" /> representing the asynchronous and synchronous methods for which to create <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> objects. </param>
      <param name="types">A bitwise combination of the <see cref="T:System.Web.Services.Protocols.LogicalMethodTypes" /> values. Determines whether just asynchronous or synchronous methods or both are included in the returned array of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />. </param>
      <exception cref="T:System.InvalidOperationException">A Begin asynchronous method is included in <paramref name="methodInfos" /> without a corresponding End method. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.CustomAttributeProvider">
      <summary>Gets the custom attributes applied to the method.</summary>
      <returns>An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.DeclaringType">
      <summary>Gets the class that declares the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>The <see cref="T:System.Type" /> for the class declaring the method represented by the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.EndInvoke(System.Object,System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An array of objects containing the return value and any by-reference or out parameters of the derived class method.</returns>
      <param name="target">The instance of the <see cref="T:System.Object" /> on which to invoke the method. </param>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from <see cref="M:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke(System.Object,System.Object[],System.AsyncCallback,System.Object)" />. </param>
      <exception cref="T:System.Reflection.TargetException">The <paramref name="target" /> parameter is null. </exception>
      <exception cref="T:System.MemberAccessException">The caller does not have permission to invoke the method. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The invoked method throws an exception. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.EndMethodInfo">
      <summary>Gets the attributes and metadata for an End method of an asynchronous invocation to a method.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for an End asynchronous method invocation.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttribute(System.Type)">
      <summary>Returns the first custom attribute applied to the type, if any custom attributes are applied to the type.</summary>
      <returns>An <see cref="T:System.Object" /> containing the first custom attribute applied to the <paramref name="type" /> parameter.</returns>
      <param name="type">The <see cref="T:System.Type" /> to which the custom attributes are applied. </param>
      <exception cref="T:System.TypeLoadException">The custom attribute type can not be loaded. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.GetCustomAttributes(System.Type)">
      <summary>Returns the custom attributes applied to the specified type.</summary>
      <returns>An array of <see cref="T:System.Object" /> containing the custom attributes applied to <paramref name="type" />.</returns>
      <param name="type">The <see cref="T:System.Type" /> to which the custom attributes are applied. </param>
      <exception cref="T:System.TypeLoadException">The custom attribute type can not be loaded. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters">
      <summary>Gets the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An array of type <see cref="T:System.Reflection.ParameterInfo" /> containing the parameters passed into the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.Invoke(System.Object,System.Object[])">
      <summary>Invokes the method represented by the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>An array of type <see cref="T:System.Object" /> representing the return value and out parameters of the invoked method.</returns>
      <param name="target">The instance of the <see cref="T:System.Object" /> to invoke the method. </param>
      <param name="values">An argument list for the invoked method. This is an array of objects with the same number, order, and type as the parameters of the method. If the method does not require any parameters, the <paramref name="values" /> parameter should be null. </param>
      <exception cref="T:System.Reflection.TargetException">The <paramref name="target" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentException">The number, type, and order of parameters in the <paramref name="values" /> parameter do not match the signature of the invoked method. </exception>
      <exception cref="T:System.MemberAccessException">The caller does not have permission to invoke the method. </exception>
      <exception cref="T:System.Reflection.TargetInvocationException">The invoked method throws an exception. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync">
      <summary>Gets a value indicating whether the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is invoked asynchronously.</summary>
      <returns>true if the method is invoked asynchronously; otherwise, false.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.IsBeginMethod(System.Reflection.MethodInfo)">
      <summary>Returns a value indicating whether the method passed in represents a Begin method of an asynchronous invocation.</summary>
      <returns>true if the <paramref name="methodInfo" /> parameter is a Begin method of an asynchronous invocation; otherwise, false.</returns>
      <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> that might be a Begin method of an asynchronous invocation. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.IsEndMethod(System.Reflection.MethodInfo)">
      <summary>Returns a value indicating whether the method passed in represents an End method of an asynchronous invocation.</summary>
      <returns>true if the <paramref name="methodInfo" /> parameter is an End method of an asynchronous invocation; otherwise, false.</returns>
      <param name="methodInfo">The <see cref="T:System.Reflection.MethodInfo" /> that might be an End method of an asynchronous invocation. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.IsVoid">
      <summary>Gets a value indicating whether the return type for the method represented by the instance of <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> is void.</summary>
      <returns>true if the return type is void; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.MethodInfo">
      <summary>Gets the attributes and metadata for a synchronous method.</summary>
      <returns>A <see cref="T:System.Reflection.MethodInfo" /> representing the attributes and metadata for a method. If <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.IsAsync" /> is true, then the value of this property is null.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.Name">
      <summary>Gets the name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>The name of the method represented by this <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.OutParameters">
      <summary>Gets the out parameters for the method.</summary>
      <returns>An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the out parameters for the method, in order.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.Parameters">
      <summary>Gets the parameters for the method.</summary>
      <returns>An array of <see cref="T:System.Reflection.ParameterInfo" /> representing the parameters for the method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnType">
      <summary>Gets the return type of this method.</summary>
      <returns>The <see cref="T:System.Type" /> returned by this method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.LogicalMethodInfo.ReturnTypeCustomAttributeProvider">
      <summary>Gets the custom attributes for the return type.</summary>
      <returns>An <see cref="T:System.Reflection.ICustomAttributeProvider" /> representing the custom attributes for the return type.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.LogicalMethodInfo.ToString">
      <summary>Returns a string that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</summary>
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" />.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.LogicalMethodTypes">
      <summary>Specifies how the XML Web service method was invoked.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.LogicalMethodTypes.Sync">
      <summary>The XML Web service method is invoked synchronously.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.LogicalMethodTypes.Async">
      <summary>The XML Web service method is invoked asynchronously.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.MatchAttribute">
      <summary>Represents the attributes of a match made using text pattern matching. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MatchAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MatchAttribute" /> class with the specified pattern.</summary>
      <param name="pattern">A string that represents the pattern to match. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Capture">
      <summary>Gets or sets a value that represents the index of a match within a grouping.</summary>
      <returns>A value that represents the index of a match within a grouping.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Group">
      <summary>Gets or sets a value that represents a grouping of related matches.</summary>
      <returns>A value that represents a grouping of related matches </returns>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.IgnoreCase">
      <summary>Gets or sets a value that indicates whether the pattern to match is case insensitive.</summary>
      <returns>true if matching is case insensitive; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.MaxRepeats">
      <summary>Gets or sets the maximum number of values to return from the match.</summary>
      <returns>The maximum number of values to return from the match. The default value is -1, which refers to returning all values.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.MatchAttribute.Pattern">
      <summary>Gets or sets a regular expression that represents the pattern to match.</summary>
      <returns>A regular expression that represents the pattern to match.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.MimeFormatter">
      <summary>Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)">
      <summary>Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</returns>
      <param name="type">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</param>
      <param name="initializer">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</returns>
      <param name="type">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</param>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>When overridden in a derived class, returns an initializer for the specified method.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the initializer for the specified method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])">
      <summary>Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
      <returns>An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
      <param name="type"></param>
      <param name="methodInfos"></param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
      <summary>When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</summary>
      <returns>An array of initializer objects corresponding to the input array of method definitions.</returns>
      <param name="methodInfos"></param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)">
      <summary>When overridden in a derived class, initializes an instance.</summary>
      <param name="initializer">An object of a type appropriate to the particular class that is implementing the method. </param>
    </member>
    <member name="T:System.Web.Services.Protocols.MimeParameterReader">
      <summary>Provides a common base implementation for readers of request parameters for Web services implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeParameterReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterReader.Read(System.Web.HttpRequest)">
      <summary>When overridden in a derived class, deserializes an HTTP request into an array of Web method parameter values.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects that contains the deserialized HTTP request.</returns>
      <param name="request">An <see cref="T:System.Web.HttpRequest" /> object containing the input message for an operation.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.MimeParameterWriter">
      <summary>Provides a common base implementation for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeParameterWriter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterWriter.GetRequestUrl(System.String,System.Object[])">
      <summary>When overridden in a derived class, modifies the outgoing HTTP request's Uniform Request Locator (URL).</summary>
      <returns>A <see cref="T:System.String" /> object that contains the modified, outgoing HTTP request's Uniform Request Locator (URL).</returns>
      <param name="url">The HTTP request's original Uniform Resource Locator (URL).</param>
      <param name="parameters">The Web method parameter values to be added to the URL, if necessary.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])">
      <summary>When overridden in a derived class, initializes the out-going HTTP request.</summary>
      <param name="request">The out-going request, where the <see cref="T:System.Net.WebRequest" /> class allows transport protocols besides HTTP.</param>
      <param name="values">The Web method parameter values.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.MimeParameterWriter.RequestEncoding">
      <summary>Gets or sets the encoding used to write parameters to the HTTP request.</summary>
      <returns>The encoding used to write parameters to the HTTP request.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest">
      <summary>Gets a value that indicates whether Web method parameter values are serialized to the out-going HTTP request body.</summary>
      <returns>true if the Web method parameter values are serialized to the out-going HTTP request body; otherwise false.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])">
      <summary>When overridden in a derived class, serializes Web method parameter values into a stream representing the outgoing HTTP request body.</summary>
      <param name="requestStream">An input stream for the outgoing HTTP request's body.</param>
      <param name="values">The Web method parameter values.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.MimeReturnReader">
      <summary>Provides a common base implementation for readers of incoming response return values for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeReturnReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeReturnReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.MimeReturnReader.Read(System.Net.WebResponse,System.IO.Stream)">
      <summary>When overridden in a derived class, deserializes an HTTP response into a Web method return value.</summary>
      <param name="response">A <see cref="T:System.Net.WebResponse" /> object containing the output message for an operation.</param>
      <param name="responseStream">A <see cref="T:System.IO.Stream" /> whose content is the body of the HTTP response represented by the <see cref="T:System.Net.WebResponse" /> parameter.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.NopReturnReader">
      <summary>Serves as a non-acting reader of incoming response return values for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.NopReturnReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.NopReturnReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.NopReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>An initializer for the specified method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.NopReturnReader.Initialize(System.Object)">
      <summary>Initializes an instance.</summary>
      <param name="initializer">Another instance of the <see cref="T:System.Web.Services.Protocols.NopReturnReader" /> class, on which the <see cref="M:System.Web.Services.Protocols.NopReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method was previously called.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.NopReturnReader.Read(System.Net.WebResponse,System.IO.Stream)">
      <summary>Returns null instead of deserializing the HTTP response stream into a Web method return value.</summary>
      <returns>null.</returns>
      <param name="response">A <see cref="T:System.Net.WebResponse" /> object  containing the output message for an operation.</param>
      <param name="responseStream">A <see cref="T:System.IO.Stream" /> whose content is the body of the HTTP response represented by the <paramref name="response" /> parameter.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.PatternMatcher">
      <summary>Searches HTTP response text for return values for Web service clients.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.PatternMatcher.#ctor(System.Type)">
      <summary>Creates a <see cref="T:System.Web.Services.Protocols.PatternMatcher" /> instance based on the input type.</summary>
      <param name="type">A <see cref="T:System.Type" /> that specifies the return type for a Web method.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.PatternMatcher.Match(System.String)">
      <summary>Searches a text input to deserialize an object representing a Web method return value.</summary>
      <param name="text">The text to search, which is the body of the HTTP response.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.ServerProtocol">
      <summary>The .NET Framework uses classes that are derived from the <see cref="T:System.Web.Services.Protocols.ServerProtocol" /> class to process XML Web service requests.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerProtocol.#ctor">
      <summary>The constructor for <see cref="T:System.Web.Services.Protocols.ServerProtocol" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerProtocol.AddToCache(System.Type,System.Type,System.Object)">
      <summary>Stores a <see cref="T:System.Object" /> in the cache using a key that is created from the specified protocol type and server type.</summary>
      <param name="protocolType">A <see cref="T:System.Type" /> that is used to create the key to store <paramref name="value" /> in the cache.</param>
      <param name="serverType">A <see cref="T:System.Type" /> that is used to create the key to store <paramref name="value" /> in the cache.</param>
      <param name="value">The <see cref="T:System.Object" /> to be stored in the cache.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.ServerProtocol.Context">
      <summary>Gets the <see cref="T:System.Web.HttpContext" /> object for the derived class.</summary>
      <returns>An <see cref="T:System.Web.HttpContext" /> object.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerProtocol.GetFromCache(System.Type,System.Type)">
      <summary>Retrieves the <see cref="T:System.Object" /> that is stored in the cache using the key that was created from the specified protocol type and server type.</summary>
      <returns>The <see cref="T:System.Object" /> that is stored in the cache using the key that was created from <paramref name="protocolType" /> and <paramref name="serverType" />.</returns>
      <param name="protocolType">A <see cref="T:System.Type" /> that is used to create the key to retrieve <paramref name="value" /> from the cache.</param>
      <param name="serverType">A <see cref="T:System.Type" /> that is used to create the key to retrieve <paramref name="value" /> from the cache.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.ServerProtocol.Request">
      <summary>Gets the <see cref="T:System.Web.HttpRequest" /> object for the derived class.</summary>
      <returns>An <see cref="T:System.Web.HttpRequest" /> object. </returns>
    </member>
    <member name="P:System.Web.Services.Protocols.ServerProtocol.Response">
      <summary>Gets the <see cref="T:System.Web.HttpResponse" /> object for the derived class.</summary>
      <returns>An <see cref="T:System.Web.HttpResponse" /> object.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.ServerProtocol.Target">
      <summary>Gets the service object that is invoked.</summary>
      <returns>The service object that is invoked.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.ServerProtocolFactory">
      <summary>The .NET Framework uses classes that are derived from the <see cref="T:System.Web.Services.Protocols.ServerProtocolFactory" /> class to process XML Web service requests.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerProtocolFactory.#ctor">
      <summary>The constructor for <see cref="T:System.Web.Services.Protocols.ServerProtocolFactory" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerProtocolFactory.CreateIfRequestCompatible(System.Web.HttpRequest)">
      <summary>Returns a <see cref="T:System.Web.Services.Protocols.ServerProtocol" /> that can be used to process the XML Web service request specified by the <paramref name="request" /> parameter.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.ServerProtocol" /> that can be used to process the XML Web service request specified by the <paramref name="request" /> parameter.</returns>
      <param name="request">The <see cref="T:System.Web.HttpRequest" /> that represents the Web service request.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.ServerType">
      <summary>The .NET Framework uses the <see cref="T:System.Web.Services.Protocols.ServerType" /> class to process XML Web service requests.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ServerType.#ctor(System.Type)">
      <summary>Creates a new <see cref="T:System.Web.Services.Protocols.ServerType" />.</summary>
      <param name="type">The <see cref="T:System.Type" /> that exposes the XML Web service.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.Soap12FaultCodes">
      <summary>Defines the SOAP fault codes that appear in a SOAP message when an error occurs while communicating with XML Web services using the SOAP version 1.2 protocol.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.DataEncodingUnknownFaultCode">
      <summary>Represents the SOAP version 1.2 DataEncodingUnknown fault code indicating the SOAP message is encoded in an unrecognized format.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.EncodingMissingIdFaultCode">
      <summary>Represents the fault code for missing ID in SOAP encoding data.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.EncodingUntypedValueFaultCode">
      <summary>Represents the SOAP version 1.2 enc:UntypedValue fault subcode indicating that the SOAP message was RPC-encoded and the type name property of an encoded graph node was not specified.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.MustUnderstandFaultCode">
      <summary>Represents the SOAP version 1.2 MustUnderstand fault code indicating a SOAP header marked with the MustUnderstand attribute was not processed.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.ReceiverFaultCode">
      <summary>Represents the SOAP version 1.2 Receiver fault code indicating an error occurred during the processing of a client call on the server due to a problem with the recipient.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.RpcBadArgumentsFaultCode">
      <summary>Represents the SOAP version 1.2 rpc:BadArguments fault subcode indicating that arguments sent to the XML Web service method were incorrect or could not be parsed.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.RpcProcedureNotPresentFaultCode">
      <summary>Represents the SOAP version 1.2 rpc:ProcedureNotPresent fault subcode indicating the XML Web service does not support the requested XML Web service method.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.SenderFaultCode">
      <summary>Represents the SOAP version 1.2 Sender fault code indicating a client call was not formatted correctly or did not contain the appropriate information.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.Soap12FaultCodes.VersionMismatchFaultCode">
      <summary>Represents the SOAP version 1.2 VersionMismatch fault code indicating the XML Web service expected SOAP messages conforming to the SOAP 1.2 specification, yet received one conforming to SOAP 1.1.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapClientMessage">
      <summary>Represents the data in a SOAP request sent or a SOAP response received by an XML Web service client at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Action">
      <summary>Gets the SOAPAction HTTP request header field for the SOAP request or SOAP response.</summary>
      <returns>The SOAPAction HTTP request header field for the SOAP request or SOAP response.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Client">
      <summary>Gets an instance of the client proxy class, which derives from <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />.</summary>
      <returns>An instance of the client proxy class.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.MethodInfo">
      <summary>Gets a representation of the method prototype of the XML Web service method for which the SOAP request is intended.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the XML Web service method for which the SOAP request is intended.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.OneWay">
      <summary>Gets a value indicating whether the client waits for the server to finish processing an XML Web service method.</summary>
      <returns>true if the client does not wait for the server to completely process a method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.SoapVersion">
      <summary>Gets the version of the SOAP protocol used to communicate with the XML Web service.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values. The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapClientMessage.Url">
      <summary>Gets the URL of the XML Web service.</summary>
      <returns>The URL of the XML Web service.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute">
      <summary>Applying the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> to a method specifies that SOAP messages to and from the method use Document formatting.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentMethodAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> class, setting the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> property to the value of the <paramref name="action" /> parameter.</summary>
      <param name="action">The SOAPAction HTTP header field of the SOAP request. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action" /> property. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Action">
      <summary>Gets or sets the SOAPAction HTTP header field of the SOAP request.</summary>
      <returns>The SOAPAction HTTP header field of the SOAP request. The default is http://tempuri.org/MethodName, where MethodName is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Binding">
      <summary>Gets or sets the binding an XML Web service method is implementing an operation for.</summary>
      <returns>The binding an XML Web service method is implementing an operation for. The default is the name of the XML Web service with "Soap" appended.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay">
      <summary>Gets or sets whether an XML Web service client waits for the Web server to finish processing an XML Web service method.</summary>
      <returns>true if the XML Web service client does not wait for the Web server to completely process an XML Web service method. The default value is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ParameterStyle">
      <summary>Gets or sets whether parameters are encapsulated within a single XML element beneath the Body element in the XML portion of a SOAP message.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> for SOAP messages sent to and from an XML Web service method. The default value is <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestElementName">
      <summary>Gets or sets the XML element associated with the SOAP request for an XML Web service method, which is defined in a service description as an operation.</summary>
      <returns>The XML element associated with the SOAP request for an XML Web service method, which is defined in an service description as an operation. The default value is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.RequestNamespace">
      <summary>Gets or sets the namespace associated with the SOAP request for an XML Web service method.</summary>
      <returns>The XML namespace associated with the SOAP request for an XML Web service method. The default is http://tempuri.org/.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseElementName">
      <summary>Gets or sets the XML element associated with the SOAP response for an XML Web service method.</summary>
      <returns>The XML element associated with the SOAP request for an XML Web service method. The default value is WebServiceNameResult, where WebServiceName is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.ResponseNamespace">
      <summary>Gets or sets the XML namespace associated with the SOAP response for an XML Web service method.</summary>
      <returns>The XML namespace associated with the SOAP response for an XML Web service method. The default is http://tempuri.org/.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.Use">
      <summary>Gets or sets the parameter formatting for an XML Web service method within the XML portion of a SOAP message.</summary>
      <returns>The <see cref="T:System.Web.Services.Description.SoapBindingUse" /> for the XML Web service method. The default is <see cref="F:System.Web.Services.Description.SoapBindingUse.Literal" />.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute">
      <summary>Applying the optional <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> to an XML Web service sets the default format of SOAP requests and responses sent to and from XML Web service methods within the XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class setting all properties to their default values.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class setting the parameter formatting.</summary>
      <param name="use">The parameter formatting of the XML Web service. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapDocumentServiceAttribute.#ctor(System.Web.Services.Description.SoapBindingUse,System.Web.Services.Protocols.SoapParameterStyle)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> class that sets the parameter formatting and sets whether parameters are encapsulated within a single XML element, under the Body element, in SOAP messages.</summary>
      <param name="use">The parameter formatting style. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use" /> property. </param>
      <param name="paramStyle">Sets whether parameters are encapsulated within a single XML element, under the Body element, in SOAP messages sent to and from XML Web service methods within the XML Web service. Sets the <see cref="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle" /> property. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.ParameterStyle">
      <summary>Gets or sets the default setting that controls whether parameters are encapsulated within a single element following the &lt;Body&gt; element in the XML portion of a SOAP message for XML Web service methods of the XML Web service.</summary>
      <returns>The default <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> for SOAP requests and SOAP responses to and from XML Web service methods within the XML Web service. If not set, the default is <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.RoutingStyle">
      <summary>Gets or sets how SOAP messages are routed to the XML Web service.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapServiceRoutingStyle" /> that represents how SOAP messages are routed to the XML Web service. The default value is <see cref="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.SoapAction" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapDocumentServiceAttribute.Use">
      <summary>Gets or sets the default parameter formatting for an XML Web service.</summary>
      <returns>The default <see cref="T:System.Web.Services.Description.SoapBindingUse" /> for the XML Web service. If not set, the default is <see cref="F:System.Web.Services.Description.SoapBindingUse.Literal" />.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapException">
      <summary>Represents the exception that is thrown when an XML Web service method is called over SOAP and an exception occurs.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message and exception code.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and reference to the root cause of the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
      <param name="innerException">An exception that is the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and URI that identifies the piece of code that caused the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
      <param name="actor">A URI that identifies the code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the code that caused the exception, and reference to the root cause of the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
      <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property. </param>
      <param name="innerException">An exception that is the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.String,System.String,System.Xml.XmlNode,System.Web.Services.Protocols.SoapFaultSubCode,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, URI that represents the XML Web service's function in processing the SOAP message, the human language associated with the exception, the application-specific exception information, the subcode for the SOAP fault and reference to the root cause of the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="role">A URI that represents the XML Web service's function in processing the SOAP message. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Role" /> property.</param>
      <param name="lang">A human language associated with the exception. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Lang" /> property.</param>
      <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
      <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.SubCode" /> property.</param>
      <param name="innerException">An exception that is the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.String,System.Xml.XmlNode,System.Web.Services.Protocols.SoapFaultSubCode,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, application-specific exception information, and reference to the root cause of the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="role">A URI that represents the XML Web service's function in processing the SOAP message. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Role" /> property.</param>
      <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property.</param>
      <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.SubCode" /> property.</param>
      <param name="innerException">An exception that is the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, and application specific exception information.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
      <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property. </param>
      <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Xml.XmlNode,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, URI that identifies the piece of code that caused the exception, application-specific exception information, and reference to the root cause of the exception.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property. </param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property. </param>
      <param name="actor">A URI that identifies the piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property. </param>
      <param name="detail">An <see cref="T:System.Xml.XmlNode" /> that contains application specific exception information. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> property. </param>
      <param name="innerException">An exception that is the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.#ctor(System.String,System.Xml.XmlQualifiedName,System.Web.Services.Protocols.SoapFaultSubCode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapException" /> class with the specified exception message, exception code, and subcode.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="subCode">An optional subcode for the SOAP fault. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.SubCode" /> property.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Actor">
      <summary>Gets the piece of code that caused the exception.</summary>
      <returns>The piece of code that caused the exception.</returns>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.ClientFaultCode">
      <summary>Specifies a SOAP fault code that represents a client call that is not formatted correctly or does not contain the appropriate information.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Code">
      <summary>Gets the type of SOAP fault code.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> that specifies the SOAP fault code that occurred.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Detail">
      <summary>Gets an <see cref="T:System.Xml.XmlNode" /> that represents the application-specific error information details.</summary>
      <returns>The application-specific error information.</returns>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.DetailElementName">
      <summary>Gets an <see cref="T:System.Xml.XmlQualifiedName" /> that represents the <see cref="P:System.Web.Services.Protocols.SoapException.Detail" /> element of a SOAP Fault code.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Sets the <see cref="T:System.Runtime.Serialization." /><see cref="SerializationInfo" /> with information about the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.IsClientFaultCode(System.Xml.XmlQualifiedName)">
      <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the Client SOAP fault code regardless of the version of the SOAP protocol used.</summary>
      <returns>true if <paramref name="code" /> is equivalent to the Client SOAP fault code; otherwise, false.</returns>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that contains a SOAP fault code. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.IsMustUnderstandFaultCode(System.Xml.XmlQualifiedName)">
      <summary>Returns a value that indicates whether the SOAP fault code is equivalent to MustUnderstand regardless of the version of the SOAP protocol used.</summary>
      <returns>true if <paramref name="code" /> is equivalent to the MustUnderstand SOAP fault code; otherwise, false.</returns>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that contains a SOAP fault code. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.IsServerFaultCode(System.Xml.XmlQualifiedName)">
      <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the Server SOAP fault code regardless of the version of the SOAP protocol used.</summary>
      <returns>true if <paramref name="code" /> is equivalent to the Server SOAP fault code; otherwise, false.</returns>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that contains a SOAP fault code. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapException.IsVersionMismatchFaultCode(System.Xml.XmlQualifiedName)">
      <summary>Returns a value that indicates whether the SOAP fault code is equivalent to the VersionMismatch SOAP fault code regardless of the version of the SOAP protocol used.</summary>
      <returns>true if <paramref name="code" /> is equivalent to the VersionMismatch SOAP fault code; otherwise, false.</returns>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> that contains a SOAP fault code. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Lang">
      <summary>Gets the human language associated with the exception.</summary>
      <returns>A <see cref="T:System.String" /> value that identifies the human language associated with the exception.</returns>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.MustUnderstandFaultCode">
      <summary>A SOAP Fault Code that represents a SOAP element marked with the MustUnderstand attribute was not processed.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Node">
      <summary>Gets a URI that represents the piece of code that caused the exception.</summary>
      <returns>The piece of code that caused the exception.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.Role">
      <summary>Gets a URI that represents the XML Web service's function in processing the SOAP message.</summary>
      <returns>The role of the XML Web service throwing the <see cref="T:System.Web.Services.Protocols.SoapException" />. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.ServerFaultCode">
      <summary>Specifies that a SOAP fault code that represents an error occurred during the processing of a client call on the server, where the problem is not due to the message contents.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapException.SubCode">
      <summary>Gets the optional error information contained in the subcode XML element of a SOAP fault.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> that represents the contents of the subcode XML element of a SOAP fault.</returns>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapException.VersionMismatchFaultCode">
      <summary>A SOAP fault code that represents an invalid namespace for a SOAP envelope was found during the processing of the SOAP message.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapExtension">
      <summary>The base class for SOAP extensions for XML Web services created using ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapExtension" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.ChainStream(System.IO.Stream)">
      <summary>When overridden in a derived class, allows a SOAP extension access to the memory buffer containing the SOAP request or response.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> representing a new memory buffer that this SOAP extension can modify.</returns>
      <param name="stream">A memory buffer containing the SOAP request or response. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Type)">
      <summary>When overridden in a derived class, allows a SOAP extension to initialize data specific to a class implementing an XML Web service at a one time performance cost.</summary>
      <returns>The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</returns>
      <param name="serviceType">The type of the class implementing the XML Web service to which the SOAP extension is applied. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)">
      <summary>When overridden in a derived class, allows a SOAP extension to initialize data specific to an XML Web service method using an attribute applied to the XML Web service method at a one time performance cost.</summary>
      <returns>The <see cref="T:System.Object" /> that the SOAP extension initializes for caching.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the specific function prototype for the XML Web service method to which the SOAP extension is applied. </param>
      <param name="attribute">The <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> applied to the XML Web service method. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.Initialize(System.Object)">
      <summary>When overridden in a derived class, allows a SOAP extension to initialize itself using the data cached in the <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> method.</summary>
      <param name="initializer">The <see cref="T:System.Object" /> returned from <see cref="M:System.Web.Services.Protocols.SoapExtension.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo,System.Web.Services.Protocols.SoapExtensionAttribute)" /> cached by ASP.NET. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtension.ProcessMessage(System.Web.Services.Protocols.SoapMessage)">
      <summary>When overridden in a derived class, allows a SOAP extension to receive a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process at each <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
      <param name="message">The <see cref="T:System.Web.Services.Protocols.SoapMessage" /> to process. </param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapExtensionAttribute">
      <summary>When overridden in a derived class, specifies a SOAP extension should run with an XML Web service method.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapExtensionAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapExtensionAttribute" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapExtensionAttribute.ExtensionType">
      <summary>When overridden in a derived class, gets the <see cref="T:System.Type" /> of the SOAP extension.</summary>
      <returns>The <see cref="T:System.Type" /> of the SOAP extension.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapExtensionAttribute.Priority">
      <summary>When overridden in a derived class, gets or set the priority of the SOAP extension.</summary>
      <returns>The priority of the SOAP extension.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapFaultSubCode">
      <summary>Represents the contents of the optional Subcode element of a SOAP fault when SOAP version 1.2 is used to communicate between a client and an XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapFaultSubCode.#ctor(System.Xml.XmlQualifiedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> class sets the application specific error code.</summary>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> specifying the application specific error code. Sets the <see cref="P:System.Web.Services.Protocols.SoapFaultSubcode.Code" /> property. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapFaultSubCode.#ctor(System.Xml.XmlQualifiedName,System.Web.Services.Protocols.SoapFaultSubCode)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> class setting the application specific error code and additional error information.</summary>
      <param name="code">An <see cref="T:System.Xml.XmlQualifiedName" /> specifying the application specific error code. Sets the <see cref="P:System.Web.Services.Protocols.SoapFaultSubcode.Code" /> property. </param>
      <param name="subCode"></param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapFaultSubCode.Code">
      <summary>Gets the application specific error code in the form of an XML qualified name.</summary>
      <returns>An <see cref="T:System.Xml.XmlQualifiedName" /> representing the application specific error code.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapFaultSubCode.SubCode">
      <summary>Gets additional error information contained within a child Subcode element.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> containing additional error information.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeader">
      <summary>When overridden in a derived class, represents the content of a SOAP header.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.Actor">
      <summary>Gets or sets the recipient of the SOAP header.</summary>
      <returns>The recipient of the SOAP header. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.DidUnderstand">
      <summary>Gets or sets a value indicating whether an XML Web service method properly processed a SOAP header.</summary>
      <returns>true if the SOAP header was properly processed; otherwise false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand">
      <summary>Gets or sets the value of the mustUnderstand XML attribute for the SOAP header when communicating with SOAP protocol version 1.1.</summary>
      <returns>The value of the mustUnderstand attribute. The default is "0".</returns>
      <exception cref="T:System.ArgumentException">The property is set to a value other than: "0", "1", "true", or "false". </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12">
      <summary>Gets or sets the value of the mustUnderstand XML attribute for the SOAP header when communicating with SOAP protocol version 1.2.</summary>
      <returns>The value of the mustUnderstand XML attribute of a SOAP header. The default is "0".</returns>
      <exception cref="T:System.ArgumentException">The property is set to a value other than: "0", "1", "true", or "false". </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.EncodedRelay">
      <summary>Gets or sets the relay attribute of the SOAP 1.2 header.</summary>
      <returns>Either "0", "false", "1", or "true".</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.MustUnderstand">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> must be understood.</summary>
      <returns>true if the XML Web service must properly interpret and process the <see cref="T:System.Web.Services.Protocols.SoapHeader" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.Relay">
      <summary>Gets or sets a value that indicates whether the SOAP header is to be relayed to the next SOAP node if the current node does not understand the header.</summary>
      <returns>true if the SOAP header has a "relay" attribute set to "true"; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeader.Role">
      <summary>Gets or sets the recipient of the SOAP header.</summary>
      <returns>A URI that represents the recipient of the SOAP header. The default is an empty string ("").</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderAttribute">
      <summary>This attribute is applied to an XML Web service method or an XML Web service client to specify a SOAP header that the XML Web service method or XML Web service client can process. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" /> class, setting the member of the XML Web service class representing the SOAP header contents.</summary>
      <param name="memberName">The member of the XML Web service class representing the SOAP header contents. The <see cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" /> property will be set to the value of this parameter. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.Direction">
      <summary>Gets or sets whether the SOAP header is intended for the XML Web service or the XML Web service client or both.</summary>
      <returns>The intended recipient of the SOAP header. The default is <see cref="F:System.Web.Services.Protocols.SoapHeaderDirection.In" />, which means the intended recipient is just the XML Web service.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName">
      <summary>Gets or sets the member of the XML Web service class representing the SOAP header contents.</summary>
      <returns>The member of the XML Web service class representing the SOAP header contents. There is no default.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderAttribute.Required">
      <summary>This member is obsolete and has no functionality.</summary>
      <returns>A <see cref="T:System.Boolean" /> value.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderCollection">
      <summary>Contains a collection of instances of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Add(System.Web.Services.Protocols.SoapHeader)">
      <summary>Adds a <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</summary>
      <returns>The position at which the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> was inserted.</returns>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to add to the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Contains(System.Web.Services.Protocols.SoapHeader)">
      <summary>Determines whether the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> contains a specific <see cref="T:System.Web.Services.Protocols.SoapHeader" />.</summary>
      <returns>true if the value of the <paramref name="header" /> parameter is found in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />; otherwise, false.</returns>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to locate in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.CopyTo(System.Web.Services.Protocols.SoapHeader[],System.Int32)">
      <summary>Copies the elements of the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> to an <see cref="T:System.Array" />, starting at a particular index of the <see cref="T:System.Array" />.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. The array must have zero-based indexing. </param>
      <param name="index">The zero-based index in the <paramref name="array" /> parameter at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="array" /> parameter is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameter is less than zero. </exception>
      <exception cref="T:System.ArgumentException">The <paramref name="array" /> parameter is multidimensional.-or- The number of elements in the source SoapHeaderCollection is greater than the available space from the <paramref name="index" /> parameter to the end of the destination array. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.IndexOf(System.Web.Services.Protocols.SoapHeader)">
      <summary>Determines the index of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</summary>
      <returns>The index of the <paramref name="header" /> parameter, if found in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />; otherwise, -1.</returns>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to locate in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Insert(System.Int32,System.Web.Services.Protocols.SoapHeader)">
      <summary>Inserts a <see cref="T:System.Web.Services.Protocols.SoapHeader" /> into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> at the specified index.</summary>
      <param name="index">The zero-based index at which to insert the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to insert into the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameteris not a valid index in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> at the specified index of the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> at the specified index.</returns>
      <param name="index">The zero-based index of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> parameteris not a valid index in the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderCollection.Remove(System.Web.Services.Protocols.SoapHeader)">
      <summary>Removes the first occurrence of a specific <see cref="T:System.Web.Services.Protocols.SoapHeader" /> from the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />.</summary>
      <param name="header">The <see cref="T:System.Web.Services.Protocols.SoapHeader" /> to remove from the <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" />. </param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderDirection">
      <summary>Specifies whether the recipient of the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is the XML Web service, the XML Web service client, or both.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.In">
      <summary>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to the XML Web service.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.Out">
      <summary>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to the XML Web service client.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.InOut">
      <summary>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to both the XML Web service and the XML Web service client.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapHeaderDirection.Fault">
      <summary>Specifies the <see cref="T:System.Web.Services.Protocols.SoapHeader" /> is sent to the XML Web service client when an exception is thrown by the XML Web service method.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderException">
      <summary>The SOAP representation of a server error.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class with parameters for controlling serialization.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains values that are used during serialization and deserialization.</param>
      <param name="context">A <see cref="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> that contains data about the source and destination of the serialization stream.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="innerException">A reference to the root cause of an exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">The piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">The piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="innerException">A reference to the root cause of an exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.String,System.String,System.Web.Services.Protocols.SoapFaultSubCode,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class with the associated data.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">The piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="role">An URI that represents the role of the XML Web service in the processing of the SOAP message. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Role" /> property.</param>
      <param name="lang">A string that identifies the human language associated with the exception. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Lang" /> property.</param>
      <param name="subCode">A <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> that contains the contents of the subcode element of a SOAP fault. </param>
      <param name="innerException">A reference to the root cause of an exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderException.#ctor(System.String,System.Xml.XmlQualifiedName,System.String,System.String,System.Web.Services.Protocols.SoapFaultSubCode,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHeaderException" /> class with the associated data.</summary>
      <param name="message">A message that identifies the reason the exception occurred. This parameter sets the <see cref="P:System.Exception.Message" /> property.</param>
      <param name="code">The type of error that occurred. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Code" /> property.</param>
      <param name="actor">The piece of code that caused the exception. Typically, this is a URL to an XML Web service method. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Actor" /> property.</param>
      <param name="role">An URI that represents the role of the XML Web service in the processing of the SOAP message. This parameter sets the <see cref="P:System.Web.Services.Protocols.SoapException.Role" /> property.</param>
      <param name="subCode">A <see cref="T:System.Web.Services.Protocols.SoapFaultSubcode" /> that contains the contents of the &lt;subcode&gt; element of a SOAP fault. </param>
      <param name="innerException">A reference to the root cause of the exception. This parameter sets the <see cref="P:System.Exception.InnerException" /> property.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderHandling">
      <summary>The <see cref="T:System.Web.Services.Protocols.SoapHeaderHandling" /> class is used to get, set, write, and read SOAP header content to and from SOAP messages.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.#ctor">
      <summary>Initializes a new instance of <see cref="T:System.Web.Services.Protocols.SoapHeaderHandling" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.EnsureHeadersUnderstood(System.Web.Services.Protocols.SoapHeaderCollection)">
      <summary>Checks to ensure that the SOAP headers that must be understood have been understood; if not, this method throws an exception.</summary>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers.</param>
      <exception cref="T:System.Web.Services.Protocols.SoapHeaderException">A SOAP header that must be understood was not understood.</exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.GetHeaderMembers(System.Web.Services.Protocols.SoapHeaderCollection,System.Object,System.Web.Services.Protocols.SoapHeaderMapping[],System.Web.Services.Protocols.SoapHeaderDirection,System.Boolean)">
      <summary>Gets the SOAP header content for the specified SOAP message.</summary>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers.</param>
      <param name="target">A <see cref="T:System.Object" /> that represents the SOAP message.</param>
      <param name="mappings">An array of type <see cref="T:System.Web.Services.Protocols.SoapHeaderMapping" /> that contains the mappings for the SOAP headers.</param>
      <param name="direction">A <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP headers.</param>
      <param name="client">This parameter is currently not used.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.ReadHeaders(System.Xml.XmlReader,System.Xml.Serialization.XmlSerializer,System.Web.Services.Protocols.SoapHeaderCollection,System.Web.Services.Protocols.SoapHeaderMapping[],System.Web.Services.Protocols.SoapHeaderDirection,System.String,System.String,System.Boolean)">
      <summary>Returns a <see cref="T:System.String" /> that contains the SOAP header content of the SOAP message.</summary>
      <returns>A <see cref="T:System.String" /> that contains the SOAP header content of the SOAP message.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> to be used in writing the headers.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to be used in reading the headers.</param>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers.</param>
      <param name="mappings">An array of type <see cref="T:System.Web.Services.Protocols.SoapHeaderMapping" /> that contains the mappings for the SOAP headers.</param>
      <param name="direction">A <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP headers.</param>
      <param name="envelopeNS">A <see cref="T:System.String" /> that contains the namespace for the SOAP message envelope.</param>
      <param name="encodingStyle">A <see cref="T:System.String" /> that contains the encoding style for the SOAP headers.</param>
      <param name="checkRequiredHeaders">A <see cref="T:System.Boolean" /> that indicates whether to check for the required SOAP headers.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.SetHeaderMembers(System.Web.Services.Protocols.SoapHeaderCollection,System.Object,System.Web.Services.Protocols.SoapHeaderMapping[],System.Web.Services.Protocols.SoapHeaderDirection,System.Boolean)">
      <summary>Sets the SOAP header content for the specified SOAP message.</summary>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers.</param>
      <param name="target">A <see cref="T:System.Object" /> that represents the SOAP message.</param>
      <param name="mappings">An array of type <see cref="T:System.Web.Services.Protocols.SoapHeaderMapping" /> that contains the mappings for the SOAP headers.</param>
      <param name="direction">A <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP headers.</param>
      <param name="client">This parameter is currently not used.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.WriteHeaders(System.Xml.XmlWriter,System.Xml.Serialization.XmlSerializer,System.Web.Services.Protocols.SoapHeaderCollection,System.Web.Services.Protocols.SoapHeaderMapping[],System.Web.Services.Protocols.SoapHeaderDirection,System.Boolean,System.String,System.Boolean,System.String)">
      <summary>Writes the specified SOAP header content to the SOAP message.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to be used in writing the headers.</param>
      <param name="serializer">The <see cref="T:System.Xml.Serialization.XmlSerializer" /> to be used in writing the headers.</param>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers to be written.</param>
      <param name="mappings">An array of type <see cref="T:System.Web.Services.Protocols.SoapHeaderMapping" /> that contains the mappings for the SOAP headers.</param>
      <param name="direction">A <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP headers.</param>
      <param name="isEncoded">A <see cref="T:System.Boolean" /> that indicates whether the SOAP headers are encoded.</param>
      <param name="defaultNS">A <see cref="T:System.String" /> that contains the default namespace for the XML Web service.</param>
      <param name="serviceDefaultIsEncoded">A <see cref="T:System.Boolean" /> that indicates whether data sent to and from the XML Web service is encoded by default.</param>
      <param name="envelopeNS">A <see cref="T:System.String" /> that contains the namespace for the SOAP message envelope.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHeaderHandling.WriteUnknownHeaders(System.Xml.XmlWriter,System.Web.Services.Protocols.SoapHeaderCollection,System.String)">
      <summary>Writes the specified SOAP header content to the SOAP message.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to be used in writing the headers.</param>
      <param name="headers">The <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> that contains the SOAP headers to be written.</param>
      <param name="envelopeNS">A <see cref="T:System.String" /> that contains the namespace for the SOAP message envelope.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHeaderMapping">
      <summary>The <see cref="T:System.Web.Services.Protocols.SoapHeaderMapping" /> class represents a SOAP header mapping.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderMapping.Custom">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the SOAP header mapping is custom-defined.</summary>
      <returns>true if the SOAP header mapping is custom-defined; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderMapping.Direction">
      <summary>Gets a <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP header mapping.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapHeaderDirection" /> value that indicates the direction of the SOAP header mapping.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderMapping.HeaderType">
      <summary>Gets a <see cref="T:System.Type" /> that represents the type of the SOAP header mapping.</summary>
      <returns>A <see cref="T:System.Type" /> that represents the type of the SOAP header mapping.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderMapping.MemberInfo">
      <summary>Gets the <see cref="T:System.Reflection.MemberInfo" /> associated with the SOAP header mapping.</summary>
      <returns>The <see cref="T:System.Reflection.MemberInfo" /> associated with the SOAP header mapping.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHeaderMapping.Repeats">
      <summary>Gets a <see cref="T:System.Boolean" /> value that indicates whether the SOAP header mapping repeats.</summary>
      <returns>true if the SOAP header mapping repeats; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapHttpClientProtocol">
      <summary>Specifies the class client that proxies derive from when using SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)">
      <summary>Starts an asynchronous invocation of an XML Web service method using SOAP.</summary>
      <returns>An <see cref="T:System.IAsyncResult" /> that is passed to the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the remote method call.</returns>
      <param name="methodName">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method. </param>
      <param name="parameters">An array of objects containing the parameters to pass to the XML Web service. The order of the values in the array correspond to the order of the parameters in the calling method of the derived class. </param>
      <param name="callback">The delegate to call when the asynchronous invoke is complete. If <paramref name="callback" /> is null, the delegate is not called. </param>
      <param name="asyncState">Extra information supplied by the caller. </param>
      <exception cref="T:System.Web.Services.Protocols.SoapException">The request reached the server computer, but was not processed successfully. </exception>
      <exception cref="T:System.InvalidOperationException">The request was not valid for the object's current state.</exception>
      <exception cref="T:System.Net.WebException">An error occurred while accessing the network.</exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Discover">
      <summary>Dynamically binds to an XML Web service described in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />.</summary>
      <exception cref="T:System.Exception">The binding defined in the proxy class could not be found in the discovery document at <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Url" />. </exception>
      <exception cref="T:System.Exception">The proxy class does not have a binding defined. </exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke(System.IAsyncResult)">
      <summary>Ends an asynchronous invocation of an XML Web service method using SOAP.</summary>
      <returns>An array of objects that contains the return value and any by-reference or out parameters of the derived class method.</returns>
      <param name="asyncResult">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke(System.String,System.Object[],System.AsyncCallback,System.Object)" /> method. </exception>
      <exception cref="T:System.Web.Services.Protocols.SoapException">The request reached the server computer, but was not processed successfully. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
      <summary>Returns an <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</summary>
      <returns>A <see cref="T:System.Xml.XmlReader" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</returns>
      <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlReader" />.</param>
      <param name="bufferSize">The initial buffer size of the <see cref="T:System.IO.StreamReader" /> used by the <see cref="T:System.Xml.XmlReader" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWebRequest(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> for the specified <paramref name="uri" />.</summary>
      <returns>The <see cref="T:System.Net.WebRequest" />.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapClientMessage,System.Int32)">
      <summary>Returns a <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> parameter.</summary>
      <returns>A <see cref="T:System.Xml.XmlWriter" /> initialized with the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> property of the <paramref name="message" /> parameter.</returns>
      <param name="message">A <see cref="T:System.Web.Services.Protocols.SoapClientMessage" /> that provides the <see cref="P:System.Web.Services.Protocols.SoapMessage.Stream" /> to initialize the <see cref="T:System.Xml.XmlWriter" />.</param>
      <param name="bufferSize">The initial buffer size of the <see cref="T:System.IO.StreamWriter" /> used by the <see cref="T:System.Xml.XmlWriter" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.Invoke(System.String,System.Object[])">
      <summary>Invokes an XML Web service method synchronously using SOAP.</summary>
      <returns>An array of objects that contains the return value and any reference or out parameters of the derived class method.</returns>
      <param name="methodName">The name of the XML Web service method. </param>
      <param name="parameters">An array of objects that contains the parameters to pass to the XML Web service. The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class. </param>
      <exception cref="T:System.Web.Services.Protocols.SoapException">The request reached the server computer, but was not processed successfully. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback)">
      <summary>Invokes the specified method asynchronously.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapHttpClientProtocol.InvokeAsync(System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)">
      <summary>Invokes the specified method asynchronously.</summary>
      <param name="methodName">The name of the method to invoke.</param>
      <param name="parameters">The parameters to pass to the method.</param>
      <param name="callback">The delegate called when the method invocation has completed.</param>
      <param name="userState">An object used to pass state information into the <paramref name="callback" /> delegate.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapHttpClientProtocol.SoapVersion">
      <summary>Gets or sets the version of the SOAP protocol used to make the SOAP request to the XML Web service.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values. The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11" />.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapMessage">
      <summary>Represents the data in a SOAP request or SOAP response at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Action">
      <summary>When overridden in a derived class, gets the SOAPAction HTTP request header field for the SOAP request or SOAP response.</summary>
      <returns>The SOAPAction HTTP request header field for the SOAP request or SOAP response.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.ContentEncoding">
      <summary>Gets or sets the contents of the Content-Encoding HTTP header.</summary>
      <returns>The contents of the Content-Encoding HTTP header.</returns>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> or <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stages. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.ContentType">
      <summary>Gets or sets the HTTP Content-Type of the SOAP request or SOAP response.</summary>
      <returns>The HTTP Content-Type of the SOAP request or SOAP response. The default is "text/xml".</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="P:System.Web.Services.Protocols.SoapMessage.ContentType" /> is accessed <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize" /> or <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> stages. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureInStage">
      <summary>When overridden in a derived class, asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is a stage where in parameters are available.</summary>
      <exception cref="T:System.InvalidOperationException">In parameters are not available. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureOutStage">
      <summary>When overridden in a derived class, asserts that the current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> stage is a stage where out parameters are available.</summary>
      <exception cref="T:System.InvalidOperationException">Out parameters are not available. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.EnsureStage(System.Web.Services.Protocols.SoapMessageStage)">
      <summary>Ensures that the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the call to the XML Web service method is the stage or stages passed in. If the current processing stage is not one of the stages passed in, an exception is thrown.</summary>
      <param name="stage">The <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> asserted. </param>
      <exception cref="T:System.InvalidOperationException">The current <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is not the asserted stage or stages. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Exception">
      <summary>Gets the <see cref="T:System.Web.Services.Protocols.SoapException" /> from the call to the XML Web service method.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapException" /> that occurred in the call to the XML Web service method. null if no <see cref="T:System.Web.Services.Protocols.SoapException" /> has occurred during the call to the Web Sevice method.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetInParameterValue(System.Int32)">
      <summary>Gets the parameter passed into the XML Web service method at the specified index.</summary>
      <returns>An <see cref="T:System.Object" /> representing the parameter at the specified index.</returns>
      <param name="index">The zero-based index of the parameter in the array of parameters. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is less than 0 or greater than the length of the parameters array. </exception>
      <exception cref="T:System.InvalidOperationException">Accessing this property when in parameters are not available. For details see the Remarks section. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetOutParameterValue(System.Int32)">
      <summary>Gets the out parameter passed into the XML Web service method at the specified index.</summary>
      <returns>An <see cref="T:System.Object" /> representing the parameter at the specified index.</returns>
      <param name="index">The zero-based index of the parameter in the array of parameters. </param>
      <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index" /> parameter is greater than the length of the parameters array. </exception>
      <exception cref="T:System.InvalidOperationException">Accessing this property when out parameters are not available. For details see the Remarks section. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapMessage.GetReturnValue">
      <summary>Gets the return value of an XML Web service method.</summary>
      <returns>An <see cref="T:System.Object" /> representing the return value of the XML Web service method.</returns>
      <exception cref="T:System.InvalidOperationException">The XML Web service method does not have a return value.OR The return value is not available. For details see the Remarks section </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Headers">
      <summary>A collection of the SOAP headers applied to the current SOAP request or SOAP response.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapHeaderCollection" /> of the SOAP headers applied to the current SOAP request or SOAP response. null, if there are no SOAP headers.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.MethodInfo">
      <summary>When overridden in a derived class, gets a representation of the method prototype for the XML Web service method for which the SOAP request is intended.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the XML Web service method for which the SOAP request is intended.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.OneWay">
      <summary>Gets a value indicating the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> property of either the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> or the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> attribute applied to the XML Web service method.</summary>
      <returns>true if the <see cref="P:System.Web.Services.Protocols.SoapDocumentMethodAttribute.OneWay" /> property of the <see cref="T:System.Web.Services.Protocols.SoapDocumentMethodAttribute" /> or <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> applied to the XML Web service method is true; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.SoapVersion">
      <summary>Gets the version of the SOAP protocol used to communicate with the XML Web service.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values. The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Stage">
      <summary>Gets the <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> of the <see cref="T:System.Web.Services.Protocols.SoapMessage" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Stream">
      <summary>Gets the data representing the SOAP request or SOAP response in the form of a <see cref="T:System.IO.Stream" />.</summary>
      <returns>A read-only instance of the <see cref="T:System.IO.Stream" /> class.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapMessage.Url">
      <summary>When overridden in a derived class, gets the base URL of the XML Web service.</summary>
      <returns>The base URL of the XML Web service.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapMessageStage">
      <summary>Specifies the processing stage of a SOAP message.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize">
      <summary>The stage just prior to a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> being serialized.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.AfterSerialize">
      <summary>The stage just after a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> is serialized, but before the SOAP message is sent over the wire.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.BeforeDeserialize">
      <summary>The stage just before a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> is deserialized from the SOAP message sent across the network into an object.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize">
      <summary>The stage just after a <see cref="T:System.Web.Services.Protocols.SoapMessage" /> is deserialized from a SOAP message into an object.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapParameterStyle">
      <summary>Specifies how parameters are formatted in a SOAP message.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Default">
      <summary>Specifies using the default <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> for the XML Web service. The default for an XML Web service can be set by applying a <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> to the class implementing the XML Web service. If a <see cref="T:System.Web.Services.Protocols.SoapDocumentServiceAttribute" /> is not applied to the class implementing the XML Web service, the default is <see cref="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped" />.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Bare">
      <summary>Parameters sent to and from an XML Web service method are placed in XML elements directly following the Body element of a SOAP request or SOAP response.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapParameterStyle.Wrapped">
      <summary>Parameters sent to and from an XML Web service method are encapsulated within a single XML element followig the Body element of the XML portion of a SOAP request or SOAP response.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapProtocolVersion">
      <summary>Specifies the version of the SOAP protocol used to communicate with an XML Web service.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapProtocolVersion.Default">
      <summary>The default value for this enumeration.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap11">
      <summary>SOAP protocol version 1.1.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapProtocolVersion.Soap12">
      <summary>SOAP protocol version 1.2.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapRpcMethodAttribute">
      <summary>Specifies that SOAP messages sent to and from the method use RPC formatting.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> class, setting all properties to their default values.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcMethodAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcMethodAttribute" /> class, setting the <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> property to the value of the <paramref name="action" /> parameter.</summary>
      <param name="action">The intent of the SOAP request. Sets the <see cref="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action" /> property. </param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Action">
      <summary>Gets or sets the SOAPAction HTTP header field of the SOAP request.</summary>
      <returns>The SOAPAction HTTP header field of the SOAP request. The default is http://tempuri.org/MethodName where MethodName is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Binding">
      <summary>Gets or sets the binding that an XML Web service method implements an operation for.</summary>
      <returns>The binding an XML Web service method implements an operation for. The default is the name of the XML Web service with "Soap" appended.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.OneWay">
      <summary>Gets or sets whether an XML Web service client waits for the Web server to finish processing an XML Web service method.</summary>
      <returns>true if the XML Web service client does not wait for the Web server to completely process an XML Web service method; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestElementName">
      <summary>Gets or sets the XML element associated with the SOAP request for an XML Web service method.</summary>
      <returns>The XML element associated with the SOAP request for an XML Web service method. The default value is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.RequestNamespace">
      <summary>Gets or sets the XML namespace associated with the SOAP request for an XML Web service method.</summary>
      <returns>The XML namespace associated with the SOAP request for an XML Web service method. The default is http://tempuri.org/.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseElementName">
      <summary>Gets or sets the XML element associated with the SOAP response for an XML Web service method.</summary>
      <returns>The XML element associated with the SOAP request for an XML Web service method. The default value is WebServiceNameResult, where WebServiceName is the name of the XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.ResponseNamespace">
      <summary>Gets or sets the XML namespace associated with the SOAP response for an XML Web service method.</summary>
      <returns>The XML namespace associated with the SOAP response for an XML Web service method. The default is http://tempuri.org/.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcMethodAttribute.Use">
      <summary>Gets or sets the binding used when invoking the method.</summary>
      <returns>A member of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> enumeration specifying the binding used when invoking the method.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapRpcServiceAttribute">
      <summary>Sets the default format of SOAP requests and responses sent to and from XML Web service methods within the XML Web service.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapRpcServiceAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapRpcServiceAttribute" /> class.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcServiceAttribute.RoutingStyle">
      <summary>Gets or sets how SOAP messages are routed to the XML Web service.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapServiceRoutingStyle" /> that represents how SOAP messages are routed to the XML Web service. The default value is <see cref="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.SoapAction" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapRpcServiceAttribute.Use">
      <summary>Gets or sets the binding used when invoking the Web service's methods.</summary>
      <returns>A member of the <see cref="T:System.Web.Services.Description.SoapBindingUse" /> enumeration specifying the binding used when invoking the Web service's methods.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerMessage">
      <summary>Represents the data in a SOAP request received or a SOAP response sent by an XML Web service method at a specific <see cref="T:System.Web.Services.Protocols.SoapMessageStage" />. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Action">
      <summary>Gets the SOAPAction HTTP request header field for the SOAP request or SOAP response.</summary>
      <returns>The SOAPAction HTTP request header field for the SOAP request or SOAP response.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.MethodInfo">
      <summary>Gets a representation of the method prototype for the XML Web service method for which the SOAP request is intended.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the XML Web service method for which the SOAP request is intended.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.OneWay">
      <summary>Gets a value indicating whether the client waits for the server to finish processing an XML Web service method.</summary>
      <returns>true if the client waits for the server to completely process a method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Server">
      <summary>Gets the instance of the class handling the method invocation on the Web server.</summary>
      <returns>The instance of the class implementing the XML Web service.</returns>
      <exception cref="T:System.InvalidOperationException">
        <see cref="T:System.Web.Services.Protocols.SoapMessageStage" /> is not <see cref="F:System.Web.Services.Protocols.SoapMessageStage.AfterDeserialize" /> or <see cref="F:System.Web.Services.Protocols.SoapMessageStage.BeforeSerialize" />. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.SoapVersion">
      <summary>Gets the version of the SOAP protocol used to communicate with the XML Web service.</summary>
      <returns>One of the <see cref="T:System.Web.Services.Protocols.SoapProtocolVersion" /> values. The default is <see cref="F:System.Web.Services.Protocols.SoapProtocolVersion.Default" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMessage.Url">
      <summary>Gets the base URL of the XML Web service.</summary>
      <returns>The base URL of the XML Web service.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerMethod">
      <summary>Represents the attributes and metadata for an XML Web service method. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerMethod.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Protocols.SoapServerMethod" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerMethod.#ctor(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Creates a new <see cref="T:System.Web.Services.Protocols.SoapServerMethod" />.</summary>
      <param name="serverType">The <see cref="T:System.Type" /> to which this method belongs.</param>
      <param name="methodInfo">The <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> with which to initialize this <see cref="T:System.Web.Services.Protocols.SoapServerMethod" />.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.Action">
      <summary>Gets the SOAPAction HTTP header field of SOAP requests that are sent to this XML Web service method.</summary>
      <returns>A <see cref="T:System.String" /> that contains the SOAPAction HTTP header field of SOAP requests that are sent to this XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.BindingUse">
      <summary>Gets a <see cref="T:System.Web.Services.Description.SoapBindingUse" /> value that specifies whether the parts of SOAP messages sent to this XML Web service method are encoded as abstract type definitions or concrete schema definitions.</summary>
      <returns>A <see cref="T:System.Web.Services.Description.SoapBindingUse" /> value that specifies whether the parts of SOAP messages sent to this XML Web service method are encoded as abstract type definitions or concrete schema definitions.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.InHeaderMappings">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> used with SOAP requests to this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> used with SOAP requests to this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.InHeaderSerializer">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with SOAP requests to this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with SOAP requests to this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.MethodInfo">
      <summary>Gets the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> associated with this XML Web service method.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> associated with this XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.OneWay">
      <summary>Gets a <see cref="T:System.Boolean" /> that indicates whether an XML Web service client waits for the Web server to finish processing this XML Web service method.</summary>
      <returns>true if the XML Web service client does not wait for the Web server to completely process this XML Web service method; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.OutHeaderMappings">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> used with SOAP responses from this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlMembersMapping" /> used with SOAP responses from this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.OutHeaderSerializer">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with SOAP responses from this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with SOAP responses from this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.ParameterSerializer">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with parameters that are passed to this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with parameters that are passed to this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.ParameterStyle">
      <summary>Gets a <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> object that specifies how parameters are formatted in SOAP messages sent to this XML Web service method.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.SoapParameterStyle" /> that specifies how parameters are formatted in SOAP messages sent to this XML Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.ReturnSerializer">
      <summary>Gets the <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with return values from this Web service method.</summary>
      <returns>The <see cref="T:System.Xml.Serialization.XmlSerializer" /> used with return values from this Web service method.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.Rpc">
      <summary>Gets a <see cref="T:System.Boolean" /> that indicates whether SOAP messages sent to and from this XML Web service method use RPC formatting.</summary>
      <returns>true if SOAP messages sent to and from this XML Web service method use RPC formatting; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerMethod.WsiClaims">
      <summary>Gets a <see cref="T:System.Web.Services.WsiProfiles" /> value that indicates the Web Services Interoperability (WSI) specification to which this Web service claims to conform.</summary>
      <returns>A <see cref="T:System.Web.Services.WsiProfiles" /> value that indicates the Web Services Interoperability (WSI) specification to which this Web service claims to conform.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerProtocol">
      <summary>The .NET Framework creates an instance of the <see cref="T:System.Web.Services.Protocols.SoapServerProtocol" /> class to process XML Web service requests.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocol.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Protocols.SoapServerProtocol" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocol.GetReaderForMessage(System.Web.Services.Protocols.SoapServerMessage,System.Int32)">
      <summary>Returns an <see cref="T:System.Xml.XmlTextReader" /> initialized with the specified <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> and buffer size.</summary>
      <returns>A <see cref="T:System.Xml.XmlTextReader" /> initialized with the <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> specified by <paramref name="message" /> and the buffer size specified by <paramref name="bufferSize" />.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> with which to initialize the <see cref="T:System.Xml.XmlTextReader" />.</param>
      <param name="bufferSize">The buffer size with which to initialize the <see cref="T:System.Xml.XmlTextReader" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocol.GetWriterForMessage(System.Web.Services.Protocols.SoapServerMessage,System.Int32)">
      <summary>Returns an <see cref="T:System.Xml.XmlTextWriter" /> initialized with the specified <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> and buffer size.</summary>
      <returns>A <see cref="T:System.Xml.XmlTextWriter" /> initialized with the <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> specified by <paramref name="message" /> and the buffer size specified by <paramref name="bufferSize" />.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> with which to initialize the <see cref="T:System.Xml.XmlTextWriter" />.</param>
      <param name="bufferSize">The buffer size with which to initialize the <see cref="T:System.Xml.XmlTextWriter" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocol.ModifyInitializedExtensions(System.Web.Services.Configuration.PriorityGroup,System.Web.Services.Protocols.SoapExtension[])">
      <summary>Applies the specified priority and group attributes to the SOAP extensions contained in the specified array of type <see cref="T:System.Web.Services.Protocols.SoapExtension" />.</summary>
      <returns>An array of type <see cref="T:System.Web.Services.Protocols.SoapExtension" /> with the priority and group attributes specified by <paramref name="group" /> applied.</returns>
      <param name="group">A <see cref="T:System.Web.Services.Configuration.PriorityGroup" /> that specifies the priority and group attributes to be applied to the SOAP extensions contained in <paramref name="extensions" />.</param>
      <param name="extensions">An array of type <see cref="T:System.Web.Services.Protocols.SoapExtension" /> to which to apply the priority and group attributes specified by <paramref name="group" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocol.RouteRequest(System.Web.Services.Protocols.SoapServerMessage)">
      <summary>Returns the <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> to which the specified <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> should be routed.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> to which the <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> specified by <paramref name="message" /> should be routed.</returns>
      <param name="message">The <see cref="T:System.Web.Services.Protocols.SoapServerMessage" /> sent to the XML Web service.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerProtocolFactory">
      <summary>The .NET Framework creates an instance of the <see cref="T:System.Web.Services.Protocols.SoapServerProtocolFactory" /> class to process XML Web service requests.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocolFactory.#ctor">
      <summary>Creates a new <see cref="T:System.Web.Services.Protocols.SoapServerProtocolFactory" />.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerProtocolFactory.CreateIfRequestCompatible(System.Web.HttpRequest)">
      <summary>Returns a <see cref="T:System.Web.Services.Protocols.ServerProtocol" /> that can be used to process the XML Web service request specified by <paramref name="request" />.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.ServerProtocol" /> that can be used to process the XML Web service request specified by <paramref name="request" />.</returns>
      <param name="request">The <see cref="T:System.Web.HttpRequest" /> that represents the Web service request.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServerType">
      <summary>The <see cref="T:System.Web.Services.Protocols.SoapServerType" /> class represents the type on which the XML Web service is based.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerType.#ctor(System.Type,System.Web.Services.Configuration.WebServiceProtocols)">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapServerType" /> class.</summary>
      <param name="type">The <see cref="T:System.Type" /> on which this XML Web service is based.</param>
      <param name="protocolsSupported">A <see cref="T:System.Web.Services.Configuration.WebServiceProtocols" /> value that specifies the transmission protocols that are used to decrypt data sent in the XML Web service request.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerType.GetDuplicateMethod(System.Object)">
      <summary>Returns the duplicate <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> associated with the specified key.</summary>
      <returns>The duplicate <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> associated with the specified key.</returns>
      <param name="key">The key associated with the desired duplicate <see cref="T:System.Web.Services.Protocols.SoapServerMethod" />.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapServerType.GetMethod(System.Object)">
      <summary>Returns the <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> associated with the specified key.</summary>
      <returns>The <see cref="T:System.Web.Services.Protocols.SoapServerMethod" /> associated with the specified key.</returns>
      <param name="key">The key associated with the desired <see cref="T:System.Web.Services.Protocols.SoapServerMethod" />.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerType.ServiceDefaultIsEncoded">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether SOAP data transmissions sent to and from this XML Web service are encoded by default.</summary>
      <returns>true if SOAP data transmissions sent to and from this XML Web service are encoded by default; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerType.ServiceNamespace">
      <summary>Gets a <see cref="T:System.String" /> that contains the namespace to which this XML Web service belongs.</summary>
      <returns>A <see cref="T:System.String" /> that contains the namespace to which this XML Web service belongs.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapServerType.ServiceRoutingOnSoapAction">
      <summary>Returns a <see cref="T:System.Boolean" /> that indicates whether SOAP messages that are routed to this XML Web service are routed based on the SOAPAction HTTP header.</summary>
      <returns>true if SOAP messages that are routed to this XML Web service are routed based on the SOAPAction HTTP header; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapServiceRoutingStyle">
      <summary>Specifies how a SOAP message is routed to the Web server hosting the XML Web service.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.SoapAction">
      <summary>The SOAP message is routed based on the SOAPAction HTTP header.</summary>
    </member>
    <member name="F:System.Web.Services.Protocols.SoapServiceRoutingStyle.RequestElement">
      <summary>The SOAP Message is routed based on the first child element following the &lt;Body&gt; XML element of the SOAP message.</summary>
    </member>
    <member name="T:System.Web.Services.Protocols.SoapUnknownHeader">
      <summary>Represents the data received from a SOAP header that was not understood by the recipient XML Web service or XML Web service client. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.SoapUnknownHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.SoapUnknownHeader" /> class. </summary>
    </member>
    <member name="P:System.Web.Services.Protocols.SoapUnknownHeader.Element">
      <summary>Gets or sets the XML Header element for a SOAP request or response.</summary>
      <returns>An <see cref="T:System.Xml.XmlElement" /> representing the raw XML of the SOAP header.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.TextReturnReader">
      <summary>Reads return values from HTTP response text for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.TextReturnReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.TextReturnReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.TextReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>An initializer for the specified method</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Protocols.TextReturnReader.Initialize(System.Object)">
      <summary>Initializes an instance.</summary>
      <param name="o">A <see cref="T:System.Web.Services.Protocols.PatternMatcher" /> object for the return type of the Web method being invoked.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.TextReturnReader.Read(System.Net.WebResponse,System.IO.Stream)">
      <summary>Parses text contained in the HTTP response.</summary>
      <returns>An object containing the deserialized Web method return value.</returns>
      <param name="response">A <see cref="T:System.Net.WebResponse" /> object  containing the output message for an operation.</param>
      <param name="responseStream">A <see cref="T:System.IO.Stream" /> whose content is the body of the HTTP response represented by the <paramref name="response" /> parameter.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.UrlEncodedParameterWriter">
      <summary>Provides URL encoding functionality for writers of out-going request parameters for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.Object[])">
      <summary>Encodes all the parameter values for a Web method and writes them to the specified writer.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</param>
      <param name="values">The Web method parameter values.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Encode(System.IO.TextWriter,System.String,System.Object)">
      <summary>Encodes a specified parameter value and writes it to the specified writer.</summary>
      <param name="writer">A <see cref="T:System.IO.TextWriter" /> object that does the writing to the HTTP request.</param>
      <param name="name">The name of the parameter that will be encoded.</param>
      <param name="value">The value of the parameter that will be encoded.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the initializer for the specified method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlEncodedParameterWriter.Initialize(System.Object)">
      <summary>Initializes an instance.</summary>
      <param name="initializer">A <see cref="T:System.Reflection.ParameterInfo" /> array obtained through the <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> property of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.UrlEncodedParameterWriter.RequestEncoding">
      <summary>Gets or sets the encoding used to write parameters to the HTTP request.</summary>
      <returns>The encoding used to write parameters to the HTTP request.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.UrlParameterReader">
      <summary>Reads incoming request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlParameterReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlParameterReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlParameterReader.Read(System.Web.HttpRequest)">
      <summary>Reads name/value pairs encoded in the query string of an HTTP request into Web method parameter values.</summary>
      <returns>An array of name/value pairs.</returns>
      <param name="request">A <see cref="T:System.Net.WebResponse" /> objectcontaining HTML URL-encoded name/value pairs.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Web.Services.Protocols.UrlParameterWriter">
      <summary>Writes out-going request parameters for Web services implemented using HTTP with name-value pairs encoded in the URL's query string rather than as a SOAP message.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlParameterWriter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.UrlParameterWriter" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.UrlParameterWriter.GetRequestUrl(System.String,System.Object[])">
      <summary>Writes Web method parameter values to the query string of an HTTP request.</summary>
      <returns>A <see cref="T:System.String" /> object that contains the query string and the parameter values.</returns>
      <param name="url">The HTTP request's original URL.</param>
      <param name="parameters">The Web method parameter values to be added to the URL, if necessary.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.ValueCollectionParameterReader">
      <summary>Serves as a base class for readers of incoming request parameters for Web services implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> representing the Web method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Initialize(System.Object)">
      <summary>Initializes an instance.</summary>
      <param name="o">A <see cref="T:System.Reflection.ParameterInfo" /> array, obtained through the <see cref="P:System.Web.Services.Protocols.LogicalMethodInfo.InParameters" /> property of the <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> class.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Reflection.ParameterInfo)">
      <summary>Determines whether a particular parameter type is supported by the <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" /> class.</summary>
      <returns>true if a method's parameter definitions are supported by the reader; otherwise, false.</returns>
      <param name="paramInfo">A <see cref="T:System.Reflection.ParameterInfo" /> that specifies the parameter to check.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.IsSupported(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Determines whether a method definition's parameter definitions are supported by the <see cref="T:System.Web.Services.Protocols.ValueCollectionParameterReader" /> class.</summary>
      <returns>true if a method's parameter definitions are supported by the reader; otherwise, false.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the method to check.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.ValueCollectionParameterReader.Read(System.Collections.Specialized.NameValueCollection)">
      <summary>Translates a collection of name/value pairs into an array of objects representing method parameter values.</summary>
      <returns>An array of <see cref="T:System.Object" /> objects representing method parameter values.</returns>
      <param name="collection">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that specifies the collection of name/value pairs containing method parameter names and values.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.WebClientAsyncResult">
      <summary>Provides an implementation of <see cref="T:System.IAsyncResult" /> for use by XML Web service proxies to implement the standard asynchronous method pattern.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientAsyncResult.Abort">
      <summary>Cancels an asynchronous XML Web service request.</summary>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncState">
      <summary>Gets the object provided in the last parameter to the Begin method asynchronous call.</summary>
      <returns>The <see cref="T:System.Object" /> provided in the last parameter to the Begin method call.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.AsyncWaitHandle">
      <summary>Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</summary>
      <returns>A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.CompletedSynchronously">
      <summary>Gets a value indicating whether the Begin call completed synchronously.</summary>
      <returns>true if the Begin call completed synchronously; otherwise, false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientAsyncResult.IsCompleted">
      <summary>Gets a value indicating whether the asynchronous XML Web service request has completed.</summary>
      <returns>true if the asynchronous XML Web service request has completed; otherwise, false.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.WebClientProtocol">
      <summary>Specifies the base class for all XML Web service client proxies created using ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebClientProtocol" /> class.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.Abort">
      <summary>Cancels a request to an XML Web service method.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)">
      <summary>Add an instance of the client protocol handler to the cache.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the client protocol handler..</param>
      <param name="value">The client protocol handler to be added to the cache.</param>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName">
      <summary>Gets or sets the name of the connection group for the request.</summary>
      <returns>The name of the connection group. The default is <see cref="F:System.String.Empty" />.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Credentials">
      <summary>Gets or sets security credentials for XML Web service client authentication.</summary>
      <returns>The <see cref="T:System.Net.ICredentials" /> for the XML Web service client.</returns>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)">
      <summary>Gets an instance of a client protocol handler from the cache.</summary>
      <param name="type">The <see cref="T:System.Type" /> of the client protocol handler to be returned from the cache.</param>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)">
      <summary>Creates a <see cref="T:System.Net.WebRequest" /> instance for the specified <paramref name="uri" />. This protected method is called by the XML Web service client infrastructure to get a new <see cref="T:System.Net.WebRequest" /> transport object to transmit the XML Web service request.</summary>
      <returns>The <see cref="T:System.Net.WebRequest" /> instance.</returns>
      <param name="uri">The <see cref="T:System.Uri" /> to use when creating the <see cref="T:System.Net.WebRequest" />. </param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="uri" /> parameter is null. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)">
      <summary>Returns a response from a synchronous request to an XML Web service method.</summary>
      <returns>A <see cref="T:System.Net.WebResponse" />.</returns>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> to get the response from. </param>
      <exception cref="T:System.Net.WebException">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />. </exception>
    </member>
    <member name="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)">
      <summary>Returns a response from an asynchronous request to an XML Web service method. This protected method is called by the XML Web service client infrastructure to get the response from an asynchronous XML Web service request.</summary>
      <returns>The <see cref="T:System.Net.WebResponse" /> instance.</returns>
      <param name="request">The <see cref="T:System.Net.WebRequest" /> to get the response from. </param>
      <param name="result">The <see cref="T:System.IAsyncResult" /> to pass to <see cref="M:System.Net.HttpWebRequest.EndGetResponse(System.IAsyncResult)" /> when the response has completed. </param>
      <exception cref="T:System.Net.WebException">If <see cref="M:System.Web.Services.Protocols.WebClientProtocol.Abort" /> is invoked prior to calling <see cref="M:System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)" />. </exception>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate">
      <summary>Gets or sets whether pre-authentication is enabled.</summary>
      <returns>true to pre-authenticate the request; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.RequestEncoding">
      <summary>The <see cref="T:System.Text.Encoding" /> used to make the client request to the XML Web service.</summary>
      <returns>The character encoding for the client request. The default is null, which uses the default encoding for the underlying transport and protocol.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Timeout">
      <summary>Indicates the time an XML Web service client waits for a synchronous XML Web service request to complete (in milliseconds).</summary>
      <returns>The time out, in milliseconds, for synchronous calls to the XML Web service. The default is 100000 milliseconds.</returns>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.Url">
      <summary>Gets or sets the base URL of the XML Web service the client is requesting.</summary>
      <returns>The base URL of the XML Web service the client is requesting. The default is a <see cref="F:System.String.Empty" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials">
      <summary>Gets or sets a value that indicates whether to set the <see cref="P:System.Web.Services.Protocols.WebClientProtocol.Credentials" /> property to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property.</summary>
      <returns>true if the Credentials property is set to the value of the <see cref="P:System.Net.CredentialCache.DefaultCredentials" /> property.</returns>
    </member>
    <member name="T:System.Web.Services.Protocols.WebServiceHandlerFactory">
      <summary>Dynamically manufactures Web service handler instances, whose type or types implement the <see cref="T:System.Web.IHttpHandler" /> interface.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.WebServiceHandlerFactory" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)">
      <summary>Returns an <see cref="T:System.Web.IHttpHandler" /> instance.</summary>
      <returns>An <see cref="T:System.Web.IHttpHandler" /> instance.</returns>
      <param name="context">An <see cref="T:System.Web.HttpContext" /> that provides references to intrinsic server objects (For example, <see cref="P:System.Web.HttpContext.Request" />, <see cref="P:System.Web.HttpContext.Response" />, <see cref="P:System.Web.HttpContext.Session" />, and <see cref="P:System.Web.HttpContext.Server" />) used to service HTTP requests.</param>
      <param name="verb">The HTTP data transfer method (GET or POST) that the client uses.</param>
      <param name="url">The raw URL of the requested resource.</param>
      <param name="filePath">The file-system path of the requested resource.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence, ControlPrincipal" />
        <IPermission class="System.Web.AspNetHostingPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Level="Medium" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)">
      <summary>Releases the <see cref="T:System.Web.IHttpHandler" /> instance.</summary>
      <param name="handler">The <see cref="T:System.Web.IHttpHandler" /> instance to release.</param>
    </member>
    <member name="T:System.Web.Services.Protocols.XmlReturnReader">
      <summary>Reads return values from XML that is encoded in the body of incoming responses for Web service clients implemented using HTTP but without SOAP.</summary>
    </member>
    <member name="M:System.Web.Services.Protocols.XmlReturnReader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.XmlReturnReader" /> class. </summary>
    </member>
    <member name="M:System.Web.Services.Protocols.XmlReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)">
      <summary>Returns an initializer for the specified method.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the initializer for the specified method.</returns>
      <param name="methodInfo">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Protocols.XmlReturnReader.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])">
      <summary>Returns an array of initializer objects corresponding to an input array of method definitions.</summary>
      <returns>An array of initializer objects corresponding to the input array of method definitions.</returns>
      <param name="methodInfos">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Web.Services.Protocols.XmlReturnReader.Initialize(System.Object)">
      <summary>Initializes an instance.</summary>
      <param name="o"></param>
    </member>
    <member name="M:System.Web.Services.Protocols.XmlReturnReader.Read(System.Net.WebResponse,System.IO.Stream)">
      <summary>Gets a return value deserialized from an XML document contained in the HTTP response.</summary>
      <param name="response">An <see cref="T:System.Web.HttpRequest" /> object containing the output message for an operation.</param>
      <param name="responseStream">A <see cref="T:System.IO.Stream" /> whose content is the body of the HTTP response represented by the <paramref name="response" /> parameter.</param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\System.ServiceModel.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.ServiceModel</name>
  </assembly>
  <members>
    <member name="T:System.UriTemplate">
      <summary>A class that represents a Uniform Resource Identifier (URI) template.</summary>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class with the specified template string.</summary>
      <param name="template">The template.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">A value that specifies whether trailing slash “/” characters should be ignored.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.  
</summary>
      <param name="template">The template string.</param>
      <param name="ignoreTrailingSlash">A boolean value that specifies whether to ignore trailing slash “/” characters.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplate" /> class.</summary>
      <param name="template">The template string.</param>
      <param name="additionalDefaults">A dictionary that contains a list of default values for the template parameters.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Creates a new URI from the template and the collection of parameters.
</summary>
      <returns>
Returns <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>
Returns <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">A URI that contains the base address.</param>
      <param name="parameters">A dictionary that contains a collection of parameter name/value pairs.</param>
      <param name="omitDefaults">A value that specifies whether default values are ignored.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection)">
      <summary>Creates a new URI from the template and the collection of parameters.</summary>
      <returns>A new <see cref="T:System.Uri" /> instance.</returns>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address.</param>
      <param name="parameters">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> instance that contains the parameter values.</param>
    </member>
    <member name="M:System.UriTemplate.BindByName(System.Uri,System.Collections.Specialized.NameValueCollection,System.Boolean)">
      <summary>Creates a new URI from the template and the collection of parameters.
</summary>
      <returns>
Returns <see cref="T:System.Uri" />.
</returns>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address.</param>
      <param name="parameters">A collection of parameter name/value pairs. </param>
      <param name="omitDefaults">A value that specifies whether default values are ignored.</param>
    </member>
    <member name="M:System.UriTemplate.BindByPosition(System.Uri,System.String[])">
      <summary>Creates a new URI from the template and an array of parameter values.</summary>
      <returns>A new <see cref="T:System.Uri" /> instance.</returns>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address.</param>
      <param name="values">The parameter values.</param>
    </member>
    <member name="P:System.UriTemplate.Defaults">
      <summary>A collection of name and value pairs for any default parameter values.</summary>
      <returns>
Returns <see cref="T:System.Collections.Generic.IDictionary`2" />.
</returns>
    </member>
    <member name="P:System.UriTemplate.IgnoreTrailingSlash">
      <summary>Specifies whether trailing slashes “/” in the template should be ignored when matching candidate URIs.</summary>
      <returns>
Returns <see cref="T:System.Boolean" />.
</returns>
    </member>
    <member name="M:System.UriTemplate.IsEquivalentTo(System.UriTemplate)">
      <summary>Indicates whether a <see cref="T:System.UriTemplate" /> is structurally equivalent to another.</summary>
      <returns>A value that indicates whether the URI templates are equivalent.</returns>
      <param name="other">The <see cref="T:System.UriTemplate" /> to compare.</param>
    </member>
    <member name="M:System.UriTemplate.Match(System.Uri,System.Uri)">
      <summary>Attempts to match a <see cref="T:System.URI" /> to a <see cref="T:System.UriTemplate" />.</summary>
      <returns>A <see cref="T:System.UriTemplateMatch" /> instance.</returns>
      <param name="baseAddress">The base address.</param>
      <param name="candidate">The <see cref="T:System.Uri" /> to match against the template.</param>
    </member>
    <member name="P:System.UriTemplate.PathSegmentVariableNames">
      <summary>Gets a collection of variable names used within path segments in the template.</summary>
      <returns>A collection of variable names that appear within the template's path segment.</returns>
    </member>
    <member name="P:System.UriTemplate.QueryValueVariableNames">
      <summary>Gets a collection of variable names used within the query string in the template.</summary>
      <returns>A collection of template variable names that appear in the query portion of the template string.</returns>
    </member>
    <member name="M:System.UriTemplate.ToString">
      <summary>Returns a string representation of the <see cref="T:System.UriTemplate" /> instance.</summary>
      <returns>The representation of the <see cref="T:System.UriTemplate" /> instance.</returns>
    </member>
    <member name="T:System.UriTemplateEquivalenceComparer">
      <summary>A class used to compare <see cref="T:System.UriTemplate" /> instances for structural (instead of reference) equivalence.</summary>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateEquivalenceComparer" /> class.</summary>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.Equals(System.UriTemplate,System.UriTemplate)">
      <summary>Compares two <see cref="T:System.UriTemplate" /> instances for equivalence.</summary>
      <returns>A value that indicates whether the two <see cref="T:System.UriTemplate" /> instances are equivalent.</returns>
      <param name="x">A <see cref="T:System.UriTemplate" /> instance.</param>
      <param name="y">A <see cref="T:System.UriTemplate" /> instance.</param>
    </member>
    <member name="M:System.UriTemplateEquivalenceComparer.GetHashCode(System.UriTemplate)">
      <summary>Gets a hash code for the specified <see cref="T:System.UriTemplate" /> instance.</summary>
      <returns>The hash code.</returns>
      <param name="obj">The <see cref="T:System.UriTemplate" /> instance.</param>
    </member>
    <member name="T:System.UriTemplateMatch">
      <summary>A class that represents the results of a match operation on a <see cref="T:System.UriTemplate" /> instance.</summary>
    </member>
    <member name="M:System.UriTemplateMatch.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateMatch" /> class.</summary>
    </member>
    <member name="P:System.UriTemplateMatch.BaseUri">
      <summary>Gets and sets the base URI for the template match.</summary>
      <returns>A <see cref="T:System.Uri" /> instance that represents the base URI for the template match.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.BoundVariables">
      <summary>Gets the BoundVariables collection for the template match.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> instance that contains template variable values extracted from the URI during the match.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.Data">
      <summary>Gets and sets the object associated with the <see cref="T:System.UriTemplateMatch" /> instance.</summary>
      <returns>An <see cref="T:System.Object" /> instance.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.QueryParameters">
      <summary>Gets a collection of query string parameters and their values.</summary>
      <returns>A <see cref="T:System.Collections.Specialized.NameValueCollection" /> instance that contains the query string parameters and their values.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.RelativePathSegments">
      <summary>Gets a collection of relative path segments.</summary>
      <returns>A collection of relative path segments.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.RequestUri">
      <summary>Gets and sets the matched URI.</summary>
      <returns>A <see cref="T:System.Uri" /> instance.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.Template">
      <summary>Gets and sets the <see cref="T:System.UriTemplate" /> instance associated with this <see cref="T:System.UriTemplateMatch" /> instance.</summary>
      <returns>A <see cref="T:System.UriTemplate" /> instance.</returns>
    </member>
    <member name="P:System.UriTemplateMatch.WildcardPathSegments">
      <summary>Gets a collection of path segments that are matched by a wildcard in the URI template.</summary>
      <returns>A collection of path segments that are matched by a wildcard in the URI template.</returns>
    </member>
    <member name="T:System.UriTemplateMatchException">
      <summary>Represents an error when matching a <see cref="T:System.Uri" /> to a <see cref="T:System.UriTemplateTable" />.</summary>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateMatchException" /> class.</summary>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateMatchException" /> class with serialized data.</summary>
      <param name="info">The object that holds the serialized data object.</param>
      <param name="context">The contextual information about the source or destination.</param>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateMatchException" /> class with the specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.UriTemplateMatchException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateMatchException" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception. </param>
    </member>
    <member name="T:System.UriTemplateTable">
      <summary>A class that represents an associative set of <see cref="T:System.UriTemplate" /> objects.</summary>
    </member>
    <member name="M:System.UriTemplateTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class.</summary>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified collection of key/value pairs.</summary>
      <param name="keyValuePairs">A collection of key/value pairs that consist of URI templates and associated data.</param>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address.</summary>
      <param name="baseAddress">A <see cref="T:System.Uri" /> instance that contains the base address.</param>
    </member>
    <member name="M:System.UriTemplateTable.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.UriTemplate,System.Object}})">
      <summary>Initializes a new instance of the <see cref="T:System.UriTemplateTable" /> class with the specified base address and collection of key/value pairs.</summary>
      <param name="baseAddress">A <see cref="T:System.Uri" /> instance that contains the base address.</param>
      <param name="keyValuePairs">A collection of key/value pairs that consist of URI templates and associated data.</param>
    </member>
    <member name="P:System.UriTemplateTable.BaseAddress">
      <summary>Gets and sets the base address for the <see cref="T:System.UriTemplateTable" /> instance.</summary>
      <returns>A <see cref="T:System.Uri" /> that contains the base address.</returns>
    </member>
    <member name="P:System.UriTemplateTable.IsReadOnly">
      <summary>Gets a value that specifies whether the <see cref="T:System.UriTemplateTable" /> is read only.</summary>
      <returns>true if the <see cref="T:System.UriTemplateTable" /> property is read only; otherwise false.</returns>
    </member>
    <member name="P:System.UriTemplateTable.KeyValuePairs">
      <summary>Gets a collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</summary>
      <returns>A collection of key/value pairs that consist of <see cref="T:System.UriTemplate" /> objects and their associated data.</returns>
    </member>
    <member name="M:System.UriTemplateTable.MakeReadOnly(System.Boolean)">
      <summary>Makes the <see cref="T:System.UriTemplateTable" /> read only.</summary>
      <param name="allowDuplicateEquivalentUriTemplates">Specifies whether to allow duplicate equivalent <see cref="T:System.UriTemplate" /> instances in the <see cref="T:System.UriTemplateTable" />.</param>
    </member>
    <member name="M:System.UriTemplateTable.Match(System.Uri)">
      <summary>Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</summary>
      <returns>A collection of <see cref="T:System.UriTemplateMatch" /> instances.</returns>
      <param name="uri">The candidate URI.</param>
    </member>
    <member name="M:System.UriTemplateTable.MatchSingle(System.Uri)">
      <summary>Attempts to match a candidate <see cref="T:System.Uri" /> to the <see cref="T:System.UriTemplateTable" />.</summary>
      <returns>A single <see cref="T:System.UriTemplateMatch" /> instance.</returns>
      <param name="uri">The candidate URI.</param>
    </member>
    <member name="P:System.UriTemplateTable.OriginalBaseAddress">
      <summary>Gets the original base address.</summary>
      <returns>The original base address.</returns>
    </member>
    <member name="T:System.Collections.Generic.KeyedByTypeCollection`1">
      <summary>Provides a collection whose items are types that serve as keys.</summary>
      <typeparam name="TItem">The item types contained in the collection that also serve as the keys for the collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" /> class for a specified enumeration of objects.</summary>
      <param name="items">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.Object" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="items" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Find``1">
      <summary>Returns the first item in the collection of a specified type.</summary>
      <returns>The object of type <paramref name="T" /> if it is a reference type and the value of type <paramref name="T" /> if it is a value type. The default value of the type is returned if no object of type <paramref name="T" /> is contained in the collection: null if it is a reference type and 0 if it is a value type.</returns>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.FindAll``1">
      <summary>Returns a collection of objects of type <paramref name="T" /> that are contained in the <see cref="T:System.Collections.Generic.KeyedByTypeCollection`1" />.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <paramref name="T" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
      <typeparam name="T">The type of item in the collection to find.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.GetKeyForItem(`0)">
      <summary>Gets the type of an item contained in the collection.</summary>
      <returns>The type of the specified <paramref name="item" /> in the collection.</returns>
      <param name="item">The item in the collection whose type is to be retrieved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an element into the collection at a specific location.</summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.Remove``1">
      <summary>Removes an object of a specified type from the collection.</summary>
      <returns>The object removed from the collection.</returns>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.RemoveAll``1">
      <summary>Removes all of the elements of a specified type from the collection.</summary>
      <returns>The <see cref="T:System.Collections.ObjectModel.Collection`1" /> that contains the objects of type <paramref name="T" /> from the original collection.</returns>
      <typeparam name="T">The type of item in the collection to remove.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.KeyedByTypeCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at the specified index with a new object.</summary>
      <param name="index">The zero-based index of the <paramref name="item" /> to be replaced.</param>
      <param name="item">The object to add to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedCollection`1">
      <summary>Provides a thread-safe collection that contains objects of a type specified by the generic parameter as elements.</summary>
      <typeparam name="T">The type of object contained as items in the thread-safe collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.#ctor(System.Object,`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe collection.</summary>
      <param name="syncRoot">The object used to synchronize access the thread-safe collection.</param>
      <param name="list">The <see cref="T:System.Array" /> of type <paramref name="T" /> elements used to initialize the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)">
      <summary>Adds an item to the thread-safe, read-only collection.</summary>
      <param name="item">The element to be added to the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Clear">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems">
      <summary>Removes all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element value is found in the collection; otherwise false.</returns>
      <param name="item">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <paramref name="T " />copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Count">
      <summary>Gets the number of elements contained in the thread-safe collection.</summary>
      <returns>The number of elements contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)">
      <summary>Returns the index of the first occurrence of a value in the collection.</summary>
      <returns>The zero-based index of the first occurrence of the value in the collection.</returns>
      <param name="item">Removes all items from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <param name="item">The object to be inserted into the collection as an element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)">
      <summary>Inserts an item into the collection at a specified index.</summary>
      <param name="index">The zero-based index of the collection where the object is to be inserted.</param>
      <param name="item">The object to be inserted into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)">
      <summary>Gets an element from the thread-safe collection with a specified index.</summary>
      <returns>The object in the collection that has the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.Items">
      <summary>Gets the list of elements contained in the thread-safe collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)">
      <summary>Removes the first occurrence of a specified item from the collection.</summary>
      <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
      <param name="item">The object to remove from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)">
      <summary>Removes an item at a specified index from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)">
      <summary>Removes an item at a specified <paramref name="index" /> from the collection.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)">
      <summary>Replaces the item at a specified index with another item.</summary>
      <param name="index">The zero-based index of the object to be replaced.</param>
      <param name="item">The object to replace </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>false</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The destination <see cref="T:System.Array" /> for the elements of type <paramref name="T" /> copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value that indicates whether the collection is thread safe.</summary>
      <returns>true</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot">
      <summary>Gets the object used to synchronize access to the thread-safe collection.</summary>
      <returns>An object used to synchronize access to the thread-safe collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)">
      <summary>Adds an element to the collection.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The object to add to the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element <paramref name="value" /> is found in the collection; otherwise false.</returns>
      <param name="value"></param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the zero-based index of an element in the collection.</summary>
      <returns>The index of the <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The element in the collection whose index is being determined.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an object into the collection at a specified index.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> is to be inserted.</param>
      <param name="value">The object to insert into the collection.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="value" /> set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize">
      <summary>Gets a value that indicates whether the collection is fixed in size.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly">
      <summary>Gets a value that indicates whether the collection is read only.</summary>
      <returns>false</returns>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the item at a specified zero-based index.</summary>
      <returns>The item with the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.ArgumentException">The value set is null or is not of the correct generic type <paramref name="T" /> for the collection.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> specified is less than zero or greater than the number of items in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specified object as an element from the collection.</summary>
      <param name="value">The object to be removed from the collection.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedKeyedCollection`2">
      <summary>Provides a thread-safe collection that contains objects of a type specified by a generic parameter and that are grouped by keys.</summary>
      <typeparam name="K">The type of the key used to group the items contained in the collection.</typeparam>
      <typeparam name="T">The type of items contained in the thread-safe, keyed collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object and with keys compared in a specified way. </summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> of type <paramref name="K" /> used to compare key objects of type <paramref name="K" /> for equality.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null or <paramref name="comparer" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.#ctor(System.Object,System.Collections.Generic.IEqualityComparer{`0},System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedKeyedCollection`2" /> class with access synchronized by an explicitly specified object and with keys compared in a specified way. </summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe collection.</param>
      <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> of type <paramref name="K" /> used to compare key objects of type <paramref name="K" /> for equality.</param>
      <param name="dictionaryCreationThreshold">The number of items required to create a dictionary for the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null or <paramref name="comparer" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dictionaryCreationThreshold" /> is less than -1.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ChangeItemKey(`1,`0)">
      <summary>Changes the key for a specified item in the synchronized collection.</summary>
      <param name="item">The item whose key is being changed.</param>
      <param name="newKey">The new key for the specified item.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.ClearItems">
      <summary>Clears all items from the collection.</summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Contains(`0)">
      <summary>Returns a value that indicates whether the collection contains an item with a specified key.</summary>
      <returns>true if the collection contains an item with the key specified; otherwise, false.</returns>
      <param name="key">The key of type <paramref name="K" /> being tested for.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Dictionary">
      <summary>Gets the dictionary associated with the collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the key-item pairs for the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.GetKeyForItem(`1)">
      <summary>When overridden in a derived class, gets the key for a specified item.</summary>
      <returns>The key of type K for the specified <paramref name="item" /> of type <paramref name="T" />.</returns>
      <param name="item">The item of type <paramref name="T" /> whose key is being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.InsertItem(System.Int32,`1)">
      <summary>Inserts an item into the collection at a specified location.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The item of type <paramref name="T" /> to be inserted into the collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedKeyedCollection`2.Item(`0)">
      <summary>Gets the items with a specified key from the collection.</summary>
      <returns>The item of type <paramref name="T" /> from the collection with the key specified.</returns>
      <param name="key">The key for the item being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.Remove(`0)">
      <summary>Removes an item with a specified key from the collection and returns a value that indicates whether an item was removed.</summary>
      <returns>true if an item with the specified key was removed; otherwise, false.</returns>
      <param name="key">The key of the item to be removed.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.RemoveItem(System.Int32)">
      <summary>Removes an item at a specified location from the collection.</summary>
      <param name="index">The zero-based index that specifies the location of the item that is removed from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedKeyedCollection`2.SetItem(System.Int32,`1)">
      <summary>Replaces an item at a specified location of the collection with a new item.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The item of type <paramref name="T" /> to be inserted into the collection.</param>
    </member>
    <member name="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1">
      <summary>Provides a thread-safe, read-only collection that contains objects of a type specified by the generic parameter as elements.</summary>
      <typeparam name="T">The type of object contained as items in the thread-safe, read-only collection.</typeparam>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class. </summary>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> is null.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,System.Collections.Generic.IEnumerable{`0})">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified enumerable list of elements and with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <param name="list">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of elements used to initialize the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.#ctor(System.Object,`0[])">
      <summary>Initializes a new instance of the <see cref="T:System.Collections.Generic.SynchronizedReadOnlyCollection`1" /> class from a specified array of elements and with the object used to synchronize access to the thread-safe, read-only collection.</summary>
      <param name="syncRoot">The object used to synchronize access to the thread-safe, read-only collection.</param>
      <param name="list">The <see cref="T:System.Array" /> of type <paramref name="T" /> elements used to initialize the thread-safe, read-only collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="syncRoot" /> or <paramref name="list" /> is null. </exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Contains(`0)">
      <summary>Determines whether the collection contains an element with a specific value.</summary>
      <returns>true if the element <paramref name="value" /> is found in the collection; otherwise false.</returns>
      <param name="value">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
      <summary>Copies the elements of the collection to a specified array, starting at a particular index.</summary>
      <param name="array">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Count">
      <summary>Gets the number of elements contained in the thread-safe, read-only collection.</summary>
      <returns>The number of elements contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.GetEnumerator">
      <summary>Returns an enumerator that iterates through the synchronized, read-only collection.</summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for objects of the type stored in the collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.IndexOf(`0)">
      <summary>Returns the index of the first occurrence of a value in the collection.</summary>
      <returns>The zero-based index of the first occurrence of the <paramref name="value" /> in the collection.</returns>
      <param name="value">The element whose index is being retrieved.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Item(System.Int32)">
      <summary>Gets an element from the thread-safe, read-only collection with a specified index.</summary>
      <returns>The object in the collection that has the specified <paramref name="index" />.</returns>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.Items">
      <summary>Gets the list of elements contained in the thread-safe, read-only collection.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IList`1" /> of elements that are contained in the thread-safe, read-only collection.</returns>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <exception cref="T:System.NotSupportedException">Items cannot be cleared from a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <summary>Returns false and throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <returns>false</returns>
      <param name="value">The value to be removed from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="index"></param>
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be inserted into a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <summary>Throws a <see cref="T:System.NotSupportedException" /> if called.</summary>
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <param name="array">The <see cref="T:System.Array" /> that is the destination for the elements copied from the collection.</param>
      <param name="index">The zero-based index in the array at which copying begins.</param>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#ICollection#SyncRoot"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator"></member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
      <param name="value">The element to be added to the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Clear">
      <exception cref="T:System.NotSupportedException">Items cannot be cleared from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
      <param name="value">The object to locate in the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="value" /> is not an object of the type contained in the collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
      <param name="value">The element whose index is being retrieved.</param>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <param name="index">The zero-based index at which <paramref name="value" /> is to be inserted.</param>
      <param name="value">The object to insert into the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be inserted into a read-only collection.</exception>
    </member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsFixedSize"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#IsReadOnly"></member>
    <member name="P:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be set in a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
      <param name="value"></param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="M:System.Collections.Generic.SynchronizedReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)">
      <param name="index">The zero-based index of the element to be retrieved from the collection.</param>
      <exception cref="T:System.NotSupportedException">Items cannot be removed from a read-only collection.</exception>
    </member>
    <member name="T:System.IO.PipeException">
      <summary>Thrown when an error occurs within a named pipe.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class.</summary>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified serialization information and streaming context.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with a specified error message. </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.IO.PipeException" /> class with the specified error message and the inner exception.  </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="inner">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="M:System.IO.PipeException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message and error code. </summary>
      <param name="message">A string that contains the error message that explains the reason for the exception.</param>
      <param name="errorCode">An integer that contains the error code.</param>
    </member>
    <member name="P:System.IO.PipeException.ErrorCode">
      <summary>Gets the error code to be returned with the exception. </summary>
      <returns>An integer with the error code to be returned with the exception. </returns>
    </member>
    <member name="T:System.ServiceModel.ActionNotSupportedException">
      <summary>This exception is typically thrown on the client when the action related to the operation invoked does not match any action of operations in the server.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ActionNotSupportedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ActionNotSupportedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAccessDeniedException">
      <summary>The exception that is thrown when access to the address is denied.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message. </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAccessDeniedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAccessDeniedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressAlreadyInUseException">
      <summary>The exception that is thrown when an address is unavailable because it is already in use.</summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.AddressAlreadyInUseException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.AddressAlreadyInUseException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.AddressFilterMode">
      <summary>Specifies the type of match semantics used by the dispatcher to route incoming messages to the correct endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Exact">
      <summary>Indicates a filter that does an exact match on the address of an incoming message.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Prefix">
      <summary>Indicates a filter does the longest prefix matches on the address of an incoming message.</summary>
    </member>
    <member name="F:System.ServiceModel.AddressFilterMode.Any">
      <summary>Indicates a filter that matches on any address of an incoming message.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLevel">
      <summary>Specifies when to audit security events. </summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.None">
      <summary>No events will be recorded. This is the default.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Success">
      <summary>Only successful security-related events will be recorded.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.Failure">
      <summary>Only failed security-related events will be recorded.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLevel.SuccessOrFailure">
      <summary>Both failed and successful security-related events will be recorded.</summary>
    </member>
    <member name="T:System.ServiceModel.AuditLogLocation">
      <summary>Specifies the location where security-related event logs are written.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Default">
      <summary>Specifies the default location, which is determined by the operating system. If writing to the Security log is supported (such as on  and  and later platforms), the default log location is the Security log. Otherwise (such as in ), the default log location is the Application log.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Application">
      <summary>Specifies the Application log in the event log.</summary>
    </member>
    <member name="F:System.ServiceModel.AuditLogLocation.Security">
      <summary>Specifies the Security log in the event log. The calling thread must have SeAuditPrivilege to be able to write to the Security log.</summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpBinding">
      <summary>Represents a binding that a  service can use to configure and expose endpoints that are able to communicate with ASMX-based Web services and clients and other services that conform to the WS-I Basic Profile 1.1.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configurationName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.BasicHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding with the configuration name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpBinding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.1.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the manager of the message buffers that receive messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524288 (0x80000) bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxBufferSize">
      <summary>Gets or sets the maximum size for a buffer that receives messages from the channel.</summary>
      <returns>The maximum size, in bytes, of a buffer that stores messages while they are processed for an endpoint configured with this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"https" if the security mode in the transport binding element is set to <see cref="F:System.ServiceModel.BasicHttpSecurityMode.Transport" /> or <see cref="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential" />; "http" otherwise.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.Security">
      <summary>Gets the type of security used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.BasicHttpSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />. </returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Returns whether the  constraint values placed on the complexity of SOAP message structure should be serialized.</summary>
      <returns>true if reader quotas should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeSecurity">
      <summary>Returns whether security settings should be serialized based upon whether serialization already occurs, for example at the message or transport level. </summary>
      <returns>true if security should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpBinding.ShouldSerializeTextEncoding">
      <summary>Returns whether settings for text encoding should be serialized.</summary>
      <returns>true if text encoding should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>Always false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether messages are sent buffered or streamed.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> that indicates whether messages are sent buffered or streamed.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpContextBinding">
      <summary>Provides a context-enabled binding for the <see cref="T:System.ServiceModel.BasicHttpBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpContextBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpContextBinding" /> class with the specified <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />. </summary>
      <param name="securityMode">The HTTP security mode.</param>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpContextBinding" /> class with the specified binding configuration.</summary>
      <param name="configName">The name of the binding configuration.</param>
    </member>
    <member name="P:System.ServiceModel.BasicHttpContextBinding.ContextManagementEnabled">
      <summary>Gets a value that specifies whether context management is enabled.</summary>
      <returns>true if context management is enabled; otherwise, false. </returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpContextBinding.CreateBindingElements">
      <summary>Creates an ordered collection of binding elements that are contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.BasicHttpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageCredentialType">
      <summary>Enumerates credential types the client can authenticate with when security is enabled in the BasicHttpBinding binding.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName">
      <summary>Indicates that the client be authenticated using a username credential. </summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpMessageCredentialType.Certificate">
      <summary>Indicates that a client be authenticated using a certificate. </summary>
    </member>
    <member name="T:System.ServiceModel.BasicHttpMessageSecurity">
      <summary>Configures message-level security settings for <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.AlgorithmSuite">
      <summary>Specifies the algorithm suite to use with <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default value is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpMessageSecurity.ClientCredentialType">
      <summary>Specifies the type of credential with which the client authenticates.</summary>
      <returns>A member of the <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" /> enumeration. The default value is <see cref="F:System.ServiceModel.BasicHttpMessageCredentialType.UserName" />.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeAlgorithmSuite">
      <summary>Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</summary>
      <returns>true if the algorithm suite should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpMessageSecurity.ShouldSerializeClientCredentialType">
      <summary>Returns whether the client credential type should be serialized.</summary>
      <returns>true if the client credential type should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurity">
      <summary>Configures the security settings of a basicHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.BasicHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Message">
      <summary>Gets the message-level security settings for a basicHttpBinding binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.BasicHttpMessageSecurity" />, which represents the message-level security settings for this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Mode">
      <summary>Gets or sets the security mode for a basicHttpBinding binding.</summary>
      <returns>A value in the <see cref="T:System.ServiceModel.BasicHttpSecurityMode" /> enumeration. The default value for this property is <see cref="F:System.ServiceModel.BasicHttpSecurityMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a legal value for <see cref="T:System.ServiceModel.BasicHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeMessage">
      <summary>Returns whether a message element should be serialized.</summary>
      <returns>true if the message should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.BasicHttpSecurity.ShouldSerializeTransport">
      <summary>Returns whether the transport element should be serialized.</summary>
      <returns>true if the transport element should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.BasicHttpSecurity.Transport">
      <summary>Gets the transport-level security settings for a basicHttpBinding binding.</summary>
      <returns>An <see cref="T:System.ServiceModel.HttpTransportSecurity" />.</returns>
    </member>
    <member name="T:System.ServiceModel.BasicHttpSecurityMode">
      <summary>Specifies the types of security that can be used with the system-provided <see cref="T:System.ServiceModel.BasicHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.None">
      <summary>The SOAP message is not secured during transfer. This is the default behavior.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Transport">
      <summary>Security is provided using HTTPS. The service must be configured with SSL certificates. The SOAP message is protected as a whole using HTTPS. The service is authenticated by the client using the service’s SSL certificate. The client authentication is controlled through the <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" />.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.Message">
      <summary>Security is provided using SOAP message security. For the <see cref="T:System.ServiceModel.BasicHttpBinding" />, the system requires that the server certificate be provided to the client separately. The valid client credential types for this binding are UserName and Certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security. This mode is applicable when the user is authenticating with a UserName or Certificate credential and there is an existing HTTPS deployment for securing message transfer.</summary>
    </member>
    <member name="F:System.ServiceModel.BasicHttpSecurityMode.TransportCredentialOnly">
      <summary>This mode does not provide message integrity and confidentiality. It provides only HTTP-based client authentication. Use this mode with caution. It should be used in environments where the transfer security is being provided by other means (such as IPSec) and only client authentication is provided by the  infrastructure.</summary>
    </member>
    <member name="T:System.ServiceModel.CallbackBehaviorAttribute">
      <summary>Configures a callback service implementation in a client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CallbackBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a service closes a duplex session.</summary>
      <returns>true if duplex callback objects automatically close a session when the service closes a duplex session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ConcurrencyMode">
      <summary>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</summary>
      <returns>true if unknown serialization data is never sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <see cref="T:System.ServiceModel.FaultException`1" />of type <see cref="T:System.String" /> and sent as a fault message. Set this to true only during development to troubleshoot a service.</summary>
      <returns>true if unhandled exceptions are to be returned as SOAP faults; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items allowed in a serialized object.</summary>
      <returns>The maximum number of items allowed in an object. The default is <see cref="F:System.Int32.MaxValue" />.</returns>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the callback behavior.</summary>
      <param name="serviceEndpoint">The endpoint for the callback object.</param>
      <param name="parameters">The collection of binding parameters that are configured.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Configures the client runtime to support the callback object.</summary>
      <param name="serviceEndpoint">The endpoint configured by the attribute.</param>
      <param name="clientRuntime">The client run-time object that the attribute configures.</param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)" /> method. This implementation has no effect.</summary>
      <param name="serviceEndpoint">The endpoint to be modified.   </param>
      <param name="endpointDispatcher">The endpoint dispatcher that the method modifies.   </param>
    </member>
    <member name="M:System.ServiceModel.CallbackBehaviorAttribute.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Validates the endpoint description prior to building the runtime.</summary>
      <param name="serviceEndpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionIsolationLevel">
      <summary>Specifies the transaction isolation level.</summary>
      <returns>A <see cref="T:System.Transactions.IsolationLevel" /> value that specifies the transaction isolation level. The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Transactions.IsolationLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted. The default value is <see cref="F:System.TimeSpan.Zero" />.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.ServiceModel.CallbackBehaviorAttribute.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether the system or the application enforces SOAP MustUnderstand header processing.</summary>
      <returns>true if the system is to perform SOAP header MustUnderstand processing; otherwise false, which indicates that the application performs this processing. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory">
      <summary>Creates and manages the channels that are used by clients to send messages to service endpoints.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
      <summary>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</summary>
      <param name="configurationName">The name of the configuration file.</param>
      <exception cref="T:System.InvalidOperationException">The service endpoint of the channel factory is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateDescription">
      <summary>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> associated with the channel factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.CreateFactory">
      <summary>Builds the channel factory for the current endpoint of the factory.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> for the endpoint of the current factory.</returns>
      <exception cref="T:System.InvalidOperationException">The endpoint of the service that the factory channels connect to is null or the endpoint's binding is null or is missing the element with the configuration name specified.</exception>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Credentials">
      <summary>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" /> used by clients if they are configured for the factory or if the endpoint is non-null and is in either the created or opening communication state; otherwise null.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.ChannelFactory.Endpoint">
      <summary>Gets the service endpoint to which the channels produced by the factory connect.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which the channels produced by the factory connect.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.EnsureOpened">
      <summary>Opens the current channel factory if it is not yet opened.</summary>
      <exception cref="T:System.ObjectDisposedException">The current factory is either closing or closed and so cannot be opened.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or null if not present.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes the service endpoint of the channel factory with a specified binding and address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> with which to initialize the channel factory.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> with which to initialize the channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes the service endpoint of the channel factory with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to initialize the channel factory with.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpoint" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes the service endpoint of the channel factory with a specified address and configuration.</summary>
      <param name="configurationName">The name of the configuration file used to initialize the channel factory.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> with which to initialize the channel factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnAbort">
      <summary>Terminates the inner channel factory of the current channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous operation.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
      <summary>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous close operation on the inner channel factory of the current channel factory. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous open operation on the inner channel factory of the current channel factory. </summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
      <summary>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The inner channel of the current channel is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpened">
      <summary>Initializes a read-only copy of the <see cref="T:System.ServiceModel.Description.ClientCredentials" /> object for the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.OnOpening">
      <summary>Builds the inner channel factory for the current channel.</summary>
      <exception cref="T:System.InvalidOperationException">The inner channel factory for the channel factory is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
      <summary>Closes the current channel factory.</summary>
    </member>
    <member name="T:System.ServiceModel.ChannelFactory`1">
      <summary>A factory that creates channels of different types that are used by clients to send messages to variously configured service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory. This type must be either <see cref="T:System.ServiceModel.Channels.IOutputChannel" /> or <see cref="T:System.ServiceModel.Channels.IRequestChannel" />.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> specified for the channels produced by the factory.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and endpoint address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified binding and remote address.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="remoteAddress">The address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class that produces channels with a specified endpoint.</summary>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="endpoint" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class with a specified endpoint configuration name.</summary>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class associated with a specified name for the endpoint configuration and remote address.</summary>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelFactory`1" /> class. </summary>
      <param name="channelType">The <see cref="T:System.Type" /> of channel produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="channelType" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <paramref name="channelType" /> is a class or value type and is not an interface.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel">
      <summary>Creates a channel of a specified type to a specified endpoint address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel of a specified type that is used to send messages to a service endpoint that is configured with a specified binding.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel of a specified type that is used to send messages to a service endpoint at a specified transport address that is configured with a specified binding.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to configure the endpoint.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a channel that is used to send messages to a service at a specific endpoint address through a specified transport address.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateChannel(System.String)">
      <summary>Creates a channel that is used to send messages to a service whose endpoint is configured in a specified way.</summary>
      <returns>The <paramref name="TChannel" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> created by the factory.</returns>
      <param name="endpointConfigurationName">The name of the endpoint configuration used for the service.</param>
      <exception cref="T:System.InvalidOperationException">The <see cref="T:System.ServiceModel.ChannelFactory" /> has duplex operations it does not support.</exception>
    </member>
    <member name="M:System.ServiceModel.ChannelFactory`1.CreateDescription">
      <summary>Creates a description of the service endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> of the service.</returns>
      <exception cref="T:System.InvalidOperationException">The callback contract is null but the service endpoint requires one that is non-null.</exception>
    </member>
    <member name="T:System.ServiceModel.ChannelTerminatedException">
      <summary>This exception is typically thrown on the client when a channel is terminated due to server closing the associated connection.</summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with serialization information and streaming context specified. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ChannelTerminatedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ChannelTerminatedException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1">
      <summary>Provides the base implementation used to create  client objects that can call services.</summary>
      <typeparam name="TChannel">The channel to be used to connect to the service.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the default target endpoint from the application configuration file. </summary>
      <exception cref="T:System.InvalidOperationException">Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified binding and target address. </summary>
      <param name="binding">The binding with which to make calls to the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified  <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
      <param name="endpoint">The endpoint for a service that allows clients to find and communicate with the service.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the <paramref name="callbackInstance" /> as the callback object in a duplex conversation. </summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.InvalidOperationException">Either there is no default endpoint information in the configuration file, more than one endpoint in the file, or no configuration file.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class. </summary>
      <param name="callbackInstance">The callback service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The address of the service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified  <see cref="T:System.ServiceModel.InstanceContext" /> and  <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</summary>
      <param name="callbackInstance">The callback object that the client application uses to listen for messages from the connected service.</param>
      <param name="endpoint">The endpoint for a service that allows clients to find and communicate with the service.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified callback service and endpoint configuration information. </summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file. </param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="callbackInstance">The callback object that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the configuration information specified in the application configuration file by <paramref name="endpointConfigurationName" />. </summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The specified endpoint information is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class using the specified target address and endpoint information. </summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientBase`1" /> class.</summary>
      <param name="endpointConfigurationName">The name of the endpoint in the application configuration file.</param>
      <param name="remoteAddress">The address of the service.</param>
      <exception cref="T:System.ArgumentNullException">The endpoint is null.</exception>
      <exception cref="T:System.ArgumentNullException">The remote address is null.</exception>
      <exception cref="T:System.InvalidOperationException">The endpoint cannot be found or the endpoint contract is not valid.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Abort">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition immediately from its current state into the closed state.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Channel">
      <summary>Gets the inner channel used to to send messages to variously configured service endpoints.</summary>
      <returns>A channel of a specified type.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ChannelFactory">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</summary>
      <returns>A <see cref="T:System.ServiceModel.ChannelFactory`1" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.ClientCredentials">
      <summary>Gets the client credentials used to call an operation.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Description.ClientCredentials" /> that represents the proof of identity presented by the client.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Close">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.CreateChannel">
      <summary>Returns a new channel to the service.</summary>
      <returns>A channel of the type of the service contract.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.DisplayInitializationUI">
      <summary>Instructs the inner channel to display a user interface if one is required to initialize the channel prior to using it.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.Endpoint">
      <summary>Gets the target endpoint for the service to which the  client can connect.</summary>
      <returns>The target endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.GetDefaultValueForInitialization``1">
      <summary>Replicates the behavior of the default keyword in C#.</summary>
      <returns>Returns null if T is a reference type and zero if T is a numeric value type.</returns>
      <typeparam name="T">The type that is identified as reference or numeric by the keyword.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InnerChannel">
      <summary>Gets the underlying <see cref="T:System.ServiceModel.IClientChannel" /> implementation.</summary>
      <returns>The client channel for the  client object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase{`0}.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase{`0}.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)">
      <summary>Provides support for implementing the event-based asynchronous pattern. 
    For more information about 
   this pattern, see Event-based Asynchronous Pattern Overview.</summary>
      <param name="beginOperationDelegate">A delegate that is used for calling the asynchronous operation.</param>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="endOperationDelegate">A delegate that is used to end the asynchronous call after it has completed.</param>
      <param name="operationCompletedCallback">A client-supplied callback that is invoked when the asynchronous method is complete. The callback is passed to the <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
      <param name="userState">The <paramref name="userState" /> object to associate with the asynchronous call.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.Open">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.State">
      <summary>Gets the current state of the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#IDisposable#Dispose">
      <summary>Explicit implementation of the <see cref="M:System.IDisposable.Dispose" /> method.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" />.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous begin close operation.</returns>
      <param name="timeout">The period within which the call must complete.</param>
      <param name="callback">The callback object invoked when the operation completes.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</returns>
      <param name="timeout">The time within which the call must complete.</param>
      <param name="callback">The method that receives the callback on completion.</param>
      <param name="state">The state data.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Close(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from its current state into the closed state.</summary>
      <param name="timeout">The time within which the call must complete.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closed">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object has transitioned from its current state to the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Closing">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from its current state to the closed state.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous close operation.</param>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> used to complete the asynchronous end open operation.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Faulted">
      <summary>The event handler that is invoked when a fault occurs while performing an operation on the <see cref="T:System.ServiceModel.ClientBase`1" /> object.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Open(System.TimeSpan)">
      <summary>Causes the <see cref="T:System.ServiceModel.ClientBase`1" /> object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The time period within which the call must complete.</param>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opened">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ClientBase`1.System#ServiceModel#ICommunicationObject#Opening">
      <summary>The event handler that is invoked when the <see cref="T:System.ServiceModel.ClientBase`1" /> object transitions from the created state to the opened state.</summary>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate">
      <summary>A delegate that is used by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> for calling asynchronous operations on the client. </summary>
      <returns>The result of the asynchronous call.</returns>
      <param name="inValues">The input values to the asynchronous call.</param>
      <param name="asyncCallback">Reference to the method to be called when the corresponding asynchronous operation completes.</param>
      <param name="state">An <see cref="T:System.Object" /> that lets the client distinguish between different asynchronous calls. It is made available to the client in the arguments parameter of the event completion callback.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.EndOperationDelegate">
      <summary>A delegate that is invoked by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> on successful completion of the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" /> to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</summary>
      <returns>An array of <see cref="T:System.Object" /> that contains the results of the call to the asynchronous method. The operation may have multiple return values, which are all returned in this object array.</returns>
      <param name="result">The result returned by the call made by <see cref="M:System.ServiceModel.ClientBase`1.InvokeAsync(System.ServiceModel.ClientBase.BeginOperationDelegate,System.Object[],System.ServiceModel.ClientBase.EndOperationDelegate,System.Threading.SendOrPostCallback,System.Object)" />to <see cref="T:System.ServiceModel.ClientBase`1.BeginOperationDelegate" />.</param>
    </member>
    <member name="T:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs">
      <summary>Stores the results from an asynchronous call made by the client.</summary>
    </member>
    <member name="P:System.ServiceModel.ClientBase`1.InvokeAsyncCompletedEventArgs.Results">
      <summary>Gets the results from an asynchronous call made by the client.</summary>
      <returns>An array of <see cref="T:System.Object" /> that contains the results from an asynchronous call made by the client.</returns>
    </member>
    <member name="T:System.ServiceModel.ClientCredentialsSecurityTokenManager">
      <summary>Manages security tokens for the client.</summary>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.#ctor(System.ServiceModel.Description.ClientCredentials)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ClientCredentialsSecurityTokenManager" /> class.</summary>
      <param name="clientCredentials">The <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="clientCredentials" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ClientCredentialsSecurityTokenManager.ClientCredentials">
      <summary>Gets the client credentials.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ClientCredentials" />.</returns>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenAuthenticator(System.IdentityModel.Selectors.SecurityTokenRequirement,System.IdentityModel.Selectors.SecurityTokenResolver@)">
      <summary>Creates a security token authenticator.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <param name="outOfBandTokenResolver">When this method returns, contains a <see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />. This parameter is passed uninitialized. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenProvider(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Creates a security token provider.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />.</returns>
      <param name="tokenRequirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="tokenRequirement" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.IdentityModel.Selectors.SecurityTokenVersion)">
      <summary>Creates a security token serializer.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" /> of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.CreateSecurityTokenSerializer(System.ServiceModel.Security.SecurityVersion)">
      <summary>Creates a security token serializer.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenSerializer" />.</returns>
      <param name="version">The <see cref="T:System.ServiceModel.Security.SecurityVersion" /> of the security token.</param>
    </member>
    <member name="M:System.ServiceModel.ClientCredentialsSecurityTokenManager.IsIssuedSecurityTokenRequirement(System.IdentityModel.Selectors.SecurityTokenRequirement)">
      <summary>Gets a value that indicates whether the specified token requirement is an issued security token requirement.</summary>
      <returns>true if the specified token requirement is an issued security token requirement; otherwise, false. The default is false.</returns>
      <param name="requirement">The <see cref="T:System.IdentityModel.Selectors.SecurityTokenRequirement" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="requirement" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.CommunicationException">
      <summary>Represents a communication error in either the service or client application.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified serialization information and context objects. </summary>
      <param name="info">Information relevant to the deserialization process.</param>
      <param name="context">The context of the deserialization process.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message.</summary>
      <param name="message">The description of the error condition.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationException" /> class, using the specified message and the inner exception.</summary>
      <param name="message">The description of the error condition.</param>
      <param name="innerException">The inner exception to be used.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectAbortedException">
      <summary>The exception that is thrown when the call is to an <see cref="T:System.ServiceModel.ICommunicationObject" /> object that has aborted.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> object. </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class with the specified message. </summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectAbortedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectAbortedException" /> class using the specified message and inner exception. </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationObjectFaultedException">
      <summary>The exception that is thrown when a call is made to a communication object that has faulted. </summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class when deserializing a stream using the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> and <see cref="T:System.Runtime.Serialization.StreamingContext" /> objects.</summary>
      <param name="info">The serialization information used to create the exception object.</param>
      <param name="context">The context within which the exception object is created.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message.</summary>
      <param name="message">The message that describes the exception.</param>
    </member>
    <member name="M:System.ServiceModel.CommunicationObjectFaultedException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" /> class using the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.CommunicationState">
      <summary>Defines the states in which an <see cref="T:System.ServiceModel.ICommunicationObject" /> can exist. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Created">
      <summary>Indicates that the communication object has been instantiated and is configurable, but not yet open or ready for use.</summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opening">
      <summary>Indicates that the communication object is being transitioned from the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state to the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Opened">
      <summary>Indicates that the communication object is now open and ready to be used. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closing">
      <summary>Indicates that the communication object is transitioning to the <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Closed">
      <summary>Indicates that the communication object has been closed and is no longer usable. </summary>
    </member>
    <member name="F:System.ServiceModel.CommunicationState.Faulted">
      <summary>Indicates that the communication object has encountered an error or fault from which it cannot recover and from which it is no longer usable. </summary>
    </member>
    <member name="T:System.ServiceModel.ConcurrencyMode">
      <summary>Specifies whether a service class supports single-threaded or multi-threaded modes of operation. </summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Single">
      <summary>The service instance is single-threaded and does not accept reentrant calls. If the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> property is <see cref="F:System.ServiceModel.InstanceContextMode.Single" />, and additional messages arrive while the instance services a call, these messages must wait until the service is available or until the messages time out.</summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Reentrant">
      <summary>The service instance is single-threaded and accepts reentrant calls. The reentrant service accepts calls when you call another service; it is therefore your responsibility to leave your object state consistent before callouts and you must confirm that operation-local data is valid after callouts. Note that the service instance is unlocked only by calling another service over a  channel. In this case, the called service can reenter the first service via a callback. If the first service is not reentrant, the sequence of calls results in a deadlock. For details, see <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode" />. </summary>
    </member>
    <member name="F:System.ServiceModel.ConcurrencyMode.Multiple">
      <summary>The service instance is multi-threaded. No synchronization guarantees are made. Because other threads can change your service object at any time, you must handle synchronization and state consistency at all times.</summary>
    </member>
    <member name="T:System.ServiceModel.DataContractFormatAttribute">
      <summary>Instructs the  infrastructure to use the <see cref="T:System.Runtime.Serialization.DataContractSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.DataContractFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DataContractFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.DataContractFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the serialized data.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="T:System.ServiceModel.DeadLetterQueue">
      <summary>Specifies the type of dead-letter queue to be used.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.None">
      <summary>No dead-letter queue is to be used.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.System">
      <summary>Use the system-wide, dead-letter queue.</summary>
    </member>
    <member name="F:System.ServiceModel.DeadLetterQueue.Custom">
      <summary>Custom dead-letter queue.</summary>
    </member>
    <member name="T:System.ServiceModel.DeliveryRequirementsAttribute">
      <summary>Specifies the feature requirements that bindings must provide to the service or client implementation.</summary>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DeliveryRequirementsAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.QueuedDeliveryRequirements">
      <summary>Specifies whether the binding for a service must support queued contracts.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values; the default is <see cref="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed" />.</returns>
      <exception cref="T:System.ArgumentException">The value is not one of the <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.RequireOrderedDelivery">
      <summary>Specifies whether the binding must support ordered messages.</summary>
      <returns>true instructs  to confirm that the binding must support the ordering of messages; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.AddBindingParameters(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)" /> method to attach binding parameters correctly.</summary>
      <param name="description">The contract description.</param>
      <param name="endpoint">The service endpoint for the contract.</param>
      <param name="parameters">The binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.ApplyClientBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)" /> method for client support.</summary>
      <param name="description">The contract description to which the behavior is attached.</param>
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="proxy">The client runtime on which the behavior operates.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)">
      <summary>Implementation of the <see cref="M:System.ServiceModel.Description.IContractBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.DispatchRuntime)" /> method that enables service support.</summary>
      <param name="description">The contract description to which the behavior is attached.</param>
      <param name="endpoint">The endpoint for the contract.</param>
      <param name="dispatch">The dispatch runtime that supports the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.DeliveryRequirementsAttribute.System#ServiceModel#Description#IContractBehavior#Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Implements the <see cref="M:System.ServiceModel.DeliveryRequirementsAttribute.System.ServiceModel.Description.IContractBehavior.Validate(System.ServiceModel.Description.ContractDescription,System.ServiceModel.Description.ServiceEndpoint)" /> method to enable validation support.</summary>
      <param name="description">The contract description.</param>
      <param name="endpoint">The endpoint to be validated.</param>
    </member>
    <member name="P:System.ServiceModel.DeliveryRequirementsAttribute.TargetContract">
      <summary>Gets or sets the type to which it applies.</summary>
      <returns>The <see cref="T:System.Type" /> to which the attribute applies.</returns>
    </member>
    <member name="T:System.ServiceModel.DnsEndpointIdentity">
      <summary>Specifies the DNS identity of the server.</summary>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DnsEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DnsEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of this class from a DNS name.</summary>
      <param name="dnsName">The DNS name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="dnsName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Dns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexChannelFactory`1">
      <summary>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</summary>
      <typeparam name="TChannel">The type of channel produced by the channel factory.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified callback object, binding, and remote address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified endpoint.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which channels produced by the factory connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The configuration name used for the endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract, and a specified configuration and endpoint address.</summary>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackObject" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified instance context.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with a context that implements the callback contract and a specified binding.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified binding and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified instance context, binding, and remote address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified endpoint.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> to which channels produced by the factory connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with an object that implements the callback contract and a specified configuration and endpoint address.</summary>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstance" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and binding.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified type of callback instance, binding, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="remoteAddress">The remote address that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="binding" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and service endpoint.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpoint">The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> for the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with specified type of callback instance and configuration.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="endpointConfigurationName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.#ctor(System.Type,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexChannelFactory`1" /> class with the specified type of callback instance, configuration, and remote address.</summary>
      <param name="callbackInstanceType">The <see cref="T:System.Type" /> that provides the callback instance that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <param name="remoteAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="callbackInstanceType" /> or <paramref name="endpointConfigurationName" /> or <paramref name="remoteAddress" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.Object,System.String)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackObject">The <see cref="T:System.Object" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> used to connect to the service by channels produced by the factory.</param>
      <param name="endpointAddress">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> or <paramref name="endpointAddress" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A duplex channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> that provides the location of the service.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexChannelFactory`1.CreateChannel(System.ServiceModel.InstanceContext,System.String)">
      <summary>Creates a duplex channel between a service and a callback instance on the client.</summary>
      <returns>A channel of type <paramref name="TChannel" />, the generic parameter for the factory, between the client and service.</returns>
      <param name="callbackInstance">The <see cref="T:System.ServiceModel.InstanceContext" /> that the client uses to listen for messages from the connected service.</param>
      <param name="endpointConfigurationName">The name used for the endpoint configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="endpointConfigurationName" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">
        <paramref name="callbackInstance" /> or <paramref name="callbackInstance" />.UserObject is null.</exception>
    </member>
    <member name="T:System.ServiceModel.DuplexClientBase`1">
      <summary>Used to create a channel to a duplex service and associate that channel with a callback object.</summary>
      <typeparam name="TChannel">The type of the channel to be created.</typeparam>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The binding is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class with the specified callback object and service endpoint.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The service endpoint is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.Object,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, endpoint configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, binding, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="binding">The binding with which to call the service.</param>
      <param name="remoteAddress">The service endpoint address to use.</param>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class with the specified callback object and service endpoint.</summary>
      <param name="callbackInstance">An <see cref="T:System.ServiceModel.InstanceContext" /> object that associates the callback object with the channel to the service.</param>
      <param name="endpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The service endpoint is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object and configuration name.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.#ctor(System.ServiceModel.InstanceContext,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.DuplexClientBase`1" /> class using the specified callback object, configuration name, and service endpoint address.</summary>
      <param name="callbackInstance">An object used to create the instance context that associates the callback object with the channel to the service.</param>
      <param name="endpointConfigurationName">The name of the client endpoint information in the application configuration file.</param>
      <param name="remoteAddress">The address of the service endpoint to use.</param>
      <exception cref="T:System.ArgumentNullException">The callback instance is null.</exception>
      <exception cref="T:System.ArgumentNullException">The configuration name is null.</exception>
      <exception cref="T:System.ArgumentNullException">The address is null.</exception>
    </member>
    <member name="M:System.ServiceModel.DuplexClientBase`1.CreateChannel">
      <summary>Returns a channel to the service associated with the callback object passed to the constructor.</summary>
      <returns>A channel to the service of the type of the service contract interface.</returns>
    </member>
    <member name="P:System.ServiceModel.DuplexClientBase`1.InnerDuplexChannel">
      <summary>Gets the inner duplex channel.</summary>
      <returns>The inner duplex channel.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress">
      <summary>Provides a unique network address that a client uses to communicate with a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI string.</summary>
      <param name="uri">The URI that identifies the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeader[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and headers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="addressHeaders">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, and header collection.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="headers">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.#ctor(System.Uri,System.ServiceModel.EndpointIdentity,System.ServiceModel.Channels.AddressHeaderCollection,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryReader)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress" /> class with a specified URI, identity, header collection, and metadata and extension readers.</summary>
      <param name="uri">The <see cref="T:System.Uri" /> that identifies the endpoint location.</param>
      <param name="identity">The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</param>
      <param name="headers">The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information used to interact with the endpoint.</param>
      <param name="metadataReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint metadata is obtained.</param>
      <param name="extensionReader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which extensions are obtained.</param>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.AnonymousUri">
      <summary>Gets a version-neutral representation of the anonymous URI.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/Anonymous.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ApplyTo(System.ServiceModel.Channels.Message)">
      <summary>Assigns the URI and properties of the endpoint address to the values of the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> whose header values are being assigned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.Equals(System.Object)">
      <summary>Returns a value that indicates whether a specified object is equivalent to the current endpoint address.</summary>
      <returns>true if the specified object is equivalent to the current address; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to be compared to the current endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetHashCode">
      <summary>Provides a unique hash code for the current endpoint address. </summary>
      <returns>A unique hash code for the current endpoint address.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtExtensions">
      <summary>Gets the XML dictionary reader that provides access to the extensions.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the extensions.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.GetReaderAtMetadata">
      <summary>Gets the XML dictionary reader that provides access to the metadata for an endpoint.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that provides access to the metadata for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Headers">
      <summary>Gets the collection of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> that contains address information for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Identity">
      <summary>Gets the identity for the endpoint used to authenticate it.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsAnonymous">
      <summary>Gets a value that indicates whether the endpoint is anonymous.</summary>
      <returns>true if the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.AnonymousUri" />; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.IsNone">
      <summary>Gets a value that indicates whether the URI for the endpoint is the <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />.</summary>
      <returns>true if the URI of the endpoint is <see cref="P:System.ServiceModel.EndpointAddress.NoneUri" />; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.NoneUri">
      <summary>Gets a version-neutral URI used for the address of an endpoint to which a message must not be sent.</summary>
      <returns>A <see cref="T:System.Uri" /> with the value http://schemas.microsoft.com/2005/12/ServiceModel/Addressing/None.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Equality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <returns>true if the endpoint addresses are equivalent; otherwise, false.</returns>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.op_Inequality(System.ServiceModel.EndpointAddress,System.ServiceModel.EndpointAddress)">
      <summary>Returns a value that indicates whether specified endpoint addresses are not equivalent.</summary>
      <returns>true if the endpoint addresses are not equivalent; otherwise, false.</returns>
      <param name="address1">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
      <param name="address2">One of the <see cref="T:System.ServiceModel.EndpointAddress" /> objects being compared.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader)">
      <summary>Reads an endpoint address for a specified address version from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads an endpoint address for a specified address version with a specified qualified name from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">Contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">Contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader)">
      <summary>Reads an endpoint address for a specified address version from a specified XML reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlReader,System.String,System.String)">
      <summary>Reads an endpoint address for a specified address version with a specified qualified name from a specified XML reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML reader.</returns>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">Contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">Contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader)">
      <summary>Reads an endpoint address from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> read from the XML dictionary reader.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ReadFrom(System.Xml.XmlDictionaryReader,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Reads an endpoint address with a specified qualified name from a specified XML dictionary reader.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> with the qualified name read from the XML dictionary reader.</returns>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> from which the endpoint address is obtained.</param>
      <param name="localName">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">An <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.ToString">
      <summary>Returns a canonical string representation of the URI that is contained in the endpoint address.</summary>
      <returns>The URI that identifies the endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddress.Uri">
      <summary>Gets the URI for the endpoint.</summary>
      <returns>The <see cref="T:System.Uri" /> for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Saves all the child nodes of the node to the XML dictionary writer specified.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteContentsTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Saves all the child nodes of the node to the XML writer specified.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter)">
      <summary>Saves the current endpoint address of a specified version to a specified XML dictionary writer.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlDictionaryWriter,System.Xml.XmlDictionaryString,System.Xml.XmlDictionaryString)">
      <summary>Saves the current endpoint address of a specified version to an XML dictionary writer with a specified namespace and local name.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> to which the endpoint address is saved.</param>
      <param name="localName">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter)">
      <summary>Saves the current endpoint address of a specified version to a specified XML writer.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress.WriteTo(System.ServiceModel.Channels.AddressingVersion,System.Xml.XmlWriter,System.String,System.String)">
      <summary>Saves the current endpoint address of a specified version to an XML writer with a specified namespace and local name.</summary>
      <param name="addressingVersion">The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> of the current endpoint address.</param>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the endpoint address is saved.</param>
      <param name="localName">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the local name for the XML node to contain the endpoint address.</param>
      <param name="ns">The <see cref="T:System.Xml.XmlDictionaryString" /> that contains the namespace for the XML node to contain the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> or <paramref name="addressingVersion" /> or <paramref name="localName" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.EndpointAddress10">
      <summary>Provides a serializable type of endpoint address that is WS-Addressing V1 compliant and that enables it to be exposed as part of the service contract.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress10" /> class with a specified endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress10" /> class that contains the specified endpoint address.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Returns an XML-qualified name that describes the XML representation of the version 1.0 endpoint address from a specified cached schema.</summary>
      <returns>A <see cref="T:System.Xml.XmlQualifiedName" /> that describes the XML representation of the endpoint address.</returns>
      <param name="xmlSchemaSet">A <see cref="T:System.Xml.Schema.XmlSchema" /> that contains a cache of the XML schema definition language (XSD) schemas for the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Returns null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the current endpoint address is saved.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddress10.ToEndpointAddress">
      <summary>Retrieves the endpoint address contained in this serializable type.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressAugust2004">
      <summary>Provides a serializable type of endpoint address that is compliant with the version of WS-Addressing published in August 2004 and that enables it to be exposed as part of the service contract.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.FromEndpointAddress(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddress10" /> class with a specified endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddressAugust2004" /> class that contains the specified endpoint address.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> used to initialize the instance of this class.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.GetSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>Returns an XML-qualified name that describes the XML representation of the version 1 endpoint address from a specified cached schema.</summary>
      <returns>A <see cref="T:System.Xml.XmlQualifiedName" /> that describes the XML representation of the endpoint address.</returns>
      <param name="xmlSchemaSet">A <see cref="T:System.Xml.Schema.XmlSchema" /> that contains a cache of the XML schema definition language (XSD) schemas for the endpoint address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="xmlSchemaSet" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Returns null.</summary>
      <returns>null</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> from which the endpoint address is obtained.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> to which the current endpoint address is saved.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressAugust2004.ToEndpointAddress">
      <summary>Retrieves the endpoint address contained in this serializable type.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> that contains a version-neutral endpoint address of this <see cref="T:System.ServiceModel.EndpointAddressAugust2004" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointAddressBuilder">
      <summary>A factory for producing new (immutable) endpoint addresses with specific property values.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointAddressBuilder" /> class from an existing endpoint address.</summary>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property values are used to initialize the property values of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtExtensions">
      <summary>Returns the XML dictionary reader that contains the extensions of the endpoint address.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the extensions of the endpoint address.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.GetReaderAtMetadata">
      <summary>Returns the reader that contains the metadata associated with the endpoint address.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the metadata associated the endpoint address if there is some; otherwise, null.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Headers">
      <summary>Gets the list of address headers for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Collections.Generic.List`1" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the address headers for the endpoints that the builder can create.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Identity">
      <summary>Gets or sets the identity for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointIdentity" /> for the endpoint.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetExtensionReader(System.Xml.XmlDictionaryReader)">
      <summary>Specifies the XML dictionary reader that contains the extensions of the endpoint address.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the extensions of the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.SetMetadataReader(System.Xml.XmlDictionaryReader)">
      <summary>Specifies the XML dictionary reader that contains the metadata associated with the endpoint address.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlDictionaryReader" /> that reads the metadata associated with the endpoint.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointAddressBuilder.ToEndpointAddress">
      <summary>Creates a new endpoint address initialized with the property values of the current endpoint address builder.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> whose property are initialized with the values of the current endpoint address builder.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointAddressBuilder.Uri">
      <summary>Gets or sets the URI for the endpoints that the builder can create.</summary>
      <returns>The <see cref="T:System.Uri" /> that specifies the endpoint address.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointIdentity">
      <summary>An abstract class that when implemented provides an identity that enables the authentication of an endpoint by clients that exchange messages with it.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.#ctor">
      <summary>Creates an empty <see cref="T:System.ServiceModel.EndpointIdentity" /> instance.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)">
      <summary>Creates a DNS identity with a specified DNS name.</summary>
      <returns>A DNS <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="dnsName" />.</returns>
      <param name="dnsName">The name for the DNS identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dnsName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)">
      <summary>Creates an identity with the specified claim.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="identity" />.</returns>
      <param name="identity">A <see cref="T:System.IdentityModel.Claims.Claim" /> used to create the new identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Creates an RSA identity with the specified X.509 certificate.</summary>
      <returns>An RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="certificate" />.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />  that contains the certificate for the RSA identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">
        <paramref name="certificate" /> is not an RSA certificate.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)">
      <summary>Creates an RSA identity with the specified public key.</summary>
      <returns>An RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="publicKey" />.</returns>
      <param name="publicKey">The public key for the RSA identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)">
      <summary>Creates a server principal name (SPN) identity with a specified name.</summary>
      <returns>An SPN <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="spnName" />.</returns>
      <param name="spnName">The name for the SPN identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)">
      <summary>Creates a user principal name (UPN) identity with a specified name.</summary>
      <returns>A UPN <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="upnName" />.</returns>
      <param name="upnName">The name for the UPN identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Creates an X509Certificate identity with the specified certificate.</summary>
      <returns>An X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="certificate" />.</returns>
      <param name="certificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />  that contains the certificate for the identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Creates an X509Certificate identity with the specified primary and supporting certificates.</summary>
      <returns>A secure  client that connects to an endpoint with this identity verifies that the claims presented by the server contain the claim that contains the thumbprint of the certificate used to construct this identity.An X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> associated with the specified <paramref name="primaryCertificate" /> and<paramref name=" supportingCertificates." /></returns>
      <param name="primaryCertificate">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> that contains the primary certificate for the identity.</param>
      <param name="supportingCertificates">An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> that contains the supporting certificates for the identity.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> or <paramref name="supportingCertificates" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)">
      <summary>Returns a value that determines whether a specified object is equal to the current identity object or if they have equal security properties.</summary>
      <returns>true if the specified object <paramref name="obj" /> is equivalent to the current identity or contains the same security properties; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Object" /> compared for equality with the current identity.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.GetHashCode">
      <summary>Provides a hash code for the current instance of the identity.</summary>
      <returns>The hash code for the current identity.</returns>
    </member>
    <member name="P:System.ServiceModel.EndpointIdentity.IdentityClaim">
      <summary>Gets the identity claim that corresponds to the identity. </summary>
      <returns>The <see cref="T:System.IdentityModel.Claims.Claim" /> that represents the identity claim.</returns>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})">
      <summary>Initializes an <see cref="T:System.ServiceModel.EndpointIdentity" /> with the specified claim and an interface and compares equality.</summary>
      <param name="identityClaim">The <see cref="T:System.IdentityModel.Claims.Claim" /> used to initialize the <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
      <param name="claimComparer">The <see cref="T:System.Collections.IEqualityComparer" /> used to compare claims.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointIdentity.ToString">
      <summary>Returns the identity.</summary>
      <returns>A <see cref="T:System.String" /> of the form "identity(string)" where string = <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
    </member>
    <member name="T:System.ServiceModel.EndpointNotFoundException">
      <summary>The exception that is thrown when a remote endpoint could not be found or reached.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.EndpointNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.EndpointNotFoundException" /> class with a specified error message and the inner exception that caused the current exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.EnvelopeVersion">
      <summary>Contains information related to the version of SOAP associated with a message and its exchange.</summary>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.GetUltimateDestinationActorValues">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the ultimate destination.</summary>
      <returns>An empty string if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/ultimateReceiver if SOAP1.2 is used.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.NextDestinationActorValue">
      <summary>Gets a string that contains the URI name for the SOAP role associated with the current message version for the next destination.</summary>
      <returns>A string that contains http://schemas.xmlsoap.org/soap/actor/next if SOAP1.1 is used; a string that contains http://www.w3.org/2003/05/soap-envelope/role/next if SOAP1.2 is used; and an empty string if the message version is none.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.None">
      <summary>Gets the envelope version not using a version of SOAP.</summary>
      <returns>The envelope version not using a SOAP formatting.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap11">
      <summary>Gets the SOAP1.1 envelope version.</summary>
      <returns>The SOAP1.1 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.EnvelopeVersion.Soap12">
      <summary>Gets the SOAP1.2 envelope version.</summary>
      <returns>The SOAP1.2 <see cref="T:System.ServiceModel.EnvelopeVersion" />.</returns>
    </member>
    <member name="M:System.ServiceModel.EnvelopeVersion.ToString">
      <summary>Gets a string that represents the current envelope version.</summary>
      <returns>The current envelope version.</returns>
    </member>
    <member name="T:System.ServiceModel.ExceptionDetail">
      <summary>Represents fault detail information.</summary>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExceptionDetail" /> class from the exception. </summary>
      <param name="exception">The exception to be serialized as an <see cref="T:System.ServiceModel.ExceptionDetail" /> object.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="exception" /> parameter is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.HelpLink">
      <summary>Gets or sets the help link from the exception passed to the constructor.</summary>
      <returns>The help link information of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.InnerException">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ExceptionDetail" /> object that represents the inner exception.</summary>
      <returns>The inner exception information.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Message">
      <summary>Gets or sets the message from the exception passed to the constructor.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.StackTrace">
      <summary>Gets or sets the stack trace information from the exception passed to the constructor.</summary>
      <returns>The stack trace of the exception.</returns>
    </member>
    <member name="M:System.ServiceModel.ExceptionDetail.ToString">
      <summary>Returns the exception detail information for the exception passed to the constructor.</summary>
      <returns>The message and stack trace of the exception.</returns>
    </member>
    <member name="P:System.ServiceModel.ExceptionDetail.Type">
      <summary>Gets or sets the type string for the exception passed to the constructor.</summary>
      <returns>The type string for the exception passed to the constructor.</returns>
    </member>
    <member name="T:System.ServiceModel.ExtensionCollection`1">
      <summary>Represents a collection of extensions.</summary>
      <typeparam name="T">The type for the collection.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner.</summary>
      <param name="owner">The owner of the collection.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.#ctor(`0,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ExtensionCollection`1" /> class with a specified owner and synchronization root.</summary>
      <param name="owner">The owner of the collection.</param>
      <param name="syncRoot">The object used to synchronize.</param>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.Find``1">
      <summary>Returns an extension if it is in the collection.</summary>
      <returns>An extension of the type sought, or null if no extensions implement the type. If more than one extension implements the type, the most recently added is returned.</returns>
      <typeparam name="E">The type of extension sought.</typeparam>
    </member>
    <member name="M:System.ServiceModel.ExtensionCollection`1.FindAll``1">
      <summary>Returns a collection of extensions if found in the collection.</summary>
      <returns>A collection of extensions of the type sought. If no extensions implement this type, a non-null empty collection is returned.</returns>
      <typeparam name="E">The type for which the collection of extensions is sought.</typeparam>
    </member>
    <member name="P:System.ServiceModel.ExtensionCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Gets whether the collection is read-only.</summary>
      <returns>
        <see cref="T:System.ServiceModel.ExtensionCollection`1" /> always returns false.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultCode">
      <summary>Represents a SOAP fault code. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class. </summary>
      <param name="name">The name of the fault code.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class.</summary>
      <param name="name">The name of the fault code.</param>
      <param name="subCode">The fault subcode.</param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name and namespace. </summary>
      <param name="name">The local name of the fault code. </param>
      <param name="ns">The namespace name of the fault code. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.#ctor(System.String,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultCode" /> class with the specified name, namespace, and fault subcode. </summary>
      <param name="name">The local name of the fault code. </param>
      <param name="ns">The namespace name of the fault code. </param>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="name" /> is an empty string. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.ServiceModel.FaultCode)">
      <summary>Creates a receiver fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateReceiverFaultCode(System.String,System.String)">
      <summary>Creates a receiver fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> instance with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="name">The local name for the fault subcode. </param>
      <param name="ns">The namespace name for the fault subcode. </param>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.ServiceModel.FaultCode)">
      <summary>Creates a sender fault code with the specified subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in the <see cref="P:System.ServiceModel.FaultCode.SubCode" /> property. </returns>
      <param name="subCode">A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="subCode" /> is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultCode.CreateSenderFaultCode(System.String,System.String)">
      <summary>Creates a sender fault code with the specified subcode.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object with the created SOAP fault subcode in <see cref="P:System.ServiceModel.FaultCode.SubCode" />. </returns>
      <param name="name">The local name for the fault subcode. </param>
      <param name="ns">The namespace name for the fault subcode. </param>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsPredefinedFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 or SOAP 1.2 fault.</summary>
      <returns>true if the fault is a SOAP 1.1 or SOAP 1.2 fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsReceiverFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault.</summary>
      <returns>true if the fault is a SOAP 1.1 server fault or a SOAP 1.2 receiver fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.IsSenderFault">
      <summary>Gets a value that indicates whether the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault.</summary>
      <returns>true if the fault is a SOAP 1.1 client fault or a SOAP 1.2 sender fault; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Name">
      <summary>Gets the local name of the fault code. </summary>
      <returns>The local name of the fault code. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.Namespace">
      <summary>Gets the namespace for the fault code. </summary>
      <returns>A Uniform Resource Identifier (URI) for the namespace name. </returns>
    </member>
    <member name="P:System.ServiceModel.FaultCode.SubCode">
      <summary>Gets the fault subcode. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultCode" /> object that represents the fault subcode. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultContractAttribute">
      <summary>Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultContractAttribute" /> class. </summary>
      <param name="detailType">The serializable type that contains error information for the caller.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="detailType" /> argument is null.</exception>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Action">
      <summary>Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.</summary>
      <returns>The value of the action for the SOAP fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.DetailType">
      <summary>Gets the type of a serializable object that contains error information.</summary>
      <returns>The type that represents the serializable error class.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the SOAP fault message has a protection level assigned.</summary>
      <returns>true if the fault message has a protection level; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Name">
      <summary>Gets or sets the name of the fault message in Web Services Description Language (WSDL).</summary>
      <returns>The fault messagename. The default is the name of the type used as the fault detail.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the SOAP fault.</summary>
      <returns>The namespace of the SOAP fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultContractAttribute.ProtectionLevel">
      <summary>Specifies the level of protection the SOAP fault requires from the binding.</summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException">
      <summary>Represents a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from a stream.</param>
      <param name="context">The streaming context required to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified message fault values.</summary>
      <param name="fault">The message fault that contains the default SOAP fault values.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.Channels.MessageFault,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified message fault values and the provided action string.</summary>
      <param name="fault">The message fault that contains the default SOAP fault values to use.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason and fault code.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason, fault code, and action value.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action value for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class with the specified fault reason.</summary>
      <param name="reason">The reason for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason and SOAP fault code.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The SOAP fault code for the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.#ctor(System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException" /> class using the specified reason, fault code, and action value.</summary>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action value for the SOAP fault.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Action">
      <summary>Gets the value of the SOAP action for the fault message.</summary>
      <returns>The value of the SOAP action for the fault message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Code">
      <summary>Gets the fault code for the SOAP fault.</summary>
      <returns>The fault code for the SOAP fault.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.String,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.FaultException" /> object from the specified message fault, action and an array of detail types.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="action">The fault action value.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateFault(System.ServiceModel.Channels.MessageFault,System.Type[])">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.FaultException" /> object from the specified message fault and an array of detail types.</summary>
      <returns>A <see cref="T:System.ServiceModel.FaultException" /> object that you can throw to indicate that a SOAP fault message was received.</returns>
      <param name="messageFault">The message fault that contains default SOAP fault information.</param>
      <param name="faultDetailTypes">An array of types that contains fault details.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException.CreateMessageFault">
      <summary>Returns a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object.</summary>
      <returns>The in-memory representation of a SOAP fault that can be passed to <see cref="Overload:System.ServiceModel.Channels.Message.CreateMessage" /> to create a message that contains a fault. For <see cref="T:System.ServiceModel.FaultException" /> objects that result from fault messages, this <see cref="T:System.ServiceModel.Channels.MessageFault" /> object is the fault that arrives.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when the object is serialized into a stream.</summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="P:System.ServiceModel.FaultException.Message">
      <summary>Gets the message for the exception.</summary>
      <returns>The exception message.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException.Reason">
      <summary>Gets the <see cref="T:System.ServiceModel.FaultReason" /> for the SOAP fault.</summary>
      <returns>The reason for the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultException`1">
      <summary>Used in a client application to catch contractually-specified SOAP faults.</summary>
      <typeparam name="TDetail">The serializable error detail type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class using the specified serialization information and context when deserializing a stream into a <see cref="T:System.ServiceModel.FaultException" /> object.</summary>
      <param name="info">The serialization information necessary to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object from the <paramref name="context" />.</param>
      <param name="context">The stream from which to reconstruct the <see cref="T:System.ServiceModel.FaultException" /> object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object and fault reason. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.ServiceModel.FaultReason,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail and fault reason. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, fault reason, and fault code. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.#ctor(`0,System.String,System.ServiceModel.FaultCode,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultException`1" /> class that uses the specified detail object, and SOAP fault reason, code and action values. </summary>
      <param name="detail">The object used as the SOAP fault detail.</param>
      <param name="reason">The reason for the SOAP fault.</param>
      <param name="code">The fault code for the SOAP fault.</param>
      <param name="action">The action of the SOAP fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.CreateMessageFault">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.MessageFault" /> object that can be used to create a <see cref="T:System.ServiceModel.Channels.Message" /> that represents the SOAP fault.</summary>
      <returns>The message fault created.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultException`1.Detail">
      <summary>Gets the object that contains the detail information of the fault condition.</summary>
      <returns>The detail object that is the type parameter of the <see cref="T:System.ServiceModel.FaultException`1" /> object.</returns>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Implementation of the <see cref="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /> method that is called when the object is serialized into a stream.</summary>
      <param name="info">The serialization information to which the object data is added when serialized.</param>
      <param name="context">The destination for the serialized object.</param>
    </member>
    <member name="M:System.ServiceModel.FaultException`1.ToString">
      <summary>Returns a string for the <see cref="T:System.ServiceModel.FaultException`1" /> object.</summary>
      <returns>The string for the SOAP fault.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultImportOptions">
      <summary>Indicates whether to use the <see cref="T:System.Xml.XmlSerializer" /> for reading and writing faults.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultImportOptions.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultImportOptions" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.FaultImportOptions.UseMessageFormat">
      <summary>Gets or sets a value that indicates that the <see cref="T:System.Xml.XmlSerializer" /> should be used for reading and writing faults.</summary>
      <returns>true if the <see cref="T:System.Xml.XmlSerializer" /> should be used for reading and writing faults; false if the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.FaultReason">
      <summary>Provides a text description of a SOAP fault. </summary>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.FaultReasonText})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified list of fault translations. </summary>
      <param name="translations">A list of <see cref="T:System.ServiceModel.FaultReasonText" /> objects; each object describes the fault in a specific language. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="translations" /> is null. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="translations" /> is empty or one or more items is null. </exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.ServiceModel.FaultReasonText)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified text element that describes the fault in a specific language. </summary>
      <param name="translation">An array of <see cref="T:System.ServiceModel.FaultReasonText" /> objects that correspond to fault descriptions in different languages. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReason" /> class using the specified fault description. </summary>
      <param name="text">A description of the reason the fault occurred. </param>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation">
      <summary>Gets the fault description in the language used by the current thread. </summary>
      <returns>A <see cref="T:System.ServiceModel.FaultReasonText" /> object that contains the fault description. </returns>
    </member>
    <member name="M:System.ServiceModel.FaultReason.GetMatchingTranslation(System.Globalization.CultureInfo)">
      <summary>Gets the fault description in the specified language. </summary>
      <returns>The fault text in the specified language.</returns>
      <param name="cultureInfo">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the language of the fault description. </param>
      <exception cref="T:System.ArgumentNullException">The <see cref="T:System.Globalization.CultureInfo" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.FaultReason.ToString">
      <summary>Returns the fault reason as a string.</summary>
      <returns>A string containing the reason for the fault.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReason.Translations">
      <summary>Gets a collection of fault descriptions in different languages. </summary>
      <returns>A collection of <see cref="T:System.ServiceModel.FaultReasonText" /> objects, where each object describes the fault in a different language. </returns>
    </member>
    <member name="T:System.ServiceModel.FaultReasonText">
      <summary>Represents the text of the reason of a SOAP fault.</summary>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class that uses the specified fault text.</summary>
      <param name="text">The text that is the SOAP fault reason.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.Globalization.CultureInfo)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class that uses the specified SOAP fault text and the specified <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <param name="text">The text that is the reason of the SOAP fault.</param>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> describing the language of the description.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FaultReasonText" /> class.</summary>
      <param name="text">The text of the fault reason.</param>
      <param name="xmlLang">The language of the fault.</param>
    </member>
    <member name="M:System.ServiceModel.FaultReasonText.Matches(System.Globalization.CultureInfo)">
      <summary>Returns a value that indicates whether the language of the description matches provided <see cref="T:System.Globalization.CultureInfo" /> object.</summary>
      <returns>true if the specified <see cref="T:System.Globalization.CultureInfo" /> matches; otherwise, false.</returns>
      <param name="cultureInfo">The <see cref="T:System.Globalization.CultureInfo" /> object to compare with the language of the description.</param>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.Text">
      <summary>Gets the text of the SOAP fault reason.</summary>
      <returns>The text of the SOAP fault reason.</returns>
    </member>
    <member name="P:System.ServiceModel.FaultReasonText.XmlLang">
      <summary>Gets the language of the SOAP fault reason.</summary>
      <returns>The language of the SOAP fault reason.</returns>
    </member>
    <member name="T:System.ServiceModel.FederatedMessageSecurityOverHttp">
      <summary>Configures the message-level security of the WSFederationHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.AlgorithmSuite">
      <summary>Gets and sets the algorithm suite that specifies the message encryption and key-wrap algorithms.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.ClaimTypeRequirements">
      <summary>Gets a collection of the <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" /> instances for this binding.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Security.Tokens.ClaimTypeRequirement" />. The default is an empty collection.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Gets or sets whether a security context requires being put into place.</summary>
      <returns>true if security context requires placing; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedKeyType">
      <summary>Specifies the type of key to be issued.</summary>
      <returns>A <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />. The default is <see cref="F:System.IdentityModel.Tokens.SecurityKeyType.SymmetricKey" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.IdentityModel.Tokens.SecurityKeyType" />.</exception>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuedTokenType">
      <summary>Specifies the type of token which should be issued by the security token service.</summary>
      <returns>The type of token to be issued. The default is null, which causes WCF to request a SAML security token from the STS.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress">
      <summary>Gets or sets the endpoint address of the security token service that issues credentials for the service.</summary>
      <returns>The <see cref="T:System.ServiceModel.EndpointAddress" /> of the security token service.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerBinding">
      <summary>Gets or sets the binding to be used by the client when communicating with the security token service whose endpoint address equals <see cref="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerAddress" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used by the client when communicating with the security token service.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.IssuerMetadataAddress">
      <summary>Gets or sets the endpoint address for communicating with the security token service out of band.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Binding" /> to be used when communicating with the security token service out of band.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Specifies whether a message level SSL negotiation is done to obtain the service’s certificate.</summary>
      <returns>true if the service certificate is negotiated; false if the service certificate is available out of band. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <summary>Returns whether the algorithm suite to be used for securing messages at the SOAP level should be serialized.</summary>
      <returns>true if the algorithm suite should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeClaimTypeRequirements">
      <summary>Returns that any existing claim type requirements can be serialized. </summary>
      <returns>true if there are requirements to serialize; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeEstablishSecurityContext">
      <summary>Returns an indication whether the security context is not the default and therefore should be serialized.</summary>
      <returns>true if the context should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeIssuedKeyType">
      <summary>Returns an indication whether the issued key type is not the default and therefore should be serialized.</summary>
      <returns>true if the type should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <summary>Returns an indication whether the process of negotiating for service credentials is not the default process and therefore should be serialized.</summary>
      <returns>true if the process should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.FederatedMessageSecurityOverHttp.ShouldSerializeTokenRequestParameters">
      <summary>Returns an indication that any existing token request parameters can be serialized. </summary>
      <returns>true if there are parameters to be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.FederatedMessageSecurityOverHttp.TokenRequestParameters">
      <summary>Gets a collection of XML elements to be sent in the message body to the security token service when requesting a token.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.Xml.XmlElement" />.</returns>
    </member>
    <member name="T:System.ServiceModel.HostNameComparisonMode">
      <summary>Specifies how the host name should be used in URI comparisons when dispatching an incoming message to a service endpoint.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard">
      <summary>Ignores the hostname when dispatching incoming messages to this endpoint. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.Exact">
      <summary>Uses the hostname when dispatching incoming messages to this endpoint, if no strong match was found.</summary>
    </member>
    <member name="F:System.ServiceModel.HostNameComparisonMode.WeakWildcard">
      <summary>If no strong or exact match was found, ignores the hostname when matching.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpClientCredentialType">
      <summary>Enumerates the valid credential types for HTTP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Basic">
      <summary>Specifies Basic authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Digest">
      <summary>Specifies Digest authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication. </summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Ntlm">
      <summary>Specifies client authentication using NTLM.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpProxyCredentialType">
      <summary>Enumerates the valid credential types for HTTP proxy authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Basic">
      <summary>Specifies basic authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication. </summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Digest">
      <summary>Specifies digest authentication. For more information, see RFC 2617 – HTTP Authentication: Basic and Digest Authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Ntlm">
      <summary>Specifies NTLM authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.HttpProxyCredentialType.Windows">
      <summary>Specifies Windows authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.HttpTransportSecurity">
      <summary>Represents the transport-level security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.HttpTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.HttpClientCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Gets or sets the extended protection policy.</summary>
      <returns>The extended protection policy.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.LegacyExtendedProtectionPolicy">
      <summary>Gets or sets the legacy extended protection policy.</summary>
      <returns>The legacy extended protection policy.</returns>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType">
      <summary>Gets or sets the type of client credential to be used for authentication against the proxy.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.HttpProxyCredentialType" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Setting the property to an undefined value.</exception>
    </member>
    <member name="P:System.ServiceModel.HttpTransportSecurity.Realm">
      <summary>Gets or sets the authentication realm for digest or basic authentication.</summary>
      <returns>The authentication realm. The default value is "".</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeClientCredentialType">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> property has changed from its default value and should be serialized. . Used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" /> property has changed from its default value and should be serialized. Used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.HttpTransportSecurity.ExtendedProtectionPolicy" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Gets a value that specifies whether the legacy extended protection policy should be serialized.</summary>
      <returns>true if the legacy extended protection policy should be serialized, otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeProxyCredentialType">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> property has changed from its default value and should be serialized. Used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.HttpTransportSecurity.ShouldSerializeRealm">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> property has changed from its default value and should be serialized. . Used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.HttpTransportSecurity.Realm" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.IClientChannel">
      <summary>Defines the behavior of outbound request and request/reply channels used by client applications.</summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.AllowInitializationUI">
      <summary>Gets or sets a value indicating whether <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> attempts to call the <see cref="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" /> objects in the <see cref="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" /> property or throws if that collection is not empty. </summary>
      <returns>true if  is permitted to invoke interactive channel initializers; otherwise, false. </returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)">
      <summary>An asynchronous call to begin using a user interface to obtain credential information.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> to use to call back when processing has completed.</returns>
      <param name="callback">The method that is called when this method completes.</param>
      <param name="state">Information about the state of the channel.</param>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.DidInteractiveInitialization">
      <summary>Gets a value indicating whether a call was done to a user interface to obtain credential information. </summary>
      <returns>true if the <see cref="M:System.ServiceModel.IClientChannel.DisplayInitializationUI" /> method was called (or the <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> and <see cref="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)" /> methods; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.DisplayInitializationUI">
      <summary>A call to a user interface to obtain credential information.</summary>
    </member>
    <member name="M:System.ServiceModel.IClientChannel.EndDisplayInitializationUI(System.IAsyncResult)">
      <summary>Called when the call to <see cref="M:System.ServiceModel.IClientChannel.BeginDisplayInitializationUI(System.AsyncCallback,System.Object)" /> has finished.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" />.</param>
    </member>
    <member name="E:System.ServiceModel.IClientChannel.UnknownMessageReceived">
      <summary>Reserved. </summary>
    </member>
    <member name="P:System.ServiceModel.IClientChannel.Via">
      <summary>Gets the URI that contains the transport address to which messages are sent on the client channel.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the channel.</returns>
    </member>
    <member name="T:System.ServiceModel.ICommunicationObject">
      <summary>Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closed state.  </summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state.  </summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closed">
      <summary>Occurs when the communication object completes its transition from the closing state into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Closing">
      <summary>Occurs when the communication object first enters the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Faulted">
      <summary>Occurs when the communication object first enters the faulted state.</summary>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.  </summary>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationException">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opened">
      <summary>Occurs when the communication object completes its transition from the opening state into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.ICommunicationObject.Opening">
      <summary>Occurs when the communication object first enters the opening state.</summary>
    </member>
    <member name="P:System.ServiceModel.ICommunicationObject.State">
      <summary>Gets the current state of the communication-oriented object.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</returns>
    </member>
    <member name="T:System.ServiceModel.IContextChannel">
      <summary>Defines the interface for the context control of a channel.</summary>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.AllowOutputBatching">
      <summary>Gets or sets a value that instructs  to store a set of messages before giving the messages to the transport.</summary>
      <returns>true if the batching of outgoing messages is allowed; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.InputSession">
      <summary>Gets the input session for the channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IInputSession" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.LocalAddress">
      <summary>Gets the local endpoint for the channel.</summary>
      <returns>The local <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OperationTimeout">
      <summary>Gets or sets the time period within which an operation must complete or an exception is thrown.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the time period within which an operation must complete.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.OutputSession">
      <summary>Gets the output session associated with the channel, if any.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IOutputSession" /> implementation if an input session exists; otherwise, null.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.RemoteAddress">
      <summary>Gets the remote address associated with the channel.</summary>
      <returns>The remote <see cref="T:System.ServiceModel.EndpointAddress" /> for the channel.</returns>
    </member>
    <member name="P:System.ServiceModel.IContextChannel.SessionId">
      <summary>Returns an identifier for the current session, if any.</summary>
      <returns>The current session identifier, if any.</returns>
    </member>
    <member name="T:System.ServiceModel.IDefaultCommunicationTimeouts">
      <summary>Defines the interface for specifying communication timeouts used by channels, channel managers such as channel listeners and channel factories, and service hosts.</summary>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.IDuplexContextChannel">
      <summary>Defines the interface a client channel must implement to exchange messages in a duplex session. </summary>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.AutomaticInputSessionShutdown">
      <summary>Gets or sets a value that indicates whether the input session is shutdown automatically.</summary>
      <returns>true if the input session is shutdown automatically; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close an output session on the client that has a specified time out and state object associated with it. </summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
    </member>
    <member name="P:System.ServiceModel.IDuplexContextChannel.CallbackInstance">
      <summary>Gets or sets the instance context associated with the duplex message exchange.</summary>
      <returns>The <see cref="T:System.ServiceModel.InstanceContext" /> associated with the duplex message exchange.</returns>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.CloseOutputSession(System.TimeSpan)">
      <summary>Closes the output session on the client associated with the duplex channel. </summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.IDuplexContextChannel.EndCloseOutputSession(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close an output session on the client.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.IDuplexContextChannel.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensibleObject`1">
      <summary>Enable an object to participate in custom behavior, such as registering for events, or watching state transitions.</summary>
      <typeparam name="T">The type of the extension class.</typeparam>
    </member>
    <member name="P:System.ServiceModel.IExtensibleObject`1.Extensions">
      <summary>Gets a collection of extension objects for this extensible object.</summary>
      <returns>A <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of extension objects.</returns>
    </member>
    <member name="T:System.ServiceModel.IExtension`1">
      <summary>Enables an object to extend another object through aggregation.</summary>
      <typeparam name="T">The object that participates in the custom behavior.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Attach(`0)">
      <summary>Enables an extension object to find out when it has been aggregated. Called when the extension is added to the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="M:System.ServiceModel.IExtension`1.Detach(`0)">
      <summary>Enables an object to find out when it is no longer aggregated. Called when an extension is removed from the <see cref="P:System.ServiceModel.IExtensibleObject`1.Extensions" /> property.</summary>
      <param name="owner">The extensible object that aggregates this extension.</param>
    </member>
    <member name="T:System.ServiceModel.IExtensionCollection`1">
      <summary>A collection of the <see cref="T:System.ServiceModel.IExtension`1" /> objects that allow for retrieving the <see cref="T:System.ServiceModel.IExtension`1" /> by its type.</summary>
      <typeparam name="T">The type of the extension objects.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.Find``1">
      <summary>Finds the specified extension object in the collection.</summary>
      <returns>The extension object that was found.</returns>
      <typeparam name="E">The type of extension object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.IExtensionCollection`1.FindAll``1">
      <summary>Finds all extension object in the collection specified by <paramref name="E" />.</summary>
      <returns>A collection of all extension objects in the collection that implement the specified type.</returns>
      <typeparam name="E">The type of extension object.</typeparam>
    </member>
    <member name="T:System.ServiceModel.ImpersonationOption">
      <summary>Specifies the impersonation behavior for a service operation on a service instance.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.NotAllowed">
      <summary>Impersonation is not performed. If <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> is equal to true, a validation exception occurs at service startup time.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Allowed">
      <summary>Impersonation is performed if credentials are available and <see cref="P:System.ServiceModel.Configuration.ServiceAuthorizationElement.ImpersonateCallerForAllOperations" /> is equal to true.</summary>
    </member>
    <member name="F:System.ServiceModel.ImpersonationOption.Required">
      <summary>Impersonation is required. </summary>
    </member>
    <member name="T:System.ServiceModel.InstanceContext">
      <summary>Represents the context information for a service instance.</summary>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance.</summary>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a service hosted by a specified host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="host" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.#ctor(System.ServiceModel.ServiceHostBase,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InstanceContext" /> class for a specified object that implements the service instance and is hosted by a specified host.</summary>
      <param name="host">The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service.</param>
      <param name="implementation">The object that implements the service instance.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Extensions">
      <summary>Gets the extension collection, if any, associated with the service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of type <see cref="T:System.ServiceModel.InstanceContext" /> that contains the instance contexts for the extensions of the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance">
      <summary>Returns the instance of the service for the instance context.</summary>
      <returns>The object that represents the service instance.</returns>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.GetServiceInstance(System.ServiceModel.Channels.Message)">
      <summary>Returns the instance of the service for the instance context in response to an incoming message.</summary>
      <returns>The object that represents the service instance.</returns>
      <param name="message">The incoming message that triggered the creation of a service object.</param>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state or is not initialized.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance is aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.Host">
      <summary>Gets the host for the service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> that hosts the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance associated with this context is closed, but was not aborted.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance associated with this context is in a faulted state.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.IncomingChannels">
      <summary>Gets the sessionful channels that are incoming to the service instance.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that contains the sessionful channels incoming to the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance is closed and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Increases the number of messages that can be processed by the service instance.</summary>
      <returns>The new limit on the number of messages, after <paramref name="incrementBy" /> is added, that can be processed by the service instance.</returns>
      <param name="incrementBy">The additional number of messages that can be processed by the service instance.</param>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.ManualFlowControlLimit">
      <summary>Gets or sets a limit on the number of messages that can be processed by the instance context.  </summary>
      <returns>The number of messages that can be processed by the instance context. </returns>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.OutgoingChannels">
      <summary>Gets the sessionful channels that are outgoing from the service instance.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that contains the sessionful channels outgoing from the service instance.</returns>
      <exception cref="T:System.ObjectDisposedException">The service instance is closed and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is in a faulted state.</exception>
    </member>
    <member name="M:System.ServiceModel.InstanceContext.ReleaseServiceInstance">
      <summary>Releases the service instance.</summary>
      <exception cref="T:System.InvalidOperationException">The service instance is in a created or opening state and cannot be used.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The service instance has been aborted.</exception>
      <exception cref="T:System.ObjectDisposedException">The service instance is closing or has been closed already and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The service instance is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="P:System.ServiceModel.InstanceContext.SynchronizationContext">
      <summary>Gets or sets the context used for thread synchronization with the current instance context.</summary>
      <returns>The <see cref="T:System.Threading.SynchronizationContext" /> used for thread synchronization with the current instance context.</returns>
      <exception cref="T:System.InvalidOperationException">The communication object is opened or closing and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The communication object has been aborted and cannot be modified in these states.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object has been closed already and cannot be modified in these states.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is faulted and cannot be modified in these states.</exception>
    </member>
    <member name="T:System.ServiceModel.InstanceContextMode">
      <summary>Specifies the number of service instances available for handling calls that are contained in incoming messages.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerSession">
      <summary>A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created for each session.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.PerCall">
      <summary>A new <see cref="T:System.ServiceModel.InstanceContext" /> object is created prior to and recycled subsequent to each call. If the channel does not create a session this value behaves as if it were <see cref="F:System.ServiceModel.InstanceContextMode.PerCall" />.</summary>
    </member>
    <member name="F:System.ServiceModel.InstanceContextMode.Single">
      <summary>Only one <see cref="T:System.ServiceModel.InstanceContext" /> object is used for all incoming calls and is not recycled subsequent to the calls. If a service object does not exist, one is created.</summary>
    </member>
    <member name="T:System.ServiceModel.InvalidMessageContractException">
      <summary>Represents a message contract that is not valid.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class when deserializing from a stream into an object.</summary>
      <param name="info">The serialization information.</param>
      <param name="context">The stream from which to deserialize.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class using the specified message.</summary>
      <param name="message">The message for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.InvalidMessageContractException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.InvalidMessageContractException" /> class that uses the specified message and inner exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:System.ServiceModel.IOnlineStatus">
      <summary>Defines the properties and events used by network-enabled objects to indicate network availability.</summary>
    </member>
    <member name="P:System.ServiceModel.IOnlineStatus.IsOnline">
      <summary>Gets whether the instance has network connectivity and is connected to a resource.</summary>
      <returns>True if the current instance is available on the network; false if it is not.</returns>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Offline">
      <summary>Signals that the instance has disconnected from a network resource.</summary>
    </member>
    <member name="E:System.ServiceModel.IOnlineStatus.Online">
      <summary>Signals that the instance has connected to a network resource.</summary>
    </member>
    <member name="T:System.ServiceModel.IServiceChannel">
      <summary>Defines the interface for a service channel.</summary>
    </member>
    <member name="P:System.ServiceModel.IServiceChannel.ListenUri">
      <summary>Gets the URI at which the service listens for incoming requests.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the service listens for incoming requests on the channel.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageBodyMemberAttribute">
      <summary>Specifies that a member is serialized as an element inside the SOAP body.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageBodyMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageBodyMemberAttribute.Order">
      <summary>Gets or sets a value that indicates the position in which the member is serialized into the SOAP body.</summary>
      <returns>The location of the element in the SOAP body.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value passed to the property setter is a negative integer.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageContractAttribute">
      <summary>Defines a strongly-typed class that corresponds to a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the message has a protection level. </summary>
      <returns>true if the message must be encrypted, signed, or both; otherwise false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.IsWrapped">
      <summary>Gets or sets a value that specifies whether the message body has a wrapper element.</summary>
      <returns>true if the message body has a wrapper element; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.ProtectionLevel">
      <summary>Gets or sets a value that specified whether the message must be encrypted, signed, or both. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value passed to the property when the setting is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. </exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperName">
      <summary>Gets or sets the name of the wrapper element of the message body.</summary>
      <returns>The name of the wrapper element in the message body.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageContractAttribute.WrapperNamespace">
      <summary>Gets or sets the namespace of the message body wrapper element.</summary>
      <returns>The wrapper element namespace.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageContractMemberAttribute">
      <summary>Declares the base members for <see cref="T:System.ServiceModel.MessageBodyMemberAttribute" /> and <see cref="T:System.ServiceModel.MessageHeaderAttribute" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageContractMemberAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageContractMemberAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.HasProtectionLevel">
      <summary>When overridden in a derived class, gets a value that indicates whether the member has a protection level assigned. </summary>
      <returns>true if the member has a protection level; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Name">
      <summary>Specifies the name of the element that corresponds to this member. </summary>
      <returns>The name of the element that corresponds to this member. This string must be a valid XML element name. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.Namespace">
      <summary>Specifies the namespace of the element that corresponds to this member. </summary>
      <returns>A namespace URI of the element that corresponds to this member. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel">
      <summary>Specifies whether the member is to be transmitted as-is, signed, or signed and encrypted. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageCredentialType">
      <summary>Enumerates the valid message credential types.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.UserName">
      <summary>Specifies client authentication using UserName.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="F:System.ServiceModel.MessageCredentialType.IssuedToken">
      <summary>Specifies client authentication using an issued token.</summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeader`1">
      <summary>Represents the content of a SOAP header.</summary>
      <typeparam name="T">The message header type.</typeparam>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content.</summary>
      <param name="content">The content of the new header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.#ctor(`0,System.Boolean,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeader`1" /> class with the specified header content and metadata. </summary>
      <param name="content">The content of the new header.</param>
      <param name="mustUnderstand">A value that indicates whether the header must be understood.</param>
      <param name="actor">The targeted recipient of the message header.</param>
      <param name="relay">A value that indicates whether the header should be relayed.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Actor">
      <summary>Gets or sets the targeted recipient of the message header.</summary>
      <returns>The targeted recipient of the message header. The default is an empty string ("").</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Content">
      <summary>Gets or sets the content of the header.</summary>
      <returns>The content of the header.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageHeader`1.GetUntypedHeader(System.String,System.String)">
      <summary>Gets the message header with the specified namespace and local name.</summary>
      <returns>A message header with the specified namespace and local name.</returns>
      <param name="name">The local name of the header XML element</param>
      <param name="ns">The namespace URI of the header XML element.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.MustUnderstand">
      <summary>Gets or sets a value that indicates whether the header must be understood, as stated in the SOAP 1.1/1.2 specification. </summary>
      <returns>true if the header must be understood; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeader`1.Relay">
      <summary>Gets a value that indicates whether the header should be relayed.</summary>
      <returns>true if the header should be relayed; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderArrayAttribute">
      <summary>Specifies that the default wrapper element in the SOAP message must not be written around array types in a header element.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderArrayAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderArrayAttribute" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderAttribute">
      <summary>Specifies that a data member is a SOAP message header.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Actor">
      <summary>Gets or sets a URI that indicates the node at which this header is targeted. Maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used. </summary>
      <returns>A URI that indicates the node at which this header is targeted. This URI maps to the role header attribute when SOAP 1.2 is used and the actor header attribute when SOAP 1.1 is used. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.MustUnderstand">
      <summary>Specifies whether the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header. This is mapped to the mustUnderstand SOAP header attribute.</summary>
      <returns>true if the node acting in the <see cref="P:System.ServiceModel.MessageHeaderAttribute.Actor" /> role must understand this header; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderAttribute.Relay">
      <summary>Specifies whether this header is to be relayed to downstream nodes. This is mapped to the relay SOAP header attribute.</summary>
      <returns>true if this header is to be relayed to downstream nodes; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.MessageHeaderException">
      <summary>The exception that is thrown when the expectations regarding headers of a SOAP message are not satisfied when the message is processed.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class used to deserialize data into a <see cref="T:System.ServiceModel.MessageHeaderException" /> object.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class with the specified message.</summary>
      <param name="message">The message carried in the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and a value that indicates whether the message header is a duplicate or is missing.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Boolean,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, a value that indicates whether the message header is a duplicate or is missing, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="isDuplicate">true if the multiple message header is a duplicate; false if there are no message headers.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="M:System.ServiceModel.MessageHeaderException.#ctor(System.String,System.String,System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageHeaderException" /> class using the specified message, header name and namespace, and the inner exception that caused the exception.</summary>
      <param name="message">The exception message.</param>
      <param name="headerName">The name of the message header.</param>
      <param name="ns">The namespace of the message header.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that contains the inner exception that caused the exception.</param>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderName">
      <summary>Gets the name of the SOAP header that caused the exception.</summary>
      <returns>The name of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.HeaderNamespace">
      <summary>Gets the namespace of the SOAP header that caused the exception.</summary>
      <returns>The namespace of the SOAP header.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageHeaderException.IsDuplicate">
      <summary>Gets a value that indicates whether there are multiple message headers or no message headers.</summary>
      <returns>true if the multiple message header is a duplicate; false if there are no message headers.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageParameterAttribute">
      <summary>Controls the name of the request and response parameter names. Cannot be used with <see cref="T:System.ServiceModel.Channels.Message" /> or message contracts.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageParameterAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageParameterAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageParameterAttribute.Name">
      <summary>Obtains or sets the name attribute of the parameter in the XML Schema (XSD).</summary>
      <returns>The name attribute of the parameter in the XSD.</returns>
    </member>
    <member name="T:System.ServiceModel.MessagePropertyAttribute">
      <summary>Represents data that is passed locally with a custom message type but not serialized into a SOAP message.</summary>
    </member>
    <member name="M:System.ServiceModel.MessagePropertyAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.MessagePropertyAttribute.Name">
      <summary>Gets or sets the name of the property.</summary>
      <returns>The name of the <see cref="T:System.ServiceModel.MessagePropertyAttribute" /> attribute.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverHttp">
      <summary>Enables setting message-level security properties on the wsDualHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType">
      <summary>Specifies the type of client credential used for client authentication in the wsHttpBinding or wsDualHttpBinding bindings.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.IsSecureConversationEnabled">
      <summary>Only used in extensibility scenarios to indicate whether an instance of a class derived from <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> is configured to perform secure conversation as described in WS-SecurityConversation. </summary>
      <returns>Always returns true, unless overridden in a derived class.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential">
      <summary>Gets or sets a value that indicates whether the service credential is provisioned at the client out of band or is obtained from the service through a process of negotiation.</summary>
      <returns>true if service credential is obtained through a process of negotiation; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeAlgorithmSuite">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeClientCredentialType">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverHttp.ShouldSerializeNegotiateServiceCredential">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverMsmq">
      <summary>Enables setting message-level security properties on the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverMsmq.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.AlgorithmSuite">
      <summary>Specifies the algorithm suite used for security messages at the SOAP level.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> setting for messages sent over the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverMsmq.ClientCredentialType">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageCredentialType" /> security setting for messages sent over the MSMQ transport.</returns>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityOverTcp">
      <summary>Configures the message-level security for a message sent using the TCP transport. </summary>
    </member>
    <member name="M:System.ServiceModel.MessageSecurityOverTcp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite">
      <summary>Specifies the algorithm suite to be used for securing messages at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />. The default is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />.</returns>
      <exception cref="T:System.ArgumentNullException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.AlgorithmSuite" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType">
      <summary>Specifies the type of client credential the client uses to authenticate itself to the service at the SOAP level. </summary>
      <returns>A <see cref="T:System.ServiceModel.MessageCredentialType" />. The default is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of <see cref="P:System.ServiceModel.MessageSecurityOverTcp.ClientCredentialType" /> is not a valid <see cref="T:System.ServiceModel.MessageCredentialType" />.</exception>
    </member>
    <member name="T:System.ServiceModel.MessageSecurityVersion">
      <summary>An abstract container class that, when implemented by several of its static properties, contains version information for security components. </summary>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.BasicSecurityProfileVersion">
      <summary>Gets the version information for the Basic Security Profile.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.BasicSecurityProfileVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.Default">
      <summary>Gets the version information for default message security.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecureConversationVersion">
      <summary>Gets the WS-SecureConversation version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecureConversationVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityPolicyVersion">
      <summary>Gets the WS-SecurityPolicy version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityPolicyVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityTokenVersion">
      <summary>Gets the security token version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.IdentityModel.Selectors.SecurityTokenVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.SecurityVersion">
      <summary>Gets the WS-Security version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.SecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.TrustVersion">
      <summary>Gets the WS-Trust version that corresponds to the message security version.</summary>
      <returns>The <see cref="T:System.ServiceModel.Security.TrustVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile 1.0 based on WS-Security 1.0, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust 1.3, WS-SecureConversation 1.3 and WS-SecurityPolicy 1.2 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrust13WSSecureConversation13WSSecurityPolicy12BasicSecurityProfile10">
      <summary>Gets the message security version that requires the WS-Security1.1, WS-Trust 1.3, WS-SecureConversation 1.3, WS-SecurityPolicy 1.2, and BasicSecurityProfile 1.0 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11">
      <summary>Gets the message security version that requires the WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="P:System.ServiceModel.MessageSecurityVersion.WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10">
      <summary>Gets the message security version that requires the Basic Security Profile based on WS-Security 1.1, WS-Trust of February 2005, WS-SecureConversation of February 2005 and WS-SecurityPolicy 1.1 security specifications.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityVersion" />.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqAuthenticationMode">
      <summary>Specifies the type of authentication used for the binding.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.None">
      <summary>No security is used with this binding.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.WindowsDomain">
      <summary>Kerberos is used for authentication. The client and server must be joined to a trusted domain.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqAuthenticationMode.Certificate">
      <summary>The client is authenticated using X.509 certificates. The client certificate must be present in the certificate store of the server.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqBindingBase">
      <summary>The base class for <see cref="T:System.ServiceModel.NetMsmqBinding" /> and <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqBindingBase" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.CustomDeadLetterQueue">
      <summary>Gets or sets a URI that contains the location of the dead-letter queue for each application, where messages that have expired or that have failed transfer or delivery are placed.</summary>
      <returns>The <see cref="T:System.Uri" /> that contains the location of the dead-letter queue for each application. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.DeadLetterQueue">
      <summary>Gets or sets an enumeration value that indicates the type of dead-letter queue to use.</summary>
      <returns>A <see cref="T:System.ServiceModel.DeadLetterQueue" /> enumeration value that indicates the type of dead-letter queue to use.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Durable">
      <summary>Gets or sets a value that indicates whether the messages processed by this binding are durable or volatile.</summary>
      <returns>true if the messages processed by this binding are durable; false if they are volatile. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ExactlyOnce">
      <summary>Gets or sets a value that indicates whether messages processed by this binding are received exactly once.</summary>
      <returns>true if messages processed by this binding are received exactly once; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that is processed by this binding.</summary>
      <returns>The maximum size (in bytes) for a message that is processed by this binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.MaxRetryCycles">
      <summary>Gets or sets the maximum number of retry cycles to attempt delivery of messages to the receiving application.</summary>
      <returns>The maximum number of retry cycles to attempt delivery of messages to the application. The default value is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveContextEnabled">
      <summary>Gets or sets whether the ability to handle competing queue consumers is enabled.</summary>
      <returns>true if the receive context is enabled; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveErrorHandling">
      <summary>Gets or sets an enumeration value that specifies how poison messages are handled.</summary>
      <returns>A <see cref="T:System.ServiceModel.ReceiveErrorHandling" /> value that specifies how poison and other messages that cannot be dispatched are handled.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ReceiveRetryCount">
      <summary>Gets or sets the maximum number of immediate delivery attempts on a message that is read from the application queue.</summary>
      <returns>The maximum number of immediate delivery attempts. The default is 5.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.RetryCycleDelay">
      <summary>Gets or sets a value that indicates the time delay between retry cycles when attempting to deliver a message that cannot be delivered immediately.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time to wait before starting the next cycle of delivery attempts to the receiving application. The default value is 10 minutes.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.Scheme">
      <summary>Returns the scheme for this binding.</summary>
      <returns>The scheme for this binding. The scheme returned depends on the implementation of <see cref="T:System.ServiceModel.MsmqBindingBase" />. The <see cref="T:System.ServiceModel.NetMsmqBinding" /> implementation returns "net.msmq". The <see cref="T:System.ServiceModel.MsmqIntegration.MsmqIntegrationBinding" /> implementation returns "msmq.formatname".</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests can be handled more efficiently synchronously or asynchronously.</summary>
      <returns>true if requests can be handled more efficiently synchronously; otherwise false. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.TimeToLive">
      <summary>Gets or sets the interval of time that indicates how long the messages processed by this binding can be in the queue before they expire.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that indicates how long the messages can be in the queue before they expire. The default value is 1 day.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseMsmqTracing">
      <summary>Gets or sets a value that indicates whether messages processed by this binding should be traced.</summary>
      <returns>true if messages processed by this binding should be traced; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.UseSourceJournal">
      <summary>Gets or sets a value that indicates whether copies of messages processed by this binding should be stored in the source journal queue.</summary>
      <returns>true if copies of messages processed by this binding should be stored in the source journal queue; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.MsmqBindingBase.ValidityDuration">
      <summary>Gets or sets a value that specifies a connection time-out when used with queued channels. </summary>
      <returns>A timespan object.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqEncryptionAlgorithm">
      <summary>Contains the set of encryption algorithms that can be used to encrypt messages on the wire.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.RC4Stream">
      <summary>A stream cipher defined by RSA Security.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqEncryptionAlgorithm.Aes">
      <summary>The Advanced Encryption Standard (AES) defined by the National Institute of Standards and Technology (NIST).</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqException">
      <summary>Encapsulates errors returned by Message Queuing (MSMQ). This exception is thrown by the Message Queuing transport and the Message Queuing integration channel.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with additional serialized information about the exception.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized data associated with the <see cref="T:System.ServiceModel.MsmqException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message provided.</summary>
      <param name="message">The message with which to initialize the new instance.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message and inner exception provided.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
      <param name="inner">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqException.#ctor(System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class with the message and error code provided.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
      <param name="error">The error code, returned by the Message Queuing (MSMQ) infrastructure, with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqException" /> class.</param>
    </member>
    <member name="T:System.ServiceModel.MsmqPoisonMessageException">
      <summary>Encapsulates the exception that is thrown when the channel detects that the message is a poison message.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified lookup ID of the poison message.</summary>
      <param name="messageLookupId">The lookup ID of the poison message.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Int64,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified lookup ID of the poison message, and the inner exception.</summary>
      <param name="messageLookupId">The lookup ID of the poison message.</param>
      <param name="innerException">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class with additional serialized information about the exception.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance that holds the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance that contains the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified message text.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class by using the specified message text and the inner exception.</summary>
      <param name="message">The message with which to initialize the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
      <param name="innerException">The inner exception to be encapsulated by the new instance of the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" /> class.</param>
    </member>
    <member name="M:System.ServiceModel.MsmqPoisonMessageException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Retrieves the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />, and the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> instance to hold the serialized data associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> instance to hold the source and destination of the serialized stream associated with the <see cref="T:System.ServiceModel.MsmqPoisonMessageException" />.</param>
    </member>
    <member name="P:System.ServiceModel.MsmqPoisonMessageException.MessageLookupId">
      <summary>Gets the lookup ID of the poison message.</summary>
      <returns>The lookup ID of the poison message.</returns>
    </member>
    <member name="T:System.ServiceModel.MsmqSecureHashAlgorithm">
      <summary>Contains the hashing algorithms that Message Queuing (MSMQ) can use to sign messages.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.MD5">
      <summary>The Message Digest Algorithm 5 (MD5).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha1">
      <summary>The Secure Hash Algorithm (SHA-1).</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha256">
      <summary>The SHA-256 algorithm.</summary>
    </member>
    <member name="F:System.ServiceModel.MsmqSecureHashAlgorithm.Sha512">
      <summary>The SHA 512 algorithm.</summary>
    </member>
    <member name="T:System.ServiceModel.MsmqTransportSecurity">
      <summary>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class encapsulates the transport security settings for queued transports.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.MsmqTransportSecurity.#ctor(System.ServiceModel.MsmqTransportSecurity)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class, using an existing instance.</summary>
      <param name="other">The existing instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class, to be used in initializing the new instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="other" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqAuthenticationMode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqAuthenticationMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqEncryptionAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqEncryptionAlgorithm" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.Net.Security.ProtectionLevel" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.MsmqTransportSecurity.MsmqSecureHashAlgorithm">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> that is associated with this instance of the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> class.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of <see cref="T:System.ServiceModel.MsmqSecureHashAlgorithm" /> values.</exception>
    </member>
    <member name="T:System.ServiceModel.NamedPipeTransportSecurity">
      <summary>Provides properties that control protection level for a named pipe.</summary>
    </member>
    <member name="M:System.ServiceModel.NamedPipeTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NamedPipeTransportSecurity.ProtectionLevel">
      <summary>Specifies the protection for the named pipe.</summary>
      <returns>A <see cref="T:System.Net.Security.ProtectionLevel" />. The default is <see cref="F:System.Net.Security.ProtectionLevel.EncryptAndSign" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.Net.Security.ProtectionLevel" />.</exception>
    </member>
    <member name="T:System.ServiceModel.NetMsmqBinding">
      <summary>Represents a queued binding that is suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.ServiceModel.NetMsmqSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class using the specified security mode.</summary>
      <param name="securityMode">The security mode with which to initialize the new instance.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not one of the <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> values.</exception>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqBinding" /> class from the settings of a specified configuration binding element.</summary>
      <param name="configurationName">The value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The ordered collection of binding elements described by the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The default value is SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that is allocated for use by the message buffer manager that receives messages from the channel.</summary>
      <returns>The maximum amount of memory, in bytes, available for use by the message buffer manager. The default value is 524288 (0x80000) bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.QueueTransferProtocol">
      <summary>Gets or sets an enumeration value that indicates the queued communication channel transport that this binding uses.</summary>
      <returns>The transport between queue managers that this binding uses.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> associated with this binding.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.Security">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurity" /> that is associated with this binding.</returns>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetMsmqBinding.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetMsmqBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetMsmqBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqBinding.UseActiveDirectory">
      <summary>Gets or sets a value that indicates whether queue addresses should be converted using Active Directory.</summary>
      <returns>true if queue addresses should be converted using Active Directory; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurity">
      <summary>The <see cref="T:System.ServiceModel.NetMsmqSecurity" /> class encapsulates the MSMQ security features available when using the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
    </member>
    <member name="M:System.ServiceModel.NetMsmqSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetMsmqSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Message">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverMsmq" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Mode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">Value is not one of <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.NetMsmqSecurity.Transport">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.MsmqTransportSecurity" /> that is associated with the <see cref="T:System.ServiceModel.NetMsmqBinding" /> binding.</returns>
    </member>
    <member name="T:System.ServiceModel.NetMsmqSecurityMode">
      <summary>The <see cref="T:System.ServiceModel.NetMsmqSecurityMode" /> enumeration specifies security modes that can be used by the MSMQ transport.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.None">
      <summary>Disables both MSMQ transport security and SOAP security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Transport">
      <summary>Enables MSMQ transport security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Message">
      <summary>Enables SOAP security.</summary>
    </member>
    <member name="F:System.ServiceModel.NetMsmqSecurityMode.Both">
      <summary>Enables both MSMQ transport security and SOAP security.</summary>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeBinding">
      <summary>Provides a secure and reliable binding that is optimized for on-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.ServiceModel.NetNamedPipeSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified security mode.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> value that specifies whether Windows security is used with named pipes.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeBinding" /> class with a specified configuration name.</summary>
      <param name="configurationName">The binding configuration name for the netNamedPipeBinding Element.</param>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding. </summary>
      <returns>
        <see cref="P:System.ServiceModel.EnvelopeVersion.Soap12" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum number of bytes that are used to buffer incoming messages in memory.</summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxBufferSize">
      <summary>Gets or sets the maximum number of bytes used to buffer incoming messages in memory.  </summary>
      <returns>The maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than 0.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxConnections">
      <summary>Gets or sets the maximum number of connections, both inbound and outbound, that are allowed to endpoints configured with the named pipe binding.</summary>
      <returns>The maximum number of named pipe connections that are allowed with this binding. The default value is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>Returns "net.pipe".</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> that is used with this binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />. </returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property has changed from its default value and should be serialized. This is used by  for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property has changed from its default value and should be serialized. This is used by  for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeBinding.ShouldSerializeTransactionProtocol">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property has changed from its default value and should be serialized. This is used by  for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>false to indicate that the incoming requests are handled asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionFlow">
      <summary>Gets or sets a value that determines whether transactions should be flowed to the service.</summary>
      <returns>true if the client’s transactions should be flowed to the service; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransactionProtocol">
      <summary>Gets or sets the transactions protocol used by the service to flow transactions.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions. The default protocol is <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" />.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed (in one or both directions) or buffered modes of message transfer. The default is <see cref="F:System.ServiceModel.TransferMode.Buffered" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurity">
      <summary>Provides access to the security settings for endpoints configured with the named pipe binding.</summary>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetNamedPipeSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Mode">
      <summary>Gets or sets the security mode for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NetNamedPipeSecurityMode" /> for the named pipe binding. The default value is <see cref="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport" />.</returns>
    </member>
    <member name="M:System.ServiceModel.NetNamedPipeSecurity.ShouldSerializeTransport">
      <summary>Returns a a value that indicates whether the <see cref="P:System.ServiceModel.NetNamedPipeSecurity.Transport" /> property has changed from its default value and should be serialized. This is used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetNamedPipeSecurity.Transport" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetNamedPipeSecurity.Transport">
      <summary>Gets the transport security for the named pipe binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.NamedPipeTransportSecurity" /> for the named pipe binding.</returns>
    </member>
    <member name="T:System.ServiceModel.NetNamedPipeSecurityMode">
      <summary>Specifies whether transport-level security is used with named pipes.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.None">
      <summary>Indicates no security is used with the named pipe transport.</summary>
    </member>
    <member name="F:System.ServiceModel.NetNamedPipeSecurityMode.Transport">
      <summary>Indicates that transport-level security is used with the named pipe transport.</summary>
    </member>
    <member name="T:System.ServiceModel.NetPeerTcpBinding">
      <summary>Provides a secure binding for peer-to-peer network applications.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetPeerTcpBinding" /> class with a specified configuration name. </summary>
      <param name="configurationName">The value of the configurationName attribute that identifies the binding element whose settings are used to initialize the binding.</param>
      <exception cref="T:System.Configuration.ConfigurationException">The configuration is invalid.</exception>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.EnvelopeVersion">
      <summary>Gets the SOAP version used with this binding.</summary>
      <returns>
        <see cref="T:System.ServiceModel.EnvelopeVersion" /> that specifies the version of SOAP to use with this binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.IsPnrpAvailable">
      <summary>Gets whether the PNRP service is installed and available on the computer.</summary>
      <returns>true if PNRP is installed and configured; false if it is not.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ListenIPAddress">
      <summary>Gets or sets the IP address used for listening by the local peer node.</summary>
      <returns>A <see cref="T:System.String" /> value that contains the well-formed IPv4 or IPv6 address upon which the local peer node is listening.</returns>
      <exception cref="T:System.ArgumentException">The provided address is invalid or incorrectly formed.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size of the memory pool used for the peer TCP buffer.</summary>
      <returns>A <see cref="T:System.Int32" /> value that specifies the maximum number of bytes that are used to buffer incoming messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size of TCP messages handled by peer channels created by this binding.</summary>
      <returns>
        <see cref="T:System.Int32" /> that contains the maximum size in bytes of TCP messages sent over the peer channels created by this binding. The default value is 65,536 (64 KB).</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Port">
      <summary>Gets or sets the network port on which to bind.</summary>
      <returns>A <see cref="T:System.Int32" /> value that represents the network port on which this binding instance will process peer-specific TCP messages. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.ReaderQuotas">
      <summary>Gets or sets the <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that is associated with this binding.</returns>
      <exception cref="T:System.ArgumentNullException">The application attempted to set this property to null.</exception>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Resolver">
      <summary>Gets the <see cref="T:System.ServiceModel.PeerResolver" /> used by this binding instance to resolve a peer mesh ID to the endpoint IP addresses of nodes within the peer mesh.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerResolver" /> used to resolve a peer mesh ID to a set of <see cref="T:System.ServiceModel.PeerNodeAddress" /> instances representing several nodes participating in the mesh.</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Scheme">
      <summary>Gets the URI scheme used for the transport protocol associated with this binding.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the URI scheme for the specific transport protocol used for this binding. </returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.Security">
      <summary>Gets and sets the security to set on peer channels created by this binding.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerSecuritySettings" /> enumeration value that indicates the security to set on peer channels created by this binding. Security can be either message- or transport-specific.</returns>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeReaderQuotas">
      <summary>Gets a value that specifies whether reader quota data for the binding should be serialized.</summary>
      <returns>Returns <see cref="T:System.Boolean" /> that specifies true if reader quota data should be serialized, and false if it should not be serialized..</returns>
    </member>
    <member name="M:System.ServiceModel.NetPeerTcpBinding.ShouldSerializeSecurity">
      <summary>Gets a value that specifies whether security information for the binding should be serialized.</summary>
      <returns>Returns <see cref="T:System.Boolean" /> that specifies true if the security information for the binding should be serialized, and false if it should not be serialized..</returns>
    </member>
    <member name="P:System.ServiceModel.NetPeerTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets whether incoming requests over peer channels created by this binding are handled synchronously or asynchronously.</summary>
      <returns>If true, incoming requests are handled synchronously; if false, they are handled asynchronously. The default value is false, with requests handled asynchronously.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpBinding">
      <summary>A secure, reliable binding suitable for cross-machine communication.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with the type of security used specified and with a value that indicates whether reliable sessions are explicitly enabled.</summary>
      <param name="securityMode">The <see cref="T:System.ServiceModel.SecurityMode" /> value that specifies the type of security used with the binding.</param>
      <param name="reliableSessionEnabled">true if reliable sessions are enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpBinding" /> class with a specified configuration name.</summary>
      <param name="configurationName">The binding configuration name for the netTcpBinding element.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages processed by this binding. </summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.HostnameComparisonMode" /> values that indicates whether the hostname is used to reach the service when matching the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ListenBacklog">
      <summary>Gets or sets the maximum number of queued connection requests that can be pending.</summary>
      <returns>Returns the maximum number of queued connection requests that can be pending. The default is 10.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value cannot be less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum size allowed for a buffer pool that stores TCP messages processed by the binding.</summary>
      <returns>The maximum size allowed for a buffer pool that stores TCP messages processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxBufferSize">
      <summary>Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</summary>
      <returns>The maximum size, in bytes, of the buffer used to store messages in memory. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxConnections">
      <summary>Gets or sets a value that controls the maximum number of connections to be pooled for subsequent reuse on the client and the maximum number of connections allowed to be pending dispatch on the server.</summary>
      <returns>On the client, the maximum number of connections to be pooled for subsequent reuse; on the server, the maximum number of connections allowed to be pending dispatch.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a received message that is processed by the binding.</summary>
      <returns>The maximum size (in bytes) for a received message that is processed by the binding. The default value is 65,536 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.PortSharingEnabled">
      <summary>Gets or sets a value that indicates whether TCP port sharing is enabled for the connection configured with this binding.</summary>
      <returns>true if TCP port sharing is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on soap messages exchanged. The default values for these constraints are provided in the following Remarks section.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.ReliableSession">
      <summary>Gets an object that indicates whether a reliable session is established between channel endpoints.</summary>
      <returns>An <see cref="T:System.ServiceModel.OptionalReliableSession" /> that indicates whether a WS-RM reliable session is established between channel endpoints. The default value for <see cref="P:System.ServiceModel.OptionalReliableSession.Enabled" /> is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Scheme">
      <summary>Returns the URI scheme for the transport.</summary>
      <returns>The URI scheme for the transport, which is "net.tcp".</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.Security">
      <summary>Gets an object that specifies the type of security used with services configured with this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.NetTcpSecurity" /> that contains the types of security used with this binding. The default mode of security for the NetTCPBinding is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetTcpBinding.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeReliableSession">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetTcpBinding.ReliableSession" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetTcpBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpBinding.ShouldSerializeTransactionProtocol">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.NetTcpBinding.TransactionProtocol" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if incoming requests are handled synchronously; false.if incoming requests are handled asynchronously. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionFlow">
      <summary>Gets or sets a value that determines whether transaction flow is enabled.</summary>
      <returns>true if transaction flow is enabled; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransactionProtocol">
      <summary>Gets or sets the transactions protocol used by the service to flow transactions.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransactionProtocol" /> used by the service to flow transactions.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpBinding.TransferMode">
      <summary>Gets or sets a value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</summary>
      <returns>The <see cref="T:System.ServiceModel.TransferMode" /> value that indicates whether the service configured with the binding uses streamed or buffered (or both) modes of message transfer.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpContextBinding">
      <summary>Provides a context-enabled binding for the <see cref="T:System.ServiceModel.NetTcpContextBinding" /> binding. </summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpContextBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpContextBinding" /> class with the specified <see cref="T:System.ServiceModel.SecurityMode" />.</summary>
      <param name="securityMode">The security mode.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpContextBinding" /> class with the specified <see cref="T:System.ServiceModel.SecurityMode" /> and reliable session setting.</summary>
      <param name="securityMode">The security mode.</param>
      <param name="reliableSessionEnabled">true to enable reliable sessions; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpContextBinding" /> class with the specified binding configuration.</summary>
      <param name="configName">The name of the binding configuration.</param>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ClientCallbackAddress">
      <summary>Gets or sets the client callback address.</summary>
      <returns>The client callback address.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ContextManagementEnabled">
      <summary>Gets a value that specifies whether context management is enabled.</summary>
      <returns>true if context management is enabled; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpContextBinding.ContextProtectionLevel">
      <summary>Gets or sets the context protection level for this binding.</summary>
      <returns>The protection level for the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.NetTcpContextBinding.CreateBindingElements">
      <summary>Creates an ordered collection of binding elements that are contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.NetTcpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.NetTcpSecurity">
      <summary>Specifies the types of transport-level and message-level security used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.NetTcpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NetTcpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Message">
      <summary>Gets the type of message-level security requirements for a service configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.MessageSecurityOverTcp" /> that indicates the type of message-level security requirements for an endpoint.</returns>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Mode">
      <summary>Gets or sets whether message-level security and transport-level security are used by an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>A value of the <see cref="T:System.ServiceModel.SecurityMode" /> that indicates whether message-level security or transport-level security is used by an endpoint. The default value is <see cref="F:System.ServiceModel.SecurityMode.Transport" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.NetTcpSecurity.Transport">
      <summary>Gets the type of message-level security requirements for an endpoint configured with a <see cref="T:System.ServiceModel.NetTcpBinding" />.</summary>
      <returns>The <see cref="T:System.ServiceModel.TcpTransportSecurity" /> that indicates the type of transport-level security requirements for an endpoint.</returns>
    </member>
    <member name="T:System.ServiceModel.NonDualMessageSecurityOverHttp">
      <summary>Represents the security settings of the wsHttpBinding binding.</summary>
    </member>
    <member name="M:System.ServiceModel.NonDualMessageSecurityOverHttp.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext">
      <summary>Gets or sets a value that indicates whether a security context token is established.</summary>
      <returns>true if a security context token is established; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationBehaviorAttribute">
      <summary>Specifies the local execution behavior of a service method. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters">
      <summary>Gets or sets whether parameters are to be automatically disposed.</summary>
      <returns>true if the parameters are to be automatically disposed; otherwise false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.Impersonation">
      <summary>Gets or sets a value that indicates the level of caller impersonation that the operation supports.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ImpersonationOption" /> values. The default is <see cref="F:System.ServiceModel.ImpersonationOption.NotAllowed" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode">
      <summary>Gets or sets a value that indicates when in the course of an operation invocation to recycle the service object.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values. The default is <see cref="F:System.ServiceModel.ReleaseInstanceMode.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ReleaseInstanceMode" /> values.</exception>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Implements the <see cref="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" /> method.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="parameters">Binding parameters passed to support binding behaviors.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the client operation behavior.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="proxy">The extensibility access point to insert custom client modifications for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the service operation behavior.</summary>
      <param name="description">The operation description modified to support <see cref="T:System.ServiceModel.OperationBehaviorAttribute" /> properties.</param>
      <param name="dispatch">The extensibility point to insert custom service modifications for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the validation behavior.</summary>
      <param name="description">The operation description to validate.</param>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete">
      <summary>Gets or sets a value that indicates whether to automatically complete the current transaction scope if no unhandled exceptions occur.</summary>
      <returns>true to complete the transaction scope automatically on successful execution of the operation; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired">
      <summary>Gets or sets a value that indicates whether the method requires a transaction scope for its execution.</summary>
      <returns>true if the method requires a transaction scope to execute; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContext">
      <summary>Provides access to the execution context of a service method.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContext.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContext" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> in a client application. </summary>
      <param name="channel">The <see cref="T:System.ServiceModel.IContextChannel" /> used to create a new client <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <exception cref="T:System.ArgumentNullException">The channel is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Channel">
      <summary>Gets the channel associated with the current <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <returns>An <see cref="T:System.ServiceModel.IContextChannel" /> associated with the current <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Current">
      <summary>Gets or sets the execution context for the current thread.</summary>
      <returns>The <see cref="T:System.ServiceModel.OperationContext" /> that represents the messaging and execution context of the current method.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.EndpointDispatcher">
      <summary>Gets or sets the endpoint dispatcher for the endpoint to inspect or modify.</summary>
      <returns>The endpoint dispatcher for the endpoint to inspect or modify.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Extensions">
      <summary>Gets the collection of service extensions from the current message context.</summary>
      <returns>A collection of extensions of <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.GetCallbackChannel``1">
      <summary>Gets a channel to the client instance that called the current operation.</summary>
      <returns>A channel to the client instance that called the operation of the type specified in the <see cref="P:System.ServiceModel.ServiceContractAttribute.CallbackContract" /> property.</returns>
      <typeparam name="T">The type of channel used to call back to the client.</typeparam>
    </member>
    <member name="P:System.ServiceModel.OperationContext.HasSupportingTokens">
      <summary>Gets a value that indicates whether the incoming message has supporting tokens.</summary>
      <returns>true if the incoming message has supporting tokens; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.Host">
      <summary>Gets the <see cref="T:System.ServiceModel.ServiceHost" /> for the current service object.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceHost" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageHeaders">
      <summary>Gets the incoming message headers for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains the incoming message headers.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageProperties">
      <summary>Gets the message properties for the incoming message in the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IncomingMessageVersion">
      <summary>Gets the incoming SOAP message version for the <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>The SOAP version of the incoming message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.InstanceContext">
      <summary>Gets the <see cref="T:System.ServiceModel.InstanceContext" /> object that manages the current service instance.</summary>
      <returns>The <see cref="T:System.ServiceModel.InstanceContext" /> object for the current service.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.IsUserContext">
      <summary>This property is intended for system use and should not be called by users.</summary>
      <returns>true.</returns>
    </member>
    <member name="E:System.ServiceModel.OperationContext.OperationCompleted">
      <summary>Occurs when the operation has completed. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageHeaders">
      <summary>Gets the outgoing message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageHeaders" /> object that contains outbound message headers for the active <see cref="T:System.ServiceModel.OperationContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.OutgoingMessageProperties">
      <summary>Gets the message properties for the outbound message in the active <see cref="T:System.ServiceModel.OperationContext" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.MessageProperties" /> object that contains the message properties on the outbound message.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.RequestContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation for this method.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.RequestContext" /> implementation, or null if there is no request context.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.ServiceSecurityContext">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> within which this method executes.</summary>
      <returns>A <see cref="T:System.ServiceModel.ServiceSecurityContext" /> object.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SessionId">
      <summary>Gets the <see cref="T:System.String" /> used to identify the current session.</summary>
      <returns>The session identifier.</returns>
    </member>
    <member name="M:System.ServiceModel.OperationContext.SetTransactionComplete">
      <summary>Commits the currently executing transaction.</summary>
      <exception cref="T:System.InvalidOperationException">There is no transaction in the context.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContext.SupportingTokens">
      <summary>Gets a <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.IdentityModel.Tokens.SecurityToken" />.</summary>
      <returns>A collection of security tokens.</returns>
    </member>
    <member name="T:System.ServiceModel.OperationContextScope">
      <summary>Creates a block within which an <see cref="T:System.ServiceModel.OperationContext" /> object is in scope.</summary>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class that uses the specified <see cref="T:System.ServiceModel.IContextChannel" /> to create a new <see cref="T:System.ServiceModel.OperationContext" /> for the scope.</summary>
      <param name="channel">The channel to use when creating the scope for a new <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContextScope" /> class to create a scope for the specified <see cref="T:System.ServiceModel.OperationContext" /> object.</summary>
      <param name="context">The active <see cref="T:System.ServiceModel.OperationContext" /> in the created scope.</param>
    </member>
    <member name="M:System.ServiceModel.OperationContextScope.Dispose">
      <summary>Restores the original <see cref="T:System.ServiceModel.OperationContext" /> to the active context and recycles the <see cref="T:System.ServiceModel.OperationContextScope" /> object.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationContractAttribute">
      <summary>Indicates that a method defines an operation that is part of a service contract in a  application. </summary>
    </member>
    <member name="M:System.ServiceModel.OperationContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OperationContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Action">
      <summary>Gets or sets the WS-Addressing action of the request message. </summary>
      <returns>The action to use in generating the WS-Addressing Action header.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
      <summary>Indicates that an operation is implemented asynchronously using a Begin&lt;methodName&gt; and End&lt;methodName&gt; method pair in a service contract. </summary>
      <returns>true if the Begin&lt;methodName&gt;method is matched by an End&lt;methodName&gt; method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /> property is set to a value other than <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
      <summary>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists). </summary>
      <returns>true if the operation is permitted to initiate a session on the server, otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
      <summary>Gets or sets a value that indicates whether an operation returns a reply message.</summary>
      <returns>true if this method receives a request message and returns no reply message; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
      <summary>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</summary>
      <returns>true if the operation causes the server to close the session, otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.Name">
      <summary>Gets or sets the name of the operation.</summary>
      <returns>The name of the operation.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.Name" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
      <summary>Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both. </summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
      <summary>Gets or sets the value of the SOAP action for the reply message of the operation.</summary>
      <returns>The value of the SOAP action for the reply message.</returns>
      <exception cref="T:System.ArgumentNullException">
        <see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.OperationFormatStyle">
      <summary>Represents the SOAP style that determines how the WSDL metadata for the service is formatted.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Document">
      <summary>Causes the WSDL representation to contain a single element that represents the document that is exchanged for the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatStyle.Rpc">
      <summary>Causes the WSDL representation of messages exchanged for an operation and contains parameters as if it were a remote procedure call.</summary>
    </member>
    <member name="T:System.ServiceModel.OperationFormatUse">
      <summary>Determines the format of the message.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Literal">
      <summary>Implies that the message is a literal instance of the schema in the WSDL.</summary>
    </member>
    <member name="F:System.ServiceModel.OperationFormatUse.Encoded">
      <summary>Implies that the schemas in the WSDL are abstract specifications that are encoded according to the rules found in SOAP 1.1 section 5.</summary>
    </member>
    <member name="T:System.ServiceModel.OptionalReliableSession">
      <summary>Provides convenient access to whether a reliable session is enabled when using one of the predefined bindings where it is optional.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OptionalReliableSession" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.OptionalReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.OptionalReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property value is used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.OptionalReliableSession.Enabled">
      <summary>Gets or sets a value that indicates whether the reliable session is enabled.</summary>
      <returns>true if the reliable session is enabled; otherwise, false. The default value depends on the binding being used.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerHopCountAttribute">
      <summary>Specifies the peer hop count member of a SOAP message header block.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerHopCountAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerHopCountAttribute" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Actor">
      <summary>Gets the URI that indicates the node at which this header is targeted.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the name of the actor node at which this header value is targeted.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.MustUnderstand">
      <summary>Specifies whether the node acting in the <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" /> role must understand this header.</summary>
      <returns>True if the node acting in the <see cref="P:System.ServiceModel.PeerHopCountAttribute.Actor" /> role must understand this header; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Name">
      <summary>Specifies the name of the element that corresponds to the peer hop count member.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the names of the XML element in the SOAP message that corresponds to the peer hop count.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Namespace">
      <summary>Gets the namespace of the element that corresponds to the peer hop count member.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the namespace of the XML element in the SOAP message that corresponds to the peer hop count.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.ProtectionLevel">
      <summary>Gets whether the peer hop count member is to be transmitted as-is, signed, or signed and encrypted.</summary>
      <returns>
        <see cref="T:System.Net.Security.ProtectionLevel" /> enumeration value that indicates the security protection level. The default value is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerHopCountAttribute.Relay">
      <summary>Gets whether this peer hop count is relayed to downstream nodes.</summary>
      <returns>True if the peer hop count is relayed to downstream nodes; false if it is not.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerMessageOrigination">
      <summary>Indicates the network origin of a peer channel message.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Local">
      <summary>The message originated on the local computer.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessageOrigination.Remote">
      <summary>The message originated from a remote computer.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagation">
      <summary>Indicates the recipient of a message sent over a peer channel.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.None">
      <summary>The recipient of the message is not known or available.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Local">
      <summary>The message is intended for the local peer node.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.Remote">
      <summary>The message is intended for a remote peer node in the peer mesh.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerMessagePropagation.LocalAndRemote">
      <summary>The message is intended for both the local peer node and a remote peer node in the peer mesh.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerMessagePropagationFilter">
      <summary>Defines the base class for peer channel message filters.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerMessagePropagationFilter.ShouldMessagePropagate(System.ServiceModel.Channels.Message,System.ServiceModel.PeerMessageOrigination)">
      <summary>Returns whether or not a message received on a peer channel should be propagated, and if so, the destination of the message.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerMessagePropagation" /> enumeration value that indicates the destination of the message (local, remote, both, or no propagation at all).</returns>
      <param name="message">The message to evaluate for propagation. </param>
      <param name="origination">A <see cref="T:System.ServiceModel.PeerMessageOrigination" /> enumeration value that specifies the origin (local or remote) of the message under evaluation.</param>
    </member>
    <member name="T:System.ServiceModel.PeerNode">
      <summary>Defines the instance of of a peer node used by an application participating in a specific peer mesh.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.IsOnline">
      <summary>Gets a value indicating whether the peer node is online and able to send messages to neighboring nodes in the peer mesh.</summary>
      <returns>true if the peer node is online; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNode.MessagePropagationFilter">
      <summary>Gets and sets a custom filter for messages received over the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerMessagePropagationFilter" /> that contains a custom message filter.</returns>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Offline">
      <summary>Signals when the peer node goes offline from the peer mesh.</summary>
    </member>
    <member name="E:System.ServiceModel.PeerNode.Online">
      <summary>Signals when a peer node comes online within the peer mesh.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerNode.Port">
      <summary>Gets the network port on which the peer node is listening.</summary>
      <returns>
        <see cref="T:System.Int32" /> that specifies the network port on which the peer node is listening.</returns>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.RefreshConnection">
      <summary>Refreshes the connection with the peer mesh.</summary>
      <exception cref="T:System.InvalidOperationException">No channel is open for listening.</exception>
      <exception cref="T:System.TimeOutException">The refresh operation timed out.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">A network error occurred during the refresh attempt.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectAbortedException">The connection aborted during the refresh attempt.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The connection faulted during the refresh attempt.</exception>
    </member>
    <member name="M:System.ServiceModel.PeerNode.ToString">
      <summary>Provides a string representation of a peer node.</summary>
      <returns>
        <see cref="T:System.String" /> value that contains the mesh ID of the peer node if the mesh ID is set; otherwise, it returns the type.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerNodeAddress">
      <summary>Specifies a type that contains the <see cref="T:System.ServiceModel.EndpointAddress" /> for a peer node as well as an optional collection of multihoming IP addresses.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerNodeAddress.#ctor(System.ServiceModel.EndpointAddress,System.Collections.ObjectModel.ReadOnlyCollection{System.Net.IPAddress})">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.PeerNodeAddress" /> with the supplied <see cref="T:System.ServiceModel.EndpointAddress" /> and a collection of multihoming IP addresses also configured for the local computer.</summary>
      <param name="endpointAddress">A <see cref="T:System.ServiceModel.EndpointAddress" /> that represents the address of the peer node within the mesh. </param>
      <param name="ipAddresses">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains IP addresses configured for the local computer, and which can be used to connect to the peer node.</param>
      <exception cref="T:System.ArgumentNullException">One of the arguments supplied to the constructor is set to null.</exception>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.EndpointAddress">
      <summary>Gets the <see cref="T:System.ServiceModel.EndpointAddress" /> associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.EndpointAddress" /> associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="P:System.ServiceModel.PeerNodeAddress.IPAddresses">
      <summary>Gets a collection of multihoming IP addresses for this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</summary>
      <returns>A collection of multihoming IP addresses associated with this <see cref="T:System.ServiceModel.PeerNodeAddress" />.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerResolver">
      <summary>Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PeerResolver" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerResolver.CanShareReferrals">
      <summary>Gets whether the peer name resolver can share referrals.</summary>
      <returns>If true, the peer name resolver can share referrals; if false, it cannot.</returns>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Initialize(System.ServiceModel.EndpointAddress,System.ServiceModel.Channels.Binding,System.ServiceModel.Description.ClientCredentials,System.ServiceModel.PeerResolvers.PeerReferralPolicy)">
      <summary>Initializes the current peer resolver instance with the new supplied endpoint address and settings.</summary>
      <param name="address">
        <see cref="T:System.ServiceModel.EndpointAddress" /> that contains the new endpoint address of this peer resolver instance.</param>
      <param name="binding">
        <see cref="T:System.ServiceModel.Channels.Binding" /> that specifies the new network binding for this peer resolver.</param>
      <param name="credentials">
        <see cref="T:System.ServiceModel.Description.ClientCredentials" /> that specifies the new client credentials for this peer resolver.</param>
      <param name="referralPolicy">
        <see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the new referral policy for this peer resolver.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Registers a <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a specific peer mesh.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the registration ID. This registration ID object is passed to the <see cref="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /> and <see cref="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)" /> methods. </returns>
      <param name="meshId">The ID of the peer mesh in which the peer node is to be registered.</param>
      <param name="nodeAddress">The <see cref="T:System.ServiceModel.PeerNodeAddress" /> to be registered with the peer mesh. </param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to register with the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Resolve(System.String,System.Int32,System.TimeSpan)">
      <summary>Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> that contains <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing nodes participating in the peer mesh.</returns>
      <param name="meshId">The mesh ID of the peer mesh within which the <see cref="T:System.ServiceModel.PeerNodeAddress" /> objects representing participating nodes are to be obtained.</param>
      <param name="maxAddresses">The number of endpoint addresses to return.</param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)">
      <summary>Removes the registration entry for a node from a peer mesh.</summary>
      <param name="registrationId">A registration ID for the node obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" />.</param>
      <param name="timeout">The length of time to wait for a successful removal of the registration from the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="M:System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)">
      <summary>Updates the <see cref="T:System.ServiceModel.PeerNodeAddress" /> for a node registered with a specific peer mesh.</summary>
      <param name="registrationId">A registration ID token for the node, obtained by a previous call to <see cref="M:System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)" /></param>
      <param name="updatedNodeAddress">The updated endpoint address (and other multihoming IP addresses). </param>
      <param name="timeout">The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh. If the attempt fails, <see cref="T:System.TimeoutException" /> is raised on the peer.</param>
    </member>
    <member name="T:System.ServiceModel.PeerSecuritySettings">
      <summary>Contains the security settings associated with a peer channel, including the type of authentication used and the security used for the message transport.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.ServiceModel.PeerSecuritySettings" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Mode">
      <summary>Gets and sets the value that indicates the security mode of the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.SecurityMode" /> enumeration value that indicates the security mode for the peer channel. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified value is not an enumerated value from <see cref="T:System.ServiceModel.SecurityMode" /></exception>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeMode">
      <summary>Gets a value that indicates whether the security mode information should be serialized.</summary>
      <returns>Returns <see cref="T:System.Boolean" /> that specifies true if the security mode information should be serialized, and false if it should not be serialized..</returns>
    </member>
    <member name="M:System.ServiceModel.PeerSecuritySettings.ShouldSerializeTransport">
      <summary>Gets a value that indicates whether the transport information should be serialized.</summary>
      <returns>Returns <see cref="T:System.Boolean" /> that specifies true if the transport information should be serialized, and false if it should not be serialized..</returns>
    </member>
    <member name="P:System.ServiceModel.PeerSecuritySettings.Transport">
      <summary>Gets the value that indicates the security settings for the transport used for messages transmitted over the peer channel.</summary>
      <returns>
        <see cref="T:System.ServiceModel.PeerTransportSecuritySettings" /> that contains the transport security settings for the peer channel.</returns>
    </member>
    <member name="T:System.ServiceModel.PeerTransportCredentialType">
      <summary>Specifies the set of credential types used to authenticate a peer channel transport.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Password">
      <summary>Authentication of the peer channel transport requires a correct password.</summary>
    </member>
    <member name="F:System.ServiceModel.PeerTransportCredentialType.Certificate">
      <summary>Authentication of the peer channel transport requires an X509 certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.PeerTransportSecuritySettings">
      <summary>Contains the security settings for a peer channel transport.</summary>
    </member>
    <member name="M:System.ServiceModel.PeerTransportSecuritySettings.#ctor">
      <summary>Creates an instance of the <see cref="T:System.ServiceModel.PeerTransportSecuritySettings" /> type.</summary>
    </member>
    <member name="P:System.ServiceModel.PeerTransportSecuritySettings.CredentialType">
      <summary>Gets and sets the type of credential used to authenticate the peer channel transport.</summary>
      <returns>A <see cref="T:System.ServiceModel.PeerTransportCredentialType" /> enumeration value that specifies the type of credentials to provide for authentication.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The credential type is an invalid <see cref="T:System.ServiceModel.PeerTransportCredentialType" /> enumeration value.</exception>
    </member>
    <member name="T:System.ServiceModel.PoisonMessageException">
      <summary>An exception that is thrown when the message is deemed poison. A message is poisoned if it fails repeated attempts to deliver the message.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception. </param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" />  that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:System.ServiceModel.PoisonMessageException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.PoisonMessageException" /> class with a specified error message and a reference to the inner exception that is the cause of the current exception.</summary>
      <param name="message">The message that describes the error.</param>
      <param name="innerException">The exception that is the cause of the current exception.</param>
    </member>
    <member name="T:System.ServiceModel.ProtocolException">
      <summary>The exception seen on the client that is thrown when communication with the remote party is impossible due to mismatched data transfer protocols.</summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with serialization information and streaming context specified.  </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ProtocolException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ProtocolException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.QueuedDeliveryRequirementsMode">
      <summary>The <see cref="T:System.ServiceModel.QueuedDeliveryRequirementsMode" /> enumeration specifies queued delivery requirements.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Allowed">
      <summary>Queued delivery is allowed.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.Required">
      <summary>Queued delivery is required.</summary>
    </member>
    <member name="F:System.ServiceModel.QueuedDeliveryRequirementsMode.NotAllowed">
      <summary>Queued delivery is not allowed.</summary>
    </member>
    <member name="T:System.ServiceModel.QueueTransferProtocol">
      <summary>Indicates the protocol to be used in transferring messages between queue managers.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Native">
      <summary>Use the native MSMQ protocol.</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.Srmp">
      <summary>Use the Soap Reliable Messaging Protocol (SRMP).</summary>
    </member>
    <member name="F:System.ServiceModel.QueueTransferProtocol.SrmpSecure">
      <summary>Use the Soap Reliable Messaging Protocol Secure (SRMPS) transport.</summary>
    </member>
    <member name="T:System.ServiceModel.QuotaExceededException">
      <summary>The exception that is thrown when a message quota has been exceeded.</summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.QuotaExceededException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.ReceiveContextEnabledAttribute">
      <summary>This attribute can be applied to service operations to enable receive context behavior.</summary>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="M:System.ServiceModel.ReceiveContextEnabledAttribute.#ctor" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Configures the binding elements to support the receive context behavior.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="bindingParameters">The binding parameters.</param>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
      <param name="clientOperation">The client run-time object.</param>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Implements the <see cref="M:System.ServiceModel.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" /> method. </summary>
      <param name="operationDescription">The operation description.</param>
      <param name="dispatchOperation">The operation to dispatch to.</param>
    </member>
    <member name="P:System.ServiceModel.ReceiveContextEnabledAttribute.ManualControl">
      <summary>Gets or sets value that indicates whether the receive acknowledgement for this operation is explicitly signaled by service method.</summary>
      <returns>true if the receive acknowledgement for this operation is explicitly signaled; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ReceiveContextEnabledAttribute.Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Implements the <see cref="M:System.ServiceModel.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" /> method.</summary>
      <param name="operationDescription">The operation description.</param>
    </member>
    <member name="T:System.ServiceModel.ReceiveErrorHandling">
      <summary>An enumeration that specifies handling for a poison message.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Fault">
      <summary>This option sends a fault to the listener that caused the ServiceHost to fault. The message must be removed from the application queue by some external mechanism before the application can continue to process messages from the queue. </summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Drop">
      <summary>This option drops the poison message. The message never gets delivered to the application. If the message's TTL had already expired at this point, then the message may appear in the sender's Dead Letter Queue. If not, the message does not appear anywhere. This option indicates that the user does not really care if the message is lost.</summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Reject">
      <summary>This instructs MSMQ to send a negative acknowledgement back to the sending queue manager that the message cannot be received by the application. The message is placed in the sending queue manager's Dead Letter Queue. </summary>
    </member>
    <member name="F:System.ServiceModel.ReceiveErrorHandling.Move">
      <summary>This moves the poison message to a Poison Message Queue for later processing by a poison message handling application. </summary>
    </member>
    <member name="T:System.ServiceModel.ReleaseInstanceMode">
      <summary>Specifies when the system recycles the service object in the operation invocation process.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.None">
      <summary>Recycles the object according to the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode" /> value.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeCall">
      <summary>Recycles the object prior to calling the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.AfterCall">
      <summary>Recycles the object subsequent to the completion of the operation.</summary>
    </member>
    <member name="F:System.ServiceModel.ReleaseInstanceMode.BeforeAndAfterCall">
      <summary>Recycles the object prior to calling the operation and subsequent to the completion of the operation.</summary>
    </member>
    <member name="T:System.ServiceModel.ReliableMessagingVersion">
      <summary>Contains the settings for the supported versions of the WS-ReliableMessaging protocol. This is an abstract class.</summary>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.Default">
      <summary>Returns the default version of WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the default version of the WS-ReliableMessaging protocol. The default version is WS-ReliableMessagingFebruary2005.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessaging11">
      <summary>Gets version 1.1 of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessaging1.1 version.</returns>
    </member>
    <member name="P:System.ServiceModel.ReliableMessagingVersion.WSReliableMessagingFebruary2005">
      <summary>Gets the February 2005 version of the WS-ReliableMessaging protocol.</summary>
      <returns>An instance derived from <see cref="T:System.ServiceModel.ReliableMessagingVersion" /> that represents the WS-ReliableMessagingFebruary2005 version.</returns>
    </member>
    <member name="T:System.ServiceModel.ReliableSession">
      <summary>Provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.ReliableSession.#ctor(System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ReliableSession" /> class from a reliable session binding element.</summary>
      <param name="reliableSessionBindingElement">The <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" /> whose property values are used to initialize the reliable session.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="reliableSessionBindingElement" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.InactivityTimeout">
      <summary>Gets or sets an interval of time that a service can remain inactive before closing.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the interval of time that a service remains inactive before closing. The default value is 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.ReliableSession.Ordered">
      <summary>Gets or sets a value that indicates whether message delivery must preserve the order in which messages are sent.</summary>
      <returns>true if messages must be delivered in the order in which they are sent; otherwise, false. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.RsaEndpointIdentity">
      <summary>Specifies an RSA identity for the service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Rsa" />.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class.</summary>
      <param name="certificate">The <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
      <exception cref="T:System.NotSupportedException">The <paramref name="certificate" /> public key is null.</exception>
      <exception cref="T:System.Security.Cryptography.CryptographicException">The certificate's public key cannot be accessed.</exception>
    </member>
    <member name="M:System.ServiceModel.RsaEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.RsaEndpointIdentity" /> class from a public key.</summary>
      <param name="publicKey">The public key.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="publicKey" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.SecurityMode">
      <summary>Determines the security settings for a binding.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.None">
      <summary>Security is disabled.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Transport">
      <summary>Security is provided using a secure transport (for example, HTTPS).</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.Message">
      <summary>Security is provided using SOAP message security.</summary>
    </member>
    <member name="F:System.ServiceModel.SecurityMode.TransportWithMessageCredential">
      <summary>A secure transport (for example, HTTPS) provides integrity, confidentiality, and authentication while SOAP message security provides client authentication.</summary>
    </member>
    <member name="T:System.ServiceModel.ServerTooBusyException">
      <summary>The exception that is thrown when a server is too busy to accept a message.</summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with data that specifies the source and destination of the stream and the information required to serialize the exception.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServerTooBusyException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServerTooBusyException" /> class with a specified error message and a reference to the inner exception that is the cause of the exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceActivationException">
      <summary>The exception that is thrown when a service fails to activate.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with serialization information and streaming context specified.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains all the data required to serialize the exception.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that specifies the source and destination of the stream.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceActivationException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceActivationException" /> class with a specified error message and the inner exception provided.  </summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The <see cref="T:System.Exception" /> that caused the current exception to be thrown. </param>
    </member>
    <member name="T:System.ServiceModel.ServiceAuthenticationManager">
      <summary>Represents a service authentication manager.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthenticationManager.#ctor">
      <summary>Creates a new instance of <see cref="T:System.ServiceModel.ServiceAuthenticationManager" />.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthenticationManager.Authenticate(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy},System.Uri,System.ServiceModel.Channels.Message@)">
      <summary>Authenticates the specified message.</summary>
      <returns>Returns <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />.</returns>
      <param name="authPolicy">The authorization policy.</param>
      <param name="listenUri">The URI at which the message was received.</param>
      <param name="message">The message to be authenticated.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceAuthorizationManager">
      <summary>Provides authorization access checking for service operations.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceAuthorizationManager" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext)">
      <summary>Checks authorization for the given operation context.</summary>
      <returns>true if access is granted; otherwise; otherwise false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" />.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccess(System.ServiceModel.OperationContext,System.ServiceModel.Channels.Message@)">
      <summary>Checks authorization for the given operation context when access to a message is required.</summary>
      <returns>true if access is granted; otherwise; otherwise false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" />.</param>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to be examined to determine authorization.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore(System.ServiceModel.OperationContext)">
      <summary>Checks authorization for the given operation context based on default policy evaluation.</summary>
      <returns>true if access is granted; otherwise, false. The default is true.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" /> for the current authorization request.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceAuthorizationManager.GetAuthorizationPolicies(System.ServiceModel.OperationContext)">
      <summary>Gets the set of policies that participate in policy evaluation.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" />.</returns>
      <param name="operationContext">The <see cref="T:System.ServiceModel.OperationContext" /> of the current authorization request.</param>
    </member>
    <member name="T:System.ServiceModel.ServiceBehaviorAttribute">
      <summary>Specifies the internal execution behavior of a service contract implementation.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceBehaviorAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AddressFilterMode">
      <summary>Gets or sets the <see cref="T:System.ServiceModel.AddressFilterMode" /> that is used by the dispatcher to route incoming messages to the correct endpoint.</summary>
      <returns>The <see cref="T:System.ServiceModel.AddressFilterMode" /> object that is used by the dispatcher to route incoming messages to the correct endpoint.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.AddressFilterMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.AutomaticSessionShutdown">
      <summary>Specifies whether to automatically close a session when a client closes an output session.</summary>
      <returns>true if services automatically close a session when the client closes an output session; otherwise, false. The default is true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConcurrencyMode">
      <summary>Gets or sets whether a service supports one thread, multiple threads, or reentrant calls.  </summary>
      <returns>One of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values; the default is <see cref="F:System.ServiceModel.ConcurrencyMode.Single" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.ConcurrencyMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName">
      <summary>Gets or sets the value used to locate the service element in an application configuration file.</summary>
      <returns>The value to locate in the configuration file. The default value is the fully qualified type name without assembly information.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.GetWellKnownSingleton">
      <summary>Retrieves an object that implements the service and that is used as the singleton instance of the service, or null if there is no singleton instance.</summary>
      <returns>An implementation of the service. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IgnoreExtensionDataObject">
      <summary>Gets or sets a value that specifies whether to send unknown serialization data onto the wire.</summary>
      <returns>true if unknown serialization data is never sent; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults">
      <summary>Gets or sets a value that specifies that general unhandled execution exceptions are to be converted into a <see cref="T:System.ServiceModel.FaultException`1" /> of type <see cref="T:System.ServiceModel.ExceptionDetail" /> and sent as a fault message. Set this to true only during development to troubleshoot a service.</summary>
      <returns>true if unhandled exceptions are to be returned as SOAP faults; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode">
      <summary>Gets or sets the value that indicates when new service objects are created.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values; the default value is <see cref="F:System.ServiceModel.InstanceContextMode.PerSession" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.InstanceContextMode" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.MaxItemsInObjectGraph">
      <summary>Gets or sets the maximum number of items allowed in a serialized object.</summary>
      <returns>The maximum number of items allowed in an object. The default is 65536 bytes (64KB).</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Name">
      <summary>Gets or sets the value of the name attribute in the service element in Web Services Description Language (WSDL).</summary>
      <returns>The value of the name attribute in the &lt;wsdl:service&gt; element when exported. </returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.Namespace">
      <summary>Gets or sets the value of the target namespace for the service in Web Services Description Language (WSDL).</summary>
      <returns>The value of the targetNamespace attribute for the &lt;wsdl:definitions&gt; element that contains the &lt;wsdl:service&gt; element.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete">
      <summary>Gets or sets a value that specifies whether the service object is released when the current transaction completes.</summary>
      <returns>true if the service object is to be released; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.SetWellKnownSingleton(System.Object)">
      <summary>Specifies an object that implements the service and that is used as the singleton instance of the service.</summary>
      <param name="value">The singleton instance of the service. </param>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeConfigurationName">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ConfigurationName" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeReleaseServiceInstanceOnTransactionComplete">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionAutoCompleteOnSessionClose">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionIsolationLevel">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.ShouldSerializeTransactionTimeout">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Passes custom data objects to the bindings that support the behavior properties.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
      <param name="endpoints">The service endpoints.</param>
      <param name="parameters">The data objects needed by bindings to support the behavior.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Customizes the service run time to support the behavior properties.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceBehaviorAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Confirms that the service description and service host are capable of supporting the behavior.</summary>
      <param name="description">The service description.</param>
      <param name="serviceHostBase">The service host.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose">
      <summary>Gets or sets a value that specifies whether pending transactions are completed when the current session closes without error.</summary>
      <returns>true if pending transactions are to be completed when the current session closes without error; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionIsolationLevel">
      <summary>Specifies the transaction isolation level for new transactions created inside the service, and incoming transactions flowed from a client.</summary>
      <returns>A <see cref="T:System.Transactions.IsolationLevel" /> value that specifies the transaction isolation level. The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Transactions.IsolationLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.TransactionTimeout">
      <summary>Gets or sets the period within which a transaction must complete.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> object that represents the time within which transactions must complete or be automatically aborted.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than <see cref="F:System.TimeSpan.Zero" /> or greater than <see cref="F:System.TimeSpan.MaxValue" />.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.UseSynchronizationContext">
      <summary>Gets or sets a value that specifies whether to use the current synchronization context to choose the thread of execution.</summary>
      <returns>true if all calls to the service must run on the thread specified by the <see cref="T:System.Threading.SynchronizationContext" />; otherwise, false. The default value is true.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand">
      <summary>Gets or sets a value that specifies whether the system or the application enforces SOAP MustUnderstand header processing.</summary>
      <returns>true if the system is to perform SOAP header MustUnderstand processing; otherwise false, which indicates that the application performs this processing. The default value is true.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceContractAttribute">
      <summary>Indicates that an interface or a class defines a service contract in a  application. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceContractAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.CallbackContract">
      <summary>Gets or sets the type of callback contract when the contract is a duplex contract.</summary>
      <returns>A <see cref="T:System.Type" /> that indicates the callback contract. The default is null.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ConfigurationName">
      <summary>Gets or sets the name used to locate the service in an application configuration file.</summary>
      <returns>The name used to locate the service element in an application configuration file. The default is the name of the service implementation class.</returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.HasProtectionLevel">
      <summary>Gets a value that indicates whether the member has a protection level assigned.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property is not <see cref="F:System.Net.Security.ProtectionLevel.None" />; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Name">
      <summary>Gets or sets the name for the &lt;portType&gt; element in Web Services Description Language (WSDL). </summary>
      <returns>The default value is the name of the class or interface to which the <see cref="T:System.ServiceModel.ServiceContractAttribute" /> is applied. </returns>
      <exception cref="T:System.ArgumentNullException">The value is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.Namespace">
      <summary>Gets or sets the namespace of the &lt;portType&gt; element in Web Services Description Language (WSDL).</summary>
      <returns>The WSDL namespace of the &lt;portType&gt; element. The default value is "http://tempuri.org". </returns>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel">
      <summary>Specifies whether the binding for the contract must support the value of the <see cref="P:System.ServiceModel.ServiceContractAttribute.ProtectionLevel" /> property.</summary>
      <returns>One of the <see cref="T:System.Net.Security.ProtectionLevel" /> values. The default is <see cref="F:System.Net.Security.ProtectionLevel.None" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.Net.Security.ProtectionLevel" /> values.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceContractAttribute.SessionMode">
      <summary>Gets or sets whether sessions are allowed, not allowed or required.</summary>
      <returns>A <see cref="T:System.ServiceModel.SessionMode" /> that indicates whether sessions are allowed, not allowed, or required.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not one of the <see cref="T:System.ServiceModel.SessionMode" /> values.</exception>
    </member>
    <member name="T:System.ServiceModel.ServiceHost">
      <summary>Provides a host for services.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the instance of the service and its base addresses specified.</summary>
      <param name="singletonInstance">The instance of the hosted service.</param>
      <param name="baseAddresses">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="singletonInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.#ctor(System.Type,System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHost" /> class with the type of service and its base addresses specified.</summary>
      <param name="serviceType">The type of hosted service.</param>
      <param name="baseAddresses">An array of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, an endpoint address, and a URI on which the service listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The endpoint address for the service.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and URI that contains the endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, a URI that contains the endpoint address, and a URI on which the service listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The <see cref="T:System.Type" /> of contract for the endpoint added.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> on which the service endpoints can listen.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The contracts are not initialized or the contract keys cannot be found.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>Creates a description of the service hosted.</summary>
      <returns>A <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the hosted service.</returns>
      <param name="implementedContracts">The <see cref="T:System.Collections.Generic.IDictionary`2" /> with key pairs of type (<see cref="T:System.String" />, <see cref="T:System.ServiceModel.Description.ContractDescription" />) that contains the keyed-contracts of the hosted service that have been implemented.</param>
      <exception cref="T:System.InvalidOperationException">The type of service hosted is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Initializes a description of the service hosted based on its instance and specified base addresses.</summary>
      <param name="singletonInstance">The instance of the hosted service.</param>
      <param name="baseAddresses">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="singletonInstance" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Initializes a description of the service hosted based on its type and specified base addresses.</summary>
      <param name="serviceType">The <see cref="T:System.Type" /> of service hosted.</param>
      <param name="baseAddresses">The <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the hosted service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHost.OnClosed">
      <summary>Disposes of disposable services that are being hosted when the service host is closed.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHost.SingletonInstance">
      <summary>Gets the singleton instance of the hosted service.</summary>
      <returns>The hosted service object.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceHostBase">
      <summary>Extends the <see cref="T:System.ServiceModel.ServiceHostBase" /> class to implement hosts that expose custom programming models.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceHostBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
      <summary>Adds a base address to the service host.</summary>
      <param name="baseAddress">A <see cref="T:System.Uri" /> that contains the base address for services hosted on the current host.</param>
      <exception cref="T:System.InvalidOperationException">The <paramref name="baseAddress" /> cannot be called.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
      <summary>Adds service endpoints for all base addresses in each contract found in the service host with the default binding.</summary>
      <returns>A read-only collection of default endpoints.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>Adds the specified service endpoint to the hosted service.</summary>
      <param name="endpoint">The service endpoint.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="Endpoint" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a Created or an Opening state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="Address" />, <paramref name="Binding, " /> or <paramref name="Contract" /> property is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added. This can be an absolute or relative URI. If it is a relative URI, one of the base address of the <see cref="T:System.ServiceModel.ServiceHost" /> (depending on the binding protocol) is used as the endpoint's base address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added or the binding lacks a transport of binding scheme.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, endpoint address and URI that contains the address at which it listens.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The address for the endpoint added. This address can be an absolute or relative URI. If it is a relative URI, one of the base address of the <see cref="T:System.ServiceModel.ServiceHost" /> (depending on the binding protocol) is used as the endpoint's base address.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> that contains the address which the endpoint listens to for incoming messages. This URI can be relative or absolute.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with a specified contract, binding, and a URI that contains the endpoint address.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added. This can be an absolute or relative URI. If it is a relative URI, one of the base address of the <see cref="T:System.ServiceModel.ServiceHost" /> (depending on the binding protocol) is used as the endpoint's base address.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
      <summary>Adds a service endpoint to the hosted service with the specified contract, binding, and URIs that contain the endpoint and listening addresses.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> added to the hosted service. This URI can be absolute or relative.</returns>
      <param name="implementedContract">The contract implemented by the endpoint.</param>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.Binding" /> for the endpoint added.</param>
      <param name="address">The <see cref="T:System.Uri" /> that contains the address for the endpoint added. If it is a relative URI, one of the base address of the <see cref="T:System.ServiceModel.ServiceHost" /> (depending on the binding protocol) is used as the endpoint's base address.</param>
      <param name="listenUri">The <see cref="T:System.Uri" /> that contains the address at which the endpoint listens for incoming messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="implementedContract" /> or <paramref name="binding" /> or <paramref name="address" /> or is null.</exception>
      <exception cref="T:System.InvalidOperationException">The host is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state or there is no <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service and so an endpoint cannot be added.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.ApplyConfiguration">
      <summary>Loads the service description information from the configuration file and applies it to the runtime being constructed.</summary>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Authentication">
      <summary>Gets the service authentication behavior.</summary>
      <returns>The service authentication behavior.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Authorization">
      <summary>Gets the authorization behavior for the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> for the service hosted.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
      <summary>Gets the base addresses used by the hosted service.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.Uri" /> that contains the base addresses for the hosted service.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
      <summary>Gets the collection of channel dispatchers used by the service host.</summary>
      <returns>The <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" /> that contains the channel dispatchers used by the service host.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to close.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the service host to close.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value, in milliseconds, is less than zero or is larger than <see cref="F:System.Int32.MaxValue" /> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</exception>
      <exception cref="T:System.InvalidOperationException">The host is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Closing" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The host is already in a <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The host is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <summary>When implemented in a derived class, creates the description of the hosted service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service.</returns>
      <param name="implementedContracts">The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects for the service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Credentials">
      <summary>Gets the credential for the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceCredentials" /> for the service hosted.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time allowed for the service host to close.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the service host to close.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time allowed for the service host to open.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the default interval of time allowed for the service host to open.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Description">
      <summary>Gets the description of the service hosted.</summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> for the hosted service.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.Extensions">
      <summary>Gets the extensions for the current specified service host.</summary>
      <returns>An <see cref="T:System.ServiceModel.IExtensionCollection`1" /> of type <see cref="T:System.ServiceModel.ServiceHostBase" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
      <summary>Retrieves the contracts implemented by the service hosted.</summary>
      <returns>The <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the <see cref="T:System.ServiceModel.Description.ContractDescription" /> objects for the service.</returns>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
      <summary>Increases the limit on the flow rate of messages to the hosted service by a specified increment.</summary>
      <returns>The new limit after the increment is added.</returns>
      <param name="incrementBy">The number of messages by which to increase the flow control limit.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
      <summary>Creates and initializes the service host with the contract and service descriptions.</summary>
      <param name="baseAddresses">A <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> that contains the base addresses for the service hosted.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
      <summary>Initializes the runtime for the service host.</summary>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
      <summary>Loads the service element from the configuration file of the hosted service.</summary>
      <param name="serviceSection">The <see cref="T:System.ServiceModel.Configuration.ServiceElement" /> to be loaded from configuration.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="serviceSection" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The description of the service hosted is null.</exception>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
      <summary>Gets or sets the flow control limit for messages received by the service hosted.</summary>
      <returns>The flow control limit for messages received by the service hosted.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnAbort">
      <summary>Aborts the service.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked on the close of the service host.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on-close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation invoked on the opening of the service host.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on-open completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-open operation.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
      <summary>Closes down the hosted service, including their channel dispatchers and associated instance contexts and listeners.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnClosed">
      <summary>Releases resources used by the service host.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked on the closing of the service host.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation invoked on the opening of the service host.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
      <summary>Opens the channel dispatchers.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-open operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.OnOpened">
      <summary>Gets the service credentials,service authentication and authorization behavior for the hosted service.</summary>
    </member>
    <member name="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
      <summary>Gets or sets the interval of time allowed for the service host to open.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time allowed for the service host to open.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or is larger than <see cref="F:System.Int32.MaxValue" /> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</exception>
      <exception cref="T:System.InvalidOperationException">The host is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Closing" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The host is already in a <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The host is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
      <summary>Sets the endpoint address of the specified endpoint to the specified address.</summary>
      <param name="endpoint">The service endpoint.</param>
      <param name="relativeAddress">The endpoint address.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
      <summary>Closes the service host.</summary>
    </member>
    <member name="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
      <summary>Occurs when an unknown message is received.</summary>
    </member>
    <member name="T:System.ServiceModel.ServiceKnownTypeAttribute">
      <summary>Specifies known types to be used by a service when serializing or deserializing.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class and specifies the name of a method that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the name of a method that returns the known types and the type that contains the method (or methods) that returns the known types.</summary>
      <param name="methodName">The name of a method that returns the known types.</param>
      <param name="declaringType">The type that can use the known types in its object graph.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> class with the specified known type.</summary>
      <param name="type">Specifies a known type that can be used in a parameter or return value defined by the service.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType">
      <summary>Gets the type that contains the methods that return the known types.</summary>
      <returns>The <see cref="T:System.Type" /> that contains the methods that return the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName">
      <summary>Gets the name of a method that returns the collection of known types.</summary>
      <returns>The name of the method that returns the known types.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceKnownTypeAttribute.Type">
      <summary>The known type that can be included in an object graph.</summary>
      <returns>The <see cref="T:System.Type" /> of the known type.</returns>
    </member>
    <member name="T:System.ServiceModel.ServiceSecurityContext">
      <summary>Represents the security context of a remote party. On the client, represents the service identity and, on the service, represents the client identity.</summary>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the collection of policies object.</summary>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />  of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization information.</param>
    </member>
    <member name="M:System.ServiceModel.ServiceSecurityContext.#ctor(System.IdentityModel.Policy.AuthorizationContext,System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class with the specified authorization parameters and collection of policies.</summary>
      <param name="authorizationContext">An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains authorization settings.</param>
      <param name="authorizationPolicies">A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" />  of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the authorization policies.</param>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Anonymous">
      <summary>Returns an instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" /> class that contains an empty collection of claims, identities, and other context data that is usually used to represent an anonymous party.</summary>
      <returns>An empty instance of the <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationContext">
      <summary>Gets the authorization information for an instance of this class. The <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> contains a collection of <see cref="T:System.IdentityModel.Claims.ClaimSet" /> that the application can interrogate and retrieve the information of the party.</summary>
      <returns>An <see cref="T:System.IdentityModel.Policy.AuthorizationContext" /> that contains the authorization settings.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.AuthorizationPolicies">
      <summary>Gets the collection of policies associated with an instance of this class.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> of type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> that contains the policies.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.Current">
      <summary>Gets the current <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</summary>
      <returns>The current <see cref="T:System.ServiceModel.ServiceSecurityContext" />.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.IsAnonymous">
      <summary>Gets a value that indicates whether the current client has provided credentials to the service.</summary>
      <returns>true if the client has provided credentials; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.PrimaryIdentity">
      <summary>Gets the primary identity associated with the current setting.</summary>
      <returns>An <see cref="T:System.Security.Principal.IIdentity" /> associated with the current setting.</returns>
    </member>
    <member name="P:System.ServiceModel.ServiceSecurityContext.WindowsIdentity">
      <summary>Gets the Windows identity of the current setting. </summary>
      <returns>A <see cref="T:System.Security.Principal.WindowsIdentity" /> that represents the Windows domain user.</returns>
    </member>
    <member name="T:System.ServiceModel.SessionMode">
      <summary>Specifies the values available to indicate the support for reliable sessions that a contract requires or supports.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Allowed">
      <summary>Specifies that the contract supports sessions if the incoming binding supports them.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.Required">
      <summary>Specifies that the contract requires a sessionful binding. An exception is thrown if the binding is not configured to support session.</summary>
    </member>
    <member name="F:System.ServiceModel.SessionMode.NotAllowed">
      <summary>Specifies that the contract never supports bindings that initiate sessions.</summary>
    </member>
    <member name="T:System.ServiceModel.SpnEndpointIdentity">
      <summary>Represents a service principal name (SPN) for an identity when the binding uses Kerberos.</summary>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified identity claim.</summary>
      <param name="identity">The identity for this service principal name (SPN).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Spn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.SpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.SpnEndpointIdentity" /> with the specified service principal name (SPN).</summary>
      <param name="spnName">The SPN.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="spnName" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.SpnEndpointIdentity.SpnLookupTime">
      <summary>Specifies the maximum time allowed to look up the service principal name (SPN).</summary>
      <returns>A <see cref="T:System.TimeSpan" />. The default is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is set to less than 0.</exception>
    </member>
    <member name="T:System.ServiceModel.TcpClientCredentialType">
      <summary>Enumerates the valid credential types for TCP clients.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.None">
      <summary>Specifies anonymous authentication.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Windows">
      <summary>Specifies client authentication using Windows.</summary>
    </member>
    <member name="F:System.ServiceModel.TcpClientCredentialType.Certificate">
      <summary>Specifies client authentication using a certificate.</summary>
    </member>
    <member name="T:System.ServiceModel.TcpTransportSecurity">
      <summary>Provides properties that control authentication parameters and protection level for the TCP transport.</summary>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TcpTransportSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ClientCredentialType">
      <summary>Gets or sets the type of client credential used for authentication.</summary>
      <returns>Returns the <see cref="T:System.ServiceModel.TcpClientCredentialType" />.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy">
      <summary>Gets or sets the extended protection policy for the TCP transport.</summary>
      <returns>The extended protection policy for the TCP transport.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.LegacyExtendedProtectionPolicy">
      <summary>Gets or sets the legacy extended protection policy.</summary>
      <returns>The legacy extended protection policy.</returns>
    </member>
    <member name="P:System.ServiceModel.TcpTransportSecurity.ProtectionLevel">
      <summary>Gets or sets the <see cref="T:System.Net.Security.ProtectionLevel" /> for the TCP stream.</summary>
      <returns>Returns the <see cref="T:System.Net.Security.ProtectionLevel" />.</returns>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeExtendedProtectionPolicy">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" /> property has changed from its default value and should be serialized. It is used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.TcpTransportSecurity.ExtendedProtectionPolicy" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.TcpTransportSecurity.ShouldSerializeLegacyExtendedProtectionPolicy">
      <summary>Gets a value that specifies whether the legacy extended protection policy should be serialized.</summary>
      <returns>true if the legacy extended protection policy should be serialized, otherwise false.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowAttribute">
      <summary>Specifies whether a service operation accepts incoming transactions from a client.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.#ctor(System.ServiceModel.TransactionFlowOption)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionFlowAttribute" /> class. </summary>
      <param name="transactions">A <see cref="T:System.ServiceModel.TransactionFlowOption" />.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds extra parameters (settings) to the binding context to support this operation’s behavior. This method cannot be inherited.</summary>
      <param name="description">The operation description for which the attribute adds extra functionality.</param>
      <param name="parameters">The collection of parameter objects on the binding context.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)">
      <summary>Attaches the attribute functionality to the ProxyOperation object for the method that the attribute marks. This method cannot be inherited.</summary>
      <param name="description">The operation to which the attribute attaches functionality.</param>
      <param name="proxy">The <see cref="T:System.ServiceModel.Dispatcher.ClientOperation" /> object that represents the current operation.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)">
      <summary>Attaches the attribute functionality to the <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> object for the method that the attribute marks. This method cannot be inherited.</summary>
      <param name="description">The description for this operation.</param>
      <param name="dispatch">The <see cref="T:System.ServiceModel.Dispatcher.DispatchOperation" /> object for this operation.</param>
    </member>
    <member name="M:System.ServiceModel.TransactionFlowAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)">
      <summary>Verifies that the operation can support this behavior. This method cannot be inherited.</summary>
      <param name="description">The operation to validate.</param>
    </member>
    <member name="P:System.ServiceModel.TransactionFlowAttribute.Transactions">
      <summary>Gets a value that indicates whether the incoming transaction is supported.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionFlowOption" /> that indicates whether the incoming transaction is supported.</returns>
    </member>
    <member name="T:System.ServiceModel.TransactionFlowOption">
      <summary>An enumeration that is used with the <see cref="T:System.ServiceModel.TransactionFlowAttribute" /> to specify the transaction flow policy for a service operation.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.NotAllowed">
      <summary>A transaction should not be flowed. This is the default value.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Allowed">
      <summary>Transaction may be flowed.</summary>
    </member>
    <member name="F:System.ServiceModel.TransactionFlowOption.Mandatory">
      <summary>Transaction must be flowed.</summary>
    </member>
    <member name="T:System.ServiceModel.TransactionProtocol">
      <summary>Specifies the transaction protocol used in flowing transactions.</summary>
    </member>
    <member name="M:System.ServiceModel.TransactionProtocol.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.TransactionProtocol" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.Default">
      <summary>Gets the default value for the transaction protocol.</summary>
      <returns>A valid <see cref="T:System.ServiceModel.TransactionProtocol" /> value that specifies the default transaction protocol to be used in flowing a transaction.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.OleTransactions">
      <summary>Gets the OleTransactions transaction protocol value.</summary>
      <returns>An <see cref="P:System.ServiceModel.TransactionProtocol.OleTransactions" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransaction11">
      <summary>Gets the WSAtomicTransaction11 transaction protocol value.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.TransactionProtocol.WSAtomicTransactionOctober2004">
      <summary>Gets the WSAtomicTransactionOctober2004 transaction protocol value.</summary>
      <returns>A <see cref="T:System.ServiceModel.TransactionProtocol" /> value.</returns>
    </member>
    <member name="T:System.ServiceModel.TransferMode">
      <summary>Indicates whether a channel uses streamed or buffered modes for the transfer of request and response messages.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Buffered">
      <summary>The request and response messages are both buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.Streamed">
      <summary>The request and response messages are both streamed.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedRequest">
      <summary>The request message is streamed and the response message is buffered.</summary>
    </member>
    <member name="F:System.ServiceModel.TransferMode.StreamedResponse">
      <summary>The request message is buffered and the response message is streamed.</summary>
    </member>
    <member name="T:System.ServiceModel.UnknownMessageReceivedEventArgs">
      <summary>Contains the message received by a channel and cannot be associated with any callback operation or pending request.</summary>
    </member>
    <member name="P:System.ServiceModel.UnknownMessageReceivedEventArgs.Message">
      <summary>Gets the unknown message that caused the event.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.Message" /> that caused the event.</returns>
    </member>
    <member name="T:System.ServiceModel.UpnEndpointIdentity">
      <summary>Represents a user principal name (UPN) for an identity which is used when the binding utilizes the SSPINegotiate authentication mode.</summary>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.IdentityModel.Claims.Claim)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class from a claim.</summary>
      <param name="identity">The <see cref="T:System.IdentityModel.Claims.Claim" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="identity" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="identity" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="M:System.ServiceModel.UpnEndpointIdentity.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UpnEndpointIdentity" /> class.</summary>
      <param name="upnName">The UPN name.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="upnName" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The claim type of <paramref name="upnName" /> is not <see cref="P:System.IdentityModel.Claims.ClaimTypes.Upn" />.</exception>
    </member>
    <member name="T:System.ServiceModel.UriSchemeKeyedCollection">
      <summary>Provides a thread-safe collection that contains URIs that are keyed by their transport scheme name.</summary>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.#ctor(System.Uri[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.UriSchemeKeyedCollection" /> class. </summary>
      <param name="addresses">A variable length <see cref="T:System.Array" /> of <see cref="T:System.Uri" /> objects used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="addresses" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.GetKeyForItem(System.Uri)">
      <summary>Gets the key for a specified URI from the collection.</summary>
      <returns>The key for the specified URI from the collection.</returns>
      <param name="item">The <see cref="T:System.Uri" /> whose key is being retrieved.</param>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.InsertItem(System.Int32,System.Uri)">
      <summary>Inserts a URI into the collection at a specified location.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the item in the collection.</param>
      <param name="item">The <see cref="T:System.Uri" /> to be inserted into the collection.</param>
      <exception cref="T:System.InvalidOperationException">The<paramref name=" item" /> URI is not an absolute URI.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> URI already contains a scheme name already in the collection.</exception>
    </member>
    <member name="M:System.ServiceModel.UriSchemeKeyedCollection.SetItem(System.Int32,System.Uri)">
      <summary>Replaces a URI at a specified location of the collection with a new URI.</summary>
      <param name="index">The zero-based index that specifies the insertion location for the URI in the collection.</param>
      <param name="item">The <see cref="T:System.Uri" /> to be placed into the collection.</param>
      <exception cref="T:System.InvalidOperationException">The<paramref name=" item" /> URI is not an absolute URI.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="item" /> URI already contains a scheme name already in the collection.</exception>
    </member>
    <member name="T:System.ServiceModel.WS2007FederationHttpBinding">
      <summary>A secure and interoperable binding that derives from <see cref="T:System.ServiceModel.WS2007HttpBinding" /> and supports federated security.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a specified type of security used by the binding. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007FederationHttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007FederationHttpBinding.CreateMessageSecurity">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> using the settings provided by this instance.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> using the settings provided by this instance.</returns>
    </member>
    <member name="T:System.ServiceModel.WS2007HttpBinding">
      <summary>Represents an interoperable binding that derives from <see cref="T:System.ServiceModel.WSHttpBinding" /> and provides support for the updated versions of the <see cref="P:System.ServiceModel.WSHttpBinding.Security" />, <see cref="T:System.ServiceModel.ReliableSession" />, and <see cref="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow" /> binding elements.</summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WS2007HttpBinding" /> class with a binding specified by its configuration name. </summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WS2007HttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WS2007HttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpBinding">
      <summary>A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress">
      <summary>Gets or sets the base address of the client.</summary>
      <returns>The <see cref="T:System.Uri" /> that is the base address of the client. The default value is null.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value must always be SOAP 1.2.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be received on a channel configured with this binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
      <returns>The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>The transport scheme: "http".</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.Security">
      <summary>Gets an object that specifies the security settings used with this binding. </summary>
      <returns>The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding. The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The value returned is always is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow">
      <summary>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</summary>
      <returns>true if the flowing of transactions is supported; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurity">
      <summary>Specifies the security settings for the <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Message">
      <summary>Gets the message-level security properties for the <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.MessageSecurityOverHttp" /> value. The default values include: <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, and <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> is true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSDualHttpSecurity.Mode">
      <summary>Gets or sets the security mode for the parent <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> enumeration. The default is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" />.</exception>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMessage">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpSecurity.Message" /> property has changed from its default value and should be serialized. This is used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpSecurity.Message" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSDualHttpSecurity.ShouldSerializeMode">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpSecurity.Mode" /> property has changed from its default value and should be serialized. This is used by WCF for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSDualHttpSecurity.Mode" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSDualHttpSecurityMode">
      <summary>Specifies the different security modes for <see cref="T:System.ServiceModel.WsDualHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.None">
      <summary>No security is used.</summary>
    </member>
    <member name="F:System.ServiceModel.WSDualHttpSecurityMode.Message">
      <summary>SOAP message-level security is used and the settings in the <see cref="P:System.ServiceModel.WsDualHttpSecurity.Message" /> property become effective.</summary>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpBinding">
      <summary>A secure and interoperable binding that supports federated security.</summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a specified type of security used by the binding.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.ServiceModel.WSFederationHttpSecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled.</summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configurationName" /> was not found.</exception>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateBindingElements">
      <summary>Creates a collection with the binding elements for the binding.</summary>
      <returns>The <see cref="T:System.Collections.Generic.ICollection`1" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that makes up the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.CreateMessageSecurity">
      <summary>Creates a <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that has enabled a reliable session.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> that has enabled a reliable session.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeAt">
      <summary>Gets or sets the URI at which the privacy notice is located.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the privacy notice is located.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.PrivacyNoticeVersion">
      <summary>Gets or sets the privacy notice version number for the binding.</summary>
      <returns>The version number of the privacy notice.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpBinding.Security">
      <summary>Gets or sets the type of security used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.WSFederationHttpSecurity" /> that specifies the mode of security used with this binding. The default value of the <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" /> for this binding is <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSFederationHttpBinding.Security" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSFederationHttpBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurity">
      <summary>Specifies the security settings for the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSFederationHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Message">
      <summary>Indicates the message security settings for the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
      <returns>A <see cref="T:System.ServiceModel.FederatedMessageSecurityOverHttp" /> value.</returns>
    </member>
    <member name="P:System.ServiceModel.WSFederationHttpSecurity.Mode">
      <summary>Gets or sets the type of security to be applied.</summary>
      <returns>A <see cref="T:System.ServiceModel.WSFederationHttpSecurityMode" />. The default is <see cref="F:System.ServiceModel.WSFederationHttpSecurityMode.Message" />.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMessage">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Message" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Message" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSFederationHttpSecurity.ShouldSerializeMode">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Mode" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSFederationHttpSecurity.Mode" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSFederationHttpSecurityMode">
      <summary>Specifies the different security modes for <see cref="T:System.ServiceModel.WsFederationHttpBinding" />.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.None">
      <summary>The SOAP message is not secure during transfer. No Security Token Service is contacted. This mode is equivalent to using the wsHttpBinding binding with SecurityMode.None.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.Message">
      <summary>Integrity, confidentiality, server authentication and client authentication are provided using SOAP message security. By default, the body is encrypted and signed. The service must be configured with a certificate. Client authentication is based on the token issued to the client by a security token service.</summary>
    </member>
    <member name="F:System.ServiceModel.WSFederationHttpSecurityMode.TransportWithMessageCredential">
      <summary>Integrity, confidentiality and server authentication are provided by HTTPS. The service must be configured with a certificate. Client authentication is provided by means of SOAP message security and is based on the token issued to the client by a security token service. </summary>
    </member>
    <member name="T:System.ServiceModel.WSHttpBinding">
      <summary>Represents an interoperable binding that supports distributed transactions and secure, reliable sessions.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a specified type of security used by the binding and a value that indicates whether a reliable session is enabled. </summary>
      <param name="securityMode">The value of <see cref="T:System.ServiceModel.SecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</param>
      <param name="reliableSessionEnabled">true if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBinding" /> class with a binding specified by its configuration name.</summary>
      <param name="configName">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</param>
      <exception cref="T:System.Configuration.ConfigurationErrorsException">The binding element with the name <paramref name="configName" /> was not found.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.AllowCookies">
      <summary>Gets or sets a value that indicates whether the client accepts cookies and propagates them on future requests.</summary>
      <returns>true if cookies are allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the ordered stack of binding elements described by the <see cref="T:System.ServiceModel.WSHttpBinding" /> binding.</returns>
      <exception cref="T:System.InvalidOperationException">The transport security mode set cannot provide the reliable session that has been enabled.</exception>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.CreateMessageSecurity">
      <summary>Returns the security binding element from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.GetTransport">
      <summary>Returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBinding.Security">
      <summary>Gets the security settings used with this binding.  </summary>
      <returns>The <see cref="T:System.ServiceModel.WSHttpSecurity" /> that is used with this binding. The default value <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> property is <see cref="P:System.ServiceModel.WSHttpSecurity.Message" />. </returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBinding.ShouldSerializeSecurity">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpBinding.Security" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpBindingBase">
      <summary>Provides the base class with members common to the <see cref="T:System.ServiceModel.WSHttpBinding" /> and the <see cref="T:System.ServiceModel.WSFederationHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpBindingBase" /> class with a value that indicates whether a reliable session is enabled.</summary>
      <param name="reliableSessionEnabled">true, if a reliable session is enabled; otherwise, false.</param>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.BypassProxyOnLocal">
      <summary>Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</summary>
      <returns>true to bypass the proxy server for local addresses; otherwise, false. The default value is false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateBindingElements">
      <summary>Returns an ordered collection of binding elements contained in the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the <see cref="T:System.ServiceModel.Channels.BindingElement" /> objects for the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.CreateMessageSecurity">
      <summary>When implemented in a derived class, returns the <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.EnvelopeVersion">
      <summary>Gets the version of SOAP that is used for messages that are processed by this binding.</summary>
      <returns>The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding. The value is always SOAP 1.2.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.GetTransport">
      <summary>When implemented in a derived class, returns the transport binding element from the current binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.TransportBindingElement" /> from the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.HostNameComparisonMode">
      <summary>Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</summary>
      <returns>The <see cref="T:System.ServiceModel.HostnameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI. The default value is <see cref="F:System.ServiceModel.HostnameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxBufferPoolSize">
      <summary>Gets or sets the maximum amount of memory allocated for the buffer manager that manages the buffers required by endpoints using this binding.</summary>
      <returns>The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding. The default value is 524,288 bytes.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MaxReceivedMessageSize">
      <summary>Gets or sets the maximum size for a message that can be processed by the binding.</summary>
      <returns>The maximum size, in bytes, for a message that is processed by the binding. The default value is 65,536 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">A message exceeded the maximum size allocated.</exception>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.MessageEncoding">
      <summary>Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</summary>
      <returns>The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates whether MTOM or Text is used to encode SOAP messages. The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ProxyAddress">
      <summary>Gets or sets the URI address of the HTTP proxy.</summary>
      <returns>A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy. The default value is null.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas">
      <summary>Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.ReliableSession">
      <summary>Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</summary>
      <returns>The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.Scheme">
      <summary>Gets the URI transport scheme for the channels and listeners that are configured with this binding.</summary>
      <returns>"http" if the security mode of the transport binding element is set to <see cref="F:System.ServiceModel.SecurityMode.None" /> or <see cref="F:System.ServiceModel.SecurityMode.Message" />; "https" if the security mode is set otherwise.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReaderQuotas">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReaderQuotas" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeReliableSession">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpBindingBase.ReliableSession" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpBindingBase.ShouldSerializeTextEncoding">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpBindingBase.TextEncoding" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</summary>
      <returns>true if requests are handled synchronously; false if handled asynchronously. The default is false, to handle requests asynchronously.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TextEncoding">
      <summary>Gets or sets the character encoding that is used for the message text.</summary>
      <returns>The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used. The default is <see cref="T:System.Text.UTF8Encoding" />.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.TransactionFlow">
      <summary>Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</summary>
      <returns>true if the flowing of transactions is supported; otherwise, false. The default value is false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpBindingBase.UseDefaultWebProxy">
      <summary>Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</summary>
      <returns>true if the auto-configured HTTP proxy of the system should be used, if available; otherwise, false. The default value is true.  </returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpContextBinding">
      <summary>Provides a context-enabled binding for the <see cref="T:System.ServiceModel.WSHttpContextBinding" /></summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpContextBinding" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpContextBinding" /> class using the specified <see cref="T:System.ServiceModel.SecurityMode" />. </summary>
      <param name="securityMode">The security mode.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.ServiceModel.SecurityMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpContextBinding" /> class with the specified <see cref="T:System.ServiceModel.SecurityMode" /> and reliable session setting. </summary>
      <param name="securityMode">The security mode.</param>
      <param name="reliableSessionEnabled">true to enable reliable sessions; otherwise false.</param>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpContextBinding" /> class with the specified binding configuration.</summary>
      <param name="configName">The name of the binding configuration.</param>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ClientCallbackAddress">
      <summary>Gets or sets the client callback address.</summary>
      <returns>The client callback address.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ContextManagementEnabled">
      <summary>Gets a value that specifies whether context management is enabled.</summary>
      <returns>true if context management is enabled; otherwise, false. </returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpContextBinding.ContextProtectionLevel">
      <summary>Gets or sets the context protection level for this binding.</summary>
      <returns>The protection level for the binding.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpContextBinding.CreateBindingElements">
      <summary>Creates an ordered collection of binding elements that are contained in the current binding.</summary>
      <returns>The ordered stack of binding elements described by the <see cref="T:System.ServiceModel.WSHttpContextBinding" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSHttpSecurity">
      <summary>Represents the security settings for the <see cref="T:System.ServiceModel.WSHttpBinding" />.</summary>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.WSHttpSecurity" /> class.</summary>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Message">
      <summary>Gets the message-level security settings for this binding.</summary>
      <returns>A <see cref="T:System.ServiceModel.NonDualMessageSecurityOverHttp" /> instance. The default value includes: <see cref="P:System.ServiceModel.NonDualMessageSecurityOverHttp.EstablishSecurityContext" /> with default set to true, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.ClientCredentialType" /> is <see cref="F:System.ServiceModel.MessageCredentialType.Windows" />, <see cref="P:System.ServiceModel.MessageSecurityOverHttp.AlgorithmSuite" /> is <see cref="P:System.ServiceModel.Security.SecurityAlgorithmSuite.Basic256" />, and <see cref="P:System.ServiceModel.MessageSecurityOverHttp.NegotiateServiceCredential" /> is true.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Mode">
      <summary>Specifies the message <see cref="T:System.ServiceModel.SecurityMode" /> for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.SecurityMode" /> for this binding. The default is <see cref="F:System.ServiceModel.SecurityMode.Message" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value of the <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> set is not defined.</exception>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMessage">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpSecurity.Message" /> property has changed from its default value and should be serialized. This is used by  for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpSecurity.Message" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeMode">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> property has changed from its default value and should be serialized. This is used by  for XAML integration.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpSecurity.Mode" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.WSHttpSecurity.ShouldSerializeTransport">
      <summary>Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSHttpSecurity.Transport" /> property has changed from its default value and should be serialized.</summary>
      <returns>true if the <see cref="P:System.ServiceModel.WSHttpSecurity.Transport" /> property value should be serialized; otherwise, false.</returns>
    </member>
    <member name="P:System.ServiceModel.WSHttpSecurity.Transport">
      <summary>Gets an object that contains the transport-level security settings for this binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.HttpTransportSecurity" /> for this binding. The default value includes a <see cref="P:System.ServiceModel.HttpTransportSecurity.ClientCredentialType" /> of <see cref="F:System.ServiceModel.HttpClientCredentialType.None" /> and a <see cref="P:System.ServiceModel.HttpTransportSecurity.ProxyCredentialType" /> of <see cref="F:System.ServiceModel.HttpProxyCredentialType.None" />.</returns>
    </member>
    <member name="T:System.ServiceModel.WSMessageEncoding">
      <summary>Specifies whether Message Transmission Optimization Mechanism (MTOM) or text is used to encode SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Text">
      <summary>Text is used to encode the SOAP messages.</summary>
    </member>
    <member name="F:System.ServiceModel.WSMessageEncoding.Mtom">
      <summary>MTOM is used to encode the SOAP messages.</summary>
    </member>
    <member name="T:System.ServiceModel.X509CertificateEndpointIdentity">
      <summary>Represents a certificate identity for the service endpoint. Clients that attempt to communicate with that service endpoint should authenticate the service based on the certificate provided in the endpoint identity.</summary>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)">
      <summary>Initializes a new instance of a <see cref="T:System.ServiceModel.X509CertificateEndpointIdentity" /> object using an existing certificate.</summary>
      <param name="certificate">The certificate to clone.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="certificate" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.X509CertificateEndpointIdentity.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)">
      <summary>Initializes a new instance of this class using the primary (leaf) certificate and certificates that are part of its trust chain.</summary>
      <param name="primaryCertificate">The primary certificate representing the service's identity.</param>
      <param name="supportingCertificates">The certificates that are part of the trust chain of the primary certificate.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="primaryCertificate" /> is null.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="supportingCertificates" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.X509CertificateEndpointIdentity.Certificates">
      <summary>Gets the collection of certificates for this identity.</summary>
      <returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />. </returns>
    </member>
    <member name="T:System.ServiceModel.XmlSerializerFormatAttribute">
      <summary>Instructs the  infrastructure to use the <see cref="T:System.Xml.Serialization.XmlSerializer" /> instead of the <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />.</summary>
    </member>
    <member name="M:System.ServiceModel.XmlSerializerFormatAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XmlSerializerFormatAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Style">
      <summary>Gets or sets the SOAP style of the <see cref="T:System.Xml.Serialization.XmlSerializer" />.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatStyle" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatStyle.Document" />.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults">
      <summary>Gets or sets a value that indicates that the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults. </summary>
      <returns>true if the <see cref="T:System.Xml.Serialization.XmlSerializer" /> should be used for reading and writing faults; false if the <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> should be used. The default is false.</returns>
    </member>
    <member name="P:System.ServiceModel.XmlSerializerFormatAttribute.Use">
      <summary>Gets or sets a value that specifies the format to use.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.OperationFormatUse" /> values. The default is <see cref="F:System.ServiceModel.OperationFormatUse.Literal" />.</returns>
    </member>
    <member name="T:System.ServiceModel.XPathMessageQuery">
      <summary>A message query that evaluates XPath expressions to retrieve data from a message.</summary>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XPathMessageQuery" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XPathMessageQuery" /> class with the specified XPath expression.</summary>
      <param name="expression">The XPath expression.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XPathMessageQuery" /> class with the specified XPath expression and <see cref="T:System.Xml.XmlNamespaceManager" />.</summary>
      <param name="expression">The XPath expression.</param>
      <param name="namespaces">The XML namespace manager.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.XPathMessageQuery" /> class with the specified XPath expression and <see cref="T:System.Xml.Xsl.XsltContext" />.</summary>
      <param name="expression">The XPath expression.</param>
      <param name="context">The XSLT context.</param>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.CreateMessageQueryCollection">
      <summary>Creates a message query collection that enables optimizations when executing multiple queries against a message.</summary>
      <returns>A message query collection.</returns>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
      <summary>Evaluates the XPath query against the specified <see cref="T:System.ServiceModel.Channels.Message" />.</summary>
      <returns>The data retrieved from the message.</returns>
      <param name="message">The message to query.</param>
      <typeparam name="TResult">The type of data to retrieve.</typeparam>
    </member>
    <member name="M:System.ServiceModel.XPathMessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <summary>Evaluates the XPath query against the specified <see cref="T:System.ServiceModel.Channels.MessageBuffer" />.</summary>
      <returns>The data retrieved from the message buffer.</returns>
      <param name="buffer">The message buffer to query.</param>
      <typeparam name="TResult">The type of data to retrieve.</typeparam>
    </member>
    <member name="P:System.ServiceModel.XPathMessageQuery.Expression">
      <summary>Gets or sets the XPath expression for the <see cref="T:System.ServiceModel.XPathMessageQuery" /> instance.</summary>
      <returns>The XPath expression.</returns>
    </member>
    <member name="P:System.ServiceModel.XPathMessageQuery.Namespaces">
      <summary>Gets the <see cref="T:System.Xml.XmlNamespaceManager" /> associated with this <see cref="T:System.ServiceModel.XPathMessageQuery" /> instance.</summary>
      <returns>The XML namespace manager.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute">
      <summary>Applied to a  service to indicate whether that service can be run in ASP.NET compatibility code.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.RequirementsMode">
      <summary>Gets or sets the level of ASP.NET compatibility required by the service.</summary>
      <returns>The <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" /> that indicates the services required degree of ASP.NET compatibility. The default value is <see cref="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed" />, so that users must explicitly design a  service to be running in the compatibility mode.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value is not a valid one for the <see cref="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode" />enum.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Adds custom data that the binding elements can access to support the implementation of the contract.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> used to host the service.</param>
      <param name="endpoints">The <see cref="T:System.Collections.ObjectModel.Collection`1" /> of type <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> that contains the endpoints for the service.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that contains the parameters that the binding elements for the service can access.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Checks that the type of hosting is consistent with the ASP.NET compatibility requirements.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for hosting the service.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="description" /> is null.</exception>
      <exception cref="T:System.InvalidOperationException">The service hosting is not compatible with the ASP.NET compatibility requirements.</exception>
    </member>
    <member name="M:System.ServiceModel.Activation.AspNetCompatibilityRequirementsAttribute.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
      <summary>Validates the service behavior.</summary>
      <param name="description">The <see cref="T:System.ServiceModel.Description.ServiceDescription" /> of the service. </param>
      <param name="serviceHostBase">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for hosting the service.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode">
      <summary>Specifies whether a  service runs, or can run, in a mode that is compatible with ASP.NET.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.NotAllowed">
      <summary> services must run in an application domain with ASP.NET compatibility mode set to false. </summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Allowed">
      <summary> services can run in an application domain with ASP.NET compatibility mode set to true or false.</summary>
    </member>
    <member name="F:System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required">
      <summary> services must run in an application domain with ASP.NET compatibility mode set to true.</summary>
    </member>
    <member name="T:System.ServiceModel.Activation.ServiceHostFactoryBase">
      <summary>Provides the base implementation for the factory that allows application code to participate in the creation of service hosts in managed hosting environments where the host instance is created dynamically in response to incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.ServiceHostFactoryBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
      <summary>When overridden in a derived class, creates a <see cref="T:System.ServiceModel.ServiceHostBase" /> with a specific base address using custom initiation data. </summary>
      <returns>The <see cref="T:System.ServiceModel.ServiceHostBase" /> object with the specified base addresses and initialized with the custom initiation data.</returns>
      <param name="constructorString">The initialization data that is passed to the <see cref="T:System.ServiceModel.ServiceHostBase" /> instance being constructed by the factory. </param>
      <param name="baseAddresses">An <see cref="T:System.Array" /> of type <see cref="T:System.Uri" /> that contains the base addresses of the host.</param>
    </member>
    <member name="T:System.ServiceModel.Activation.VirtualPathExtension">
      <summary>Contains the service's virtual path when the service is hosted in Internet Information Services (IIS) or Windows Process Activation Service (WAS).</summary>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.ApplicationVirtualPath">
      <summary>Gets the virtual path of the IIS or WAS application that hosts the  service.</summary>
      <returns>The virtual path of the IIS or WAS application that hosts the service.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Attach(System.ServiceModel.ServiceHostBase)">
      <summary>This method is provided to support the  infrastructure.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</param>
    </member>
    <member name="M:System.ServiceModel.Activation.VirtualPathExtension.Detach(System.ServiceModel.ServiceHostBase)">
      <summary>This method is provided to support the  infrastructure.</summary>
      <param name="owner">The <see cref="T:System.ServiceModel.ServiceHostBase" /> using the virtual path.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.SiteName">
      <summary>Gets the site name of the IIS or WAS application that hosts the  service.</summary>
      <returns>The site name of the IIS or WAS application that hosts the service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.VirtualPathExtension.VirtualPath">
      <summary>Gets the virtual path used by a service.</summary>
      <returns>The virtual path used by a service.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.DiagnosticSection">
      <summary>Represents a configuration element for specifying Windows Communication Foundation (WCF) listener's diagnostics functionalities. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.DiagnosticSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.DiagnosticSection.PerformanceCountersEnabled">
      <summary>Gets or sets a Boolean value that indicates whether performance counters are enabled for diagnostic purpose.</summary>
      <returns>true if performance counters are enabled; otherwise, false. </returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetPipeSection">
      <summary>Contains configuration elements for the NetPipeActivator sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetPipeSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.AllowAccounts">
      <summary>Gets the user accounts for processes that host  services and are granted connection access to the sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> that contains user accounts for processes that host  services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingAccepts">
      <summary>Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.</summary>
      <returns>The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections for this sharing service.</summary>
      <returns>The maximum number of pending connections for this sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetPipeSection.ReceiveTimeout">
      <summary>Gets or sets the timeout for the NetPipeActivator sharing service. </summary>
      <returns>The default is 00:00:60.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.NetTcpSection">
      <summary>Contains configuration elements for the NetTcpPortSharing sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.NetTcpSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.AllowAccounts">
      <summary>Gets the user accounts for processes that host  services and are granted connection access to the sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> that contains user accounts for processes that host  services and are granted connection access to the sharing service. The default values returned are LocalSystem, Admin, NS, LS, and IIS_USRS.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ListenBacklog">
      <summary>Gets or sets the maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to  services.</summary>
      <returns>The maximum outstanding connections that are accepted from the shared connection, but are not yet dispatched to . The default is 10.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingAccepts">
      <summary>Gets or sets the maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service.</summary>
      <returns>The maximum outstanding concurrent accepting threads on the listening endpoint for the sharing service. The default is 2.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.MaxPendingConnections">
      <summary>Gets or sets the maximum number of pending connections for this sharing service.</summary>
      <returns>The maximum number of pending connections for this sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.ReceiveTimeout">
      <summary>Gets or sets the timeout for the NetTcpPortSharing sharing service.</summary>
      <returns>The default is 00:00:60.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.NetTcpSection.TeredoEnabled">
      <summary>Gets or sets a Boolean value that indicates whether the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of  services.</summary>
      <returns>true if the port sharing service uses Microsoft Teredo service to listen on TCP ports on behalf of  services; otherwise, false. The default is false.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement">
      <summary>Represents a configuration element that contains user accounts for processes that host WCF services, and are granted connection access to the sharing service. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.#ctor(System.Security.Principal.SecurityIdentifier)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> class wit the specified security identifier.</summary>
      <param name="sid">A security identifier.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement.SecurityIdentifier">
      <summary>Gets or sets the security identifier that this element associates with.</summary>
      <returns>The security identifier that this element associates with.</returns>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection">
      <summary>Contains a collection of <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElement" /> instances. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.SecurityIdentifierElementCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup">
      <summary>Contains the configuration section for the SMSvcHost.exe tool. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.Diagnostics">
      <summary>Gets the diagnostics configuration section.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.DiagnosticSection" /> instance that contains the diagnostics configuration section.</returns>
    </member>
    <member name="M:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.GetSectionGroup(System.Configuration.Configuration)">
      <summary>Gets the System.ServiceModel.Activation configuration section group from the specified configuration file. </summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup" /> that represents the System.ServiceModel.Activation settings in the configuration file.</returns>
      <param name="config">A <see cref="T:System.Configuration.Configuration" /> that represents a configuration file.</param>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetPipe">
      <summary>Gets the configuration settings for the NetPipeActivator sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.NetPipeSection" /> that contains configuration settings for the NetPipeActivator sharing service.</returns>
    </member>
    <member name="P:System.ServiceModel.Activation.Configuration.ServiceModelActivationSectionGroup.NetTcp">
      <summary>Gets the configuration settings for the NetTcpPortSharing sharing service.</summary>
      <returns>A <see cref="T:System.ServiceModel.Activation.Configuration.NetTcpSection" /> that contains configuration settings for the NetTcpPortSharing sharing service.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeader">
      <summary>Represents a header that encapsulates an address information item used to identify or interact with an endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified value.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the information item specified by the <paramref name="value" /> parameter.</returns>
      <param name="value">The information item for the address header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class using a specified formatter to serialize the information item from a specified object.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains the information item specified by the value parameter.</returns>
      <param name="value">The information item for the address header.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to serialize the specified object in the <paramref name="value" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="formatter" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified value, name and namespace.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="name" /> is null or <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.CreateAddressHeader(System.String,System.String,System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Creates a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeader" /> class with a specified name and namespace that uses a specified formatter to serialize the information item from a specified object.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> with the specified <paramref name="name" /> and <paramref name="ns" /> that contains the information item specified by <paramref name="value" />.</returns>
      <param name="name">The name of the address header.</param>
      <param name="ns">The namespace of the address header.</param>
      <param name="value">The information item for the address header.</param>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to serialize the specified object in the <paramref name="value" /> parameter.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="serializer" /> is null or <paramref name="name" />.Length == 0.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.Equals(System.Object)">
      <summary>Determines whether the information item in a specified object is equal to the object contained in the current address header.</summary>
      <returns>true if the information item in a specified <paramref name="obj" /> is equivalent to the information item contained in the current address header; otherwise, false. In particular, returns false if <paramref name="obj" /> is null.</returns>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the object contained in the current address header.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetAddressHeaderReader">
      <summary>Returns an XML reader that can serialize the current address header object.</summary>
      <returns>An instance of <see cref="T:System.Xml.XmlDictionaryReader" /> that can serialize the current address header object.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetHashCode">
      <summary>Provides a unique hash code for an address header. </summary>
      <returns>A unique hash code for the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1">
      <summary>Deserializes the information item from the current address header to an object of a specified type.</summary>
      <returns>An instance of a class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
      <typeparam name="T">A class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.GetValue``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>Deserializes the information item from the current address header to an object of a specified type that uses a specified formatter to serialize this information.</summary>
      <returns>An instance of a class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</returns>
      <param name="serializer">The <see cref="T:System.Runtime.Serialization.XmlObjectSerializer" /> used to deserialize the information item from the current address header object.</param>
      <typeparam name="T">A class of type <paramref name="T" /> with its fields and properties set to the values supplied by the current address header object.</typeparam>
      <exception cref="T:System.ArgumentNullException">The <paramref name="serializer" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Name">
      <summary>When implemented, gets the name of the address header.</summary>
      <returns>The name of the address header.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressHeader.Namespace">
      <summary>When implemented, gets the namespace of the address header.</summary>
      <returns>The namespace of the address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents are written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.OnWriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>When overridden in a derived class, is invoked when the address header contents begin to be written to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.ToMessageHeader">
      <summary>Wraps the address header as a message header.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageHeader" /> that wraps the current address header.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlDictionaryWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeader(System.Xml.XmlWriter)">
      <summary>Writes the address header to a stream or file using a specified <see cref="T:System.Xml.XmlWriter" />.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteAddressHeaderContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header contents to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeader.WriteStartAddressHeader(System.Xml.XmlDictionaryWriter)">
      <summary>Starts to write the address header contents to a stream or file.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write the address header to a stream or file.</param>
      <exception cref="T:System.ArgumentNullException">The <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressHeaderCollection">
      <summary>Represents a thread-safe, read-only collection of address headers.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.AddressHeader})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.AddressHeaderCollection" /> class from an enumerable set of address headers.</summary>
      <param name="addressHeaders">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> set of <see cref="T:System.ServiceModel.Channels.AddressHeader" /> objects used to initialize the collection.</param>
      <exception cref="T:System.ArgumentException">One of the address headers in the <paramref name="addressHeaders" /> parameter is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.AddHeadersTo(System.ServiceModel.Channels.Message)">
      <summary>Adds the headers in the collection to the headers of a specified message.</summary>
      <param name="message">The <see cref="T:System.ServiceModel.Channels.Message" /> to which the headers are added.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="message" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindAll(System.String,System.String)">
      <summary>Finds all the address headers in the collection with the specified name and namespace.</summary>
      <returns>The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.AddressHeader" /> that contains all the headers in the collection with the specified name and namespace.</returns>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressHeaderCollection.FindHeader(System.String,System.String)">
      <summary>Finds the first address header in the collection with a specified name and namespace.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressHeader" /> in the collection with the specified name and namespace.</returns>
      <param name="name">The name of the address header to be found.</param>
      <param name="ns">The namespace of the address header to be found.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="name" /> or <paramref name="ns" /> is null.</exception>
      <exception cref="T:System.ArgumentException">There is more than one header that has the specified <paramref name="name" /> and <paramref name="ns" />.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.AddressingVersion">
      <summary>The WS-Addressing version associated with a SOAP message or understood by an endpoint.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.None">
      <summary>Gets the addressing version that indicates that no version of WS-Addressing is being used.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that does not use a version of WS-Addressing.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AddressingVersion.ToString">
      <summary>A string that represents the current addressing version.</summary>
      <returns>The current addressing version.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressing10">
      <summary>Gets an identifier for the address version associated with WS-Addressing 1.0.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing 1.0.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AddressingVersion.WSAddressingAugust2004">
      <summary>Gets the version of WS-Addressing that is associated with WS-Addressing August 2004.</summary>
      <returns>A singleton instance that identifies the <see cref="T:System.ServiceModel.Channels.AddressingVersion" /> that is associated with WS-Addressing August 2004.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement">
      <summary>Represents a custom binding element that supports channel security using asymmetric encryption. This binding element signs the message using the sender's authentication token and encrypts the message using the recipient's token.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor">
      <summary>Creates an instance of this class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> with the specified recipient token parameters.</summary>
      <param name="recipientTokenParameters">Defines the token for the recipient (for example, the server's X.509 certificate).</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.#ctor(System.ServiceModel.Security.Tokens.SecurityTokenParameters,System.ServiceModel.Security.Tokens.SecurityTokenParameters)">
      <summary>Initializes a new instance of <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> with the specified recipient and initiator token parameters.</summary>
      <param name="recipientTokenParameters">Defines the token for the recipient (for example the server's X.509 certificate).</param>
      <param name="initiatorTokenParameters">Defines the token for the initiator (for example, the client's X.509 certificate).</param>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.AllowSerializedSigningTokenOnReply">
      <summary>Gets or sets a value that indicates whether serializing a signing token on a reply message is allowed. </summary>
      <returns>true if serializing a signing token on a reply message is allowed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.Clone">
      <summary>Creates a new instance of this class initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object with property values equal to those of the current instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Gets a specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" />.</summary>
      <returns>The specified object from the <see cref="T:System.ServiceModel.Channels.BindingContext" /> or null if the object is not found.</returns>
      <param name="context">A <see cref="T:System.ServiceModel.Channels.BindingContext" />.</param>
      <typeparam name="T">The type of the object to get.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.InitiatorTokenParameters">
      <summary>Specifies the token definition for the initiator.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> that holds the token definition.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.MessageProtectionOrder">
      <summary>Gets or sets the order of message encryption and signing for this binding.</summary>
      <returns>One of the <see cref="T:System.ServiceModel.Security.MessageProtectionOrder" /> values that specify how the message is protected. The default is <see cref="F:System.ServiceModel.Security.MessageProtectionOrder.SignBeforeEncrypt" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is not a valid member of the enumeration.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RecipientTokenParameters">
      <summary>Specifies the token definition for the recipient.</summary>
      <returns>A <see cref="T:System.ServiceModel.Security.Tokens.SecurityTokenParameters" /> that holds the token definition.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.RequireSignatureConfirmation">
      <summary>Gets or sets a value that indicates whether message signatures must be confirmed. </summary>
      <returns>true if message signatures must be confirmed; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.SetKeyDerivation(System.Boolean)">
      <summary>Sets a value that indicates whether derived keys are required. </summary>
      <param name="requireDerivedKeys">true if derived keys are required; otherwise, false. </param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Exports a custom policy assertion about bindings, which is added to the Web Services Description Language (WSDL) information.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that you can use to modify the exporting process.</param>
      <param name="context">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that you can use to insert your custom policy assertion.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.AsymmetricSecurityBindingElement.ToString">
      <summary>Returns a string that represents this <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> instance.</summary>
      <returns>The current <see cref="T:System.ServiceModel.Channels.AsymmetricSecurityBindingElement" /> instance.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement">
      <summary>The binding element that specifies the .NET Binary Format for XML used to encode messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the channel.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel for a specified context.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> for the specified context.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the current binding can build a listener for a specified type of channel and context.</summary>
      <returns>true if the specified channel listener stack can be built on the service; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the listener.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.Clone">
      <summary>Creates a new <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object initialized from the current one.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement" /> object with property values equal to those of the current element.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.CreateMessageEncoderFactory">
      <summary>Creates a factory for binary message encoders that employ the SOAP and WS-Addressing versions and the character encoding specified by the current encoding binding element.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageEncoderFactory" /> that this binding element creates.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding element stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxReadPoolSize">
      <summary>Gets or sets the maximum number of XML readers that are allocated to a pool and are ready for use to process incoming messages.</summary>
      <returns>The maximum number of readers to be kept in the pool. The default value is 64 readers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxSessionSize">
      <summary>Gets or sets the maximum amount of memory available within a session for optimizing transmission procedures.</summary>
      <returns>The maximum size, in bytes, of a session. The default value is 2048 bytes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MaxWritePoolSize">
      <summary>Gets or sets the maximum number of XML writers that are allocated to a pool and are ready for use to process outgoing messages.</summary>
      <returns>The maximum number of writers to be kept in the pool. The default value is 16 writers.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than or equal to zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.MessageVersion">
      <summary>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</returns>
      <exception cref="T:System.ArgumentNullException">The value set is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The value set is an unsupported envelope version.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ReaderQuotas">
      <summary>Gets constraints on the complexity of XML messages that can be processed by endpoints configured with this binding element.</summary>
      <returns>The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints on SOAP messages exchanged. The default values for these constraints are provided in the following remarks section.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ShouldSerializeMessageVersion">
      <summary>Returns whether the SOAP message structure version should be serialized.</summary>
      <returns>true if the SOAP message structure version should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.ShouldSerializeReaderQuotas">
      <summary>Returns whether the values of constraints placed on the complexity of SOAP message structure should be serialized.</summary>
      <returns>true if reader quotas should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated metadata for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.MetadataExporter" /> that exports the metadata information.</param>
      <param name="policyContext">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated WSDL for a contract.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlContractConversionContext" /> object that provides mappings from exported WSDL elements to the contract description.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BinaryMessageEncodingBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>Writes custom binary message encoding elements into the generated WSDL for an endpoint.</summary>
      <param name="exporter">The <see cref="T:System.ServiceModel.Description.WsdlExporter" /> that exports the contract information.</param>
      <param name="context">A <see cref="T:System.ServiceModel.Description.WsdlEndpointConversionContext" /> object that provides mappings from exported WSDL elements to the endpoint description.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.Binding">
      <summary>Contains the binding elements that specify the protocols, transports, and message encoders used for communication between clients and services.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class with a default name and namespace. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.Binding" /> class from a specified binding of the service.</summary>
      <param name="name">The <see cref="P:System.ServiceModel.Channels.Binding.Name" /> of the binding.</param>
      <param name="ns">The <see cref="P:System.ServiceModel.Channels.Binding.Namespace" /> of the binding.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="name" /> is null or an empty string.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="ns" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by an object array.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> that satisfies the features specified by the collection.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified by a collection of binding parameters.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="listenUriMode">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</param>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Builds the channel listener on the service that accepts a specified type of channel and that satisfies the features specified.</summary>
      <returns>An <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <paramref name="TChannel" /> that satisfies the features specified.</returns>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> that provides the base address on which the service listens.</param>
      <param name="listenUriRelativeAddress">The address, relative to the base address, on which the service listens.</param>
      <param name="listenUriMode">A value of the <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique or can be used exactly as provided.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel the channel listener accepts.</typeparam>
      <exception cref="T:System.InvalidOperationException">Transport element is missing or out of order or scheme is invalid or the message version is not specified.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the requirements specified by an object array.</summary>
      <returns>true if the specified channel factory stack can be build on the client; otherwise, false.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a value that indicates whether the current binding can build a channel factory stack on the client that satisfies the collection of binding parameters specified.</summary>
      <returns>true if the specified channel factory stack can be build on the client; otherwise, false.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the factory is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])">
      <summary>Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the criteria specified in an array of objects.</summary>
      <returns>true if the specified channel listener stack can be build on the service; otherwise, false.</returns>
      <param name="parameters">The object array that specifies requirements for the channel factory that is built.</param>
      <typeparam name="TChannel">The type of channel for which the listener is being tested.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a value that indicates whether the current binding can build a channel listener stack on the service that satisfies the collection of binding parameters specified.</summary>
      <returns>true if the specified channel listener stack can be build on the service; otherwise, false.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="TChannel">The type of channel for which the listener is being tested.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.CloseTimeout">
      <summary>Gets or sets the interval of time provided for a connection to close before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.CreateBindingElements">
      <summary>When overridden in a derived class, creates a collection that contains the binding elements that are part of the current binding. </summary>
      <returns>A <see cref="T:System.Collections.Generic.ICollection`1" /> object of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains the binding elements from the current binding object in the correct order.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> that specifies requirements for the channel listener that is built.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.MessageVersion">
      <summary>Gets the message version used by clients and services configured with the binding.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> used by clients and services configured with the binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Name">
      <summary>Gets or sets the name of the binding.</summary>
      <returns>The name of the binding. The default name is null.</returns>
      <exception cref="T:System.ArgumentException">The value set cannot be null or an empty string.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Namespace">
      <summary>Gets or sets the XML namespace of the binding.</summary>
      <returns>The XML namespace of the binding. The default value is "http://tempuri.org/".</returns>
      <exception cref="T:System.ArgumentNullException">The value set cannot be null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.OpenTimeout">
      <summary>Gets or sets the interval of time provided for a connection to open before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.ReceiveTimeout">
      <summary>Gets or sets the interval of time that a connection can remain inactive, during which no application messages are received, before it is dropped.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the application has to receive a message before timing out. The default value is 10 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.Scheme">
      <summary>When implemented in a derived class, sets the URI scheme that specifies the transport used by the channel and listener factories that are built by the bindings.</summary>
      <returns>The URI scheme that is used by the channels or listeners that are created by the factories built by the current binding.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.Binding.SendTimeout">
      <summary>Gets or sets the interval of time provided for a write operation to complete before the transport raises an exception.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies how long the write operation has to complete before timing out. The default value is 1 minute.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or too large.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.ShouldSerializeName">
      <summary>Returns whether the name of the binding should be serialized.</summary>
      <returns>true if the binding name should be serialized; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.Binding.ShouldSerializeNamespace">
      <summary>Returns whether the namespace of the binding should be serialized.</summary>
      <returns>true if the binding namespace should be serialized; otherwise, false.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingContext">
      <summary>Provides information about the addresses, bindings, binding elements and binding parameters required to build the channel listeners and channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingContext" /> class for a specified binding and collection of binding parameters.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.#ctor(System.ServiceModel.Channels.CustomBinding,System.ServiceModel.Channels.BindingParameterCollection,System.Uri,System.String,System.ServiceModel.Description.ListenUriMode)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingContext" /> class for a specified binding, collection of binding parameters, and address for the endpoint at which the service listens.</summary>
      <param name="binding">The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel.</param>
      <param name="parameters">The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel.</param>
      <param name="listenUriBaseAddress">The <see cref="T:System.Uri" /> at which the service endpoint listens.</param>
      <param name="listenUriRelativeAddress">The relative address at which the service endpoint listens.</param>
      <param name="listenUriMode">The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="binding" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> is not defined.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.Binding">
      <summary>Gets the binding for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.CustomBinding" /> for the channel built in the current context.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.BindingParameters">
      <summary>Gets the collection of binding parameters for the channel built in the current context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> for the channel built in the current context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelFactory``1">
      <summary>Builds the inner channel factory for channels of a specified type below the current channel factory.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that represents the inner channel factory of the current channel factory.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.BuildInnerChannelListener``1">
      <summary>Builds an inner channel listener that listens for a specified type of channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> that represents the inner channel listener of the current channel factory.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object for which the inner channel listener listens.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelFactory``1">
      <summary>Returns a value that indicates whether the inner channel factory can produce a specified type of channel.</summary>
      <returns>true if the inner channel factory can produce the specified <paramref name="TChannel" />; otherwise, false.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object the inner channel factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.CanBuildInnerChannelListener``1">
      <summary>Returns a value that indicates whether the inner channel listener can be built to listen for a specified type of channel.</summary>
      <returns>true if the inner channel listener can be built to listen for the <paramref name="TChannel" /> specified; otherwise, false.</returns>
      <typeparam name="TChannel">The type of <see cref="T:System.ServiceModel.Channels.IChannel" /> object for which the inner channel listener listens.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.Clone">
      <summary>Returns a copy of the current channel build context.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingContext" /> object that is a copy of the current channel build context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingContext.GetInnerProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriBaseAddress">
      <summary>Gets or sets the URI that provides the base address at which the service endpoint listens.</summary>
      <returns>The <see cref="T:System.Uri" /> at which the service endpoint listens.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriMode">
      <summary>Gets or sets a value that indicates whether the transport must ensure that the URI provided for the service to listen on is unique. </summary>
      <returns>The <see cref="T:System.ServiceModel.Description.ListenUriMode" /> that indicates whether the transport must ensure that the URI provided for the service to listen on is unique.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.ListenUriRelativeAddress">
      <summary>Gets or sets the URI that provides the relative address at which the service endpoint listens.</summary>
      <returns>The relative address at which the service endpoint listens.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.BindingContext.RemainingBindingElements">
      <summary>Gets the binding elements that are used by other binding elements to construct the channel stack.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that contains the binding elements that are used by other binding elements to construct the channel stack.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElement">
      <summary>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</summary>
      <param name="elementToBeCloned">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel factory for producing channels of a specified type from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the factory builds.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Initializes a channel listener to accept channels of a specified type from the binding context.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</param>
      <typeparam name="TChannel">The type of channel the listener is built to accept.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the channel factory produces.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</summary>
      <returns>true if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, false.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element. </param>
      <typeparam name="TChannel">The type of channel the listener accepts.</typeparam>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="context" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.Clone">
      <summary>When overridden in a derived class, returns a copy of the binding element object.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</summary>
      <returns>The typed object <paramref name="T" /> requested if it is present or null if it is not present.</returns>
      <param name="context">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</param>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingElementCollection">
      <summary>Represents the collection of binding elements used in a binding.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.Channels.BindingElement})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an enumerable set of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Collections.Generic.IEnumerable`1" /> of generic type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.#ctor(System.ServiceModel.Channels.BindingElement[])">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> class from an array of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> used to initialize the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.AddRange(System.ServiceModel.Channels.BindingElement[])">
      <summary>Adds binding elements from an array to the collection of binding elements.</summary>
      <param name="elements">The <see cref="T:System.Array" /> of type <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be added to the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="elements" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Clone">
      <summary>Creates a copy of the binding element collection.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Contains(System.Type)">
      <summary>Returns a value that indicates whether a specified type of binding element belongs to the collection of binding elements.</summary>
      <returns>true if the type of binding element specified is contained in the collection; otherwise, false.</returns>
      <param name="bindingElementType">The type of binding element being tested for inclusion in the collection.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bindingElementType" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Find``1">
      <summary>Returns the first item of a specified type from the collection of binding elements.</summary>
      <returns>The item of type <see cref="T:System.Type" /> if found; if not found, 0 if <paramref name="T" /> is a value type and null if <paramref name="T" /> is a reference type.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.FindAll``1">
      <summary>Returns all of the items of a specified type from the collection of binding elements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> if found; if none are found, 0 if <paramref name="T" /> is a value type and null if <paramref name="T" /> is a reference type.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.InsertItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Inserts a binding element at a specified location within a collection of binding elements.</summary>
      <param name="index">The location at which to insert the binding element in the collection.</param>
      <param name="item">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.Remove``1">
      <summary>Removes a binding element of a specified type from the collection of binding elements.</summary>
      <returns>The item of type <see cref="T:System.Type" /> removed.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.RemoveAll``1">
      <summary>Removes all of the binding elements of a specified type from the collection of binding elements.</summary>
      <returns>A <see cref="T:System.Collections.ObjectModel.Collection`1" /> of all of the items of type <see cref="T:System.Type" /> found.</returns>
      <typeparam name="T">The <see cref="T:System.Type" /> of item to find.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingElementCollection.SetItem(System.Int32,System.ServiceModel.Channels.BindingElement)">
      <summary>Replaces a binding element at the specified index in the collection of binding elements.</summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for <see cref="T:System.ServiceModel.Channels.BindingElement" /> item at the specified <paramref name="index" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="item" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BindingParameterCollection">
      <summary>Represents a collection of binding parameters that store information used by binding elements to build factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BindingParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingParameterCollection" /> class. </summary>
    </member>
    <member name="T:System.ServiceModel.Channels.BodyWriter">
      <summary>Represents the writer of the message body.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BodyWriter" /> class that explicitly indicates whether to buffer.</summary>
      <param name="isBuffered">true if the body writer can be called multiple times; otherwise false.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)">
      <summary>Creates a buffered copy of the body.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.BodyWriter" /> that contains a copy of this object.</returns>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="maxBufferSize" /> is less than zero.</exception>
      <exception cref="T:System.InvalidOperationException">The body has already been written and cannot be written again, or the body writer is not buffered.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.BodyWriter.IsBuffered">
      <summary>Gets a value that indicates whether the write method can be called multiple times.</summary>
      <returns>true if the body writer can be called multiple times; otherwise false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)">
      <summary>Provides an extensibility point when the body contents are written.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.BodyWriter" /> with the specified maximum buffer size.</returns>
      <param name="maxBufferSize">The maximum size of the buffer for the body.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>When implemented, provides an extensibility point when the body contents are written.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)">
      <summary>Writes out the contents of the message body.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlDictionaryWriter" /> used to write out the message body.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="writer" /> is null.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.BufferManager">
      <summary>Many  features require the use of buffers, which are expensive to create and destroy. You can use the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class to manage a buffer pool. The pool and its buffers are created when you instantiate this class and destroyed when the buffer pool is reclaimed by garbage collection. Every time you need to use a buffer, you take one from the pool, use it, and return it to the pool when done. This process is much faster than creating and destroying a buffer every time you need to use one.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BufferManager" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.Clear">
      <summary>Releases the buffers currently cached in the manager.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.CreateBufferManager(System.Int64,System.Int32)">
      <summary>Creates a new BufferManager with a specified maximum buffer pool size and a maximum size for each individual buffer in the pool.</summary>
      <returns>Returns a <see cref="T:System.ServiceModel.Channels.BufferManager" /> object with the specified parameters.</returns>
      <param name="maxBufferPoolSize">The maximum size of the pool.</param>
      <param name="maxBufferSize">The maximum size of an individual buffer.</param>
      <exception cref="T:System.InsufficientMemoryException">There was insufficient memory to create the requested buffer pool.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="maxBufferPoolSize" /> or <paramref name="maxBufferSize" /> was less than zero.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.ReturnBuffer(System.Byte[])">
      <summary>Returns a buffer to the pool.</summary>
      <param name="buffer">A reference to the buffer being returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="buffer" /> reference cannot be null.</exception>
      <exception cref="T:System.ArgumentException">Length of <paramref name="buffer" /> does not match the pool's buffer length property.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.BufferManager.TakeBuffer(System.Int32)">
      <summary>Gets a buffer of at least the specified size from the pool. </summary>
      <returns>A byte array that is the requested size of the buffer.</returns>
      <param name="bufferSize">The size, in bytes, of the requested buffer.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="bufferSize" /> cannot be less than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CallbackContextMessageProperty">
      <summary>Represents the contents of the wsc:CallbackContext message header when using a channel that supports the context exchange protocol.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class with the specified context.</summary>
      <param name="context">Information contained in the message which is identifiable by the client and the service instance between which the communication is taking place.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class with the specified <see cref="T:System.ServiceModel.EndpointAddress" />.</summary>
      <param name="callbackAddress">The callback address.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class with the specified <see cref="T:System.ServiceModel.EndpointAddress" /> and a <see cref="T:System.Collections.Generic.IDictionary{System.String,System.String}" /> that contains context information.</summary>
      <param name="listenAddress">The endpoint address the client listens on.</param>
      <param name="context">Information contained in the message which is identifiable by the client and the service instance between which the communication is taking place.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class with the specified listen address and  context information.</summary>
      <param name="listenAddress">The endpoint address the client listens on.</param>
      <param name="context">Information contained in the message which is identifiable by the client and the service instance between which the communication is taking place.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class with the specified listen address and context information.</summary>
      <param name="listenAddress">The endpoint address the client listens on.</param>
      <param name="context">Information contained in the message which is identifiable by the client and the service instance between which the communication is taking place.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)">
      <summary>Adds or replaces the current <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance within the specified message.</summary>
      <param name="message">The message to add or replace the callback context message property.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)">
      <summary>Adds or replaces the current <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance within the specified message properties collection.</summary>
      <param name="properties">The message properties collection to add the callback context message property to.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress">
      <summary>Gets the callback address.</summary>
      <returns>An <see cref="T:System.ServiceModel.EndpointAddress" /> that contains the callback address.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Context">
      <summary>Gets the context associated with the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      <returns>The context.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)">
      <summary>Merges the client's listenAddress and its context into a single callback address that gets sent to the service.</summary>
      <returns>A <see cref="T:System.ServiceModel.EndpointAddress" /> instance.</returns>
      <param name="listenAddress">The listen URI</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy">
      <summary>Creates a copy of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance.</summary>
      <returns>A copy of the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)">
      <summary>Gets the listen address and context data from the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance.</summary>
      <param name="listenAddress">A reference to store the listen address.</param>
      <param name="context">Information contained in the message which is identifiable by the client and the service instance between which the communication is taking place.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Name">
      <summary>Gets the property name for the <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> class.</summary>
      <returns>The property name.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)">
      <summary>Attempts to get a <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance from the specified message.</summary>
      <returns>true if the callback context message property is retrieved successfully; otherwise, false.</returns>
      <param name="message">The message to get the callback context message property from.</param>
      <param name="contextMessageProperty">A reference to store the callback context message property instance.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)">
      <summary>Attempts to get a <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> instance from the specified message properties.</summary>
      <returns>true if the callback context message property is retrieved successfully; otherwise, false.</returns>
      <param name="properties">The message properties collection to get the callback context message property from.</param>
      <param name="contextMessageProperty">A reference to store the callback context message property instance.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelBase">
      <summary>Provides the base implementation for custom channels.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.#ctor(System.ServiceModel.Channels.ChannelManagerBase)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelBase" /> class. </summary>
      <param name="channelManager">The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that provides default timeouts for the channel operations (send, receive, open, and close).</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="channelManager" /> is null.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.GetProperty``1">
      <summary>Returns the typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object <paramref name="T" /> requested, if it is present, or null, if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.Manager">
      <summary>Gets the channel manager that is associated with the current channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> that is associated with the current channel.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelBase.OnClosed">
      <summary>Uses diagnostic tracing during the transition into the closing state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase">
      <summary>Provides a common base implementation for all custom channel factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> specifying the default timeouts for open, send, receive, and close operations when exchanging messages. </param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelFactoryBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object T requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close each of the channels that were created by the factory.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on close completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close channels that were opened by the factory.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelFactoryBase`1">
      <summary>Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.</summary>
      <typeparam name="TChannel">The type of channel the factory produces.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelFactoryBase`1" /> class with the default communication timeouts specified.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress)">
      <summary>Creates a particular type of channel with a specified endpoint address.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified <paramref name="address" />.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="address" /> is null.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.CreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>Creates a particular type of channel with specified transport and endpoint addresses.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified remote and transport addresses.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnAbort">
      <summary>Aborts each channel managed by the channel factory.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on-close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the on-close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnClose(System.TimeSpan)">
      <summary>Closes all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on-close operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnCreateChannel(System.ServiceModel.EndpointAddress,System.Uri)">
      <summary>When implemented in a derived class, provides an extensibility point when creating channels.</summary>
      <returns>A channel of type <paramref name="TChannel" /> with the specified addresses.</returns>
      <param name="address">The <see cref="T:System.ServiceModel.EndpointAddress" /> of the remote endpoint to which the channel sends messages.</param>
      <param name="via">The <see cref="T:System.Uri" /> that contains the transport address to which messages are sent on the output channel.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelFactoryBase`1.ValidateCreateChannel">
      <summary>Confirms that the channel factory is opened and ready to create channels.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.InvalidOperationException">The current channel factory is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase">
      <summary>Provides a common base implementation for channel listeners on the service.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous wait for a channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</param>
      <exception cref="T:System.InvalidOperationException">The channel listener has not been opened and so cannot be used.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout">
      <summary>Gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout">
      <summary>Gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout">
      <summary>Gets the default interval of time provided for a receive operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the receive operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout">
      <summary>Gets the default interval of time provided for a send operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.</summary>
      <returns>true if a message arrived; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1">
      <summary>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</summary>
      <returns>The typed object T requested if it is present or null if it is not.</returns>
      <typeparam name="T">The typed object for which the method is querying.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on begin wait operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on begin wait operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous operation on begin wait completion.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.</summary>
      <returns>true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)">
      <summary>When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.</summary>
      <returns>true if the method completed before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelListenerBase.Uri">
      <summary>When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.</summary>
      <returns>The <see cref="T:System.Uri" /> on which the channel listener listens for incoming channels.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)">
      <summary>When implemented in a derived class, waits for a channel to arrive.</summary>
      <returns>true if a channel arrived before the interval of time specified by the <paramref name="timeout" /> expired; otherwise false.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the wait for a channel operation has to complete before timing out.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelListenerBase`1">
      <summary>Provides a common base implementation for channel listeners on a service to accept channels produced by the client factories.</summary>
      <typeparam name="TChannel">The type of channel the channel listeners accept.</typeparam>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelListenerBase`1" /> class with specified default communication timeouts.</summary>
      <param name="timeouts">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel">
      <summary>Accepts a channel of the type specified by the current channel listener.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.AcceptChannel(System.TimeSpan)">
      <summary>Accepts a channel of the type specified by the current channel listener within a specified interval of time.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to accept a channel of the type specified by the current channel listener.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="callback">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="state">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, begins an asynchronous operation to accept a channel of the type specified by the current channel listener within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.EndAcceptChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, completes an asynchronous operation to accept a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.ChannelListenerBase`1.BeginAcceptChannel" /> method.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnAcceptChannel(System.TimeSpan)">
      <summary>When implemented in a derived class, provides an extensibility point when accepting a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>When implemented in a derived class, provides an asynchronous extensibility point when beginning to accept a channel.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous accept channel operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the accept channel operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the accept channel operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous accept channel operation.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnEndAcceptChannel(System.IAsyncResult)">
      <summary>When implemented in a derived class, provides an asynchronous extensibility point when completing the acceptance a channel.</summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> accepted by the listener.</returns>
      <param name="result">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Channels.ChannelListenerBase`1.OnBeginAcceptChannel(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelManagerBase">
      <summary>Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelManagerBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelManagerBase" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout">
      <summary>When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout">
      <summary>Gets the interval of time after which the close method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the close method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout">
      <summary>Gets the interval of time after which the open method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the open method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout">
      <summary>Gets the interval of time after which the receive method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the receive method to time out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout">
      <summary>Gets the interval of time after which the send method, invoked by a communication object, times out.</summary>
      <returns>The <see cref="T:System.Timespan" /> that specifies the interval of time to wait for the send method to time out.</returns>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelParameterCollection">
      <summary>Represents a collection of channel parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.#ctor(System.ServiceModel.Channels.IChannel)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" /> class. </summary>
      <param name="channel">The channel whose parameters are in this collection.</param>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelParameterCollection.Channel">
      <summary>Gets the channel whose parameters are in this collection. </summary>
      <returns>The <see cref="T:System.ServiceModel.Channels.IChannel" /> whose parameters are in this collection.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.ClearItems">
      <summary>Clears the collection of parameters.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.InsertItem(System.Int32,System.Object)">
      <summary>Inserts the specified item into the collection using the specified index.</summary>
      <param name="index">The index of the item in the collection.</param>
      <param name="item">The item to add to the collection.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.PropagateChannelParameters(System.ServiceModel.Channels.IChannel)">
      <summary>Adds the parameters in the current collection to a specified channel's <see cref="T:System.ServiceModel.Channels.ChannelParameterCollection" />.</summary>
      <param name="innerChannel">The channel that receives the current collection's parameters.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.RemoveItem(System.Int32)">
      <summary>Removes a parameter from the collection.</summary>
      <param name="index">Index of the parameter to remove.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelParameterCollection.SetItem(System.Int32,System.Object)">
      <summary>Replaces an item in the collection at a specified index.</summary>
      <param name="index">Index of the item to replace.</param>
      <param name="item">Value of the replacement item.</param>
    </member>
    <member name="T:System.ServiceModel.Channels.ChannelPoolSettings">
      <summary>Specifies quotas for channels that belong to a pool of channels used by a service endpoint.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.ChannelPoolSettings.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.ChannelPoolSettings" /> class. </summary>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.IdleTimeout">
      <summary>Get or sets the maximum interval of time for which the channels in the pool can be idle before being closed.</summary>
      <returns>The <see cref="T:System.TimeSpan" /> that specifies the maximum interval of time for which the channels in the pool can be idle before being closed. The default value is 2 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero or greater than T:System.Int32.MaxValue in milliseconds.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.LeaseTimeout">
      <summary>Gets or sets the lifetime of a channel, after which it is closed.</summary>
      <returns>A <see cref="T:System.TimeSpan" /> that specifies the lifetime of a channel, after which it is closed. The default value is 10 minutes.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="P:System.ServiceModel.Channels.ChannelPoolSettings.MaxOutboundChannelsPerEndpoint">
      <summary>Gets or sets the maximum number of channels connecting to remote endpoints that can be initiated by the service.</summary>
      <returns>A positive integer that specifies the maximum number of channels to a remote endpoint in the pool that can be initiated by the service. The default value is 10 channels.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The value is less than zero.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CommunicationObject">
      <summary>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CommunicationObject" /> class with the mutually exclusive lock to protect the state transitions specified.</summary>
      <param name="mutex">The mutually exclusive lock that protects the class instance during a state transition.</param>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Abort">
      <summary>Causes a communication object to transition immediately from its current state into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to close a communication object with a specified timeout.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Begins an asynchronous operation to open a communication object within a specified interval of time.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the send operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close">
      <summary>Causes a communication object to transition from its current state into the closed state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
      <summary>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closed">
      <summary>Occurs when a communication object transitions into the closed state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Closing">
      <summary>Occurs when a communication object transitions into the closing state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the close operation has to complete before timing out.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
      <summary>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</summary>
      <returns>The default <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to close a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation to open a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Fault">
      <summary>Causes a communication object to transition from its current state into the faulted state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
      <summary>Occurs when a communication object transitions into the faulted state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
      <summary>Gets the type of communication object.</summary>
      <returns>The type of communication object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
      <summary>Gets a value that indicates whether the communication object has been disposed.</summary>
      <returns>true if the communication object is in a closed state; otherwise, false.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on close operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on close operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on close operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</summary>
      <returns>The <see cref="T:System.IAsyncResult" /> that references the asynchronous on open operation. </returns>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <param name="callback">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous on open operation.</param>
      <param name="state">An object, specified by the application, that contains state information associated with the asynchronous on open operation.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on close operation has to complete before timing out.</param>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
        <see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">A communication error occurred while closing the object.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
      <summary>Invoked during the transition of a communication object into the closing state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the close of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
      <summary>Completes an asynchronous operation on the open of a communication object.</summary>
      <param name="result">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /> method.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
      <summary>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
      <summary>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the on open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
      <summary>Invoked during the transition of a communication object into the opened state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
      <summary>Invoked during the transition of a communication object into the opening state.</summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open">
      <summary>Causes a communication object to transition from the created state into the opened state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
      <summary>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</summary>
      <param name="timeout">The <see cref="T:System.Timespan" /> that specifies how long the open operation has to complete before timing out.</param>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Opened" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be modified.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
      <exception cref="T:System.TimeoutException">The default interval of time that was allotted for the operation was exceeded before the operation was completed.</exception>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opened">
      <summary>Occurs when a communication object transitions into the opened state.</summary>
    </member>
    <member name="E:System.ServiceModel.Channels.CommunicationObject.Opening">
      <summary>Occurs when a communication object transitions into the opening state.</summary>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.State">
      <summary>Gets a value that indicates the current state of the communication object.</summary>
      <returns>A value from the <see cref="T:System.ServiceModel.CommunicationState" /> enumeration that indicates the current state of the object.</returns>
    </member>
    <member name="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
      <summary>Gets the mutually exclusive lock that protects the class instance during a state transition.</summary>
      <returns>The mutually exclusive lock that protects the class instance during a state transition.</returns>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
      <summary>Throws an exception if the communication object is disposed.</summary>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
      <summary>Throws an exception if the communication object the <see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /> property is not set to the <see cref="F:System.ServiceModel.CommunicationState.Created" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</exception>
    </member>
    <member name="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
      <summary>Throws an exception if the communication object is not in the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</summary>
      <exception cref="T:System.InvalidOperationException">The communication object is not in a <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state and cannot be used.</exception>
      <exception cref="T:System.ObjectDisposedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state and cannot be modified.</exception>
      <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state and cannot be modified.</exception>
    </member>
    <member name="T:System.ServiceModel.Channels.CompositeDuplexBindingElement">
      <summary>Represents the binding element that is used when the client must expose an endpoint for the service to send messages back to the client. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.CompositeDuplexBindingElement" /> class. </summary>
    </member>
    <member name="M:System.ServiceModel.Channels.CompositeDuplexBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>Returns a channel factory that can create a composite duplex channel.</summary>
      <returns>A <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> that creates a composite duplex channel of type <paramref name="TChannel" />.</returns>
      <param name="context">