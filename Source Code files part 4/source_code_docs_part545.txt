ode" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNode.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a serialization information object with the data needed to serialize the <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <param name="si">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that contains the data to serialize the <see cref="T:System.Windows.Forms.TreeNode" />.</param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains the destination information for this serialization.</param>
    </member>
    <member name="P:System.Windows.Forms.TreeNode.Tag">
      <summary>Gets or sets the object that contains data about the tree node.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data about the tree node. The default is null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeNode.Text">
      <summary>Gets or sets the text displayed in the label of the tree node.</summary>
      <returns>The text displayed in the label of the tree node.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNode.Toggle">
      <summary>Toggles the tree node to either the expanded or collapsed state.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeNode.ToolTipText">
      <summary>Gets or sets the text that appears when the mouse pointer hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <returns>Gets the text that appears when the mouse pointer hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNode.ToString">
      <returns>A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.</returns>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeNode.TreeView">
      <summary>Gets the parent tree view that the tree node is assigned to.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeView" /> that represents the parent tree view that the tree node is assigned to, or null if the node has not been assigned to a tree view.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeCollection">
      <summary>Represents a collection of <see cref="T:System.Windows.Forms.TreeNode" /> objects.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String)">
      <summary>Adds a new tree node with the specified label text to the end of the current tree node collection.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the tree node being added to the collection.</returns>
      <param name="text">The label text displayed by the <see cref="T:System.Windows.Forms.TreeNode" />. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)">
      <summary>Creates a new tree node with the specified key and text, and adds it to the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was added to the collection.</returns>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)">
      <summary>Creates a tree node with the specified key, text, and image, and adds it to the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was added to the collection.</returns>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageIndex">The index of the image to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)">
      <summary>Creates a tree node with the specified key, text, and images, and adds it to the collection.</summary>
      <returns>The tree node that was added to the collection.</returns>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageIndex">The index of the image to display in the tree node.</param>
      <param name="selectedImageIndex">The index of the image to be displayed in the tree node when it is in a selected state.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)">
      <summary>Creates a tree node with the specified key, text, and image, and adds it to the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was added to the collection.</returns>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageKey">The image to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)">
      <summary>Creates a tree node with the specified key, text, and images, and adds it to the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was added to the collection.</returns>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageKey">The key of the image to display in the tree node.</param>
      <param name="selectedImageKey">The key of the image to display when the node is in a selected state.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)">
      <summary>Adds a previously created tree node to the end of the tree node collection.</summary>
      <returns>The zero-based index value of the <see cref="T:System.Windows.Forms.TreeNode" /> added to the tree node collection.</returns>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to add to the collection. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="node" /> is currently assigned to another <see cref="T:System.Windows.Forms.TreeView" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])">
      <summary>Adds an array of previously created tree nodes to the collection.</summary>
      <param name="nodes">An array of <see cref="T:System.Windows.Forms.TreeNode" /> objects representing the tree nodes to add to the collection. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="nodes" /> is null.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="nodes" /> is the child of another <see cref="T:System.Windows.Forms.TreeView" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Clear">
      <summary>Removes all tree nodes from the collection.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)">
      <summary>Determines whether the specified tree node is a member of the collection.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.TreeNode" /> is a member of the collection; otherwise, false.</returns>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to locate in the collection. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)">
      <summary>Determines whether the collection contains a tree node with the specified key.</summary>
      <returns>true to indicate the collection contains a <see cref="T:System.Windows.Forms.TreeNode" /> with the specified key; otherwise, false. </returns>
      <param name="key">The name of the <see cref="T:System.Windows.Forms.TreeNode" /> to search for.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire collection into an existing array at a specified location within the array.</summary>
      <param name="dest">The destination array. </param>
      <param name="index">The index in the destination array at which storing begins. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.Count">
      <summary>Gets the total number of <see cref="T:System.Windows.Forms.TreeNode" /> objects in the collection.</summary>
      <returns>The total number of <see cref="T:System.Windows.Forms.TreeNode" /> objects in the collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)">
      <summary>Finds the tree nodes with specified key, optionally searching subnodes.</summary>
      <returns>An array of <see cref="T:System.Windows.Forms.TreeNode" /> objects whose <see cref="P:System.Windows.Forms.TreeNode.Name" /> property matches the specified key.</returns>
      <param name="key">The name of the tree node to search for.</param>
      <param name="searchAllChildren">true to search child nodes of tree nodes; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.GetEnumerator">
      <summary>Returns an enumerator that can be used to iterate through the tree node collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> that represents the tree node collection.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)">
      <summary>Returns the index of the specified tree node in the collection.</summary>
      <returns>The zero-based index of the item found in the tree node collection; otherwise, -1.</returns>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to locate in the collection. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)">
      <summary>Returns the index of the first occurrence of a tree node with the specified key.</summary>
      <returns>The zero-based index of the first occurrence of a tree node with the specified key, if found; otherwise, -1.</returns>
      <param name="key">The name of the tree node to search for.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)">
      <summary>Creates a tree node with the specified text and inserts it at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="text">The text to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)">
      <summary>Creates a tree node with the specified text and key, and inserts it into the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)">
      <summary>Creates a tree node with the specified key, text, and image, and inserts it into the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageIndex">The index of the image to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)">
      <summary>Creates a tree node with the specified key, text, and images, and inserts it into the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageIndex">The index of the image to display in the tree node.</param>
      <param name="selectedImageIndex">The index of the image to display in the tree node when it is in a selected state.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)">
      <summary>Creates a tree node with the specified key, text, and image, and inserts it into the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageKey">The key of the image to display in the tree node.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)">
      <summary>Creates a tree node with the specified key, text, and images, and inserts it into the collection at the specified index.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was inserted in the collection.</returns>
      <param name="index">The location within the collection to insert the node.</param>
      <param name="key">The name of the tree node.</param>
      <param name="text">The text to display in the tree node.</param>
      <param name="imageKey">The key of the image to display in the tree node.</param>
      <param name="selectedImageKey">The key of the image to display in the tree node when it is in a selected state.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)">
      <summary>Inserts an existing tree node into the tree node collection at the specified location.</summary>
      <param name="index">The indexed location within the collection to insert the tree node. </param>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to insert into the collection. </param>
      <exception cref="T:System.ArgumentException">The <paramref name="node" /> is currently assigned to another <see cref="T:System.Windows.Forms.TreeView" />. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.Item(System.Int32)">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.TreeNode" /> at the specified indexed location in the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> at the specified indexed location in the collection.</returns>
      <param name="index">The indexed location of the <see cref="T:System.Windows.Forms.TreeNode" /> in the collection. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="index" /> value is less than 0 or is greater than the number of tree nodes in the collection. </exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.Item(System.String)">
      <summary>Gets the tree node with the specified key from the collection. </summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> with the specified key.</returns>
      <param name="key">The name of the <see cref="T:System.Windows.Forms.TreeNode" /> to retrieve from the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)">
      <summary>Removes the specified tree node from the tree node collection.</summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)">
      <summary>Removes a tree node from the tree node collection at a specified index.</summary>
      <param name="index">The index of the <see cref="T:System.Windows.Forms.TreeNode" /> to remove. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)">
      <summary>Removes the tree node with the specified key from the collection.</summary>
      <param name="key">The name of the tree node to remove from the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the collection is synchronized (thread safe).</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the collection.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.TreeNodeCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an object to the end of the tree node collection.</summary>
      <returns>The zero-based index value of the <see cref="T:System.Windows.Forms.TreeNode" /> that was added to the tree node collection.</returns>
      <param name="node">The object to add to the tree node collection.</param>
      <exception cref="T:System.Exception">
        <paramref name="node" /> is currently assigned to another <see cref="T:System.Windows.Forms.TreeView" /> control.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="node" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the specified tree node is a member of the collection.</summary>
      <returns>true if <paramref name="node" /> is a member of the collection; otherwise, false.</returns>
      <param name="node">The object to find in the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Returns the index of the specified tree node in the collection.</summary>
      <returns>The zero-based index of the item found in the tree node collection; otherwise, -1.</returns>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to locate in the collection.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an existing tree node in the tree node collection at the specified location.</summary>
      <param name="index">The indexed location within the collection to insert the tree node. </param>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to insert into the collection.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="node" /> is currently assigned to another <see cref="T:System.Windows.Forms.TreeView" />.-or-<paramref name="node" /> is not a <see cref="T:System.Windows.Forms.TreeNode" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the tree node collection has a fixed size.</summary>
      <returns>false in all cases.</returns>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the tree node at the specified index in the collection.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> at the specified index in the <see cref="T:System.Windows.Forms.TreeNodeCollection" />.</returns>
      <param name="index"></param>
      <exception cref="T:System.ArgumentException">The value set is not a <see cref="T:System.Windows.Forms.TreeNode" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the specified tree node from the tree node collection.</summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> to remove from the collection.</param>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeConverter">
      <summary>Provides a type converter to convert <see cref="T:System.Windows.Forms.TreeNode" /> objects to and from various other representations.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeNodeConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you wish to convert to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context. </param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" />. If null is passed, the current culture is assumed. </param>
      <param name="value">The <see cref="T:System.Object" /> to convert. </param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the <paramref name="value" /> parameter to. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeMouseClickEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" /> and <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" /> events. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeMouseClickEventArgs.#ctor(System.Windows.Forms.TreeNode,System.Windows.Forms.MouseButtons,System.Int32,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" /> class. </summary>
      <param name="node">The node that was clicked.</param>
      <param name="button">One of the <see cref="T:System.Windows.Forms.MouseButtons" /> members.</param>
      <param name="clicks">The number of clicks that occurred.</param>
      <param name="x">The x-coordinate where the click occurred.</param>
      <param name="y">The y-coordinate where the click occurred.</param>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeMouseClickEventArgs.Node">
      <summary>Gets the node that was clicked.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that was clicked.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeMouseClickEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" /> and <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" /> events of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" />  that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" /> event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeNodeMouseHoverEventArgs.#ctor(System.Windows.Forms.TreeNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" /> class. </summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> the mouse pointer is currently resting on.</param>
    </member>
    <member name="P:System.Windows.Forms.TreeNodeMouseHoverEventArgs.Node">
      <summary>Gets the node the mouse pointer is currently resting on.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> the mouse pointer is currently resting on.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeMouseHoverEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" /> event of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" />  that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeNodeStates">
      <summary>Defines constants that represent the possible states of a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Checked">
      <summary>The node is checked.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Default">
      <summary>The node is in its default state.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Focused">
      <summary>The node has focus.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Grayed">
      <summary>The node is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Hot">
      <summary>The node is hot. This state occurs when the <see cref="P:System.Windows.Forms.TreeView.HotTracking" /> property is set to true and the mouse pointer is over the node.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Indeterminate">
      <summary>The node in an indeterminate state.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Marked">
      <summary>The node is marked.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.Selected">
      <summary>The node is selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeNodeStates.ShowKeyboardCues">
      <summary>The node should indicate a keyboard shortcut.</summary>
    </member>
    <member name="T:System.Windows.Forms.TreeView">
      <summary>Displays a hierarchical collection of labeled items, each represented by a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeView" /> class.</summary>
    </member>
    <member name="E:System.Windows.Forms.TreeView.AfterCheck">
      <summary>Occurs after the tree node check box is checked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.AfterCollapse">
      <summary>Occurs after the tree node is collapsed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.AfterExpand">
      <summary>Occurs after the tree node is expanded.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.AfterLabelEdit">
      <summary>Occurs after the tree node label text is edited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.AfterSelect">
      <summary>Occurs after the tree node is selected.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.BackColor">
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultBackColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.BackgroundImage">
      <summary>Gets or set the background image for the <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <returns>The <see cref="T:System.Drawing.Image" /> that is the background image for the <see cref="T:System.Windows.Forms.TreeView" /> control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BackgroundImageChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TreeView.BackgroundImage" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.BackgroundImageLayout">
      <summary>Gets or sets the layout of the background image for the <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values. The default is <see cref="F:System.Windows.Forms.ImageLayout.Tile" />. </returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BackgroundImageLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TreeView.BackgroundImageLayout" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BeforeCheck">
      <summary>Occurs before the tree node check box is checked.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BeforeCollapse">
      <summary>Occurs before the tree node is collapsed.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BeforeExpand">
      <summary>Occurs before the tree node is expanded.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BeforeLabelEdit">
      <summary>Occurs before the tree node label text is edited.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.BeforeSelect">
      <summary>Occurs before the tree node is selected.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeView.BeginUpdate">
      <summary>Disables any redrawing of the tree view.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.BorderStyle">
      <summary>Gets or sets the border style of the tree view control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.CheckBoxes">
      <summary>Gets or sets a value indicating whether check boxes are displayed next to the tree nodes in the tree view control.</summary>
      <returns>true if a check box is displayed next to each tree node in the tree view control; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.CollapseAll">
      <summary>Collapses all the tree nodes.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.CreateHandle"></member>
    <member name="P:System.Windows.Forms.TreeView.CreateParams">
      <summary>Overrides <see cref="P:System.Windows.Forms.Control.CreateParams" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.TreeView.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.TreeView.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.TreeView" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.TreeView.DoubleBuffered">
      <summary>Gets or sets a value indicating whether the control should redraw its surface using a secondary buffer. The <see cref="P:System.Windows.Forms.TreeView.DoubleBuffered" /> property has no effect on the <see cref="T:System.Windows.Forms.TreeView" /> control. </summary>
      <returns>true if the control uses a secondary buffer; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.TreeView.DrawMode">
      <summary>Gets or sets the mode in which the control is drawn.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> values. The default is <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The property value is not a valid <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.TreeView.DrawNode">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> is drawn and the <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> property is set to a <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> value other than <see cref="F:System.Windows.Forms.TreeViewDrawMode.Normal" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeView.EndUpdate">
      <summary>Enables the redrawing of the tree view.</summary>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.ExpandAll">
      <summary>Expands all the tree nodes.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ForeColor">
      <summary>The current foreground color for this control, which is the color the control uses to draw its text.</summary>
      <returns>The foreground <see cref="T:System.Drawing.Color" /> of the control. The default is the value of the <see cref="P:System.Windows.Forms.Control.DefaultForeColor" /> property.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.FullRowSelect">
      <summary>Gets or sets a value indicating whether the selection highlight spans the width of the tree view control.</summary>
      <returns>true if the selection highlight spans the width of the tree view control; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.GetItemRenderStyles(System.Windows.Forms.TreeNode,System.Int32)">
      <summary>Returns an <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" /> for the specified <see cref="T:System.Windows.Forms.TreeNode" />.</returns>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> for which to return an <see cref="T:System.Windows.Forms.OwnerDrawPropertyBag" />.</param>
      <param name="state">The visible state of the <see cref="T:System.Windows.Forms.TreeNode" />.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.GetNodeAt(System.Drawing.Point)">
      <summary>Retrieves the tree node that is at the specified point.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> at the specified point, in tree view (client) coordinates, or null if there is no node at that location.</returns>
      <param name="pt">The <see cref="T:System.Drawing.Point" /> to evaluate and retrieve the node from. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.GetNodeAt(System.Int32,System.Int32)">
      <summary>Retrieves the tree node at the point with the specified coordinates.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> at the specified location, in tree view (client) coordinates, or null if there is no node at that location.</returns>
      <param name="x">The <see cref="P:System.Drawing.Point.X" /> position to evaluate and retrieve the node from. </param>
      <param name="y">The <see cref="P:System.Drawing.Point.Y" /> position to evaluate and retrieve the node from. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.GetNodeCount(System.Boolean)">
      <summary>Retrieves the number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</summary>
      <returns>The number of tree nodes, optionally including those in all subtrees, assigned to the tree view control.</returns>
      <param name="includeSubTrees">true to count the <see cref="T:System.Windows.Forms.TreeNode" /> items that the subtrees contain; otherwise, false. </param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.HideSelection">
      <summary>Gets or sets a value indicating whether the selected tree node remains highlighted even when the tree view has lost the focus.</summary>
      <returns>true if the selected tree node is not highlighted when the tree view has lost the focus; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.HitTest(System.Drawing.Point)">
      <summary>Provides node information, given a point.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeViewHitTestInfo" />.</returns>
      <param name="pt">The <see cref="T:System.Drawing.Point" /> at which to retrieve node information.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.HitTest(System.Int32,System.Int32)">
      <summary>Provides node information, given x- and y-coordinates.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeViewHitTestInfo" />.</returns>
      <param name="x">The x-coordinate at which to retrieve node information </param>
      <param name="y">The y-coordinate at which to retrieve node information.</param>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.HotTracking">
      <summary>Gets or sets a value indicating whether a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it.</summary>
      <returns>true if a tree node label takes on the appearance of a hyperlink as the mouse pointer passes over it; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ImageIndex">
      <summary>Gets or sets the image-list index value of the default image that is displayed by the tree nodes.</summary>
      <returns>A zero-based index that represents the position of an <see cref="T:System.Drawing.Image" /> in an <see cref="T:System.Windows.Forms.ImageList" />. The default is zero.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The specified index is less than 0.</exception>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ImageKey">
      <summary>Gets or sets the key of the default image for each node in the <see cref="T:System.Windows.Forms.TreeView" /> control when it is in an unselected state.</summary>
      <returns>The key of the default image shown for each node <see cref="T:System.Windows.Forms.TreeView" /> control when the node is in an unselected state.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ImageList">
      <summary>Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> objects used by the tree nodes.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> objects used by the tree nodes. The default value is null.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Indent">
      <summary>Gets or sets the distance to indent each of the child tree node levels.</summary>
      <returns>The distance, in pixels, to indent each of the child tree node levels. The default value is 19.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is less than 0 (see Remarks).-or- The assigned value is greater than 32,000. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.IsInputKey(System.Windows.Forms.Keys)">
      <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
      <returns>true if the specified key is a regular input key; otherwise, false.</returns>
      <param name="keyData">One of the Keys values.</param>
    </member>
    <member name="E:System.Windows.Forms.TreeView.ItemDrag">
      <summary>Occurs when the user begins dragging a node.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ItemHeight">
      <summary>Gets or sets the height of each tree node in the tree view control.</summary>
      <returns>The height, in pixels, of each tree node in the tree view.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">The assigned value is less than one.-or- The assigned value is greater than the <see cref="F:System.Int16.MaxValue" /> value. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.LabelEdit">
      <summary>Gets or sets a value indicating whether the label text of the tree nodes can be edited.</summary>
      <returns>true if the label text of the tree nodes can be edited; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.LineColor">
      <summary>Gets or sets the color of the lines connecting the nodes of the <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <returns>The <see cref="T:System.Drawing.Color" /> of the lines connecting the tree nodes.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.TreeView.NodeMouseClick">
      <summary>Occurs when the user clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick">
      <summary>Occurs when the user double-clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.NodeMouseHover">
      <summary>Occurs when the mouse hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Nodes">
      <summary>Gets the collection of tree nodes that are assigned to the tree view control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeNodeCollection" /> that represents the tree nodes assigned to the tree view control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnAfterCheck(System.Windows.Forms.TreeViewEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.AfterCheck" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnAfterCollapse(System.Windows.Forms.TreeViewEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnAfterExpand(System.Windows.Forms.TreeViewEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.AfterExpand" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.AfterLabelEdit" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnBeforeCheck(System.Windows.Forms.TreeViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeLabelEdit" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.NodeLabelEditEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnBeforeSelect(System.Windows.Forms.TreeViewCancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.DrawNode" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.DrawTreeNodeEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnHandleCreated(System.EventArgs)">
      <summary>Overrides <see cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnHandleDestroyed(System.EventArgs)">
      <summary>Overrides <see cref="M:System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.ItemDrag" /> event.</summary>
      <param name="e">An <see cref="T:System.Windows.Forms.ItemDragEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>Overrides <see cref="M:System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnMouseHover(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseHover" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnMouseLeave(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseLeave" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnNodeMouseClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.NodeMouseClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnNodeMouseDoubleClick(System.Windows.Forms.TreeNodeMouseClickEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.NodeMouseDoubleClick" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeNodeMouseClickEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnNodeMouseHover(System.Windows.Forms.TreeNodeMouseHoverEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.NodeMouseHover" /> event. </summary>
      <param name="e">The <see cref="T:System.Windows.Forms.TreeNodeMouseHoverEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.TreeView.OnRightToLeftLayoutChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Padding">
      <summary>Gets or sets the spacing between the <see cref="T:System.Windows.Forms.TreeView" /> control's contents and its edges.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> indicating the space between the control edges and its contents.</returns>
    </member>
    <member name="E:System.Windows.Forms.TreeView.PaddingChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TreeView.Padding" /> property changes.</summary>
    </member>
    <member name="E:System.Windows.Forms.TreeView.Paint">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.TreeView" /> is drawn.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.PathSeparator">
      <summary>Gets or sets the delimiter string that the tree node path uses.</summary>
      <returns>The delimiter string that the tree node <see cref="P:System.Windows.Forms.TreeNode.FullPath" /> property uses. The default is the backslash character (\).</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.RightToLeftLayout">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.TreeView" /> should be laid out from right-to-left.</summary>
      <returns>true to indicate the control should be laid out from right-to-left; otherwise, false. The default is false.</returns>
    </member>
    <member name="E:System.Windows.Forms.TreeView.RightToLeftLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Scrollable">
      <summary>Gets or sets a value indicating whether the tree view control displays scroll bars when they are needed.</summary>
      <returns>true if the tree view control displays scroll bars when they are needed; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.SelectedImageIndex">
      <summary>Gets or sets the image list index value of the image that is displayed when a tree node is selected.</summary>
      <returns>A zero-based index value that represents the position of an <see cref="T:System.Drawing.Image" /> in an <see cref="T:System.Windows.Forms.ImageList" />.</returns>
      <exception cref="T:System.ArgumentException">The index assigned value is less than zero. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.SelectedImageKey">
      <summary>Gets or sets the key of the default image shown when a <see cref="T:System.Windows.Forms.TreeNode" /> is in a selected state.</summary>
      <returns>The key of the default image shown when a <see cref="T:System.Windows.Forms.TreeNode" /> is in a selected state.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.SelectedNode">
      <summary>Gets or sets the tree node that is currently selected in the tree view control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that is currently selected in the tree view control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ShowLines">
      <summary>Gets or sets a value indicating whether lines are drawn between tree nodes in the tree view control.</summary>
      <returns>true if lines are drawn between tree nodes in the tree view control; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ShowNodeToolTips">
      <summary>Gets or sets a value indicating ToolTips are shown when the mouse pointer hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <returns>true if ToolTips are shown when the mouse pointer hovers over a <see cref="T:System.Windows.Forms.TreeNode" />; otherwise, false. The default is false.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ShowPlusMinus">
      <summary>Gets or sets a value indicating whether plus-sign (+) and minus-sign (-) buttons are displayed next to tree nodes that contain child tree nodes.</summary>
      <returns>true if plus sign and minus sign buttons are displayed next to tree nodes that contain child tree nodes; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.ShowRootLines">
      <summary>Gets or sets a value indicating whether lines are drawn between the tree nodes that are at the root of the tree view.</summary>
      <returns>true if lines are drawn between the tree nodes that are at the root of the tree view; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.Sort">
      <summary>Sorts the items in <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Sorted">
      <summary>Gets or sets a value indicating whether the tree nodes in the tree view are sorted.</summary>
      <returns>true if the tree nodes in the tree view are sorted; otherwise, false. The default is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.StateImageList">
      <summary>Gets or sets the image list used for indicating the state of the <see cref="T:System.Windows.Forms.TreeView" /> and its nodes.</summary>
      <returns>The <see cref="T:System.Windows.Forms.ImageList" /> used for indicating the state of the <see cref="T:System.Windows.Forms.TreeView" /> and its nodes.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.Text">
      <summary>Gets or sets the text of the <see cref="T:System.Windows.Forms.TreeView" />.</summary>
      <returns>Null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.TreeView.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TreeView.Text" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.TopNode">
      <summary>Gets or sets the first fully-visible tree node in the tree view control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeNode" /> that represents the first fully-visible tree node in the tree view control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.ToString">
      <summary>Overrides <see cref="M:System.ComponentModel.Component.ToString" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeView.TreeViewNodeSorter">
      <summary>Gets or sets the implementation of <see cref="T:System.Collections.IComparer" /> to perform a custom sort of the <see cref="T:System.Windows.Forms.TreeView" /> nodes.</summary>
      <returns>The <see cref="T:System.Collections.IComparer" /> to perform the custom sort.</returns>
      <filterpriority>2</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.TreeView.VisibleCount">
      <summary>Gets the number of tree nodes that can be fully visible in the tree view control.</summary>
      <returns>The number of <see cref="T:System.Windows.Forms.TreeNode" /> items that can be fully visible in the <see cref="T:System.Windows.Forms.TreeView" /> control.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.TreeView.WndProc(System.Windows.Forms.Message@)">
      <summary>Overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.TreeViewAction">
      <summary>Specifies the action that raised a <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.TreeViewAction.Unknown">
      <summary>The action that caused the event is unknown.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewAction.ByKeyboard">
      <summary>The event was caused by a keystroke.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewAction.ByMouse">
      <summary>The event was caused by a mouse operation.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewAction.Collapse">
      <summary>The event was caused by the <see cref="T:System.Windows.Forms.TreeNode" /> collapsing.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewAction.Expand">
      <summary>The event was caused by the <see cref="T:System.Windows.Forms.TreeNode" /> expanding.</summary>
    </member>
    <member name="T:System.Windows.Forms.TreeViewCancelEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" />, <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />, <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" />, and <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" /> events of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeViewCancelEventArgs.#ctor(System.Windows.Forms.TreeNode,System.Boolean,System.Windows.Forms.TreeViewAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> class with the specified tree node, a value specifying whether the event is to be canceled, and the type of tree view action that raised the event.</summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> that the event is responding to. </param>
      <param name="cancel">true to cancel the event; otherwise, false. </param>
      <param name="action">One of the <see cref="T:System.Windows.Forms.TreeViewAction" /> values indicating the type of action that raised the event. </param>
    </member>
    <member name="P:System.Windows.Forms.TreeViewCancelEventArgs.Action">
      <summary>Gets the type of <see cref="T:System.Windows.Forms.TreeView" /> action that raised the event.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.TreeViewAction" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeViewCancelEventArgs.Node">
      <summary>Gets the tree node to be checked, expanded, collapsed, or selected.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> to be checked, expanded, collapsed, or selected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeViewCancelEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.TreeView.BeforeCheck" />, <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" />, <see cref="E:System.Windows.Forms.TreeView.BeforeExpand" />, or <see cref="E:System.Windows.Forms.TreeView.BeforeSelect" /> event of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeViewDrawMode">
      <summary>Defines constants that represent the ways a <see cref="T:System.Windows.Forms.TreeView" /> can be drawn.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.TreeViewDrawMode.Normal">
      <summary>The <see cref="T:System.Windows.Forms.TreeView" /> is drawn by the operating system.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewDrawMode.OwnerDrawText">
      <summary>The label portion of the <see cref="T:System.Windows.Forms.TreeView" /> nodes are drawn manually. Other node elements are drawn by the operating system, including icons, checkboxes, plus and minus signs, and lines connecting the nodes.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewDrawMode.OwnerDrawAll">
      <summary>All elements of a <see cref="T:System.Windows.Forms.TreeView" /> node are drawn manually, including icons, checkboxes, plus and minus signs, and lines connecting the nodes.</summary>
    </member>
    <member name="T:System.Windows.Forms.TreeViewEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />, <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />, <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />, or <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> events of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeViewEventArgs.#ctor(System.Windows.Forms.TreeNode)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> class for the specified tree node.</summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> that the event is responding to. </param>
    </member>
    <member name="M:System.Windows.Forms.TreeViewEventArgs.#ctor(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeViewAction)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> class for the specified tree node and with the specified type of action that raised the event.</summary>
      <param name="node">The <see cref="T:System.Windows.Forms.TreeNode" /> that the event is responding to. </param>
      <param name="action">The type of <see cref="T:System.Windows.Forms.TreeViewAction" /> that raised the event. </param>
    </member>
    <member name="P:System.Windows.Forms.TreeViewEventArgs.Action">
      <summary>Gets the type of action that raised the event.</summary>
      <returns>The type of <see cref="T:System.Windows.Forms.TreeViewAction" /> that raised the event.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeViewEventArgs.Node">
      <summary>Gets the tree node that has been checked, expanded, collapsed, or selected.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> that has been checked, expanded, collapsed, or selected.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeViewEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.TreeView.AfterCheck" />, <see cref="E:System.Windows.Forms.TreeView.AfterCollapse" />, <see cref="E:System.Windows.Forms.TreeView.AfterExpand" />, or <see cref="E:System.Windows.Forms.TreeView.AfterSelect" /> event of a <see cref="T:System.Windows.Forms.TreeView" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeViewHitTestInfo">
      <summary>Contains information about an area of a <see cref="T:System.Windows.Forms.TreeView" /> control or a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeViewHitTestInfo.#ctor(System.Windows.Forms.TreeNode,System.Windows.Forms.TreeViewHitTestLocations)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewHitTestInfo" /> class. </summary>
      <param name="hitNode">The tree node located at the position indicated by the hit test.</param>
      <param name="hitLocation">One of the <see cref="T:System.Windows.Forms.TreeViewHitTestLocations" /> values.</param>
    </member>
    <member name="P:System.Windows.Forms.TreeViewHitTestInfo.Location">
      <summary>Gets the location of a hit test on a <see cref="T:System.Windows.Forms.TreeView" /> control, in relation to the <see cref="T:System.Windows.Forms.TreeView" /> and the nodes it contains.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.TreeViewHitTestLocations" /> values.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TreeViewHitTestInfo.Node">
      <summary>Gets the <see cref="T:System.Windows.Forms.TreeNode" /> at the position indicated by a hit test of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <returns>The <see cref="T:System.Windows.Forms.TreeNode" /> at the position indicated by a hit test of a <see cref="T:System.Windows.Forms.TreeView" /> control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TreeViewHitTestLocations">
      <summary>Defines constants that represent areas of a <see cref="T:System.Windows.Forms.TreeView" /> or <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.None">
      <summary>A position in the client area of the <see cref="T:System.Windows.Forms.TreeView" /> control, but not on a node or a portion of a node.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.Image">
      <summary>A position within the bounds of an image contained on a <see cref="T:System.Windows.Forms.TreeView" /> or <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.Label">
      <summary>A position on the text portion of a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.Indent">
      <summary>A position in the indentation area for a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.AboveClientArea">
      <summary>A position above the client portion of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.BelowClientArea">
      <summary>A position below the client portion of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.LeftOfClientArea">
      <summary>A position to the left of the client area of a <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.RightOfClientArea">
      <summary>A position to the right of the client area of the <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.RightOfLabel">
      <summary>A position to the right of the text area of a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.StateImage">
      <summary>A position within the bounds of a state image for a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="F:System.Windows.Forms.TreeViewHitTestLocations.PlusMinus">
      <summary>A position on the plus/minus area of a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="T:System.Windows.Forms.TreeViewImageIndexConverter">
      <summary>Provides a type converter to convert data for an image index to and from one data type to another for use by the <see cref="T:System.Windows.Forms.TreeView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageIndexConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewImageIndexConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageIndexConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageIndexConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <param name="context"></param>
      <param name="culture"></param>
      <param name="value"></param>
      <param name="destinationType"></param>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageIndexConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <param name="context"></param>
    </member>
    <member name="P:System.Windows.Forms.TreeViewImageIndexConverter.IncludeNoneAsStandardValue">
      <summary>Gets a value indicating null is valid in the <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection" /> collection.</summary>
      <returns>true if null is valid in the standard values collection; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.TreeViewImageKeyConverter">
      <summary>Provides a type converter to convert data for an image key to and from another data type.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageKeyConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TreeViewImageKeyConverter" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.TreeViewImageKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the specified object to an object of the specified type using the specified culture information and context.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted <paramref name="value" />.</returns>
      <param name="context">A <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context, which can be used to extract additional information about the environment this type converter is being invoked from. This parameter or properties of this parameter can be null.</param>
      <param name="culture">A <see cref="T:System.Globalization.CultureInfo" /> that provides locale information.</param>
      <param name="value">The object to convert, typically an image key.</param>
      <param name="destinationType">The type to convert the object to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null. </exception>
      <exception cref="T:System.NotSupportedException">The specified <paramref name="value" /> cannot be converted to the specified <paramref name="destinationType" />.</exception>
    </member>
    <member name="T:System.Windows.Forms.TypeValidationEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" /> event. </summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.TypeValidationEventArgs.#ctor(System.Type,System.Boolean,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.TypeValidationEventArgs" /> class.</summary>
      <param name="validatingType">The <see cref="T:System.Type" /> that the formatted input string was being validated against. </param>
      <param name="isValidInput">A <see cref="T:System.Boolean" /> value indicating whether the formatted string was successfully converted to the validating type. </param>
      <param name="returnValue">An <see cref="T:System.Object" /> that is the result of the formatted string being converted to the target type. </param>
      <param name="message">A <see cref="T:System.String" /> containing a description of the conversion process. </param>
    </member>
    <member name="P:System.Windows.Forms.TypeValidationEventArgs.Cancel">
      <summary>Gets or sets a value indicating whether the event should be canceled.</summary>
      <returns>true if the event should be canceled and focus retained by the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control; otherwise, false to continue validation processing.</returns>
    </member>
    <member name="P:System.Windows.Forms.TypeValidationEventArgs.IsValidInput">
      <summary>Gets a value indicating whether the formatted input string was successfully converted to the validating type.</summary>
      <returns>true if the formatted input string can be converted into the type specified by the <see cref="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType" /> property; otherwise, false. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TypeValidationEventArgs.Message">
      <summary>Gets a text message describing the conversion process.</summary>
      <returns>A <see cref="T:System.String" /> containing a description of the conversion process.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TypeValidationEventArgs.ReturnValue">
      <summary>Gets the object that results from the conversion of the formatted input string.</summary>
      <returns>If the validation is successful, an <see cref="T:System.Object" /> that represents the converted type; otherwise, null. </returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.TypeValidationEventArgs.ValidatingType">
      <summary>Gets the type that the formatted input string is being validated against.</summary>
      <returns>The target <see cref="T:System.Type" /> of the conversion process. This should never be null.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.TypeValidationEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted" /> event of the <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.TypeValidationEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.UICues">
      <summary>Specifies the state of the user interface.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.UICues.ShowFocus">
      <summary>Focus rectangles are displayed after the change.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.ShowKeyboard">
      <summary>Keyboard cues are underlined after the change.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.Shown">
      <summary>Focus rectangles are displayed and keyboard cues are underlined after the change.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.ChangeFocus">
      <summary>The state of the focus cues has changed.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.ChangeKeyboard">
      <summary>The state of the keyboard cues has changed.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.Changed">
      <summary>The state of the focus cues and keyboard cues has changed.</summary>
    </member>
    <member name="F:System.Windows.Forms.UICues.None">
      <summary>No change was made.</summary>
    </member>
    <member name="T:System.Windows.Forms.UICuesEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UICuesEventArgs.#ctor(System.Windows.Forms.UICues)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.UICuesEventArgs" /> class with the specified <see cref="T:System.Windows.Forms.UICues" />.</summary>
      <param name="uicues">A bitwise combination of the <see cref="T:System.Windows.Forms.UICues" /> values. </param>
    </member>
    <member name="P:System.Windows.Forms.UICuesEventArgs.Changed">
      <summary>Gets the bitwise combination of the <see cref="T:System.Windows.Forms.UICues" /> values.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.UICues" /> values. The default is <see cref="F:System.Windows.Forms.UICues.Changed" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UICuesEventArgs.ChangeFocus">
      <summary>Gets a value indicating whether the state of the focus cues has changed.</summary>
      <returns>true if the state of the focus cues has changed; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UICuesEventArgs.ChangeKeyboard">
      <summary>Gets a value indicating whether the state of the keyboard cues has changed.</summary>
      <returns>true if the state of the keyboard cues has changed; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UICuesEventArgs.ShowFocus">
      <summary>Gets a value indicating whether focus rectangles are shown after the change.</summary>
      <returns>true if focus rectangles are shown after the change; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UICuesEventArgs.ShowKeyboard">
      <summary>Gets a value indicating whether keyboard cues are underlined after the change.</summary>
      <returns>true if keyboard cues are underlined after the change; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.UICuesEventHandler">
      <summary>Represents a method that will handle the <see cref="E:System.Windows.Forms.Control.ChangeUICues" /> event of a <see cref="T:System.Windows.Forms.Control" />.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.UICuesEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.UnhandledExceptionMode">
      <summary>Defines where a Windows Forms application should send unhandled exceptions.</summary>
    </member>
    <member name="F:System.Windows.Forms.UnhandledExceptionMode.Automatic">
      <summary>Route all exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler, unless the application's configuration file specifies otherwise.</summary>
    </member>
    <member name="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException">
      <summary>Never route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler. Ignore the application configuration file.</summary>
    </member>
    <member name="F:System.Windows.Forms.UnhandledExceptionMode.CatchException">
      <summary>Always route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler. Ignore the application configuration file.</summary>
    </member>
    <member name="T:System.Windows.Forms.UpDownBase">
      <summary>Implements the basic functionality required by a spin box (also known as an up-down control).</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.UpDownBase" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.AutoScroll">
      <summary>Gets a value indicating whether the container will allow the user to scroll to any controls placed outside of its visible boundaries.</summary>
      <returns>false in all cases.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.AutoScrollMargin">
      <summary>Gets or sets the size of the auto-scroll margin.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the height and width, in pixels, of the auto-scroll margin.</returns>
      <exception cref="T:System.ArgumentException">The <see cref="P:System.Drawing.Size.Height" /> or <see cref="P:System.Drawing.Size.Width" /> is less than 0.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.AutoScrollMinSize">
      <summary>Gets or sets the minimum size of the auto-scroll area.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that represents the minimum height and width, in pixels, of the scroll bars.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.AutoSize">
      <summary>Gets or sets a value indicating whether the control should automatically resize based on its contents.</summary>
      <returns>true to indicate the control should automatically resize based on its contents; otherwise, false.</returns>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.UpDownBase.AutoSize" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.BackColor">
      <summary>Gets or sets the background color for the text box portion of the spin box (also known as an up-down control).</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the text box portion of the spin box.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.BackgroundImage">
      <summary>Gets or sets the background image for the <see cref="T:System.Windows.Forms.UpDownBase" />.</summary>
      <returns>The background image for the <see cref="T:System.Windows.Forms.UpDownBase" />.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout">
      <summary>Gets or sets the layout of the <see cref="P:System.Windows.Forms.UpDownBase.BackgroundImage" /> of the <see cref="T:System.Windows.Forms.UpDownBase" />.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ImageLayout" /> values.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.UpDownBase.BackgroundImageLayout" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.BorderStyle">
      <summary>Gets or sets the border style for the spin box (also known as an up-down control).</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default value is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.ChangingText">
      <summary>Gets or sets a value indicating whether the text property is being changed internally by its parent class.</summary>
      <returns>true if the <see cref="P:System.Windows.Forms.UpDownBase.Text" /> property is being changed internally by the <see cref="T:System.Windows.Forms.UpDownBase" /> class; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.ContextMenu">
      <summary>Gets or sets the shortcut menu associated with the spin box (also known as an up-down control).</summary>
      <returns>The <see cref="T:System.Windows.Forms.ContextMenu" /> associated with the spin box.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.ContextMenuStrip">
      <summary>Gets or sets the shortcut menu for the spin box (also known as an up-down control).</summary>
      <returns>The <see cref="T:System.Windows.Forms.ContextMenuStrip" /> associated with the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>The creation parameters.</returns>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.DockPadding">
      <summary>Gets the dock padding settings for all edges of the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <returns>The dock paddings settings for this control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.DownButton">
      <summary>When overridden in a derived class, handles the clicking of the down button on the spin box (also known as an up-down control).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.Focused">
      <summary>Returns true if this control has focus.</summary>
      <returns>true if the control has focus; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.ForeColor">
      <summary>Gets or sets the foreground color of the spin box (also known as an up-down control).</summary>
      <returns>The foreground <see cref="T:System.Drawing.Color" /> of the spin box.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.InterceptArrowKeys">
      <summary>Gets or sets a value indicating whether the user can use the UP ARROW and DOWN ARROW keys to select values.</summary>
      <returns>true if the control allows the use of the UP ARROW and DOWN ARROW keys to select values; otherwise, false. The default value is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.MaximumSize">
      <summary>Gets or sets the maximum size of the spin box (also known as an up-down control).</summary>
      <returns>The <see cref="T:System.Drawing.Size" />, which is the maximum size of the spin box.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.MinimumSize">
      <summary>Gets or sets the minimum size of the spin box (also known as an up-down control).</summary>
      <returns>The <see cref="T:System.Drawing.Size" />, which is the minimum size of the spin box.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.MouseEnter">
      <summary>Occurs when the mouse pointer enters the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.MouseHover">
      <summary>Occurs when the mouse pointer rests on the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UpDownBase.MouseMove">
      <summary>Occurs when the user moves the mouse pointer over the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnChanged(System.Object,System.EventArgs)">
      <summary>When overridden in a derived class, raises the Changed event.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnHandleDestroyed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnLayout(System.Windows.Forms.LayoutEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Layout" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.LayoutEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseDown" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseUp" /> event. </summary>
      <param name="mevent">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.MouseWheel" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Paint" /> event. </summary>
      <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" />  that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyDown" /> event.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnTextBoxKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.KeyPress" /> event.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.KeyPressEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnTextBoxLostFocus(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.LostFocus" /> event.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnTextBoxResize(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.OnTextBoxTextChanged(System.Object,System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</summary>
      <param name="source">The source of the event. </param>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.PreferredHeight">
      <summary>Gets the height of the spin box (also known as an up-down control).</summary>
      <returns>The height, in pixels, of the spin box.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.ReadOnly">
      <summary>Gets or sets a value indicating whether the text can be changed by the use of the up or down buttons only.</summary>
      <returns>true if the text can be changed by the use of the up or down buttons only; otherwise, false. The default value is false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.Select(System.Int32,System.Int32)">
      <summary>Selects a range of text in the spin box (also known as an up-down control) specifying the starting position and number of characters to select.</summary>
      <param name="start">The position of the first character to be selected. </param>
      <param name="length">The total number of characters to be selected. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.Text">
      <summary>Gets or sets the text displayed in the spin box (also known as an up-down control).</summary>
      <returns>The string value displayed in the spin box.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.TextAlign">
      <summary>Gets or sets the alignment of the text in the spin box (also known as an up-down control).</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. The default value is <see cref="F:System.Windows.Forms.HorizontalAlignment.Left" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.HorizontalAlignment" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.UpButton">
      <summary>When overridden in a derived class, handles the clicking of the up button on the spin box (also known as an up-down control).</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.UpdateEditText">
      <summary>When overridden in a derived class, updates the text displayed in the spin box (also known as an up-down control).</summary>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.UpDownAlign">
      <summary>Gets or sets the alignment of the up and down buttons on the spin box (also known as an up-down control).</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values. The default value is <see cref="F:System.Windows.Forms.LeftRightAlignment.Right" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The value assigned is not one of the <see cref="T:System.Windows.Forms.LeftRightAlignment" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UpDownBase.UserEdit">
      <summary>Gets or sets a value indicating whether a value has been entered by the user.</summary>
      <returns>true if the user has changed the <see cref="P:System.Windows.Forms.UpDownBase.Text" /> property; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.ValidateEditText">
      <summary>When overridden in a derived class, validates the text displayed in the spin box (also known as an up-down control).</summary>
    </member>
    <member name="M:System.Windows.Forms.UpDownBase.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.UpDownEventArgs">
      <summary>Provides data for controls that derive from the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UpDownEventArgs.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.UpDownEventArgs" /> class</summary>
      <param name="buttonPushed">The button that was clicked on the <see cref="T:System.Windows.Forms.UpDownBase" /> control.</param>
    </member>
    <member name="P:System.Windows.Forms.UpDownEventArgs.ButtonID">
      <summary>Gets a value that represents which button the user clicked.</summary>
      <returns>A value that represents which button the user clicked.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.UpDownEventHandler">
      <summary>Represents the method that will handle an event for an internal class.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">An <see cref="T:System.Windows.Forms.UpDownEventArgs" /> that contains the event data.</param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.UserControl">
      <summary>Provides an empty control that can be used to create other controls.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UserControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.UserControl" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.UserControl.AutoSize"></member>
    <member name="E:System.Windows.Forms.UserControl.AutoSizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.UserControl.AutoSize" /> property changes. </summary>
    </member>
    <member name="P:System.Windows.Forms.UserControl.AutoSizeMode">
      <summary>Gets or sets how the control will resize itself. </summary>
      <returns>A value from the <see cref="T:System.Windows.Forms.AutoSizeMode" /> enumeration. The default is <see cref="F:System.Windows.Forms.AutoSizeMode.GrowOnly" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.UserControl.AutoValidate">
      <summary>Gets or sets how the control performs validation when the user changes focus to another control. </summary>
      <returns>A member of the <see cref="T:System.Windows.Forms.AutoValidate" /> enumeration. The default value for <see cref="T:System.Windows.Forms.UserControl" /> is <see cref="F:System.Windows.Forms.AutoValidate.EnablePreventFocusChange" />.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UserControl.AutoValidateChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.UserControl.AutoValidate" /> property changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.UserControl.BorderStyle">
      <summary>Gets or sets the border style of the user control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. The default is <see cref="F:System.Windows.Forms.BorderStyle.Fixed3D" />.</returns>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">The assigned value is not one of the <see cref="T:System.Windows.Forms.BorderStyle" /> values. </exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.UserControl.CreateParams">
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.UserControl.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="E:System.Windows.Forms.UserControl.Load">
      <summary>Occurs before the control becomes visible for the first time.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UserControl.OnCreateControl">
      <summary>Raises the CreateControl event.</summary>
    </member>
    <member name="M:System.Windows.Forms.UserControl.OnLoad(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.UserControl.Load" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UserControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.UserControl.OnResize(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.UserControl.Text">
      <returns>The text associated with this control.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.UserControl.TextChanged">
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.UserControl.ValidateChildren">
      <returns>true if all of the children validated successfully; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
    </member>
    <member name="M:System.Windows.Forms.UserControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)">
      <returns>true if all of the children validated successfully; otherwise, false. If called from the <see cref="E:System.Windows.Forms.Control.Validating" /> or <see cref="E:System.Windows.Forms.Control.Validated" /> event handlers, this method will always return false.</returns>
      <param name="validationConstraints">Places restrictions on which controls have their <see cref="E:System.Windows.Forms.Control.Validating" /> event raised.</param>
    </member>
    <member name="M:System.Windows.Forms.UserControl.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process. </param>
    </member>
    <member name="T:System.Windows.Forms.ValidationConstraints">
      <summary>Defines constants that inform <see cref="M:System.Windows.Forms.ContainerControl.ValidateChildren(System.Windows.Forms.ValidationConstraints)" /> about how it should validate a container's child controls. </summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.None">
      <summary>Validates all child controls, and all children of these child controls, regardless of their property settings. </summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.Selectable">
      <summary>Validates child controls that can be selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.Enabled">
      <summary>Validates child controls whose <see cref="P:System.Windows.Forms.Control.Enabled" /> property is set to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.Visible">
      <summary>Validates child controls whose <see cref="P:System.Windows.Forms.Control.Visible" /> property is set to true.</summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.TabStop">
      <summary>Validates child controls that have a <see cref="P:System.Windows.Forms.Control.TabStop" /> value set, which means that the user can navigate to the control using the TAB key. </summary>
    </member>
    <member name="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren">
      <summary>Validates child controls that are directly hosted within the container. Does not validate any of the children of these children. For example, if you have a <see cref="T:System.Windows.Forms.Form" /> that contains a custom <see cref="T:System.Windows.Forms.UserControl" />, and the <see cref="T:System.Windows.Forms.UserControl" /> contains a <see cref="T:System.Windows.Forms.Button" />, using <see cref="F:System.Windows.Forms.ValidationConstraints.ImmediateChildren" /> will cause the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.UserControl" /> to occur, but not the <see cref="E:System.Windows.Forms.Control.Validating" /> event of the <see cref="T:System.Windows.Forms.Button" />. </summary>
    </member>
    <member name="T:System.Windows.Forms.View">
      <summary>Specifies how list items are displayed in a <see cref="T:System.Windows.Forms.ListView" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.View.LargeIcon">
      <summary>Each item appears as a full-sized icon with a label below it.</summary>
    </member>
    <member name="F:System.Windows.Forms.View.Details">
      <summary>Each item appears on a separate line with further information about each item arranged in columns. The left-most column contains a small icon and label, and subsequent columns contain sub items as specified by the application. A column displays a header which can display a caption for the column. The user can resize each column at run time.</summary>
    </member>
    <member name="F:System.Windows.Forms.View.SmallIcon">
      <summary>Each item appears as a small icon with a label to its right.</summary>
    </member>
    <member name="F:System.Windows.Forms.View.List">
      <summary>Each item appears as a small icon with a label to its right. Items are arranged in columns with no column headers.</summary>
    </member>
    <member name="F:System.Windows.Forms.View.Tile">
      <summary>Each item appears as a full-sized icon with the item label and subitem information to the right of it. The subitem information that appears is specified by the application. This view is available only on Windows XP and the Windows Server 2003 family. On earlier operating systems, this value is ignored and the <see cref="T:System.Windows.Forms.ListView" /> control displays in the <see cref="F:System.Windows.Forms.View.LargeIcon" /> view.</summary>
    </member>
    <member name="T:System.Windows.Forms.VScrollBar">
      <summary>Represents a standard Windows vertical scroll bar.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.VScrollBar.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.VScrollBar" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.VScrollBar.CreateParams">
      <summary>Gets the required creation parameters when the control handle is created.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</returns>
    </member>
    <member name="P:System.Windows.Forms.VScrollBar.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="P:System.Windows.Forms.VScrollBar.RightToLeft">
      <summary>Gets a value indicating whether control's elements are aligned to support locales using right-to-left fonts.</summary>
      <returns>The <see cref="F:System.Windows.Forms.RightToLeft.No" /> value.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.VScrollBar.RightToLeftChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.VScrollBar.RightToLeft" /> property changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.VScrollProperties">
      <summary>Provides basic properties for the <see cref="T:System.Windows.Forms.VScrollBar" /> class.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.VScrollProperties.#ctor(System.Windows.Forms.ScrollableControl)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.VScrollProperties" /> class. </summary>
      <param name="container">A <see cref="T:System.Windows.Forms.ScrollableControl" /> that contains the scroll bar.</param>
    </member>
    <member name="T:System.Windows.Forms.WebBrowser">
      <summary>Enables the user to navigate Web pages inside your form. </summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowser" /> class.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Windows.Forms.WebBrowser" /> control is hosted inside Internet Explorer.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.AllowNavigation">
      <summary>Gets or sets a value indicating whether the control can navigate to another page after its initial page has been loaded.</summary>
      <returns>true if the control can navigate to another page; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.AllowWebBrowserDrop">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.WebBrowser" /> control navigates to documents that are dropped onto it.</summary>
      <returns>true if the control accepts documents that are dropped onto it; otherwise, false. The default is true.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.AttachInterfaces(System.Object)">
      <summary>Called by the control when the underlying ActiveX control is created.</summary>
      <param name="nativeActiveXObject">An object that represents the underlying ActiveX control.</param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.CanGoBack">
      <summary>Gets a value indicating whether a previous page in navigation history is available, which allows the <see cref="M:System.Windows.Forms.WebBrowser.GoBack" /> method to succeed.</summary>
      <returns>true if the control can navigate backward; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.CanGoBackChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.WebBrowser.CanGoBack" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.CanGoForward">
      <summary>Gets a value indicating whether a subsequent page in navigation history is available, which allows the <see cref="M:System.Windows.Forms.WebBrowser.GoForward" /> method to succeed.</summary>
      <returns>true if the control can navigate forward; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.WebBrowser.CanGoForward" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.CreateSink">
      <summary>Associates the underlying ActiveX control with a client that can handle control events.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.CreateWebBrowserSiteBase">
      <summary>Returns a reference to the unmanaged WebBrowser ActiveX control site, which you can extend to customize the managed <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> that represents the WebBrowser ActiveX control site.</returns>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.DefaultSize">
      <summary>Gets the default size of the control.</summary>
      <returns>Gets the default size of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.DetachInterfaces">
      <summary>Called by the control when the underlying ActiveX control is discarded.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.DetachSink">
      <summary>Releases the event-handling client attached in the <see cref="M:System.Windows.Forms.WebBrowser.CreateSink" /> method from the underlying ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.WebBrowser" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.Document">
      <summary>Gets an <see cref="T:System.Windows.Forms.HtmlDocument" /> representing the Web page currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>An <see cref="T:System.Windows.Forms.HtmlDocument" /> representing the current page, or null if no page is loaded.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.DocumentCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control finishes loading a document.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.DocumentStream">
      <summary>Gets or sets a stream containing the contents of the Web page displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>A <see cref="T:System.IO.Stream" /> containing the contents of the current Web page, or null if no page is loaded. The default is null.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.DocumentText">
      <summary>Gets or sets the HTML contents of the page displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>The HTML text of the displayed page, or the empty string ("") if no document is loaded.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.DocumentTitle">
      <summary>Gets the title of the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>The title of the current document, or the empty string ("") if no document is loaded.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.WebBrowser.DocumentTitle" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.DocumentType">
      <summary>Gets the type of the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>The type of the current document.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.EncryptionLevel">
      <summary>Gets a value indicating the encryption method used by the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.WebBrowserEncryptionLevel" /> values.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control navigates to or away from a Web site that uses encryption.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.FileDownload">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control downloads a file.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.Focused">
      <summary>Gets a value indicating whether the control or any of its child windows has input focus.</summary>
      <returns>true if the control or any of its child windows has input focus; otherwise, false.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.GoBack">
      <summary>Navigates the <see cref="T:System.Windows.Forms.WebBrowser" /> control to the previous page in the navigation history, if one is available.</summary>
      <returns>true if the navigation succeeds; false if a previous page in the navigation history is not available.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.GoForward">
      <summary>Navigates the <see cref="T:System.Windows.Forms.WebBrowser" /> control to the next page in the navigation history, if one is available.</summary>
      <returns>true if the navigation succeeds; false if a subsequent page in the navigation history is not available.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.GoHome">
      <summary>Navigates the <see cref="T:System.Windows.Forms.WebBrowser" /> control to the home page of the current user.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.GoSearch">
      <summary>Navigates the <see cref="T:System.Windows.Forms.WebBrowser" /> control to the default search page of the current user.</summary>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.IsBusy">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.WebBrowser" /> control is currently loading a new document.</summary>
      <returns>true if the control is busy loading a document; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.IsOffline">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.WebBrowser" /> control is in offline mode.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.WebBrowser" /> control is in offline mode; otherwise, false.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.IsWebBrowserContextMenuEnabled">
      <summary>Gets or a sets a value indicating whether the shortcut menu of the <see cref="T:System.Windows.Forms.WebBrowser" /> control is enabled.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.WebBrowser" /> control shortcut menu is enabled; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.String)">
      <summary>Loads the document at the specified Uniform Resource Locator (URL) into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, replacing the previous document.</summary>
      <param name="urlString">The URL of the document to load.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.Boolean)">
      <summary>Loads the document at the specified Uniform Resource Locator (URL) into a new browser window or into the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="urlString">The URL of the document to load.</param>
      <param name="newWindow">true to load the document into a new browser window; false to load the document into the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String)">
      <summary>Loads the document at the specified Uniform Resource Locator (URL) into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, replacing the contents of the Web page frame with the specified name.</summary>
      <param name="urlString">The URL of the document to load.</param>
      <param name="targetFrameName">The name of the frame in which to load the document.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.String,System.String,System.Byte[],System.String)">
      <summary>Loads the document at the specified Uniform Resource Locator (URL) into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, requesting it using the specified HTTP data and replacing the contents of the Web page frame with the specified name.</summary>
      <param name="urlString">The URL of the document to load.</param>
      <param name="targetFrameName">The name of the frame in which to load the document.</param>
      <param name="postData">HTTP POST data such as form data.</param>
      <param name="additionalHeaders">HTTP headers to add to the default headers.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri)">
      <summary>Loads the document at the location indicated by the specified <see cref="T:System.Uri" /> into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, replacing the previous document.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the URL of the document to load. </param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="url" /> parameter value does not represent an absolute URI. For more information, see <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.Boolean)">
      <summary>Loads the document at the location indicated by the specified <see cref="T:System.Uri" /> into a new browser window or into the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the URL of the document to load.</param>
      <param name="newWindow">true to load the document into a new browser window; false to load the document into the <see cref="T:System.Windows.Forms.WebBrowser" /> control. </param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="url" /> parameter value does not represent an absolute URI. For more information, see <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String)">
      <summary>Loads the document at the location indicated by the specified <see cref="T:System.Uri" /> into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, replacing the contents of the Web page frame with the specified name.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the URL of the document to load.</param>
      <param name="targetFrameName">The name of the frame in which to load the document. </param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="url" /> parameter value does not represent an absolute URI. For more information, see <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Navigate(System.Uri,System.String,System.Byte[],System.String)">
      <summary>Loads the document at the location indicated by the specified <see cref="T:System.Uri" /> into the <see cref="T:System.Windows.Forms.WebBrowser" /> control, requesting it using the specified HTTP data and replacing the contents of the Web page frame with the specified name.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the URL of the document to load.</param>
      <param name="targetFrameName">The name of the frame in which to load the document.</param>
      <param name="postData">HTTP POST data such as form data.</param>
      <param name="additionalHeaders">HTTP headers to add to the default headers.</param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="url" /> parameter value does not represent an absolute URI. For more information, see <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.Navigated">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated to a new document and has begun loading it.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.Navigating">
      <summary>Occurs before the <see cref="T:System.Windows.Forms.WebBrowser" /> control navigates to a new document.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.NewWindow">
      <summary>Occurs before a new browser window is opened.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.ObjectForScripting">
      <summary>Gets or sets an object that can be accessed by scripting code that is contained within a Web page displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>The object being made available to the scripting code.</returns>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is an instance of a non-public type.-or-The specified value when setting this property is an instance of a type that is not COM-visible. For more information, see <see cref="M:System.Runtime.InteropServices.Marshal.IsTypeVisibleFromCom(System.Type)" />.</exception>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnCanGoBackChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.CanGoBackChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnCanGoForwardChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.CanGoForwardChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnDocumentCompleted(System.Windows.Forms.WebBrowserDocumentCompletedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> that contains the event data. </param>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnDocumentTitleChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.DocumentTitleChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnEncryptionLevelChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.EncryptionLevelChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnFileDownload(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.FileDownload" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnNavigated(System.Windows.Forms.WebBrowserNavigatedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.Navigated" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnNavigating(System.Windows.Forms.WebBrowserNavigatingEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.Navigating" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnNewWindow(System.ComponentModel.CancelEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.NewWindow" /> event.</summary>
      <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnProgressChanged(System.Windows.Forms.WebBrowserProgressChangedEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.OnStatusTextChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.WebBrowser.StatusTextChanged" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.Padding">
      <summary>This property is not meaningful for this control.</summary>
      <returns>
        <see cref="F:System.Windows.Forms.Padding.Empty" />
      </returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.PaddingChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.WebBrowser.Padding" /> property changes.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Print">
      <summary>Prints the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control using the current print and page settings.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.ProgressChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has updated information on the download progress of a document it is navigating to.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.ReadyState">
      <summary>Gets a value indicating the current state of the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.WebBrowserReadyState" /> values.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Refresh">
      <summary>Reloads the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control by checking the server for an updated version.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Refresh(System.Windows.Forms.WebBrowserRefreshOption)">
      <summary>Reloads the document currently displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control using the specified refresh options.</summary>
      <param name="opt">One of the <see cref="T:System.Windows.Forms.WebBrowserRefreshOption" /> values. </param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.ScriptErrorsSuppressed">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.WebBrowser" /> displays dialog boxes such as script error messages.</summary>
      <returns>true if the control does not display its dialog boxes; otherwise, false. The default is false.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.ScrollBarsEnabled">
      <summary>Gets or sets a value indicating whether scroll bars are displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>true if scroll bars are displayed in the control; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.ShowPageSetupDialog">
      <summary>Opens the Internet Explorer Page Setup dialog box.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.ShowPrintDialog">
      <summary>Opens the Internet Explorer Print dialog box without setting header and footer values.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.ShowPrintPreviewDialog">
      <summary>Opens the Internet Explorer Print Preview dialog box.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.ShowPropertiesDialog">
      <summary>Opens the Internet Explorer Properties dialog box for the current document.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.ShowSaveAsDialog">
      <summary>Opens the Internet Explorer Save Web Page dialog box or the Save dialog box of the hosted document if it is not an HTML page.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.StatusText">
      <summary>Gets the status text of the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>The status text.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="E:System.Windows.Forms.WebBrowser.StatusTextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.WebBrowser.StatusText" /> property value changes.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.Stop">
      <summary>Cancels any pending navigation and stops any dynamic page elements, such as background sounds and animations.</summary>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.Url">
      <summary>Gets or sets the URL of the current document.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the URL of the current document.</returns>
      <exception cref="T:System.ObjectDisposedException">This <see cref="T:System.Windows.Forms.WebBrowser" /> instance is no longer valid.</exception>
      <exception cref="T:System.InvalidOperationException">A reference to an implementation of the IWebBrowser2 interface could not be retrieved from the underlying ActiveX WebBrowser control.</exception>
      <exception cref="T:System.ArgumentException">The specified value when setting this property is not an absolute URI. For more information, see <see cref="P:System.Uri.IsAbsoluteUri" />.</exception>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.Version">
      <summary>Gets the version of Internet Explorer installed.</summary>
      <returns>A <see cref="T:System.Version" /> object representing the version of Internet Explorer installed.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowser.WebBrowserShortcutsEnabled">
      <summary>Gets or sets a value indicating whether keyboard shortcuts are enabled within the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <returns>true if keyboard shortcuts are enabled within the control; otherwise, false. The default is true.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.WndProc(System.Windows.Forms.Message@)">
      <param name="m">The windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.WebBrowser.WebBrowserSite">
      <summary>Represents the host window of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowser.WebBrowserSite.#ctor(System.Windows.Forms.WebBrowser)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> class. </summary>
      <param name="host">The <see cref="T:System.Windows.Forms.WebBrowser" /></param>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserBase">
      <summary>Provides a wrapper for a generic ActiveX control for use as a base class by the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.ActiveXInstance">
      <summary>Gets the underlying ActiveX WebBrowser control.</summary>
      <returns>An <see cref="T:System.Object" /> representing the underlying ActiveX WebBrowser control.</returns>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.AllowDrop">
      <summary>This property is not supported by this control.</summary>
      <returns>false in all cases.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.AttachInterfaces(System.Object)">
      <summary>Called by the control when the underlying ActiveX control is created.</summary>
      <param name="nativeActiveXObject">An object that represents the underlying ActiveX control.</param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.BackColor">
      <summary>This property is not meaningful for this control.</summary>
      <returns>A <see cref="T:System.Drawing.Color" />.</returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.BackColorChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.BackgroundImage">
      <summary>This property is not supported by this control.</summary>
      <returns>null.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.BackgroundImageChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.BackgroundImageLayout">
      <summary>This property is not supported by this control.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageLayout" />.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.BackgroundImageLayoutChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.BindingContextChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.Click">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.CreateSink">
      <summary>Called by the control to prepare it for listening to events. </summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.CreateWebBrowserSiteBase">
      <summary>Returns a reference to the unmanaged ActiveX control site.</summary>
      <returns>A <see cref="T:System.Windows.Forms.WebBrowserSiteBase" /> that represents the site of the underlying ActiveX control.</returns>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.Cursor">
      <summary>This property is not supported by this control.</summary>
      <returns>The value of this property is not meaningful for this control.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.CursorChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.DefaultSize">
      <returns>The default <see cref="T:System.Drawing.Size" /> of the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.DetachInterfaces">
      <summary>Called by the control when the underlying ActiveX control is discarded.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.DetachSink">
      <summary>Called by the control when it stops listening to events.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.Dispose(System.Boolean)">
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.DoubleClick">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.DragDrop">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.DragEnter">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.DragLeave">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.DragOver">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
      <summary>This method is not supported by this control.</summary>
      <param name="bitmap">A <see cref="T:System.Drawing.Bitmap" />.</param>
      <param name="targetBounds">A <see cref="T:System.Drawing.Rectangle" />. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.Enabled">
      <summary>This property is not supported by this control.</summary>
      <returns>true in all cases.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.EnabledChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.Enter">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.Font">
      <summary>This property is not meaningful for this control.</summary>
      <returns>The value of this property is not meaningful for this control.</returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.FontChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.ForeColor">
      <summary>This property is not meaningful for this control.</summary>
      <returns>The value of this property is not meaningful for this control.</returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.ForeColorChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.GiveFeedback">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.HelpRequested">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.ImeMode">
      <summary>This property is not meaningful for this control.</summary>
      <returns>The value of this property is not meaningful for this control.</returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.ImeModeChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.IsInputChar(System.Char)">
      <returns>true if the character should be sent directly to the control and not preprocessed; otherwise, false.</returns>
      <param name="charCode">The character to test. </param>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.KeyDown">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.KeyPress">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.KeyUp">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.Layout">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.Leave">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseCaptureChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseClick">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseDoubleClick">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseDown">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseEnter">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseHover">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseLeave">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseMove">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseUp">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.MouseWheel">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnBackColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnFontChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnForeColorChanged(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnGotFocus(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
      <exception cref="T:System.Threading.ThreadStateException">The <see cref="P:System.Threading.Thread.ApartmentState" /> property of the application is not set to <see cref="F:System.Threading.ApartmentState.STA" />. </exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnLostFocus(System.EventArgs)">
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnParentChanged(System.EventArgs)">
      <summary>This member overrides <see cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">Unable to get the window handle for the ActiveX control. Windowless ActiveX controls are not supported.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnRightToLeftChanged(System.EventArgs)">
      <summary>This method is not meaningful for this control.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> object.</param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.OnVisibleChanged(System.EventArgs)">
      <summary>This member overrides <see cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data. </param>
      <exception cref="T:System.Reflection.TargetInvocationException">Unable to get the window handle for the ActiveX control. Windowless ActiveX controls are not supported.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.Paint">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.PreProcessMessage(System.Windows.Forms.Message@)">
      <returns>true if the message was processed by the control; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" />, passed by reference, that represents the message to process. The possible values are WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, and WM_SYSCHAR. </param>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.ProcessDialogKey(System.Windows.Forms.Keys)"></member>
    <member name="M:System.Windows.Forms.WebBrowserBase.ProcessMnemonic(System.Char)">
      <returns>true if the character was processed as a mnemonic by the control; otherwise, false.</returns>
      <param name="charCode">The character to process. </param>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.QueryAccessibilityHelp">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.QueryContinueDrag">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.RightToLeft">
      <summary>This property is not supported by this control.</summary>
      <returns>The value of this property is not meaningful for this control.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.RightToLeftChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.Site">
      <returns>The <see cref="T:System.ComponentModel.ISite" /> associated with the <see cref="T:System.Windows.Forms.Control" />, if any.</returns>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.StyleChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.Text">
      <summary>This property is not supported by this control.</summary>
      <returns>
        <see cref="F:System.String.Empty" />.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="E:System.Windows.Forms.WebBrowserBase.TextChanged">
      <summary>This event is not supported by this control.</summary>
      <exception cref="T:System.NotSupportedException">A handler is being added to this event.</exception>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserBase.UseWaitCursor">
      <summary>This property is not supported by this control.</summary>
      <returns>false in all cases.</returns>
      <exception cref="T:System.NotSupportedException">This property is being set.</exception>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserBase.WndProc(System.Windows.Forms.Message@)">
      <summary>This member overrides <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.</summary>
      <param name="m">The windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> class.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the location of the document that was loaded. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs.Url">
      <summary>Gets the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the location of the document that was loaded.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserDocumentCompletedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.WebBrowser.DocumentCompleted" /> event of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserDocumentCompletedEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserEncryptionLevel">
      <summary>Specifies constants that define the encryption methods used by documents displayed in the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Insecure">
      <summary>No security encryption.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Mixed">
      <summary>Multiple security encryption methods in different Web page frames.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Unknown">
      <summary>Unknown security encryption.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Bit40">
      <summary>40-bit security encryption.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Bit56">
      <summary>56-bit security encryption.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Fortezza">
      <summary>Fortezza security encryption.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserEncryptionLevel.Bit128">
      <summary>128-bit security encryption.</summary>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserNavigatedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.WebBrowser.Navigated" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserNavigatedEventArgs.#ctor(System.Uri)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> class.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserNavigatedEventArgs.Url">
      <summary>Gets the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserNavigatedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.WebBrowser.Navigated" /> event of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserNavigatedEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserNavigatingEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.WebBrowser.Navigating" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserNavigatingEventArgs.#ctor(System.Uri,System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> class.</summary>
      <param name="url">A <see cref="T:System.Uri" /> representing the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control is navigating. </param>
      <param name="targetFrameName">The name of the Web page frame in which the new document will be loaded. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserNavigatingEventArgs.TargetFrameName">
      <summary>Gets the name of the Web page frame in which the new document will be loaded.</summary>
      <returns>The name of the frame in which the new document will be loaded.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserNavigatingEventArgs.Url">
      <summary>Gets the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control is navigating.</summary>
      <returns>A <see cref="T:System.Uri" /> representing the location of the document to which the <see cref="T:System.Windows.Forms.WebBrowser" /> control is navigating.</returns>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Net.WebPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserNavigatingEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.WebBrowser.Navigating" /> event of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserNavigatingEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs">
      <summary>Provides data for the <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" /> event.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserProgressChangedEventArgs.#ctor(System.Int64,System.Int64)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> class.</summary>
      <param name="currentProgress">The number of bytes that are loaded already. </param>
      <param name="maximumProgress">The total number of bytes to be loaded. </param>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserProgressChangedEventArgs.CurrentProgress">
      <summary>Gets the number of bytes that have been downloaded.</summary>
      <returns>The number of bytes that have been loaded or -1 to indicate that the download has completed.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:System.Windows.Forms.WebBrowserProgressChangedEventArgs.MaximumProgress">
      <summary>Gets the total number of bytes in the document being loaded.</summary>
      <returns>The total number of bytes to be loaded.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserProgressChangedEventHandler">
      <summary>Represents the method that will handle the <see cref="E:System.Windows.Forms.WebBrowser.ProgressChanged" /> event of a <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <param name="sender">The source of the event. </param>
      <param name="e">A <see cref="T:System.Windows.Forms.WebBrowserProgressChangedEventArgs" /> that contains the event data. </param>
      <filterpriority>2</filterpriority>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserReadyState">
      <summary>Specifies constants that define the state of the <see cref="T:System.Windows.Forms.WebBrowser" /> control.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserReadyState.Uninitialized">
      <summary>No document is currently loaded.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserReadyState.Loading">
      <summary>The control is loading a new document.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserReadyState.Loaded">
      <summary>The control has loaded and initialized the new document, but has not yet received all the document data.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserReadyState.Interactive">
      <summary>The control has loaded enough of the document to allow limited user interaction, such as clicking hyperlinks that have been displayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserReadyState.Complete">
      <summary>The control has finished loading the new document and all its contents.</summary>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserRefreshOption">
      <summary>Specifies constants that define how the <see cref="T:System.Windows.Forms.WebBrowser" /> control can refresh its contents.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserRefreshOption.Normal">
      <summary>A refresh that requests a copy of the current Web page that has been cached on the server.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserRefreshOption.IfExpired">
      <summary>A refresh that requests an update only if the current Web page has expired.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserRefreshOption.Continue">
      <summary>For internal use only; do not use.</summary>
    </member>
    <member name="F:System.Windows.Forms.WebBrowserRefreshOption.Completely">
      <summary>A refresh that requests the latest version of the current Web page.</summary>
    </member>
    <member name="T:System.Windows.Forms.WebBrowserSiteBase">
      <summary>Implements the interfaces of an ActiveX site for use as a base class by the <see cref="T:System.Windows.Forms.WebBrowser.WebBrowserSite" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserSiteBase.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.WebBrowserSiteBase" />. </summary>
    </member>
    <member name="M:System.Windows.Forms.WebBrowserSiteBase.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.WebBrowserSiteBase" /> and optionally releases the managed resources. </summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="T:System.Windows.Forms.WindowsFormsSection">
      <summary>Defines a new <see cref="T:System.Configuration.ConfigurationSection" /> for parsing application settings. This class cannot be inherited. </summary>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WindowsFormsSection" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.WindowsFormsSection.JitDebugging">
      <summary>Gets or sets a value indicating whether just-in-time (JIT) debugging is used.</summary>
      <returns>true if JIT debugging is used; otherwise, false.</returns>
    </member>
    <member name="T:System.Windows.Forms.WindowsFormsSynchronizationContext">
      <summary>Provides a synchronization context for the Windows Forms application model. </summary>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> class. </summary>
    </member>
    <member name="P:System.Windows.Forms.WindowsFormsSynchronizationContext.AutoInstall">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed when a control is created.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> is installed; otherwise, false. The default is true.</returns>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.CreateCopy">
      <summary>Copies the synchronization context.</summary>
      <returns>A copy of the synchronization context.</returns>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Dispose">
      <summary>Releases all resources used by the <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" />. </summary>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Post(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Dispatches an asynchronous message to a synchronization context.</summary>
      <param name="d">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback,System.Object)">
      <summary>Dispatches a synchronous message to a synchronization context</summary>
      <param name="d">The <see cref="T:System.Threading.SendOrPostCallback" /> delegate to call.</param>
      <param name="state">The object passed to the delegate.</param>
      <exception cref="T:System.ComponentModel.InvalidAsynchronousStateException">The destination thread no longer exists.</exception>
    </member>
    <member name="M:System.Windows.Forms.WindowsFormsSynchronizationContext.Uninstall">
      <summary>Uninstalls the currently installed <see cref="T:System.Windows.Forms.WindowsFormsSynchronizationContext" /> and replaces it with the previously installed context.</summary>
    </member>
    <member name="T:System.Windows.Forms.ComponentModel.Com2Interop.Com2Variant">
      <summary>Facilitates proper recognition of a variant type.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.Com2Variant.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.ComponentModel.Com2Interop.Com2Variant" /> class.</summary>
    </member>
    <member name="T:System.Windows.Forms.ComponentModel.Com2Interop.ICom2PropertyPageDisplayService">
      <summary>Defines a method that shows the property page for an ActiveX control.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.ICom2PropertyPageDisplayService.ShowPropertyPage(System.String,System.Object,System.Int32,System.Guid,System.IntPtr)">
      <summary>Shows a property page for the specified object.</summary>
      <param name="title">A string that is the title of the property page.</param>
      <param name="component">The object for which the property page is created.</param>
      <param name="dispid">The DispID of the property that is highlighted when the property page is created.</param>
      <param name="pageGuid">The GUID for the property page.</param>
      <param name="parentHandle">A IntPtr that is the handle of the parent control of the property page.</param>
    </member>
    <member name="T:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser">
      <summary>Allows Visual Studio to communicate internally with the <see cref="T:System.Windows.Forms.PropertyGrid" /> control.</summary>
    </member>
    <member name="E:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.ComComponentNameChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.PropertyGrid" /> control is browsing a COM object and the user renames the object.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.DropDownDone">
      <summary>Closes any open drop-down controls on the <see cref="T:System.Windows.Forms.PropertyGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.EnsurePendingChangesCommitted">
      <summary>Commits all pending changes to the <see cref="T:System.Windows.Forms.PropertyGrid" /> control.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.PropertyGrid" /> successfully commits changes; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.HandleF4">
      <summary>Activates the <see cref="T:System.Windows.Forms.PropertyGrid" /> control when the user chooses Properties for a control in Design view.</summary>
    </member>
    <member name="P:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.InPropertySet">
      <summary>Gets a value indicating whether the <see cref="T:System.Windows.Forms.PropertyGrid" /> control is currently setting one of the properties of its selected object.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.PropertyGrid" /> control is currently setting one of the properties of its selected object; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.LoadState(Microsoft.Win32.RegistryKey)">
      <summary>Loads user states from the registry into the <see cref="T:System.Windows.Forms.PropertyGrid" /> control.</summary>
      <param name="key">The registry key that contains the user states.</param>
    </member>
    <member name="M:System.Windows.Forms.ComponentModel.Com2Interop.IComPropertyBrowser.SaveState(Microsoft.Win32.RegistryKey)">
      <summary>Saves user states from the <see cref="T:System.Windows.Forms.PropertyGrid" /> control to the registry.</summary>
      <param name="key">The registry key that contains the user states.</param>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentEditorForm">
      <summary>Provides a user interface for a <see cref="T:System.Windows.Forms.Design.WindowsFormsComponentEditor" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.#ctor(System.Object,System.Type[])">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" /> class.</summary>
      <param name="component">The component to be edited. </param>
      <param name="pageTypes">The set of <see cref="T:System.Windows.Forms.Design.ComponentEditorPage" /> objects to be shown in the form. </param>
      <exception cref="T:System.ArgumentException">
        <paramref name="component" /> is not an <see cref="T:System.ComponentModel.IComponent" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorForm.AutoSize"></member>
    <member name="E:System.Windows.Forms.Design.ComponentEditorForm.AutoSizeChanged"></member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.OnActivated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Form.Activated" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.OnHelpRequested(System.Windows.Forms.HelpEventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HelpRequested" /> event.</summary>
      <param name="e">A <see cref="T:System.Windows.Forms.HelpEventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.OnSelChangeSelector(System.Object,System.Windows.Forms.TreeViewEventArgs)">
      <summary>Switches between component editor pages.</summary>
      <param name="source">The source of the event.</param>
      <param name="e">A <see cref="T:System.Windows.Forms.TreeViewEventArgs" /> that contains the event data.</param>
      <exception cref="T:System.ComponentModel.Design.CheckoutException">A designer file is checked into source code control and cannot be changed.</exception>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>Provides a method to override in order to preprocess input messages before they are dispatched.</summary>
      <returns>true if the specified message is for a component editor page; otherwise, false.</returns>
      <param name="msg">A <see cref="T:System.Windows.Forms.Message" /> that specifies the message to preprocess. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.ShowForm">
      <summary>Shows the form. The form will have no owner window.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned from the dialog box.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.ShowForm(System.Int32)">
      <summary>Shows the specified page of the specified form. The form will have no owner window.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned from the dialog box.</returns>
      <param name="page">The index of the page to show. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.ShowForm(System.Windows.Forms.IWin32Window)">
      <summary>Shows the form with the specified owner.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned from the dialog box.</returns>
      <param name="owner">The <see cref="T:System.Windows.Forms.IWin32Window" /> to own the dialog. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorForm.ShowForm(System.Windows.Forms.IWin32Window,System.Int32)">
      <summary>Shows the form and the specified page with the specified owner.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned from the dialog box.</returns>
      <param name="owner">The <see cref="T:System.Windows.Forms.IWin32Window" /> to own the dialog. </param>
      <param name="page">The index of the page to show. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.ComponentEditorPage">
      <summary>Provides a base implementation for a <see cref="T:System.Windows.Forms.Design.ComponentEditorPage" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ComponentEditorPage" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.Activate">
      <summary>Activates and displays the page.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.ApplyChanges">
      <summary>Applies changes to all the components being edited.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.AutoSize"></member>
    <member name="E:System.Windows.Forms.Design.ComponentEditorPage.AutoSizeChanged"></member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.CommitOnDeactivate">
      <summary>Specifies whether the editor should apply its changes before it is deactivated.</summary>
      <returns>true if the editor should apply its changes; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.Component">
      <summary>Gets or sets the component to edit.</summary>
      <returns>The <see cref="T:System.ComponentModel.IComponent" /> this page allows you to edit.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.CreateParams">
      <summary>Gets the creation parameters for the control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CreateParams" /> that indicates the creation parameters for the control.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.Deactivate">
      <summary>Deactivates and hides the page.</summary>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.EnterLoadingMode">
      <summary>Increments the loading counter.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.ExitLoadingMode">
      <summary>Decrements the loading counter.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.FirstActivate">
      <summary>Gets or sets a value indicating whether the page is being activated for the first time.</summary>
      <returns>true if the page has not previously been activated; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.GetControl">
      <summary>Gets the control that represents the window for this page.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> that represents the window for this page.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.GetSelectedComponent">
      <summary>Gets the component that is to be edited.</summary>
      <returns>The <see cref="T:System.ComponentModel.IComponent" /> that is to be edited.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.Icon">
      <summary>Gets or sets the icon for the page.</summary>
      <returns>An <see cref="T:System.Drawing.Icon" /> used to represent the page.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.IsFirstActivate">
      <summary>Gets a value indicating whether the page is being activated for the first time.</summary>
      <returns>true if this is the first time the page is being activated; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.IsLoading">
      <summary>Gets a value indicating whether the page is being loaded.</summary>
      <returns>true if the page is being loaded; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.IsPageMessage(System.Windows.Forms.Message@)">
      <summary>Processes messages that could be handled by the page.</summary>
      <returns>true if the page processed the message; otherwise, false.</returns>
      <param name="msg">The message to process. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.LoadComponent">
      <summary>Loads the component into the page user interface (UI).</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.Loading">
      <summary>Indicates how many load dependencies remain until loading has been completed.</summary>
      <returns>The number of remaining load dependencies.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.LoadRequired">
      <summary>Gets or sets a value indicating whether a component must be loaded before editing can occur.</summary>
      <returns>true if a component must be loaded before editing can occur; otherwise, false.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.OnApplyComplete">
      <summary>Called when the page and any sibling pages have applied their changes.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.PageSite">
      <summary>Gets or sets the page site.</summary>
      <returns>The page site.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.ReloadComponent">
      <summary>Reloads the component for the page.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.SaveComponent">
      <summary>Saves the component from the page user interface (UI).</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.SetComponent(System.ComponentModel.IComponent)">
      <summary>Sets the component to be edited.</summary>
      <param name="component">The <see cref="T:System.ComponentModel.IComponent" /> to be edited. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.SetDirty">
      <summary>Sets the page as changed since the last load or save.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.SetSite(System.Windows.Forms.IComponentEditorPageSite)">
      <summary>Sets the site for this page.</summary>
      <param name="site">The site for this page. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.ShowHelp">
      <summary>Shows Help information if the page supports Help information.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ComponentEditorPage.SupportsHelp">
      <summary>Gets a value indicating whether the editor supports Help.</summary>
      <returns>true if the editor supports Help; otherwise, false. The default implementation returns false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ComponentEditorPage.Title">
      <summary>Gets the title of the page.</summary>
      <returns>The title of the page.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.EventsTab">
      <summary>Provides a <see cref="T:System.Windows.Forms.Design.PropertyTab" /> that can display events for selection and linking.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.EventsTab.#ctor(System.IServiceProvider)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.EventsTab" /> class.</summary>
      <param name="sp">An <see cref="T:System.IServiceProvider" /> to use. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventsTab.CanExtend(System.Object)">
      <summary>Gets a value indicating whether the specified object can be extended.</summary>
      <returns>true if the specified object can be extended; otherwise, false.</returns>
      <param name="extendee">The object to test for extensibility. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventsTab.GetDefaultProperty(System.Object)">
      <summary>Gets the default property from the specified object.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> indicating the default property.</returns>
      <param name="obj">The object to retrieve the default property of. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventsTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gets all the properties of the event tab that match the specified attributes and context.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties. This will be an empty <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> if the component does not implement an event service.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain context information. </param>
      <param name="component">The component to retrieve the properties of. </param>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the event properties to retrieve. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.EventsTab.GetProperties(System.Object,System.Attribute[])">
      <summary>Gets all the properties of the event tab that match the specified attributes.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties. This will be an empty <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> if the component does not implement an event service.</returns>
      <param name="component">The component to retrieve the properties of. </param>
      <param name="attributes">An array of <see cref="T:System.Attribute" /> that indicates the attributes of the event properties to retrieve. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.EventsTab.HelpKeyword">
      <summary>Gets the Help keyword for the tab.</summary>
      <returns>The Help keyword for the tab.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.EventsTab.TabName">
      <summary>Gets the name of the tab.</summary>
      <returns>The name of the tab.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IUIService">
      <summary>Enables interaction with the user interface of the development environment object that is hosting the designer.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.CanShowComponentEditor(System.Object)">
      <summary>Indicates whether the component can display a <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />.</summary>
      <returns>true if the specified component can display a component editor form; otherwise, false.</returns>
      <param name="component">The component to check for support for displaying a <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.GetDialogOwnerWindow">
      <summary>Gets the window that should be used as the owner when showing dialog boxes.</summary>
      <returns>An <see cref="T:System.Windows.Forms.IWin32Window" /> that indicates the window to own any child dialog boxes.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.SetUIDirty">
      <summary>Sets a flag indicating the UI has changed.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowComponentEditor(System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Attempts to display a <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" /> for a component.</summary>
      <returns>true if the attempt is successful; otherwise, false.</returns>
      <param name="component">The component for which to display a <see cref="T:System.Windows.Forms.Design.ComponentEditorForm" />. </param>
      <param name="parent">The <see cref="T:System.Windows.Forms.IWin32Window" /> to parent any dialog boxes to. </param>
      <exception cref="T:System.ArgumentException">The component does not support component editors. </exception>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowDialog(System.Windows.Forms.Form)">
      <summary>Attempts to display the specified form in a dialog box.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned by the dialog box.</returns>
      <param name="form">The <see cref="T:System.Windows.Forms.Form" /> to display. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception)">
      <summary>Displays the specified exception and information about the exception in a message box.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> to display. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowError(System.Exception,System.String)">
      <summary>Displays the specified exception and information about the exception in a message box.</summary>
      <param name="ex">The <see cref="T:System.Exception" /> to display. </param>
      <param name="message">A message to display that provides information about the exception. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowError(System.String)">
      <summary>Displays the specified error message in a message box.</summary>
      <param name="message">The error message to display. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String)">
      <summary>Displays the specified message in a message box.</summary>
      <param name="message">The message to display </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String)">
      <summary>Displays the specified message in a message box with the specified caption.</summary>
      <param name="message">The message to display. </param>
      <param name="caption">The caption for the message box. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowMessage(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
      <summary>Displays the specified message in a message box with the specified caption and buttons to place on the dialog box.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.DialogResult" /> values indicating the result code returned by the dialog box.</returns>
      <param name="message">The message to display. </param>
      <param name="caption">The caption for the dialog box. </param>
      <param name="buttons">One of the <see cref="T:System.Windows.Forms.MessageBoxButtons" /> values: <see cref="F:System.Windows.Forms.MessageBoxButtons.OK" />, <see cref="F:System.Windows.Forms.MessageBoxButtons.OKCancel" />, <see cref="F:System.Windows.Forms.MessageBoxButtons.YesNo" />, or <see cref="F:System.Windows.Forms.MessageBoxButtons.YesNoCancel" />. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IUIService.ShowToolWindow(System.Guid)">
      <summary>Displays the specified tool window.</summary>
      <returns>true if the tool window was successfully shown; false if it could not be shown or found.</returns>
      <param name="toolWindow">A <see cref="T:System.Guid" /> identifier for the tool window. This can be a custom <see cref="T:System.Guid" /> or one of the predefined values from <see cref="T:System.ComponentModel.Design.StandardToolWindows" />. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.IUIService.Styles">
      <summary>Gets the collection of styles that are specific to the host's environment.</summary>
      <returns>An <see cref="T:System.Collections.IDictionary" /> containing style settings.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.IWindowsFormsEditorService">
      <summary>Provides an interface for a <see cref="T:System.Drawing.Design.UITypeEditor" /> to display Windows Forms or to display a control in a drop-down area from a property grid control in design mode.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IWindowsFormsEditorService.CloseDropDown">
      <summary>Closes any previously opened drop down control area.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.IWindowsFormsEditorService.DropDownControl(System.Windows.Forms.Control)">
      <summary>Displays the specified control in a drop down area below a value field of the property grid that provides this service.</summary>
      <param name="control">The drop down list <see cref="T:System.Windows.Forms.Control" /> to open. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.IWindowsFormsEditorService.ShowDialog(System.Windows.Forms.Form)">
      <summary>Shows the specified <see cref="T:System.Windows.Forms.Form" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.DialogResult" /> indicating the result code returned by the <see cref="T:System.Windows.Forms.Form" />.</returns>
      <param name="dialog">The <see cref="T:System.Windows.Forms.Form" /> to display. </param>
    </member>
    <member name="T:System.Windows.Forms.Design.PropertyTab">
      <summary>Provides a base class for property tabs.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.PropertyTab" /> class.</summary>
    </member>
    <member name="P:System.Windows.Forms.Design.PropertyTab.Bitmap">
      <summary>Gets the bitmap that is displayed for the <see cref="T:System.Windows.Forms.Design.PropertyTab" />.</summary>
      <returns>The <see cref="T:System.Drawing.Bitmap" /> to display for the <see cref="T:System.Windows.Forms.Design.PropertyTab" />.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.CanExtend(System.Object)">
      <summary>Gets a value indicating whether this <see cref="T:System.Windows.Forms.Design.PropertyTab" /> can display properties for the specified component.</summary>
      <returns>true if the object can be extended; otherwise, false.</returns>
      <param name="extendee">The object to test. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.PropertyTab.Components">
      <summary>Gets or sets the array of components the property tab is associated with.</summary>
      <returns>The array of components the property tab is associated with.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.Dispose">
      <summary>Releases all the resources used by the <see cref="T:System.Windows.Forms.Design.PropertyTab" />.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.PropertyTab" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.Finalize">
      <summary>Allows a <see cref="T:System.Windows.Forms.Design.PropertyTab" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Windows.Forms.Design.PropertyTab" /> is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.GetDefaultProperty(System.Object)">
      <summary>Gets the default property of the specified component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property.</returns>
      <param name="component">The component to retrieve the default property of. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>Gets the properties of the specified component that match the specified attributes and context.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties matching the specified context and attributes.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context to retrieve properties from. </param>
      <param name="component">The component to retrieve properties from. </param>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the properties to retrieve. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.GetProperties(System.Object)">
      <summary>Gets the properties of the specified component.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties of the component.</returns>
      <param name="component">The component to retrieve the properties of. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.PropertyTab.GetProperties(System.Object,System.Attribute[])">
      <summary>Gets the properties of the specified component that match the specified attributes.</summary>
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties.</returns>
      <param name="component">The component to retrieve properties from. </param>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the properties to retrieve. </param>
    </member>
    <member name="P:System.Windows.Forms.Design.PropertyTab.HelpKeyword">
      <summary>Gets the Help keyword that is to be associated with this tab.</summary>
      <returns>The Help keyword to be associated with this tab.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.PropertyTab.TabName">
      <summary>Gets the name for the property tab.</summary>
      <returns>The name for the property tab.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailability">
      <summary>Specifies controls that are visible in the designer.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.None">
      <summary>Specifies that no controls are visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ToolStrip">
      <summary>Specifies that <see cref="T:System.Windows.Forms.ToolStrip" /> is visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.MenuStrip">
      <summary>Specifies that <see cref="T:System.Windows.Forms.MenuStrip" /> is visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.ContextMenuStrip">
      <summary>Specifies that <see cref="T:System.Windows.Forms.ContextMenuStrip" /> is visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.StatusStrip">
      <summary>Specifies that <see cref="T:System.Windows.Forms.StatusStrip" /> is visible.</summary>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailability.All">
      <summary>Specifies that all controls are visible.</summary>
    </member>
    <member name="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute">
      <summary>Specifies which types a <see cref="T:System.Windows.Forms.ToolStripItem" /> can appear in. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.#ctor">
      <summary>Initializes a new default instance of the <see cref="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.#ctor(System.Windows.Forms.Design.ToolStripItemDesignerAvailability)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute" /> class with the specified visibility. </summary>
      <param name="visibility">A <see cref="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailability" /> value specifying the visibility.</param>
    </member>
    <member name="F:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.Default">
      <summary>Specifies the default value of the <see cref="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute" />. This field is read-only.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.Equals(System.Object)">
      <returns>true if <paramref name="obj" /> equals the type and value of this instance; otherwise, false.</returns>
      <param name="obj">An <see cref="T:System.Object" /> to compare with this instance or null. </param>
    </member>
    <member name="M:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.GetHashCode">
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.IsDefaultAttribute">
      <summary>When overriden in a derived class, indicates whether the value of this instance is the default value for the derived class.</summary>
      <returns>true if this instance is the default attribute for the class; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Design.ToolStripItemDesignerAvailabilityAttribute.ItemAdditionVisibility">
      <summary>Gets the visibility of a <see cref="T:System.Windows.Forms.ToolStripItem" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Design.ToolStripItemDesignerAvailability" /> representing the visibility.</returns>
    </member>
    <member name="T:System.Windows.Forms.Design.WindowsFormsComponentEditor">
      <summary>Provides a base class for editors that use a modal dialog to display a properties page similar to an ActiveX control's property page.</summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.WindowsFormsComponentEditor" /> class. </summary>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <summary>Creates an editor window that allows the user to edit the specified component, using the specified context information.</summary>
      <returns>true if the component was changed during editing; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="component">The component to edit. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.EditComponent(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Creates an editor window that allows the user to edit the specified component.</summary>
      <returns>true if the component was changed during editing; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to gain additional context information. </param>
      <param name="component">The component to edit. </param>
      <param name="owner">An <see cref="T:System.Windows.Forms.IWin32Window" /> that the component belongs to. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.EditComponent(System.Object,System.Windows.Forms.IWin32Window)">
      <summary>Creates an editor window that allows the user to edit the specified component, using the specified window that owns the component.</summary>
      <returns>true if the component was changed during editing; otherwise, false.</returns>
      <param name="component">The component to edit. </param>
      <param name="owner">An <see cref="T:System.Windows.Forms.IWin32Window" /> that the component belongs to. </param>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
        <IPermission class="System.Security.Permissions.UIPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.GetComponentEditorPages">
      <summary>Gets the component editor pages associated with the component editor.</summary>
      <returns>An array of component editor pages.</returns>
    </member>
    <member name="M:System.Windows.Forms.Design.WindowsFormsComponentEditor.GetInitialComponentEditorPageIndex">
      <summary>Gets the index of the initial component editor page for the component editor to display.</summary>
      <returns>The index of the component editor page that the component editor will initially display.</returns>
    </member>
    <member name="T:System.Windows.Forms.Layout.ArrangedElementCollection">
      <summary>Represents a collection of objects.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)">
      <summary>Copies the entire contents of this collection to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the current collection. The array must have zero-based indexing.</param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or-The number of elements in the source collection is greater than the available space from <paramref name="index" /> to the end of <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source element cannot be cast automatically to the type of <paramref name="array" />.</exception>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.Count">
      <summary>Gets the number of elements in the collection.</summary>
      <returns>The number of elements currently contained in the collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)">
      <summary>Determines whether two <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> instances are equal.</summary>
      <returns>true if the specified <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is equal to the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />; otherwise, false.</returns>
      <param name="obj">The <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> to compare with the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator">
      <summary>Returns an enumerator for the entire collection.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the entire collection.</returns>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode">
      <summary>Returns the hash code for this instance.</summary>
      <returns>A hash code for the current <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly">
      <summary>Gets a value indicating whether the collection is read-only.</summary>
      <returns>true if the collection is read-only; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.IsSynchronized" /> property.</summary>
      <returns>true if access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" /> is synchronized (thread safe); otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot">
      <summary>For a description of this member, see the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:System.Windows.Forms.Layout.ArrangedElementCollection" />.</returns>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.Add(System.Object)" /> method.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.Clear" /> method.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.Contains(System.Object)" /> method.</summary>
      <returns>true if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, false.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.IndexOf(System.Object)" /> method.</summary>
      <returns>The index of <paramref name="value" /> if found in the list; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" /> method.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted.</param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize">
      <summary>For a description of this member, see the <see cref="P:System.Collections.IList.IsFixedSize" /> property.</summary>
      <returns>true if the <see cref="T:System.Collections.IList" /> has a fixed size; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)">
      <summary>For a description of this member, see the <see cref="P:System.Collections.IList.Item(System.Int32)" /> property.</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.Remove(System.Object)" /> method.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.IList" />.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>For a description of this member, see the <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" /> method.</summary>
      <param name="index">The zero-based index of the item to remove.</param>
    </member>
    <member name="T:System.Windows.Forms.Layout.LayoutEngine">
      <summary>Provides the base class for implementing layout engines.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.LayoutEngine.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)">
      <summary>Initializes the layout engine.</summary>
      <param name="child">The container on which the layout engine will operate.</param>
      <param name="specified">The bounds defining the container's size and position.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="child" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</exception>
    </member>
    <member name="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)">
      <summary>Requests that the layout engine perform a layout operation.</summary>
      <returns>true if layout should be performed again by the parent of <paramref name="container" />; otherwise, false.</returns>
      <param name="container">The container on which the layout engine will operate.</param>
      <param name="layoutEventArgs">An event argument from a <see cref="E:System.Windows.Forms.Control.Layout" /> event.</param>
      <exception cref="T:System.NotSupportedException">
        <paramref name="container" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</exception>
    </member>
    <member name="T:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter">
      <summary>Provides a unified way of converting types of values to other types, as well as for accessing standard values and subproperties.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Determines whether this converter can convert an object in the given source type to the native type of this converter.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="sourceType">A <see cref="T:System.Type" /> that represents the type you want to convert from.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Returns a value indicating whether this converter can convert an object to the given destination type by using the context.</summary>
      <returns>true if this converter can perform the conversion; otherwise, false.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="destinationType">A <see cref="T:System.Type" /> that represents the type you want to convert to.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <summary>Converts the given object to the type of this converter by using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
    </member>
    <member name="M:System.Windows.Forms.Layout.TableLayoutSettingsTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Converts the given value object to the specified type by using the specified context and culture information.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the converted value.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</param>
      <param name="culture">The <see cref="T:System.Globalization.CultureInfo" /> to use as the current culture.</param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">The <see cref="T:System.Type" /> to convert the value parameter to.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="destinationType" /> is null.</exception>
    </member>
    <member name="T:System.Windows.Forms.PropertyGridInternal.IRootGridEntry">
      <summary>Defines methods and a property that allow filtering on specific attributes.</summary>
    </member>
    <member name="P:System.Windows.Forms.PropertyGridInternal.IRootGridEntry.BrowsableAttributes">
      <summary>Gets or sets the attributes on which the property browser filters.</summary>
      <returns>The attributes on which the property browser filters.</returns>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.IRootGridEntry.ResetBrowsableAttributes">
      <summary>Resets the <see cref="P:System.Windows.Forms.PropertyGridInternal.IRootGridEntry.BrowsableAttributes" /> property to the default value.</summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.IRootGridEntry.ShowCategories(System.Boolean)">
      <summary>Sorts the properties in the property browser.</summary>
      <param name="showCategories">true to group the properties by category; otherwise, false.</param>
    </member>
    <member name="T:System.Windows.Forms.PropertyGridInternal.PropertiesTab">
      <summary>Represents the Properties tab on a <see cref="T:System.Windows.Forms.PropertyGrid" /> control.</summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.PropertiesTab.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.PropertyGridInternal.PropertiesTab" /> class.</summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.PropertiesTab.GetDefaultProperty(System.Object)">
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptor" /> that represents the default property.</returns>
      <param name="obj"></param>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.PropertiesTab.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties matching the specified context and attributes.</returns>
      <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that indicates the context to retrieve properties from. </param>
      <param name="component">The component to retrieve properties from. </param>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the properties to retrieve. </param>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.PropertiesTab.GetProperties(System.Object,System.Attribute[])">
      <returns>A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties.</returns>
      <param name="component">The component to retrieve properties from. </param>
      <param name="attributes">An array of type <see cref="T:System.Attribute" /> that indicates the attributes of the properties to retrieve. </param>
    </member>
    <member name="P:System.Windows.Forms.PropertyGridInternal.PropertiesTab.HelpKeyword">
      <summary>Gets the Help keyword that is to be associated with this tab.</summary>
      <returns>The string “vs.properties”.</returns>
    </member>
    <member name="P:System.Windows.Forms.PropertyGridInternal.PropertiesTab.TabName">
      <summary>Gets the name of the Properties tab.</summary>
      <returns>The string “Properties”.</returns>
    </member>
    <member name="T:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands">
      <summary>Contains a set of menu commands used by the designer in Visual Studio.</summary>
    </member>
    <member name="M:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands" /> class. </summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.Commands">
      <summary>Represents the command identifier for the Commands menu item. </summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.Description">
      <summary>Represents the command identifier for the Description menu item.</summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.Hide">
      <summary>Represents the command identifier for the Hide menu item.</summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.Reset">
      <summary>Represents the command identifier for the Reset menu item.</summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.wfcMenuCommand">
      <summary>Represents the GUID for the internal property browser’s command set.</summary>
    </member>
    <member name="F:System.Windows.Forms.PropertyGridInternal.PropertyGridCommands.wfcMenuGroup">
      <summary>Represents the GUID the internal property browser uses to create a shortcut menu.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.BackgroundType">
      <summary>Specifies the source of a visual style element's background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BackgroundType.ImageFile">
      <summary>The background of the element is a bitmap. If this value is set, then the property corresponding to the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile" /> value will contain the name of a valid image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BackgroundType.BorderFill">
      <summary>The background of the element is a rectangle filled with a color or pattern. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BackgroundType.None">
      <summary>The element has no background.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.BooleanProperty">
      <summary>Identifies the Boolean properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.Transparent">
      <summary>The image has transparent areas.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.AutoSize">
      <summary>The width of nonclient captions varies with the extent of the text.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.BorderOnly">
      <summary>Only the border of an image is drawn.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.Composited">
      <summary>The control will handle composite drawing.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.BackgroundFill">
      <summary>The background of a fixed-size element is a filled rectangle.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.GlyphTransparent">
      <summary>The glyph has transparent areas.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.GlyphOnly">
      <summary>Only the glyph should be drawn, not the background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.AlwaysShowSizingBar">
      <summary>The sizing handle will always be displayed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.MirrorImage">
      <summary>The image is mirrored in right-to-left display modes.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.UniformSizing">
      <summary>The height and width must be sized equally.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.IntegralSizing">
      <summary>The scaling factor must be an integer for fixed-size elements.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.SourceGrow">
      <summary>The source image will scale larger when needed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BooleanProperty.SourceShrink">
      <summary>The source image will scale smaller when needed.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.BorderType">
      <summary>Specifies the border type of a visual style element with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BorderType.Rectangle">
      <summary>A rectangular border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BorderType.RoundedRectangle">
      <summary>A rectangular border with rounded corners.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.BorderType.Ellipse">
      <summary>An elliptical border.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.CheckBoxState">
      <summary>Specifies the visual state of a check box that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedNormal">
      <summary>The check box is unchecked.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedHot">
      <summary>The check box is unchecked and hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedPressed">
      <summary>The check box is unchecked and pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.UncheckedDisabled">
      <summary>The check box is unchecked and disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.CheckedNormal">
      <summary>The check box is checked.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.CheckedHot">
      <summary>The check box is checked and hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.CheckedPressed">
      <summary>The check box is checked and pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.CheckedDisabled">
      <summary>The check box is checked and disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.MixedNormal">
      <summary>The check box is three-state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.MixedHot">
      <summary>The check box is three-state and hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.MixedPressed">
      <summary>The check box is three-state and pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.CheckBoxState.MixedDisabled">
      <summary>The check box is three-state and disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ColorProperty">
      <summary>Identifies the color properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.BorderColor">
      <summary>The border color of an element with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.FillColor">
      <summary>The fill color of an element with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.TextColor">
      <summary>The text color.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.EdgeLightColor">
      <summary>The light color for edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.EdgeHighlightColor">
      <summary>The highlight color for edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.EdgeShadowColor">
      <summary>The shadow color for edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.EdgeDarkShadowColor">
      <summary>The dark shadow color for edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.EdgeFillColor">
      <summary>The fill color for edges.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.TransparentColor">
      <summary>The color of pixels that are treated as transparent.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor1">
      <summary>The first color in a gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor2">
      <summary>The second color in a gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor3">
      <summary>The third color in a gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor4">
      <summary>The fourth color in a gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor5">
      <summary>The fifth color in a gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.ShadowColor">
      <summary>The color of the shadow.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GlowColor">
      <summary>The glow color.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.TextBorderColor">
      <summary>The color of the text border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.TextShadowColor">
      <summary>The color of the text shadow.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GlyphTextColor">
      <summary>The color that a font-based glyph is drawn with.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.GlyphTransparentColor">
      <summary>The color of pixels in a glyph that are treated as transparent.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.FillColorHint">
      <summary>A recommended companion color for the fill color of the visual style.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.BorderColorHint">
      <summary>A recommended companion color for the border color of the visual style.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ColorProperty.AccentColorHint">
      <summary>A recommended companion color for the accent color of the visual style.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ComboBoxState">
      <summary>Specifies the visual state of a combo box that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ComboBoxState.Normal">
      <summary>The combo box has the default appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ComboBoxState.Hot">
      <summary>The combo box is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ComboBoxState.Pressed">
      <summary>The combo box is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ComboBoxState.Disabled">
      <summary>The combo box is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ContentAlignment">
      <summary>Specifies how text is aligned in a window caption.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ContentAlignment.Left">
      <summary>The text is aligned to the left side.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ContentAlignment.Center">
      <summary>The text is centered.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ContentAlignment.Right">
      <summary>The text is aligned to the right side.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.EdgeEffects">
      <summary>Specifies the visual effects that can be applied to the edges of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeEffects.None">
      <summary>The border is drawn without any effects.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeEffects.FillInterior">
      <summary>The area within the element borders is filled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeEffects.Flat">
      <summary>The border is flat.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeEffects.Soft">
      <summary>The border is soft.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeEffects.Mono">
      <summary>The border is one-dimensional.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.Edges">
      <summary>Specifies which edges of a visual style element to draw.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.Edges.Left">
      <summary>The left edge of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.Edges.Top">
      <summary>The top edge of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.Edges.Right">
      <summary>The right edge of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.Edges.Bottom">
      <summary>The bottom edge of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.Edges.Diagonal">
      <summary>A diagonal border.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.EdgeStyle">
      <summary>Specifies the styles that can be applied to the edges of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeStyle.Raised">
      <summary>The edges are drawn to make the element seem raised.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeStyle.Sunken">
      <summary>The edges are drawn to make the element seem sunken.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeStyle.Etched">
      <summary>The edges are drawn to appear sunken on the outside and raised on the inside.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EdgeStyle.Bump">
      <summary>The edges are drawn to appear raised on the outside and sunken on the inside. </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.EnumProperty">
      <summary>Identifies the enumerated type properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.BackgroundType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.BackgroundType" /> values that specifies how the element's background is drawn. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.BorderType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.BorderType" /> values that specifies the border type for elements with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.FillType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.FillType" /> values that specifies the fill type for elements with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.SizingType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.SizingType" /> values that specifies how elements with a bitmap background will adjust to fill the bounds.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.HorizontalAlignment">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.HorizontalAlign" /> values that specifies the horizontal alignment for elements with a fixed size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.ContentAlignment">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.ContentAlignment" /> values that specifies how text is aligned in a window caption.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.VerticalAlignment">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.VerticalAlignment" /> values that specifies the vertical alignment for elements with a fixed size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.OffsetType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.OffsetType" /> values that specifies where an offset is applied to a window element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.IconEffect">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.IconEffect" /> values that specifies the effect that the visual style will apply to an icon.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.TextShadowType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.TextShadowType" /> values that specifies the type of shadow to add to text.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.ImageLayout">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.ImageOrientation" /> values that specifies how multiple images are arranged in a single image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.GlyphType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.GlyphType" /> values that specifies the type of glyph for elements with a bitmap background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.ImageSelectType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.ImageSelectType" /> values that specifies when the visual style selects a different multiple-image file to draw an element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.GlyphFontSizingType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.GlyphFontSizingType" /> values that specifies when the visual style selects a different glyph font size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.EnumProperty.TrueSizeScalingType">
      <summary>One of the <see cref="T:System.Windows.Forms.VisualStyles.TrueSizeScalingType" /> values that specifies when the visual style rescales an element with a fixed size. </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.FilenameProperty">
      <summary>Identifies the names of the image files that are used to draw a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile">
      <summary>The name of the background image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile1">
      <summary>The name of the first multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile2">
      <summary>The name of the second multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile3">
      <summary>The name of the third multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile4">
      <summary>The name of the fourth multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile5">
      <summary>The name of the fifth multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.StockImageFile">
      <summary>The name of the stock image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FilenameProperty.GlyphImageFile">
      <summary>The name of the glyph image file.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.FillType">
      <summary>Specifies the interior of visual style elements with a filled border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FillType.Solid">
      <summary>The interior of the element is solid.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FillType.VerticalGradient">
      <summary>The interior of the element is a vertical gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FillType.HorizontalGradient">
      <summary>The interior of the element is a horizontal gradient. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FillType.RadialGradient">
      <summary>The interior of the element is a radial gradient.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FillType.TileImage">
      <summary>The interior of the element is a tiled image.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.FontProperty">
      <summary>Identifies the font properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.FontProperty.GlyphFont">
      <summary>The font that a glyph is drawn with.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.GlyphFontSizingType">
      <summary>Specifies when the visual style selects a different glyph font size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphFontSizingType.None">
      <summary>Glyph font sizes do not change.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphFontSizingType.Size">
      <summary>Glyph font size changes are based on font size settings.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphFontSizingType.Dpi">
      <summary>Glyph font size changes are based on dots per inch (DPI) settings.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.GlyphType">
      <summary>Specifies the type of glyph for elements with a bitmap background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphType.None">
      <summary>The element does not include a glyph.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphType.ImageGlyph">
      <summary>The glyph is a bitmap.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GlyphType.FontGlyph">
      <summary>The glyph is a font.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.GroupBoxState">
      <summary>Specifies the visual state of a group box that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GroupBoxState.Normal">
      <summary>The group box has the default appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.GroupBoxState.Disabled">
      <summary>The group box is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.HitTestCode">
      <summary>Describes the location of a point in the background specified by a visual style.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Nowhere">
      <summary>The hit test succeeded outside the control or on a transparent area.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Client">
      <summary>The hit test succeeded in the middle background segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Left">
      <summary>The hit test succeeded in the left border segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Right">
      <summary>The hit test succeeded in the right border segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Top">
      <summary>The hit test succeeded in the top border segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.Bottom">
      <summary>The hit test succeeded in the bottom border segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.TopLeft">
      <summary>The hit test succeeded in the top and left border intersection.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.TopRight">
      <summary>The hit test succeeded in the top and right border intersection.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.BottomLeft">
      <summary>The hit test succeeded in the bottom and left border intersection.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestCode.BottomRight">
      <summary>The hit test succeeded in the bottom and right border intersection.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.HitTestOptions">
      <summary>Specifies the options that can be used when performing a hit test on the background specified by a visual style.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.BackgroundSegment">
      <summary>The hit test option for the background segment.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.FixedBorder">
      <summary>The hit test option for the fixed border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.Caption">
      <summary>The hit test option for the caption.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.ResizingBorderLeft">
      <summary>The hit test option for the left resizing border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.ResizingBorderTop">
      <summary>The hit test option for the top resizing border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.ResizingBorderRight">
      <summary>The hit test option for the right resizing border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.ResizingBorderBottom">
      <summary>The hit test option for the bottom resizing border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.ResizingBorder">
      <summary>The hit test option for the resizing border.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.SizingTemplate">
      <summary>The resizing border is specified as a template, not just window edges. This option is mutually exclusive with <see cref="F:System.Windows.Forms.VisualStyles.HitTestOptions.SystemSizingMargins" />; <see cref="F:System.Windows.Forms.VisualStyles.HitTestOptions.SizingTemplate" /> takes precedence.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HitTestOptions.SystemSizingMargins">
      <summary>The system resizing border width is used instead of visual style content margins. This option is mutually exclusive with <see cref="F:System.Windows.Forms.VisualStyles.HitTestOptions.SizingTemplate" />; <see cref="F:System.Windows.Forms.VisualStyles.HitTestOptions.SizingTemplate" /> takes precedence.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.HorizontalAlign">
      <summary>Specifies the horizontal alignment for visual style elements with a fixed size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HorizontalAlign.Left">
      <summary>The element is aligned to the left side.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HorizontalAlign.Center">
      <summary>The element is centered horizontally.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.HorizontalAlign.Right">
      <summary>The element is aligned to the right side.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.IconEffect">
      <summary>Specifies the visual effect that the visual style will apply to an icon.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IconEffect.None">
      <summary>No visual effect is applied to the icon.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IconEffect.Glow">
      <summary>The icon glows.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IconEffect.Shadow">
      <summary>The icon has a shadow.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IconEffect.Pulse">
      <summary>The icon pulses.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IconEffect.Alpha">
      <summary>The icon is alpha-blended.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ImageOrientation">
      <summary>Specifies how multiple images are arranged in a single image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ImageOrientation.Vertical">
      <summary>Images are arranged vertically in the multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ImageOrientation.Horizontal">
      <summary>Images are arranged horizontally in the multiple-image file.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ImageSelectType">
      <summary>Specifies when the visual style selects a different multiple-image file to draw an element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ImageSelectType.None">
      <summary>The image file does not change.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ImageSelectType.Size">
      <summary>Image file changes are based on size settings.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ImageSelectType.Dpi">
      <summary>Image file changes are based on dots per inch (DPI) settings.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.IntegerProperty">
      <summary>Identifies the integer properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.ImageCount">
      <summary>The number of state images in multiple-image file.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.AlphaLevel">
      <summary>The alpha value for an icon, between 0 and 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.BorderSize">
      <summary>The size of the border line for elements with a filled-border background.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.RoundCornerWidth">
      <summary>A percentage value that represents the width of a rounded corner, from 0 to 100.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.RoundCornerHeight">
      <summary>A percentage value that represents the height of a rounded corner, from 0 to 100.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GradientRatio1">
      <summary>The amount of <see cref="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor1" />  to use in a color gradient. The sum of the five GradientRatio properties must equal 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GradientRatio2">
      <summary>The amount of <see cref="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor2" />  to use in a color gradient. The sum of the five GradientRatio properties must equal 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GradientRatio3">
      <summary>The amount of <see cref="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor3" />  to use in a color gradient. The sum of the five GradientRatio properties must equal 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GradientRatio4">
      <summary>The amount of <see cref="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor4" />  to use in a color gradient. The sum of the five GradientRatio properties must equal 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GradientRatio5">
      <summary>The amount of <see cref="F:System.Windows.Forms.VisualStyles.ColorProperty.GradientColor5" />  to use in a color gradient. The sum of the five GradientRatio properties must equal 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.ProgressChunkSize">
      <summary>The size of progress bar elements.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.ProgressSpaceSize">
      <summary>The size of spaces between progress bar elements.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.Saturation">
      <summary>The amount of saturation for an image, between 0 and 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.TextBorderSize">
      <summary>The size of the border around text characters.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.AlphaThreshold">
      <summary>The minimum alpha value of a solid pixel, between 0 and 255.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.Width">
      <summary>The width of an element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.Height">
      <summary>The height of an element. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.GlyphIndex">
      <summary>The index into the font for font-based glyphs.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.TrueSizeStretchMark">
      <summary>A percentage value indicating how far a fixed-size element will stretch when the target exceeds the source. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.MinDpi1">
      <summary>The minimum dots per inch (DPI) that <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile1" /> was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.MinDpi2">
      <summary>The minimum DPI that <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile2" /> was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.MinDpi3">
      <summary>The minimum DPI that <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile3" /> was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.MinDpi4">
      <summary>The minimum DPI that <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile4" /> was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.IntegerProperty.MinDpi5">
      <summary>The minimum DPI that <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile5" /> was designed for.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.MarginProperty">
      <summary>Identifies the margin properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.MarginProperty.SizingMargins">
      <summary>Specifies a margin used for nine-grid sizing.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.MarginProperty.ContentMargins">
      <summary>Specifies where content can be placed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.MarginProperty.CaptionMargins">
      <summary>Specifies where caption text can be placed.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.OffsetType">
      <summary>Specifies where an offset is applied to a window element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.TopLeft">
      <summary>The offset is applied from the top left of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.TopRight">
      <summary>The offset is applied from the top right of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.TopMiddle">
      <summary>The offset is applied from the top middle of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.BottomLeft">
      <summary>The offset is applied from the bottom left of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.BottomRight">
      <summary>The offset is applied from the bottom right of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.BottomMiddle">
      <summary>The offset is applied from the bottom middle of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.MiddleLeft">
      <summary>The offset is applied from the middle left of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.MiddleRight">
      <summary>The offset is applied from the middle right of the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.LeftOfCaption">
      <summary>The offset is applied from the left of the caption.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.RightOfCaption">
      <summary>The offset is applied from the right of the caption.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.LeftOfLastButton">
      <summary>The offset is applied from the left of the last button.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.RightOfLastButton">
      <summary>The offset is applied from the right of the last button.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.AboveLastButton">
      <summary>The offset is applied from above the last button.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.OffsetType.BelowLastButton">
      <summary>The offset is applied from below the last button.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.PointProperty">
      <summary>Identifies the point properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.Offset">
      <summary>The offset for window element layouts.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.TextShadowOffset">
      <summary>The location of character shadows, relative to origin characters.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile" /> value was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize1">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile1" /> value was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize2">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile2" /> value was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize3">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile3" /> value was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize4">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile4" /> value was designed for.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PointProperty.MinSize5">
      <summary>The smallest bounds that the image specified by the <see cref="F:System.Windows.Forms.VisualStyles.FilenameProperty.ImageFile5" /> value was designed for.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.PushButtonState">
      <summary>Specifies the visual state of a button that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PushButtonState.Normal">
      <summary>The button has the normal appearance.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PushButtonState.Hot">
      <summary>The button is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PushButtonState.Pressed">
      <summary>The button is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PushButtonState.Disabled">
      <summary>The button is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.PushButtonState.Default">
      <summary>The button has the default appearance.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.RadioButtonState">
      <summary>Specifies the visual state of an option button (also known as a radio button) that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.UncheckedNormal">
      <summary>The option button is unchecked and normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.UncheckedHot">
      <summary>The option button is unchecked and hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.UncheckedPressed">
      <summary>The option button is unchecked and pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.UncheckedDisabled">
      <summary>The option button is unchecked and disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.CheckedNormal">
      <summary>The option button is checked and normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.CheckedHot">
      <summary>The option button is checked and hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.CheckedPressed">
      <summary>The option button is checked and pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.RadioButtonState.CheckedDisabled">
      <summary>The option button is checked and disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState">
      <summary>Specifies the visual state of a scroll arrow that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.UpNormal">
      <summary>The scroll arrow points up and is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.UpHot">
      <summary>The scroll arrow points up and is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.UpPressed">
      <summary>The scroll arrow points up and is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.UpDisabled">
      <summary>The scroll arrow points up and is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.DownNormal">
      <summary>The scroll arrow points down and is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.DownHot">
      <summary>The scroll arrow points down and is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.DownPressed">
      <summary>The scroll arrow points down and is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.DownDisabled">
      <summary>The scroll arrow points down and is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.LeftNormal">
      <summary>The scroll arrow points left and is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.LeftHot">
      <summary>The scroll arrow points left and is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.LeftPressed">
      <summary>The scroll arrow points left and is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.LeftDisabled">
      <summary>The scroll arrow points left and is disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.RightNormal">
      <summary>The scroll arrow points right and is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.RightHot">
      <summary>The scroll arrow points right and is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.RightPressed">
      <summary>The scroll arrow points right and is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarArrowButtonState.RightDisabled">
      <summary>The scroll arrow points right and is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState">
      <summary>Specifies the visual state of a scroll bar sizing handle that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState.RightAlign">
      <summary>The sizing handle is aligned to the right.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarSizeBoxState.LeftAlign">
      <summary>The sizing handle is aligned to the left.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ScrollBarState">
      <summary>Specifies the visual state of a scroll bar that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarState.Normal">
      <summary>The scroll bar element is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarState.Hot">
      <summary>The scroll bar element is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarState.Pressed">
      <summary>The scroll bar element is pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ScrollBarState.Disabled">
      <summary>The scroll bar element is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.SizingType">
      <summary>Specifies how elements with a bitmap background will adjust to fill a bounds.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.SizingType.FixedSize">
      <summary>The element cannot be resized.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.SizingType.Stretch">
      <summary>The background image stretches to fill the bounds.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.SizingType.Tile">
      <summary>The background image repeats the pattern to fill the bounds.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.StringProperty">
      <summary>Identifies the string properties of a visual style element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.StringProperty.Text">
      <summary>The text that will be displayed with the element.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TabItemState">
      <summary>Specifies the visual state of a tab item that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TabItemState.Normal">
      <summary>The tab item is normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TabItemState.Hot">
      <summary>The tab item is hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TabItemState.Selected">
      <summary>The tab item is selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TabItemState.Disabled">
      <summary>The tab item is disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TextBoxState">
      <summary>Specifies the visual state of a text box that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Normal">
      <summary>The text box appears normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Hot">
      <summary>The text box appears hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Selected">
      <summary>The text box appears selected.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Disabled">
      <summary>The text box appears disabled.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Readonly">
      <summary>The text box appears read-only.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextBoxState.Assist">
      <summary>The text box appears in assist mode.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TextMetrics">
      <summary>Provides basic information about the font specified by a visual style for a particular element.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Ascent">
      <summary>Gets or sets the ascent of characters in the font.</summary>
      <returns>The ascent of characters in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.AverageCharWidth">
      <summary>Gets or sets the average width of characters in the font.</summary>
      <returns>The average width of characters in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.BreakChar">
      <summary>Gets or sets the character used to define word breaks for text justification.</summary>
      <returns>The character used to define word breaks for text justification.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.CharSet">
      <summary>Gets or sets the character set of the font.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet" /> values that specifies the character set of the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.DefaultChar">
      <summary>Gets or sets the character to be substituted for characters not in the font.</summary>
      <returns>The character to be substituted for characters not in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Descent">
      <summary>Gets or sets the descent of characters in the font.</summary>
      <returns>The descent of characters in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.DigitizedAspectX">
      <summary>Gets or sets the horizontal aspect of the device for which the font was designed.</summary>
      <returns>The horizontal aspect of the device for which the font was designed.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.DigitizedAspectY">
      <summary>Gets or sets the vertical aspect of the device for which the font was designed.</summary>
      <returns>The vertical aspect of the device for which the font was designed.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.ExternalLeading">
      <summary>Gets or sets the amount of extra leading that the application adds between rows.</summary>
      <returns>The amount of extra leading (space) required between rows. </returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.FirstChar">
      <summary>Gets or sets the first character defined in the font.</summary>
      <returns>The first character defined in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Height">
      <summary>Gets or sets the height of characters in the font.</summary>
      <returns>The height of characters in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.InternalLeading">
      <summary>Gets or sets the amount of leading inside the bounds set by the <see cref="P:System.Windows.Forms.VisualStyles.TextMetrics.Height" /> property. </summary>
      <returns>The amount of leading inside the bounds set by the <see cref="P:System.Windows.Forms.VisualStyles.TextMetrics.Height" /> property.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Italic">
      <summary>Gets or sets a value indicating whether the font is italic.</summary>
      <returns>true if the font is italic; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.LastChar">
      <summary>Gets or sets the last character defined in the font.</summary>
      <returns>The last character defined in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.MaxCharWidth">
      <summary>Gets or sets the width of the widest character in the font.</summary>
      <returns>The width of the widest character in the font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Overhang">
      <summary>Gets or sets the extra width per string that may be added to some synthesized fonts.</summary>
      <returns>The extra width per string that may be added to some synthesized fonts.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.PitchAndFamily">
      <summary>Gets or sets information about the pitch, technology, and family of a physical font.</summary>
      <returns>A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues" /> values that specifies the pitch, technology, and family of a physical font.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.StruckOut">
      <summary>Gets or sets a value indicating whether the font specifies a horizontal line through the characters.</summary>
      <returns>true if the font has a horizontal line through the characters; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Underlined">
      <summary>Gets or sets a value indicating whether the font is underlined.</summary>
      <returns>true if the font is underlined; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.TextMetrics.Weight">
      <summary>Gets or sets the weight of the font.</summary>
      <returns>The weight of the font.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet">
      <summary>Specifies the character set of the font specified by a visual style for a particular element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Ansi">
      <summary>The ANSI character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Baltic">
      <summary>The Baltic character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.ChineseBig5">
      <summary>The Traditional Chinese character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Default">
      <summary>The default character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.EastEurope">
      <summary>The Eastern Europe character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Gb2312">
      <summary>The Gb2312 simplified Chinese character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Greek">
      <summary>The Greek character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Hangul">
      <summary>The Hangul (Korean) character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Mac">
      <summary>The Macintosh character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Oem">
      <summary>The OEM character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Russian">
      <summary>The Russian character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.ShiftJis">
      <summary>The ShiftJis (Japanese) character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Symbol">
      <summary>The Symbol character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Turkish">
      <summary>The Turkish character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Vietnamese">
      <summary>The Vietnamese character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Johab">
      <summary>The Johab (Korean) character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Arabic">
      <summary>The Arabic character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Hebrew">
      <summary>The Hebrew character set.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsCharacterSet.Thai">
      <summary>The Thai character set.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues">
      <summary>Specifies information about the pitch, technology, and family of the font specified by a visual style for a particular element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues.FixedPitch">
      <summary>If this value is set, the font is a variable pitch font. Otherwise, the font is a fixed-pitch font. </summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues.Vector">
      <summary>The font is a vector font.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues.TrueType">
      <summary>The font is a TrueType font.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextMetricsPitchAndFamilyValues.Device">
      <summary>The font is a device font.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TextShadowType">
      <summary>Specifies the type of shadow to add to text.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextShadowType.None">
      <summary>No shadow is drawn.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextShadowType.Single">
      <summary>A single shadow is drawn.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TextShadowType.Continuous">
      <summary>A continuous shadow is drawn.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ThemeSizeType">
      <summary>Specifies the size of the visual style part to retrieve.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ThemeSizeType.Minimum">
      <summary>The minimum size of the visual style part.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ThemeSizeType.True">
      <summary>The size of the visual style part that will best fit the available space.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ThemeSizeType.Draw">
      <summary>The size that the current visual style uses to draw the part.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.ToolBarState">
      <summary>Specifies the visual state of a toolbar item that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.Normal">
      <summary>The item is in the normal state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.Hot">
      <summary>The item is in the hot state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.Pressed">
      <summary>The item is in the pressed state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.Disabled">
      <summary>The item is in the disabled state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.Checked">
      <summary>The item is in the checked state.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.ToolBarState.HotChecked">
      <summary>The item is in the hot and checked states.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TrackBarThumbState">
      <summary>Specifies the visual state of a track bar slider (also known as a thumb) that is drawn with visual styles.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrackBarThumbState.Normal">
      <summary>The slider appears normal.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrackBarThumbState.Hot">
      <summary>The slider appears hot.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrackBarThumbState.Pressed">
      <summary>The slider appears pressed.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrackBarThumbState.Disabled">
      <summary>The slider appears disabled.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.TrueSizeScalingType">
      <summary>Specifies the scaling type of a visual style element with a fixed size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrueSizeScalingType.None">
      <summary>No scaling type is specified for the element.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrueSizeScalingType.Size">
      <summary>The element is scaled to size settings.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.TrueSizeScalingType.Dpi">
      <summary>The element is scaled to dots per inch (DPI) settings.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VerticalAlignment">
      <summary>Specifies the vertical alignment for visual style elements with a fixed size.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VerticalAlignment.Top">
      <summary>The element is aligned to the top.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VerticalAlignment.Center">
      <summary>The element is centered vertically.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VerticalAlignment.Bottom">
      <summary>The element is aligned to the bottom.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement">
      <summary>Identifies a control or user interface (UI) element that is drawn with visual styles.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName">
      <summary>Gets the class name of the visual style element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> represents.</summary>
      <returns>A string that represents the class name of a visual style element.</returns>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleElement.CreateElement(System.String,System.Int32,System.Int32)">
      <summary>Creates a new visual style element from the specified class, part, and state values.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> with the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" />, <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" />, and <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.State" /> properties initialized to the <paramref name="className" />, <paramref name="part" />, and <paramref name="state" /> parameters.</returns>
      <param name="className">A string that represents the class name of the visual style element to be created.</param>
      <param name="part">A value that represents the part of the visual style element to be created.</param>
      <param name="state">A value that represents the state of the visual style element to be created.</param>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part">
      <summary>Gets a value indicating the part of the visual style element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> represents.</summary>
      <returns>A value that represents the part of a visual style element.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.State">
      <summary>Gets a value indicating the state of the visual style element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> represents.</summary>
      <returns>A value that represents the state of a visual style element.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for button-related controls. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the different states of the check box control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.CheckedDisabled">
      <summary>Gets a visual style element that represents a disabled check box in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled check box in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.CheckedHot">
      <summary>Gets a visual style element that represents a hot check box in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot check box in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.CheckedNormal">
      <summary>Gets a visual style element that represents a normal check box in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal check box in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.CheckedPressed">
      <summary>Gets a visual style element that represents a pressed check box in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed check box in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.MixedDisabled">
      <summary>Gets a visual style element that represents a disabled check box in the indeterminate state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled check box in the indeterminate state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.MixedHot">
      <summary>Gets a visual style element that represents a hot check box in the indeterminate state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot check box in the indeterminate state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.MixedNormal">
      <summary>Gets a visual style element that represents a normal check box in the indeterminate state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal check box in the indeterminate state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.MixedPressed">
      <summary>Gets a visual style element that represents a pressed check box in the indeterminate state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed check box in the indeterminate state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.UncheckedDisabled">
      <summary>Gets a visual style element that represents a disabled check box in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled check box in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.UncheckedHot">
      <summary>Gets a visual style element that represents a hot check box in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot check box in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.UncheckedNormal">
      <summary>Gets a visual style element that represents a normal check box in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal check box in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.CheckBox.UncheckedPressed">
      <summary>Gets a visual style element that represents a pressed check box in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed check box in the unchecked state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.GroupBox">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the different states of the group box control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.GroupBox.Disabled">
      <summary>Gets a visual style element that represents a disabled group box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled group box.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.GroupBox.Normal">
      <summary>Gets a visual style element that represents a normal group box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal group box.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the different states of the button control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton.Default">
      <summary>Gets a visual style element that represents a default button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a default button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton.Disabled">
      <summary>Gets a visual style element that represents a disabled button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton.Hot">
      <summary>Gets a visual style element that represents a hot button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot button. </returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton.Normal">
      <summary>Gets a visual style element that represents a normal button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.PushButton.Pressed">
      <summary>Gets a visual style element that represents a pressed button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed button.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the different states of the radio button control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.CheckedDisabled">
      <summary>Gets a visual style element that represents a disabled radio button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled radio button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.CheckedHot">
      <summary>Gets a visual style element that represents a hot radio button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot radio button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.CheckedNormal">
      <summary>Gets a visual style element that represents a normal radio button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal radio button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.CheckedPressed">
      <summary>Gets a visual style element that represents a pressed radio button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed radio button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.UncheckedDisabled">
      <summary>Gets a visual style element that represents a disabled radio button in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled radio button in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.UncheckedHot">
      <summary>Gets a visual style element that represents a hot radio button in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot radio button in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.UncheckedNormal">
      <summary>Gets a visual style element that represents a normal radio button in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal radio button in the unchecked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.RadioButton.UncheckedPressed">
      <summary>Gets a visual style element that represents a pressed radio button in the unchecked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed radio button in the unchecked state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.UserButton">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a user button. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Button.UserButton.Normal">
      <summary>Gets a visual style element that represents a user button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a user button. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox">
      <summary>Contains a class that provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the drop-down arrow of the combo box control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox.DropDownButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the different states of the drop-down arrow of the combo box control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox.DropDownButton.Disabled">
      <summary>Gets a visual style element that represents a drop-down arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox.DropDownButton.Hot">
      <summary>Gets a visual style element that represents a drop-down arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox.DropDownButton.Normal">
      <summary>Gets a visual style element that represents a drop-down arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down arrow in the normal state. </returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ComboBox.DropDownButton.Pressed">
      <summary>Gets a visual style element that represents a drop-down arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down arrow in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each part of the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderBackground">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the Explorer Bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderBackground.Normal">
      <summary>Gets a visual style element that represents the background of the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the Explorer Bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderClose">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Close button of the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderClose.Hot">
      <summary>Gets a visual style element that represents a Close button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderClose.Normal">
      <summary>Gets a visual style element that represents a Close button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderClose.Pressed">
      <summary>Gets a visual style element that represents a Close button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Auto Hide button (which is displayed as a push pin) of the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.Hot">
      <summary>Gets a visual style element that represents an Auto Hide button (which is displayed as a push pin) in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an Auto Hide button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.Normal">
      <summary>Gets a visual style element that represents an Auto Hide button (which is displayed as a push pin) in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an Auto Hide button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.Pressed">
      <summary>Gets a visual style element that represents an Auto Hide button (which is displayed as a push pin) in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an Auto Hide button in the pressed state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.SelectedHot">
      <summary>Gets a visual style element that represents a selected Auto Hide button (which is displayed as a push pin) in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected Auto Hide button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.SelectedNormal">
      <summary>Gets a visual style element that represents a selected Auto Hide button (which is displayed as a push pin) in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected Auto Hide button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.HeaderPin.SelectedPressed">
      <summary>Gets a visual style element that represents a selected Auto Hide button (which is displayed as a push pin) in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected Auto Hide button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.IEBarMenu">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the expanded-menu arrow of the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.IEBarMenu.Hot">
      <summary>Gets a visual style element that represents a hot menu button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot menu button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.IEBarMenu.Normal">
      <summary>Gets a visual style element that represents a normal menu button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal menu button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.IEBarMenu.Pressed">
      <summary>Gets a visual style element that represents a pressed menu button.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed menu button. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupBackground">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a common group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupBackground.Normal">
      <summary>Gets a visual style element that represents the background of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a common group of items in the Explorer Bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupCollapse">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the collapse button of a common group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupCollapse.Hot">
      <summary>Gets a visual style element that represents a hot collapse button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot collapse button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupCollapse.Normal">
      <summary>Gets a visual style element that represents a normal collapse button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal collapse button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupCollapse.Pressed">
      <summary>Gets a visual style element that represents a pressed collapse button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed collapse button.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupExpand">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the expand button of a common group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupExpand.Hot">
      <summary>Gets a visual style element that represents a hot expand button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot expand button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupExpand.Normal">
      <summary>Gets a visual style element that represents a normal expand button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal expand button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupExpand.Pressed">
      <summary>Gets a visual style element that represents a pressed expand button of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed expand button. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupHead">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the title bar of a common group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.NormalGroupHead.Normal">
      <summary>Gets a visual style element that represents the title bar of a common group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a common group of items in the Explorer Bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupBackground">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a special group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupBackground.Normal">
      <summary>Gets a visual style element that represents the background of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a special group of items in the Explorer Bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupCollapse">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the collapse button of a special group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupCollapse.Hot">
      <summary>Gets a visual style element that represents a hot collapse button of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot collapse button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupCollapse.Normal">
      <summary>Gets a visual style element that represents a normal collapse button of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal collapse button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupCollapse.Pressed">
      <summary>Gets a visual style element that represents a pressed collapse button of a special group of items in the Explorer Bar. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed collapse button.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupExpand">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the expand button of a special group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupExpand.Hot">
      <summary>Gets a visual style element that represents a hot expand button of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot expand button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupExpand.Normal">
      <summary>Gets a visual style element that represents a normal expand button of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal expand button.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupExpand.Pressed">
      <summary>Gets a visual style element that represents a pressed expand button of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed expand button. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupHead">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the title bar of a special group of items in the Explorer Bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ExplorerBar.SpecialGroupHead.Normal">
      <summary>Gets a visual style element that represents the title bar of a special group of items in the Explorer Bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a special group of items in the Explorer Bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Header">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each part of the header control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.Item">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of an item of the header control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.Item.Hot">
      <summary>Gets a visual style element that represents a hot header item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot header item.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.Item.Normal">
      <summary>Gets a visual style element that represents a normal header item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal header item.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.Item.Pressed">
      <summary>Gets a visual style element that represents a pressed header item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed header item. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemLeft">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the leftmost item of the header control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemLeft.Hot">
      <summary>Gets a visual style element that represents the leftmost header item in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the leftmost header item in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemLeft.Normal">
      <summary>Gets a visual style element that represents the leftmost header item in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the leftmost header item in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemLeft.Pressed">
      <summary>Gets a visual style element that represents the leftmost header item in the pressed state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the leftmost header item in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemRight">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the rightmost item of the header control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemRight.Hot">
      <summary>Gets a visual style element that represents the rightmost header item in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the rightmost header item in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemRight.Normal">
      <summary>Gets a visual style element that represents the rightmost header item in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the rightmost header item in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.ItemRight.Pressed">
      <summary>Gets a visual style element that represents the rightmost header item in the pressed state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the rightmost header item in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.SortArrow">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the sort arrow of a header item. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.SortArrow.SortedDown">
      <summary>Gets a visual style element that represents a downward-pointing sort arrow.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing sort arrow.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Header.SortArrow.SortedUp">
      <summary>Gets a visual style element that represents an upward-pointing sort arrow.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing sort arrow. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the list view control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Detail">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a list view in detail view. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Detail.Normal">
      <summary>Gets a visual style element that represents a list view in detail view. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a list view in detail view.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.EmptyText">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the text area of a list view that contains no items. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.EmptyText.Normal">
      <summary>Gets a visual style element that represents the text area of a list view that contains no items. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the text area that accompanies an empty list view.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Group">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a list view item group. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Group.Normal">
      <summary>Gets a visual style element that represents a list view item group. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a group of list view items.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of an item of the list view control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item.Disabled">
      <summary>Gets a visual style element that represents a disabled list view item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled list view item.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item.Hot">
      <summary>Gets a visual style element that represents a hot list view item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot list view item.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item.Normal">
      <summary>Gets a visual style element that represents a normal list view item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal list view item.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item.Selected">
      <summary>Gets a visual style element that represents a selected list view item that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected list view item that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.Item.SelectedNotFocus">
      <summary>Gets a visual style element that represents a selected list view item without focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected list view item without focus. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.SortedDetail">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a sorted list view control in detail view This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ListView.SortedDetail.Normal">
      <summary>Gets a visual style element that represents a sorted list view control in detail view. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a sorted list view control in detail view.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a menu. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.BarDropDown">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the drop-down arrow of a menu bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.BarDropDown.Normal">
      <summary>Gets a visual style element that represents the drop-down arrow of a menu bar. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the drop-down arrow of a menu bar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.BarItem">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a menu bar item. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.BarItem.Normal">
      <summary>Gets a visual style element that represents a menu bar item. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu bar item.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Chevron">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the chevron of a menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Chevron.Normal">
      <summary>Gets a visual style element that represents a menu chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu chevron. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.DropDown">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the drop-down arrow of a menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.DropDown.Normal">
      <summary>Gets a visual style element that represents the drop-down arrow of a menu. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the drop-down arrow of a menu.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Item">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a menu item. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Item.Demoted">
      <summary>Gets a visual style element that represents a menu item that has been demoted.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu item that has been demoted.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Item.Normal">
      <summary>Gets a visual style element that represents a menu item in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu item in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Item.Selected">
      <summary>Gets a visual style element that represents a menu item in the selected state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu item in the selected state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Separator">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a menu item separator. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Menu.Separator.Normal">
      <summary>Gets a visual style element that represents a menu item separator.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a menu item separator. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a menu band. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the new application button of a menu band. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.Checked">
      <summary>Gets a visual style element that represents the new application button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.Disabled">
      <summary>Gets a visual style element that represents the new application button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.Hot">
      <summary>Gets a visual style element that represents the new application button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.HotChecked">
      <summary>Gets a visual style element that represents the new application button in the hot and checked states.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the hot and checked states.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.Normal">
      <summary>Gets a visual style element that represents the new application button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.NewApplicationButton.Pressed">
      <summary>Gets a visual style element that represents the new application button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the new application button in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.Separator">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a menu band separator. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.MenuBand.Separator.Normal">
      <summary>Gets a visual style element that represents a separator between items in a menu band.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a separator between items in a menu band.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Page">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a page. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Down">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a down indicator in an up-down or spin box control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Down.Disabled">
      <summary>Gets a visual style element that represents the disabled state of the down indicator in an up-down or spin box control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a down indicator of an up-down or spin box control in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Down.Hot">
      <summary>Gets a visual style element that represents a down indicator of an up-down or spin box control in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the down indicator of an up-down or spin box in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Down.Normal">
      <summary>Gets a visual style element that represents the down indicator of an up-down or spin box control in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a down indicator up an up-down or spin box control in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Down.Pressed">
      <summary>Gets a visual style element that represents the down indicator of an up-down or spin box in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a down indicator of an up-down or spin box in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.DownHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a page backward indicator in a pager control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.DownHorizontal.Disabled">
      <summary>Gets a visual style element that represents a page backward indicator of a pager control in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page backward indicator of a pager control in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.DownHorizontal.Hot">
      <summary>Gets a visual style element that represents a page backward indicator of a pager control in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page backward indicator of a pager control in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.DownHorizontal.Normal">
      <summary>Gets a visual style element that represents a page backward indicator of a pager control in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page backward indicator of a pager control in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.DownHorizontal.Pressed">
      <summary>Gets a visual style element that represents a page backward indicator of a pager control in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents page backward indicator of a pager control in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Up">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a page up indicator of an up-down or spin box control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Up.Disabled">
      <summary>Gets a visual style element that represents a page up indicator of an up-down or spin box control in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page up indicator of an up-down or spin box control in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Up.Hot">
      <summary>Gets a visual style element that represents a page up indicator of an up-down or spin box control in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page up indicator of an up-down or spin box control in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Up.Normal">
      <summary>Gets a visual style element that represents a page up indicator of an up-down or spin box control in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page up indicator of an up-down or spin box control in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.Up.Pressed">
      <summary>Gets a visual style element that represents a page up indicator of an up-down or spin box control in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page up indicator of an up-down or spin box control in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.UpHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a page forward indicator of a pager control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.UpHorizontal.Disabled">
      <summary>Gets a visual style element that represents a page forward indicator of a pager control in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page forward indicator of a pager control in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.UpHorizontal.Hot">
      <summary>Gets a visual style element that represents a page forward indicator of a pager control in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page forward indicator of a pager control in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.UpHorizontal.Normal">
      <summary>Gets a visual style element that represents a page forward indicator of a pager control in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page forward indicator of a pager control in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Page.UpHorizontal.Pressed">
      <summary>Gets a visual style element that represents a page forward indicator of a pager control in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a page forward indicator of a pager control in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the progress bar control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.Bar">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the frame of a horizontal progress bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.Bar.Normal">
      <summary>Gets a visual style element that represents a horizontal progress bar frame.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal progress bar frame. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.BarVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the frame of a vertical progress bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.BarVertical.Normal">
      <summary>Gets a visual style element that represents a vertical progress bar frame.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical progress bar frame.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.Chunk">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the pieces that fill a horizontal progress bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.Chunk.Normal">
      <summary>Gets a visual style element that represents the pieces that fill a horizontal progress bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the pieces that fill a horizontal progress bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.ChunkVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the pieces that fill a vertical progress bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ProgressBar.ChunkVertical.Normal">
      <summary>Gets a visual style element that represents the pieces that fill a vertical progress bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the pieces that fill a vertical progress bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the rebar control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Band">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a rebar band. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Band.Normal">
      <summary>Gets a visual style element that represents a rebar band. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a rebar band.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Chevron">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a horizontal chevron. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Chevron.Hot">
      <summary>Gets a visual style element that represents a hot chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot chevron.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Chevron.Normal">
      <summary>Gets a visual style element that represents a normal chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal chevron.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Chevron.Pressed">
      <summary>Gets a visual style element that represents a pressed chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed chevron.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.ChevronVertical">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a chevron. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.ChevronVertical.Hot">
      <summary>Gets a visual style element that represents a hot chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot chevron.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.ChevronVertical.Normal">
      <summary>Gets a visual style element that represents a normal chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal chevron.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.ChevronVertical.Pressed">
      <summary>Gets a visual style element that represents a pressed chevron.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed chevron. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Gripper">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the gripper bar of a horizontal rebar control. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.Gripper.Normal">
      <summary>Gets a visual style element that represents a gripper bar for a horizontal rebar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a gripper bar for a horizontal rebar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.GripperVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the gripper bar of a vertical rebar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Rebar.GripperVertical.Normal">
      <summary>Gets a visual style element that represents a gripper bar for a vertical rebar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a gripper bar for a vertical rebar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the scroll bar control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state and direction of a scroll arrow. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.DownDisabled">
      <summary>Gets a visual style element that represents a downward-pointing scroll arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing scroll arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.DownHot">
      <summary>Gets a visual style element that represents a downward-pointing scroll arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing scroll arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.DownNormal">
      <summary>Gets a visual style element that represents a downward-pointing scroll arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing scroll arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.DownPressed">
      <summary>Gets a visual style element that represents a downward-pointing scroll arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing scroll arrow in the pressed state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.LeftDisabled">
      <summary>Gets a visual style element that represents a left-pointing scroll arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing scroll arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.LeftHot">
      <summary>Gets a visual style element that represents a left-pointing scroll arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing scroll arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.LeftNormal">
      <summary>Gets a visual style element that represents a left-pointing scroll arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing scroll arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.LeftPressed">
      <summary>Gets a visual style element that represents a left-pointing scroll arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing scroll arrow in the pressed state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.RightDisabled">
      <summary>Gets a visual style element that represents a right-pointing scroll arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing scroll arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.RightHot">
      <summary>Gets a visual style element that represents a right-pointing scroll arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing scroll arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.RightNormal">
      <summary>Gets a visual style element that represents a right-pointing scroll arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing scroll arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.RightPressed">
      <summary>Gets a visual style element that represents a right-pointing scroll arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing scroll arrow in the pressed state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.UpDisabled">
      <summary>Gets a visual style element that represents an upward-pointing scroll arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing scroll arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.UpHot">
      <summary>Gets a visual style element that represents an upward-pointing scroll arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing scroll arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.UpNormal">
      <summary>Gets a visual style element that represents an upward-pointing scroll arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing scroll arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ArrowButton.UpPressed">
      <summary>Gets a visual style element that represents an upward-pointing scroll arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing scroll arrow in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.GripperHorizontal">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the grip of a horizontal scroll box (also known as the thumb). This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.GripperHorizontal.Normal">
      <summary>Gets a visual style element that represents a grip for a horizontal scroll box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a grip for a horizontal scroll box. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.GripperVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the grip of a vertical scroll box (also known as the thumb). This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.GripperVertical.Normal">
      <summary>Gets a visual style element that represents a grip for a vertical scroll box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a grip for a vertical scroll box. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LeftTrackHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the left part of a horizontal scroll bar track. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LeftTrackHorizontal.Disabled">
      <summary>Gets a visual style element that represents the left part of a horizontal scroll bar track in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left part of a horizontal scroll bar track in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LeftTrackHorizontal.Hot">
      <summary>Gets a visual style element that represents the left part of a horizontal scroll bar track in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left part of a horizontal scroll bar track in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LeftTrackHorizontal.Normal">
      <summary>Gets a visual style element that represents the left part of a horizontal scroll bar track in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left part of a horizontal scroll bar track in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LeftTrackHorizontal.Pressed">
      <summary>Gets a visual style element that represents the left part of a horizontal scroll bar track in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left part of a horizontal scroll bar track in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LowerTrackVertical">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the lower part of a vertical scroll bar track. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LowerTrackVertical.Disabled">
      <summary>Gets a visual style element that represents the lower part of a vertical scroll bar track in the disabled state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the lower part of a vertical scroll bar track in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LowerTrackVertical.Hot">
      <summary>Gets a visual style element that represents the lower part of a vertical scroll bar track in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the lower part of a vertical scroll bar track in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LowerTrackVertical.Normal">
      <summary>Gets a visual style element that represents the lower part of a vertical scroll bar track in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the lower part of a vertical scroll bar track in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.LowerTrackVertical.Pressed">
      <summary>Gets a visual style element that represents the lower part of a vertical scroll bar track in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the lower part of a vertical scroll bar track in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.RightTrackHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the right part of a horizontal scroll bar track. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.RightTrackHorizontal.Disabled">
      <summary>Gets a visual style element that represents the right part of a horizontal scroll bar track in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right part of a horizontal scroll bar track in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.RightTrackHorizontal.Hot">
      <summary>Gets a visual style element that represents the right part of a horizontal scroll bar track in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right part of a horizontal scroll bar track in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.RightTrackHorizontal.Normal">
      <summary>Gets a visual style element that represents the right part of a horizontal scroll bar track in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right part of a horizontal scroll bar track in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.RightTrackHorizontal.Pressed">
      <summary>Gets a visual style element that represents the right part of a horizontal scroll bar track in the pressed state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right part of a horizontal scroll bar track in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.SizeBox">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the sizing handle of a scroll bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.SizeBox.LeftAlign">
      <summary>Gets a visual style element that represents a sizing handle that is aligned to the left.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a sizing handle that is aligned to the left.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.SizeBox.RightAlign">
      <summary>Gets a visual style element that represents a sizing handle that is aligned to the right.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a sizing handle that is aligned to the right. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a horizontal scroll box (also known as the thumb). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonHorizontal.Disabled">
      <summary>Gets a visual style element that represents a horizontal scroll box in the disabled state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonHorizontal.Hot">
      <summary>Gets a visual style element that represents a horizontal scroll box in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonHorizontal.Normal">
      <summary>Gets a visual style element that represents a horizontal scroll box in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonHorizontal.Pressed">
      <summary>Gets a visual style element that represents a horizontal scroll box in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonVertical">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a vertical scroll box (also known as the thumb). This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonVertical.Disabled">
      <summary>Gets a visual style element that represents a vertical scroll box in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonVertical.Hot">
      <summary>Gets a visual style element that represents a vertical scroll box in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonVertical.Normal">
      <summary>Gets a visual style element that represents a vertical scroll box in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.ThumbButtonVertical.Pressed">
      <summary>Gets a visual style element that represents a vertical scroll box in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.UpperTrackVertical">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the upper part of a vertical scroll bar track. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.UpperTrackVertical.Disabled">
      <summary>Gets a visual style element that represents the upper part of a vertical scroll bar track in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the upper part of a vertical scroll bar track in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.UpperTrackVertical.Hot">
      <summary>Gets a visual style element that represents the upper part of a vertical scroll bar track in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the upper part of a vertical scroll bar track in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.UpperTrackVertical.Normal">
      <summary>Gets a visual style element that represents the upper part of a vertical scroll bar track in the normal state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the upper part of a vertical scroll bar track in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ScrollBar.UpperTrackVertical.Pressed">
      <summary>Gets a visual style element that represents the upper part of a vertical scroll bar track in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the upper part of a vertical scroll bar track in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the arrows of a spin button control (also known as an up-down control). This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Down">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the downward-pointing arrow for a spin button control (also known as an up-down control). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Down.Disabled">
      <summary>Gets a visual style element that represents a downward-pointing spin button arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing spin button arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Down.Hot">
      <summary>Gets a visual style element that represents a downward-pointing spin button arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing spin button arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Down.Normal">
      <summary>Gets a visual style element that represents a downward-pointing spin button arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing spin button arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Down.Pressed">
      <summary>Gets a visual style element that represents a downward-pointing spin button arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing spin button arrow in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.DownHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the left-pointing arrow for a spin button control (also known as an up-down control). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.DownHorizontal.Disabled">
      <summary>Gets a visual style element that represents a left-pointing spin button arrow in the disabled state. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing spin button arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.DownHorizontal.Hot">
      <summary>Gets a visual style element that represents a left-pointing spin button arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing spin button arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.DownHorizontal.Normal">
      <summary>Gets a visual style element that represents a left-pointing spin button arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing spin button arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.DownHorizontal.Pressed">
      <summary>Gets a visual style element that represents a left-pointing spin button arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing spin button arrow in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Up">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the upward-pointing arrow for a spin button control (also known as an up-down control). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Up.Disabled">
      <summary>Gets a visual style element that represents an upward-pointing spin button arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing spin button arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Up.Hot">
      <summary>Gets a visual style element that represents an upward-pointing spin button arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing spin button arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Up.Normal">
      <summary>Gets a visual style element that represents an upward-pointing spin button arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing spin button arrow in the normal state. </returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.Up.Pressed">
      <summary>Gets a visual style element that represents an upward-pointing spin button arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing spin button arrow in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.UpHorizontal">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the right-pointing arrow for a spin button control (also known as an up-down control). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.UpHorizontal.Disabled">
      <summary>Gets a visual style element that represents a right-pointing spin button arrow in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing spin button arrow in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.UpHorizontal.Hot">
      <summary>Gets a visual style element that represents a right-pointing spin button arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing spin button arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.UpHorizontal.Normal">
      <summary>Gets a visual style element that represents a right-pointing spin button arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing spin button arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Spin.UpHorizontal.Pressed">
      <summary>Gets a visual style element that represents a right-pointing spin button arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing spin button arrow in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the Start menu. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOff">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the bottom border of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOff.Normal">
      <summary>Gets a visual style element that represents the bottom border of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bottom border of the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOffButtons">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Log Off and Shut Down buttons in the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOffButtons.Hot">
      <summary>Gets a visual style element that represents the Log Off and Shut Down buttons in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Log Off and Shut Down buttons in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOffButtons.Normal">
      <summary>Gets a visual style element that represents the Log Off and Shut Down buttons in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Log Off and Shut Down buttons in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.LogOffButtons.Pressed">
      <summary>Gets a visual style element that represents the Log Off and Shut Down buttons in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Log Off and Shut Down buttons in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MorePrograms">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the All Programs item in the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MorePrograms.Normal">
      <summary>Gets a visual style element that represents the background of the All Programs menu item.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the All Programs menu item. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MoreProgramsArrow">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the All Programs arrow in the Start menu. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MoreProgramsArrow.Hot">
      <summary>Gets a visual style element that represents the All Programs arrow in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the All Programs arrow in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MoreProgramsArrow.Normal">
      <summary>Gets a visual style element that represents the All Programs arrow in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the All Programs arrow in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.MoreProgramsArrow.Pressed">
      <summary>Gets a visual style element that represents the All Programs arrow in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the All Programs arrow in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.PlaceList">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the right side of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.PlaceList.Normal">
      <summary>Gets a visual style element that represents the background of the right side of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the right side of the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.PlaceListSeparator">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the bar that separates groups of items in the right side of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.PlaceListSeparator.Normal">
      <summary>Gets a visual style element that represents the bar that separates groups of items in the right side of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bar that separates groups of items in the right side of the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.Preview">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the preview area of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.Preview.Normal">
      <summary>Gets a visual style element that represents the preview area of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the preview area of the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.ProgList">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the left side of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.ProgList.Normal">
      <summary>Gets a visual style element that represents the background of the left side of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the left side of the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.ProgListSeparator">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the bar that separates groups of items in the left side of the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.ProgListSeparator.Normal">
      <summary>Gets a visual style element that represents the bar that separates groups of items in the left side of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bar that separates groups of items in the left side of the Start menu.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.UserPane">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the top border of the Start menu. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.UserPane.Normal">
      <summary>Gets a visual style element that represents the top border of the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the top border of the Start menu.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.UserPicture">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the user picture on the Start menu. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.StartPanel.UserPicture.Normal">
      <summary>Gets a visual style element that represents the background of the user picture on the Start menu.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the user picture on the Start menu. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Status">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the status bar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Bar">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the status bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Bar.Normal">
      <summary>Gets a visual style element that represents the background of the status bar. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the status bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the grip of the status bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Gripper.Normal">
      <summary>Gets a visual style element that represents the status bar grip.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the status bar grip. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.GripperPane">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the pane of the grip in the status bar. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.GripperPane.Normal">
      <summary>Gets a visual style element that represents a pane for the status bar grip.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pane for the status bar grip. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Pane">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a status bar pane. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Status.Pane.Normal">
      <summary>Gets a visual style element that represents a status bar pane.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a status bar pane.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a tab control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.Body">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the interior of a tab control page. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.Body.Normal">
      <summary>Gets a visual style element that represents the interior of a tab control page. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the interior of a tab control page. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.Pane">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the border of a tab control page. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.Pane.Normal">
      <summary>Gets a visual style element that represents the border of a tab control page.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the border of a tab control page.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItem">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its top, left, and right borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItem.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its top, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its top, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItem.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its top, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its top, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItem.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its top, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its top, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItem.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its top, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its top, left, and right borders with other tab controls. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemBothEdges">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a tab control that shares its top border with another tab control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemBothEdges.Normal">
      <summary>Gets a visual style element that represents a tab control that shares its top border with another tab control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tab control that shares its top border with another tab control. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemLeftEdge">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its top and right borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemLeftEdge.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its top and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its top and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemLeftEdge.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its top and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its top and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemLeftEdge.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its top and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its top and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemLeftEdge.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its top and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its top and right borders with other tab controls. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemRightEdge">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its top and left borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemRightEdge.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its top and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its top and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemRightEdge.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its top and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its top and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemRightEdge.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its top and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its top and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TabItemRightEdge.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its top and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its top and left borders with other tab controls. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItem">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its bottom, left, and right borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItem.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its bottom, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its bottom, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItem.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its bottom, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its bottom, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItem.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its bottom, left, and right borders with other tab controls. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its bottom, left, and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItem.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its bottom, left, and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its bottom, left, and right borders with other tab controls.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemBothEdges">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a tab control that shares its bottom border with another tab control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemBothEdges.Normal">
      <summary>Gets a visual style element that represents a tab control that shares its bottom border with another tab control.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tab control that shares its bottom border with another tab control. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemLeftEdge">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its bottom and right borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemLeftEdge.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its bottom and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its bottom and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemLeftEdge.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its bottom and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its bottom and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemLeftEdge.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its bottom and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its bottom and right borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemLeftEdge.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its bottom and right borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its bottom and right borders with other tab controls. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemRightEdge">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tab control that shares its bottom and left borders with other tab controls. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemRightEdge.Disabled">
      <summary>Gets a visual style element that represents a disabled tab control that shares its bottom and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled tab control that shares its bottom and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemRightEdge.Hot">
      <summary>Gets a visual style element that represents a hot tab control that shares its bottom and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot tab control that shares its bottom and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemRightEdge.Normal">
      <summary>Gets a visual style element that represents a normal tab control that shares its bottom and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal tab control that shares its bottom and left borders with other tab controls.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Tab.TopTabItemRightEdge.Pressed">
      <summary>Gets a visual style element that represents a pressed tab control that shares its bottom and left borders with other tab controls.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a pressed tab control that shares its bottom and left borders with other tab controls. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for parts of the taskbar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.FlashButton">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a flashing window button in the taskbar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.FlashButton.Normal">
      <summary>Gets a visual style element that represents a flashing window button in the taskbar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a flashing window button in the taskbar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.FlashButtonGroupMenu">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a flashing menu item of a window button in the taskbar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.FlashButtonGroupMenu.Normal">
      <summary>Gets a visual style element that represents a flashing menu item for a window button in the taskbar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a flashing menu item for a window button in the taskbar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.GroupCount">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a group counter of the taskbar. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskBand.GroupCount.Normal">
      <summary>Gets a visual style element that represents a group counter for the taskbar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a group counter for the taskbar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the taskbar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundBottom">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a taskbar that is docked on the bottom of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundBottom.Normal">
      <summary>Gets a visual style element that represents the background of a taskbar that is docked on the bottom of the screen. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a taskbar that is docked on the bottom of the screen. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundLeft">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a taskbar that is docked on the left side of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundLeft.Normal">
      <summary>Gets a visual style element that represents the background of a taskbar that is docked on the left side of the screen. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a taskbar that is docked on the left side of the screen. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundRight">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a taskbar that is docked on the right side of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundRight.Normal">
      <summary>Gets a visual style element that represents the background of a taskbar that is docked on the right side of the screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a taskbar that is docked on the right side of the screen.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundTop">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a taskbar that is docked on the top of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.BackgroundTop.Normal">
      <summary>Gets a visual style element that represents the background of a taskbar that is docked on the top of the screen. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a taskbar that is docked on the top of the screen. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarBottom">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the sizing bar of a taskbar that is docked on the bottom of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarBottom.Normal">
      <summary>Gets a visual style element that represents the sizing bar for a taskbar that is docked on the bottom of the screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing bar for a taskbar that is docked on the bottom of the screen.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarLeft">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the sizing bar of a taskbar that is docked on the left side of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarLeft.Normal">
      <summary>Gets a visual style element that represents the sizing bar for a taskbar that is docked on the left side of the screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing bar for a taskbar that is docked on the left side of the screen.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarRight">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the sizing bar of a taskbar that is docked on the right side of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarRight.Normal">
      <summary>Gets a visual style element that represents the sizing bar for a taskbar that is docked on the right side of the screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing bar for a taskbar that is docked on the right side of the screen.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarTop">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the sizing bar of a taskbar that is docked on the top of the screen. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Taskbar.SizingBarTop.Normal">
      <summary>Gets a visual style element that represents the sizing bar for a taskbar that is docked on the top of the screen.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing bar for a taskbar that is docked on the top of the screen.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskbarClock">
      <summary>Contains a class that provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the taskbar clock. This class cannot be inherited. </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskbarClock.Time">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the taskbar clock. This class cannot be inherited.  </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TaskbarClock.Time.Normal">
      <summary>Gets a visual style element that represents the background of the taskbar clock. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the taskbar clock.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a text box. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.Caret">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the caret of a text box. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.Caret.Normal">
      <summary>Gets a visual style element that represents a text box caret.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the insertion point of a text box. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a text box. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Assist">
      <summary>Gets a visual style element that represents a text box in assist mode.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a text box in assist mode.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Disabled">
      <summary>Gets a visual style element that represents a disabled text box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a disabled text box.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Focused">
      <summary>Gets a visual style element that represents a text box that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a text box that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Hot">
      <summary>Gets a visual style element that represents a hot text box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a hot text box.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Normal">
      <summary>Gets a visual style element that represents a normal text box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a normal text box.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.ReadOnly">
      <summary>Gets a visual style element that represents a read-only text box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a read-only text box.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TextBox.TextEdit.Selected">
      <summary>Gets a visual style element that represents a selected text box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a selected text box.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a toolbar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a toolbar button. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Checked">
      <summary>Gets a visual style element that represents a toolbar button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Disabled">
      <summary>Gets a visual style element that represents a toolbar button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Hot">
      <summary>Gets a visual style element that represents a toolbar button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.HotChecked">
      <summary>Gets a visual style element that represents a toolbar button in the hot and checked states.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the hot and checked states.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Normal">
      <summary>Gets a visual style element that represents a toolbar button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.Button.Pressed">
      <summary>Gets a visual style element that represents a toolbar button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a toolbar button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a drop-down toolbar button. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.Checked">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.Disabled">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.Hot">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.HotChecked">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the hot and checked states.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the hot and checked states.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.Normal">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.DropDownButton.Pressed">
      <summary>Gets a visual style element that represents a drop-down toolbar button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a drop-down toolbar button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SeparatorHorizontal">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a horizontal separator of the toolbar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SeparatorHorizontal.Normal">
      <summary>Gets a visual style element that represents a horizontal separator of the toolbar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal separator of the toolbar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SeparatorVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a vertical separator of the toolbar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SeparatorVertical.Normal">
      <summary>Gets a visual style element that represents a vertical separator of the toolbar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical separator of the toolbar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the regular button portion of a combined regular button and drop-down button. This class cannot be inherited.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.Checked">
      <summary>Gets a visual style element that represents a split button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.Disabled">
      <summary>Gets a visual style element that represents a split button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.Hot">
      <summary>Gets a visual style element that represents a split button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.HotChecked">
      <summary>Gets a visual style element that represents a split button in the hot and checked states.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the hot and checked states.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.Normal">
      <summary>Gets a visual style element that represents a split button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButton.Pressed">
      <summary>Gets a visual style element that represents a split button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split button in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the drop-down portion of a combined regular button and drop-down button. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.Checked">
      <summary>Gets a visual style element that represents a split drop-down button in the checked state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the checked state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.Disabled">
      <summary>Gets a visual style element that represents a split drop-down button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.Hot">
      <summary>Gets a visual style element that represents a split drop-down button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.HotChecked">
      <summary>Gets a visual style element that represents a split drop-down button in the hot and checked states.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the hot and checked states.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.Normal">
      <summary>Gets a visual style element that represents a split drop-down button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolBar.SplitButtonDropDown.Pressed">
      <summary>Gets a visual style element that represents a split drop-down button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a split drop-down button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a ToolTip. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Balloon">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for a balloon ToolTip. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Balloon.Link">
      <summary>Gets a visual style element that represents a balloon ToolTip that contains a link.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a balloon ToolTip that contains a link.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Balloon.Normal">
      <summary>Gets a visual style element that represents a balloon ToolTip that contains text.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a balloon ToolTip that contains text.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.BalloonTitle">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the title area of a balloon ToolTip. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.BalloonTitle.Normal">
      <summary>Gets a visual style element that represents the title area of a balloon ToolTip. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title area of a balloon ToolTip. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Close">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Close button of a ToolTip. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Close.Hot">
      <summary>Gets a visual style element that represents the ToolTip Close button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the ToolTip Close button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Close.Normal">
      <summary>Gets a visual style element that represents the ToolTip Close button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the ToolTip Close button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Close.Pressed">
      <summary>Gets a visual style element that represents the ToolTip Close button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the ToolTip Close button in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Standard">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for a standard ToolTip. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Standard.Link">
      <summary>Gets a visual style element that represents a standard ToolTip that contains a link.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a standard ToolTip that contains a link.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.Standard.Normal">
      <summary>Gets a visual style element that represents a standard ToolTip that contains text.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a standard ToolTip that contains text.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.StandardTitle">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the title area of a standard ToolTip. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ToolTip.StandardTitle.Normal">
      <summary>Gets a visual style element that represents the title area of a standard ToolTip. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title area of a standard ToolTip. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the track bar control. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the slider (also known as the thumb) of a horizontal track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb.Disabled">
      <summary>Gets a visual style element that represents the slider of a horizontal track bar in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a horizontal track bar in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb.Focused">
      <summary>Gets a visual style element that represents the slider of a horizontal track bar that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a horizontal track bar that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb.Hot">
      <summary>Gets a visual style element that represents the slider of a horizontal track bar in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a horizontal track bar in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb.Normal">
      <summary>Gets a visual style element that represents the slider of a horizontal track bar in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a horizontal track bar in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Thumb.Pressed">
      <summary>Gets a visual style element that represents the slider of a horizontal track bar in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a horizontal track bar in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the downward-pointing track bar slider (also known as the thumb). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom.Disabled">
      <summary>Gets a visual style element that represents a downward-pointing track bar slider in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing track bar slider in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom.Focused">
      <summary>Gets a visual style element that represents a downward-pointing track bar slider that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing track bar slider that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom.Hot">
      <summary>Gets a visual style element that represents a downward-pointing track bar slider in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing track bar slider in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom.Normal">
      <summary>Gets a visual style element that represents a downward-pointing track bar slider in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing track bar slider in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbBottom.Pressed">
      <summary>Gets a visual style element that represents a downward-pointing track bar slider in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a downward-pointing track bar slider in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the left-pointing track bar slider (also known as the thumb). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft.Disabled">
      <summary>Gets a visual style element that represents a left-pointing track bar slider in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing track bar slider in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft.Focused">
      <summary>Gets a visual style element that represents a left-pointing track bar slider that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing track bar slider that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft.Hot">
      <summary>Gets a visual style element that represents a left-pointing track bar slider in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing track bar slider in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft.Normal">
      <summary>Gets a visual style element that represents a left-pointing track bar slider in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing track bar slider in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbLeft.Pressed">
      <summary>Gets a visual style element that represents a left-pointing track bar slider in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a left-pointing track bar slider in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the right-pointing track bar slider (also known as the thumb). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight.Disabled">
      <summary>Gets a visual style element that represents a right-pointing track bar slider in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing track bar slider in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight.Focused">
      <summary>Gets a visual style element that represents a right-pointing track bar slider that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing track bar slider that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight.Hot">
      <summary>Gets a visual style element that represents a right-pointing track bar slider in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing track bar slider in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight.Normal">
      <summary>Gets a visual style element that represents a right-pointing track bar slider in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing track bar slider in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbRight.Pressed">
      <summary>Gets a visual style element that represents a right-pointing track bar slider in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a right-pointing track bar slider in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the upward-pointing track bar slider (also known as the thumb). This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop.Disabled">
      <summary>Gets a visual style element that represents an upward-pointing track bar slider in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing track bar slider in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop.Focused">
      <summary>Gets a visual style element that represents an upward-pointing track bar slider that has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing track bar slider that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop.Hot">
      <summary>Gets a visual style element that represents an upward-pointing track bar slider in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing track bar slider in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop.Normal">
      <summary>Gets a visual style element that represents an upward-pointing track bar slider in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing track bar slider in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbTop.Pressed">
      <summary>Gets a visual style element that represents an upward-pointing track bar slider in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an upward-pointing track bar slider in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the slider (also known as the thumb) of a vertical track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical.Disabled">
      <summary>Gets a visual style element that represents the slider of a vertical track bar in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a vertical track bar in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical.Focused">
      <summary>Gets a visual style element that represents the slider of a vertical track bar that has focus. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a vertical track bar that has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical.Hot">
      <summary>Gets a visual style element that represents the slider of a vertical track bar in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a vertical track bar in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical.Normal">
      <summary>Gets a visual style element that represents the slider of a vertical track bar in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a vertical track bar in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.ThumbVertical.Pressed">
      <summary>Gets a visual style element that represents the slider of a vertical track bar in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the slider of a vertical track bar in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Ticks">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a single tick of a horizontal track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Ticks.Normal">
      <summary>Gets a visual style element that represents a single tick of a horizontal track bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a single tick of a horizontal track bar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.TicksVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a single tick of a vertical track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.TicksVertical.Normal">
      <summary>Gets a visual style element that represents a single tick of a vertical track bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a single tick of a vertical track bar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Track">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the track for a horizontal track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.Track.Normal">
      <summary>Gets a visual style element that represents the track for a horizontal track bar. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the track for a horizontal track bar. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.TrackVertical">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the track for a vertical track bar. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrackBar.TrackVertical.Normal">
      <summary>Gets a visual style element that represents the track for a vertical track bar.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the track for a vertical track bar.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrayNotify">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the background of the notification area, which is located at the far right of the taskbar. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrayNotify.AnimateBackground">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for an animated background of the notification area. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrayNotify.AnimateBackground.Normal">
      <summary>Gets a visual style element that represents an animated background of the notification area.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents an animated background of the notification area. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TrayNotify.Background">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of the notification area. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TrayNotify.Background.Normal">
      <summary>Gets a visual style element that represents the background of the notification area.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of the notification area. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of the tree view control. This class cannot be inherited.  </summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Branch">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for a tree view branch. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Branch.Normal">
      <summary>Gets a visual style element that represents a tree view branch. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view branch.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Glyph">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the plus sign (+) and minus sign (-) buttons of a tree view control. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Glyph.Closed">
      <summary>Gets a visual style element that represents a minus sign (-) button of a tree view node.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a minus sign button of a tree view node.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Glyph.Opened">
      <summary>Gets a visual style element that represents a plus sign (+) button of a tree view node.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a plus sign button of a tree view node.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of a tree view item. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item.Disabled">
      <summary>Gets a visual style element that represents a tree view item in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view item in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item.Hot">
      <summary>Gets a visual style element that represents a tree view item in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view item in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item.Normal">
      <summary>Gets a visual style element that represents a tree view item in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view item in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item.Selected">
      <summary>Gets a visual style element that represents a tree view item that is in the selected state and has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view item that is in the selected state and has focus.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.TreeView.Item.SelectedNotFocus">
      <summary>Gets a visual style element that represents a tree view item that is in the selected state but does not have focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a tree view item that is in the selected state but does not have focus.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window">
      <summary>Contains classes that provide <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for the parts of a window. This class cannot be inherited.</summary>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Active">
      <summary>Gets a visual style element that represents the title bar of an active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a disabled window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a disabled window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Caption.Inactive">
      <summary>Gets a visual style element that represents the title bar of an inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an inactive window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CaptionSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the title bar of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CaptionSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the title bar of a window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the title bar of a window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Close button of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton.Disabled">
      <summary>Gets a visual style element that represents a Close button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton.Hot">
      <summary>Gets a visual style element that represents a Close button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton.Normal">
      <summary>Gets a visual style element that represents a Close button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.CloseButton.Pressed">
      <summary>Gets a visual style element that represents a Close button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Close button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Dialog">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the background of a dialog box. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.Dialog.Normal">
      <summary>Gets a visual style element that represents the background of a dialog box.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the background of a dialog box.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameBottom">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the bottom border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameBottom.Active">
      <summary>Gets a visual style element that represents the bottom border of an active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bottom border of an active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameBottom.Inactive">
      <summary>Gets a visual style element that represents the bottom border of an inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bottom border of an inactive window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameBottomSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the bottom border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameBottomSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the bottom border of a window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the bottom border of a window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameLeft">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the left border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameLeft.Active">
      <summary>Gets a visual style element that represents the left border of an active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left border of an active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameLeft.Inactive">
      <summary>Gets a visual style element that represents the left border of an inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left border of an inactive window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameLeftSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the left border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameLeftSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the left border of a window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the left border of a window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameRight">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the right border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameRight.Active">
      <summary>Gets a visual style element that represents the right border of an active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right border of an active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameRight.Inactive">
      <summary>Gets a visual style element that represents the right border of an inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right border of an inactive window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameRightSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the right border of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.FrameRightSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the right border of a window. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the right border of a window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HelpButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Help button of a window or dialog box. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HelpButton.Disabled">
      <summary>Gets a visual style element that represents a Help button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Help button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HelpButton.Hot">
      <summary>Gets a visual style element that represents a Help button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Help button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HelpButton.Normal">
      <summary>Gets a visual style element that represents a Help button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Help button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HelpButton.Pressed">
      <summary>Gets a visual style element that represents a Help button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Help button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalScroll">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the horizontal scroll bar of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalScroll.Disabled">
      <summary>Gets a visual style element that represents a horizontal scroll bar in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll bar in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalScroll.Hot">
      <summary>Gets a visual style element that represents a horizontal scroll bar in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll bar in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalScroll.Normal">
      <summary>Gets a visual style element that represents a horizontal scroll bar in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll bar in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalScroll.Pressed">
      <summary>Gets a visual style element that represents a horizontal scroll bar in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll bar in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalThumb">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the horizontal scroll box (also known as the thumb) of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalThumb.Disabled">
      <summary>Gets a visual style element that represents a horizontal scroll box in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalThumb.Hot">
      <summary>Gets a visual style element that represents a horizontal scroll box in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalThumb.Normal">
      <summary>Gets a visual style element that represents a horizontal scroll box in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.HorizontalThumb.Pressed">
      <summary>Gets a visual style element that represents a horizontal scroll box in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a horizontal scroll box in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Maximize button of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxButton.Disabled">
      <summary>Gets a visual style element that represents a Maximize button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Maximize button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxButton.Hot">
      <summary>Gets a visual style element that represents a Maximize button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Maximize button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxButton.Normal">
      <summary>Gets a visual style element that represents a Maximize button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Maximize button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxButton.Pressed">
      <summary>Gets a visual style element that represents a Maximize button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Maximize button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxCaption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a maximized window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxCaption.Active">
      <summary>Gets a visual style element that represents the title bar of a maximized active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a maximized active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxCaption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a maximized disabled window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a maximized disabled window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MaxCaption.Inactive">
      <summary>Gets a visual style element that represents the title bar of a maximized inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a maximized inactive window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiCloseButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Close button of a multiple-document interface (MDI) child window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiCloseButton.Disabled">
      <summary>Gets a visual style element that represents the Close button of a multiple-document interface (MDI) child window in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Close button of an MDI child window in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiCloseButton.Hot">
      <summary>Gets a visual style element that represents the Close button of a multiple-document interface (MDI) child window in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Close button of an MDI child window in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiCloseButton.Normal">
      <summary>Gets a visual style element that represents the Close button of a multiple-document interface (MDI) child window in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Close button of an MDI child window in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiCloseButton.Pressed">
      <summary>Gets a visual style element that represents the Close button of a multiple-document interface (MDI) child window in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Close button of an MDI child window in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiHelpButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Help button of a multiple-document interface (MDI) child window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiHelpButton.Disabled">
      <summary>Gets a visual style element that represents the Help button of a multiple-document interface (MDI) child window in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Help button of an MDI child window in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiHelpButton.Hot">
      <summary>Gets a visual style element that represents the Help button of a multiple-document interface (MDI) child window in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Help button of an MDI child window in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiHelpButton.Normal">
      <summary>Gets a visual style element that represents the Help button of a multiple-document interface (MDI) child window in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Help button of an MDI child window in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiHelpButton.Pressed">
      <summary>Gets a visual style element that represents the Help button of a multiple-document interface (MDI) child window in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Help button of an MDI child window in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiMinButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Minimize button of a multiple-document interface (MDI) child window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiMinButton.Disabled">
      <summary>Gets a visual style element that represents the Minimize button of a multiple-document interface (MDI) child window in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Minimize button of an MDI child window in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiMinButton.Hot">
      <summary>Gets a visual style element that represents the Minimize button of a multiple-document interface (MDI) child window in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Minimize button of an MDI child window in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiMinButton.Normal">
      <summary>Gets a visual style element that represents the Minimize button of a multiple-document interface (MDI) child window in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Minimize button of an MDI child window in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiMinButton.Pressed">
      <summary>Gets a visual style element that represents the Minimize button of a multiple-document interface (MDI) child window in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Minimize button of an MDI child window in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiRestoreButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Restore button of a multiple-document interface (MDI) child window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiRestoreButton.Disabled">
      <summary>Gets a visual style element that represents the Restore button of a multiple-document interface (MDI) child window in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Restore button of an MDI child window in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiRestoreButton.Hot">
      <summary>Gets a visual style element that represents the Restore button of a multiple-document interface (MDI) child window in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Restore button of an MDI child window in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiRestoreButton.Normal">
      <summary>Gets a visual style element that represents the Restore button of a multiple-document interface (MDI) child window in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Restore button of an MDI child window in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiRestoreButton.Pressed">
      <summary>Gets a visual style element that represents the Restore button of a multiple-document interface (MDI) child window in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the Restore button of an MDI child window in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiSysButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the System button of a multiple-document interface (MDI) child window with visual styles. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiSysButton.Disabled">
      <summary>Gets a visual style element that represents the System button of a multiple-document interface (MDI) child window in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the System button of an MDI child window in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiSysButton.Hot">
      <summary>Gets a visual style element that represents the System button of a multiple-document interface (MDI) child window in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the System button of an MDI child window in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiSysButton.Normal">
      <summary>Gets a visual style element that represents the System button of a multiple-document interface (MDI) child window in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the System button of an MDI child window in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MdiSysButton.Pressed">
      <summary>Gets a visual style element that represents the System button of a multiple-document interface (MDI) child window in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the System button of an MDI child window in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Minimize button of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinButton.Disabled">
      <summary>Gets a visual style element that represents a Minimize button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Minimize button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinButton.Hot">
      <summary>Gets a visual style element that represents a Minimize button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Minimize button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinButton.Normal">
      <summary>Gets a visual style element that represents a Minimize button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Minimize button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinButton.Pressed">
      <summary>Gets a visual style element that represents a Minimize button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Minimize button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinCaption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a minimized window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinCaption.Active">
      <summary>Gets a visual style element that represents the title bar of a minimized active window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a minimized active window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinCaption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a minimized disabled window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a minimized disabled window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.MinCaption.Inactive">
      <summary>Gets a visual style element that represents the title bar of a minimized inactive window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a minimized inactive window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.RestoreButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Restore button of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.RestoreButton.Disabled">
      <summary>Gets a visual style element that represents a Restore button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Restore button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.RestoreButton.Hot">
      <summary>Gets a visual style element that represents a Restore button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Restore button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.RestoreButton.Normal">
      <summary>Gets a visual style element that represents a Restore button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Restore button in the normal state. </returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.RestoreButton.Pressed">
      <summary>Gets a visual style element that represents a Restore button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a Restore button in the pressed state. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaption.Active">
      <summary>Gets a visual style element that represents the title bar of an active small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an active small window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a disabled small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a disabled small window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaption.Inactive">
      <summary>Gets a visual style element that represents the title bar of an inactive small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an inactive small window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaptionSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the title bar of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCaptionSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the title bar of a small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the title bar of a small window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCloseButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the Close button of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCloseButton.Disabled">
      <summary>Gets a visual style element that represents the small Close button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the small Close button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCloseButton.Hot">
      <summary>Gets a visual style element that represents the small Close button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the small Close button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCloseButton.Normal">
      <summary>Gets a visual style element that represents the small Close button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the small Close button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallCloseButton.Pressed">
      <summary>Gets a visual style element that represents the small Close button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the small Close button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameBottom">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the bottom border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameBottom.Active">
      <summary>Gets a visual style element that represents the bottom border of an active small window. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bottom border of an active small window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameBottom.Inactive">
      <summary>Gets a visual style element that represents the bottom border of an inactive small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the bottom border of an inactive small window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameBottomSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the bottom border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameBottomSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the bottom border of a small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the bottom border of a small window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameLeft">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the left border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameLeft.Active">
      <summary>Gets a visual style element that represents the left border of an active small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left border of an active small window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameLeft.Inactive">
      <summary>Gets a visual style element that represents the left border of an inactive small window. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the left border of an inactive small window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameLeftSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the left border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameLeftSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the left border of a small window. </summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the left border of a small window. </returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameRight">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the right border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameRight.Active">
      <summary>Gets a visual style element that represents the right border of an active small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right border of an active small window.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameRight.Inactive">
      <summary>Gets a visual style element that represents the right border of an inactive small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the right border of an inactive small window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameRightSizingTemplate">
      <summary>Provides a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> for the sizing template of the right border of a small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallFrameRightSizingTemplate.Normal">
      <summary>Gets a visual style element that represents the sizing template of the right border of a small window.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the sizing template of the right border of a small window.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMaxCaption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a maximized small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMaxCaption.Active">
      <summary>Gets a visual style element that represents the title bar of an active small window that is maximized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an active small window that is maximized.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMaxCaption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a disabled small window that is maximized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a disabled small window that is maximized.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMaxCaption.Inactive">
      <summary>Gets a visual style element that represents the title bar of an inactive small window that is maximized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an inactive small window that is maximized.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMinCaption">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the title bar of a minimized small window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMinCaption.Active">
      <summary>Gets a visual style element that represents the title bar of an active small window that is minimized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an active small window that is minimized.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMinCaption.Disabled">
      <summary>Gets a visual style element that represents the title bar of a disabled small window that is minimized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of a disabled small window that is minimized.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SmallMinCaption.Inactive">
      <summary>Gets a visual style element that represents the title bar of an inactive small window that is minimized.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents the title bar of an inactive small window that is minimized.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SysButton">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the System button of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SysButton.Disabled">
      <summary>Gets a visual style element that represents a System button in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a System button in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SysButton.Hot">
      <summary>Gets a visual style element that represents a System button in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a System button in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SysButton.Normal">
      <summary>Gets a visual style element that represents a System button in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a System button in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.SysButton.Pressed">
      <summary>Gets a visual style element that represents a System button in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a System button in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalScroll">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the vertical scroll bar of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalScroll.Disabled">
      <summary>Gets a visual style element that represents a vertical scroll bar in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll bar in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalScroll.Hot">
      <summary>Gets a visual style element that represents a vertical scroll bar in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll bar in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalScroll.Normal">
      <summary>Gets a visual style element that represents a vertical scroll bar in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll bar in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalScroll.Pressed">
      <summary>Gets a visual style element that represents a vertical scroll bar in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll bar in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalThumb">
      <summary>Provides <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> objects for each state of the vertical scroll box (also known as the thumb) of a window. This class cannot be inherited. </summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalThumb.Disabled">
      <summary>Gets a visual style element that represents a vertical scroll box in the disabled state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the disabled state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalThumb.Hot">
      <summary>Gets a visual style element that represents a vertical scroll box in the hot state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the hot state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalThumb.Normal">
      <summary>Gets a visual style element that represents a vertical scroll box in the normal state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the normal state.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Window.VerticalThumb.Pressed">
      <summary>Gets a visual style element that represents a vertical scroll box in the pressed state.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that represents a vertical scroll box in the pressed state.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleInformation">
      <summary>Provides information about the current visual style of the operating system.</summary>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Author">
      <summary>Gets the author of the current visual style.</summary>
      <returns>A string that specifies the author of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.ColorScheme">
      <summary>Gets the color scheme of the current visual style.</summary>
      <returns>A string that specifies the color scheme of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Company">
      <summary>Gets the company that created the current visual style.</summary>
      <returns>A string that specifies the company that created the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.ControlHighlightHot">
      <summary>Gets the color that the current visual style uses to indicate the hot state of a control.</summary>
      <returns>If visual styles are enabled, the <see cref="T:System.Drawing.Color" /> used to paint a highlight on a control in the hot state; otherwise, <see cref="P:System.Drawing.SystemColors.ButtonHighlight" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Copyright">
      <summary>Gets the copyright of the current visual style.</summary>
      <returns>A string that specifies the copyright of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Description">
      <summary>Gets a description of the current visual style.</summary>
      <returns>A string that describes the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.DisplayName">
      <summary>Gets the display name of the current visual style.</summary>
      <returns>A string that specifies the display name of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsEnabledByUser">
      <summary>Gets a value indicating whether the user has enabled visual styles in the operating system.</summary>
      <returns>true if the user has enabled visual styles in an operating system that supports them; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.IsSupportedByOS">
      <summary>Gets a value indicating whether the operating system supports visual styles.</summary>
      <returns>true if the operating system supports visual styles; otherwise, false.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.MinimumColorDepth">
      <summary>Gets the minimum color depth for the current visual style.</summary>
      <returns>The minimum color depth for the current visual style if visual styles are enabled; otherwise, 0.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Size">
      <summary>Gets a string that describes the size of the current visual style.</summary>
      <returns>A string that describes the size of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.SupportsFlatMenus">
      <summary>Gets a value indicating whether the current visual style supports flat menus.</summary>
      <returns>true if visual styles are enabled and the current visual style supports flat menus; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.TextControlBorder">
      <summary>Gets the color that the current visual style uses to paint the borders of controls that contain text.</summary>
      <returns>If visual styles are enabled, the <see cref="T:System.Drawing.Color" /> that the current visual style uses to paint the borders of controls that contain text; otherwise, <see cref="P:System.Drawing.SystemColors.ControlDarkDark" />.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Url">
      <summary>Gets a URL provided by the author of the current visual style.</summary>
      <returns>A string that specifies a URL provided by the author of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleInformation.Version">
      <summary>Gets the version of the current visual style.</summary>
      <returns>A string that indicates the version of the current visual style if visual styles are enabled; otherwise, an empty string ("").</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer">
      <summary>Provides methods for drawing and getting information about a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />. This class cannot be inherited.</summary>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.String,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> class using the given class, part, and state values.</summary>
      <param name="className">The class name of the element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> will represent.</param>
      <param name="part">The part of the element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> will represent.</param>
      <param name="state">The state of the element that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> will represent.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <exception cref="T:System.ArgumentException">The combination of <paramref name="className" />, <paramref name="part" />, and <paramref name="state" /> is not defined by the current visual style.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.#ctor(System.Windows.Forms.VisualStyles.VisualStyleElement)">
      <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> class using the given <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />.</summary>
      <param name="element">A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> will represent.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not defined by the current visual style.</exception>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class">
      <summary>Gets the class name of the current visual style element.</summary>
      <returns>A string that identifies the class of the current visual style element.</returns>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
      <summary>Draws the background image of the current visual style element within the specified bounding rectangle.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the background image.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which the background image is drawn.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Rectangle)">
      <summary>Draws the background image of the current visual style element within the specified bounding rectangle and clipped to the specified clipping rectangle.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the background image.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which the background image is drawn.</param>
      <param name="clipRectangle">A <see cref="T:System.Drawing.Rectangle" /> that defines a clipping rectangle for the drawing operation. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawEdge(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.Edges,System.Windows.Forms.VisualStyles.EdgeStyle,System.Windows.Forms.VisualStyles.EdgeEffects)">
      <summary>Draws one or more edges of the specified bounding rectangle.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that represents the interior of the <paramref name="bounds" /> parameter, minus the edges that were drawn.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the edges.</param>
      <param name="bounds">The <see cref="T:System.Drawing.Rectangle" /> whose bounds define the edges to draw.</param>
      <param name="edges">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.Edges" /> values.</param>
      <param name="style">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.EdgeStyle" /> values.</param>
      <param name="effects">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.EdgeEffects" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Image)">
      <summary>Draws the specified image within the specified bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the image.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which the image is drawn.</param>
      <param name="image">The <see cref="T:System.Drawing.Image" /> to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> or <paramref name="image" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawImage(System.Drawing.Graphics,System.Drawing.Rectangle,System.Windows.Forms.ImageList,System.Int32)">
      <summary>Draws the image from the specified <see cref="T:System.Windows.Forms.ImageList" /> within the specified bounds.</summary>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> used to draw the image.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which the image is drawn.</param>
      <param name="imageList">An <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> to draw.</param>
      <param name="imageIndex">The index of the <see cref="T:System.Drawing.Image" /> within <paramref name="imageList" /> to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> or <paramref name="image" /> is null.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="imageIndex" /> is less than 0, or greater than or equal to the number of images in<paramref name=" imageList" />.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)">
      <summary>Draws the background of a control's parent in the specified area.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the background of the parent of <paramref name="childControl" />. This object typically belongs to the child control.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which to draw the parent control's background. This rectangle should be inside the child control’s bounds.</param>
      <param name="childControl">The control whose parent's background will be drawn.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String)">
      <summary>Draws text in the specified bounds using default formatting.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which to draw the text.</param>
      <param name="textToDraw">The text to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean)">
      <summary>Draws text in the specified bounds with the option of displaying disabled text.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which to draw the text.</param>
      <param name="textToDraw">The text to draw.</param>
      <param name="drawDisabled">true to draw grayed-out text; otherwise, false.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.DrawText(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Boolean,System.Windows.Forms.TextFormatFlags)">
      <summary>Draws text in the specified bounding rectangle with the option of displaying disabled text and applying other text formatting.</summary>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> used to draw the text.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> in which to draw the text.</param>
      <param name="textToDraw">The text to draw.</param>
      <param name="drawDisabled">true to draw grayed-out text; otherwise, false.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundContentRectangle(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
      <summary>Returns the content area for the background of the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the content area for the background of the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the entire background area of the current visual style element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
      <summary>Returns the entire background area for the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the entire background area of the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="contentBounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the content area of the current visual style element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBackgroundRegion(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
      <summary>Returns the region for the background of the current visual style element.</summary>
      <returns>The <see cref="T:System.Drawing.Region" /> that contains the background of the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the entire background area of the current visual style element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetBoolean(System.Windows.Forms.VisualStyles.BooleanProperty)">
      <summary>Returns the value of the specified Boolean property for the current visual style element.</summary>
      <returns>true if the property specified by the <paramref name="prop" /> parameter is true for the current visual style element; otherwise, false.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.BooleanProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetColor(System.Windows.Forms.VisualStyles.ColorProperty)">
      <summary>Returns the value of the specified color property for the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.ColorProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetEnumValue(System.Windows.Forms.VisualStyles.EnumProperty)">
      <summary>Returns the value of the specified enumerated type property for the current visual style element.</summary>
      <returns>The integer value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.EnumProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFilename(System.Windows.Forms.VisualStyles.FilenameProperty)">
      <summary>Returns the value of the specified file name property for the current visual style element.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.FilenameProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetFont(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.FontProperty)">
      <summary>Returns the value of the specified font property for the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.FontProperty" /> values.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetInteger(System.Windows.Forms.VisualStyles.IntegerProperty)">
      <summary>Returns the value of the specified integer property for the current visual style element.</summary>
      <returns>The integer value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.IntegerProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetMargins(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.MarginProperty)">
      <summary>Returns the value of the specified margins property for the current visual style element.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Padding" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.MarginProperty" /> values.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.VisualStyles.ThemeSizeType)">
      <summary>Returns the value of the specified size property of the current visual style part using the specified drawing bounds.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that contains the size specified by the <paramref name="type" /> parameter for the current visual style part.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> that contains the area in which the part will be drawn.</param>
      <param name="type">One of the <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> values that specifies which size value to retrieve for the part.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> values.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPartSize(System.Drawing.IDeviceContext,System.Windows.Forms.VisualStyles.ThemeSizeType)">
      <summary>Returns the value of the specified size property of the current visual style part.</summary>
      <returns>A <see cref="T:System.Drawing.Size" /> that contains the size specified by the <paramref name="type" /> parameter for the current visual style part. </returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="type">One of the <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> values that specifies which size value to retrieve for the part.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.ThemeSizeType" /> values.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetPoint(System.Windows.Forms.VisualStyles.PointProperty)">
      <summary>Returns the value of the specified point property for the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Point" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.PointProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetString(System.Windows.Forms.VisualStyles.StringProperty)">
      <summary>Returns the value of the specified string property for the current visual style element.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the property specified by the <paramref name="prop" /> parameter for the current visual style element.</returns>
      <param name="prop">One of the <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> values that specifies which property value to retrieve for the current visual style element.</param>
      <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
        <paramref name="prop" /> is not one of the <see cref="T:System.Windows.Forms.VisualStyles.StringProperty" /> values.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.String,System.Windows.Forms.TextFormatFlags)">
      <summary>Returns the size and location of the specified string when drawn with the font of the current visual style element within the specified initial bounding rectangle.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the area required to fit the rendered text. </returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="bounds">A <see cref="T:System.Drawing.Rectangle" /> used to control the flow and wrapping of the text.</param>
      <param name="textToDraw">The string to measure.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextExtent(System.Drawing.IDeviceContext,System.String,System.Windows.Forms.TextFormatFlags)">
      <summary>Returns the size and location of the specified string when drawn with the font of the current visual style element.</summary>
      <returns>A <see cref="T:System.Drawing.Rectangle" /> that contains the area required to fit the rendered text. </returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="textToDraw">The string to measure.</param>
      <param name="flags">A bitwise combination of the <see cref="T:System.Windows.Forms.TextFormatFlags" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.GetTextMetrics(System.Drawing.IDeviceContext)">
      <summary>Retrieves information about the font specified by the current visual style element.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.TextMetrics" /> that provides information about the font specified by the current visual style element. </returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Handle">
      <summary>Gets a unique identifier for the current class of visual style elements.</summary>
      <returns>An <see cref="T:System.IntPtr" /> that identifies a set of data that defines the class of elements specified by <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />. </returns>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Region,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)">
      <summary>Returns a hit test code indicating whether the point is contained in the background of the current visual style element and within the specified bounds.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> that describes where <paramref name="pt" /> is located in the background of the current visual style element, if at all.</returns>
      <param name="g">The <see cref="T:System.Drawing.Graphics" /> this operation will use.</param>
      <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> that contains the background of the current visual style element.</param>
      <param name="region">A <see cref="T:System.Drawing.Region" /> that specifies the bounds of the hit test area within the background.</param>
      <param name="pt">The <see cref="T:System.Drawing.Point" /> to test.</param>
      <param name="options">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is null.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)">
      <summary>Returns a hit test code indicating whether a point is contained in the background of the current visual style element.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> that describes where <paramref name="pt" /> is located in the background of the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> that contains the background of the current visual style element.</param>
      <param name="pt">The <see cref="T:System.Drawing.Point" /> to test.</param>
      <param name="options">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.HitTestBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.IntPtr,System.Drawing.Point,System.Windows.Forms.VisualStyles.HitTestOptions)">
      <summary>Returns a hit test code indicating whether the point is contained in the background of the current visual style element and within the specified region.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VisualStyles.HitTestCode" /> that describes where <paramref name="pt" /> is located in the background of the current visual style element.</returns>
      <param name="dc">The <see cref="T:System.Drawing.IDeviceContext" /> this operation will use.</param>
      <param name="backgroundRectangle">A <see cref="T:System.Drawing.Rectangle" /> that contains the background of the current visual style element.</param>
      <param name="hRgn">A Windows handle to a <see cref="T:System.Drawing.Region" /> that specifies the bounds of the hit test area within the background.</param>
      <param name="pt">The <see cref="T:System.Drawing.Point" /> to test.</param>
      <param name="options">A bitwise combination of the <see cref="T:System.Windows.Forms.VisualStyles.HitTestOptions" /> values.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="dc" /> is null.</exception>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsBackgroundPartiallyTransparent">
      <summary>Indicates whether the background of the current visual style element has any semitransparent or alpha-blended pieces.</summary>
      <returns>true if the background of the current visual style element has any semitransparent or alpha-blended pieces; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsElementDefined(System.Windows.Forms.VisualStyles.VisualStyleElement)">
      <summary>Determines whether the specified visual style element is defined by the current visual style.</summary>
      <returns>true if the combination of the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.ClassName" /> and <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleElement.Part" /> properties of <paramref name="element" /> are defined; otherwise, false. </returns>
      <param name="element">A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> whose class and part combination will be verified.</param>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.IsSupported">
      <summary>Gets a value specifying whether the operating system is using visual styles to draw controls.</summary>
      <returns>true if the operating system supports visual styles, the user has enabled visual styles in the operating system, and visual styles are applied to the client area of application windows; otherwise, false.</returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.LastHResult">
      <summary>Gets the last error code returned by the native visual styles (UxTheme) API methods encapsulated by the <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> class.</summary>
      <returns>A value specifying the last error code returned by the native visual styles API methods that this class encapsulates.</returns>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part">
      <summary>Gets the part of the current visual style element.</summary>
      <returns>A value that specifies the part of the current visual style element.</returns>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.String,System.Int32,System.Int32)">
      <summary>Sets this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> to the visual style element represented by the specified class, part, and state values.</summary>
      <param name="className">The new value of the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" /> property.</param>
      <param name="part">The new value of the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" /> property.</param>
      <param name="state">The new value of the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> property.</param>
      <exception cref="T:System.ArgumentException">The combination of <paramref name="className" />, <paramref name="part" />, and <paramref name="state" /> is not defined by the current visual style.</exception>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="M:System.Windows.Forms.VisualStyles.VisualStyleRenderer.SetParameters(System.Windows.Forms.VisualStyles.VisualStyleElement)">
      <summary>Sets this <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer" /> to the visual style element represented by the specified <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" />.</summary>
      <param name="element">A <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleElement" /> that specifies the new values of the <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Class" />, <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.Part" />, and <see cref="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State" /> properties.</param>
      <exception cref="T:System.ArgumentException">
        <paramref name="element" /> is not defined by the current visual style.</exception>
      <exception cref="T:System.InvalidOperationException">The operating system does not support visual styles.-or-Visual styles are disabled by the user in the operating system.-or-Visual styles are not applied to the client area of application windows.</exception>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
      </PermissionSet>
    </member>
    <member name="P:System.Windows.Forms.VisualStyles.VisualStyleRenderer.State">
      <summary>Gets the state of the current visual style element.</summary>
      <returns>A value that identifies the state of the current visual style element.</returns>
    </member>
    <member name="T:System.Windows.Forms.VisualStyles.VisualStyleState">
      <summary>Specifies how visual styles are applied to the current application.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VisualStyleState.NoneEnabled">
      <summary>Visual styles are not applied to the application.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAreaEnabled">
      <summary>Visual styles are applied only to the client area.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VisualStyleState.NonClientAreaEnabled">
      <summary>Visual styles are applied only to the nonclient area.</summary>
    </member>
    <member name="F:System.Windows.Forms.VisualStyles.VisualStyleState.ClientAndNonClientAreasEnabled">
      <summary>Visual styles are applied to client and nonclient areas.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.CSharp.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.CSharp</name>
  </assembly>
  <members>
    <member name="T:Microsoft.CSharp.RuntimeBinder.Binder">
      <summary>Contains factory methods to create dynamic call site binders for CSharp.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp binary operation binder.</summary>
      <returns>Returns a new CSharp binary operation binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="operation">The binary operation kind.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp binary operation binder.</summary>
      <returns>Returns a new CSharp binary operation binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="operation">The binary operation kind.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type)">
      <summary>Initializes a new CSharp convert binder.</summary>
      <returns>Returns a new CSharp convert binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="type">The type to convert to.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
      <summary>Initializes a new CSharp convert binder.</summary>
      <returns>Returns a new CSharp convert binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="type">The type to convert to.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp get index binder.</summary>
      <returns>Returns a new CSharp get index binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp get member binder.</summary>
      <returns>Returns a new CSharp get member binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="name">The name of the member to get.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp invoke binder.</summary>
      <returns>Returns a new CSharp invoke binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp invoke constructor binder.</summary>
      <returns>Returns a new CSharp invoke constructor binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp invoke member binder.</summary>
      <returns>Returns a new CSharp invoke member binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="name">The name of the member to invoke.</param>
      <param name="typeArguments">The list of type arguments specified for this invoke.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
      <summary>Initializes a new CSharp is event binder.</summary>
      <returns>Returns a new CSharp is event binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="name">The name of the event to look for.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp set index binder.</summary>
      <returns>Returns a new CSharp set index binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp set member binder.</summary>
      <returns>Returns a new CSharp set member binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="name">The name of the member to set.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp unary operation binder.</summary>
      <returns>Returns a new CSharp unary operation binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="operation">The unary operation kind.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
      <summary>Initializes a new CSharp unary operation binder.</summary>
      <returns>Returns a new CSharp unary operation binder.</returns>
      <param name="flags">The flags with which to initialize the binder.</param>
      <param name="operation">The unary operation kind.</param>
      <param name="context">The <see cref="T:System.Type" /> that indicates where this operation is used.</param>
      <param name="argumentInfo">The sequence of <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> instances for the arguments to this operation.</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo">
      <summary>Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> class.</summary>
      <returns>A new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo" /> class.</returns>
      <param name="flags">The flags for the argument.</param>
      <param name="name">The name of the argument, if named; otherwise null.</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags">
      <summary>Represents information about C# dynamic operations that are specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.None">
      <summary>No additional information to represent.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.UseCompileTimeType">
      <summary>The argument's compile-time type should be considered during binding.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.Constant">
      <summary>The argument is a constant.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.LiteralConstant">
      <summary>The argument is a literal constant.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.NamedArgument">
      <summary>The argument is a named argument.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsRef">
      <summary>The argument is passed to a ref parameter.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsOut">
      <summary>The argument is passed to an out parameter.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags.IsStaticType">
      <summary>The argument is a <see cref="T:System.Type" /> indicating an actual type name used in source. Used only for target objects in static calls.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags">
      <summary>Represents information about C# dynamic operations that are not specific to particular arguments at a call site. Instances of this class are generated by the C# compiler.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.None">
      <summary>There is no additional information required for this binder.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.CheckedContext">
      <summary>The evaluation of this binder happens in a checked context.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSimpleName">
      <summary>The binder represents an invoke on a simple name.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.InvokeSpecialName">
      <summary>The binder represents an invoke on a specialname.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.BinaryOperationLogical">
      <summary>The binder represents a logical AND or logical OR that is part of a conditional logical operator evaluation.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertExplicit">
      <summary>The binder represents an explicit conversion.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ConvertArrayIndex">
      <summary>The binder represents an implicit conversion for use in an array creation expression.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultIndexed">
      <summary>The result of any bind is going to be indexed get a set index or get index binder.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ValueFromCompoundAssignment">
      <summary>The value in this set index or set member comes a compound assignment operator.</summary>
    </member>
    <member name="F:Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags.ResultDiscarded">
      <summary>The binder is used in a position that does not require a result, and can therefore bind to a void returning method.</summary>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException">
      <summary>Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> class.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> class that has serialized data.</summary>
      <param name="info">The object that holds the serialized object data. The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The contextual information about the source or destination. The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> class that has a specified error message.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.The error message that explains the reason for the exception.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException" /> class that has a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
    </member>
    <member name="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException">
      <summary>Represents an error that occurs when a dynamic bind in the C# runtime binder is processed.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> class with a system-supplied message that describes the error.</summary>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> class with a specified message that describes the error.</summary>
      <param name="message">The message that describes the exception. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
    </member>
    <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException" /> class that has a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference if no inner exception is specified.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.VisualBasic.Compatibility.Data.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Compatibility.Data</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC">
      <summary>Provides compatibility with the Visual Basic 6.0 ADO Data Control, which enabled you to create a connection to a database using Microsoft ActiveX Data Objects (ADO).  </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.addDataSourceListener(msdatasrc.DataSourceListener)">
      <summary>Adds an interface to monitor changes in a data set.</summary>
      <param name="dsl">A Msdatasrc.DataSourceListener.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BackColor">
      <summary>Gets or sets the background color for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</summary>
      <returns>A <see cref="T:System.Drawing.Color" /> that represents the background color of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF">
      <summary>Gets a value that indicates whether the current row position is before the first row in a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
      <returns>true if the current row position is before the first row; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFAction">
      <summary>Gets or sets a value that indicates what action the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> takes when the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOF" /> property is true.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum" /> enumeration that specifies the action to take.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CacheSize">
      <summary>Gets or sets the number of records that are cached in local memory for the current <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
      <returns>An Integer that specifies the number of records that are cached in local memory for the current <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> object. The default is 50 records.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandTimeout">
      <summary>Gets or sets the duration, in seconds, that the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> waits for a command to return from the server.</summary>
      <returns>An Integer that specifies the number of seconds to wait when a connection is being established. The default is 15 seconds.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CommandType">
      <summary>Gets or sets a value that informs the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> what type of command to pass when opening a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
      <returns>A ADODB.CommandTypeEnum enumeration that specifies the command type.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString">
      <summary>Gets of sets the information that is used to establish a connection to a data source.</summary>
      <returns>A <see cref="T:System.String" /> that contains the connection information.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionTimeout">
      <summary>Gets or sets the duration of time, in seconds, for which the provider attempts to connect to the server specified in the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ConnectionString" /> property.</summary>
      <returns>An Integer that specifies the number of seconds to wait when a connection is being established. The default is 15 seconds.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorLocation">
      <summary>Gets or sets the location of the cursor library for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> object.</summary>
      <returns>A ADODB.CursorLocationEnum enumeration that specifies s the location. The default is ADODB.CursorLocationEnum.adUseClient.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.CursorType">
      <summary>Gets or sets a value that specifies the default type of cursor to use when opening a result set from the specified query.</summary>
      <returns>A ADODB.CursorTypeEnum enumeration that specifies the type of cursor to use.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordset">
      <summary>The EndOfRecordset event is called when there is an attempt to move to a row past the end of the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF">
      <summary>Gets a value that indicates whether the current row position is after the last row in a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
      <returns>true if the current row position is after the last row; otherwise false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFAction">
      <summary>Gets or sets a value that indicates what action the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> takes when the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF" /> property is true.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum" /> enumeration that specifies the action to take.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Error">
      <summary>Occurs when an exception is raised in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchComplete">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control completes a fetch from a database.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgress">
      <summary>Occurs while a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is fetching data from a database.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeComplete">
      <summary>Occurs when an update to a Field in a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is complete.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMember(System.String,System.Guid@)">
      <summary>Returns a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</summary>
      <returns>Returns a data access object (such as a row position) for a given data member.</returns>
      <param name="dataMember">A <see cref="T:System.String" /> that describes the data member that represents one or more sets of data supported by the data source.</param>
      <param name="riid">The interface identifier of the specified data access object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMemberCount">
      <summary>Implements the OLE DB DataSource.getDataMemberCount method.</summary>
      <returns>An Integer that represents the count.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.getDataMemberName(System.Int32)">
      <summary>Implements the OLE DB DataSource.getDataMemberName method.</summary>
      <returns>A <see cref="T:System.String" /> that describes the data member name.</returns>
      <param name="index">An index into the list of data member names.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.LockType">
      <summary>Gets or sets a value that indicates the type of concurrency handling.</summary>
      <returns>A ADODB.LockTypeEnum enumeration that specifies the type of concurrency handling.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.MaxRecords">
      <summary>Gets or sets the maximum number of records that can be retrieved from the data source.</summary>
      <returns>An Integer that specifies the number of records that can be retrieved from the data source.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Mode">
      <summary>Gets or sets a value that specifies the available permissions for modifying data in a Connection or opening a Record in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</summary>
      <returns>A ADO.ConnectModeEnum that specifies the mode.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveComplete">
      <summary>Occurs when a MoveFirst, MoveNext, or MoveLast method has occurred in a Recordset for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OnResize(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.Resize" /> event.</summary>
      <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Orientation">
      <summary>Gets or sets a value that specifies whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> will be oriented horizontally (the default) or vertically.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum" /> enumeration that specifies the orientation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Password">
      <summary>Sets the password that is used during the creation of an ADO Recordset object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the password.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeComplete">
      <summary>Occurs when the current record has changed in the Recordset of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset">
      <summary>Gets or sets a reference to the underlying ADO Recordset object.</summary>
      <returns>An ADO Recordset object.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeComplete">
      <summary>Occurs when the Recordset for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordSource">
      <summary>Gets or sets the statement or query that returns a <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the statement or query.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Refresh">
      <summary>Forces a control to invalidate its client area and immediately redraw itself and any child controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODC.removeDataSourceListener(msdatasrc.DataSourceListener)">
      <summary>Removes a DataSourceListener.</summary>
      <param name="dsl">A Msdatasrc.DataSourceListener.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Text">
      <summary>Gets or sets the text that is contained in the display area of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</summary>
      <returns>A <see cref="T:System.String" /> that specifies the text.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.UserName">
      <summary>Gets or sets a value that represents a user of an ADO Recordset object.</summary>
      <returns>A <see cref="T:System.String" /> that contains a user name.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeField">
      <summary>Occurs before the current field in a Recordset of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecord">
      <summary>Occurs before the current record in a Recordset of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordset">
      <summary>Occurs before the Recordset of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMove">
      <summary>Occurs before the MoveFirst, MoveNext, or MoveLast method of a Recordset of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control executes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 BOFAction property.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum.adDoMoveFirst">
      <summary>Keeps the first record as the current record.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.BOFActionEnum.adStayBOF">
      <summary>Moving past the start of a Recordset triggers the Validate event on the first record, followed by a Reposition event on the invalid (BOF) record. At this point, the Move Previous button on the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> is disabled.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EndOfRecordsetDelegate">
      <summary>Represents the method that will handle an event.</summary>
      <param name="fMoreData">A Boolean determining whether the end of the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.Recordset" /> has been reached.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 EOFAction property.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum.adDoMoveLast">
      <summary>Keeps the last record as the current record.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum.adStayEOF">
      <summary>Moving past the end of a Recordset triggers the ADODC's Validation event on the last record, followed by a Reposition event on the invalid (EOF) record. At this point, the MoveNext button on the ADODC is disabled.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOFActionEnum.adDoAddNew">
      <summary>Moving past the last record triggers the ADODC's Validation event to occur on the current record, followed by an automatic AddNew, followed by a Reposition event on the new record.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.ErrorDelegate">
      <summary>Represents the method that will handle an Error event.</summary>
      <param name="errorNumber">An Integer that represents the error number.</param>
      <param name="description">A String that contains the error message.</param>
      <param name="scode">An Integer that represents the error source.</param>
      <param name="source">A String that represents the source name.</param>
      <param name="helpFile">A String that represents the Help file for the error.</param>
      <param name="helpContext">An Integer that represents the context ID for a Help topic.</param>
      <param name="cancelDisplay">A Boolean that determines whether the user can cancel the error dialog box.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchCompleteDelegate">
      <summary>Represents the method that will handle a FetchComplete event.</summary>
      <param name="pError">An ADODB.Error object.</param>
      <param name="adStatus">An ADODB.EventStatusEnum enumeration.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FetchProgressDelegate">
      <summary>Represents the method that will handle a FetchProgress event.</summary>
      <param name="progress">An Integer representing the progress of the fetch operation.</param>
      <param name="maxProgress">An Integer representing the size of the fetch operation.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.FieldChangeCompleteDelegate">
      <summary>Represents the method that will handle a FieldChange event.</summary>
      <param name="cFields">An Integer that specifies the number of fields.</param>
      <param name="fields">An ADODB.Field object.</param>
      <param name="pError">An ADODB.Error object.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.MoveCompleteDelegate">
      <summary>Represents the method that will handle a MoveComplete event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="pError">An ADODB.Error object.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 Orientation property.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum.adHorizontal">
      <summary>The ADODC will be displayed horizontally.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ADODC.OrientationEnum.adVertical">
      <summary>The ADODC will be displayed vertically.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordChangeCompleteDelegate">
      <summary>Represents the method that will handle a RecordChangeComplete event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="cRecords">An Integer representing the number of records.</param>
      <param name="pError">An ADODB.Error object.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.RecordsetChangeCompleteDelegate">
      <summary>Represents the method that will handle a RecordsetChangeComplete event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="pError">An ADODB.Field object.</param>
      <param name="adStatus">An ADODB.Error object.</param>
      <param name="pRecordset">An ADODB.EventStatusEnum.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeFieldDelegate">
      <summary>Represents the method that will handle a WillChangeField event.</summary>
      <param name="cFields">An Integer that represents the number of fields.</param>
      <param name="fields">An Object that contains the fields.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordDelegate">
      <summary>Represents the method that will handle a WillChangeRecord event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="cRecords">An Integer that represents the number of records.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillChangeRecordsetDelegate">
      <summary>Represents the method that will handle a WillChangeRecordset event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC.WillMoveDelegate">
      <summary>Represents the method that will handle a WillMove event.</summary>
      <param name="adReason">An ADODB.EventReasonEnum.</param>
      <param name="adStatus">An ADODB.EventStatusEnum.</param>
      <param name="pRecordset">An ADODB.Recordset object.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Click">
      <summary>Occurs when an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.CtlLoad">
      <summary>Occurs when an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is loaded.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DoubleClick">
      <summary>Occurs when an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.EndOfRecordset">
      <summary>Occurs when the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.ADODC.EOF" /> property of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Error">
      <summary>Occurs when an exception is raised for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.FetchComplete">
      <summary>Occurs when an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control completes a fetch from a database.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.FetchProgress">
      <summary>Occurs while an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is fetching data from a database.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.FieldChangeComplete">
      <summary>Occurs when an update to a Field in a Recordset for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is complete.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.ADODC)">
      <summary>Gets the index of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</returns>
      <param name="o">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.HelpRequested">
      <summary>Occurs when the user requests Help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ImeModeChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.MoveComplete">
      <summary>Occurs when a MoveFirst, MoveNext, or MoveLast method has occurred in a Recordset for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.RecordChangeComplete">
      <summary>Occurs when the current record has changed in the Recordset of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.RecordsetChangeComplete">
      <summary>Occurs when the Recordset for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.ADODC)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" /> class</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.ADODC,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" />.</summary>
      <param name="o">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.ADODC)">
      <summary>Returns a value that indicates whether an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" />.</summary>
      <returns>If the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> is a member of a different <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray" />, ShouldSerializeIndex returns false.NoteFunctions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2010. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework. They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</returns>
      <param name="o">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.WillChangeField">
      <summary>Occurs before a Field in the Recordset of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.WillChangeRecord">
      <summary>Occurs before the current record in a Recordset of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.WillChangeRecordset">
      <summary>Occurs before the Recordset of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ADODCArray.WillMove">
      <summary>Occurs before the MoveFirst, MoveNext, or MoveLast method of a Recordset of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ADODC" /> control executes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment">
      <summary>Emulates a Visual Basic 6.0 Data Environment in applications that have been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.addDataSourceListener(msdatasrc.DataSourceListener)">
      <summary>This method is not implemented in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> class.</summary>
      <param name="ds">None.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands">
      <summary>Gets a collection of ADODB.Command objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Command objects.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands(System.Object)">
      <summary>Gets a collection of ADODB.Command objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Command objects.</returns>
      <param name="lpVar">A Visual Basic 6.0 Variant that contains the ADODB.Command objects.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections">
      <summary>Gets a collection of ADODB.Connection objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Connection objects.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections(System.Object)">
      <summary>Gets a collection of ADODB.Connection objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Connection objects.</returns>
      <param name="lpVar">A Visual Basic 6.0 Variant that contains the ADODB.Connection objects.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Dispose">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" />, and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Finalize">
      <summary>Overrides the <see cref="M:System.Object.Finalize" /> method.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.getDataMember(System.String,System.Guid@)">
      <summary>Invokes a method based on an ADODB.Command object.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the ADODB.Command object.</returns>
      <param name="strDataMember">A String that contains an ADODB.Command object.</param>
      <param name="Id">A GUID representing an ADODB.Recordset object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.GetDataMemberCount">
      <summary>Gets a count of ADODB.Command objects.</summary>
      <returns>An Integer that contains the count.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.GetDataMemberName(System.Int32)">
      <summary>This method is not implemented in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> class.</summary>
      <returns>Nothing.</returns>
      <param name="Index">Not applicable.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Commands">
      <summary>Contains the <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Commands" /> collection.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Connections">
      <summary>Contains the <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Connections" /> collection.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_NonRSReturningCommands">
      <summary>Contains a collection.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.m_Recordsets">
      <summary>Contains the <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets" /> collection.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Object">
      <summary>Gets the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> object.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets">
      <summary>Gets a collection of ADODB.Recordset objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Recordset objects.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.Recordsets(System.Object)">
      <summary>Gets a collection of ADODB.Recordset objects for use in an application upgraded from Visual Basic 6.0.</summary>
      <returns>A collection of ADODB.Recordset objects.</returns>
      <param name="lpVar">A Visual Basic 6.0 Variant that contains the ADODB.Recordset objects.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment.removeDataSourceListener(msdatasrc.DataSourceListener)">
      <summary>This method is not implemented in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseDataEnvironment" /> class.</summary>
      <param name="ds">Not applicable.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator">
      <summary>Supports a simple iteration over a binding collection in an application upgraded from Visual Basic 6.0. </summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.Current">
      <summary>Gets the current element in the binding collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.MoveNext">
      <summary>Advances the enumerator to the next element of the collection. </summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BindingCollectionEnumerator.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA">
      <summary>A Structure that contains data that is used internally by an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA.cookie">
      <summary>An Integer used by the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" />Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA.pUnk">
      <summary>An <see cref="T:System.IntPtr" /> used by the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING">
      <summary>Provides a Structure that represents an ADO binding in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.bPrecision">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.bScale">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.cbMaxLen">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.dwFlags">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.eParamIO">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.iOrdinal">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.memOwner">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.obLength">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.obStatus">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.obValue">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.part">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.pBindExt">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.pObject">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.typeInfo">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING.wType">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO">
      <summary>A Structure that contains data that is used internally by an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.columnFlags">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.columnId">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.columnOrdinal">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.columnSize">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.columnType">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.name">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.precision">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.scale">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO.typeInfo">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBID">
      <summary>Provides a Structure that is used internally in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBID.dbkind">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBID" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBID.uGuid">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBID" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBID.uName">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBID" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding">
      <summary>Provides a managed equivalent of the DBinding interface from the Microsoft Data Binding Collection library (msbind) for use in applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataChanged">
      <summary>Gets or sets a value indicating that data has changed.</summary>
      <returns>true if data has changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataField">
      <summary>Gets a data field.</summary>
      <returns>A String that contains the data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataFormat">
      <summary>Gets or sets the data format for a data field.</summary>
      <returns>An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.Key">
      <summary>Gets the key value for a data field.</summary>
      <returns>A String that contains the key value.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.Object">
      <summary>Gets a data object.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.PropertyName">
      <summary>Gets the name of a property from a data object.</summary>
      <returns>A String that contains the property name.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection">
      <summary>Provides an interface to replace COM-based data binding in an application upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that contains data.</param>
      <param name="propertyName">A String that contains a property name.</param>
      <param name="dataField">A String that contains the name of a data field.</param>
      <param name="dataFormat">Optional. An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</param>
      <param name="key">Optional. A String that contains the key value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Clear">
      <summary>Clears the collection of binding objects.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Count">
      <summary>Gets the total number of bindings in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>An Integer that contains the count.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.DataMember">
      <summary>Gets or sets the data member for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>A string that contains the name of the data member.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>A COM-based msdatasrc.DataSource object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> at the specified index.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</returns>
      <param name="index">An <see cref="T:System.Object" /> representing the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.Remove(System.Object)">
      <summary>Removes a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface from a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <param name="index">An <see cref="T:System.Object" /> representing the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateControls">
      <summary>Gets the current row from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" /> object's data source and resets the contents of controls bound through the object.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode">
      <summary>Gets or sets the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection" />.</summary>
      <returns>An <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM">
      <summary>Provides an enumeration for use by the tools for upgrading Visual Basic 6.0 applications to Visual Basic 2010.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID_NAME">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID_PROPID">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_NAME">
      <summary>2</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PGUID_NAME">
      <summary>3</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PGUID_PROPID">
      <summary>4</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_PROPID">
      <summary>5</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBKINDENUM.DBKIND_GUID">
      <summary>6</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET">
      <summary>Provides a Structure for use in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.cPropertyIDs">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.guidPropertySet">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET.rgPropertyIDs">
      <summary>A field for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IAccessor">
      <summary>Provides an implementation of the OLE DB IAccessor interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.AddRefAccessor(System.Int32,System.Int32@)">
      <summary>Adds a reference count to an existing accessor.</summary>
      <param name="hAccessor">The handle of the accessor for which to increment the reference count.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the accessor handle. If <paramref name="cRefCount" /> is a null pointer, no reference count is returned.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.CreateAccessor(System.Int32,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING[],System.Int32,System.Int32@,System.IntPtr)">
      <summary>Creates an accessor from a set of bindings.</summary>
      <param name="accessorFlags">A bitmask that describes the properties of the accessor and how it can be used. </param>
      <param name="cBindings">The number of bindings in the accessor.</param>
      <param name="bindings">An array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structures.</param>
      <param name="cbRowSize">The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.</param>
      <param name="hAccessor">A pointer to memory in which to return the handle of the created accessor.</param>
      <param name="pBindStatus">A pointer to an array of DBBINDSTATUS values.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.GetBindings(System.Int32,System.Int32@,System.Int32@,System.IntPtr@)">
      <summary>Returns the bindings in an accessor.</summary>
      <param name="hAccessor">The handle of the accessor for which to return the bindings.</param>
      <param name="accessorFlags">A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.</param>
      <param name="cBindings">A pointer to memory in which to return the number of bindings in the accessor.</param>
      <param name="rgBindings">A pointer to memory in which to return an array of DBBINDSTATUS structures.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IAccessor.ReleaseAccessor(System.Int32,System.Int32@)">
      <summary>Releases an accessor.</summary>
      <param name="hAccessor">The handle of the accessor to release.</param>
      <param name="cRefCount">A pointer to memory in which to return the remaining reference count of the accessor handle.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset">
      <summary>Provides an implementation of the OLE DB IAccessor interface for use by applications upgraded from Visual Basic 6.0.  </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset.AddRefChapter(System.Int32,System.Int32@)">
      <summary>Adds a reference count to an existing chapter.</summary>
      <param name="hChapter">The handle of the chapter for which to increment the reference count.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the chapter handle.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IChapteredRowset.ReleaseChapter(System.Int32,System.Int32@)">
      <summary>Releases a chapter.</summary>
      <param name="hChapter">The chapter handle.</param>
      <param name="cRefCount">A pointer to memory in which to return the reference count of the chapter handle.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo">
      <summary>Provides an implementation of the OLE DB IColumnInfo interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.GetColumnInfo(System.Int32@,System.IntPtr@,System.IntPtr@)">
      <summary>Returns the column metadata needed by most consumers.</summary>
      <param name="cColumns">A pointer to memory in which to return the number of columns in the rowset; this number includes the bookmark column, if there is one.</param>
      <param name="pColumnInfo">A pointer to memory in which to return an array of DBCOLUMNINFO structures.</param>
      <param name="pStringsBuffer">A pointer to memory in which to return a pointer to storage for all string values (names used either within columnid or for pwszName) within a single allocation block.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IColumnsInfo.MapColumnIDs(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBID[],System.Int32[])">
      <summary>Returns an array of ordinals of the columns in a rowset that are identified by the specified column IDs.</summary>
      <param name="cColumnIDs">The number of column IDs to map.</param>
      <param name="columnIDs">An array of IDs of the columns for which to determine the column ordinals.</param>
      <param name="rgColumns">An array of <paramref name="cColumnIDs" /> ordinals of the columns identified by the elements of <paramref name="columnIDs" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint">
      <summary>Provides an implementation of the OLE DB IConnectionPoint interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)">
      <summary>Establishes an advisory connection between the connection point and the caller's sink object.</summary>
      <param name="sink">A reference to the sink to receive calls for the outgoing interface managed by this connection point.</param>
      <param name="cookie">When this method returns, contains the connection cookie. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.EnumConnections(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)">
      <summary>Creates an enumerator object for iteration through the connections that exist to this connection point.</summary>
      <param name="enumC">When this method returns, contains the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.GetConnectionInterface(System.Guid@)">
      <summary>Returns the IID of the outgoing interface managed by this connection point.</summary>
      <param name="piid">When this parameter returns, contains the IID of the outgoing interface managed by this connection point. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.GetConnectionPointContainer(Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer@)">
      <summary>Retrieves the IConnectionPointContainer interface pointer to the connectable object that conceptually owns this connection point. </summary>
      <param name="cpc">When this parameter returns, contains the connectable object's IConnectionPointContainer interface. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Unadvise(System.Int32)">
      <summary>Closes an advisory connection that was previously established through the <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)" /> method.</summary>
      <param name="cookie">The connection cookie previously returned from the <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint.Advise(System.IntPtr,System.Int32@)" /> method.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer">
      <summary>Provides an implementation of the OLE DB IConnectionPointContainer interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer.EnumConnectionPoints(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)">
      <summary>Creates an enumerator of all the connection points supported in the connectable object, one connection point per IID.</summary>
      <param name="enumC">When the method returns, this parameter contains the interface pointer of the enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPointContainer.FindConnectionPoint(System.Guid@,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint@)">
      <summary>Queries the connectable object about whether it has a connection point for a particular IID, and, if so, returns the IConnectionPoint interface pointer to that connection point.</summary>
      <param name="riid">A reference to the outgoing interface IID whose connection point is being requested. </param>
      <param name="cp">When the method returns, this parameter contains the connection point that manages the outgoing interface <paramref name="riid" />. This parameter is passed uninitialized.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat">
      <summary>Provides support for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataFormat" /> property of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Clone(Microsoft.VisualBasic.Compatibility.VB6.IDataFormat@)">
      <summary>Creates a shallow copy of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="newObject">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Convert(System.Int32,System.Object,System.Object@)">
      <summary>Converts an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> to a Visual Basic 6.0 Variant.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.Object" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.Default(System.Boolean@)">
      <summary>Determines whether an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> is the default <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="fDefault">A <see cref="T:System.Boolean" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetBinding(System.Runtime.InteropServices.VarEnum,System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IRowset,Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO@,Microsoft.VisualBasic.Compatibility.VB6.DBBINDING@,System.Int32@,System.Int32@)">
      <summary>Gets a binding for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="vtPropHint">A <see cref="T:System.Runtime.InteropServices.VarEnum" />.</param>
      <param name="rgfDataFormat">An Integer.</param>
      <param name="rowset">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IRowset" />.</param>
      <param name="columnInfo">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBCOLUMNINFO" /> structure.</param>
      <param name="binding">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBBINDING" /> structure.</param>
      <param name="size">An Integer.</param>
      <param name="cookie">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetData(System.Int32,System.IntPtr,System.Object@,System.Int32@,System.Object)">
      <summary>Gets the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="dbStatus">An Integer.</param>
      <param name="pObject">An <see cref="T:System.Object" /> .</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetLcid(System.Int32@)">
      <summary>Gets a locale ID for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="lcid">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetRawData(System.Int32,System.IntPtr,System.Object@,System.Int32@)">
      <summary>Gets the raw data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="varTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="dbStatus">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.GetSubFormatType(System.Int32@)">
      <summary>Gets the subformat type for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="subFormatType">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.ReleaseBinding(System.Int32)">
      <summary>Releases a binding for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.ReleaseData(System.Int32,System.IntPtr)">
      <summary>Releases the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="pv">An <see cref="T:System.IntPtr" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetData(System.Int32,System.Object@,System.IntPtr,System.Object)">
      <summary>Sets the data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="pVarTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
      <param name="pObject">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetLcid(System.Int32)">
      <summary>Sets the locale ID for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="lcid">An Integer.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetRawData(System.Int32,System.Object,System.IntPtr)">
      <summary>Sets the raw data for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" />.</summary>
      <param name="cookie">An Integer.</param>
      <param name="from">An <see cref="T:System.IntPtr" />.</param>
      <param name="pVarTo">A <see cref="T:Microsoft.VisualBasic.VariantType" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat.SetSubFormatType(System.Int32)">
      <summary>Sets the subformat type for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormat" /> interface.</summary>
      <param name="subFormatType">An Integer.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp">
      <summary>Provides support for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBinding.DataFormat" /> property of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DBinding" /> interface.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints">
      <summary>Manages the definition of the IEnumConnectionPoints interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current one. </summary>
      <param name="ecp">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint[]@,System.Int32@)">
      <summary>Retrieves a specified number of items in the enumeration sequence.  </summary>
      <param name="cConnections">The number of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IConnectionPoint" /> references to return in <paramref name="cp" />.</param>
      <param name="cp">When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</param>
      <param name="cFetched">When this method returns, contains a reference to the actual number of connections enumerated in <paramref name="cp" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Reset">
      <summary>Resets the enumeration sequence to the beginning.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnectionPoints.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections">
      <summary>Manages the definition of the IEnumConnections interface.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Clone(Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections@)">
      <summary>Creates a new enumerator that contains the same enumeration state as the current one.</summary>
      <param name="ec">When this method returns, contains a reference to the newly created enumerator. This parameter is passed uninitialized.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Next(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA[]@,System.Int32@)">
      <summary>Retrieves a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CONNECTDATA" /> structures to return in <paramref name="cd" />.</param>
      <param name="cd">When this method returns, contains a reference to the enumerated connections. This parameter is passed uninitialized.</param>
      <param name="cFetched">When this method returns, contains a reference to the actual number of connections enumerated in <paramref name="cd" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Reset">
      <summary>Resets the enumeration sequence to the start.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IEnumConnections.Skip(System.Int32)">
      <summary>Skips a specified number of items in the enumeration sequence.</summary>
      <param name="cConnections">The number of elements to skip in the enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition">
      <summary>Provides an implementation of the OLE DB IRowPosition interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.ClearRowPosition">
      <summary>Clears the row position.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.GetRowPosition(System.Int32@,System.Int32@,System.Int32@)">
      <summary>Retrieves the current row position.</summary>
      <param name="hChapter">A pointer to memory in which to return the chapter associated with the current row. If the rowset is not chaptered, <paramref name="hChapter" /> is set to DB_NULL_HCHAPTER. If <paramref name="hChapter" /> is a null pointer on input, no chapter value is returned.</param>
      <param name="hRow">A pointer to memory in which to return the hRow of the current row position; or DB_NULL_HROW if there is no current row position.</param>
      <param name="dbPositionFlags">A pointer to memory in which to return additional information about the row position.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.GetRowset(System.Guid@,System.Object@)">
      <summary>Returns the current underlying Rowset.</summary>
      <param name="iid">The requested IID for the rowset returned in <paramref name="rowset" />.</param>
      <param name="rowset">A pointer to memory in which to return the interface pointer of the underlying rowset.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.Initialize(System.Object)">
      <summary>Initializes the row position object by setting the source rowset.</summary>
      <param name="rowset">Pointer to an interface on the source rowset.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPosition.SetRowPosition(System.Int32,System.Int32,System.Int32)">
      <summary>Sets the current row position.</summary>
      <param name="hChapter">The chapter associated with the current row, or with DB_NULL_HCHAPTER if the rowset is not chaptered.</param>
      <param name="hRow">The new current row.</param>
      <param name="dbPositionFlags">A flag indicating additional information about the new row position.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowPositionChange">
      <summary>Provides an implementation of the OLE DB IRowPositionChange interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowPositionChange.OnRowPositionChange(System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of a row position object of a change to the current row position.</summary>
      <returns>An Integer that represents the result.  </returns>
      <param name="dbReason">The reason of the event that caused this change.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowset">
      <summary>Provides an implementation of the OLE DB IRowset interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.AddRefRows(System.Int32,System.Int32[],System.Int32[]@,System.Int32[]@)">
      <summary>Adds a reference count to an existing row handle.</summary>
      <param name="cRows">The number of rows for which to increment the reference count.</param>
      <param name="hRows">An array of row handles for which to increment the reference count. The reference count of row handles is incremented by one for each time they appear in the array.</param>
      <param name="refCounts">An array with <paramref name="cRows" /> elements in which to return the new reference count for each row handle. The consumer allocates memory for this array. If <paramref name="refCounts" /> is a null pointer, no reference counts are returned.</param>
      <param name="rowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="hRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Retrieves data from the rowset's copy of the row.</summary>
      <param name="hRow">The handle of the row from which to get the data.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to a buffer in which to return the data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.GetNextRows(System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32[]@)">
      <summary>Fetches rows sequentially, remembering the previous position.</summary>
      <param name="hChapter">The chapter handle designating the rows to fetch.</param>
      <param name="lRowsOffset">The signed count of rows to skip before fetching rows. Deleted rows that the provider has removed from the rowset are not counted in the skip.</param>
      <param name="cRows">The number of rows to fetch. A negative number means to fetch backward.</param>
      <param name="cRowsObtained">A pointer to memory in which to return the actual number of fetched rows.</param>
      <param name="hRows">A pointer to memory in which to return an array of handles of the fetched rows.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.ReleaseRows(System.Int32,System.Int32[],System.IntPtr,System.IntPtr,System.IntPtr)">
      <summary>Releases rows.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="cRows">The number of rows to release.</param>
      <param name="hRows">An array of handles of the rows to be released. The row handles do not need to form a logical cluster; they may have been obtained at separate times and need not be for contiguous underlying rows. Row handles are decremented by one reference count for each time they appear in the array.</param>
      <param name="rowOptions">An array of <paramref name="cRows" /> elements containing bitmasks indicating additional options to be specified when a row is released.</param>
      <param name="rowRefCounts">An array with <paramref name="cRows" /> elements in which to return the new reference count of each row.</param>
      <param name="rgRowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="hRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowset.RestartPosition(System.Int32)">
      <summary>Repositions the next fetch position to its initial position.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="hChapter">The chapter handle designating the rows on which to reposition.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange">
      <summary>Provides an implementation of the OLE DB IRowsetChange interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.DeleteRows(System.Int32,System.Int32,System.Int32[],System.Int32[]@)">
      <summary>Deletes rows.</summary>
      <param name="hChapterReserved">The chapter handle.</param>
      <param name="cRows">The number of rows to be deleted.</param>
      <param name="rghRows">An array of handles of the rows to be deleted.</param>
      <param name="rgRowStatus">An array with <paramref name="cRows" /> elements in which to return values indicating the status of each row specified in <paramref name="rghRows" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.InsertRow(System.Int32,System.Int32,System.IntPtr,System.Int32@)">
      <summary>Creates and initializes a new row.</summary>
      <param name="hChapterReserved">The chapter handle.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to memory containing the new data values, at offsets that correspond to the bindings in the accessor.</param>
      <param name="hRow">A pointer to memory in which to return the handle of the new row.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetChange.SetData(System.Int32,System.Int32,System.IntPtr)">
      <summary>Sets data values in one or more columns in a row.</summary>
      <param name="hRow">The handle of the row in which to set data.</param>
      <param name="hAccessor">The handle of the accessor to use.</param>
      <param name="pData">A pointer to memory containing the new data values, at offsets that correspond to the bindings in the accessor.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetIdentity">
      <summary>Provides an implementation of the OLE DB IRowsetIdentity interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetIdentity.IsSameRow(System.Int32,System.Int32)">
      <summary>Compares two row handles to see whether they refer to the same row instance.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="hThisRow">The handle of an active row.</param>
      <param name="hThatRow">The handle of an active row.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo">
      <summary>Provides an implementation of the OLE DB IRowsetInfo interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetProperties(System.Int32,Microsoft.VisualBasic.Compatibility.VB6.DBPROPIDSET[],System.Int32@,System.IntPtr@)">
      <summary>Returns the current settings of all properties supported by the rowset.</summary>
      <param name="cPropertyIDSets">The number of DBPROPIDSET structures in <paramref name="rgPropertyIDSets" />.</param>
      <param name="rgPropertyIDSets">An array of DBPROPIDSET structures.</param>
      <param name="cPropertySets">A pointer to memory in which to return the number of DBPROPSET structures returned in <paramref name="prgPropertySets" />.</param>
      <param name="prgPropertySets">A pointer to memory in which to return an array of DBPROPSET structures.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetReferencedRowset(System.Int32,System.Guid,System.Object@)">
      <summary>Returns an interface pointer to the rowset to which a bookmark or chapter applies.</summary>
      <param name="iOrdinal">The bookmark or chapter column for which to get the related rowset.</param>
      <param name="riid">The IID of the interface pointer to return in <paramref name="referencedRowset" />.</param>
      <param name="referencedRowset">A pointer to memory in which to return an IUnknown interface pointer on the rowset that interprets values from this column.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetInfo.GetSpecification(System.Guid,System.Object@)">
      <summary>Returns an interface pointer on the object (command or session) that created this rowset.</summary>
      <param name="riid">The IID of the interface on which to return a pointer.</param>
      <param name="specification">A pointer to memory in which to return the interface pointer.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify">
      <summary>Provides an implementation of the OLE DB IRowsetNotify interface for use by applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnFieldChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of any change to the value of a column.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="hRow">The handle of the row in which the column value was changed.</param>
      <param name="cColumns">The count of columns in <paramref name="rgColumns" />.</param>
      <param name="rgColumns">An array of columns in the row for which the value was changed.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnRowChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32[],System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of the first change to a row or of any change that affects the entire row.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="cRows">The count of row handles in <paramref name="rghRows" />.</param>
      <param name="rghRows">An array of handles of rows that are changing.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.IRowsetNotify.OnRowsetChange(Microsoft.VisualBasic.Compatibility.VB6.IRowset,System.Int32,System.Int32,System.Int32)">
      <summary>Notifies the consumer of any change affecting the entire rowset.</summary>
      <returns>An Integer representing the result.</returns>
      <param name="rowset">A pointer to the rowset, because the consumer may be receiving notifications from multiple rowsets and this identifies which one is calling.</param>
      <param name="dbReason">The reason for the change, as indicated by the value of DBREASON.</param>
      <param name="eventPhase">The phase of this notification.</param>
      <param name="fCantDeny">When this flag is set to true, the consumer cannot veto the event by returning S_FALSE because the provider cannot undo the event.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding">
      <summary>Enables Windows Forms controls to be bound to ADO recordsets. This type is a managed equivalent of the Visual Basic 6.0 msbind library.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataChanged">
      <summary>Gets or sets a value indicating whether data has changed.</summary>
      <returns>true if data has changed; otherwise, false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataField">
      <summary>Gets a data field.</summary>
      <returns>A String that contains the data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.DataFormat">
      <summary>Gets or sets the data format for a data field.</summary>
      <returns>An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Dispose">
      <summary>Releases the unmanaged resources that are used by an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> and, optionally, releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Key">
      <summary>Gets the key value for a data field.</summary>
      <returns>A String that contains the key value.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.Object">
      <summary>Gets a data object.</summary>
      <returns>An <see cref="T:System.Object" /> that contains data.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBinding.PropertyName">
      <summary>Gets the name of a property from a data object.</summary>
      <returns>A String that contains the property name.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection">
      <summary>Provides an interface to replace COM-based data binding in an application upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.#ctor">
      <summary>Initializes an instance of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String)">
      <summary>Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that contains data.</param>
      <param name="propertyName">A String that contains a property name.</param>
      <param name="dataField">A String that contains the name of a data field.</param>
      <param name="dataFormat">Optional. An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</param>
      <param name="key">Optional. A String that contains the key value.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Add(System.Object,System.String,System.String,Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp,System.String,System.Boolean)">
      <summary>Adds a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> to a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="obj">An <see cref="T:System.Object" /> that contains data.</param>
      <param name="propertyName">A String that contains a property name.</param>
      <param name="dataField">A String that contains the name of a data field.</param>
      <param name="dataFormat">An <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.IDataFormatDisp" /> interface.</param>
      <param name="key">A String that contains the key value.</param>
      <param name="immediateBind">true to bind immediately; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Clear">
      <summary>Clears the collection of binding objects.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Count">
      <summary>Gets the total number of bindings in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>An Integer that contains the count.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataMember">
      <summary>Gets or sets the data member for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A String that contains the name of the data member.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A COM-based msdatasrc.DataSource object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.GetEnumerator">
      <summary>Gets an enumerator for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> for the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Item(System.Object)">
      <summary>Gets the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> at the specified index.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface.</returns>
      <param name="index">An <see cref="T:System.Object" /> that represents the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.Remove(System.Object)">
      <summary>Removes a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBinding" /> interface from a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <param name="index">An <see cref="T:System.Object" /> that represents the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.SavePendingChanges">
      <summary>Determines whether to save changes in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateControls">
      <summary>Gets the current row from the data source of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" /> object and resets the contents of controls bound through the object.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode">
      <summary>Gets or sets the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection.UpdateMode" /> for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MBindingCollection" />.</summary>
      <returns>A <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DBindingCollection.UpdateMode" /> enumeration.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute">
      <summary>Provides an attribute for use in upgrading Visual Basic 6.0 applications to Visual Basic 2010.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute.#ctor(System.String)">
      <summary>Initializes an instance of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute" />.</summary>
      <param name="description">A <see cref="T:System.String" /> that contains the description.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute.Description">
      <summary>Gets the string that contains the description for an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SRDescriptionAttribute" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the description.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UGUID">
      <summary>Provides a Structure that represents a <see cref="T:System.Guid" /> in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UGUID.guid">
      <summary>A field containing a <see cref="T:System.Guid" /> for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.UGUID" /> Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UNAME">
      <summary>Provides a Structure that represents a pointer to a Name property in an application that has been upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UNAME.name">
      <summary>Contains a <see cref="T:System.IntPtr" /> for the internal <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.UNAME" />Structure.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 UpdateMode method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUsePropertyAttributes">
      <summary>0</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUpdateWhenPropertyChanges">
      <summary>1</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.UpdateMode.vbUpdateWhenRowChanges">
      <summary>2</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.Build.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.Build</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Construction.ProjectChooseElement">
      <summary>Represents the Choose Element (MSBuild) in an MSBuild project. </summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement">
      <summary>Gets any Otherwise Element (MSBuild) child. </summary>
      <returns>Returns any Otherwise child. Returns null if no Otherwise child exists.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectChooseElement.WhenElements">
      <summary>Gets all the When Element (MSBuild) children. </summary>
      <returns>Returns all the When children. There is always at least one When child.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectElement">
      <summary>Abstract base class for MSBuild construction object model elements. All project elements use this as the base class.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.AllParents">
      <summary>All parent elements of this element, going up to the ProjectRootElement.</summary>
      <returns>Returns an enumerator over all parent elements, none if the project element is a ProjectRootElement or has not been attached to a parent yet.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Condition">
      <summary>Gets or sets the Condition attribute of this project element.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.ContainingProject">
      <summary>Gets the project root container that contains this project. </summary>
      <returns>Returns the project root container that contains this project. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Label">
      <summary>Gets or sets the Label value. </summary>
      <returns>Returns the label. Returns an empty string if no label is present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.NextSibling">
      <summary>Gets the next sibling of this project element. </summary>
      <returns>Returns the next sibling of this project element. Returns null if no next sibling exists.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.Parent">
      <summary>Gets the project element container that contains this project. </summary>
      <returns>Returns the project element container that contains this project. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElement.PreviousSibling">
      <summary>Gets the previous sibling of this project element. </summary>
      <returns>Returns the previous sibling of this project element. Returns null if no previous sibling exists.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectElementContainer">
      <summary>Provides an abstract container class for project elements. </summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.AllChildren">
      <summary>Gets a recursive depth-first enumerator over all child elements.</summary>
      <returns>Returns a recursive depth-first enumerator over all child elements.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>Appends the <paramref name="child" /> element as the last child of this project container. </summary>
      <param name="child">The project element to be appended.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.Children">
      <summary>Gets all child elements.</summary>
      <returns>Returns all child elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed">
      <summary>Gets all child elements, starting from the last child.</summary>
      <returns>Returns all child elements, starting from the last child.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.Count">
      <summary>Gets the number of child elements.</summary>
      <returns>Returns the number of child elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.FirstChild">
      <summary>Gets the first child element. </summary>
      <returns>Returns the first child element. Returns null if no child element exists.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
      <summary>Inserts the <paramref name="child" /> element after the <paramref name="reference" /> element. </summary>
      <param name="child">The project element to be inserted.</param>
      <param name="reference">The project element to be inserted after.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
      <summary>Inserts the <paramref name="child" /> element before the <paramref name="reference" /> element.</summary>
      <param name="child">The project element to be inserted.</param>
      <param name="reference">The project element to be inserted before.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectElementContainer.LastChild">
      <summary>Gets the last child element.</summary>
      <returns>Returns the last child element. Returns null if no child element exists.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>Prepends the <paramref name="child" /> element as the first child of this project container. </summary>
      <param name="child">The project element to be prepended.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren">
      <summary>Removes all the children, if any, from this project container.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
      <summary>Removes a <paramref name="child" /> element from this project container.</summary>
      <param name="child">The project element to be removed.</param>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectExtensionsElement">
      <summary>Represents the ProjectExtensions Element (MSBuild) in an MSBuild project. Project extensions can contain arbitrary XML content. </summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Content">
      <summary>Gets or sets the arbitrary XML content of this project extension.</summary>
      <returns>Returns the arbitrary XML content of this project extension.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Item(System.String)">
      <summary>Gets or sets the content of the first sub-element with the given <paramref name="name" /> parameter.</summary>
      <param name="name">The name of the sub-element.</param>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectImportElement">
      <summary>Represents an Import Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectImportElement.Project">
      <summary>Gets or sets the Project attribute.</summary>
      <returns>Returns the value of the Project attribute. </returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectImportGroupElement">
      <summary>Represents the ImportGroup element in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.AddImport(System.String)">
      <summary>Adds a new import after the last import in this import group.</summary>
      <returns>Returns the new import.</returns>
      <param name="project">The project to import.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectImportGroupElement.Imports">
      <summary>Gets all properties in this project import.</summary>
      <returns>Returns all properties in this project import.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemDefinitionElement">
      <summary>Represents an ItemDefinition element in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(System.String,System.String)">
      <summary>Adds metadata to this item definition. Appends the metadata to any existing metadata.</summary>
      <returns>Returns the modified metadata.</returns>
      <param name="name">Name of the metadata.</param>
      <param name="unevaluatedValue">Metadata to be added.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionElement.ItemType">
      <summary>Gets the item definition element name. </summary>
      <returns>Returns the item definition element name. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionElement.Metadata">
      <summary>Gets all child metadata definitions.</summary>
      <returns>Returns all child metadata definitions.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement">
      <summary>Represents an ItemDefinitionGroup Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.AddItemDefinition(System.String)">
      <summary>Adds a new item definition after the last child in this item definition group.</summary>
      <returns>Returns the new item definition.</returns>
      <param name="itemType">Element name of item to be added.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.ItemDefinitions">
      <summary>Gets all child item definitions.</summary>
      <returns>Returns all child item definitions.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemElement">
      <summary>Represents an Item Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemElement.AddMetadata(System.String,System.String)">
      <summary>Adds metadata to this item. Appends the metadata to any existing metadata.</summary>
      <returns>Returns the modified metadata.</returns>
      <param name="name">Name of metadata.</param>
      <param name="unevaluatedValue">Metadata to be added.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Exclude">
      <summary>Gets or sets the Exclude attribute value. </summary>
      <returns>Returns the Exclude attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.HasMetadata">
      <summary>Determines if this item has any child metadata elements.</summary>
      <returns>Returns true if this item has child metadata elements; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Include">
      <summary>Gets or sets the Include attribute value. </summary>
      <returns>Returns the Include attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.ItemType">
      <summary>Gets the item element name.</summary>
      <returns>Returns the item element name. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Metadata">
      <summary>Gets all child metadata.</summary>
      <returns>Returns all child metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemElement.Remove">
      <summary>Gets or sets the Remove attribute value. </summary>
      <returns>Returns the Remove attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectItemGroupElement">
      <summary>Represents an ItemGroup Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)">
      <summary>Adds a new item to the item group. Items are ordered first by item element name, and then by the Include attribute.</summary>
      <returns>Returns the new item element.</returns>
      <param name="itemType">Item element name of the item to be added.</param>
      <param name="include">Include attribute of the item to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds a new item with metadata to the item group. Items are ordered first by item element name, and then by the Include attribute.</summary>
      <returns>Returns the new item element.</returns>
      <param name="itemType">Item element name of the item to be added.</param>
      <param name="include">Include attribute of the item to be added.</param>
      <param name="metadata">Metadata to be added. </param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectItemGroupElement.Items">
      <summary>Gets all child items. </summary>
      <returns>Returns all child items.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectMetadataElement">
      <summary>Represents a Metadata element in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectMetadataElement.Name">
      <summary>Gets the metadata name. </summary>
      <returns>Returns the metadata name. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectMetadataElement.Value">
      <summary>Gets or sets the unevaluated metadata value.</summary>
      <returns>Returns the unevaluated metadata value. Returns an empty string if the value is uninitialized.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOnErrorElement">
      <summary>Represents an OnError Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOnErrorElement.ExecuteTargetsAttribute">
      <summary>Gets or sets the value of the ExecuteTargets attribute.</summary>
      <returns>Returns the value of the ExecuteTargets attribute.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOtherwiseElement">
      <summary>Represents an Otherwise Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ChooseElements">
      <summary>Gets all child Choose elements.</summary>
      <returns>Returns all child Choose elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ItemGroups">
      <summary>Gets all child item groups.</summary>
      <returns>Returns all child item groups.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.PropertyGroups">
      <summary>Gets all child property groups.</summary>
      <returns>Returns all child property groups.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectOutputElement">
      <summary>Represents an Output Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.IsOutputItem">
      <summary>Determines whether this output element represents an output item, as opposed to an output property.</summary>
      <returns>Returns true if this output element represents an output item; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.IsOutputProperty">
      <summary>Determines whether this output element represents an output property, as opposed to an output item.</summary>
      <returns>Returns true if this output element represents an output property; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.ItemType">
      <summary>Gets or sets the ItemType attribute value. </summary>
      <returns>Gets or sets the ItemType attribute value  Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.PropertyName">
      <summary>Gets or sets the PropertyName attribute value. </summary>
      <returns>Gets or sets the PropertyName attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectOutputElement.TaskParameter">
      <summary>Gets or sets the TaskParameter attributevalue. </summary>
      <returns>Gets or sets the TaskParameter attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectPropertyElement">
      <summary>Represents a Property element in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyElement.Name">
      <summary>Gets the property name. </summary>
      <returns>Returns the property name.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyElement.Value">
      <summary>Gets or sets the unevaluated property value. </summary>
      <returns>Returns the unevaluated property value. Returns an empty string if the value is uninitialized.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectPropertyGroupElement">
      <summary>Represents a PropertyGroup element in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.AddProperty(System.String,System.String)">
      <summary>Appends a new property to the property group. </summary>
      <returns>Returns the new property. </returns>
      <param name="name">The property name.</param>
      <param name="unevaluatedValue">The property value.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.Properties">
      <summary>Gets all child properties.</summary>
      <returns>Returns all child properties.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.PropertiesReversed">
      <summary>Gets all child properties, starting with the last child.</summary>
      <returns>Returns all child properties, starting with the last child.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.SetProperty(System.String,System.String)">
      <summary>Updates the value of the given property in the property group. </summary>
      <returns>Returns the updated property. </returns>
      <param name="name">The name of the property to be updated.</param>
      <param name="unevaluatedValue">The new property value.</param>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectRootElement">
      <summary>Represents an MSBuild project, a targets file, or any other file that conforms to MSBuild project file schema. This class and its related classes allow a complete MSBuild project or targets file to be read and written. </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImport(System.String)">
      <summary>Adds a project import to this project.</summary>
      <returns>Returns the added project import.</returns>
      <param name="project">The project to be imported.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImportGroup">
      <summary>Creates an import group at the end of this project.</summary>
      <returns>Returns the import group created at the end of this project.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String)">
      <summary>Adds an item to this project.</summary>
      <returns>Returns the added item.</returns>
      <param name="itemType">The item type of the item to be added.</param>
      <param name="include">The Include value of the item to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds an item with metadata to this project.</summary>
      <returns>Returns the added item.</returns>
      <param name="itemType">The item type of the item to be added.</param>
      <param name="include">The Include value of the item to be added.</param>
      <param name="metadata">The metadata to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(System.String)">
      <summary>Adds an item definition to this project.</summary>
      <returns>Returns the added item definition.</returns>
      <param name="itemType">The item type of the item definition to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup">
      <summary>Adds an item definition group to this project.</summary>
      <returns>Returns the added item definition group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemGroup">
      <summary>Creates and adds an item group to this project.</summary>
      <returns>Returns the added item group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddProperty(System.String,System.String)">
      <summary>Updates or adds a property to this project.</summary>
      <returns>Returns the updated or added property.</returns>
      <param name="name">The name of the property to be updated or added.</param>
      <param name="value">The value of the property to be updated or added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup">
      <summary>Adds a new property group to this project.</summary>
      <returns>Returns the added property group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddTarget(System.String)">
      <summary>Adds a target to the project.</summary>
      <returns>Returns the added target.</returns>
      <param name="name">The name of the target to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(System.String,System.String,System.String)">
      <summary>Adds a UsingTask Element (MSBuild) to the project.</summary>
      <returns>Returns the added UsingTask element.</returns>
      <param name="name">The task name.</param>
      <param name="assemblyFile">The file path to the assembly.</param>
      <param name="assemblyName">The name of the assembly to load.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ChooseElements">
      <summary>Gets all child Choose Element (MSBuild) in this project.</summary>
      <returns>Returns all child Choose elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the global project collection. </summary>
      <returns>Returns the new project root.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the specified project collection.</summary>
      <returns>Returns the new project root.</returns>
      <param name="projectCollection">The project collection to be added to.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String)">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the global project collection. The new project root is initialized from data found at the specified file path.</summary>
      <returns>Returns the new project root.</returns>
      <param name="path">The file path to the data used for initialization.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the specified project collection. The new project root is initialized from data found at the specified file path.</summary>
      <returns>Returns the new project root.</returns>
      <param name="path">The file path to the data used for initialization.</param>
      <param name="projectCollection">The project collection to be added to.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader)">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the global project collection. The new project root is initialized from data read from the specified XmlReader. </summary>
      <returns>Returns the new project root.</returns>
      <param name="xmlReader">The XML reader used for initialization.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates and initializes an in-memory, empty ProjectRootElement instance and adds it to the specified project collection. The new project root is initialized from data read from the specified XmlReader. </summary>
      <param name="xmlReader">The XML reader used for initialization.</param>
      <param name="projectCollection">The project collection to be added to.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement">
      <summary>Creates a Choose Element (MSBuild). </summary>
      <returns>A <see cref="ChoseElement" /> class.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(System.String)">
      <summary>Creates an Import Element (MSBuild). </summary>
      <returns>Returns the created Import element.</returns>
      <param name="project">The project to be imported.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement">
      <summary>Creates an import group. </summary>
      <returns>Returns the import group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(System.String)">
      <summary>Creates an item definition. </summary>
      <returns>Returns the item definition.</returns>
      <param name="itemType">The item type of the item definition.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement">
      <summary>Creates an item definition group. </summary>
      <returns>Returns the item definition group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String)">
      <summary>Creates an item. </summary>
      <returns>Returns the item.</returns>
      <param name="itemType">The item type of the item.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String,System.String)">
      <summary>Creates an item with the specifed Include value.</summary>
      <returns>Returns the item.</returns>
      <param name="itemType">The item type of the item.</param>
      <param name="include">The Include value of the item.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement">
      <summary>Creates an item group. </summary>
      <returns>Returns the item group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String)">
      <summary>Creates a metadata node with the specified name. </summary>
      <returns>Returns the metadata node.</returns>
      <param name="name">The name of the metadata.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String,System.String)">
      <summary>Creates a metadata node with the specified name and value. </summary>
      <param name="name">The name of the metadata.</param>
      <param name="unevaluatedValue">The value of the metadata.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(System.String)">
      <summary>Creates an OnError Element (MSBuild). </summary>
      <returns>Returns the OnError element.</returns>
      <param name="executeTargets">The targets to execute if a task fails.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement">
      <summary>Creates an Otherwise Element (MSBuild). Caller must add it to the location of choice in the project.</summary>
      <returns>Returns the Otherwise element.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(System.String,System.String,System.String)">
      <summary>Creates an Output Element (MSBuild).</summary>
      <returns>Returns the Output element.</returns>
      <param name="taskParameter">The name of the task's output parameter.</param>
      <param name="itemType">The item that receives the task's output parameter value.</param>
      <param name="propertyName">The property that receives the task's output parameter value.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement">
      <summary>Creates a ProjectExtensions Element (MSBuild). </summary>
      <returns>Returns the ProjectExtensions element.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(System.String)">
      <summary>Creates a property. </summary>
      <returns>Returns the property.</returns>
      <param name="name">The name of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement">
      <summary>Creates a property group. </summary>
      <returns>Returns the property group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(System.String)">
      <summary>Creates a target. </summary>
      <returns>Returns the target.</returns>
      <param name="name">The name of the target.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(System.String)">
      <summary>Creates a task. </summary>
      <returns>Returns the task.</returns>
      <param name="name">The name of the task.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(System.String,System.String)">
      <summary>Creates a task to be referenced by a UsingTask Element (MSBuild). </summary>
      <returns>Returns the task.</returns>
      <param name="evaluate">The string to evaluate.</param>
      <param name="body">The body to add.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String)">
      <summary>Adds a UsingTask Element (MSBuild) to the project.</summary>
      <returns>Returns the UsingTask element.</returns>
      <param name="taskName">The task name.</param>
      <param name="assemblyFile">The file path to the assembly.</param>
      <param name="assemblyName">The name of the assembly to load.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
      <summary>Creates a parameter for use in a UsingTask Element (MSBuild) parameter group.</summary>
      <returns>Returns the parameter.</returns>
      <param name="name">The name of the UsingTask element.</param>
      <param name="output">Stores outputs from the task in the project file.</param>
      <param name="required">A user-defined task parameter that contains the parameter value as its value.</param>
      <param name="parameterType">The type of the parameter.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement">
      <summary>Creates a parameter group for a UsingTask Element (MSBuild). </summary>
      <returns>Returns the parameter group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(System.String)">
      <summary>Creates a When Element (MSBuild) with a specified Condition attribute. </summary>
      <returns>Returns the When element.</returns>
      <param name="condition">The value of the Condition attribute.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.DefaultTargets">
      <summary>Gets or sets the value of the DefaultTargets attribute. </summary>
      <returns>Returns the value of the DefaultTargets attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.DirectoryPath">
      <summary>Gets the directory path to the project file. </summary>
      <returns>Returns the directory path, which is never null. If the project is not loaded from disk, returns the current-directory at the time the project was loaded.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Encoding">
      <summary>Specifies the character encoding that the project file is to be saved in.</summary>
      <returns>Returns the character encoding that the project file is to be saved in.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.FullPath">
      <summary>Gets the full path to the project file. </summary>
      <returns>Returns the full path to the project file. If the project is not loaded from disk, returns null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.HasUnsavedChanges">
      <summary>Determines whether the project has been modified since it was last loaded or saved.</summary>
      <returns>Returns true if the project has been modified; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroups">
      <summary>Gets all the child import groups in this project.</summary>
      <returns>Returns all the child import groups in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed">
      <summary>Gets all the child import groups in this project, starting with the last group.</summary>
      <returns>Returns all the child import groups in this project, starting with the last group.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Imports">
      <summary>Gets all the child import elements in this project.</summary>
      <returns>Gets all the child import elements in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.InitialTargets">
      <summary>Gets or sets the value of the InitialTargets attribute. </summary>
      <returns>Returns the InitialTargets attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups">
      <summary>Gets all the child item definition groups in this project.</summary>
      <returns>Returns all the child item definition groups in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed">
      <summary>Gets all the child item definition groups in this project, starting with the last group.</summary>
      <returns>Returns all the child item definition groups in this project, starting with the last group.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions">
      <summary>Gets all child item definitions in all item definition groups anywhere in this project.</summary>
      <returns>Gets all child item definitions in all item definition groups anywhere in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroups">
      <summary>Gets all the child item groups in this project. </summary>
      <returns>Returns all the child item groups in this project. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed">
      <summary>Gets all the child item groups present in this project, starting with the last group. </summary>
      <returns>Returns all the child item groups present in this project, starting with the last group. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Items">
      <summary>Gets all child items in this project.</summary>
      <returns>Returns all child items in this project, even if they are contained by Choose elements. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.LastWriteTimeWhenRead">
      <summary>Gets the last-write-time of the project file.</summary>
      <returns>Gets the last-write-time of the project file.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String)">
      <summary>Initializes a project root in the global project collection by loading data from the specified file path. </summary>
      <returns>Returns the initialized project root.</returns>
      <param name="path">The file path to the data.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Initializes a project root in the specified project collection by loading data from the specified file path. </summary>
      <returns>Returns the initialized project root.</returns>
      <param name="path">The file path to the data.</param>
      <param name="projectCollection">The project collection containing the project to be initialized.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Properties">
      <summary>Gets all the child properties in this project.</summary>
      <returns>Returns all child properties in this project, even if they are contained by Choose elements. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroups">
      <summary>Gets all the child property groups in this project. </summary>
      <returns>Returns all the child property groups in this project. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed">
      <summary>Gets all the child property groups present in this project, starting with the last group. </summary>
      <returns>Returns all the child property groups present in this project, starting with the last group. </returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.RawXml">
      <summary>Gets the XML content that represents this project. </summary>
      <returns>Returns the XML content that represents this project as a string.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save">
      <summary>Saves the project, if modified, to the file system. </summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter)">
      <summary>Saves the project to the specified text writer, whether modified or not. </summary>
      <param name="writer">The text writer to write the project to.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String)">
      <summary>Saves the project, if modified or if the file path to storage has changed.</summary>
      <param name="path">The file path to the project in storage.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.String,System.Text.Encoding)">
      <summary>Saves the project, if modified or if the file path to storage has changed. Uses the specified character encoding..</summary>
      <param name="path">The file path to the project in storage.</param>
      <param name="encoding">The character encoding used to save the project.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.Text.Encoding)">
      <summary>Saves the project, if modified, using the specified character encoding.</summary>
      <param name="saveEncoding">The character encoding used to save the project.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Targets">
      <summary>Gets all the child targets in this project.</summary>
      <returns>Returns all the child targets in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.TimeLastChanged">
      <summary>Gets the time that this project was last modified. </summary>
      <returns>Returns the time that this project was last modified. Returns null if the project hasn't been modified since being created or loaded.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.ToolsVersion">
      <summary>Gets or sets the value of the ToolsVersion attribute. </summary>
      <returns>Returns the ToolsVersion attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String)">
      <summary>Gets the project root in the global project collection that was loaded into memory from the specified file path. or null if it is not currently in memory. </summary>
      <returns>Returns the project root. Returns null if no project was loaded into memory from the specified file path.</returns>
      <param name="path">The path of the ProjectRootElement, cannot be null.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Gets the project root in the specified project collection that was loaded into memory from the specified file path. or null if it is not currently in memory. </summary>
      <returns>Returns the project root. Returns null if no project was loaded into memory from the specified file path.</returns>
      <param name="path">The path of the ProjectRootElement, cannot be null.</param>
      <param name="projectCollection">The project collection to search for the project root.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.UsingTasks">
      <summary>Gets all child UsingTask Element (MSBuild) in this project.</summary>
      <returns>Returns all child UsingTask elements in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectRootElement.Version">
      <summary>Gets the version number of this object. </summary>
      <returns>Returns the version number of this object. </returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectTargetElement">
      <summary>Represents a Target Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddItemGroup">
      <summary>Adds an item group after the last child.</summary>
      <returns>Returns the added item group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddPropertyGroup">
      <summary>Adds a property group after the last child.</summary>
      <returns>Returns the added property group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddTask(System.String)">
      <summary>Adds a task to this target after any existing task.</summary>
      <returns>Returns the added task.</returns>
      <param name="taskName">The name of the task to add.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.AfterTargets">
      <summary>Gets or sets the AfterTargets attribute value. </summary>
      <returns>Returns the AfterTargets attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.BeforeTargets">
      <summary>Gets or sets the BeforeTargets attribute value. </summary>
      <returns>Returns the BeforeTargets attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.DependsOnTargets">
      <summary>Gets or sets the DependsOnTargets attribute value.  Returns empty string if it is not present. Removes the attribute if the value to set is empty.</summary>
      <returns>Returns the DependsOnTargets attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Inputs">
      <summary>Gets or sets the Inputs attribute value.  Returns empty string if it is not present. Removes the attribute if the value to set is empty.</summary>
      <returns>Returns the Inputs attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.ItemGroups">
      <summary>Gets all child item groups</summary>
      <returns>Returns all child item groups.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.KeepDuplicateOutputs">
      <summary>Gets or sets the TrimDuplicateOutputs attribute value. </summary>
      <returns>Returns the TrimDuplicateOutputs attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Name">
      <summary>Gets and sets the name of the this target.</summary>
      <returns>Returns the name of the this target.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.OnErrors">
      <summary>Get all child OnError Element (MSBuild).</summary>
      <returns>Returns all child OnError elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Outputs">
      <summary>Gets or sets the Outputs attribute value.  Returns empty string if it is not present. Removes the attribute if the value to set is empty.</summary>
      <returns>Returns the Outputs attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.PropertyGroups">
      <summary>Gets all child property groups.</summary>
      <returns>Returns all child property groups.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Returns">
      <summary>Gets or sets the Returns attribute value. </summary>
      <returns>Returns the returns attribute value; null if the attribute is not present</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Tasks">
      <summary>Gets all child tasks.</summary>
      <returns>Returns all child tasks.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectTaskElement">
      <summary>Represents a Task Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)">
      <summary>Adds an Output item after the last child.</summary>
      <returns>Returns the added Output item.</returns>
      <param name="taskParameter">The name of the task which outputs to the item.</param>
      <param name="itemType">The item type of the new item whose value is set to the output of the task.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)">
      <summary>Adds a conditioned Output item to this task after the last child.</summary>
      <returns>Returns the added conditioned Output item.</returns>
      <param name="taskParameter">The name of the parameter.</param>
      <param name="itemType">The item type of the item.</param>
      <param name="condition">The condition of the parameter.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)">
      <summary>Adds an Output property to this task after the last child.</summary>
      <returns>Returns the added Output property.</returns>
      <param name="taskParameter">The name of the parameter.</param>
      <param name="propertyName">The name of the property.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)">
      <summary>Adds a conditioned Output property to this task after the last child.</summary>
      <returns>Returns the added conditioned Output property.</returns>
      <param name="taskParameter">The name of the parameter.</param>
      <param name="propertyName">The name of the property.</param>
      <param name="condition">The condition of the property.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ContinueOnError">
      <summary>Gets or sets the ContinueOnError attribute value. </summary>
      <returns>Returns the ContinueOnError attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)">
      <summary>Gets the value of the parameter with the specified name.</summary>
      <returns>Returns the value of the parameter with the specified name. If no parameter by that name exists in the task, returns an empty string.</returns>
      <param name="name">The name of the parameter.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Name">
      <summary>Gets the name of this task.</summary>
      <returns>Returns the name of this task.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Outputs">
      <summary>Gets all Output Element (MSBuild) children.</summary>
      <returns>Returns all Output element children.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Parameters">
      <summary>Gets all unevaluated parameters of this task. </summary>
      <returns>Returns all unevaluated parameters of this task. </returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.RemoveAllParameters">
      <summary>Removes all parameters from the task. Does not remove any ContinueOnError and/or Condition attributes.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.RemoveParameter(System.String)">
      <summary>Removes any parameter on this task with the specified name. If no parameter by that name exists in the task, does nothing.</summary>
      <param name="name">The name of the parameter to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)">
      <summary>Updates or adds a parameter on this task</summary>
      <param name="name">The name of the parameter to update or add.</param>
      <param name="unevaluatedValue">The value of the parameter.</param>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskBodyElement">
      <summary>Represents the body of an inline task.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.Evaluate">
      <summary>Gets the value of the Evaluate attribute.</summary>
      <returns>Returns the value of the Evaluate attribute, which is either "true" or "false". Returns "true" if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.TaskBody">
      <summary>Gets or sets the unevaluated value of the contents of the inline task. </summary>
      <returns>Returns the unevaluated inner XML content of the inline task. Returns an empty string if no inline task body is present.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskElement">
      <summary>Represents a UsingTask Element (MSBuild) in an MSBuild project. The UsingTask element is used both for inline tasks and precompiled tasks.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddParameterGroup">
      <summary>Adds a new ParameterGroup element to this inline task. </summary>
      <returns>Returns the new parameter group.</returns>
    </member>
    <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddUsingTaskBody(System.String,System.String)">
      <summary>Adds a new TaskBody element to this inline task.</summary>
      <returns>Returns the new task body.</returns>
      <param name="evaluate">A flag which, if true, expands the item and property values in the task body. This flag is true by default.</param>
      <param name="taskBody">The body of the task as a string.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyFile">
      <summary>Gets the value of the AssemblyFile attribute, which selects the name of the assembly to load.</summary>
      <returns>Returns the value of the AssemblyFile attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.AssemblyName">
      <summary>Gets and sets the value of the AssemblyName attribute. </summary>
      <returns>Returns the value of the AssemblyName attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.ParameterGroup">
      <summary>Gets any ParameterGroup element for this inline task.</summary>
      <returns>Returns the parameter group. Returns null if no parameter group exists.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskBody">
      <summary>Gets the inner XML content of this inline task.</summary>
      <returns>Returns the inner XML content of the inline task. Returns null if no body exists.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskFactory">
      <summary>Gets and sets the value of the TaskFactory attribute of this inline task.</summary>
      <returns>Returns the value of the TaskFactory attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskName">
      <summary>Gets and sets the value of the TaskName attribute.</summary>
      <returns>Returns the value of the TaskName attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectUsingTaskParameterElement">
      <summary>Represents a parameter of an inline task.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Name">
      <summary>Gets and sets the name of the parameter of this inline task.</summary>
      <returns>Returns the name of the parameter.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Output">
      <summary>Gets or sets the optional Output attribute of this inline task.</summary>
      <returns>Returns the value of the Output attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.ParameterType">
      <summary>Gets or sets the Type attribute of this inline task.</summary>
      <returns>Returns the value of the Type attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.Required">
      <summary>Gets or sets the Required attribute</summary>
      <returns>Returns the value of the Required attribute. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.ProjectWhenElement">
      <summary>Represents a When Element (MSBuild) in an MSBuild project.</summary>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ChooseElements">
      <summary>Gets all child Choose Element (MSBuild).</summary>
      <returns>Returns all child Choose elements.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ItemGroups">
      <summary>Gets all child item groups.</summary>
      <returns>Returns all child item groups.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.ProjectWhenElement.PropertyGroups">
      <summary>Gets all child property groups.</summary>
      <returns>Returns all child property groups.</returns>
    </member>
    <member name="T:Microsoft.Build.Construction.UsingTaskParameterGroupElement">
      <summary>Represents the ParameterGroup of an inline task.</summary>
    </member>
    <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String)">
      <summary>Adds a parameter to this parameter group.</summary>
      <returns>The new parameter.</returns>
      <param name="name">The name of the parameter to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String,System.String,System.String,System.String)">
      <summary>Adds a parameter to this parameter group, using the given name, type, and attributes.</summary>
      <returns>Returns the new parameter.</returns>
      <param name="name">The name of the parameter to be added.</param>
      <param name="output">The value of the Output attribute.</param>
      <param name="required">The value of the Required attribute.</param>
      <param name="parameterType">The type of the parameter.</param>
    </member>
    <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.Condition">
      <summary>Gets a nonexistent condition, which is implicitly true.</summary>
      <returns>Returns a null.</returns>
    </member>
    <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters">
      <summary>Gets all parameters of this parameter group.</summary>
      <returns>Returns all parameters.</returns>
    </member>
    <member name="T:Microsoft.Build.Debugging.DebuggerManager">
      <summary>Manager for supporting debugging a state machine.</summary>
    </member>
    <member name="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread">
      <summary>Executes the islands on a dedicated worker thread. The worker thread's physical callstack then maps to the interpreter's virtual callstack.</summary>
    </member>
    <member name="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.IslandWorker(Microsoft.Build.Debugging.DebuggerManager.IslandThread)">
      <summary>Private entry point called from islands. Must be public so that the islands can invoke it. Called on debugger worker thread.</summary>
      <param name="controller">The thread calling the entry point.</param>
    </member>
    <member name="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.System#IDisposable#Dispose">
      <summary>Releases all resources used by the current instance of the <see cref="T:Microsoft.Build.Debugging.DebuggerManager.IslandThread" /> class.</summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.Project">
      <summary>Represents a project with design time semantics. This class can load project files, edit items and properties and build projects.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor">
      <summary>Constructs an empty project using the global project collection global properties and default tools version.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</summary>
      <param name="xml">ProjectRootElement to use for evaluation.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</summary>
      <param name="xml">The project root to use for evaluation.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</summary>
      <param name="xml">The project root to use for evaluation.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null.</param>
      <param name="projectCollection">The project collection the project is added to.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</summary>
      <param name="xml">The project root to use for evaluation.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null</param>
      <param name="projectCollection">The project collection the project is added to. May not be null.</param>
      <param name="loadSettings">The load settings to use for evaluation.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Constructs an empty project using the given project collection global properties and default tools version.</summary>
      <param name="projectCollection">The project collection that the new project is added to.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version. </summary>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">The tools version used to evaluate the project. May be null.</param>
      <param name="projectCollection">The project collection the new project will be added to.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)">
      <summary>Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version. </summary>
      <param name="projectFile">The source project file to be evaluated.</param>
      <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException">If the evaluation fails.</exception>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version. </summary>
      <param name="projectFile">The path to the source project file to be evaluated.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version. </summary>
      <param name="projectFile">The path to the source project file to be evaluated.</param>
      <param name="globalProperties">The global properties. May be null.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
      <param name="projectCollection">The project collection the project is added to. May not be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings. </summary>
      <param name="projectFile">The path to the source project file to be evaluated.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
      <param name="projectCollection">The project collection the project is added to. May not be null.</param>
      <param name="loadSettings">The load settings to use for evaluation.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)">
      <summary>Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the global project collection global properties and default tools version. </summary>
      <param name="xmlReader">Xml reader to read project source code from.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version. </summary>
      <param name="xmlReader">Xml reader to read project source code from.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version. </summary>
      <param name="xmlReader">Xml reader to read project source code from.</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null</param>
      <param name="projectCollection">The project collection the project is added to. May not be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
      <summary>Constructs a project and evaluates the source code from the given XML reader. The source code is evaluated with the given global properties and given tools version. </summary>
      <param name="xmlReader">Xml reader to read project from</param>
      <param name="globalProperties">Global properties to evaluate with. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">Tools version to evaluate with. May be null</param>
      <param name="projectCollection">The project collection the project is added to. May not be null.</param>
      <param name="loadSettings">The load settings to use for evaluation.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)">
      <summary>Adds an item with no metadata to the project. </summary>
      <returns>Returns the added item.</returns>
      <param name="itemType">The item type of the added item.</param>
      <param name="unevaluatedInclude">Include attribute of the item to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds an item with the given metadata to the project. </summary>
      <returns>Returns the added item.</returns>
      <param name="itemType">The item type of the added item.</param>
      <param name="unevaluatedInclude">Include attribute of the item to be added.</param>
      <param name="metadata">The metadata of the added item.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)">
      <summary>Adds an item with no metadata to the project.  Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.  Makes no effort to locate the new item near similar items.</summary>
      <returns>Returns a list of the project items added.</returns>
      <param name="itemType">The item type to be added.</param>
      <param name="unevaluatedInclude">The unevaluated Include attribute to be added to the item.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds an item with metadata to the project. Metadata may be null, indicating no metadata. Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group. Makes no effort to locate the new item near similar items.</summary>
      <returns>Returns a list of the project items added.</returns>
      <param name="itemType">The item type to be added.</param>
      <param name="unevaluatedInclude">The unevaluated Include attribute to be added to the item.</param>
      <param name="metadata">The metadata to be added.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata">
      <summary>Gets all item definition metadata encountered during evaluation. </summary>
      <returns>Returns all item definition metadata encountered during evaluation. This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems">
      <summary>Gets an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.</summary>
      <returns>Returns an enumerator over all items encountered during evaluation. These are read during the third evaluation pass.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties">
      <summary>Gets all properties encountered during evaluation. </summary>
      <returns>Returns all properties encountered during evaluation. This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build">
      <summary>Builds this project, using the default targets. </summary>
      <returns>Returns true on success; false otherwise. </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)">
      <summary>Builds this project, using the default targets and the given logger.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="logger">The logger to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds this project, using the default targets and the given loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="loggers">An enumerator over all loggers to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds this project, using the default targets and the given loggers and remote loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="loggers">The loggers to be used during the build.</param>
      <param name="remoteLoggers">The remote loggers to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String)">
      <summary>Builds this project, building the given target.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="target">The target to be built.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds this project, building the given target and using the given loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="target">The target to be built.</param>
      <param name="loggers">The loggers to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds this project, building the given target and using the given loggers and remote loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="target">The target to be built.</param>
      <param name="loggers">The loggers to be used during the build.</param>
      <param name="remoteLoggers">The remote loggers to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[])">
      <summary>Builds this project, building the given targets.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="targets">An array of targets to be built.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds this project, building the given targets and using the given loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="targets">The targets to be built.</param>
      <param name="loggers">The loggers to be used during the build.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds this project, building the given targets and using the given loggers and remote loggers.</summary>
      <returns>Returns true on success; false otherwise. </returns>
      <param name="targets">The targets to be built.</param>
      <param name="loggers">The loggers to be used during the build.</param>
      <param name="remoteLoggers">The remote loggers to be used during the build.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ConditionedProperties">
      <summary>Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</summary>
      <returns>Returns a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens. The collection is in canonical form. The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
      <summary>Creates a project instance based on this project, but completely disconnected from it. </summary>
      <returns>Returns the project instance.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.DirectoryPath">
      <summary>Gets the root directory for this project. </summary>
      <returns>Returns the root directory for this project. The root directory is never null; in-memory projects use the current directory at the time of project load.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty">
      <summary>Gets or sets a flag the determines whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled. This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</summary>
      <returns>Returns a flag the determines whether MarkDirty is temporarily disabled.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.EvaluationCounter">
      <summary>Gets a number that is incremented every time that project is re-evaluated.</summary>
      <returns>Returns the incremented value. </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)">
      <summary>Evaluates the given string by expanding items and properties. The string is evaluated as if it were found at the very end of the project file. </summary>
      <returns>Returns the evaluated string.</returns>
      <param name="unexpandedValue">The string to be evaluated.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.FullPath">
      <summary>Gets or sets the full path to the project source file. </summary>
      <returns>Returns the full path to the project source file. Returns an empty string if the project was not loaded from disk. </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)">
      <summary>Gets evaluated, escaped value of the Include attribute of the provided items.</summary>
      <returns>Returns the evaluated, escaped value of the Include attribute of the provided items.</returns>
      <param name="item">The item to be evaluated and escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)">
      <summary>Gets the evaluated, escaped value of the Include attribute of the provided item definition.</summary>
      <param name="item">The item definition to be evaluated and escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)">
      <summary>Gets all the items in the project of the given item type. If there are none, returns an empty list. Use AddItem or RemoveItem to modify items in this project.</summary>
      <returns>Returns all the items in the project of the given item type. Returns an empty list if there are no items with the given item name. </returns>
      <param name="itemType">The item type to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)">
      <summary>Gets all items that have the given evaluated Include attribute. </summary>
      <returns>Returns all items that have the given evaluated Include attribute.</returns>
      <param name="evaluatedInclude">The evaluated Include attribute.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)">
      <summary>Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true. This is a read-only list: use AddItem or RemoveItem to modify items in this project.</summary>
      <returns>Returns all the items in the project of the given type, whether or not their Condition attribute evaluates to true. </returns>
      <param name="itemType">The item type to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetLogicalProject">
      <summary>Gets an enumerator over all the elements in the "logical project". The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</summary>
      <returns>Returns an enumerator over all the elements in the "logical project". </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)">
      <summary>Gets the escaped value of the metadatum with the provided name on the provided item.</summary>
      <returns>Gets the escaped value of the metadatum with the provided name on the provided item.</returns>
      <param name="item">The item whose metadata is to be escaped.</param>
      <param name="name">The name of the metadata to be escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)">
      <summary>Gets the escaped value of the metadatum with the provided name on the provided item definition.</summary>
      <returns>Returns the escaped value of the metadatum with the provided name on the provided item definition.</returns>
      <param name="item">The item definition whose metadata is to be escaped.</param>
      <param name="name">The name of the metadata to be escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)">
      <summary>Gets the escaped value of the provided metadatum.</summary>
      <returns>Gets the escaped value of the provided metadatum.</returns>
      <param name="metadatum">The metadatum to be escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)">
      <summary>Gets any property in the project that has the specified name. </summary>
      <returns>Returns any property in the project that has the specified name. Returns null if no property of that name exists.</returns>
      <param name="name">The name of the property to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)">
      <summary>Gets the value of the given property in this project.</summary>
      <returns>Returns the value of the given property in this project. Return an empty string if no property of that name exists. Escape sequences are converted before returning the string.</returns>
      <param name="name">The name of the property whose value is retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>Get the escaped value of the provided property.</summary>
      <returns>Returns the escaped value of the provided property.</returns>
      <param name="property">The property to be escaped.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.GlobalProperties">
      <summary>Gets a dictionary of the global properties used for the evaluation of this project.</summary>
      <returns>Returns a dictionary of the global properties used for the evaluation of this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Imports">
      <summary>Gets a list of all the files that contributed to the evaluation of this project.</summary>
      <returns>Returns a list of all the files that contributed to the evaluation of this project.The name of each item is the Import element that caused the file to be imported. The value of each item is the project root of the imported project. Import elements whose Condition attribute evaluated to false are not included. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates">
      <summary>Gets a list of duplicate imports if an import was imported multiple times. However, only the first import was used in evaluation.</summary>
      <returns>Returns a list of duplicate imports.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled">
      <summary>Gets or sets a property that selects whether the targets and tasks of this project can be built.</summary>
      <returns>Returns true if the targets and tasks of this project can be built; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.IsDirty">
      <summary>Gets a property that indicates whether this project has been modified so that it must be reevaluated. </summary>
      <returns>Returns a property that indicates whether this project has been modified so that it must be reevaluated. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemDefinitions">
      <summary>Gets a dictionary of item definitions in this project, keyed by item type.</summary>
      <returns>Returns a dictionary of item definitions in this project, keyed by item type.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Items">
      <summary>Gets an enumerator over all items in this project, ordered within groups of item types.</summary>
      <returns>Returns an enumerator over all items in this project, ordered within groups of item types.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition">
      <summary>Gets an enumerator over all items in this project, ordered within groups of item types. </summary>
      <returns>Returns an enumerator over all items in this project., ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to false. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ItemTypes">
      <summary>Gets an enumerator over all item types in this project. </summary>
      <returns>Returns an enumerator over all item types in this project. This is an ordered collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.MarkDirty">
      <summary>Marks this project as modified. </summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ProjectCollection">
      <summary>Gets the project collection which contains this project. </summary>
      <returns>Returns the project collection which contains this project, which is never null.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Properties">
      <summary>Gets an enumerator over all properties in this project. This is an unordered collection.</summary>
      <returns>Returns an enumerator over all properties in this project. Since properties are evaluated as they appear, this is an unordered collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary">
      <summary>Reevaluates the project to incorporate any changes. </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">
      <summary>Removes a global property and marks the project as modified.</summary>
      <returns>Returns true if the value of the global property was set. </returns>
      <param name="name">The name of the global property to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
      <summary>Removes an item from the project. The item to be removed must be present in the project, and must not originate from an imported file. </summary>
      <returns>Returns true if the item is present in this evaluated project; otherwise false. Normally this method returns true, since if the requested item is not present, the method throws an exception. If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</returns>
      <param name="item">The item to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
      <summary>Removes all the given items from the project, unless they originate from an imported project. </summary>
      <param name="items">The items to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>Removes an property from the project. The property to be removed must be present in the project, and must not originate from an imported file. </summary>
      <returns>Returns true if the property is present in this evaluated project; otherwise false. </returns>
      <param name="property">The property to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save">
      <summary>Saves the project to the file system, if modified, using the default character encoding.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)">
      <summary>Saves the project to the provided text writer, whether or not the project has been modified. Uses the character encoding of the text writer and marks the project as unmodified.</summary>
      <param name="writer">The text writer to save the project to.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.String)">
      <summary>Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</summary>
      <param name="path">The path to the project source code.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)">
      <summary>Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</summary>
      <param name="path">The path to the project source code.</param>
      <param name="encoding">The character encoding used to save the project.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)">
      <summary>Saves the project to the file system, if modified, using the given character encoding.</summary>
      <param name="encoding">The character encoding used to save the project.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)">
      <summary>Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</summary>
      <param name="writer">The writer that saves the project file.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">
      <summary>Sets a global property after the project has been evaluated. If the value changes, the project is marked to require reevaluation. </summary>
      <param name="name">The name of the global property to set.</param>
      <param name="escapedValue">The new value of the global property.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)">
      <summary>Sets or adds a property with the given name and value to the project. Overwrites the value of a property with the same name if it did not originate in an imported file. </summary>
      <returns>Returns the property.</returns>
      <param name="name">The name of the property to set.</param>
      <param name="unevaluatedValue">The new unevaluated value of the property.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.SkipEvaluation">
      <summary>Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled. This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</summary>
      <returns>Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Targets">
      <summary>Gets a dictionary of all targets in this project, keyed by target name. </summary>
      <returns>Returns a dictionary of all targets in this project, keyed by target name. Overridden targets are not included in this collection. This dictionary is read-only.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.ToolsVersion">
      <summary>Gets the tools version that this project was evaluated with, if any.</summary>
      <returns>Gets the tools version that this project was evaluated with, if any. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Project.Xml">
      <summary>Gets the root project associated with this project. Can never be null</summary>
      <returns>Returns the root project associated with this project, which can never be null.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectCollection">
      <summary>Encapsulates a set of related projects, their toolsets, a default set of global properties, and the loggers that should be used to build them. A global version of this class acts as the default project collection. </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor">
      <summary>Creates a project collection with no global properties or loggers. The project collection toolset is initialized from the configuration file and registry.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <summary>Creates a project collection with no global properties or loggers. The project collection toolset is initialized from toolsets in the given locations.</summary>
      <param name="toolsetLocations">The locations from which to load toolsets.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>Instantiates a project collection with specified global properties, no loggers, and that reads toolset information from the configuration file and registry.</summary>
      <param name="globalProperties">The default global properties to use. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
      <summary>Instantiates a project collection with specified global properties and loggers and using the specified toolset locations.</summary>
      <param name="globalProperties">The default global properties to use. May be null.</param>
      <param name="loggers">The loggers to register. May be null.</param>
      <param name="toolsetDefinitionLocations">The locations from which to load toolsets.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},Microsoft.Build.Evaluation.ToolsetDefinitionLocations,System.Int32,System.Boolean)">
      <summary>Creates a project collection with specified global properties, loggers, node count, and onlyLogCriticalEvents value. The project collection toolset is initialized from toolsets in the given locations. </summary>
      <param name="globalProperties">The default global properties to use. May be null.</param>
      <param name="loggers">The loggers to register. May be null and specified to any build instead.</param>
      <param name="remoteLoggers">Any remote loggers to register. May be null and specified to any build instead.</param>
      <param name="toolsetDefinitionLocations">The locations from which to load toolsets.</param>
      <param name="maxNodeCount">The maximum number of nodes to use for building.</param>
      <param name="onlyLogCriticalEvents">If set to true, only critical events will be logged.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)">
      <summary>Adds a new toolset to the project collection. Replaces any existing toolset with the same tools version.</summary>
      <param name="toolset">The toolset to be added.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)">
      <summary>Determines whether a toolset is defined for the given tools version.</summary>
      <returns>Returns true if there is a toolset defined for the given tools version; false otherwise.</returns>
      <param name="toolsVersion">The tools version to search for.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Count">
      <summary>Gets the number of projects currently loaded into this collection.</summary>
      <returns>Returns the number of projects currently loaded into this collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.DefaultToolsVersion">
      <summary>Gets the default tools version of this project collection. </summary>
      <returns>Returns the default tools version of this project collection, which is always defined. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.DisableMarkDirty">
      <summary>Gets or sets a flag that determines whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled on projects in this collection. This allows, for example, a global properties to be set without projects getting marked dirty for reevaluation as a consequence.</summary>
      <returns>Returns a flag that determines whether MarkDirty is temporarily disabled.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose">
      <summary>Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection. </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Dispose(System.Boolean)">
      <summary>Releases both managed and unmanaged resources.  Called when a host no longer needs the project collection.. Shuts down any logging services that the project collection owns and releases the logger thread.</summary>
      <param name="disposing">If true, releases both managed and unmanaged resources; otherwise releases only unmanaged resources..</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)">
      <summary>Converts special characters in a string to MSBuild escape format. </summary>
      <returns>Returns the converted string.</returns>
      <param name="unescapedString">The string to be converted.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)">
      <summary>Get any global property on the project collection that has the specified name.</summary>
      <returns>Returns any global property on the project collection that has the specified name; otherwise returns null.</returns>
      <param name="name">The name of the property to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)">
      <summary>Gets all projects whose project path matches the given path. </summary>
      <returns>Returns all projects whose project path matches the given path. </returns>
      <param name="fullPath">The path to a project file to be matched.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)">
      <summary>Get the toolset with the specified tools version. </summary>
      <returns>Returns the toolset with the specified tools version. Returns null if no toolset matching this tools version exists.</returns>
      <param name="toolsVersion">The tools version to match.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProjectCollection">
      <summary>Gets the global project collection object. </summary>
      <returns>Returns the global project collection object. This is a singleton project collection with no global properties or loggers. Toolset information is obtained from the configuration file and registry.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.GlobalProperties">
      <summary>Gets the read-only default global properties for all projects in this collection. </summary>
      <returns>Returns the read-only default global properties for all projects in this collection. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.HostServices">
      <summary>Gets or sets an object that provides host services to tasks during builds of projects contained in the project collection. </summary>
      <returns>Returns the host services object.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.IsBuildEnabled">
      <summary>Gets or sets a property that selects by default whether the targets and tasks of projects in the project collection can be built.</summary>
      <returns>Gets or sets a property that selects by default whether the targets and tasks of projects in this project collection can be built.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects">
      <summary>Gets all the projects currently loaded into this collection.</summary>
      <returns>Returns all the projects currently loaded into this collection. </returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)">
      <summary>Evaluates a project from the source code in the given project file. The source code is evaluated with the global properties and tools version of this project collection. </summary>
      <returns>If an existing project in the collection has already been evaluated from the given project file, the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.</returns>
      <param name="fileName">The project file to evaluate.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Evaluates a project from the source code read from the given project file. The source code is evaluated with the given global properties and tools version. </summary>
      <returns>If an existing project in the collection has already been evaluated from the given project file, and with the given global properties and tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.</returns>
      <param name="fileName">The project file to be evaluated.</param>
      <param name="globalProperties">The global properties to use. May be null, in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)">
      <summary>Evaluates a project from the source code read from the given project file. The source code is evaluated with the global properties of this project collection and the given tools version. </summary>
      <returns>If an existing project in the collection has already been evaluated from the given project file, and with the given tools version, then the existing project is returned. Otherwise, a new project is created, evaluated, added to the project collection, and returned.</returns>
      <param name="fileName">The project file to evaluate.</param>
      <param name="toolsVersion">The tools version to use. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)">
      <summary>Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties and tools version of this project collection. </summary>
      <returns>Returns the new project.</returns>
      <param name="xmlReader">Xml reader to read project source code from.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the given global properties and tools version. </summary>
      <returns>Returns the new project.</returns>
      <param name="xmlReader">Xml reader to read project from</param>
      <param name="globalProperties">The global properties to use. May be null in which case the containing project collection's global properties will be used.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)">
      <summary>Evaluates a project from the source code read from the given XML reader. The source code is evaluated with the global properties of this project collection and the given tools version. </summary>
      <returns>Returns the new project.</returns>
      <param name="xmlReader">Xml reader to read project source code from.</param>
      <param name="toolsVersion">The tools version to use. May be null.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Loggers">
      <summary>Gets all loggers that projects in this collection can use for their builds. </summary>
      <returns>Returns all loggers that projects in this collection can use for their builds. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.OnlyLogCriticalEvents">
      <summary>Gets or sets a switch that determines whether only critical events such as warnings and errors are logged.</summary>
      <returns>If true, only critical events such as warnings and errors are logged; false otherwise.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterForwardingLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Adds the given remote loggers to the collection of remote loggers used for builds of projects in this collection. </summary>
      <param name="remoteLoggers">The remote loggers to add. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLogger(Microsoft.Build.Framework.ILogger)">
      <summary>Adds the given logger to the collection of loggers used for builds of projects in this collection. </summary>
      <param name="logger">The logger to add.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RegisterLoggers(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Adds the given loggers to the collection of loggers used for builds of projects in this collection. </summary>
      <param name="loggers">The loggers to be added. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveAllToolsets">
      <summary>Removes all toolsets from the project collection.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)">
      <summary>Removes a global property from the set of default global properties.</summary>
      <returns>Returns true if the global property is present before removal; false otherwise.</returns>
      <param name="name">The name of the default global property to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)">
      <summary>Removes a toolset from the project collection.</summary>
      <returns>Returns true if the toolset is present before removal; false otherwise.</returns>
      <param name="toolsVersion">The toolset to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)">
      <summary>Sets the value of a property in the default set of global properties.</summary>
      <param name="name">The name of the default global property to be added or set.</param>
      <param name="value">The new value of the default global property.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.SkipEvaluation">
      <summary>Gets or sets a flag the determines whether ReevaluateIfNecessary is temporarily disabled on projects in this collection. This is useful when the host expects to make a number of reads and writes to projects, and wants to temporarily sacrifice correctness for performance.</summary>
      <returns>Returns a flag the determines whether ReevaluateIfNecessary is temporarily disabled.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.ToolsetLocations">
      <summary>Gets the locations used to find the toolsets.</summary>
      <returns>Returns the locations used to find the toolsets.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets">
      <summary>Gets the toolsets available to this project collection.</summary>
      <returns>Returns the toolsets available to this project collection.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <param name="projectRootElement">The root element of the project to unload.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)">
      <summary>Converts escaped characters in a string to MSBuild characters with special meaning. </summary>
      <returns>Returns the converted string.</returns>
      <param name="escapedString">The string to be converted.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadAllProjects">
      <summary>Removes all projects in this project collection. </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>Removes a project root element from the project root cache.</summary>
      <param name="projectRootElement">The project root element to unload.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if the project root element to unload is still in use by a loaded project or its imports.</exception>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)">
      <summary>Removes the given project from the project collection.</summary>
      <param name="project">The project to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnregisterAllLoggers">
      <summary>Removes all loggers from the collection of loggers used by project builds in this collection.</summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Version">
      <summary>Gets the file version of the assembly file that contains the MSBuild engine.</summary>
      <returns>Returns the file version of the assembly file that contains the MSBuild engine.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectItem">
      <summary>Represents an evaluated design-time project item.</summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata">
      <summary>Gets an enumerator over all item metadata. </summary>
      <returns>Returns an enumerator over all item metadata, which can never be null. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount">
      <summary>Gets the count of metadata for this item. </summary>
      <returns>Returns the count of metadata for this item. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude">
      <summary>Gets the evaluated value of the Include attribute.</summary>
      <returns>Returns the evaluated value of the Include attribute.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)">
      <summary>Gets the evaluated value of the given metadata for this item. </summary>
      <returns>Gets the evaluated value of the given metadata for this item. Returns null if no metadata exists with the given name.</returns>
      <param name="name">The name of the metadata whose value is retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)">
      <summary>Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.</summary>
      <returns>Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition. Returns an empty string if no metadata exists with the given name.</returns>
      <param name="name">The name of the metadata whose value is retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">
      <summary>Determines whether metadata with the given name is defined on this item.</summary>
      <returns>Returns true if metadata with the given name is defined on this item; false otherwise. </returns>
      <param name="name">The name of the metadata to be searched for.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.IsImported">
      <summary>Determines if this item originates from an imported file.</summary>
      <returns>Return true if this item originates from an imported file; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.ItemType">
      <summary>Gets or sets the type of this item.</summary>
      <returns>Returns the item type.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Metadata">
      <summary>Gets all the metadata for this item, including metadata originating from item definitions. </summary>
      <returns>Returns all the metadata for this item, including metadata originating from item definitions.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount">
      <summary>Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</summary>
      <returns>Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Project">
      <summary>Gets the project that contains this project item.</summary>
      <returns>Returns the project that contains this project item.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)">
      <summary>Removes any metadata with the given name. </summary>
      <returns>Returns true if metadata with the given name exists before removal; false otherwise. </returns>
      <param name="name">The name of the metadata to remove.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)">
      <summary>Renames the item to the given name. </summary>
      <param name="name">The new name of the item.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)">
      <summary>Adds metadata with the given name and unevaluated value to the item. </summary>
      <returns>Returns the new metadata. If metadata with the given name already exists, returns this metadata.</returns>
      <param name="name">The name of the metadata to add.</param>
      <param name="unevaluatedValue">The unevaluated value of the metadata to add.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude">
      <summary>Gets or sets the unevaluated value of the Include attribute.</summary>
      <returns>Returns the unevaluated value of the Include attribute.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItem.Xml">
      <summary>Gets the item element that is associated with this item. </summary>
      <returns>Returns the item element that is associated with this item, which can never be null. </returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectItemDefinition">
      <summary>Represents an evaluated item definition for a particular item-type.</summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)">
      <summary>Get any metadata in the item definition with the given name.</summary>
      <returns>Get any metadata in the item definition with the given name. Returns null if no metadata exists with that name.</returns>
      <param name="name">The name of the metadata to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)">
      <summary>Get the value of any metadata in the item that has the specified name.</summary>
      <returns>Returns the value of any metadata in the item that has the specified name; otherwise returns null.</returns>
      <param name="name">The name of the item whose metadata value is to be retrieved.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.ItemType">
      <summary>Gets the item type of this item definition.</summary>
      <returns>Returns the item type of this item definition.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Metadata">
      <summary>Gets an enumerator over all metadata for the item definition. </summary>
      <returns>Returns an enumerator over all metadata for the item definition. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.MetadataCount">
      <summary>Gets the count of the metadata on the item definition.</summary>
      <returns>Returns the count of the metadata on the item definition.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectItemDefinition.Project">
      <summary>Gets the project that contains this item definition. </summary>
      <returns>Returns the project that contains this item definition, which is never null.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)">
      <summary>Sets the value of the given metadata in the item definition.</summary>
      <returns>Returns the metadata with the given name.</returns>
      <param name="name">The name of the metadata to set.</param>
      <param name="unevaluatedValue">The new unevaluated value of the metadata.</param>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectLoadSettings">
      <summary>Flags for controlling the project load.</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.Default">
      <summary>Normal load. This is the default.</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.IgnoreMissingImports">
      <summary>Ignore nonexistent targets files when evaluating the project.</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RecordDuplicateButNotCircularImports">
      <summary>Indicates that imports including duplicate, but not circular, imports on the ImportsIncludingDuplicates property should be recorded</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ProjectLoadSettings.RejectCircularImports">
      <summary>Indicates that an exception will be thrown if any circular imports are detected</summary>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectMetadata">
      <summary>Represents evaluated design-time metadata. </summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue">
      <summary>Gets the evaluated metadata value. </summary>
      <returns>Returns the evaluated metadata value, which is never null.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported">
      <summary>Determines if the metadata originated from an imported file.</summary>
      <returns>Returns true if the metadata originated from an imported file; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType">
      <summary>Gets the item type of the containing item definition or item.</summary>
      <returns>Returns the item type of the containing item definition or item.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Name">
      <summary>Gets the name of the metadata.</summary>
      <returns>Returns the name of the metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor">
      <summary>Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation. </summary>
      <returns>Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation. Returns null if the metadata has not been overridden.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Project">
      <summary>Gets the project that contains this metadata.</summary>
      <returns>Returns the project that contains this metadata, which is never null.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{T}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)">
      <summary>Compares this project metadata with the given project metadata for equality.</summary>
      <returns>Returns true if the project metadata are equal; false otherwise.</returns>
      <param name="other">The project metadata to be compared to.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue">
      <summary>Gets or sets the unevaluated metadata value. </summary>
      <returns>Returns the unevaluated metadata value.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml">
      <summary>Gets the associated project metadata element.</summary>
      <returns>Returns the associated project metadata element, which can never be null.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ProjectProperty">
      <summary>Represents an evaluated design-time property.</summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue">
      <summary>Gets the evaluated property value. </summary>
      <returns>Returns the evaluated property value, which is never null. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsEnvironmentProperty">
      <summary>Determines whether the property originated from the environment variables.</summary>
      <returns>True if the property originated from an environment variable; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsGlobalProperty">
      <summary>Determines whether the property is a global property.</summary>
      <returns>True if the property is a global property; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsImported">
      <summary>Determines whether the property originates from an imported file.</summary>
      <returns>Returns true if the property originates from an imported file and not from an environment variable, a global property, or a reserved property. Returns false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.IsReservedProperty">
      <summary>Determines whether the property is a reserved property, for example 'MSBuildProjectFile'.</summary>
      <returns>Returns true if the property is a reserved property; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Name">
      <summary>Gets the name of the property. </summary>
      <returns>Returns the name of the property. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Predecessor">
      <summary>Gets the last property that was overridden by this property during evaluation. </summary>
      <returns>Returns the last property whose value was overridden by this property during evaluation. Returns null if the property has not been overridden.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Project">
      <summary>Gets the project that contains this property.</summary>
      <returns>Returns the project that contains this property, which is never null.</returns>
    </member>
    <member name="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{T}#Equals(Microsoft.Build.Evaluation.ProjectProperty)">
      <summary>Compares this project property with the given project property for equality.</summary>
      <returns>Returns true if the project properties are equal; false otherwise.</returns>
      <param name="other">The project property to be compared to</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.UnevaluatedValue">
      <summary>Gets or sets the unevaluated property value. </summary>
      <returns>Returns the unevaluated property value. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ProjectProperty.Xml">
      <summary>Gets the associated property element. Backing XML property. Null only if this is a global, environment, or built-in property.</summary>
      <returns>Returns the associated property element. Return null if this is a global or reserved property, or originates from an environment variable.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ResolvedImport">
      <summary>Encapsulates an import relationship in an evaluated project between a ProjectImportElement and the ProjectRootElement of the imported project.</summary>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ResolvedImport.ImportedProject">
      <summary>Gets one of the imported projects.</summary>
      <returns>Returns a <see cref="T:Microsoft.Build.Construction.ProjectRootElement" /> representing the imported project.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.ResolvedImport.ImportingElement">
      <summary>Gets the element doing the import.</summary>
      <returns>Returns the <see cref="T:Microsoft.Build.Construction.ProjectImportElement" /> representing the element doing the import.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.Toolset">
      <summary>Represent an aggregation of a tools version (eg. "2.0"), tools path, and optional set of associated properties. </summary>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <summary>Creates a toolset with the given tools version and tools path. Global, reserved, and environment properties are taken from the given project collection.</summary>
      <param name="toolsVersion">Name of the toolset</param>
      <param name="toolsPath">Path to this toolset's tasks and targets</param>
      <param name="projectCollection">The project collection from which to obtain the properties.</param>
      <param name="msbuildOverrideTasksPath">The path to search for msbuild overridetasks files.</param>
    </member>
    <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)">
      <summary>Creates a toolset with the given tools version, tools path, and build properties. Global, reserved, and environment properties are taken from the given project collection.</summary>
      <param name="toolsVersion">Name of the toolset</param>
      <param name="toolsPath">Path to this toolset's tasks and targets</param>
      <param name="buildProperties">Properties that should be associated with the Toolset. May be null, in which case an empty property group will be used.</param>
      <param name="projectCollection">The project collection from which to obtain the properties.</param>
      <param name="msbuildOverrideTasksPath">The path to search for msbuild overridetasks files.</param>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.Properties">
      <summary>Gets the optional properties associated with the toolset.</summary>
      <returns>Returns the optional properties associated with the toolset.</returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.ToolsPath">
      <summary>Gets a path to the tasks and targets of this toolset. </summary>
      <returns>Returns a path to the tasks and targets of this toolset. </returns>
    </member>
    <member name="P:Microsoft.Build.Evaluation.Toolset.ToolsVersion">
      <summary>Gets the name of this toolset.</summary>
      <returns>Returns the name of this toolset.</returns>
    </member>
    <member name="T:Microsoft.Build.Evaluation.ToolsetDefinitionLocations">
      <summary>Flags for controlling the toolset initialization. </summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.None">
      <summary>Do not read toolset information from any external location.</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.ConfigurationFile">
      <summary>Read toolset information from the exe configuration file.</summary>
    </member>
    <member name="F:Microsoft.Build.Evaluation.ToolsetDefinitionLocations.Registry">
      <summary>Read toolset information from the registry (HKLM\Software\Microsoft\MSBuild\ToolsVersions).</summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.BuildAbortedException">
      <summary>An exception representing the case where the build was aborted by request, as opposed to being unceremoniously shut down due to another kind of error exception. </summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor">
      <summary>Creates a BuildAborted exception.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Protected constructor used for (de)serialization. </summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.String)">
      <summary>Creates a BuildAborted exception.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.String,System.Exception)">
      <summary>Constructs a BuildAbortedException with an additional message attached and an inner exception.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="P:Microsoft.Build.Exceptions.BuildAbortedException.ErrorCode">
      <summary>Gets the error code (if any) associated with the exception message.</summary>
      <returns>Returns the error code as a string; returns a null string if no error code exists.</returns>
    </member>
    <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ISerializable method which must be overridden because Exception implements this interface.</summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InternalLoggerException">
      <summary>This exception is used to wrap an unhandled exception from a logger. This exception aborts the build, and it can only be thrown by the MSBuild engine.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor">
      <summary>Default constructor.</summary>
      <exception cref="T:System.InvalidOperationException">Operation is invalid.</exception>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String)">
      <summary>Creates an instance of this exception using the specified error message.</summary>
      <param name="message">The error message.</param>
      <exception cref="T:System.InvalidOperationException">Operation is invalid.</exception>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.String,System.Exception)">
      <summary>Creates an instance of this exception using the specified error message and inner exception.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
      <exception cref="T:System.InvalidOperationException">Operation is invalid.</exception>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.BuildEventArgs">
      <summary>Gets the details of the build event (if any) that was being logged.</summary>
      <returns>The build event args, or null.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.ErrorCode">
      <summary>Gets the error code associated with this exception's message (not the inner exception).</summary>
      <returns>The error code string.</returns>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ISerializable method which we must override since Exception implements this interface If we ever add new members to this class, we'll need to update this.</summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.HelpKeyword">
      <summary>Gets the F1-help keyword associated with this error, for the host IDE.</summary>
      <returns>The keyword string.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InternalLoggerException.InitializationException">
      <summary>True if the exception occured during logger initialization</summary>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InvalidProjectFileException">
      <summary>This exception is thrown whenever there is a problem with the user's XML project file. The problem might be semantic or syntactical. The latter would be of a type typically caught by XSD validation (if it was performed by the project writer). </summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor">
      <summary>Default constructor.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String)">
      <summary>Creates an instance of this exception using the specified error message.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Exception)">
      <summary>Creates an instance of this exception using the specified error message and inner exception.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
      <summary>Creates an instance of this exception using rich error information.</summary>
      <param name="projectFile">The invalid project file (can be empty string).</param>
      <param name="lineNumber">The invalid line number in the project (set to zero if not available).</param>
      <param name="columnNumber">The invalid column number in the project (set to zero if not available).</param>
      <param name="endLineNumber">The end of a range of invalid lines in the project (set to zero if not available).</param>
      <param name="endColumnNumber">The end of a range of invalid columns in the project (set to zero if not available).</param>
      <param name="message">Error message for exception.</param>
      <param name="errorSubcategory">Error sub-category that describes the error (can be null).</param>
      <param name="errorCode">The error code (can be null).</param>
      <param name="helpKeyword">The F1-help keyword for the host IDE (can be null).</param>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage">
      <summary>Gets the exception message not including the project file.</summary>
      <returns>The error message string only.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber">
      <summary>Gets the invalid column number (if any) in the project.</summary>
      <returns>The invalid column number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber">
      <summary>Gets the last column number (if any) of a range of invalid columns in the project.</summary>
      <returns>The last invalid column number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber">
      <summary>Gets the last line number (if any) of a range of invalid lines in the project.</summary>
      <returns>The last invalid line number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode">
      <summary>Gets the error code (if any) associated with the exception message.</summary>
      <returns>Error code string, or null.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory">
      <summary>Gets the error sub-category (if any) that describes the type of this error.</summary>
      <returns>The sub-category string, or null.</returns>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ISerializable method which we must override since Exception implements this interface If we ever add new members to this class, we'll need to update this.</summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged">
      <summary>Gets a flag that determines whether the exception has already been logged. Allows the exception to be logged at the most appropriate location, but continue to be propagated.</summary>
      <returns>Returns a flag that determines whether the exception has already been logged.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword">
      <summary>Gets the F1-help keyword (if any) associated with this error, for the host IDE.</summary>
      <returns>The keyword string, or null.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber">
      <summary>Gets the invalid line number (if any) in the project.</summary>
      <returns>The invalid line number, or zero.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.Message">
      <summary>Gets the exception message including the affected project file (if any).</summary>
      <returns>The complete message string.</returns>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile">
      <summary>Gets the file (if any) associated with this exception. This may be an imported file.</summary>
      <returns>Project filename/path string, or null.</returns>
    </member>
    <member name="T:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException">
      <summary>Exception subclass that ToolsetReaders should throw.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor">
      <summary>Basic constructor.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Basic constructor.</summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String)">
      <summary>Basic constructor.</summary>
      <param name="message">The error message.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.Exception)">
      <summary>Basic constructor.</summary>
      <param name="message">The error message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.String)">
      <summary>Constructor that takes an MSBuild error code</summary>
      <param name="message">The error message.</param>
      <param name="errorCode">The error code.</param>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.String,System.String,System.Exception)">
      <summary>Constructor that takes an MSBuild error code</summary>
      <param name="message">The error message.</param>
      <param name="errorCode">The error code.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="P:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.ErrorCode">
      <summary>The MSBuild error code corresponding with this exception, or null if none was specified.</summary>
    </member>
    <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>ISerializable method which we must override since Exception implements this interface If we ever add new members to this class, we'll need to update this.</summary>
      <param name="info">The error information.</param>
      <param name="context">The error context.</param>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildManager">
      <summary>This class is the public entry point for executing builds.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.#ctor">
      <summary>Gets a new build manager without specifying a name.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.#ctor(System.String)">
      <summary>Private constructor.</summary>
      <param name="hostName">The host for the build manager.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.BeginBuild(Microsoft.Build.Execution.BuildParameters)">
      <summary>Prepares the BuildManager to receive build requests.</summary>
      <param name="parameters">The build parameters. May be null.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if a build is already in progress.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)">
      <summary>Submits a lone build request and blocks until results are available.</summary>
      <param name="parameters">Build parameters.</param>
      <param name="requestData">Build request data.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if a build is already in progress.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.BuildRequest(Microsoft.Build.Execution.BuildRequestData)">
      <summary>Submits a build request and blocks until the results are available.</summary>
      <param name="requestData">Build request.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if StartBuild has not been called or if EndBuild has been called.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.CancelAllSubmissions">
      <summary>Cancels all outstanding submissions asynchronously.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildManager.DefaultBuildManager">
      <summary>Gets the singleton instance of the Build Manager.</summary>
      <returns>Returns the singleton instance of the Build Manager.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.EndBuild">
      <summary>Signals that no more build requests are expected (or allowed) and that the BuildManager may clean up.</summary>
      <exception cref="T:System.InvalidOperationException">Thrown if there is no build in progress.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)">
      <summary>Gets a matching ProjectInstance from the BuildManager cache of previously built projects.</summary>
      <returns>Returns a matching ProjectInstance from the BuildManager cache of previously built projects. If none exist, a new project instance will be created from the specified project.</returns>
      <param name="project">The project for which an instance should be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)">
      <summary>Submits a build request to the current build but does not start it immediately. Allows the user to perform asynchronous execution or access the submission ID prior to executing the request.</summary>
      <param name="requestData">Build request data.</param>
      <exception cref="T:System.InvalidOperationException">Thrown if StartBuild has not been called or if EndBuild has been called.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildManager.ResetCaches">
      <summary>Clears out all of the build manager cached information.</summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildParameters">
      <summary>This class represents all of the settings which must be specified to start a build.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor">
      <summary>Creates build parameters.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates build parameters and initializes them from a project collection.</summary>
      <param name="projectCollection">The ProjectCollection from which the BuildParameters should populate itself.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.BuildThreadPriority">
      <summary>Gets or sets the desired thread priority for building.</summary>
      <returns>Returns the thread priority for building</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.Clone">
      <summary>Creates a clone of this build parameters object. </summary>
      <returns>Returns a clone of this build parameters object. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Culture">
      <summary>Gets or sets the name of the culture to use during the build.</summary>
      <returns>Returns the culture.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.DefaultToolsVersion">
      <summary>Gets or sets the default tools version for the build.</summary>
      <returns>Returns the tools version.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.DetailedSummary">
      <summary>Gets or sets a switch that specifies whether the build should emit a detailed summary at the end of the log.</summary>
      <returns>Returns the value of a switch that specifies whether the build should emit a detailed summary at the end of the log</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.EnableNodeReuse">
      <summary>Gets or sets a flag determining whether out-of-process nodes should persist after the build and wait for further builds.</summary>
      <returns>Returns the flag.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.EnvironmentProperties">
      <summary>Gets an immutable collection of environment properties.</summary>
      <returns>Returns an immutable collection of environment properties.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ForwardingLoggers">
      <summary>Gets or sets the collection of forwarding logger descriptions.</summary>
      <returns>Returns the collection of forwarding logger descriptions.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildParameters.GetToolset(System.String)">
      <summary>Gets a given toolset.</summary>
      <returns>Returns the toolset.</returns>
      <param name="toolsVersion">The toolset to retrieve.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.GlobalProperties">
      <summary>Gets or sets an immutable collection of global properties.</summary>
      <returns>Returns an immutable collection of global properties.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.HostServices">
      <summary>Gets or sets a service that allows the host to provide additional control over the build process.</summary>
      <returns>Returns the host service.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.LegacyThreadingSemantics">
      <summary>Gets or sets a switch that enables or disables legacy threading semantics.</summary>
      <returns>Returns a switch that enables or disables legacy threading semantics; true if enabled, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Loggers">
      <summary>Gets or sets the collection of loggers to use during the build.</summary>
      <returns>Returns the collection of loggers to use during the build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.MaxNodeCount">
      <summary>Gets or sets the maximum number of nodes this build may use.</summary>
      <returns>Returns the maximum number of nodes this build may use.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.MemoryUseLimit">
      <summary>Gets or sets the amount of memory the build should limit itself to using, in megabytes.</summary>
      <returns>Returns the amount of memory the build should limit itself to using, in megabytes.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.NodeExeLocation">
      <summary>Gets or sets the location of the build node executable.</summary>
      <returns>Returns the location of the build node executable.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.OnlyLogCriticalEvents">
      <summary>Gets or sets a flag that determines if non-critical logging events should be discarded.</summary>
      <returns>Returns a flag that determines if non-critical logging events should be discarded.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ResetCaches">
      <summary>Gets or sets a switch that specifies whether the build should reset the configuration and results caches.</summary>
      <returns>Returns a switch that specifies whether the build should reset the configuration and results caches; true if the caches should be reset, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.SaveOperatingEnvironment">
      <summary>Gets or sets a switch specifying if the operating environment, such as the current directory and environment, should be saved and restored between project builds and task invocations.</summary>
      <returns>Returns a switch indicating whether the operating environment should be saved and restored between project builds and task invocations; true if the environment should be saved, false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.ToolsetDefinitionLocations">
      <summary>Gets or sets locations to search for toolsets.</summary>
      <returns>Returns locations to search for toolsets.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.Toolsets">
      <summary>Gets all of the toolsets.</summary>
      <returns>Returns all of the toolsets.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.UICulture">
      <summary>Gets or sets the name of the UI culture to use during the build.</summary>
      <returns>Returns the name of the UI culture to use during the build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildParameters.UseSynchronousLogging">
      <summary>Gets or sets a switch that specifies whether synchronous logging is used when there is only a single process.</summary>
      <returns>Returns a switch that specifies whether synchronous logging is used when there is only a single process; if true, use synchronous logging, otherwise use asynchronous logging.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildRequestData">
      <summary>Encapsulates all of the data needed to submit a build request.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[])">
      <summary>Constructs build request data for build requests based on project instances.</summary>
      <param name="projectInstance">The instance to build.</param>
      <param name="targetsToBuild">The targets to build.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices)">
      <summary>Constructs build request data for build requests based on project instances.</summary>
      <param name="projectInstance">The instance to build.</param>
      <param name="targetsToBuild">The targets to build.</param>
      <param name="hostServices">The host services to use, if any.  May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
      <summary>Constructs a BuildRequestData for build requests based on project instances.</summary>
      <param name="projectInstance">The instance to build.</param>
      <param name="targetsToBuild">The targets to build.</param>
      <param name="hostServices">The host services to use, if any.  May be null.</param>
      <param name="flags">The flags to use for the build.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)">
      <summary>Constructs a BuildRequestData for build requests based on project instances.</summary>
      <param name="projectFullPath">The full path to the project file.</param>
      <param name="globalProperties">The global properties to use during evaluation of the project.</param>
      <param name="toolsVersion">The tools version to use for the build.  May be null.</param>
      <param name="targetsToBuild">The targets to build.</param>
      <param name="hostServices">The host services to use, if any.  May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
      <summary>Constructs a BuildRequestData for build requests based on project instances.</summary>
      <param name="projectFullPath">The full path to the project file.</param>
      <param name="globalProperties">The global properties to use during evaluation of the project.</param>
      <param name="toolsVersion">The tools version to use for the build.  May be null.</param>
      <param name="targetsToBuild">The targets to build.</param>
      <param name="hostServices">The host services to use, if any.  May be null.</param>
      <param name="flags">The flags to use for the build.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ExplicitlySpecifiedToolsVersion">
      <summary>Gets or sets the tools version to use for the build.</summary>
      <returns>Returns the tools version to use for the build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.Flags">
      <summary>Gets or sets additional flags for this build request.</summary>
      <returns>Returns the build request flags.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.GlobalProperties">
      <summary>Gets the global properties to use for this build request.</summary>
      <returns>Returns the global properties to use for this build request.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.HostServices">
      <summary>Gets the host service for this build.</summary>
      <returns>Returns the host service for this build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ProjectFullPath">
      <summary>Gets of sets the path to the project file for this build.</summary>
      <returns>Returns the path to the project file for this build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.ProjectInstance">
      <summary>Gets or sets project instance for this build.</summary>
      <returns>The project instance, which may be null.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildRequestData.TargetNames">
      <summary>Gets the names of the targets to build.</summary>
      <returns>Returns the names of the targets to build.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildRequestDataFlags">
      <summary>Flags providing additional control over the build request. </summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.None">
      <summary>No flags.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildRequestDataFlags.ReplaceExistingProjectInstance">
      <summary>When this flag is present, the existing ProjectInstance in the build will be replaced by this one.</summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildResult">
      <summary>Represents the current result set for all of the targets that have produced results for a particular configuration.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.#ctor">
      <summary>Creates the build result set.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.AddResultsForTarget(System.String,Microsoft.Build.Execution.TargetResult)">
      <summary>Adds the results for the specified target to this build result set.</summary>
      <param name="target">The target whose results are to be added.</param>
      <param name="result">The results for the target.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.CircularDependency">
      <summary>Gets a flag indicating whether a circular dependency was detected.</summary>
      <returns>Returns true if a circular dependency was detected; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ConfigurationId">
      <summary>Gets the configuration ID for this build result set.</summary>
      <returns>Returns the configuration ID for this build result set.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.Exception">
      <summary>Gets the exception generated for this build result set. </summary>
      <returns>Returns the exception generated for this build result set. Returns false if no exception occurred.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.GlobalRequestId">
      <summary>Gets the build request id for this build result set.</summary>
      <returns>Returns the build request id for this build result set.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.HasResultsForTarget(System.String)">
      <summary>Determines if there are any results for the given target.</summary>
      <returns>Returns true if results exist; false otherwise.</returns>
      <param name="target">The target whose results are retrieved.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.Item(System.String)">
      <summary>Gets an indexer which can be used to get the build result for the given target.</summary>
      <returns>The build result for the indexed target.</returns>
      <param name="target">The indexed target.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildResult.MergeResults(Microsoft.Build.Execution.BuildResult)">
      <summary>Merges the given results with this build result set.</summary>
      <param name="results">The results to merge.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.NodeRequestId">
      <summary>Gets the build request ID of the originating node.</summary>
      <returns>Returns the build request ID of the originating node.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.OverallResult">
      <summary>Gets the overall result for this build.</summary>
      <returns>Returns the overall result for this build.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ParentGlobalRequestId">
      <summary>Gets the global build request ID which issued the request leading to this build result set.</summary>
      <returns>Returns the global build request ID which issued the request leading to this build result set.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.ResultsByTarget">
      <summary>Gets an enumerator over all target results in this build result set.</summary>
      <returns>Returns an enumerator over all target results in this build result set.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildResult.SubmissionId">
      <summary>Gets the build submission which this build result set is associated with.</summary>
      <returns>Returns the build submission which this build result set is associated with.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildResultCode">
      <summary>Enumerated data indicating the build result of a target or a  build request.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildResultCode.Success">
      <summary>The target or request was a complete success.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.BuildResultCode.Failure">
      <summary>The target or request failed in some way.</summary>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildSubmission">
      <summary>Represents a build request that has been submitted to the build manager for processing. The methods of this class may be used to execute synchronous or asynchronous build requests and to provide access to the results upon completion.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.AsyncContext">
      <summary>Gets or sets the asynchronous context provided to <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />, if any.</summary>
      <returns>Returns the asynchronous context provided to <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" />. Returns null if no context is provided.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.BuildManager">
      <summary>Gets or sets the build manager this build submission is associated with.</summary>
      <returns>Returns the build manager this build submission is associated with.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.BuildResult">
      <summary>Gets or sets the result of the build. </summary>
      <returns>Returns the result of the build. </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildSubmission.Execute">
      <summary>Starts a build request synchronously and waits until results are available.</summary>
      <returns>Returns the build request.</returns>
      <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
    </member>
    <member name="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)">
      <summary>Starts a build request asynchronously and within the given context. Immediately returns control to the caller.</summary>
      <param name="callback">The callback method to call when the build submission is complete.</param>
      <param name="context">The context in which the build submission occurs.</param>
      <exception cref="T:System.InvalidOperationException">The request has already been started or is already complete.</exception>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.IsCompleted">
      <summary>Determines whether this build submission is complete.</summary>
      <returns>Returns true if this build submission is complete; false otherwise.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.SubmissionId">
      <summary>Gets or sets an ID uniquely identifying this build submission.</summary>
      <returns>Returns an ID uniquely identifying this build submission. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.BuildSubmission.WaitHandle">
      <summary>Gets a <see cref="T:System.Threading.WaitHandle" /> object that will be signalled when the build is complete. </summary>
      <returns>Returns null until <see cref="M:Microsoft.Build.Execution.BuildSubmission.Execute" /> or <see cref="M:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)" /> returns, then returns the WaitHandle object.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.BuildSubmissionCompleteCallback">
      <summary>A callback function that receives notification when a build completes.</summary>
      <param name="submission">The submission that initiates the build.</param>
    </member>
    <member name="T:Microsoft.Build.Execution.HostServices">
      <summary>Implementation of a host service that mediates access from the build to the host.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.#ctor">
      <summary>Creates a host service.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)">
      <summary>Gets the host service for the given task where the task appears within a target and project with the given names. </summary>
      <returns>Returns the host service for the given task where the task appears within a target and project with the given names. If no host service exists, returns null.</returns>
      <param name="projectFile">The name of the project file.</param>
      <param name="targetName">The name of the target.</param>
      <param name="taskName">The task name associated with the host service.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)">
      <summary>Gets the node affinity for the given project file.</summary>
      <returns>Returns the node affinity for the given project file.</returns>
      <param name="projectFile">The project file associated with the node.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)">
      <summary>Updates the host services table when a project is named or renamed. </summary>
      <param name="oldFullPath">The current path to the project file.</param>
      <param name="newFullPath">The new path to the project file.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)">
      <summary>Register a host service for the given task/target pair. </summary>
      <param name="projectFile">The project file containing the task/target pair.</param>
      <param name="targetName">The name of the target.</param>
      <param name="taskName">The name of the task.</param>
      <param name="hostObject">The host service.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.SetNodeAffinity(System.String,Microsoft.Build.Execution.NodeAffinity)">
      <summary>Sets the node affinity for the given project file.</summary>
      <param name="projectFile">The project file. If set to String.Empty, all projects will use the given node affinity. If set to null, all node affinities will be cleared.</param>
      <param name="nodeAffinity">The node affinity.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.HostServices.UnregisterProject(System.String)">
      <summary>Unregister the project's host objects, if any and remove any node affinities associated with it.</summary>
      <param name="projectFullPath">The path to the project to unregister.</param>
    </member>
    <member name="T:Microsoft.Build.Execution.ITargetResult">
      <summary>An interface representing the results for a specific target</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.Exception">
      <summary>Gets the exception generated when the target was built.</summary>
      <returns>Returns the exception generated when the target was built. Return null if no exception occurred.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.Items">
      <summary>Gets the set of build items output by the target. </summary>
      <returns>Returns the set of build items output by the target. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ITargetResult.ResultCode">
      <summary>Gets the result code returned when the target was built.</summary>
      <returns>Returns the result code returned when the target was built.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.NodeAffinity">
      <summary>An enumerated data type that determines where projects are built.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.InProc">
      <summary>The project may only be scheduled on the in-proc node. This happens automatically if there is a host object or if a ProjectInstance was specified. A host may wish to specify it if they know a task depends explicitly on shared static data or other host-provided objects.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.OutOfProc">
      <summary>The project may only be scheduled on an out-of-proc node. A host may wish to specify this if it is known the project being built could contaminate the host environment (or the host contaminates the environment while a build is proceeding.)</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeAffinity.Any">
      <summary>The project may be scheduled anywhere.</summary>
    </member>
    <member name="T:Microsoft.Build.Execution.NodeEngineShutdownReason">
      <summary>Reasons for a node to shutdown.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.BuildComplete">
      <summary>The BuildManager sent a command instructing the node to terminate.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.BuildCompleteReuse">
      <summary>The BuildManager sent a command instructing the node to terminate, but to restart for reuse.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.ConnectionFailed">
      <summary>The communication link failed.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.NodeEngineShutdownReason.Error">
      <summary>The NodeEngine caught an exception which requires the Node to shut down.</summary>
    </member>
    <member name="T:Microsoft.Build.Execution.OutOfProcNode">
      <summary>This class represents an implementation of an out-of-proc build node.  This class is deprecated and has no alternative.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.OutOfProcNode.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.OutOfProcNode.Run(System.Exception@)">
      <summary>Starts up the node and processes messages until the node is requested to shut down.</summary>
      <returns>The reason for shutting down.</returns>
      <param name="shutdownException">The exception which caused shutdown, if any.</param>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectInstance">
      <summary>Represents a project instance. </summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
      <summary>Creates a new project instance and initializes it from the given project root, using the default project collection. </summary>
      <param name="xml">The project root element.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates a new project instance and initializes it from the given project root, using the given global properties, tools version, and project collection. </summary>
      <param name="xml">The project root element</param>
      <param name="globalProperties">The global properties to use. May be null.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
      <param name="projectCollection">Project collection</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)">
      <summary>Creates a new project instance and initializes it from the given project file, using the default project collection. </summary>
      <param name="projectFile">The name of the project file.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and the default project collection. </summary>
      <param name="projectFile">The name of the project file.</param>
      <param name="globalProperties">The global properties to use.</param>
      <param name="toolsVersion">The tools version.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
      <summary>Creates a new project instance and initializes it from the given project file, using the given global properties, tools version, and project collection. </summary>
      <param name="projectFile">The name of the project file.</param>
      <param name="globalProperties">The global properties to use. May be null.</param>
      <param name="toolsVersion">The tools version. May be null.</param>
      <param name="projectCollection">Project collection</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)">
      <summary>Adds an item with no metadata to the project.</summary>
      <returns>Returns the new item.</returns>
      <param name="itemType">The item type of the item to be added.</param>
      <param name="evaluatedInclude">The evaluated Include attribute of the item.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds an item with the given metadata to the project.</summary>
      <returns>Return the new item.</returns>
      <param name="itemType">The item type of the item to be added.</param>
      <param name="evaluatedInclude">The evaluated Include attribute of the item.</param>
      <param name="metadata">The metadata of the item.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build">
      <summary>Builds the default targets of the project with loggers of the project collection. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds the default targets of the project with the given loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="loggers">The loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds the default targets of the project with the given loggers and remote loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="loggers">The loggers to use for the build. May be null.</param>
      <param name="remoteLoggers">The remote loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds the given target of the project with the given loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="target">The target to build. May be null.</param>
      <param name="loggers">The loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds the given target of the project with the given loggers and remote loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="target">The target to build. May be null.</param>
      <param name="loggers">The loggers to use for the build. May be null.</param>
      <param name="remoteLoggers">The remote loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})">
      <summary>Builds the given targets of the project with the given loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="targets">The targets to build. May be null.</param>
      <param name="loggers">The loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)">
      <summary>Build a list of targets with specified loggers. Targets may be null. Loggers may be null.</summary>
      <returns>Returns true on success, false on failure.</returns>
      <param name="targets">List of targets to build. May be null.</param>
      <param name="loggers">Enumerated list of loggers to use for building targets.</param>
      <param name="targetOutputs">Outputs of target builds.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
      <summary>Builds the given targets of the project with the given loggers and remote loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="targets">The targets to build. May be null.</param>
      <param name="loggers">The loggers to use for the build. May be null.</param>
      <param name="remoteLoggers">The remote loggers to use for the build. May be null.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)">
      <summary>Builds the given targets with the given target outputs and with the given loggers and remote loggers. </summary>
      <returns>Returns true if the build succeeds; false otherwise.</returns>
      <param name="targets">The targets to build. May be null.</param>
      <param name="loggers">The loggers to use for the build. May be null.</param>
      <param name="remoteLoggers">The remote loggers to use for the build. May be null.</param>
      <param name="targetOutputs">The target outputs.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy">
      <summary>Creates an independent, deep clone of this project and everything in it. Useful for compiling a single file or for keeping build results between builds.</summary>
      <returns>Creates an independent, deep clone of this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.DefaultTargets">
      <summary>Gets or sets the list of default targets for this project. </summary>
      <returns>Returns the list of default targets for this project. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Directory">
      <summary>Gets the project root directory. Used for evaluation of relative paths and setting the current directory during build. Is never null: projects not loaded from disk use the current directory from the time the build started.</summary>
      <returns>Returns the project root directory, which is never null. Projects not loaded from disk return the current directory at the time the build was started.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)">
      <summary>Evaluates the provided string as a condition by expanding items and properties, using the current items and properties available, then doing a logical evaluation.</summary>
      <returns>Returns true if the string evaluates to true; false otherwise.</returns>
      <param name="condition">The string to be expanded.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)">
      <summary>Evaluates the provided string by expanding items and properties, using the current items and properties available.</summary>
      <returns>Returns the expanded string value.</returns>
      <param name="unexpandedValue">The string to be expanded.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.FullPath">
      <summary>Gets the full path to the project file. Used for logging. </summary>
      <returns>Returns the full path to the project file. Returns null if the project was never named.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)">
      <summary>Gets the evaluated, escaped value of the Include attribute of the provided item definition.</summary>
      <returns>Returns the evaluated, escaped value of the Include attribute of the provided item definition.</returns>
      <param name="item">The item definition to be evaluated and escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)">
      <summary>Gets the evaluated, escaped value of the Include attribute of the provided item.</summary>
      <returns>Returns the evaluated, escaped value of the Include attribute of the provided item.</returns>
      <param name="item">The item to be evaluated and escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)">
      <summary>Gets all the items in this project of the specified type. This is a read-only list.</summary>
      <returns>Returns all the items in this project of the specified type. Returns an empty list if there are none.</returns>
      <param name="itemType">The item type of the items to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)">
      <summary>Gets the escaped value of the metadatum with the provided name of the provided item definition.</summary>
      <returns>Returns the escaped value of the metadatum with the provided name of the provided item definition.</returns>
      <param name="item">The item definition to provide the metadatum value.</param>
      <param name="name">The name of the metadatum.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)">
      <summary>Gets the escaped value of the metadatum with the provided name on the provided item.</summary>
      <returns>Returns the escaped value of the metadatum with the provided name on the provided item.</returns>
      <param name="item">The item to provide the metadatum value.</param>
      <param name="name">The name of the metadatum.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)">
      <summary>Gets the escaped value of the provided metadatum.</summary>
      <returns>Returns the escaped value of the provided metadatum.</returns>
      <param name="metadatum">The metadatum to be escaped.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)">
      <summary>Get the property with the given name.</summary>
      <returns>Returns the property with the given name. Returns null if no property exists with that name.</returns>
      <param name="name">The name of the property to retrieve.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)">
      <summary>Get the value of the property with the given name.</summary>
      <returns>Returns the value of the property with the given name. Returns an empty string if no property exists with that name. The value returned has no escaped character sequences.</returns>
      <param name="name">The name of the property whose value is to be retrieved.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)">
      <summary>Get the escaped value of the provided property.</summary>
      <returns>Returns the escaped value of the provided property.</returns>
      <param name="property">The property to be escaped.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.GlobalProperties">
      <summary>Gets the dictionary of global properties this project was evaluated with, if any.</summary>
      <returns>Returns the dictionary of global properties this project was evaluated with.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.InitialTargets">
      <summary>Gets the list of initial targets for the project and all its imports, depth-first. These targets are built before any other targets.</summary>
      <returns>Returns the list of initial targets for the project and all its imports, depth-first. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ItemDefinitions">
      <summary>Gets a read-only dictionary of the item definitions in the project, keyed by item type.</summary>
      <returns>Returns a read-only dictionary of the item definitions in the project, keyed by item type.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Items">
      <summary>Gets all items in this project.</summary>
      <returns>Returns all items in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ItemTypes">
      <summary>Gets all item types in this project.</summary>
      <returns>Returns all item types in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Properties">
      <summary>Gets all properties in this project.</summary>
      <returns>Returns all properties in this project.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)">
      <summary>Removes an item from the project, if present. Returns true if it was present, false otherwise.</summary>
      <returns>Returns true if the item was present before removal; false otherwise.</returns>
      <param name="item">The item to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)">
      <summary>Removes a property with the given name. Returns true if the property had a value (possibly empty string), otherwise false.</summary>
      <returns>Returns true if the property had a value (possibly an empty string) before removal; false otherwise.</returns>
      <param name="name">The name of the property to be removed.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)">
      <summary>Add a property with the specified name and value to the project. Overwrites any property with the same name already in the property collection.</summary>
      <returns>Returns the new property.</returns>
      <param name="name">The name of the property to add.</param>
      <param name="evaluatedValue">The evaluated value of the property to add.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.Targets">
      <summary>Gets an enumerator over all targets in this project. This collection is read-only.</summary>
      <returns>Returns an enumerator over all targets in this project.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectInstance.ToolsVersion">
      <summary>Gets the tools version this project was evaluated with, if any.</summary>
      <returns>Returns the tools version this project was evaluated with, if any.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement">
      <summary>Creates a ProjectRootElement from the contents of this ProjectInstance.</summary>
      <returns>Returns a ProjectRootElement which represents this instance.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemDefinitionInstance">
      <summary>Represents an evaluated item definition for a particular item type, divested of all references to project source code.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.GetMetadata(System.String)">
      <summary>Get any metadata in this item definition with the given name.</summary>
      <returns>Returns any metadata in this item definition with the given name. Returns null if no metadata exists with this name.</returns>
      <param name="name">The name of the metadata to retrieve.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.ItemType">
      <summary>Gets the item type of this item definition.</summary>
      <returns>Returns the item type of this item definition.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Metadata">
      <summary>Gets all the metadata for this item definition. This is a read-only collection.</summary>
      <returns>Returns all the metadata for this item definition. If there is no metadata, returns empty collection.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataCount">
      <summary>Gets the number of pieces of metadata on this item definition.</summary>
      <returns>Returns the number of pieces of metadata on this item definition.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemDefinitionInstance.MetadataNames">
      <summary>Gets an enumerator over the metadata names for this item definition. This is a read-only collection.</summary>
      <returns>Returns an enumerator over the metadata names for this item definition.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskInstance">
      <summary>Wraps an unevaluated itemgroup under a target. Immutable.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Condition">
      <summary>Gets or sets the Condition attribute of this project element.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.Items">
      <summary>Gets all child items of this item definition.</summary>
      <returns>Returns all child items of this item definition.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance">
      <summary>Wraps an unevaluated item under an itemgroup in a target. Immutable.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Condition">
      <summary>Gets the unevaluated Condition attribute value.</summary>
      <returns>Returns the unevaluated Condition attribute value.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Exclude">
      <summary>Gets the unevaluated Exclude attribute value.</summary>
      <returns>Returns the unevaluated Exclude attribute value.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Include">
      <summary>Gets the unevaluated Include attribute value.</summary>
      <returns>Returns the unevaluated Include attribute value.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.ItemType">
      <summary>Get the item type, for example "Compile".</summary>
      <returns>Returns the item type, for example "Compile".</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Metadata">
      <summary>Gets an ordered collection of unevaluated metadata on the item. </summary>
      <returns>Returns an ordered collection of unevaluated metadata on the item. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.Remove">
      <summary>Gets the unevaluated Remove attribute value.</summary>
      <returns>Returns the unevaluated Remove attribute value.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance">
      <summary>Wraps an unevaluated metadata under an item in an item group in a target. Immutable.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Condition">
      <summary>Gets the unevaluated Condition attribute value.</summary>
      <returns>Returns the unevaluated Condition attribute value.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Name">
      <summary>Gets the name of this metadata.</summary>
      <returns>Returns the name of this metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.Value">
      <summary>Gets the unevaluated value of this metadata.</summary>
      <returns>Returns the unevaluated value of this metadata.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectItemInstance">
      <summary>Wraps an evaluated item for build purposes.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.DirectMetadataCount">
      <summary>Gets the number of pieces of metadata on this item.</summary>
      <returns>Returns the number of pieces of metadata on this item.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.EvaluatedInclude">
      <summary>Gets the evaluated Include attribute value. </summary>
      <returns>Returns the evaluated Include attribute value, which may be empty string.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)">
      <summary>Get the metadata with the given name, including metadata inherited from item definitions. </summary>
      <returns>Returns the metadata with the given name. Returns null if no metadata exists with that name. </returns>
      <param name="name">The name of the metadata.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)">
      <summary>Gets the value of the metadata with the given name, including metadata inherited from item definitions. </summary>
      <returns>Gets the value of the metadata with the given name, including metadata inherited from item definitions. Returns an empty string if no metadata exists with that name.</returns>
      <param name="name">The name of the metadata.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)">
      <summary>Determines whether the metadata with the given name is defined on this item (even if its value is empty string). </summary>
      <returns>Returns true if the metadata with the given name is defined on this item (even if its value is empty string); false otherwise.</returns>
      <param name="name">The name of the metadata.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.ItemType">
      <summary>Gets the item type, for example "Compile".</summary>
      <returns>Returns the item type, for example "Compile".</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Metadata">
      <summary>Gets an enumerator over the evaluated metadata of the item. This is a read-only collection. </summary>
      <returns>Returns an enumerator over the evaluated metadata of the item. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataCount">
      <summary>Gets the number of metadata entries, including metadata inherited from item definitions. </summary>
      <returns>Returns the number of metadata entries, including metadata inherited from item definitions</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataNames">
      <summary>Gets all metadata names of this item, including metadata inherited from item definitions. </summary>
      <returns>Returns all metadata names of this item, including metadata inherited from item definitions. </returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata">
      <summary>ITaskItem implementation. Gets the collection of custom metadata.</summary>
      <returns>The collection of custom metadata.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
      <summary>ITaskItem implementation. Copies the custom metadata entries to another item.</summary>
      <param name="destinationItem">The item to copy the metadata entries to.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)">
      <summary>ITaskItem implementation. Gets the value of the specified metadata entry.</summary>
      <returns>The value of the <paramref name="attributeName" /> metadata.</returns>
      <param name="metadataName">The name of the metadata entry.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#ItemSpec">
      <summary>ITaskItem implementation. Gets or sets the item specification.</summary>
      <returns>The item specification.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames">
      <summary>ITaskItem implementation. Gets the names of the metadata entries associated with the item.</summary>
      <returns>The names of the metadata entries associated with the item.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)">
      <summary>ITaskItem implementation. Adds or changes a custom metadata entry to the item.</summary>
      <param name="metadataName">Metadata name to be added or changed.</param>
      <param name="metadataValue">Metadata value to be added or changed.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
      <summary>ITaskItem2 implementation. Returns a clone of the metadata on this object.  Values returned are in their original escaped form.</summary>
      <returns>Returns the cloned metadata, with values' escaping preserved.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#EvaluatedIncludeEscaped">
      <summary>ITaskItem2 implementation. Evaluated include value, escaped as necessary. May be empty string. Gets or sets the item include value e.g. for disk-based items this would be the file path.</summary>
      <returns>Returns the item include value.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
      <summary>ITaskItem2 implementation. Allows the values of metadata on the item to be queried.</summary>
      <returns>Returns the escaped metadata value.</returns>
      <param name="name">The metadata to be queried.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
      <summary>ITaskItem2 implementation. Allows a piece of custom metadata to be set on the item. Assumes that the value passed in is unescaped, and escapes the value as necessary in order to maintain its value.</summary>
      <param name="metadataName">The metadata name.</param>
      <param name="metadataValue">The metadata value.</param>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Project">
      <summary>Gets the owning project.</summary>
      <returns>Returns the owning project.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)">
      <summary>Removes metadata with the given name. </summary>
      <param name="metadataName">The metadata name.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <summary>Adds metadata with the given names and values. Overwrites any metadata with the same name already in the collection.</summary>
      <param name="metadataDictionary">The metadata to add.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)">
      <summary>Add metadata with the given name and value. Overwrites any metadata with the same name already in the collection.</summary>
      <returns>Returns the new metadata.</returns>
      <param name="name">The name of the metadata to add.</param>
      <param name="evaluatedValue">The evaluated value of the metadata to add.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectItemInstance.ToString">
      <summary>Gets a String that represents the current item.</summary>
      <returns>Returns a String that represents the current item.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectMetadataInstance">
      <summary>Wraps an evaluated metadata for build purposes.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.DeepClone">
      <summary>Copies the metadata to create a deep clone.</summary>
      <returns>Returns the new metadata.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectMetadataInstance.EvaluatedValue">
      <summary>Gets or sets the evaluated value of the metadata. </summary>
      <returns>Returns the evaluated value of the metadata, which is never null.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectMetadataInstance.Name">
      <summary>Gets the name of the metadata.</summary>
      <returns>Returns the name of the metadata.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.System#IEquatable{T}#Equals(Microsoft.Build.Execution.ProjectMetadataInstance)">
      <summary>Compares this project metadata with the given project metadata for equality.</summary>
      <returns>Returns true if the project metadata are equal; false otherwise.</returns>
      <param name="other">The project metadata to be compared to.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.ToString">
      <summary>Gets a string representation of this metadata.</summary>
      <returns>Returns a string representation of this metadata.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectOnErrorInstance">
      <summary>Wraps an OnError Element (MSBuild).</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.Condition">
      <summary>Gets the unevaluated Condition attribute value of this OnError element.</summary>
      <returns>Returns the unevaluated Condition attribute value. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectOnErrorInstance.ExecuteTargets">
      <summary>Gets the unevaluated ExecuteTargets attribute value of this OnError element. </summary>
      <returns>Returns the unevaluated ExecuteTargets attribute value, which may be an empty string.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance">
      <summary>Wraps an unevaluated propertygroup under a target. Immutable.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Condition">
      <summary>Gets or sets the Condition attribute of this property group.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.Properties">
      <summary>Gets all child properties in this property group.</summary>
      <returns>Returns all child properties in this property group.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance">
      <summary>Wraps an unevaluated property of a property group in a target. Immutable.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Condition">
      <summary>Gets or sets the unevaluated Condition attribute of this property.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Name">
      <summary>Gets the name of this property.</summary>
      <returns>Returns the name of this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.Value">
      <summary>Gets the unevaluated value of this property.</summary>
      <returns>Returns the unevaluated value of this property.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectPropertyInstance">
      <summary>Wraps an evaluated property for build purposes. Instances of these properties are added and removed via methods on the ProjectInstance object.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue">
      <summary>Gets or sets the evaluated value of this property. </summary>
      <returns>Returns the evaluated value of this property.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.Name">
      <summary>Gets the name of this property.</summary>
      <returns>Returns the name of this property.</returns>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{T}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)">
      <summary>Compares this project property with the given project property for equality.</summary>
      <returns>Returns true if the project property are equal; false otherwise.</returns>
      <param name="other">The project property to be compared to.</param>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.ToString">
      <summary>Gets a string representation for this property.</summary>
      <returns>Returns a string representation for this property.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTargetInstance">
      <summary>Wraps a Target Element (MSBuild).</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Children">
      <summary>Gets a list of the children of this target. The build iterates through this to get each task to execute. </summary>
      <returns>Returns a list of the children of this target.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Condition">
      <summary>Gets the unevaluated Condition attribute of this target element.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.DependsOnTargets">
      <summary>Gets an unevaluated semicolon-delimited list of targets that this target depends on. </summary>
      <returns>Returns an unevaluated semicolon-delimited list of targets that this target depends on. Returns an empty string if this target depends on no other targets.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.FullPath">
      <summary>Gets the full path to the file from which this target originated. </summary>
      <returns>Returns the full path to the file from which this target originated. Returns an empty string if this target originated in a project that was not loaded and has never been given a path.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Inputs">
      <summary>Gets the unevaluated inputs on this target element. </summary>
      <returns>Returns the unevaluated inputs on this target element. Returns an empty string if this target has no inputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.KeepDuplicateOutputs">
      <summary>Gets an unevaluated condition which is used to delete duplicate outputs from this target.</summary>
      <returns>Returns an unevaluated condition which is used to delete duplicate outputs from this target. Returns an empty string if there is no condition.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Name">
      <summary>Gets the name of the target.</summary>
      <returns>Returns the name of the target.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.OnErrorChildren">
      <summary>Gets a list of the children of this target that refer to OnError targets. </summary>
      <returns>Gets a list of the children of this target that refer to OnError targets. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Outputs">
      <summary>Gets the unevaluated outputs on this target element May be empty string.</summary>
      <returns>Returns the unevaluated outputs on this target element Returns an empty string if there are no outputs.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Returns">
      <summary>Gets the unevaluated return values on the target element as a string.</summary>
      <returns>Returns the unevaluated return values on the target element as a string. Returns an empty string or null, if no return value is specified.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstance.Tasks">
      <summary>Gets all the tasks that are immediate children of this target.</summary>
      <returns>Returns all the tasks that are immediate children of this target.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTargetInstanceChild">
      <summary>Abstracts the <see cref="T:Microsoft.Build.Execution.ProjectTaskInstance" />, <see cref="T:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance" /> and <see cref="T:Microsoft.Build.Execution.ProjectItemGroupTaskInstance" /> classes. This allows these types to be used in a single collection of target children</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectTargetInstanceChild.#ctor">
      <summary>Abstract classes cannot be instantiated.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.Condition">
      <summary>Gets or sets the Condition attribute of this target.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTargetInstanceChild.FullPath">
      <summary>Gets the full path to the file from which this task originated. </summary>
      <returns>Returns the full path to the file from which this task originated. Returns an empty string if the task originated in a project that was not loaded and has never been given a path.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskInstance">
      <summary>Wraps a Task Element (MSBuild).</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Condition">
      <summary>Gets the unevaluated Condition attribute of this task.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.ContinueOnError">
      <summary>Gets the unevaluated ContinueOnError attribute of the task. </summary>
      <returns>Returns the unevaluated ContinueOnError attribute of the task. Returns an empty string if the attribute is not present.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Name">
      <summary>Gets the name of the task, possibly qualified, as it appears in the project.</summary>
      <returns>Returns the name of the task, possibly qualified, as it appears in the project.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Outputs">
      <summary>Gets an ordered set of the output property and item objects of this task. </summary>
      <returns>Returns an ordered set of the output property and item objects of the task. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Parameters">
      <summary>Gets an unordered set of the task parameter names and unevaluated values of this task. </summary>
      <returns>Returns an unordered set of the task parameter names and unevaluated values of this task. </returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskInstanceChild">
      <summary>Abstracts the base class for the TaskOutputItem and TaskOutputProperty classes. This allows them to be used in a single collection.</summary>
    </member>
    <member name="M:Microsoft.Build.Execution.ProjectTaskInstanceChild.#ctor">
      <summary>Abstract classes cannot be instantiated.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskInstanceChild.Condition">
      <summary>Gets the Condition attribute of this task.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskOutputItemInstance">
      <summary>Wraps an output item element of a Task Element (MSBuild).</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.Condition">
      <summary>Gets the Condition attribute of this project element.</summary>
      <returns>Returns the Condition attribute value. Returns an empty string if the attribute is not present. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.ItemType">
      <summary>Gets the item type that the outputs go into.</summary>
      <returns>Returns the item type that the outputs go into.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.TaskParameter">
      <summary>Gets the property of this class to retrieve the outputs from.</summary>
      <returns>Returns the property of this class to retrieve the outputs from.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance">
      <summary>Represents an output property element of a Task Element (MSBuild).</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.Condition">
      <summary>Gets the Condition attribute of the output element.</summary>
      <returns>Returns the Condition attribute of the output element.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.PropertyName">
      <summary>Gets the name of the property that receives the output.</summary>
      <returns>Returns the name of the property that receives the output.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.TaskParameter">
      <summary>Gets the property of the task class to retrieve the output from.</summary>
      <returns>Returns the property of the task class to retrieve the output from.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.TargetResult">
      <summary>Represents both the result code for building a single target and the overall build result.</summary>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.Exception">
      <summary>Gets the exception which aborted this target, if any.</summary>
      <returns>Returns the exception which aborted this target, if any.</returns>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.Items">
      <summary>Gets the items produced by this target. </summary>
      <returns>Returns the items produced by this target. </returns>
    </member>
    <member name="P:Microsoft.Build.Execution.TargetResult.ResultCode">
      <summary>Gets the result code for building this target.</summary>
      <returns>Returns the result code for building this target.</returns>
    </member>
    <member name="T:Microsoft.Build.Execution.TargetResultCode">
      <summary>The result code for a given target.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Skipped">
      <summary>The target was skipped because its condition was not met.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Success">
      <summary>The target successfully built.</summary>
    </member>
    <member name="F:Microsoft.Build.Execution.TargetResultCode.Failure">
      <summary>The target failed to build.</summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ColorResetter">
      <summary>Type of delegate used to reset console color.</summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ColorSetter">
      <summary>Type of delegate used to set console color.</summary>
      <param name="color">Text color.</param>
    </member>
    <member name="T:Microsoft.Build.Logging.ConfigurableForwardingLogger">
      <summary>Represents a logger that forwards events to a central logger (e.g ConsoleLogger) residing on the parent node.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.#ctor">
      <summary>Constructs a logger.</summary>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.BuildEventRedirector">
      <summary>Gets or sets a property that determines how a node logger to forwards messages to the central logger.</summary>
      <returns>Returns a property that determines how a node logger to forwards messages to the central logger.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.ForwardToCentralLogger(Microsoft.Build.Framework.BuildEventArgs)">
      <summary>Forward this event to the central logger.</summary>
      <param name="e">The event to be forwarded.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Signs up the console logger to log the given build events.</summary>
      <param name="eventSource">The event source for build events.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Signs up the console logger for all build events.</summary>
      <param name="eventSource">The event source for build events.</param>
      <param name="nodeCount">The node count.  Not used.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.NodeId">
      <summary>Gets or sets the ID of the node.</summary>
      <returns>Returns the ID of the node.</returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.Parameters">
      <summary>Gets or sets a switch that determines whether to suppress the output of the errors and warnings summary at the end of a build.</summary>
      <returns>Returns a switch that determines whether to suppress the output of the errors and warnings summary at the end of a build.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Shutdown">
      <summary>Called when the build engine is finished with this logger.</summary>
    </member>
    <member name="P:Microsoft.Build.Logging.ConfigurableForwardingLogger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>Returns the level of detail to show in the event log.</returns>
    </member>
    <member name="T:Microsoft.Build.Logging.ConsoleLogger">
      <summary>Represents the default logger that outputs event data to the console (stdout).</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor">
      <summary>Creates a default logger.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Creates a logger instance with the given verbosity that logs to the default console.</summary>
      <param name="verbosity">The verbosity level.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.#ctor(Microsoft.Build.Framework.LoggerVerbosity,Microsoft.Build.Logging.WriteHandler,Microsoft.Build.Logging.ColorSetter,Microsoft.Build.Logging.ColorResetter)">
      <summary>Initializes the logger with alternate output handlers.</summary>
      <param name="verbosity">The verbosity level.</param>
      <param name="write">The write handler.</param>
      <param name="colorSet">Sets the text color.</param>
      <param name="colorReset">Resets the text color.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(System.String,System.String)">
      <summary>Applies a parameter to the logger. </summary>
      <param name="parameterName">The name of the parameter.</param>
      <param name="parameterValue">The value of the parameter.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
      <summary>Called when the build is finished.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
      <summary>Called when the build is started.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
      <summary>Called to log a custom event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
      <summary>Called to log an error event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Signs up the console logger for the given build event.</summary>
      <param name="eventSource">The available events.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Initializes the logger with the given event source and node count.</summary>
      <param name="eventSource">The event source.</param>
      <param name="nodeCount">The node count.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
      <summary>Called to log a message event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.Parameters">
      <summary>Gets or sets a semicolon-delimited list of parameter key-value pairs.</summary>
      <returns>Returns a semicolon-delimited list of parameter key-value pairs.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
      <summary>Called to log a project finished event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
      <summary>Called to log a project started event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.ShowSummary">
      <summary>Gets or sets a switch that determines whether to suppress the display of errors and the warnings summary.</summary>
      <returns>Returns a switch that determines whether to suppress the display of errors and the warnings summary.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.Shutdown">
      <summary>Called when the build is finished.</summary>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.SkipProjectStartedText">
      <summary>Gets or sets a switch that determines whether to suppress the display of project headers. </summary>
      <returns>Returns a switch that determines whether to suppress the display of project headers. </returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
      <summary>Called to log a target finished event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
      <summary>Called to log a target started event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
      <summary>Called to log a task finished event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
      <summary>Called to log a task started event.</summary>
      <param name="sender">The sender (should be null).</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>Returns the level of detail to show in the event log.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
      <summary>Called to log a warning event.</summary>
      <param name="sender">The sender of the event.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ConsoleLogger.WriteHandler">
      <summary>Provides access to the write handler delegate so that it can be redirected if necessary (e.g. to a file).</summary>
      <returns>Returns the write handler delegate.</returns>
    </member>
    <member name="T:Microsoft.Build.Logging.DistributedFileLogger">
      <summary>This class creates a text file which will contain the build log for a node.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.#ctor">
      <summary>Creates a file logger.</summary>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.BuildEventRedirector">
      <summary>Gets or sets a property that determines how a node logger to forwards messages to the central logger.</summary>
      <returns>Returns a property that determines how a node logger to forwards messages to the central logger.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Initializes the logger with the given event source.</summary>
      <param name="eventSource">The event source.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Initializes the logger with the given event source and node count.</summary>
      <param name="eventSource">The event source.</param>
      <param name="nodeCount">The node count.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.NodeId">
      <summary>Gets or sets the ID of the node.</summary>
      <returns>Returns the ID of the node.</returns>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.Parameters">
      <summary>Gets or sets a switch that determines whether to suppress the output of the errors and warnings summary at the end of a build.</summary>
      <returns>Returns a switch that determines whether to suppress the output of the errors and warnings summary at the end of a build.</returns>
    </member>
    <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Shutdown">
      <summary>Called when the build engine is finished with this logger.</summary>
    </member>
    <member name="P:Microsoft.Build.Logging.DistributedFileLogger.Verbosity">
      <summary>Gets or sets the level of detail to show in the event log.</summary>
      <returns>Returns the level of detail to show in the event log.</returns>
    </member>
    <member name="T:Microsoft.Build.Logging.FileLogger">
      <summary>A specialization of the ConsoleLogger that logs to a file instead of the console. </summary>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.#ctor">
      <summary>Creates a file logger.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
      <summary>Signs up the console file logger for the given build events. </summary>
      <param name="eventSource">The available events.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
      <summary>Initializes a file logger in a multiprocessor environment.</summary>
      <param name="eventSource">The event source.</param>
      <param name="nodeCount">The node count.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.FileLogger.Shutdown">
      <summary>Called when the build is finished.</summary>
    </member>
    <member name="T:Microsoft.Build.Logging.ForwardingLoggerRecord">
      <summary>Represents a central/forwarding logger pair used in multiprocessor logging.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.ForwardingLoggerRecord.#ctor(Microsoft.Build.Framework.ILogger,Microsoft.Build.Logging.LoggerDescription)">
      <summary>Creates a forwarding logger.</summary>
      <param name="centralLogger">The central logger.</param>
      <param name="forwardingLoggerDescription">The description for the forwarding logger.</param>
    </member>
    <member name="P:Microsoft.Build.Logging.ForwardingLoggerRecord.CentralLogger">
      <summary>Gets the central logger.</summary>
      <returns>Returns the central logger.</returns>
    </member>
    <member name="P:Microsoft.Build.Logging.ForwardingLoggerRecord.ForwardingLoggerDescription">
      <summary>Gets the forwarding logger description.</summary>
      <returns>Returns the forwarding logger description.</returns>
    </member>
    <member name="T:Microsoft.Build.Logging.LoggerDescription">
      <summary>Contains information about a logger as a collection of values that can be used to instantiate the logger and can be serialized to be passed between different processes.</summary>
    </member>
    <member name="M:Microsoft.Build.Logging.LoggerDescription.#ctor(System.String,System.String,System.String,System.String,Microsoft.Build.Framework.LoggerVerbosity)">
      <summary>Creates a logger description from the given data.</summary>
      <param name="loggerClassName">The class name of the logger.</param>
      <param name="loggerAssemblyName">The assembly name that implements the logger.</param>
      <param name="loggerAssemblyFile">The assembly file that implements the logger.</param>
      <param name="loggerSwitchParameters">Switch parameters for the logger.</param>
      <param name="verbosity">The verbosity level.</param>
    </member>
    <member name="M:Microsoft.Build.Logging.LoggerDescription.CreateLogger">
      <summary>Creates an ILogger instance from the data in this description. </summary>
      <returns>Returns an ILogger instance from the data in this description. </returns>
    </member>
    <member name="P:Microsoft.Build.Logging.LoggerDescription.LoggerSwitchParameters">
      <summary>Gets the string of logger parameters.</summary>
      <returns>Returns the string of logger parameters.  Returns null if there are no parameters.</returns>
    </member>
    <member name="P:Microsoft.Build.Logging.LoggerDescription.Verbosity">
      <summary>Returns the verbosity level for this logger. </summary>
    </member>
    <member name="T:Microsoft.Build.Logging.WriteHandler">
      <summary>Delegate used for writing a string to some location like the console window or the IDE build window.</summary>
      <param name="message">The message to write.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.VisualC.STLCLR.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualC.STLCLR</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualC.StlClr.BinaryDelegate`3">
      <summary>Describes a two-argument delegate. You use it to specify the arguments and return type of the delegate.</summary>
      <returns>The return type of the delegate.</returns>
      <param name="param0">The first argument.</param>
      <param name="param1">The second argument.</param>
      <typeparam name="TArg1">The first delegate argument.</typeparam>
      <typeparam name="TArg2">The second delegate argument.</typeparam>
      <typeparam name="TResult">The return type of the delegate.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.
   </typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
      <param name="_Cont">The container to iterate over.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IDeque`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.GenericPair`2">
      <summary>Describes an object that wraps a pair of values.</summary>
      <typeparam name="TValue1">Type of the first value in the pair.</typeparam>
      <typeparam name="TValue2">Type of the second value in the pair.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object with default values for <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" /> and <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to be copied into the new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object from an existing <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object.</summary>
      <param name="_Right">The <see cref="T:System.Collections.Generic.KeyValuePair`2" /> object to be copied into the new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object and assigns its first value to the specified value.</summary>
      <param name="_Val1">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />. The <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" /> value is assigned the default value for its type.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)">
      <summary>Constructs a new <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object with the two values specified.</summary>
      <param name="_Val1">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />.</param>
      <param name="_Val2">The value to store in <see cref="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)">
      <summary>Determines if two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects are equal.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects are equal; otherwise, false.</returns>
      <param name="_Right_arg">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</param>
    </member>
    <member name="F:Microsoft.VisualC.StlClr.GenericPair`2.first">
      <summary>The first wrapped value of the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Replaces the stored pair of values in the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
      <returns>This method returns *this.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to copy.</param>
    </member>
    <member name="F:Microsoft.VisualC.StlClr.GenericPair`2.second">
      <summary>The second wrapped value of the <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Swaps the contents of two <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> objects.</summary>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.GenericPair`2" /> object to swap contents with.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IHash`2" /> interface.</summary>
      <typeparam name="TKey">The type of the hash iterator key. </typeparam>
      <typeparam name="TValue">The type of the hash iterator value.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.HashEnumerator`2" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IHash`2" /> interface.</summary>
      <typeparam name="TKey">The type of the hash iterator key.</typeparam>
      <typeparam name="TValue">The type of the hash iterator value.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IDeque`1">
      <summary>Defines the interface of an STL/CLR deque object.</summary>
      <typeparam name="TValue">The type that is contained.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces all elements of the container with the elements specified by the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> objects.</summary>
      <param name="_First">The starting position of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the end of the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces all elements of the container with the elements in the given <see cref="T:System.Collections.IEnumerable" /> object.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)">
      <summary>Replaces all elements of the container with the given number of specified elements.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element of the controlled sequence at position <paramref name="pos" />.</returns>
      <param name="_Pos">Position of element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.back_item">
      <summary>Accesses the last element of a non-empty deque collection.</summary>
      <returns>The last element of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias">
      <summary>Gets the bias of the beginning of the current sequence. The bias is the offset of the current element zero.</summary>
      <returns>The bias of the beginning of the current sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.clear">
      <summary>Removes all elements in the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.empty">
      <summary>Tests whether the container holds no elements.</summary>
      <returns>true if the container is empty; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points to the location immediately beyond the end of the controlled sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias">
      <summary>Gets the bias of the end of the current sequence. The bias is the offset of the current element zero.</summary>
      <returns>The bias of the end of the current sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the element at the specified position.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning position of the range to erase.</param>
      <param name="_Last_iter">The position one beyond the last element of the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.front_item">
      <summary>Accesses the first element of a non-empty deque collection.</summary>
      <returns>The first element of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Adds an element at a specified position in the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_Val">The element to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Adds elements at a specified position in the container.</summary>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_First">The beginning of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the end of the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Adds elements at a specified position in the container.</summary>
      <param name="_Where_iter">The location in the container in front of which to insert.</param>
      <param name="_Right">The enumeration of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Adds the given number of elements at a specified position in the container.</summary>
      <param name="_Where">The location in the container in front of which to insert.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to be inserted into the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)">
      <summary>Gets or sets the element at the indicated position in the container.</summary>
      <returns>The element at the indicated position.</returns>
      <param name="_Pos">The position of the element to get or set.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back">
      <summary>Removes the last element of a non-empty container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front">
      <summary>Removes the first element of a non-empty container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)">
      <summary>Adds an element to the end of a container.</summary>
      <param name="_Val">The element to append to the end of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)">
      <summary>Adds an element to the beginning of a container.</summary>
      <param name="_Val">The element to add to the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)">
      <summary>Changes the number of elements.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
      <param name="_Val">The value of the padding element.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.size">
      <summary>Counts the number of elements.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IHash`2">
      <summary>Defines the interface of the STL/CLR hash_map, hash_multimap, hash_set, and hash_multiset objects.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count">
      <summary>Counts the number of buckets in the hash table.</summary>
      <returns>The current number of buckets in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)">
      <summary>Finds the number of elements that match a specified key.</summary>
      <returns>The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />. You use it to determine the number of elements currently in the controlled sequence that match a specified key.</returns>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.empty">
      <summary>Tests whether no elements are present in the container.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change when the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <summary>Finds the range that matches a specified key.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the element that is specified by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_Where">An iterator that points to the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_First_iter">An iterator that points to the beginning of the range to erase.</param>
      <param name="_Last_iter">An iterator that points to the position that immediately follows the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)">
      <summary>Removes elements from the container that match the specified key.</summary>
      <returns>The number of elements removed.</returns>
      <param name="_Keyval">The key value to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds an element that matches a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate">
      <summary>Returns the delegate that is used to convert a key value to an integer.</summary>
      <returns>The delegate that is used to convert a key value to an integer.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <summary>Adds the given element to the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">An iterator that specifies where in the container to insert the element. This is a hint only and is used to improve performance. The element might not be inserted at this location.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <summary>Adds to the container the elements specified by the given iterators.</summary>
      <param name="_First">An iterator that points to the beginning of the range of elements to insert.</param>
      <param name="_Last">An iterator that points to the element that immediately follows the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <summary>Adds the given value to the container.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of values X. If X.second is true, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)">
      <summary>Adds the given enumeration to the container.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.key_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence. You use it to compare two keys.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.load_factor">
      <summary>Counts the average number of elements per bucket in the hash table.</summary>
      <returns>The average number of elements per bucket in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the beginning of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <summary>Gets the maximum number of elements per bucket in the hash table.</summary>
      <returns>The maximum number of elements per bucket in the hash table.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)">
      <summary>Sets the maximum number of elements per bucket in the hash table.</summary>
      <param name="_Newmax">The maximum number of elements per bucket in the hash table.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)">
      <summary>Rebuilds the hash table.</summary>
      <param name="_Buckets">The number of buckets for the hash table.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container with which to swap contents.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the end of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value to search for.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IHash`2.value_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IList`1">
      <summary>Defines the interface for an STL/CLR list object.</summary>
      <typeparam name="TValue">The type of a list element.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces the controlled sequence with the sequence [<paramref name="_First" />, <paramref name="_Last" />).</summary>
      <param name="_First">The beginning position of the range of elements to insert into the container.</param>
      <param name="_Last">The first position beyond the range of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces the controlled sequence with the sequence that is designated by the given enumerator.</summary>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
      <summary>Replaces the controlled sequence with the specified number of the given element.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IList`1.back_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.empty">
      <summary>Tests whether the container has no elements.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the single element of the controlled sequence pointed to by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The position of the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />).</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element remaining beyond any elements removed, or <see cref="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning position of the range of elements to erase.</param>
      <param name="_Last_iter">The first position beyond the range of elements to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IList`1.front_item">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Inserts an element of the given value into the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Inserts the sequence [<paramref name="_First" />, <paramref name="_Last" />) into the container.</summary>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_First">The beginning position of the range of elements to insert into the container.</param>
      <param name="_Last">The first position beyond the range of elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Inserts the elements of the specified enumerator into the container.</summary>
      <param name="_Where_iter">The position in the container to insert before.</param>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Inserts the specified number of elements of the given value into the container.</summary>
      <param name="_Where">The position in the container immediately following the newly inserted elements.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the elements to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Merges two ordered controlled sequences.</summary>
      <param name="_Right">The container to merge into this container.</param>
      <param name="_Pred">The Boolean functor for comparing pairs of elements.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
      <summary>Removes the last element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
      <summary>Removes the first element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
      <summary>Adds a new element to the end of the container.</summary>
      <param name="_Val">The value of the element to append to the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
      <summary>Adds a new element to the beginning of the container.</summary>
      <param name="_Val">The value of the element to insert at the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or the position just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence that is seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
      <summary>Removes an element that has a specified value from the container.</summary>
      <param name="_Val">The value of the element to remove from the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})">
      <summary>Removes elements from the container that pass a specified test.</summary>
      <param name="_Pred">A Boolean test that determines which elements will be removed.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
      <summary>Changes the number of elements in the container to the specified size.</summary>
      <param name="_Newsize">The new size of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the given values will be appended to the container.</summary>
      <param name="_Newsize">The new size of the container.</param>
      <param name="_Val">The value of the padding elements.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.reverse">
      <summary>Reverses the elements of the controlled sequence.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Orders the controlled sequence.</summary>
      <param name="_Pred">The operator that will be used to compare elements for ordering.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
      <summary>Inserts the given sequence into the container before the specified position.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from. All elements will be removed from this container after the splice operation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the element from the given container pointed to by <paramref name="_First" /> and inserts it before the element in the controlled sequence pointed to by <paramref name="_Where" />.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from.</param>
      <param name="_First">The position of the element to splice.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the range of elements [<paramref name="_First" />, <paramref name="_Last" />) from the given container and inserts it before the element in the controlled sequence pointed to by <paramref name="_Where" />.</summary>
      <param name="_Where">The position in the container before which to splice.</param>
      <param name="_Right">The container to splice from.</param>
      <param name="_First">The beginning position of the range of elements to splice.</param>
      <param name="_Last">The first position beyond the range of elements to splice.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container to swap contents with.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <summary>Removes adjacent elements that pass a specified test.</summary>
      <param name="_Pred">The comparer that determines whether element pairs are unique. An element that is not unique will be removed from the container.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <summary>Defines the interface for an STL/CLR priority_queue object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
      <summary>Replaces all elements of the container.</summary>
      <param name="_Right">The container adapter to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You can use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
      <summary>Removes the highest-priority element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
      <summary>Adds a new element to the container.</summary>
      <param name="_Val">An element to insert into the controlled sequence. The controlled sequence is then reordered to maintain the heap discipline.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
      <summary>Accesses the highest-priority element of the container.</summary>
      <returns>The top (highest-priority) element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
      <summary>Accesses the highest-priority element of the container.</summary>
      <returns>The top (highest-priority) element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
      <summary>Copies the ordering delegate for two elements.</summary>
      <returns>The ordering delegate used to order the controlled sequence. You use it to compare two values.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IQueue`2">
      <summary>Defines the interface for an STL/CLR queue object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})">
      <summary>Replaces all elements of the container with the contents of the provided container.</summary>
      <param name="_Right">The container adapter whose elements will be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.pop">
      <summary>Removes the last element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)">
      <summary>Adds an element to the beginning of the container.</summary>
      <param name="_Val">The value to add to the beginning of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IQueue`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IStack`2">
      <summary>Defines the interface of an STL/CLR stack object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
      <typeparam name="TCont">The type of the underlying container.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})">
      <summary>Replaces all elements in the container with the elements in the provided container.</summary>
      <param name="_Right">The container adapter whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.empty">
      <summary>Determines whether the container contains no elements.</summary>
      <returns>true if the container contains no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.get_container">
      <summary>Accesses the underlying container.</summary>
      <returns>The underlying container. You use it to bypass the restrictions that are imposed by the container wrapper.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.pop">
      <summary>Removes the last element of the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)">
      <summary>Appends an element to the container.</summary>
      <param name="_Val">The value to be appended to the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IStack`2.top">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IStack`2.top_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ITree`2">
      <summary>Defines the interface of the STL/CLR hash_map, hash_multimap, hash_set, and hash_multiset objects.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)">
      <summary>Finds the number of elements that match a specified key.</summary>
      <returns>The number of elements in the controlled sequence that have the same key as <paramref name="_Keyval" />. You use it to determine the number of elements currently in the controlled sequence that match a specified key.</returns>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.empty">
      <summary>Tests whether no elements are present in the container.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A bidirectional iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the end of the controlled sequence. Its status does not change when the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <summary>Finds the range that matches a specified key.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of iterators that determine the range of elements currently in the controlled sequence that match a specified key.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the element that is specified by the given iterator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the removed element, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_Where">An iterator that points to the element to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes from the container the elements between the specified iterators.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the elements removed, or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no such element exists.</param>
      <param name="_First_iter">An iterator that points to the beginning of the range to erase.</param>
      <param name="_Last_iter">An iterator that points to the position that immediately follows the range to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)">
      <summary>Removes elements from the container that match the specified key.</summary>
      <returns>The number of elements removed.</returns>
      <param name="_Keyval">The key value to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds an element that matches a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates one of the found elements; or <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" /> if no element is found.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <summary>Adds the given element to the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">An iterator that specifies where in the container to insert the element. This is a hint only and is used to improve performance. The element might not be inserted at this location.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <summary>Adds to the container the elements specified by the given iterators.</summary>
      <param name="_First">An iterator that points to the beginning of the range of elements to insert.</param>
      <param name="_Last">An iterator that points to the element that immediately follows the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <summary>Adds the given value to the container.</summary>
      <returns>A pair of iterators.</returns>
      <param name="__unnamed0">A pair of values X. If X.second is true, X.first designates the newly inserted element; otherwise X.first designates an element with equivalent ordering that already exists, and no new element is inserted.</param>
      <param name="_Val">The key value to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})">
      <summary>Adds the given enumeration to the container.</summary>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.key_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence. You use it to compare two keys.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the beginning of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value for which to search.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order. Its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="_Right">The container with which to swap contents.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <summary>Finds the end of the range of elements that match a specified key.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element beyond the last element in the controlled sequence that hashes to the same bucket as <paramref name="_Keyval" /> and has equivalent ordering to <paramref name="_Keyval" />. If no such element exists, it returns <see cref="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />.</param>
      <param name="_Keyval">The key value to search for.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ITree`2.value_comp">
      <summary>Returns the ordering delegate that is used to order the controlled sequence.</summary>
      <returns>The ordering delegate that is used to order the controlled sequence.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.IVector`1">
      <summary>Defines the interface for an STL/CLR vector object.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Replaces all elements in the container with the elements between the given iterators.</summary>
      <param name="_First">The beginning position of the range of elements to insert.</param>
      <param name="_Last">The first position beyond the end of the range of elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)">
      <summary>Replaces all elements in the container with the elements in the specified enumeration.</summary>
      <param name="_Right">The enumeration whose elements are to be inserted into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)">
      <summary>Replaces all elements in the container with the specified number of elements that have given values.</summary>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element of the controlled sequence at position <paramref name="_Pos" />.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.back">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.back_item">
      <summary>Accesses the last element of the container.</summary>
      <returns>The last element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that designates the first element of the controlled sequence, or just beyond the end of an empty sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.capacity">
      <summary>Reports the size of allocated storage for the container.</summary>
      <returns>The storage that is currently allocated to hold the controlled sequence, a value at least as large as <see cref="M:Microsoft.VisualC.StlClr.IVector`1.size" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.clear">
      <summary>Removes all elements from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.empty">
      <summary>Tests whether the container has no elements.</summary>
      <returns>true if the container has no elements; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Designates the end of the controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A random-access iterator that points just beyond the end of the controlled sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the single element of the controlled sequence that is pointed to by <paramref name="_Where" />.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_Where">The position of the element to remove.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Removes the elements of the controlled sequence in the range [<paramref name="_First_iter" />, <paramref name="_Last_iter" />).</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the first element that remains beyond any removed elements, or <see cref="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" /> if no such element exists.</param>
      <param name="_First_iter">The beginning of the range of elements to erase.</param>
      <param name="_Last_iter">The first position beyond the range of elements to erase.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.front">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.front_item">
      <summary>Accesses the first element of the container.</summary>
      <returns>The first element of the controlled sequence, which must be non-empty.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <summary>Inserts the specified value into the container.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">An iterator that designates the newly inserted element.</param>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Inserts the sequence beginning with <paramref name="_First" /> and ending with the element preceding <paramref name="_Last" /> into the container.</summary>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_First">The beginning position of the range to insert into the container.</param>
      <param name="_Last">The first position beyond the range to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <summary>Inserts the sequence that is designated by an enumerator into the container.</summary>
      <param name="_Where_iter">The position in the container before which to insert.</param>
      <param name="_Right">The enumeration to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <summary>Inserts the specified number of the given elements into the container.</summary>
      <param name="_Where">The position in the container before which to insert.</param>
      <param name="_Count">The number of elements to insert into the container.</param>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)">
      <summary>Accesses an element at a specified position in the container.</summary>
      <returns>The element at position <paramref name="_Pos" />.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.pop_back">
      <summary>Removes the last element from the container.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)">
      <summary>Adds a new element to the end of the container.</summary>
      <param name="_Val">The value of the element to insert into the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the beginning of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that designates the last element of the controlled sequence, or just beyond the beginning of an empty sequence. Hence, it designates the <paramref name="beginning" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> beginning of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Designates the end of the reversed controlled sequence.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reverse iterator that points just beyond the beginning of the controlled sequence. Hence, it designates the <paramref name="end" /> of the reverse sequence. You use it to obtain an iterator that designates the <paramref name="current" /> end of the controlled sequence seen in reverse order, but its status can change if the length of the controlled sequence changes.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)">
      <summary>Reserves storage to ensure the minimum growth capacity for the container.</summary>
      <param name="_Capacity">The new minimum capacity of the container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)">
      <summary>Changes the number of elements in the container to the specified size.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)">
      <summary>Changes the number of elements in the container to the specified size. If the new size is larger than the old size, the method appends elements that have value <paramref name="_Val" />.</summary>
      <param name="_Newsize">The new size of the controlled sequence.</param>
      <param name="_Val">The value of the elements to insert.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.size">
      <summary>Counts the number of elements in the container.</summary>
      <returns>The length of the controlled sequence.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})">
      <summary>Swaps the contents of two containers.</summary>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IList`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.ListEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IList`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.ITree`2" /> interface.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.ITree`2" /> interface.</summary>
      <typeparam name="TKey">The type of the key component of an element in the controlled sequence.</typeparam>
      <typeparam name="TValue">The type of the value component of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" /> object.</summary>
      <param name="_First">The first node in the container over which to iterate.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.UnaryDelegate`2">
      <summary>Describes a one-argument delegate. You use it to specify the argument and return type of the delegate.</summary>
      <returns>The return type of the delegate.</returns>
      <param name="param0"></param>
      <typeparam name="TArg">The type of the delegate argument.</typeparam>
      <typeparam name="TResult">The return type of the delegate.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)">
      <summary>Frees, releases, or resets unmanaged resources that are used by the <see cref="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" /> object.</summary>
      <param name="__unnamed0">true to dispose of managed objects; false to dispose of unmanaged objects.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <summary>Supports simple iteration over any STL/CLR object that implements the <see cref="T:Microsoft.VisualC.StlClr.IVector`1" /> interface.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" /> object.</summary>
      <param name="_Cont">The container over which to iterate.</param>
      <param name="_First">The offset of the current first element in the container.</param>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current">
      <summary>Gets or sets the current element in the collection.</summary>
      <returns>The current element in the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
      <summary>Advances the enumerator to the next element in the collection.</summary>
      <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
      <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <summary>Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to cannot be modified. Bidirectional iterators can be used anywhere that a constant input or constant output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.
   </typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object that points to the given node.</summary>
      <param name="_Node">The node that the iterator will point to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the decrement operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic. The element pointed to by the iterator cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object.</summary>
      <param name="_Cont">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object to be copied to the current container.</param>
      <param name="_Offset">The offset of the element that the iterator will point to after creation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference, in number of elements, between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <summary>Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to cannot be modified. Constant reverse bidirectional iterators can be used anywhere that a constant reverse input or constant reverse output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next">
      <summary>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">Indicates that this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator--, moving backward one position by calling operator++, accessing an element by using operator[], and accessing an element by using pointer arithmetic. The element accessed by the iterator cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator pointing to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a negative number. To move the iterator backward, use a positive number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next">
      <summary>Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <summary>Decrements the reverse iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the reverse iterator by one element. This is the postfix version of the decrement operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether two iterators are the same object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <summary>Increments the reverse iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by one element. This is the postfix version of the increment operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">Indicates that this is the postfix version of the increment operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference (number of elements) between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately after the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <summary>Defines an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere that an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object that points to the given node.</summary>
      <param name="_Node">The node that the iterator will point to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines if the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object.</summary>
      <param name="_Cont">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" /> object to be copied to the current container.</param>
      <param name="_Offset">The offset of the element that the iterator will point to after creation.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number will be negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number will be negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator pointing to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Decrements the iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <summary>Increments the iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the given left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the given left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Left">The iterator to compare with the right-side iterator.</param>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference (number of elements) between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <summary>Defines the base interface for all STL/CLR iterators.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <summary>Interface for a container that supports both forward and backward iteration. Containers that implement bidirectional iteration support the following operations: moving forward one position by calling operator++, and moving backward one position by calling operator--.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation">
      <summary>Gets the current change generation of the underlying container.</summary>
      <returns>The current change generation of the underlying container.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <summary>Interface for an iterator that can access elements in a container in the forward direction by using the increment operator and in the backward direction by using the decrement operator. The element that the iterator points to can be both written to and read from any number of times. Bidirectional iterators can be used anywhere an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
      <summary>Positions the iterator to the element immediately before the current element.</summary>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <summary>Interface for an iterator that can access elements in a container only in the forward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Forward iterators can be used anywhere an input or output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <summary>Interface for an iterator that is used to read a sequence from a container only in the forward direction. The element that the iterator points to can be read only one time, and it cannot be modified.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether two <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> objects are equal.</summary>
      <returns>true if the current iterator and the specified iterator are equal; otherwise, false.</returns>
      <param name="param0"></param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <summary>Interface for the node data structure. Containers that support bidirectional iteration contain nodes. A node consists of a value for the element at that position in the container and pointers to the next and previous elements in the container.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value">
      <summary>Gets or sets the value of the element for this node in the container.</summary>
      <returns>The value of the element for this node in the container.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.container">
      <summary>Gets the container that the current node is in.</summary>
      <returns>The container that the current node is in.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head">
      <summary>Determines whether the current node is the first node of the container.</summary>
      <returns>true if the current node is the first node in the container; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node">
      <summary>Gets the next node in the container past the current node.</summary>
      <returns>The next node in the container past the current node.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node">
      <summary>Gets the node in the container immediately before the current node.</summary>
      <returns>The node in the container immediately before the current node.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <summary>Interface for an iterator that is used to write a sequence to a container only in the forward direction. The element that the iterator points to can be written to only one time.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <summary>Interface for a container that supports random access iteration. Containers that implement random access iteration support the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
      <summary>Gets the element at the current bias of the container. The bias is the offset from the current element zero.</summary>
      <returns>The element at the given bias.</returns>
      <param name="param0"></param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
      <summary>Determines if a given bias is valid for the container. The bias is the offset from the current element zero.</summary>
      <returns>true if the given bias is valid for the container; otherwise, false.</returns>
      <param name="param0"></param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <summary>Defines the interface for a random access iterator. Random access iterators support the following operations: moving forward one position by calling operator++, moving backward one position by calling operator--, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that precedes the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a positive number. To move the iterator backward, use a negative number.</param>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <summary>Defines an iterator that accesses elements in a container in the reverse direction. Elements can be accessed in the forward direction by using the decrement operator and in the backward direction by using the increment operator. The element that the iterator points to can be both written to and read from any number of times. Reverse bidirectional iterators can be used anywhere that a reverse input or reverse output iterator is required.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to copy.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone">
      <summary>Returns a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next">
      <summary>Decrements the iterator to the previous position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by one element. Decrementing a reverse iterator is the same as incrementing a regular iterator. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the prefix version of the increment operator.</summary>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <summary>Increments the iterator by one element. Incrementing a reverse iterator is the same as decrementing a regular iterator. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev">
      <summary>Increments the iterator to the next position in the underlying container, or to the first position beyond the end of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <summary>Provides an iterator that supports the following operations: moving forward one position by calling operator--, moving backward one position by calling operator++, accessing an element by using operator[], and accessing an element by using pointer arithmetic.</summary>
      <typeparam name="TValue">The type of an element in the controlled sequence.</typeparam>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object.</summary>
      <param name="_Iter">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Allocates and initializes a new <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object from an existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <param name="_Right">An existing <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to be copied to the current container.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base">
      <summary>Gets the underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>The underlying base iterator for the <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone">
      <summary>Creates a copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>A copy of the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container">
      <summary>Gets the container that the iterator is traversing.</summary>
      <returns>The container that the iterator is traversing.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines the distance between the element that the current iterator is pointing to and the element that the given iterator is pointing to.</summary>
      <returns>The distance, in number of elements, between the element that the current iterator is pointing to and the element that <paramref name="_Right" /> is pointing to. This number is negative if <paramref name="_Right" /> points to an element that is before the element that the current iterator points to.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object is the same as the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> objects are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias">
      <summary>Gets the bias of the iterator. The bias is the offset of the iterator from element zero.</summary>
      <returns>The bias of the iterator.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref">
      <summary>Returns a constant reference to the element that the iterator is currently pointing to.</summary>
      <returns>A constant reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node">
      <summary>Gets the node, or element, that the iterator is pointing to.</summary>
      <returns>The node that the iterator is pointing to.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref">
      <summary>Returns a reference to the element that the iterator is currently pointing to.</summary>
      <returns>A reference to the element that the iterator is currently pointing to.</returns>
    </member>
    <member name="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)">
      <summary>Accesses the element at the given position in the container.</summary>
      <returns>The element at the given position in the container.</returns>
      <param name="_Pos">The position of the element to access.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the current iterator is pointing to an element in the container that is before the element that the given iterator points to.</summary>
      <returns>true if the current iterator is pointing to an element that comes before the element that <paramref name="_Right" /> is pointing to; otherwise, false.</returns>
      <param name="_Right">A valid iterator that points to the same container as the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)">
      <summary>Moves the iterator by the given number of elements.</summary>
      <returns>The actual number of elements traversed. This number will differ from <paramref name="_Offset" /> if the beginning or end of the container is reached before iterating the desired number of elements.</returns>
      <param name="_Offset">The number of elements to traverse. To move the iterator forward, specify a negative number. To move the iterator backward, use a positive number.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next">
      <summary>Increments the reverse iterator to the next position in the underlying container, or to the first position in front of the beginning of container if the container has been completely traversed.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the right side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Increments the reverse iterator by the given number of elements. The integer parameter is specified on the left side of the addition operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Left">The number of elements to increment.</param>
      <param name="_Right">The iterator to increment.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Assigns the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to the current object.</summary>
      <returns>The current object (*this).</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to assign to the current object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Decrements the reverse iterator by one element. This is the prefix version of the decrement operator.</summary>
      <returns>An iterator. </returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the reverse iterator by one element. This is the postfix version of the decrement operator.</summary>
      <returns>An iterator. </returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether two iterators are the same object.</summary>
      <returns>true if the two iterators are the same object; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is greater than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is greater than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <summary>Converts a <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> to an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</summary>
      <returns>The current iterator as an <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />.</returns>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <summary>Increments the reverse iterator by one element. This is the prefix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Increments the reverse iterator by one element. This is the postfix version of the increment operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="param1">An unused parameter that indicates this is the postfix version of the operator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the given <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object differs from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</summary>
      <returns>true if the two iterators are different objects; otherwise, false.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object to compare with the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Determines whether the position of the left-side iterator is less than or equal to the position of the given right-side iterator.</summary>
      <returns>true if the left-side iterator is less than or equal to the given right-side iterator; otherwise, false.</returns>
      <param name="_Right">The iterator to compare with the left-side iterator.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <summary>Returns the element that the iterator is currently pointing to.</summary>
      <returns>The element that the iterator is currently pointing to.</returns>
      <param name="_Left">The iterator that the operator is applied to.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <summary>Determines the difference between two iterators.</summary>
      <returns>The difference, in number of elements, between the two iterators.</returns>
      <param name="_Right">The <see cref="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" /> to be subtracted from the current <see cref="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" /> object.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <summary>Decrements the iterator by the given number of elements. The integer parameter is specified on the right side of the subtraction operator.</summary>
      <returns>An iterator.</returns>
      <param name="__unnamed0">A reference to the current iterator.</param>
      <param name="_Right">The number of elements to decrement.</param>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev">
      <summary>Positions the iterator to the element immediately after the current element.</summary>
    </member>
    <member name="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid">
      <summary>Determines whether the iterator is valid and can be safely used to traverse the underlying container.</summary>
      <returns>true if the iterator is valid and safe to use; otherwise, false.</returns>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.VisualBasic.Compatibility.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic.Compatibility</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray">
      <summary>Implements the basic functionality common to control arrays in applications upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class, optionally specifying a container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseCanExtend(System.Object)">
      <summary>Gets a value that indicates whether a control is a member of a control array.</summary>
      <returns>true if the control is a member of the control array; otherwise, false.</returns>
      <param name="target">The <see cref="T:System.Windows.Forms.Control" /> to test.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetIndex(System.Object)">
      <summary>Gets the index of a control in a control array.</summary>
      <returns>A Short integer representing the index of the control in the control array.</returns>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to retrieve the index.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseGetItem(System.Int16)">
      <summary>Gets the control for a specified index in a control array.</summary>
      <returns>The <see cref="T:System.Windows.Forms.Control" /> at the specified <paramref name="Index" />.</returns>
      <param name="Index">An integer that represents the index of the control in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseResetIndex(System.Object)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseSetIndex(System.Object,System.Int16,System.Boolean)">
      <summary>Sets the index for a control in a control array.</summary>
      <param name="ctl">The <see cref="T:System.Windows.Forms.Control" /> for which you want to set the index.</param>
      <param name="Index">A Short integer that represents the index for the control.</param>
      <param name="fIsDynamic">Optional. A Boolean specifying whether the control was created at design time (false) or at run time (true).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.BaseShouldSerializeIndex(System.Object)">
      <summary>Returns a value that indicates whether a control is a member of a control array. </summary>
      <returns>true if the control is a member of the control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#BeginInit">
      <summary>Begins the initialization of the control. </summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.components">
      <summary>Stores the container for a control array.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controlAddedAtDesignTime">
      <summary>Stores values to track whether a control in a control array was created at design time or at run time.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.controls">
      <summary>Stores values that represent the controls in a control array.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Count">
      <summary>Returns the number of controls in a control array.</summary>
      <returns>A Short that contains the number of controls.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a control in a control array and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.System#ComponentModel#ISupportInitialize#EndInit">
      <summary>Ends the initialization of a control.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.fIsEndInitCalled">
      <summary>Stores a value indicating whether the initialization code for a control array's container has finished executing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType">
      <summary>Returns the type of a control in a control array.</summary>
      <returns>This method must be overridden.The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray" /> class is the base class for all control arrays that are used in applications upgraded from Visual Basic 6.0. Because this class is not typically used to create an instance of the class, this Protected method is usually not called directly but is instead called by a derived class.NoteFunctions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2010. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework. They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetEnumerator">
      <summary>Returns a reference to an enumerator object, which is used to iterate over a control array.</summary>
      <returns>A <see cref="T:System.Collections.IEnumerator" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)">
      <summary>Adds event handlers for a control in a control array.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.indices">
      <summary>Stores the indices for a control array.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.LBound">
      <summary>Returns a Short that contains the smallest available subscript for a control array.</summary>
      <returns>A Short that contains the lower bounds of a control array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Load(System.Int16)">
      <summary>Creates a new element in a control array.</summary>
      <param name="Index">A Short that represents the index of the new control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.UBound">
      <summary>Returns a Short that contains the largest available subscript for a control array.</summary>
      <returns>A Short that contains the upper bounds of a control array.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.Unload(System.Int16)">
      <summary>Removes a control from a control array.</summary>
      <param name="Index">A Short that represents the index of the control to remove.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray">
      <summary>Provides a control array of ActiveX controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.#ctor">
      <summary>Initializes a new instance of the BaseOCXArray class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the BaseOCXArray class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.BaseOcxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Button" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GetIndex(System.Windows.Forms.Button)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Button" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Button" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" />  property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ResetIndex(System.Windows.Forms.Button)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SetIndex(System.Windows.Forms.Button,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Button" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Button" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.ShouldSerializeIndex(System.Windows.Forms.Button)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Button" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ButtonArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.CheckBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.AppearanceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Appearance" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.CheckBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CheckStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GetIndex(System.Windows.Forms.CheckBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CheckBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ResetIndex(System.Windows.Forms.CheckBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SetIndex(System.Windows.Forms.CheckBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.CheckBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.ShouldSerializeIndex(System.Windows.Forms.CheckBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.CheckBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.CheckedListBox" /> controls. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.CheckedListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.CheckedListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.FormattingEnabledChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GetIndex(System.Windows.Forms.CheckedListBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckedListBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ImeModeChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.CheckedListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ItemCheck">
      <summary>Occurs when the checked state of an item changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseDoubleClick">
      <summary>Occurs when a control is double-clicked by the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ResetIndex(System.Windows.Forms.CheckedListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the selected index in a control array changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SetIndex(System.Windows.Forms.CheckedListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.CheckedListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.CheckedListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.ShouldSerializeIndex(System.Windows.Forms.CheckedListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.CheckedListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.CheckedListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.CheckedListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ColorDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ColorDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.GetIndex(System.Windows.Forms.ColorDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ColorDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ColorDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ColorDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.ResetIndex(System.Windows.Forms.ColorDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.SetIndex(System.Windows.Forms.ColorDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ColorDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ColorDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray.ShouldSerializeIndex(System.Windows.Forms.ColorDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ColorDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ColorDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ColorDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ComboBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ComboBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDown">
      <summary>Occurs when the drop-down part of a <see cref="T:System.Windows.Forms.ComboBox" /> is shown.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDownClosed">
      <summary>Occurs when the drop-down part of the <see cref="T:System.Windows.Forms.ComboBox" /> is no longer visible.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.DropDownStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.FormattingEnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GetIndex(System.Windows.Forms.ComboBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ComboBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ComboBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MeasureItem">
      <summary>Occurs every time that an owner-drawn <see cref="T:System.Windows.Forms.ComboBox" /> item has to be drawn and when the sizes of the list items are determined. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ResetIndex(System.Windows.Forms.ComboBox)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ComboBox.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SelectionChangeCommitted">
      <summary>Occurs when the selected item has changed and that change is displayed in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SetIndex(System.Windows.Forms.ComboBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ComboBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ComboBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ShouldSerializeIndex(System.Windows.Forms.ComboBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ComboBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ComboBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.TextUpdate">
      <summary>Occurs when the control has formatted the text, but before the text is displayed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox">
      <summary>Displays directories and paths at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> class.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change">
      <summary>Occurs when the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control has changed.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ColumnWidth">
      <summary>Gets or sets the width of columns in a multicolumn <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>The width, in pixels, of each column in the control. The default is 0.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirList(System.Int32)">
      <summary>Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control's list portion.</summary>
      <returns>A String that contains the directory and path for the specified item.</returns>
      <param name="Index">The number of a specific item in the list.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListCount">
      <summary>Gets the number of items in the list section of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>An Integer that represents the number of items in the list.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DirListIndex">
      <summary>Gets or sets the index of the currently selected item in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>An Integer that represents the index of the currently selected item.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control and optionally releases the managed resources.</summary>
      <param name="Disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DrawMode">
      <summary>Gets or sets the drawing mode for a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ListBox.DrawMode" /> values that represent the mode for drawing the items of the control. The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>The height, in pixels, of an item in the control.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.MultiColumn">
      <summary>Gets or sets a value that indicates whether a <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns.</summary>
      <returns>true if the <see cref="T:System.Windows.Forms.ListBox" /> supports multiple columns; otherwise, false. The default is false.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Change" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raise the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Path">
      <summary>Gets or sets the current path in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</summary>
      <returns>A String that represents the path of the currently selected directory. The default is the current path when the control is created at run time.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.SelectionMode">
      <summary>Gets or sets the method in which items are selected in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ListBox.SelectionMode" /> values. The default is <see cref="F:System.Windows.Forms.SelectionMode.One" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.Sorted">
      <summary>Gets a value that indicates whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> are sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Change">
      <summary>Occurs when the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.DirListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DirListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox">
      <summary>Enables a user to select a valid disk drive at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DisplayMember">
      <summary>Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources that are used by a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control and optionally releases the managed resources.</summary>
      <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DrawMode">
      <summary>Gets or sets the drawing mode for a <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>One of the <see cref="P:System.Windows.Forms.ComboBox.DrawMode" /> values that represent the mode for drawing the items of the control. The default is <see cref="F:System.Windows.Forms.DrawMode.Normal" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive">
      <summary>Gets or sets the selected drive at run time.</summary>
      <returns>A String expression that specifies the selected drive.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DropDownStyle">
      <summary>Gets or sets a value that specifies the style of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> combo box.</summary>
      <returns>One of the <see cref="T:System.Windows.Forms.ComboBoxStyle" /> values. The default is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
      <returns>The height, in pixels, of an item in the control.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Items(System.Int32)">
      <summary>Gets the item for a specified index in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that contains the name of the drive at the specified <paramref name="Index" />.</returns>
      <param name="Index">The number of a specific item in the list.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.MaxLength">
      <summary>Gets or sets a value that specifies the maximum length of text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>An Integer that specifies the maximum length for the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Drive" /> property.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnBackColorChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.BackColorChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>Raise the <see cref="E:System.Windows.Forms.ListBox.DrawItem" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnFontChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnHandleCreated(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Sorted">
      <summary>Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.Text">
      <summary>Gets the text displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that contains the text that is displayed.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
      <returns>A String that represents the name of an object property and is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox.WndProc(System.Windows.Forms.Message@)">
      <summary>Processes Windows messages.</summary>
      <param name="m">The Windows Message to process. </param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Click">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DropDown">
      <summary>Occurs when the drop-down portion of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is shown.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.DropDownStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ComboBox.DropDownStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SelectionChangeCommitted">
      <summary>Occurs when the selected item has changed and that change is displayed in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.DriveListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray" />.</summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DriveListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.DriveListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox">
      <summary>Locates and lists files in the directory specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property at run time.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> class.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Archive">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Archive attributes.</summary>
      <returns>true if files that have the Archive attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource">
      <summary>Gets or sets the data source for a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>An object that implements the <see cref="T:System.Collections.IList" /> or <see cref="T:System.ComponentModel.IListSource" /> interfaces, such as a <see cref="T:System.Data.DataSet" /> or a <see cref="T:System.Array" />. The default is null.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DisplayMember">
      <summary>Gets or sets the property to display for this <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String that represents the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName">
      <summary>Gets or sets the file name of the selected file in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
      <returns>A String that contains the file name of the selected file.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Hidden">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Hidden attributes.</summary>
      <returns>true if files that have the Hidden attribute will be displayed; otherwise false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ItemHeight">
      <summary>Gets the height of an item in the <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>This property is not required for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control; the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> does not support items of variable height. It is provided only because the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control inherits from <see cref="T:System.Windows.Forms.ListBox" />.NoteFunctions and objects in the <see cref="N:Microsoft.VisualBasic.Compatibility.VB6" /> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to Visual Basic 2008. In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the .NET Framework. They are necessary only when the Visual Basic 6.0 code model differs significantly from the .NET Framework implementation.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Items">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> representing the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Items(System.Int32)">
      <summary>Gets the items that are contained in a <see cref="T:System.Windows.Forms.ListBox" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" /> that represents the items in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.DirListBox" />.</returns>
      <param name="Index">An Integer representing the index of the item.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Normal">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have Normal attributes.</summary>
      <returns>true if files that have the Normal attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnDoubleClick(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.Control.DoubleClick" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnPathChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnPatternChange(System.EventArgs)">
      <summary>Raises the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.OnSelectedIndexChanged(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" /> event.</summary>
      <param name="e">A <see cref="T:System.EventArgs" /> that contains the event data.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path">
      <summary>Gets or sets the current path for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</summary>
      <returns>A String that contains the current path, not including the file name.</returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PathChange">
      <summary>Occurs when the path is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property in code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern">
      <summary>Gets or sets a value indicating the file names displayed in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control at run time.</summary>
      <returns>A string expression indicating a file specification, such as "*.*" or "*.FRM". The default is "*.*", which returns a list of all files. </returns>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.PatternChange">
      <summary>Occurs when the file listing pattern, such as "*.*", is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern" /> property in code.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ReadOnly">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control contains files that have read-only attributes.</summary>
      <returns>true if files that have the ReadOnly attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Refresh">
      <summary>Forces the control to invalidate its client area and immediately redraw itself.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Sorted">
      <summary>Gets a value indicating whether the items in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> are sorted alphabetically.</summary>
      <returns>true if items in the control are sorted; otherwise, false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.System">
      <summary>Gets or sets a value that determines whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control displays files that have System attributes.</summary>
      <returns>true if files that have the System attribute will be displayed; otherwise false. The default is true.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.ValueMember">
      <summary>Gets or sets the property to use as the actual value for the items in a <see cref="T:System.Windows.Forms.ListControl" />.</summary>
      <returns>A String representing the name of an object property that is contained in the collection specified by the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.DataSource" /> property. The default is an empty string ("").</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray">
      <summary>Provides a control array of <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>Gets the index of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FileListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MeasureItem">
      <summary>Occurs every time an owner-drawn <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> item has to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.PathChange">
      <summary>Occurs when the path is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Path" /> property in code.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.PatternChange">
      <summary>Occurs when the file listing pattern, such as "*.*", is changed by setting the <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.FileName" /> or <see cref="P:Microsoft.VisualBasic.Compatibility.VB6.FileListBox.Pattern" /> property in code.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ResetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SetIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />.</summary>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ShouldSerializeIndex(Microsoft.VisualBasic.Compatibility.VB6.FileListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FileListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FileListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString">
      <summary>Emulates the behavior of a Visual Basic 6.0 fixed-length string.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length.</summary>
      <param name="MaxChars">An Integer that specifies the length of the string.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.#ctor(System.Int32,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> class, specifying the length and the initial value.</summary>
      <param name="MaxChars">An Integer that specifies the length of the string.</param>
      <param name="InitialValue">A <see cref="T:System.String" /> that specifies the initial contents.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_nMaxChars">
      <summary>Stores the length of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.m_strValue">
      <summary>Stores the value of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.ToString">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString.Value">
      <summary>Gets or sets the contents of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FixedLengthString" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.FontDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.Apply">
      <summary>Occurs when the user clicks the Apply button in the font dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.FontDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.GetIndex(System.Windows.Forms.FontDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.FontDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.FontDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.FontDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.ResetIndex(System.Windows.Forms.FontDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.SetIndex(System.Windows.Forms.FontDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.FontDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.FontDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray.ShouldSerializeIndex(System.Windows.Forms.FontDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.FontDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FontDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.FontDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 Show method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants.Modeless">
      <summary>Equivalent to the Visual Basic 6.0 constant vbModeless.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants.Modal">
      <summary>Equivalent to the Visual Basic 6.0 constant vbModal.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.GroupBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.GroupBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GetIndex(System.Windows.Forms.GroupBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.GroupBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.GroupBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.GroupBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" />  property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ResetIndex(System.Windows.Forms.GroupBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SetIndex(System.Windows.Forms.GroupBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.GroupBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.GroupBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.ShouldSerializeIndex(System.Windows.Forms.GroupBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.GroupBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.GroupBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.GroupBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.HScrollBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.HScrollBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GetIndex(System.Windows.Forms.HScrollBar)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.HScrollBar" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <returns>An <see cref="T:System.Windows.Forms.HScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="o">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.HookUpControlEvents(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> control.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.HScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ResetIndex(System.Windows.Forms.HScrollBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.HScrollBar" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SetIndex(System.Windows.Forms.HScrollBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.HScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.HScrollBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ShouldSerializeIndex(System.Windows.Forms.HScrollBar)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.HScrollBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.HScrollBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.ValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ScrollBar.Value" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.HScrollBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ImageList" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.ImageList" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.GetIndex(System.Windows.Forms.ImageList)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.ImageList" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ImageList" />.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.ImageList" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ResetIndex(System.Windows.Forms.ImageList)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.SetIndex(System.Windows.Forms.ImageList,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ImageList" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ImageList" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray.ShouldSerializeIndex(System.Windows.Forms.ImageList)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.ImageList" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ImageListArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.ImageList" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Label" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Label" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Label" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GetIndex(System.Windows.Forms.Label)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Label" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Label" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ResetIndex(System.Windows.Forms.Label)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SetIndex(System.Windows.Forms.Label,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Label" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Label" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.ShouldSerializeIndex(System.Windows.Forms.Label)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Label" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LabelArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Label" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Label.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.LabelArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ListBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ListBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DataSourceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DataSource" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DisplayMemberChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.DisplayMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Format">
      <summary>Occurs when the control is bound to a data value.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormatStringChanged">
      <summary>Occurs when value of the <see cref="P:System.Windows.Forms.ListControl.FormatString" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.FormattingEnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ListControl.FormattingEnabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GetIndex(System.Windows.Forms.ListBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.ListBox" /> item needs to be drawn and when the sizes of the list items are determined.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ResetIndex(System.Windows.Forms.ListBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListBox.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SelectedValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedValue" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SetIndex(System.Windows.Forms.ListBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ListBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ShouldSerializeIndex(System.Windows.Forms.ListBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ListBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.ValueMemberChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.ValueMember" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem">
      <summary>Represents an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> class.</summary>
      <param name="ItemString">A <see cref="T:System.String" /> that contains the list item.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.#ctor(System.String,System.Int32)">
      <summary>Initializes an instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> class.</summary>
      <param name="ItemString">A <see cref="T:System.String" /> that contains the list item.</param>
      <param name="ItemData">An Integer that represents the Visual Basic 6.0 ItemData value.</param>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData">
      <summary>Stores the ItemData value for an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString">
      <summary>Stores the List value for an item in a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control in an application that was upgraded from Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ToString">
      <summary>Converts a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" /> to a <see cref="T:System.String" />.</summary>
      <returns>A <see cref="T:System.String" /> that contains the value of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ListView" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.AfterLabelEdit">
      <summary>Occurs when the label for an item is edited by the user. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BeforeLabelEdit">
      <summary>Occurs when the user starts editing the label of an item.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CacheVirtualItems">
      <summary>Occurs when the contents of the display area for a <see cref="T:System.Windows.Forms.ListView" /> in virtual mode has changed and the <see cref="T:System.Windows.Forms.ListView" /> determines that a new range of items is needed. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ListView" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnClick">
      <summary>Occurs when the user clicks a column header within the <see cref="T:System.Windows.Forms.ListView" /> control. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnReordered">
      <summary>Occurs when the column header order is changed. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnWidthChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.DataGridViewColumn.Width" /> property for a column changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ColumnWidthChanging">
      <summary>Occurs when the width of a column is changing.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawColumnHeader">
      <summary>Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to true. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.ListView" /> changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.DrawSubItem">
      <summary>Occurs when the details view of a <see cref="T:System.Windows.Forms.ListView" /> is drawn and the <see cref="P:System.Windows.Forms.ListView.OwnerDraw" /> property is set to true. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GetIndex(System.Windows.Forms.ListView)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListView" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ListView" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemActivate">
      <summary>Occurs when an item is activated. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemCheck">
      <summary>Occurs when the checked state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemChecked">
      <summary>Occurs when the checked state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemDrag">
      <summary>Occurs when the user begins dragging an item. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemMouseHover">
      <summary>Occurs when the mouse hovers over an item. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ItemSelectionChanged">
      <summary>Occurs when the selection state of an item changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ResetIndex(System.Windows.Forms.ListView)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RetrieveVirtualItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and requires a <see cref="T:System.Windows.Forms.ListViewItem" />. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.RightToLeftLayoutChanged">
      <summary>Occurs when the RightToLeftLayout property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SearchForVirtualItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and a search is taking place.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ListControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SetIndex(System.Windows.Forms.ListView,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ListView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ListView" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.ShouldSerializeIndex(System.Windows.Forms.ListView)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ListView" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ListView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.VirtualItemsSelectionRangeChanged">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ListView" /> is in virtual mode and the selection state of a range of items has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ListViewArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 LoadResPicture function.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResBitmap">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResBitmap.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResIcon">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResIcon.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants.ResCursor">
      <summary>Equivalent to the Visual Basic 6.0 constant vbResCursor.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.MaskedTextBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.BorderStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MaskedTextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GetIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MaskedTextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.IsOverwriteModeChanged">
      <summary>Occurs after the insert mode has changed.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.MaskedTextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MaskChanged">
      <summary>Occurs after the input mask is changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MaskInputRejected">
      <summary>Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.MaskedTextBox.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ResetIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SetIndex(System.Windows.Forms.MaskedTextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.MaskedTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MaskedTextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.ShouldSerializeIndex(System.Windows.Forms.MaskedTextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.MaskedTextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MaskedTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.MaskedTextBox.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.TypeValidationCompleted">
      <summary>Occurs when <see cref="T:System.Windows.Forms.MaskedTextBox" /> has finished parsing the current value by using the <see cref="P:System.Windows.Forms.MaskedTextBox.ValidatingType" /> property.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MaskedTextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.MenuItem" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.MenuItem" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.MenuItem" /> changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.GetIndex(System.Windows.Forms.MenuItem)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.MenuItem" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.MeasureItem">
      <summary>Occurs each time an owner-drawn <see cref="T:System.Windows.Forms.MenuItem" /> needs to be drawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Popup">
      <summary>Occurs before a menu item's list of menu items is displayed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.ResetIndex(System.Windows.Forms.MenuItem)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.Select">
      <summary>Occurs when the user rests the mouse pointer over a menu item.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.SetIndex(System.Windows.Forms.MenuItem,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.MenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.MenuItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray.ShouldSerializeIndex(System.Windows.Forms.MenuItem)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.MenuItem" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.MenuItemArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.MenuItem" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants">
      <summary>Provides constants for compatibility with the shift parameter mask constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.LeftButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbLeftButton.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.RightButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbRightButton.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.MouseButtonConstants.MiddleButton">
      <summary>Equivalent to the Visual Basic 6.0 constant vbMiddleButton.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.OpenFileDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.FileOk">
      <summary>Occurs when the user clicks on the Open or Save button on an <see cref="T:System.Windows.Forms.OpenFileDialog" /> dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.GetIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>Gets the index of an <see cref="T:System.Windows.Forms.OpenFileDialog" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.OpenFileDialog" />.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HelpRequest">
      <summary>Occurs when the user clicks the Help button on an <see cref="T:System.Windows.Forms.OpenFileDialog" /> dialog box. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> by index. Read-only.</summary>
      <returns>An <see cref="T:System.Windows.Forms.OpenFileDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ResetIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.SetIndex(System.Windows.Forms.OpenFileDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.OpenFileDialog" /> in an <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />.</summary>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.OpenFileDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.OpenFileDialog)">
      <summary>Returns a value that indicates whether an <see cref="T:System.Windows.Forms.OpenFileDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.OpenFileDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Panel" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Panel.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Panel" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.Panel" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GetIndex(System.Windows.Forms.Panel)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Panel" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Panel" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ResetIndex(System.Windows.Forms.Panel)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.Panel" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SetIndex(System.Windows.Forms.Panel,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Panel" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Panel" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.ShouldSerializeIndex(System.Windows.Forms.Panel)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Panel" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PanelArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Panel" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PanelArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.PictureBox" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.PictureBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.PictureBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GetIndex(System.Windows.Forms.PictureBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PictureBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.PictureBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LoadCompleted">
      <summary>Occurs when the asynchronous image-load operation is completed, been canceled, or raised an exception.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LoadProgressChanged">
      <summary>Occurs when the progress of an asynchronous image-loading operation has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ResetIndex(System.Windows.Forms.PictureBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SetIndex(System.Windows.Forms.PictureBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.PictureBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PictureBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.ShouldSerializeIndex(System.Windows.Forms.PictureBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.PictureBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PictureBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SizeModeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.PictureBox.SizeMode" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PictureBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.PrintDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.PrintDialog" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.GetIndex(System.Windows.Forms.PrintDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.PrintDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PrintDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HelpRequest">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.PrintDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ResetIndex(System.Windows.Forms.PrintDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.SetIndex(System.Windows.Forms.PrintDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.PrintDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.PrintDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray.ShouldSerializeIndex(System.Windows.Forms.PrintDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.PrintDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.PrintDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.PrintDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ProgressBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ProgressBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GetIndex(System.Windows.Forms.ProgressBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ProgressBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ProgressBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ResetIndex(System.Windows.Forms.ProgressBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ProgressBar.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SetIndex(System.Windows.Forms.ProgressBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ProgressBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ProgressBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.ShouldSerializeIndex(System.Windows.Forms.ProgressBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ProgressBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ProgressBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ProgressBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.RadioButton" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.AppearanceChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.RadioButton.Appearance" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.RadioButton" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.RadioButton.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GetIndex(System.Windows.Forms.RadioButton)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RadioButton" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.RadioButton" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array. </param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ResetIndex(System.Windows.Forms.RadioButton)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SetIndex(System.Windows.Forms.RadioButton,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.RadioButton" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RadioButton" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.ShouldSerializeIndex(System.Windows.Forms.RadioButton)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.RadioButton" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RadioButton" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RadioButtonArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.RichTextBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.AcceptsTabChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.BorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.RichTextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CausesValidationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContentsResized">
      <summary>Occurs when contents within the control are resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.RichTextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.GetIndex(System.Windows.Forms.RichTextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RichTextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.HScroll">
      <summary>Occurs when the user clicks the horizontal scroll bar of the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ImeChange">
      <summary>Occurs when the user switches input methods on an Asian version of the Windows operating system.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.RichTextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.LinkClicked">
      <summary>Occurs when the user clicks on a link within the text of the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.MultilineChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Protected">
      <summary>Occurs when the user attempts to modify protected text in the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ResetIndex(System.Windows.Forms.RichTextBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SelectionChanged">
      <summary>Occurs when the selection of text within the control has changed.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SetIndex(System.Windows.Forms.RichTextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.RichTextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.RichTextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.ShouldSerializeIndex(System.Windows.Forms.RichTextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.RichTextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.RichTextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.RichTextBoxArray.VScroll">
      <summary>Occurs when the user clicks the vertical scroll bars of the control.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.SaveFileDialog" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">An <see cref="T:System.Windows.Forms.OpenFileDialog" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.FileOk">
      <summary>Occurs when the user clicks on the Open or Save button on a <see cref="T:System.Windows.Forms.SaveFileDialog" /> dialog box.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.GetIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.SaveFileDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.SaveFileDialog" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.HelpRequest">
      <summary>Occurs when the user clicks the Help button on a <see cref="T:System.Windows.Forms.SaveFileDialog" /> dialog box. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.SaveFileDialog" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.ResetIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.SetIndex(System.Windows.Forms.SaveFileDialog,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.SaveFileDialog" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.SaveFileDialog" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray.ShouldSerializeIndex(System.Windows.Forms.SaveFileDialog)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.SaveFileDialog" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.SaveFileDialogArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.SaveFileDialog" /> in the control array.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode">
      <summary>Provides constants for compatibility with the ScaleMode constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Points">
      <summary>Equivalent to the Visual Basic 6.0 constant vbPoints.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Characters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCharacters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Inches">
      <summary>Equivalent to the Visual Basic 6.0 constant vbInches.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Millimeters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbMillimeters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Centimeters">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCentimeters.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode.Himetric">
      <summary>Equivalent to the Visual Basic 6.0 constant vbHimetric.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants">
      <summary>Provides constants for compatibility with the shift parameter mask constants in Visual Basic 6.0.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.ShiftMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbShiftMask.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.CtrlMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbCtrlMask.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ShiftConstants.AltMask">
      <summary>Equivalent to the Visual Basic 6.0 constant vbAltMask.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.StatusBar" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.StatusBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBar" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.DrawItem">
      <summary>Occurs when a visual aspect of an owner-drawn <see cref="T:System.Windows.Forms.StatusBar" /><see cref="T:System.Windows.Forms.StatusBar" /> control changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GetIndex(System.Windows.Forms.StatusBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.StatusBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.PanelClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusBarPanel" /> object on a <see cref="T:System.Windows.Forms.StatusBar" /> control is clicked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ResetIndex(System.Windows.Forms.StatusBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.RightToLeft" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SetIndex(System.Windows.Forms.StatusBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.StatusBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.ShouldSerializeIndex(System.Windows.Forms.StatusBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.StatusBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.StatusStrip" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BeginDrag">
      <summary>Occurs when the user begins to drag the <see cref="T:System.Windows.Forms.StatusStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.StatusStrip" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.StatusStrip" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.EndDrag">
      <summary>Occurs when the user stops dragging the <see cref="T:System.Windows.Forms.StatusStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GetIndex(System.Windows.Forms.StatusStrip)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusStrip" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">A <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.StatusStrip" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemAdded">
      <summary>Occurs when a new <see cref="T:System.Windows.Forms.ToolStripItem" /> is added to the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripItem" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ItemRemoved">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripItem" /> is removed from the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LayoutCompleted">
      <summary>Occurs when the layout of the <see cref="T:System.Windows.Forms.StatusStrip" /> is complete.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LayoutStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.StatusStrip.LayoutStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.PaintGrip">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.StatusStrip" /> move handle is painted.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ResetIndex(System.Windows.Forms.StatusStrip)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Scroll">
      <summary>Occurs when the user or code scrolls through the client area.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SetIndex(System.Windows.Forms.StatusStrip,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.StatusStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.StatusStrip" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.ShouldSerializeIndex(System.Windows.Forms.StatusStrip)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.StatusStrip" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.StatusStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.StatusStripArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.Support">
      <summary>Contains various utility functions for backward compatibility with Visual Basic 6.0.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CopyArray(System.Array)">
      <summary>Duplicates Visual Basic 6.0 functionality of assigning an Array to a Variant.</summary>
      <returns>A <see cref="T:System.Array" />.</returns>
      <param name="SourceArray">A <see cref="T:System.Array" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.CursorToIPicture(System.Windows.Forms.Cursor)">
      <summary>Returns an OLE IPicture object that corresponds to the specified <see cref="T:System.Windows.Forms.Cursor" />.</summary>
      <returns>An <see cref="T:System.Object" /> that represents the OLE IPicture object.</returns>
      <param name="curs">The <see cref="T:System.Windows.Forms.Cursor" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Boolean,System.Boolean)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Boolean" /> expressions.</summary>
      <returns>true if the two expressions are equal; otherwise false.</returns>
      <param name="a">A <see cref="T:System.Boolean" /> to compare.</param>
      <param name="b">A <see cref="T:System.Boolean" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Byte,System.Byte)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Byte" /> expressions.</summary>
      <returns>A <see cref="T:System.Byte" /> that contains the result of the bitwise comparison.</returns>
      <param name="a">A <see cref="T:System.Byte" /> to compare.</param>
      <param name="b">A <see cref="T:System.Byte" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int16,System.Int16)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int16" /> expressions.</summary>
      <returns>A <see cref="T:System.Int16" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int16" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int16" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int32,System.Int32)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int32" /> expressions.</summary>
      <returns>A <see cref="T:System.Int32" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int32" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int32" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Int64,System.Int64)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Int64" /> expressions.</summary>
      <returns>A <see cref="T:System.Int64" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Int64" /> to compare.</param>
      <param name="b">A <see cref="T:System.Int64" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Eqv(System.Object,System.Object)">
      <summary>Performs a logical equivalence on two <see cref="T:System.Object" /> expressions.</summary>
      <returns>A <see cref="T:System.Object" /> that contains the result of the comparison.</returns>
      <param name="a">A <see cref="T:System.Object" /> to compare.</param>
      <param name="b">A <see cref="T:System.Object" /> to compare.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeBold(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Bold">true to set the <see cref="F:System.Drawing.FontStyle.Bold" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeGdiCharSet(System.Drawing.Font,System.Byte)">
      <summary>Returns a font for a specified GDI character set.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> for the specified GDI character set.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="GdiCharSet">A byte value that specifies the GDI character set to use.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeItalic(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Italic">true to set the <see cref="F:System.Drawing.FontStyle.Italic" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeName(System.Drawing.Font,System.String)">
      <summary>Returns a new <see cref="T:System.Drawing.Font" /> for a given Visual Basic 6.0 Font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 Font.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Name">A String that represents the Visual Basic 6.0 Font property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeSize(System.Drawing.Font,System.Single)">
      <summary>Changes the <see cref="P:System.Drawing.Font.Size" /> property for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> that matches the Visual Basic 6.0 FontSize.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Size">A Single that represents the Visual Basic 6.0 FontSize property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeStrikeout(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Strikeout">true to set the <see cref="F:System.Drawing.FontStyle.Strikeout" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontChangeUnderline(System.Drawing.Font,System.Boolean)">
      <summary>Changes the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit for a font.</summary>
      <returns>A <see cref="T:System.Drawing.Font" /> with the new style applied.</returns>
      <param name="CurrentFont">A <see cref="T:System.Drawing.Font" />.</param>
      <param name="Underline">true to set the <see cref="F:System.Drawing.FontStyle.Underline" /> style bit; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FontToIFont(System.Drawing.Font)">
      <summary>Converts a <see cref="T:System.Drawing.Font" /> to a Visual Basic 6.0 stdFont object.</summary>
      <returns>A stdFont object.</returns>
      <param name="fnt">The <see cref="T:System.Drawing.Font" /> to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Format(System.Object,System.String,Microsoft.VisualBasic.FirstDayOfWeek,Microsoft.VisualBasic.FirstWeekOfYear)">
      <summary>Converts the Visual Basic 6.0 Format function to be compatible with Visual Basic 2010.</summary>
      <returns>A <see cref="T:System.String" /> that contains the formatted data.</returns>
      <param name="Expression">The <see cref="T:System.Object" /> expression to convert.</param>
      <param name="Style">Optional. A <see cref="T:System.String" /> that represents a date format.</param>
      <param name="DayOfWeek">Optional. A <see cref="T:Microsoft.VisualBasic.FirstDayOfWeek" /> enumeration.</param>
      <param name="WeekOfYear">Optional. A <see cref="T:Microsoft.VisualBasic.FirstWeekOfYear" /> enumeration.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserHeight(System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleHeight measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleHeight. </returns>
      <param name="Height">A <see cref="T:System.Double" /> that represents the height.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserWidth(System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleWidth measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleWidth. </returns>
      <param name="Width">A <see cref="T:System.Double" /> that represents the width.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleLeft measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleLeft">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleLeft for the current ScaleMode.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 ScaleTop measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleTop. </returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleTop">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleTop for the current ScaleMode.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified ScaleMode.</returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate in pixels.</param>
      <param name="ToScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.FromPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a pixel measurement to a Visual Basic 6.0 measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the Visual Basic 6.0 value for the specified ScaleMode.</returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate in pixels.</param>
      <param name="ToScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert to.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetActiveControl">
      <summary>Gets the control that currently has focus.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Control" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetCancel(System.Windows.Forms.Button)">
      <summary>Gets a value that indicates whether a <see cref="T:System.Windows.Forms.Button" /> is the cancel button on a form.</summary>
      <returns>true if <paramref name="btn" /> is the cancel button; otherwise false.</returns>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetDefault(System.Windows.Forms.Button)">
      <summary>Gets sets a value that determines whether a <see cref="T:System.Windows.Forms.Button" /> control is the default button on a form.</summary>
      <returns>true if <paramref name="btn" /> is the default button; otherwise false.</returns>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetEXEName">
      <summary>Gets the name of the executable file (.exe) for the current application.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name without a file name extension.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetHInstance">
      <summary>Gets the instance handle (HINSTANCE) for the current application.</summary>
      <returns>An <see cref="T:System.IntPtr" /> for the current application instance.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemData(System.Windows.Forms.Control,System.Int32)">
      <summary>Gets an Integer associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</summary>
      <returns>The Integer associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">An Integer that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetItemString(System.Windows.Forms.Control,System.Int32)">
      <summary>Gets a <see cref="T:System.String" /> associated with a <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> item.</summary>
      <returns>The <see cref="T:System.String" /> associated with the specified <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</returns>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">An Integer that represents the index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.GetPath">
      <summary>Gets the current path for the application.</summary>
      <returns>A <see cref="T:System.String" /> that contains the path of the currently executing assembly.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IconToIPicture(System.Drawing.Icon)">
      <summary>Gets an OLE IPicture object for a given <see cref="T:System.Drawing.Icon" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="ico">A <see cref="T:System.Drawing.Icon" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IFontToFont(System.Object)">
      <summary>Converts a Visual Basic 6.0 stdFont object to a <see cref="T:System.Drawing.Font" />.</summary>
      <returns>A <see cref="T:System.Drawing.Font" />.</returns>
      <param name="objFnt">An <see cref="T:System.Object" /> that contains a Visual Basic 6.0 stdFont.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPicture(System.Drawing.Image)">
      <summary>Gets an OLE IPicture object for a given <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPicture object.</returns>
      <param name="img">A <see cref="T:System.Drawing.Image" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ImageToIPictureDisp(System.Drawing.Image)">
      <summary>Gets an OLE IPictureDisp object for a given <see cref="T:System.Drawing.Image" />.</summary>
      <returns>An <see cref="T:System.Object" /> representing the OLE IPictureDisp object.</returns>
      <param name="img">A <see cref="T:System.Drawing.Image" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Boolean,System.Boolean)">
      <summary>Performs a logical implication on two <see cref="T:System.Boolean" /> expressions.</summary>
      <returns>A <see cref="T:System.Boolean" /> that contains the result.</returns>
      <param name="a">A <see cref="T:System.Boolean" /> expression.</param>
      <param name="b">A <see cref="T:System.Boolean" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Byte,System.Byte)">
      <summary>Performs a logical implication on two <see cref="T:System.Byte" /> expressions.</summary>
      <returns>A <see cref="T:System.Byte" /> that contains the result.</returns>
      <param name="a">A <see cref="T:System.Byte" /> expression.</param>
      <param name="b">A <see cref="T:System.Byte" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int16,System.Int16)">
      <summary>Performs a logical implication on two <see cref="T:System.Int16" /> expressions.</summary>
      <returns>A Short that contains the result.</returns>
      <param name="a">A Short expression.</param>
      <param name="b">A Short expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int32,System.Int32)">
      <summary>Performs a logical implication on two <see cref="T:System.Int32" /> expressions.</summary>
      <returns>An Integer that contains the result.</returns>
      <param name="a">An Integer expression.</param>
      <param name="b">An Integer expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Int64,System.Int64)">
      <summary>Performs a logical implication on two <see cref="T:System.Int64" /> expressions.</summary>
      <returns>A Long that contains the result.</returns>
      <param name="a">A Long expression.</param>
      <param name="b">A Long expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.Imp(System.Object,System.Object)">
      <summary>Performs a logical implication on two <see cref="T:System.Object" /> expressions.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the result.</returns>
      <param name="a">An <see cref="T:System.Object" /> expression.</param>
      <param name="b">An <see cref="T:System.Object" /> expression.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureDispToImage(System.Object)">
      <summary>Gets a <see cref="T:System.Drawing.Image" /> for a given OLE IPictureDisp object.</summary>
      <returns>A <see cref="T:System.Drawing.Image" />.</returns>
      <param name="pict">An OLE IPictureDisp object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.IPictureToImage(System.Object)">
      <summary>Gets a <see cref="T:System.Drawing.Image" /> for a given OLE IPicture object.</summary>
      <returns>A <see cref="T:System.Drawing.Image" />.</returns>
      <param name="pict">An OLE IPicture object.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object)">
      <summary>Loads data of several possible types from a resource (.res) file.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">An <see cref="T:System.Object" /> that specifies the resource type.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResData(System.Object,System.Object,System.Globalization.CultureInfo)">
      <summary>Loads data of several possible types from a resource (.res) file, specifying a locale.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">An <see cref="T:System.Object" /> that specifies the resource type.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants)">
      <summary>Loads a bitmap, icon, or cursor from a resource (.res) file.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResPicture(System.Object,Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants,System.Globalization.CultureInfo)">
      <summary>Loads a bitmap, icon, or cursor from a resource (.res) file, specifying a locale.</summary>
      <returns>An <see cref="T:System.Object" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="restype">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.LoadResConstants" /> enumeration that specifies the resource type.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32)">
      <summary>Loads a string from a resource (.res) file.</summary>
      <returns>A <see cref="T:System.String" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.LoadResString(System.Int32,System.Globalization.CultureInfo)">
      <summary>Loads a string from a resource (.res) file, specifying a locale.</summary>
      <returns>A <see cref="T:System.String" /> that contains the resource.</returns>
      <param name="ID">An <see cref="T:System.Object" /> that specifies the data in the resource file.</param>
      <param name="Culture">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies the locale.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsX(System.Double)">
      <summary>Converts an X coordinate from pixels to twips.</summary>
      <returns>A Double that contains the X coordinate expressed in twips.</returns>
      <param name="X">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.PixelsToTwipsY(System.Double)">
      <summary>Converts a Y coordinate from pixels to twips.</summary>
      <returns>A Double that contains the Y coordinate expressed in twips.</returns>
      <param name="Y">A Double that contains the Y coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SendKeys(System.String,System.Boolean)">
      <summary>Sends one or more keystrokes to the active window as if typed at the keyboard.</summary>
      <param name="Keys">A <see cref="T:System.String" /> that contains the key values.</param>
      <param name="Wait">true to process keystrokes before control is returned to the procedure; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetCancel(System.Windows.Forms.Button,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Forms.Form.CancelButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</summary>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" />.</param>
      <param name="Cancel">true if the Visual Basic 6.0 CommandButton control's Cancel property is true; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetDefault(System.Windows.Forms.Button,System.Boolean)">
      <summary>Sets the <see cref="P:System.Windows.Forms.Form.AcceptButton" /> property of a <see cref="T:System.Windows.Forms.Form" />.</summary>
      <param name="btn">A <see cref="T:System.Windows.Forms.Button" />.</param>
      <param name="Default">true if the Visual Basic 6.0 CommandButton control's Default property is true; otherwise false.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemData(System.Windows.Forms.Control,System.Int32,System.Int32)">
      <summary>Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">The Index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
      <param name="ItemData">An Integer to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemData" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetItemString(System.Windows.Forms.Control,System.Int32,System.String)">
      <summary>Sets the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.ListBox" /><see cref="T:System.Windows.Forms.ListBox" /> or <see cref="T:System.Windows.Forms.ComboBox" /> control.</param>
      <param name="Index">The Index of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem" />.</param>
      <param name="ItemString">A <see cref="T:System.String" /> to assign to the <see cref="F:Microsoft.VisualBasic.Compatibility.VB6.ListBoxItem.ItemString" /> property.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String)">
      <summary>Assigns the name of a Visual Basic 6.0 resource file to the current Visual Basic 2010 project namespace.</summary>
      <param name="BaseFileName">A resource file (.res).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.SetResourceBaseName(System.String,System.String)">
      <summary>Assigns the name of a Visual Basic 6.0 resource file to a Visual Basic 2010 project namespace.</summary>
      <param name="ProjectNamespace">A <see cref="T:System.String" /> that contains the Namespace for the resource file.</param>
      <param name="BaseFileName">A resource file (.res).</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ShowForm(System.Windows.Forms.Form,System.Int32,System.Windows.Forms.Form)">
      <summary>Displays a form by calling either the <see cref="M:System.Windows.Forms.Control.Show" /> or <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</summary>
      <param name="Form">The <see cref="T:System.Windows.Forms.Form" /> to display.</param>
      <param name="Modal">Optional. A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.FormShowConstants" /> enumeration that specifies modality.</param>
      <param name="OwnerForm">Optional. The <paramref name="owner" /> parameter of the <see cref="M:System.Windows.Forms.Form.ShowDialog" /> method.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TabLayout(System.Object[])">
      <summary>Formats strings to simulate the Visual Basic 6.0 Debug.Print functionality.</summary>
      <returns>A formatted <see cref="T:System.String" />.</returns>
      <param name="Args">An expression or list of expressions to print.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserHeight(System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleHeight measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleHeight. </returns>
      <param name="Height">A <see cref="T:System.Double" /> that represents the height.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserWidth(System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleWidth measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleWidth. </returns>
      <param name="Width">A <see cref="T:System.Double" /> that represents the width.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserX(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleLeft measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="ScaleLeft">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleLeft for the current ScaleMode.</param>
      <param name="ScaleWidth">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleWidth for the current ScaleMode.</param>
      <param name="OriginalWidthInPixels">An Integer that represents the width in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsUserY(System.Double,System.Double,System.Double,System.Int32)">
      <summary>Converts a Visual Basic 6.0 ScaleTop measurement to a pixel measurement.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the converted Visual Basic 6.0 ScaleLeft. </returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate.</param>
      <param name="ScaleTop">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleTop for the current ScaleMode.</param>
      <param name="ScaleHeight">A <see cref="T:System.Double" /> that represents the Visual Basic 6.0 ScaleHeight for the current ScaleMode.</param>
      <param name="OriginalHeightInPixels">An Integer that represents the height in pixels.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsX(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the pixel value for the specified ScaleMode.</returns>
      <param name="X">A <see cref="T:System.Double" /> that represents the X coordinate.</param>
      <param name="FromScale"></param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ToPixelsY(System.Double,Microsoft.VisualBasic.Compatibility.VB6.ScaleMode)">
      <summary>Converts a Visual Basic 6.0 measurement to a pixel measurement for a given <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" />.</summary>
      <returns>A <see cref="T:System.Double" /> that contains the pixel value for the specified ScaleMode.</returns>
      <param name="Y">A <see cref="T:System.Double" /> that represents the Y coordinate.</param>
      <param name="FromScale">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ScaleMode" /> enumeration that represents the Visual Basic 6.0 ScaleMode to convert from.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelX">
      <summary>Gets a value that is used to convert twips to pixels based on screen settings.</summary>
      <returns>A Double that contains the conversion factor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsPerPixelY">
      <summary>Gets a value that is used to convert twips to pixels based on screen settings.</summary>
      <returns>A Double that contains the conversion factor.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsX(System.Double)">
      <summary>Converts an X coordinate from twips to pixels.</summary>
      <returns>A Double that contains the X coordinate expressed in pixels.</returns>
      <param name="X">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.TwipsToPixelsY(System.Double)">
      <summary>Converts a Y coordinate from twips to pixels.</summary>
      <returns>A Double that contains the Y coordinate expressed in pixels.</returns>
      <param name="Y">A Double that contains the X coordinate to convert.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ValidateControls(System.Windows.Forms.ContainerControl)">
      <summary>Emulates the behavior of the Visual Basic 6.0 ValidateControls method.</summary>
      <param name="Form">The <see cref="T:System.Windows.Forms.ContainerControl" /> where the control is parented.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.WhatsThisMode(System.Windows.Forms.Form)">
      <summary>Displays pop-up Help for a form upgraded from Visual Basic 6.0.</summary>
      <param name="Form">A <see cref="T:System.Windows.Forms.Form" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.Support.ZOrder(System.Windows.Forms.Control,System.Int32)">
      <summary>Converts the Visual Basic ZOrder method for use in Visual Basic 2010.</summary>
      <param name="Control">A <see cref="T:System.Windows.Forms.Control" />.</param>
      <param name="Position">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants" /> enumeration.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TabControl" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TabControl" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Deselected">
      <summary>Occurs when a tab is deselected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Deselecting">
      <summary>Occurs before a tab is deselected, enabling a handler to cancel the tab change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TabControl" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.DrawItem">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.TabControl" /> needs to paint each of its tabs if the <see cref="P:System.Windows.Forms.TabControl.DrawMode" /> property is set to <see cref="F:System.Windows.Forms.TabDrawMode.OwnerDrawFixed" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GetIndex(System.Windows.Forms.TabControl)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TabControl" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TabControl" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ResetIndex(System.Windows.Forms.TabControl)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TabControl.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Selected">
      <summary>Occurs when a tab is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SelectedIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TabControl.SelectedIndex" /> property has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Selecting">
      <summary>Occurs before a tab is selected, enabling a handler to cancel the tab change.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SetIndex(System.Windows.Forms.TabControl,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TabControl" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TabControl" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.ShouldSerializeIndex(System.Windows.Forms.TabControl)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TabControl" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TabControl" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TabControlArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TextBox" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.AcceptsTabChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.AcceptsTab" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.BorderStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBoxBase.BorderStyle" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TextBox" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CausesValidationChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TextBox" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GetIndex(System.Windows.Forms.TextBox)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TextBox" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HideSelectionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.HideSelection" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TextBox" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ModifiedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Modified" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.MultilineChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.Multiline" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ReadOnlyChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.TextBoxBase.ReadOnly" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ResetIndex(System.Windows.Forms.TextBox)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SetIndex(System.Windows.Forms.TextBox,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TextBox" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TextBox" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.ShouldSerializeIndex(System.Windows.Forms.TextBox)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TextBox" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TextBox" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TextAlignChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TextBox.TextAlign" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TextBoxArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.Timer" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.Timer" /> control.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.GetIndex(System.Windows.Forms.Timer)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.Timer" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ResetIndex(System.Windows.Forms.Timer)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.SetIndex(System.Windows.Forms.Timer,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.Timer" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.Timer" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.ShouldSerializeIndex(System.Windows.Forms.Timer)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.Timer" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TimerArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.Timer" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TimerArray.Tick">
      <summary>Occurs when the specified timer interval has elapsed and the timer is enabled.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolBar" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolBar.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBarButton" /> on the <see cref="T:System.Windows.Forms.ToolBar" /> is clicked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ButtonDropDown">
      <summary>Occurs when a drop-down style <see cref="T:System.Windows.Forms.ToolBarButton" /> or its down arrow is clicked. </summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:System.Windows.Forms.Control.ControlCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolBar" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GetIndex(System.Windows.Forms.ToolBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ResetIndex(System.Windows.Forms.ToolBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SetIndex(System.Windows.Forms.ToolBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.ShouldSerializeIndex(System.Windows.Forms.ToolBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolStrip" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.AutoSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStrip.AutoSize" /> property changes. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackgroundImageChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImage" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BackgroundImageLayoutChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackgroundImageLayout" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BeginDrag">
      <summary>Occurs when the user starts to drag the <see cref="T:System.Windows.Forms.ToolStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolStrip" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStrip" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.EndDrag">
      <summary>Occurs when the user stops dragging the <see cref="T:System.Windows.Forms.ToolStrip" /> control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GetIndex(System.Windows.Forms.ToolStrip)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStrip" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStrip" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemAdded">
      <summary>Occurs when a new <see cref="T:System.Windows.Forms.ToolStripItem" /> is added to the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripItem" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ItemRemoved">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripItem" /> is removed from the <see cref="T:System.Windows.Forms.ToolStripItemCollection" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LayoutCompleted">
      <summary>Occurs when the layout of the <see cref="T:System.Windows.Forms.ToolStrip" /> is complete.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LayoutStyleChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.ToolStrip.LayoutStyle" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Paint">
      <summary>Occurs when the control is redrawn.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.PaintGrip">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStrip" /> move handle is painted.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ResetIndex(System.Windows.Forms.ToolStrip)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Scroll">
      <summary>Occurs when the user or code scrolls through the client area.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SetIndex(System.Windows.Forms.ToolStrip,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolStrip" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStrip" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.ShouldSerializeIndex(System.Windows.Forms.ToolStrip)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolStrip" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStrip" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ComboBoxArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CheckedChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.Checked" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.CheckStateChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.CheckBox.CheckState" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DisplayStyleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.DisplayStyle" /> has changed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownClosed">
      <summary>Occurs when the drop-down part of the <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> is no longer visible.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownItemClicked">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownOpened">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> has opened.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.DropDownOpening">
      <summary>Occurs as the <see cref="T:System.Windows.Forms.ToolStripDropDown" /> is opening. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.GetIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.OwnerChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ToolStripItem.Owner" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.Paint">
      <summary>Occurs when the item is redrawn. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ResetIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.SetIndex(System.Windows.Forms.ToolStripMenuItem,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.ToolStripMenuItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.ShouldSerializeIndex(System.Windows.Forms.ToolStripMenuItem)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.ToolStripMenuItem" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.TextChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Text" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.ToolStripMenuItemArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.TreeView" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterCheck">
      <summary>Occurs after the tree node check box is selected. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterCollapse">
      <summary>Occurs after the tree node is collapsed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterExpand">
      <summary>Occurs after the tree node is expanded. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterLabelEdit">
      <summary>Occurs when the label for an item is edited by the user. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.AfterSelect">
      <summary>Occurs after the tree node is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BackColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BackColor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeCheck">
      <summary>Occurs before the tree node check box is checked. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeCollapse">
      <summary>Occurs before the tree node is collapsed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeExpand">
      <summary>Occurs before the tree node is expanded. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeLabelEdit">
      <summary>Occurs before the tree node label text is edited. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BeforeSelect">
      <summary>Occurs before the tree node is selected.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.TreeView" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Click">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> is clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DoubleClick">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> control in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> is double-clicked.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.DrawNode">
      <summary>Occurs when a <see cref="T:System.Windows.Forms.TreeView" /> is drawn and the <see cref="P:System.Windows.Forms.TreeView.DrawMode" /> property is set to a <see cref="T:System.Windows.Forms.TreeViewDrawMode" /> value other than Normal. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.FontChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Font" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ForeColorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GetIndex(System.Windows.Forms.TreeView)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TreeView" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.HelpRequested">
      <summary>Occurs when the user requests help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ImeModeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ImeMode" /> property changes.</summary>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.TreeView" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ItemDrag">
      <summary>Occurs when the user starts dragging a node.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseClick">
      <summary>Occurs when the control is clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseDoubleClick">
      <summary>Occurs when the control is double-clicked by the mouse.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseDown">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is pressed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.MouseUp">
      <summary>Occurs when the mouse pointer is over the control and a mouse button is released.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseClick">
      <summary>Occurs when the user clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseDoubleClick">
      <summary>Occurs when the user double-clicks a <see cref="T:System.Windows.Forms.TreeNode" /> with the mouse. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.NodeMouseHover">
      <summary>Occurs when the mouse hovers over a <see cref="T:System.Windows.Forms.TreeNode" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ResetIndex(System.Windows.Forms.TreeView)">
      <summary>Not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftChanged">
      <summary>Occurs when the <see cref="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftChanged" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.RightToLeftLayoutChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.TreeView.RightToLeftLayout" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SetIndex(System.Windows.Forms.TreeView,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.TreeView" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.TreeView" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.ShouldSerializeIndex(System.Windows.Forms.TreeView)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.TreeView" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.TreeView" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.TreeViewArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.VScrollBar" /> controls.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.BindingContextChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.BindingContext" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.VScrollBar" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ChangeUICues">
      <summary>Occurs when the focus or keyboard user interface (UI) cues change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.CursorChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Cursor" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragDrop">
      <summary>Occurs when a drag-and-drop operation is completed.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragEnter">
      <summary>Occurs when an object is dragged into the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragLeave">
      <summary>Occurs when an object is dragged out of the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.DragOver">
      <summary>Occurs when an object is dragged over the control's bounds.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.EnabledChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Enabled" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Enter">
      <summary>Occurs when the control is entered.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GetIndex(System.Windows.Forms.VScrollBar)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.VScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="o">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.GiveFeedback">
      <summary>Occurs during a drag operation.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.HelpRequested">
      <summary>Occurs when the user requests Help for a control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.HookUpControlEvents(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> control.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.VScrollBar" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyDown">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyPress">
      <summary>Occurs when a key is pressed and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.KeyUp">
      <summary>Occurs when a key is released and the control has focus.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Layout">
      <summary>Occurs when a control should reposition its child controls.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Leave">
      <summary>Occurs when the input focus leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseCaptureChanged">
      <summary>Occurs when the control loses or gains mouse capture.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseEnter">
      <summary>Occurs when the mouse pointer enters the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseHover">
      <summary>Occurs when the mouse pointer rests on the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the control.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.PaddingChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Padding" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.QueryAccessibilityHelp">
      <summary>Occurs when an <see cref="T:System.Windows.Forms.AccessibleObject" /> is providing Help to accessibility applications.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.QueryContinueDrag">
      <summary>Occurs during a drag-and-drop operation and enables the drag source to determine whether the drag-and-drop operation should be canceled.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ResetIndex(System.Windows.Forms.VScrollBar)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Scroll">
      <summary>Occurs when the user scrolls the <see cref="T:System.Windows.Forms.VScrollBar" /> control.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SetIndex(System.Windows.Forms.VScrollBar,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.VScrollBar" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.VScrollBar" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ShouldSerializeIndex(System.Windows.Forms.VScrollBar)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.VScrollBar" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.VScrollBar" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.StyleChanged">
      <summary>Occurs when the control style changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.TabIndexChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabIndex" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.TabStopChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.TabStop" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.ValueChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.ScrollBar.Value" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.VScrollBarArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray">
      <summary>Provides a control array of <see cref="T:System.Windows.Forms.WebBrowser" /> controls</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class, specifying its container.</summary>
      <param name="Container">The <see cref="T:System.ComponentModel.IContainer" /> where the control array will be hosted.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.CanExtend(System.Object)">
      <summary>Gets a value that determines whether a control is a member of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <returns>true if <paramref name="target" /> is a member of the control array; otherwise false.</returns>
      <param name="target">A <see cref="T:System.Windows.Forms.WebBrowser" /> control.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.CausesValidationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.CausesValidation" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ClientSizeChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ClientSize" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ContextMenuChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenu" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ContextMenuStripChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.ContextMenuStrip" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ControlAdded">
      <summary>Occurs when a new control is added to the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ControlRemoved">
      <summary>Occurs when a control is removed from the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.DockChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Dock" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.DocumentCompleted">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control finishes loading a document.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.FileDownload">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control downloads a file.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.GetControlInstanceType">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.GetControlInstanceType" />.</summary>
      <returns>A <see cref="T:System.Type" />.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.GetIndex(System.Windows.Forms.WebBrowser)">
      <summary>Gets the index of a <see cref="T:System.Windows.Forms.WebBrowser" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <returns>A Short that represents the index of the specified <see cref="T:System.Windows.Forms.WebBrowser" />.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.HookUpControlEvents(System.Object)">
      <summary>Overrides <see cref="M:Microsoft.VisualBasic.Compatibility.VB6.BaseControlArray.HookUpControlEvents(System.Object)" />.</summary>
      <param name="o">An <see cref="T:System.Object" />.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Item(System.Int16)">
      <summary>Gets a specific element of a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> by index. Read-only.</summary>
      <returns>A <see cref="T:System.Windows.Forms.WebBrowser" /> at the specified <paramref name="Index" /> in the control array.</returns>
      <param name="Index">A Short that specifies the position of an element of the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.LocationChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Location" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.MarginChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Margin" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Move">
      <summary>Occurs when the control is moved.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Navigated">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has navigated to a new document and has begun loading it. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Navigating">
      <summary>Occurs before the <see cref="T:System.Windows.Forms.WebBrowser" /> control navigates to a new document.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.NewWindow">
      <summary>Occurs before a new browser window is opened.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ParentChanged">
      <summary>Occurs when the control's <see cref="P:System.Windows.Forms.Control.Parent" /> property changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ProgressChanged">
      <summary>Occurs when the <see cref="T:System.Windows.Forms.WebBrowser" /> control has updated information about the download progress of a document that it is navigating to. </summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.RegionChanged">
      <summary>Occurs when the value of the <see cref="P:System.Windows.Forms.Control.Region" /> property changes.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ResetIndex(System.Windows.Forms.WebBrowser)">
      <summary>The ResetIndex method is not supported in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" /> class.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.Control" />.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Resize">
      <summary>Occurs when the control is resized.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SetIndex(System.Windows.Forms.WebBrowser,System.Int16)">
      <summary>Sets the index of the initial <see cref="T:System.Windows.Forms.WebBrowser" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />.</summary>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
      <param name="Index">A Short that represents the index of the specified <see cref="T:System.Windows.Forms.WebBrowser" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.ShouldSerializeIndex(System.Windows.Forms.WebBrowser)">
      <summary>Returns a value that indicates whether a <see cref="T:System.Windows.Forms.WebBrowser" /> is a member of this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray" />. </summary>
      <returns>true if <paramref name="o" /> is a member of this control array; otherwise, false.</returns>
      <param name="o">A <see cref="T:System.Windows.Forms.WebBrowser" /> in the control array.</param>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SizeChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Size" /> property value changes.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.SystemColorsChanged">
      <summary>Occurs when the system colors change.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Validated">
      <summary>Occurs when the control is finished validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.Validating">
      <summary>Occurs when the control is validating.</summary>
    </member>
    <member name="E:Microsoft.VisualBasic.Compatibility.VB6.WebBrowserArray.VisibleChanged">
      <summary>Occurs when the <see cref="P:System.Windows.Forms.Control.Visible" /> property value changes.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass">
      <summary>Enables upgraded Visual Basic 6.0 WebClass projects to run in ASP.NET.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.#ctor(System.String,System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> class.</summary>
      <param name="UserWebClassName">A <see cref="T:System.String" /> that contains the Name property for the Visual Basic 6.0 WebClass object.</param>
      <param name="WebClassFileName">A <see cref="T:System.String" /> that contains the file name for the Visual Basic 6.0 WebClass object.</param>
      <param name="ContainingClass">A <see cref="T:System.String" /> that contains the Application property for the Visual Basic 6.0 WebClass object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.Name">
      <summary>Gets the name that is used in code to identify a WebClass object. </summary>
      <returns>A <see cref="T:System.String" /> that contains the name for the WebClass object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.NextItem">
      <summary>Gets or sets another <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object in the current <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> object. </summary>
      <returns>A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.ProcessEvents(System.Web.HttpRequest)">
      <summary>Renders a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
      <param name="Request">An <see cref="T:System.Web.HttpRequest" /> object.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebClass.UrlData">
      <summary>Gets or sets a parameter that is appended to the end of any URL that is generated by using the <see cref="Overload:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor" /> method.</summary>
      <returns>A <see cref="T:System.String" /> that contains the parameter that will be appended.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor(Microsoft.VisualBasic.Compatibility.VB6.WebItem,System.String)">
      <summary>Specifies the URL that the system must have to reference a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in the browser.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URL.</returns>
      <param name="obj">A <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object for which you want to generate a URL and raise an event.</param>
      <param name="EventName">Optional. A <see cref="T:System.String" /> that refers to an event in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClass.URLFor(System.String,System.String)">
      <summary>Specifies the URL that the system must have to reference a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /><see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> in the browser.</summary>
      <returns>A <see cref="T:System.String" /> that contains the URL.</returns>
      <param name="objName">A <see cref="T:System.String" /> that contains the name of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object for which you want to generate a URL and raise an event.</param>
      <param name="EventName">Optional. A <see cref="T:System.String" /> that refers to an event in the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the ContainingClass value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassContainingClassNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent">
      <summary>Raises an <see cref="T:System.Exception" /> for a missing event parameter in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassCouldNotFindEvent" /> class.</summary>
      <param name="eventName">A <see cref="T:System.String" /> that contains the name of the missing event parameter.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem">
      <summary>Raises an <see cref="T:System.Exception" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemCannotBeCurrentWebItem" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound">
      <summary>Raises an <see cref="T:System.Exception" /> in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" />.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassNextItemRespondNotFound" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the UserWebClassName value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassUserWebClassNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the WebClassFileName value is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebClassFileNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid">
      <summary>Raises an <see cref="T:System.Exception" /> if the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> value is not valid.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClassWebItemNotValid" /> class.</summary>
      <param name="itemName">A String that represents the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem">
      <summary>Enables upgraded Visual Basic 6.0 WebClass projects to run in ASP.NET.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItem.#ctor(System.String,Microsoft.VisualBasic.Compatibility.VB6.WebClass,System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> class.</summary>
      <param name="Name">A <see cref="T:System.String" /> that contains the Name property for the Visual Basic 6.0 WebClass object.</param>
      <param name="AssociatedWebClass">The <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebClass" /> object that contains this <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" />.</param>
      <param name="HtmlTemplateFilename">Optional. The file name of a Visual Basic 6.0 Template that was associated with the Visual Basic 6.0 WebItem.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.Name">
      <summary>Gets the name that is used in code to identify a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</summary>
      <returns>A <see cref="T:System.String" /> that contains the name for the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> object.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.ReScanReplacements">
      <summary>Gets or sets a value that determines whether to rescan for tokens that are contained within replacement text. </summary>
      <returns>true if the text should be rescanned; otherwise false. The default is false.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Compatibility.VB6.WebItem.TagPrefix">
      <summary>Gets or sets the string that is used to prefix replacement tag names in an HTML template.</summary>
      <returns>A <see cref="T:System.String" /> that identifies the TagPrefix sequence used to recognize replacement tags in an HTML template.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItem.WriteTemplate(System.Web.HttpResponse,System.String)">
      <summary>Processes an HTML template attached to a WebItem object and returns it to the browser.</summary>
      <param name="Response">A <see cref="T:System.Web.HttpResponse" /> object.</param>
      <param name="HtmlTemplateFilename">Optional. The file name of a Visual Basic 6.0 Template that was associated with the Visual Basic 6.0 WebItem.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the AssociatedWebClass value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemAssociatedWebClassNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound">
      <summary>Raises an <see cref="T:System.Exception" /> if the closing tag for a template associated with a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemClosingTagNotFound" /> class.</summary>
      <param name="TagName">A <see cref="T:System.String" /> that contains the name of the tag.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource">
      <summary>Raises an <see cref="T:System.Exception" /> when an embedded resource specified in a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadEmbeddedResource" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile">
      <summary>Raises an <see cref="T:System.Exception" /> if a template file for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemCouldNotLoadTemplateFile" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional">
      <summary>Raises an <see cref="T:System.Exception" /> if the Name value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNameNotOptional" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified">
      <summary>Raises an <see cref="T:System.Exception" /> if the Template value for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> is missing.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemNoTemplateSpecified" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags">
      <summary>Raises an <see cref="T:System.Exception" /> if the template for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> contains too many nested tags.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemTooManyNestedTags" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile">
      <summary>Raises an <see cref="T:System.Exception" /> if the template for a <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItem" /> cannot be opened or read.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Compatibility.VB6.WebItemUnexpectedErrorReadingTemplateFile" /> class.</summary>
      <param name="innerMessage">A <see cref="T:System.String" /> that contains the error message.</param>
    </member>
    <member name="T:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants">
      <summary>Provides constants for compatibility with the Visual Basic 6.0 ZOrder method.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants.BringToFront">
      <summary>Equivalent to the Visual Basic 6.0 constant vbBringToFront.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.Compatibility.VB6.ZOrderConstants.SendToBack">
      <summary>Equivalent to the Visual Basic 6.0 constant vbSend ToBack.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.VisualC.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualC</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualC.DebugInfoInPDBAttribute">
      <summary>An attribute applied to native classes that tells the debugger to look up field information in the pdb rather than in metadata.</summary>
    </member>
    <member name="M:Microsoft.VisualC.DebugInfoInPDBAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualC.DebugInfoInPDBAttribute" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualC.DecoratedNameAttribute">
      <summary>An attribute used by the compiler to pass the decorated name of a method to the linker.</summary>
    </member>
    <member name="M:Microsoft.VisualC.DecoratedNameAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualC.DecoratedNameAttribute" /> class.</summary>
    </member>
    <member name="M:Microsoft.VisualC.DecoratedNameAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualC.DecoratedNameAttribute" /> class using the specified decorated name.</summary>
      <param name="decoratedName">The decorated name of a method.</param>
    </member>
    <member name="T:Microsoft.VisualC.IsConstModifier">
      <summary>Is const modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.IsConstModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.VisualC.IsCXXReferenceModifier">
      <summary>Is C++ reference modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.IsCXXReferenceModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.VisualC.IsLongModifier">
      <summary>Is long modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.IsLongModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.VisualC.IsSignedModifier">
      <summary>Is signed modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.IsSignedModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.VisualC.IsVolatileModifier">
      <summary>Is volatile modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.IsVolatileModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
    <member name="T:Microsoft.VisualC.MiscellaneousBitsAttribute">
      <summary>An attribute that stores miscellaneous information about a type in metadata.</summary>
    </member>
    <member name="M:Microsoft.VisualC.MiscellaneousBitsAttribute.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualC.MiscellaneousBitsAttribute" /> class using the specified bit mask.</summary>
      <param name="miscellaneousBits">A bit mask containing information about a type.</param>
    </member>
    <member name="F:Microsoft.VisualC.MiscellaneousBitsAttribute.m_dwAttrs">
      <summary>A bit mask containing information about a type.</summary>
    </member>
    <member name="T:Microsoft.VisualC.NeedsCopyConstructorModifier">
      <summary>A custom modifier applied to parameters that tells the CLR marshaler to call the parameter's copy constructor when marshaling the parameter.</summary>
    </member>
    <member name="M:Microsoft.VisualC.NeedsCopyConstructorModifier.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.VisualC.NeedsCopyConstructorModifier" /> class.</summary>
    </member>
    <member name="T:Microsoft.VisualC.NoSignSpecifiedModifier">
      <summary>No sign specified modifier.</summary>
    </member>
    <member name="M:Microsoft.VisualC.NoSignSpecifiedModifier.#ctor">
      <summary>Constructor.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationCFFRasterizer.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
	<assembly>
		<name>PresentationCFFRasterizer</name>
	</assembly>
	<members />
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationBuildTasks.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationBuildTasks</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Build.Tasks.Windows.FileClassifier">
      <summary>Implements the FileClassifer task. Use the FileClassifer element in your project file to create and execute this task. For usage and parameter information, see FileClassifier Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.FileClassifier.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLREmbeddedResource"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLRResourceFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.CLRSatelliteEmbeddedResource"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.Culture"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.FileClassifier.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.MainEmbeddedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.SatelliteEmbeddedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.FileClassifier.SourceFiles"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly">
      <summary>Implements the GenerateTemporaryTargetAssembly task. Use the GenerateTemporaryTargetAssembly element in your project file to create and execute this task. For usage and parameter information, see GenerateTemporaryTargetAssembly Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.AssemblyName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CompileTargetName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CompileTypeName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.CurrentProject"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.GeneratedCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.IntermediateOutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.MSBuildBinPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.ReferencePath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GenerateTemporaryTargetAssembly.ReferencePathTypeName"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.GetWinFXPath">
      <summary>Implements the GetWinFXPath task. Use the GetWinFXPath element in your project file to create and execute this task. For usage and parameter information, see GetWinFXPath Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.GetWinFXPath.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXNativePath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.GetWinFXPath.WinFXWowPath"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1">
      <summary>Implements the MarkupCompilePass1 task. Use the MarkupCompilePass1 element in your project file to create and execute this task. For usage and parameter information, see MarkupCompilePass1 Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen">
      <summary>The task that corresponds to the splash screen image to be displayed before application initialization.</summary>
      <returns>The task that corresponds to the splash screen image.</returns>
    </member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass2">
      <summary>Implements the MarkupCompilePass2 task. Use the MarkupCompilePass2 element in your project file to create and execute this task. For usage and parameter information, see MarkupCompilePass2 Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AlwaysCompileMarkupFilesInSeparateDomain"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssembliesGeneratedDuringBuild"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.AssemblyName"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.GeneratedBaml"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.KnownReferencePaths"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.Language"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.LocalizationDirectivesToLocFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.OutputType"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.References"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.RootNamespace"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass2.XamlDebuggingInformation"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives">
      <summary>Implements the MergeLocalizationDirectives task. Use the MergeLocalizationDirectives element in your project file to create and execute this task. For usage and parameter information, see MergeLocalizationDirectives Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.GeneratedLocalizationFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.MergeLocalizationDirectives.OutputFile"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.ResourcesGenerator">
      <summary>Implements the ResourcesGenerator task. Use the ResourcesGenerator element in your project file to create and execute this task. For usage and parameter information, see ResourcesGenerator Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.ResourcesGenerator.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.ResourcesGenerator.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.OutputPath"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.OutputResourcesFile"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.ResourcesGenerator.ResourceFiles"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.UidManager">
      <summary>Implements the UidManager task. Use the UidManager element in your project file to create and execute this task. For usage and parameter information, see UidManager Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.UidManager.#ctor"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.UidManager.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.IntermediateDirectory"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.MarkupFiles"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UidManager.Task"></member>
    <member name="T:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication">
      <summary>Implements the UpdateManifestForBrowserApplication task. Use the UpdateManifestForBrowserApplication element in your project file to create and execute this task. For usage and parameter information, see UpdateManifestForBrowserApplication Task.</summary>
    </member>
    <member name="M:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.#ctor"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.ApplicationManifest"></member>
    <member name="M:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.Execute"></member>
    <member name="P:Microsoft.Build.Tasks.Windows.UpdateManifestForBrowserApplication.HostInBrowser"></member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationFramework.Luna.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Luna</name>
  </assembly>
  <members>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor">
      <summary>Gets or sets the theme color.  </summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.ThemeColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.ThemeColor" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.ThemeColor"></member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.ThemeColorProperty"></member>
    <member name="T:Microsoft.Windows.Themes.ScrollChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ScrollChrome" /> class.    </summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.GetScrollGlyph(System.Windows.DependencyObject)">
      <summary>Gets the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> for the specified object.    </summary>
      <returns>One of the enumeration values.   </returns>
      <param name="element">The dependency object to which the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> is attached.   </param>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> renders with a white outer border.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> renders with a white outer border; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorderProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.HasOuterBorder" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.Padding">
      <summary>Gets or sets a value that describes the amount of space between a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and its child element.  </summary>
      <returns>A <see cref="T:System.Windows.Thickness" /> value that describes the amount of space between a <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> and its child element.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.PaddingProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.Padding" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.Padding" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears pressed.</summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.ScrollGlyphProperty">
      <summary>Identifies the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> attached property.   </summary>
      <returns>The <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> attached property identifier. </returns>
    </member>
    <member name="M:Microsoft.Windows.Themes.ScrollChrome.SetScrollGlyph(System.Windows.DependencyObject,Microsoft.Windows.Themes.ScrollGlyph)">
      <summary>Sets the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> on the specified object.</summary>
      <param name="element">The dependency object to which the <see cref="T:Microsoft.Windows.Themes.ScrollGlyph" /> is attached.   </param>
      <param name="value">One of the enumeration values.   </param>
    </member>
    <member name="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor">
      <summary>Gets or sets the color of the theme. </summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollChrome.ThemeColorProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ScrollChrome.ThemeColor" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ScrollGlyph">
      <summary>Describes the glyphs used to represent the <see cref="T:System.Windows.Controls.Primitives.Thumb" />.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.None">
      <summary>No glyph is used. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.LeftArrow">
      <summary>An arrow glyph pointing to the left.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.RightArrow">
      <summary>An arrow glyph pointing to the right.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.UpArrow">
      <summary>An arrow glyph pointing up.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.DownArrow">
      <summary>An arrow glyph pointing down.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.VerticalGripper">
      <summary>A vertical gripper glyph.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ScrollGlyph.HorizontalGripper">
      <summary> horizontal gripper glyph.</summary>
    </member>
    <member name="T:Microsoft.Windows.Themes.ThemeColor">
      <summary>Represents possible color variants for the Microsoft themes. </summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.NormalColor">
      <summary>Used by the Luna, Aero, and Classic themes; the localized color name is Blue.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.Homestead">
      <summary>Used by the Luna theme; the localized color name is Olive.</summary>
    </member>
    <member name="F:Microsoft.Windows.Themes.ThemeColor.Metallic">
      <summary>Used by the Luna theme; the localized color name is Sliver.</summary>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\PresentationFramework.Aero.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PresentationFramework.Aero</name>
  </assembly>
  <members>
    <member name="T:Microsoft.Windows.Themes.ButtonChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.Button" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ButtonChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.BulletChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="T:System.Windows.Controls.Button" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="T:System.Windows.Controls.Button" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="T:System.Windows.Controls.Button" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> has the appearance of the default button on the form.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> has the appearance of the default button; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderDefaultedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderDefaulted" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> appears pressed.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> appears pressed; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RenderPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RenderPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.Button" /> has round corners.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.Button" /> has round corners; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ButtonChrome.RoundCornersProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ButtonChrome.RoundCorners" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.DataGridHeaderBorder">
      <summary>Creates the theme specific-look for headers in .NET Framework version 4 <see cref="T:System.Windows.Controls.DataGrid" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.DataGridHeaderBorder.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.DataGridHeaderBorder" /> class. </summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable">
      <summary>Gets or sets a value that indicates whether the header is clickable.</summary>
      <returns>true if the header clickable; otherwise, false. The registered default is true. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickableProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsClickable" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered">
      <summary>Gets or sets a value that indicates whether the header appears as if the mouse pointer is moved over it.</summary>
      <returns>true if the header appears as if the mouse pointer is moved over it; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHoveredProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsHovered" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed">
      <summary>Gets or sets a value that indicates whether the header appears pressed.</summary>
      <returns>true if the header appears pressed; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsPressed" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected">
      <summary>Gets or sets a value that indicates whether the header appears selected.</summary>
      <returns>true if the header appears selected; otherwise, false. The registered default is false. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelectedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.IsSelected" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation">
      <summary>Gets or sets whether the header renders in the vertical direction, as a column header, or horizontal direction, as a row header.</summary>
      <returns>One of the enumeration values that indicates which direction the header renders. The registered default is <see cref="F:System.Windows.Controls.Orientation.Vertical" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.OrientationProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.Orientation" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush">
      <summary>Gets or sets the brush that draws the separation between headers.</summary>
      <returns>The brush that draws the separation between headers. The registered default is null. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility">
      <summary>Gets or sets the value that indicates whether the separation between headers is visible.</summary>
      <returns>One of the enumeration values that indicates whether the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorBrush" /> is visible. The registered default is <see cref="F:System.Windows.Visibility.Visible" />. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibilityProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SeparatorVisibility" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection">
      <summary>Gets or sets the header sort direction.</summary>
      <returns>One of the enumeration values that indicates which direction the column is sorted. The registered default is null. For more information about what can influence the value, see <see cref="T:System.Windows.DependencyProperty" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirectionProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.DataGridHeaderBorder.SortDirection" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ListBoxChrome">
      <summary>Creates the theme-specific look for Microsoft .NET Framework <see cref="T:System.Windows.Controls.ListBox" /> elements.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ListBoxChrome.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ListBoxChrome" /> class.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.Background">
      <summary>Gets or sets the brush used to fill the background of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The brush used to fill the background of the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BackgroundProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.Background" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.Background" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush">
      <summary>Gets or sets the brush used to draw the outer border of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The brush used to draw the outer border of the <see cref="T:System.Windows.Controls.ListBox" />.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BorderBrushProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderBrush" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness">
      <summary>Gets or sets the thickness of the border of the <see cref="T:System.Windows.Controls.ListBox" />.  </summary>
      <returns>The thickness of the border.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.BorderThicknessProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.BorderThickness" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.ListBox" /> appears as if it has keyboard focus.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ListBox" /> appears as if it has keyboard focus; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.RenderFocusedProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderFocused" /> dependency property.</returns>
    </member>
    <member name="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver">
      <summary>Gets or sets a value indicating whether the <see cref="T:System.Windows.Controls.ListBox" /> appears as if the mouse is over it.  </summary>
      <returns>true if the <see cref="T:System.Windows.Controls.ListBox" /> appears as if the mouse is over it; otherwise false.</returns>
    </member>
    <member name="F:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOverProperty">
      <summary>Identifies the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver" /> dependency property.</summary>
      <returns>The identifier for the <see cref="P:Microsoft.Windows.Themes.ListBoxChrome.RenderMouseOver" /> dependency property.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.PlatformCulture">
      <summary>Provides culture-specific information used by the Microsoft .NET Framework system themes.</summary>
    </member>
    <member name="P:Microsoft.Windows.Themes.PlatformCulture.FlowDirection">
      <summary>Gets a value that specifies whether the primary text advance direction shall be left-to-right, right-to-left, or top-to-bottom.</summary>
      <returns>One of the enumeration values.</returns>
    </member>
    <member name="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter">
      <summary>Creates a <see cref="T:System.Windows.Media.DrawingBrush" /> used to draw the highlighting for the <see cref="T:System.Windows.Controls.ProgressBar" />.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:Microsoft.Windows.Themes.ProgressBarHighlightConverter" /> class.</summary>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Creates the <see cref="T:System.Windows.Media.DrawingBrush" />.</summary>
      <returns>The <see cref="T:System.Windows.Media.DrawingBrush" />. </returns>
      <param name="values">The <see cref="T:System.Windows.Media.Brush" /> used for the <see cref="P:System.Windows.Controls.Control.Foreground" /> of the <see cref="T:System.Windows.Controls.ProgressBar" />, the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Width" />, and the <see cref="T:System.Double" /> defining the <see cref="P:System.Windows.FrameworkElement.Height" />. </param>
      <param name="targetType">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
    <member name="M:Microsoft.Windows.Themes.ProgressBarHighlightConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)">
      <summary>Not implemented.</summary>
      <returns>null.</returns>
      <param name="value">This parameter is not used.</param>
      <param name="targetTypes">This parameter is not used.</param>
      <param name="parameter">This parameter is not used.</param>
      <param name="culture">This parameter is not used.</param>
    </member>
  </members>
</doc>
=== C:/Users/treeman/Desktop/windows nt source code\xbox\Xbox Live Source\XONLINE_MAIN\public\ext\sdk\CLR\netfx40rtm\Profile\Client\Microsoft.VisualBasic.xml ===
﻿<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.VisualBasic</name>
  </assembly>
  <members>
    <member name="T:Microsoft.VisualBasic.AppWinStyle">
      <summary>Indicates the window style to use for the invoked program when calling the Shell function.</summary>
      <filterpriority>2</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.Hide">
      <summary>Window is hidden and focus is passed to the hidden window. This member is equivalent to the Visual Basic constant vbHide.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalFocus">
      <summary>Window has focus and is restored to its original size and position. This member is equivalent to the Visual Basic constant vbNormalFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedFocus">
      <summary>Window is displayed as an icon with focus. This member is equivalent to the Visual Basic constant vbMinimizedFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MaximizedFocus">
      <summary>Window is maximized with focus. This member is equivalent to the Visual Basic constant vbMaximizedFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.NormalNoFocus">
      <summary>Window is restored to its most recent size and position. The currently active window remains active. This member is equivalent to the Visual Basic constant vbNormalNoFocus.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AppWinStyle.MinimizedNoFocus">
      <summary>Window is displayed as an icon. The currently active window remains active. This member is equivalent to the Visual Basic constant vbMinimizedNoFocus.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.AudioPlayMode">
      <summary>Indicates how to play sounds when calling audio methods.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.WaitToComplete">
      <summary>Causes the My.Computer.Audio.Play method to play the sound, and waits until it completes before calling code continues.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.Background">
      <summary>Causes the My.Computer.Audio.Play method to play the sound in the background. The calling code continues to execute.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.AudioPlayMode.BackgroundLoop">
      <summary>Causes the My.Computer.Audio.Play method to play the sound in the background until the <see cref="M:Microsoft.VisualBasic.Devices.Audio.Stop" /> method is called. The calling code continues to execute.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.CallType">
      <summary>Indicates the type of procedure being invoked when calling the CallByName function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Method">
      <summary>A method is being invoked.  This member is equivalent to the Visual Basic constant vbMethod.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Get">
      <summary>A property value is being retrieved.  This member is equivalent to the Visual Basic constant vbGet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Let">
      <summary>An Object property value is being determined. This member is equivalent to the Visual Basic constant vbLet.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CallType.Set">
      <summary>A property value is being determined.  This member is equivalent to the Visual Basic constant vbSet.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Collection">
      <summary>A Visual Basic Collection is an ordered set of items that can be referred to as a unit.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.#ctor">
      <summary>Creates and returns a new Visual Basic <see cref="T:Microsoft.VisualBasic.Collection" /> object.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Add(System.Object,System.String,System.Object,System.Object)">
      <summary>Adds an element to a Collection object.</summary>
      <param name="Item">Required. An object of any type that specifies the element to add to the collection.</param>
      <param name="Key">Optional. A unique String expression that specifies a key string that can be used instead of a positional index to access this new element in the collection.</param>
      <param name="Before">Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection before the element identified by the <paramref name="Before" /> argument. If <paramref name="Before" /> is a numeric expression, it must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. If <paramref name="Before" /> is a String expression, it must correspond to the key string specified when the element being referred to was added to the collection. You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</param>
      <param name="After">Optional. An expression that specifies a relative position in the collection. The element to be added is placed in the collection after the element identified by the <paramref name="After" /> argument. If <paramref name="After" /> is a numeric expression, it must be a number from 1 through the value of the collection's Count property. If <paramref name="After" /> is a String expression, it must correspond to the key string specified when the element referred to was added to the collection. You cannot specify both <paramref name="Before" /> and <paramref name="After" />.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Clear">
      <summary>Deletes all elements of a Visual Basic Collection object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Contains(System.String)">
      <summary>Returns a Boolean value indicating whether a Visual Basic Collection object contains an element with a specific key.</summary>
      <returns>Returns a Boolean value indicating whether a Visual Basic Collection object contains an element with a specific key.</returns>
      <param name="Key">Required. A String expression that specifies the key for which to search the elements of the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Count">
      <summary>Returns an Integer containing the number of elements in a collection. Read-only.</summary>
      <returns>Returns an Integer containing the number of elements in a collection. Read-only.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.GetEnumerator">
      <summary>Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</summary>
      <returns>Returns a reference to an enumerator object, which is used to iterate over a <see cref="T:Microsoft.VisualBasic.Collection" /> object.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Returns the data needed to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface.</summary>
      <param name="info">A <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object containing the information required to serialize the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <param name="context">A <see cref="T:System.Runtime.Serialization.StreamingContext" /> object containing the source and destination of the serialized stream associated with the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <summary>Copies the elements of the <see cref="T:Microsoft.VisualBasic.Collection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <param name="array">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:Microsoft.VisualBasic.Collection" /> object. The <see cref="T:System.Array" /> must have zero-based indexing. </param>
      <param name="index">The zero-based index in <paramref name="array" /> at which copying begins. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is null. </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero. </exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> is multidimensional.-or- The number of elements in the source <see cref="T:Microsoft.VisualBasic.Collection" /> object is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</exception>
      <exception cref="T:System.InvalidCastException">The type of the source <see cref="T:Microsoft.VisualBasic.Collection" /> object cannot be cast automatically to the type of the destination <paramref name="array" />. </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#Count">
      <summary>Gets the number of items in this collection. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>The number of items in this collection.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#IsSynchronized">
      <summary>Gets a value indicating whether access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread safe). Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>Returns True if access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object is synchronized (thread safe); otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#ICollection#SyncRoot">
      <summary>Gets an object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.ICollection" /> interface.</summary>
      <returns>An object that can be used to synchronize access to the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</returns>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Add(System.Object)">
      <summary>Adds an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The position into which the new element was inserted.</returns>
      <param name="value">The <see cref="T:System.Object" /> to add to the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Clear">
      <summary>Removes all items from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.IList" /> is read-only. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Contains(System.Object)">
      <summary>Determines whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object contains a specific value. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:System.Object" /> is found in the <see cref="T:Microsoft.VisualBasic.Collection" /> object; otherwise, False.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#IndexOf(System.Object)">
      <summary>Determines the index of a specific item in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>The index of <paramref name="value" /> if found in the collection; otherwise, -1.</returns>
      <param name="value">The <see cref="T:System.Object" /> to locate in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Insert(System.Int32,System.Object)">
      <summary>Inserts an item to the <see cref="T:Microsoft.VisualBasic.Collection" /> object at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The zero-based index at which <paramref name="value" /> should be inserted. </param>
      <param name="value">The <see cref="T:System.Object" /> to insert into the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
      <exception cref="T:System.NullReferenceException">
        <paramref name="value" /> is null reference in the <see cref="T:Microsoft.VisualBasic.Collection" /> object.</exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsFixedSize">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <returns>Returns True if the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only; otherwise, False.</returns>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.System#Collections#IList#Item(System.Int32)">
      <summary>Gets or sets the element at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface</summary>
      <returns>The element at the specified index.</returns>
      <param name="index">The zero-based index of the element to get or set. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#Remove(System.Object)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="value">The <see cref="T:System.Object" /> to remove from the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Collections#IList#RemoveAt(System.Int32)">
      <summary>Removes the <see cref="T:Microsoft.VisualBasic.Collection" /> object item at the specified index. Implements the <see cref="T:System.Collections.IList" /> interface.</summary>
      <param name="index">The zero-based index of the item to remove. </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is not a valid index in the <see cref="T:Microsoft.VisualBasic.Collection" /> object. </exception>
      <exception cref="T:System.NotSupportedException">The <see cref="T:Microsoft.VisualBasic.Collection" /> object is read-only.-or- The <see cref="T:Microsoft.VisualBasic.Collection" /> object has a fixed size. </exception>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Int32)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Index">(A) A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. Or (B) An Object expression that specifies the position or key string of an element of the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.Object)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Index">(A) A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property. Or (B) An Object expression that specifies the position or key string of an element of the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="P:Microsoft.VisualBasic.Collection.Item(System.String)">
      <summary>Returns a specific element of a Collection object either by position or by key. Read-only.</summary>
      <returns>Returns a specific element of a Collection object either by position or by key. Read-only.</returns>
      <param name="Key">A unique String expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</param>
      <filterpriority>1</filterpriority>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode" />
      </PermissionSet>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)">
      <summary>Runs after the entire <see cref="T:Microsoft.VisualBasic.Collection" /> object graph has been deserialized. Implements the <see cref="T:System.Runtime.Serialization.IDeserializationCallback" /> interface.</summary>
      <param name="sender">The object that initiated the callback. </param>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.Int32)">
      <summary>Removes an element from a Collection object.</summary>
      <param name="Index">A numeric expression that specifies the position of an element of the collection. <paramref name="Index" /> must be a number from 1 through the value of the collection's <see cref="P:Microsoft.VisualBasic.Collection.Count" /> property.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.Collection.Remove(System.String)">
      <summary>Removes an element from a Collection object.</summary>
      <param name="Key">A unique String expression that specifies a key string that can be used, instead of a positional index, to access an element of the collection. <paramref name="Key" /> must correspond to the <paramref name="Key" /> argument specified when the element was added to the collection.</param>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.ComClassAttribute">
      <summary>The ComClassAttribute attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
      <param name="_InterfaceID">Initializes the value of the InterfaceID property that is used to uniquely identify an interface.</param>
    </member>
    <member name="M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Initializes a new instance of the ComClassAttribute class.</summary>
      <param name="_ClassID">Initializes the value of the ClassID property that is used to uniquely identify a class.</param>
      <param name="_InterfaceID">Initializes the value of the InterfaceID property that is used to uniquely identify an interface.</param>
      <param name="_EventId">Initializes the value of the EventID property that is used to uniquely identify an event.</param>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.ClassID">
      <summary>Gets a class ID used to uniquely identify a class.</summary>
      <returns>Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.EventID">
      <summary>Gets an event ID used to uniquely identify an event.</summary>
      <returns>Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID">
      <summary>Gets an interface ID used to uniquely identify an interface.</summary>
      <returns>Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows">
      <summary>Indicates that the COM interface name shadows another member of the class or base class.</summary>
      <returns>A Boolean value that indicates that the COM interface name shadows another member of the class or base class.</returns>
      <filterpriority>1</filterpriority>
    </member>
    <member name="T:Microsoft.VisualBasic.CompareMethod">
      <summary>Indicates how to compare strings when calling comparison functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Binary">
      <summary>Performs a binary comparison. This member is equivalent to the Visual Basic constant vbBinaryCompare.</summary>
    </member>
    <member name="F:Microsoft.VisualBasic.CompareMethod.Text">
      <summary>Performs a textual comparison. This member is equivalent to the Visual Basic constant vbTextCompare.</summary>
    </member>
    <member name="T:Microsoft.VisualBasic.Constants">
      <summary>The Constants module contains miscellaneous constants. These constants can be used anywhere in your code.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbort">
      <summary>Indicates that the Abort button was clicked in a message box. Returned by the MsgBox function.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbAbortRetryIgnore">
      <summary>Indicates that the Abort, Retry, and Ignore buttons will be displayed when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbApplicationModal">
      <summary>Indicates that the message box will be displayed as a modal dialog box when the MsgBox function is called.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArchive">
      <summary>Indicates that the file has changed since the last backup operation for file-access functions.</summary>
      <filterpriority>1</filterpriority>
    </member>
    <member name="F:Microsoft.VisualBasic.Constants.vbArray">
      <summary>Indicates that the type of a variant object